id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
158,28,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Person native during Alexander II's administration (1855-1881)
  ?person dbo:nationality dbr:Russia .
  ?person dbo:dateOfBirth ?dobA2 .
  FILTER (?dobA2 >= ""1855-01-01""^^xsd:date && ?dobA2 <= ""1881-03-13""^^xsd:date)

  # Person native during Nicholas II's administration (1894-1917)
  ?person dbo:nationality dbr:Russia .
  ?person dbo:dateOfBirth ?dobN2 .
  FILTER (?dobN2 >= ""1894-05-06""^^xsd:date && ?dobN2 <= ""1917-03-15""^^xsd:date)

  # Person decedent at Lugano, Switzerland
  ?person dbo:deathPlace dbr:Lugano .

}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
668,67,test,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find an artist from Central Region, Ghana
  ?artist a dbo:Artist .
  ?artist dbo:birthPlace dbr:Central_Region,_Ghana .

  # Step 2: Find a writer who is also a musical artist and associated with ""The Live Anthology""
  ?writer a dbo:Writer ;
         dbo:profession dbo:MusicalArtist ;
         dbo:work dbr:The_Live_Anthology .

  # Step 3: Determine the association of this writer with ""$pacely"" as a musical artist
  ?association dbo:associatedMusicalArtist dbr:$pacely .
  ?association dbo:musicalArtist ?writer .

  # Link the birth name of the artist from Central Region, Ghana to the person found in step 2 and 3
  ?artist dbp:birthName ?person .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,28,test,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon and professional in the profession of Frédéric Bouraly.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Actor associated with The Shadow (Lamont Cranston)
  ?shadowProject dbo:character dbr:Lamont_Cranston .
  ?shadowProject dbo:performer ?actor .

  # Actor involved in the album ""Lasso the Moon""
  ?album dbr:Lasso_the_Moon .
  ?album dbo:performer ?actor .

  # Ensure the actor is a professional actor
  ?actor a dbo:Actor .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
595,69,test,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # USS Arcadia (ID-1605) owner
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Bill Clinton's work and spouse
  dbr:Bill_Clinton dbo:spouse ?spouse .
  ?spouse a dbo:Politician ;
          dbo:authorOf ?work1 .
  
  # Hillary Clinton's book and authorship details
  ?work1 dbo:author ?author .
  ?author = dbr:Hillary_Clinton .
  dbr:Hillary_Clinton dbo:authorOf ?work2 .

  # Commander in the war, disease, and societal event
  ?commander a dbo:Disease ;
             dbo:societalEvent ?event .
  ?event dbo:relatedTo ?owner .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
595,70,test,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Author .
  ?person dbo:birthPlace dbr:Chappaqua,_New_York .
  ?person dbo:officeHolderOf ?office .
  ?person dbo:spouse ?spouse .

  ?work dbo:title ""An Invitation to the White House""@en .
  ?work dbo:author ?person .

  ?war a dbo:MilitaryConflict ;
      rdfs:label ""World War I""@en .
  
  ?commander dbo:commanded ?unit ;
             dbo:participatedIn ?war .
  ?owner dbo:owned dbr:USS_Arcadia_(ID-1605) .
  ?commander dbp:name ?person .

  ?writtenWork a dbo:Book ;
               dbo:author ?person .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
353,69,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Constance of Burgundy and her spouse's grandchild
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  ?spouse dbo:spouse ?constance ;
          dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  # William I of Sicily and his royal child
  ?william a dbo:Person ;
           foaf:name ""William I of Sicily""@en .
  ?williamChild dbo:parent ?william ;
                a dbo:Royalty .

  # Roger II of Sicily and his parent (Constance)
  ?roger a dbo:Person ;
         foaf:name ""Roger II of Sicily""@en .
  ?rogerParent dbo:child ?roger ;
               a dbo:Person .

  # Find the common individual
  FILTER (?grandchild = ?williamChild && ?constance = ?rogerParent)
  BIND(?grandchild AS ?individual)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
706,20,test,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace ?awardeeBirthPlace WHERE {
  # Find Indian movies featuring Dipankar De
  ?movie a dbo:Film ;
         dbo:country dbr:India ;
         dbo:starring dbr:Dipankar_De .

  # Get actors of these movies
  ?movie dbo:starring ?actor .
  
  # Get birthplace of these actors
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Find awardees of the Sangeet Natak Akademi Fellowship
  ?awardee dbo:award dbr:Sangeet_Natak_Akademi_Fellowship ;
           dbo:birthPlace ?awardeeBirthPlace .
}
```",6,8,7,3,2,3,2,20,2,16,0,0.1111111111111111,1.0,0.19999999999999998
414,19,test,"Give me the award of the awardee of the reference to Nobel Prize in Physics and show of the host, that is an educational institution, of Nobel Prize in Physics.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v4 <http://dbpedia.org/property/awards> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeName ?award ?hostInstitution WHERE {
  # Identify the Nobel Prize in Physics resource
  dbr:Nobel_Prize_in_Physics a dbo:Award .
  
  # Find individuals who have received this award
  ?recipient dbp:prizes dbr:Nobel_Prize_in_Physics ;
             foaf:name ?awardeeName .

  # Get details about the award and host institution
  OPTIONAL { ?recipient dbo:award ?award . }
  OPTIONAL { ?recipient dbo:awardingBody ?hostInstitution . }

}
ORDER BY ?awardeeName
LIMIT 10
```",5,6,6,3,2,3,2,20,2,10,0,0.16666666666666666,1.0,0.2857142857142857
38,20,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Person .
  
  # Commander in Korean Conflict
  ?person dbo:officeHolderOf dbr:Korean_War .
  
  # Author of Written Work (American and Book)
  ?person dbo:work ?writtenWork .
  ?writtenWork a dbo:Book ;
              dbp:nationality ""American"" .
  
  # Office Holder and Politician in North Carolina Air National Guard
  ?person dbo:officeHolderOf dbr:North_Carolina_Air_National_Guard ;
          dbo:occupation dbr:Politician .

  # Linking the person to their authorship
  ?writtenWork dbo:author ?author .
}
LIMIT 10
```",6,15,7,3,2,3,2,20,0,0,1,0,0.0,0
414,20,test,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss and award of the awardee of the reference to Nobel Prize in Physics.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/property/awards> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show WHERE {
  # Rainer Weiss as a Nobel Prize in Physics laureate
  ?weiss dbo:nobelPrizeInPhysicsYear ?year .
  
  # The educational institution associated with Rainer Weiss
  ?weiss dbo:almaMater ?institution .

  # Shows or events hosted by the institution
  DBPEDIA_RESOURCE(Rainer_Weiss) dbo:nobelPrizeInPhysicsYear ?year .
  DBPEDIA_RESOURCE(Rainer_Weiss) dbo:almaMater ?institution .
  ?show dbo:hostedBy ?institution .
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
140,19,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find John McDermott's death place
  ?johnMcDermott a dbo:Artist ;
                 dbp:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find George Pickett's war
  ?georgePickett a dbo:MilitaryPerson ;
                 dbo:commanderIn ?war .

  # Ensure the war is a societal event
  ?war a dbo:SocietalEvent .

  # Identify the ruling party in the death place of John McDermott
  ?party a dbo:PoliticalParty ;
         dbo:member ?partyMember ;
         dbp:country dbr:United_States ; # Assuming we are looking for U.S. parties

  # Ensure the party is an organization
  ?party a dbo:Organization .

  # Link the ruling party to the death place of John McDermott
  ?party dbp:headquarters ?deathPlace .
}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
347,68,test,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Cecilia Renata of Austria's father
  ?ceciliaRenata a dbo:Person ;
                 dbp:father ?fatherCecilia .
  
  # Archduke Charles Joseph of Austria's parent
  ?charlesJoseph a dbo:Person ;
                 dbp:parent ?parentCharles .

  # Commander in the war (Algerian War)
  ?commander a dbo:MilitaryPerson ;
             dbo:commandedMilitaryForce dbr:Algerian_War .
  
  # Find common child
  ?fatherCecilia = ?parentCharles .
  ?child dbp:father ?fatherCecilia .

  # Societal event, event, and television show related to military force
  ?event a dbo:SocietalEvent ;
         dbo:relatedToMilitaryForce dbr:Algerian_War .
  
  ?tvShow a dbo:TelevisionShow ;
          dbo:relatedToEvent ?event .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
347,67,test,"Give me the commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Maria Anna of Bavaria and her children
  dbr:Maria_Anna_of_Bavaria (dbo:child) ?child .
  
  # Child's child (grandchild of Maria Anna)
  ?child dbo:child ?grandchild .

  # Parent of Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .

  # Commander in the Thirty Years' War
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:militaryConflict dbr:Thirty_Years'_War .

  # Linking the commander to the lineage
  ?grandchild dbo:spouse|dbo:child ?relatedToCommander .
  ?relatedToCommander = ?parent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,69,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Maria Anna of Bavaria and her children
  dbr:Maria_Anna_of_Bavary dbo:spouse ?husband .
  ?husband dbo:child ?child .

  # The father of the child (one of Maria's husbands)
  OPTIONAL { ?child dbo:father ?father . }

  # Find a royalty who is also a commander in war
  ?royalty a dbo:Monarch ;
           dbo:militaryCommanderOf ?war .
  
  # War involving Algerian War
  ?war dbo:participatingMilitaryForce dbr:Algerian_War .

  # Connect to Ferdinand III, Holy Roman Emperor
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?relatedChild .
  ?relatedChild dbo:father ?royalty .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
941,19,test,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfDuke ?spouseOfChild ?childOfAntoinette ?spouseOfChildAntoinette WHERE {
  # Duke Anthony Ulrich of Brunswick and his child
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:child ?childOfDuke .
  
  # The spouse of the child of Duke Anthony Ulrich
  ?childOfDuke dbo:spouse ?spouseOfChild .

  # Princess Antoinette of Brunswick-Wolfenbüttel and her child
  dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel dbo:child ?childOfAntoinette .
  
  # The spouse of the child of Princess Antoinette
  ?childOfAntoinette dbo:spouse ?spouseOfChildAntoinette .

  # Ensure both children are royalty
  ?childOfDuke a dbo:Monarch .
  ?childOfAntoinette a dbo:Monarch .

  # Find the common spouse connection
  FILTER (?spouseOfChild = ?spouseOfChildAntoinette)
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
513,19,test,"Give me the entity in the award of George H. Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/ontology/leader> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # George H. Cameron's award
  ?cameron a dbo:Person ;
           foaf:name ""George H. Cameron"" .
  ?award dbo:recipient ?cameron ;
         dbo:awardCategory ?category .

  # Political party of George Savage and its leader's residence
  ?savage a dbo:Politician ;
          foaf:name ""George Savage (politician)"" .
  ?party dbo:member ?savage ;
         a dbo:PoliticalParty .
  ?leader dbo:leaderOf ?party ;
          dbo:residence ?residence .

  # Entity that is both an organisation and a political party
  ?entity a dbo:Organisation, dbo:PoliticalParty ;
          dbo:awardCategory ?category ;
          dbo:location ?residence .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
103,68,test,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Identify Richard Grant Esterhuysen (The Shadow)
  ?person a dbo:Person .
  ?person foaf:name ""Richard Grant Esterhuysen"" .
  
  # Step 2: Find his alter ego, The Shadow
  ?person dbp:alterEgo dbr:The_Shadow .

  # Step 3: Determine his profession as an actor
  ?person dbo:profession dbr:Actor .

  # Step 4: Connect to a movie that is also a television show
  ?movie dbo:genre dbr:Television_show .
  ?movie dbo:starring ?person .

  # Step 5: Link this to another actor who is also a politician in ""Ab Kya Hoga""
  ?actor a dbo:Person .
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:profession dbr:Politician .
  ?abKyaHogaMovie dbo:genre dbr:Television_show .
  ?abKyaHogaMovie foaf:name ""Ab Kya Hoga"" .
  ?abKyaHogaMovie dbo:starring ?actor .

  # Ensure the actor is connected to both contexts
  FILTER(?person != ?actor)
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
905,67,test,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Charles II of Naples and his father
  dbr:Charles_II_of_Naples dbo:spouse dbr:Maria_of_Bytom .
  dbr:Charles_II_of_Naples dbo:father ?father .
  
  # Father's parent (Grandfather)
  ?father dbo:parent ?grandfather .

  # Stephen V of Hungary and his predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Predecessor's child and their child who is royalty
  ?predecessorChild dbo:childOf ?predecessor .
  ?predecessorGrandchild dbo:parent ?predecessorChild .
  ?predecessorGrandchild a dbo:Royalty .

  # Connect the grandfather of Charles II to the predecessor's lineage
  FILTER(?grandfather = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,27,test,"Give me the actor of Paradise (2013 film) and actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorOfParadise ?movieWithAudreyHepburn ?spouse WHERE {
  # Actor of ""Paradise"" (2013 film)
  dbr:Paradise_(2013_film) dbo:starring ?actorOfParadise .
  
  # Movie featuring Audrey Hepburn
  ?movie dbp:starring dbr:Audrey_Hepburn ;
         a dbo:Film .

  # Spouse of an awardee of Janusz Kamiński
  ?award dbo:recipient ?awardee .
  ?awardee dbo:spouse ?spouse .
  
  FILTER(?movie = ?movieWithAudreyHepburn)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
203,71,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?figure dbo:alsoKnownAs ""The Triple X's"" .
  ?war dbo:participatedIn ?figure .
  ?awardee dbo:awardReceived dbr:Knight_Commander_of_the_Order_of_the_Bath ;
           dbo:commanded ?war .
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:relatedTo ?awardee .
  ?militaryForce dbo:militaryConflict ?war .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
198,68,test,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?award1 ?war1 ?award2 ?war2 WHERE {
  # Henry Clay Lewis's birthplace
  ?henry a dbo:Person ;
         dbp:birthPlace ?birthPlace .
  
  FILTER (strstarts(str(?birthPlace), ""http://dbpedia.org/resource/"") && 
          ?birthPlace dbo:type dbr:Settlement &&
          ?birthPlace dbo:country dbr:United_States)

  # Quincy Adams Gillmore's award and associated war
  ?gillmore a dbo:MilitaryPerson ;
            dbp:awardReceived ?award1 .
  
  ?award1 dbo:associatedWar ?war1 .

  # Show-related award and associated war
  ?show a dbo:TelevisionShow ;
        dbp:awardsGiven ?award2 .
  
  ?award2 dbo:associatedWar ?war2 .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
628,68,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  # Step 1: Find a musical artist from Florida
  ?floridaArtist a dbo:MusicalArtist .
  ?floridaArtist dbo:birthPlace dbr:Florida .

  # Step 2: Get the birth name of this artist
  ?floridaArtist dbp:birthName ?birthName .

  # Step 3: Find GS9 members who are both artists and musical artists
  ?gs9Member a dbo:MusicalArtist, dbo:Artist .
  ?gs9Member dbo:memberOf dbr:GS9 .

  # Step 4: Match the birth name to find the person
  ?person dbp:birthName ?birthName .
  
  # Step 5: Find the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award a dbo:Region, dbo:AmericanAward, dbo:State, dbo:Settlement ;
         dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .

  # Step 6: Find the band members of the identified musical artist
  ?bandMember dbo:memberOf ?person .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
225,20,test,"Give me the entity in the region of the time zone in Kiyosu and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find the Anita Borg Institute Women of Vision Awards
  ?award a dbo:Award ;
         rdfs:label ""Anita Borg Institute Women of Vision Award""@en .
  
  # Identify an awardee who is Japanese and associated with a television show
  ?person dbo:recipientOf ?award ;
          dbo:nationality dbr:Japan ;
          dbo:profession dbr:Television_Show .

  # Find the region and time zone in Kiyosu, Japan
  ?kiyosu dbo:location dbr:Kiyosu .
  ?region dbo:timeZone ?timezone ;
          dbo:containsPlace ?kiyosu .

  # Get the birthplace of the awardee
  ?person dbo:birthPlace ?birthPlace .

  # Find the entity in the region and time zone that matches the birthplace
  ?entity dbo:location ?region .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
905,69,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Béla IV of Hungary and his child
  ?belav a dbo:Monarch ;
         dbp:name ""Béla IV of Hungary""@en ;
         dbp:child ?mary .
  
  ?mary a dbo:Monarch ;
        dbp:spouse ?charlesmartel .

  # Charles Martel of Anjou and his child
  ?charlesmartel a dbo:Monarch ;
                 dbp:name ""Charles Martel of Anjou""@en ;
                 dbp:child ?robert .

  # Robert, King of Naples and his child
  ?robert a dbo:Monarch ;
          dbp:name ""Robert, King of Naples""@en ;
          dbp:child ?charlesi .

  # Charles I of Hungary
  ?charlesi a dbo:Monarch ;
            dbp:name ""Charles I of Hungary""@en .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
609,68,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Paulus Powell's birth place
  ?powell a dbo:Person ;
          foaf:name ""Paulus Powell"" .
  ?powell dbo:birthPlace ?region1 .

  # Cece Bell's birth place (author of El Deafo)
  ?bell a dbo:Person ;
        foaf:name ""Cece Bell"" .
  ?bell dbo:birthPlace ?region2 .

  # Vince Gilligan's awardee
  ?gilligan a dbo:Person ;
            foaf:name ""Vince Gilligan"" .
  ?award dbo:recipient ?awardee .
  ?gilligan dbo:work ?award .
  ?awardee dbo:birthPlace ?region3 .

  # Ensure regions are both region and administrative region
  FILTER (?region1 != ?region2 && ?region1 != ?region3 && ?region2 != ?region3)
  FILTER ((
    { ?region1 a dbo:Region } UNION 
    { ?region1 a dbo:AdministrativeRegion }
  ) &&
  (
    { ?region2 a dbo:Region } UNION 
    { ?region2 a dbo:AdministrativeRegion }
  ) &&
  (
    { ?region3 a dbo:Region } UNION 
    { ?region3 a dbo:AdministrativeRegion }
  ))

  # Find governors of these regions
  ?governor1 dbo:gover",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
293,69,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Find the landmark and its ruling party member
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""20.116800000000001347""^^xsd:float .
  
  ?landmark dbo:governingBody ?government .
  ?government dbo:member ?partyMember .

  # Step 2: Find the actor of ""1,000 Dollars a Minute"" and their spouse
  dbr:""1,000_Dollars_a_Minute"" dbo:actor ?actor .
  
  ?actor foaf:mbox ?actorEmail .
  ?actor dbp:spouse ?spouse .

  # Step 3: Find the birth name of Tisha Sterling's parent
  dbr:Tisha_Sterling dbo:parent ?parent .
  ?parent dbp:birthName ?birthName .

  # Find a person born with that birth name
  ?person dbp:birthName ?birthName ;
          foaf:name ?name .

  # Ensure the party member is also the spouse of the actor and the person born as Tisha Sterling's parent
  FILTER (?partyMember = ?spouse && ?partyMember = ?person)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
39,67,test,"Give me the professional in Singer and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Bob Thompson's birth name
  VALUES (?bobBirthName) { ""Bob Thompson"" } # Assuming we know his birth name is ""Bob Thompson""
  
  # Find a musical artist with the birth name of Bob Thompson
  ?person1 dbo:birthName ?bobBirthName .
  ?person1 a dbo:MusicalArtist .

  # Walter B. Gibson's fictional character alter ego
  ?gibson dbr:Walter_B._Gibson .
  ?gibson dbo:work ?fictionalCharacter .
  ?fictionalCharacter dbo:alterEgo ?alterEgo .

  # Find a professional (singer or band) common to both
  ?professional dbo:member ?person1 ;
                dbo:member ?alterEgo .
}
```",7,10,8,3,3,3,3,71,0,0,3,0,0.0,0
293,67,test,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Step 1: Find films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Step 2: Identify actors in those films
  ?film dbo:starring ?actor .

  # Step 3: Determine Tisha Sterling's parent's birth name
  ?parent foaf:name ""Tisha Sterling""@en ;
          dbp:child dbr:Tisha_Sterling .
  ?parent dbp:birthName ?birthName .

  # Step 4: Identify Republican Party members with that birth name
  ?person dbo:nationality dbr:United_States ;
          foaf:name ?name ;
          dbp:birthName ?birthName ;
          dbo:partyMemberOf dbr:Republican_Party_(United_States) .
  
  # Step 5: Find the spouse of the actor
  ?actor dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,71,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v8 <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v8 <http://dbpedia.org/ontology/manager> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Identify Helmut Kohl and his country
  dbr:Helmut_Kohl dbo:nationality dbr:Germany .

  # Step 2: Find the successor season of 2006–07 VfL Bochum
  dbr:VfL_Bochum_2007-08_season dbo:succeededBy ?successorSeason .
  
  # Step 3: Identify the soccer club and organization in that season
  ?successorSeason a dbo:SoccerClub ;
                  dbo:participatedIn ?league .

  # Step 4: Find the manager born on August 26, 1968
  ?manager a dbo:SportsManager ;
           dbp:birthday ""1968-08-26""^^xsd:date ;
           dbo:manages ?team .

  # Step 5: Ensure this team is part of the successor season
  ?team dbo:participatedIn ?successorSeason .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
737,70,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalty WHERE {
  # Step 1: Find parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Step 2: Find child of Philipp Albrecht, Duke of Württemberg
  ?philippChild dbo:child dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Step 3: Find great-grandchild of Alexander of Württemberg (1804-1881)
  ?grandparent dbo:child dbr:Aleksander_W%C3%BCrttemberg .
  ?grandchild dbo:child ?parent2 .
  ?parent2 dbo:child ?parent3 .
  ?parent3 dbo:child ?philippChild .

  # Find royalty who is the predecessor of the child from Step 2
  ?royalty dbo:predecessor ?philippChild .
  
  # Ensure this royalty is also a grandchild of the parent from Step 1
  ?grandchild2 dbo:child ?parent .
  ?grandchild2 dbo:child ?royalty .

  # Filter to ensure the person is royalty
  ?royalty a dbo:Monarch .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
782,71,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  # Find musical artists born on March 30, 1945
  ?artist a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date ;
          dbo:associatedBandMember ?member .

  # Find bands of these band members
  ?member dbo:band ?band .

  # Consider Nick Curran's persona and Kim Wilson's real name
  OPTIONAL {
    ?artist foaf:name ""Nick Curran""@en .
  }
  
  OPTIONAL {
    ?kimArtist a dbo:MusicalArtist ;
               foaf:name ""Kim Wilson"" ;
               dbo:associatedBandMember ?member2 .
    
    ?member2 dbo:band ?band .
  }

}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
609,67,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Paulus Powell's birth place
  VALUES (?person1) { dbr:Paulus_Powell }
  ?person1 dbo:birthPlace ?place1 .

  # El Deafo author's birth place
  VALUES (?author) { dbr:Cece_Wilson } # Assuming Cece Bell is the author of ""El Deafo""
  ?author dbo:nationality dbr:United_States .
  ?author dbo:birthPlace ?place2 .

  # Vince Gilligan's birth place
  VALUES (?person3) { dbr:Vince_Gilligan }
  ?person3 dbo:birthPlace ?place3 .

  # Find governors of these places if they are regions or administrative regions
  OPTIONAL {
    ?governor1 a dbo:Politician ;
               dbo:officeHolderOf ?office1 .
    ?office1 dbo:officeName dbr:Governor_of_?place1 .
    ?governor1 dbo:birthPlace ?governorBirthPlace .
  }
  
  OPTIONAL {
    ?governor2 a dbo:Politician ;
               dbo:officeHolderOf ?office2 .
    ?office2 dbo:officeName dbr:Governor_of_?place2 .
    ?governor2 dbo:birthPlace ?governorBirthPlace .
  }

  OPTIONAL {
    ?governor3 a dbo:Politician ;
               dbo:officeHolderOf ?office3 .
    ?office3 dbo:officeName dbr:Governor_of_?place3 .
    ?governor3 dbo:birthPlace ?governorBirthPlace .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,70,test,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickCurranBand ?bandMemberName ?realNameOfFabulousThunderbirds WHERE {
  # Find Nick Curran and his associated band
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nick Curran"" .
  OPTIONAL { ?person dbp:associatedBand ?nickCurranBand . }

  # Find the person born on March 30, 1945, who is a musical artist and a band member
  ?bandMember a dbo:MusicalArtist ;
              dbo:birthDate ""1945-03-30""^^xsd:date .
  OPTIONAL { ?bandMember dbp:associatedBand ?someBand . }

  # Find the real name of The Fabulous Thunderbirds
  ?fabulousThunderbirds a dbo:MusicalGroup ;
                        foaf:name ""The Fabulous Thunderbirds"" .
  OPTIONAL { ?fabulousThunderbirds dbp:member ?realNameOfFabulousThunderbirds . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
246,20,test,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Princess Muna al-Hussein's children who are royalty
  ?childMuna a dbo:Person ;
             dbo:spouse dbr:Princess_Muna_al-Hussein ;
             dbo:child ?royalChild1 .
  
  # Parent of one of these royal children
  ?royalChild1 dbo:parent ?parent .

  # Princess Aisha bint Faisal's parents who are royalty
  ?parentAisha a dbo:Person ;
               dbo:spouse dbr:Princess_Aisha_bint_Faisal ;
               dbo:child ?royalParent .
  
  # Child of this royal parent
  ?royalParent dbo:child ?royalChild2 .

  # Parent of this child
  ?royalChild2 dbo:parent ?finalParent .

  FILTER (?parent = ?finalParent)
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
816,68,test,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Allan Arbus and his child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus"" .
  
  ?child dbo:parent ?allanArbus .

  # Child is an actor in a movie
  ?child a dbo:Actor ;
         dbo:film ?movie .

  # Movie has a person decedent at Los Angeles
  ?person dbp:deathPlace dbr:Los_Angeles .
  ?movie dbo:actor ?person .

  # Person is parent of someone who is a professional in the same profession as Eugène Cattin
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin"" .
  
  ?profession dbp:profession ?eugeneProfession .
  ?eugeneCattin dbo:occupation ?profession .

  ?childParent a dbo:Person ;
               dbo:parent ?person .
  
  ?relatedProfession dbp:profession ?eugeneProfession .
  ?childParent dbo:occupation ?relatedProfession .

  # Find the parent of this child
  ?parent dbo:child ?child .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
609,69,test,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Politician .
  ?person dbo:governmentRole dbr:Governor_of_Virginia .
  ?person dbp:birthPlace ?birthPlace .
}
LIMIT 1
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer .
  ?person dbo:work dbr:El_Deafo .
  ?person dbp:nationality dbr:United_States .
  ?person dbp:birthPlace ?birthPlace .
}
LIMIT 1
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?award dbo:recipient ?person .
  ?award dbo:awardee dbr:Vince_Gilligan .
  ?person dbp:birthPlace ?birthPlace .
}
LIMIT 1
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
816,67,test,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             dbp:surname ""Costello"" .
  
  ?spouse dbo:spouse ?mariclare .

  # Child of Mariclare Costello's spouse
  ?child dbo:parent ?spouse ;
         dbo:parent ?otherParent .

  # Eugène Cattin's profession
  ?eugene a dbo:Person ;
          dbp:surname ""Cattin"" .
  
  ?profession dbr:Eug%C3%A8ne_Cattin ;
              dbo:occupation ?eugeneProfession .

  # Actor in the film
  ?film dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg ;
        dbo:actor ?actor .
  
  # Parent of Eugène Cattin's profession and actor
  ?parent dbo:occupation ?eugeneProfession ;
          dbo:actor ?actor .

  # Linking the parent to both child and professional/actor
  OPTIONAL { ?child dbo:parent ?parent . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
398,20,test,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in the writer of the work of Aleksandr Filimonov.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?denis a dbo:SoccerPlayer ;
         dbo:team ?club .
  
  ?aleksandr a dbo:Writer ;
             dbo:work ?work .

  ?player a dbo:SoccerPlayer ;
          dbo:team ?club ;
          dbp:nickname ?nickname .

  ?denis dbr:Denis_Kolodin .
  ?aleksandr dbr:Aleksandr_Filimonov .
  
  FILTER(?player != ?denis && ?player != ?aleksandr)
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
143,19,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Find Cynthia Morgan's birth name
  ?cynthia a dbo:MusicalArtist ;
           foaf:name ""Cynthia Morgan"" ;
           dbp:birthName ?birthName .

  # Find Afeez Oyetoro's movie role
  ?afeez a dbo:Actor ;
         foaf:name ""Afeez Oyetoro"" ;
         dbo:workFeaturedIn ?movie .
  
  # Find the person with the same birth name as Cynthia Morgan and who acted in that movie
  ?person dbp:birthName ?birthName ;
          dbo:workFeaturedIn ?movie .

  # Get the associated musical artist of this person
  ?person dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
412,28,test,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30 and war of the leader of National Party of Greece.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlaceEntity WHERE {
  # Antonios Varthalitis resource
  dbr:Antonios_Varthalitis a dbo:Person .
  
  # Death place of Antonios Varthalitis
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Retrieve the entity in the death place
  ?deathPlaceEntity dbo:location ?deathPlace .
  
  # Antonios Varthalitis's war award (assuming there's an appropriate property)
  OPTIONAL { dbr:Antonios_Varthalitis dbp:award ?warAward . }
  
  # Leadership of National Party of Greece
  OPTIONAL { dbr:Antonios_Varthalitis dbo:leaderOf dbr:National_Party_of_Greece . }

}
```",6,7,7,2,3,2,3,28,0,261,1,0.0,0.0,0
80,71,test,"Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/album> ?v5 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # The Golden Master Series Actor
  ?goldenMasterSeries dbo:actor ?actor1 .
  
  # Smartbomb Book Author and Movie Actor
  ?smartbombBook dbo:author ?authorSmartbomb .
  ?movie dbo:starring ?actor2 .
  ?movie dbo:starring ?authorSmartbomb .

  # T.I.'s Song/Musical Work Album
  ?tisSong dbo:album ?album .
  
  # Find the common professional (actor) in all three contexts
  FILTER (?actor1 = ?actor2)
  ?professional dbp:profession ""Actor""@en .
}
```",9,11,10,3,3,3,3,71,0,0,4,0,0.0,0
103,70,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # The Shadow comics character and its alter ego
  ?shadowCharacter a dbo:ComicsCharacter ;
                  dbp:name ""The Shadow"" ;
                  dbp:alterEgo ?alterEgo .
  
  # Richard E. Grant's television shows
  ?tvShow dbo:starring dbr:Richard_E._Grant ;
         dbo:genre dbr:Television_Show .

  # Actors in the same TV show as Richard E. Grant
  ?tvShow dbo:starring ?actor .

  # Profession of actors and politician from ""Ab Kya Hoga""
  ?actor dbo:profession ?profession .
  
  ?politician a dbo:Politician ;
             dbp:name ""Ab Kya Hoga"" ;
             dbo:profession ?profession .

  # Linking the alter ego to an actor
  ?alterEgo dbo:profession ?profession .
}
```",8,11,9,3,3,3,3,71,0,0,13,0,0.0,0
731,20,test,"Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Identify the award associated with Edmund Hakewill-Smith
  ?award a dbo:Award ;
         dbo:recipient ?awardee .

  # Link the awardee to the societal event and military conflict
  ?event dbo:relatedEvent dbr:Sinking_of_Prince_of_Wales_and_Repulse .
  ?militaryConflict dbo:conflictParticipatedIn ?force .

  # Ensure the award is related to both the societal event and military conflict
  ?award dbo:relatedTo ?event ;
         dbo:relatedTo ?militaryConflict .

  # Filter for Edmund Hakewill-Smith's association
  ?awardee foaf:name ""Edmund Hakewill-Smith""@en .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
384,9,test,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?retailleauParty ?successorParty WHERE {
  # Find Bruno Daniel Marie Paul Retailleau and his party
  ?retailleau a dbo:Politician ;
              foaf:name ""Bruno Daniel Marie Paul Retailleau"" ;
              dbp:party ?retailleauParty .

  # Find Patrice Martin-Lalande's successor who is also a politician
  ?martinLalande a dbo:Politician ;
                 foaf:name ""Patrice Martin-Lalande"" .
  
  ?successor a dbo:Politician ;
             dbp:succeededBy ?martinLalande ;
             dbp:party ?successorParty .

}
```",4,8,5,2,2,2,2,9,0,0,1,0,0.0,0
293,71,test,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Tisha Sterling and her parent
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling"" ;
         dbp:parent ?parent .

  # Film produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .

  # Actor in the film
  ?actor dbo:actedIn ?film .

  # Spouse of the actor
  ?spouse dbo:spouse ?actor ;
          dbp:birthName ?birthName .

  # Landmark at elevation 20.1168
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""20.1168""^^xsd:float ;
            dbo:rulingPartyMember ?spouse .
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
943,69,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I and his child
  ?baedaMaryamI a dbo:Monarch ;
                dbp:spouse ?spouse .
  ?child dbp:parent ?baedaMaryamI .

  # Child's parent who is royalty
  ?royalParent dbp:parent ?child ;
               a dbo:Monarch .

  # Royal commander in Siege of Mukha
  ?commander dbp:commandedEvent dbr:Siege_of_Mukha ;
             a dbo:Monarch .
  ?royalParent dbp:commandedBy ?commander .

  # Alter ego of The Shadow
  ?alterEgo foaf:name ""The Shadow"" ;
            dbo:alterEgo ?shadowAlterEgo .
  ?commander dbo:alterEgo ?alterEgo .

  # Father of the alter ego
  ?father dbp:child ?alterEgo .

  # Grandfather (Father's father)
  ?grandfather dbp:child ?father .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
633,20,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfFather WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine's child who is royalty
  ?francisI a dbo:Person ;
            foaf:name ""Francis I, Duke of Lorraine"" .
  
  ?child dbr:François_Ier,_Duke_of_Lorraine dbo:parent ?francisI ;
        a dbo:Royalty .

  # Step 2: Identify Antoine, Duke of Lorraine's child who is royalty
  ?antoine a dbo:Person ;
          foaf:name ""Antoine, Duke of Lorraine"" .
  
  ?childOfAntoine dbr:Antoine,_Duke_of_Lorraine dbo:parent ?antoine ;
                   a dbo:Royalty .

  # Step 3: Identify the spouse of Antoine's child who is royalty and noble
  ?spouse dbp:spouse ?childOfAntoine ;
          a dbo:Royalty, dbo:Noble .

  # Step 4: Find the parent of the father of the child (from Francis I)
  ?fatherOfChild dbo:parent ?child .
  
  ?grandParentOfChild dbo:parent ?fatherOfChild .

  # Return the grandparent
  ?parentOfFather ?grandParentOfChild .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
492,27,test,Give me the death place of Reed Howes and death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace WHERE {
  # Reed Howes
  { 
    ?person dbr:Reed_Howes .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  }

  UNION

  # Actor of ""Color Me Dead""
  { 
    ?movie dbp:starring ?actor .
    ?actor foaf:name ?nameActor .
    FILTER (str(?movie) = str(dbr:Color_Me_Dead))
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  }

  UNION

  # Actor of ""Aladdin"" (1958 film)
  { 
    ?movie dbp:starring ?actor .
    ?actor foaf:name ?nameActor .
    FILTER (str(?movie) = str(dbr:Aladdin_(1958_film)))
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,71,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Saw Shwe Khet's child who is royalty
  ?childShweKhet a dbo:RoyalPerson ;
                 dbo:parent dbr:Saw_Shwe_Khet .

  # Predecessor of Saw Shwe Khet's child (i.e., parent)
  ?predecessorShweKhet a dbo:RoyalPerson ;
                       dbo:child ?childShweKhet .

  # Spouse of the predecessor
  ?predecessorShweKhet dbo:spouse ?spouse .

  # Saw Min Phyu's spouse who is royalty and their child
  ?spouseMinPhyu a dbo:RoyalPerson ;
                 dbo:spouse dbr:Saw_Min_Phu .
  ?childMinPhyu a dbo:RoyalPerson ;
                dbo:parent ?spouseMinPhyu .

  # Parent of Minye Kyawswa's child who is royalty
  ?minyeKyawswaChild a dbo:RoyalPerson ;
                     dbo:parent ?parentMinyeKyawswa .
  ?parentMinyeKyawswa a dbo:RoyalPerson .

}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
769,19,test,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?manager a dbo:SportsManager ;
           a dbo:SoccerManager .
  
  ?organization a dbo:SportsClub, dbo:SportsTeam, dbo:SoccerClub ;
                dbo:location dbr:Hong_Kong_C .

  ?manager dbo:worksFor ?organization .
  
  ?person a dbo:Athlete, dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ;
          dbp:birthday ""1981-12-01""^^xsd:date .
  
  ?player dbo:playsFor ?organization ;
          dbo:playedBy ?person .

}
```",5,15,6,3,2,3,2,20,0,0,2,0,0.0,0
531,71,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v8 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?miguelParty ?manuelConflict ?madridLeaderResidence WHERE {
  # Miguel Maura's political party
  dbr:Miguel_Maura dbo:partyAffiliation ?miguelParty .

  # Manuel Pinto da Costa as a commander in a military conflict
  dbr:Manuel_Pinto_da_Costa dbo:officeHolderOf ?manuelConflict .
  ?manuelConflict a dbo:MilitaryConflict .

  # Leader of the 2003 Madrid City Council election and their residence
  ?madridLeader dbo:electedDuring dbr:Madrid_municipal_election,_2003 .
  ?madridLeader dbo:officeHolderOf ?office .
  ?office dbo:residence ?madridLeaderResidence .
}
```",9,16,10,3,3,3,3,71,0,0,1,0,0.0,0
609,71,test,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v8 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorBirthPlace ?awardeeBirthPlace ?governorBirthPlace WHERE {
  # Author of ""El Deafo""
  ?author dbo:nationality dbr:United_States ;
          dbo:birthPlace ?authorBirthPlace .
  ?author dbo:work dbr:El_Deafo .

  # Awardee related to Vince Gilligan
  ?awardee dbo:nationality dbr:United_States ;
           dbo:birthPlace ?awardeeBirthPlace .
  ?awardee dbo:awardReceived ?breakingBadAward .
  ?breakingBadAward dbo:recipient ?vincingilligan .

  # Governor related to Paulus Powell's birth place
  ?governor a dbo:Politician ;
            dbo:nationality dbr:United_States ;
            dbo:birthPlace ?governorBirthPlace .
  ?mississippiRegion a dbo:AdministrativeRegion, dbo:Region ;
                    dbp:name ""Mississippi"" .
  ?governor dbo:governs ?mississippiRegion .

}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
943,68,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:aliasName ?alterEgo .

  # Menelik II, father of Na'od
  dbr:Menelik_II_of_Ethiopia dbo:child dbr:Nasibu_Zeamanuel .

  # Ras Nasibu Zeamanuel (Na'od)
  dbr:Nasibu_Zeamanuel dbo:father dbr:Menelik_II_of_Ethiopi .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,70,test,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find movies with Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Step 2: Identify Mariclare Costello's spouse and their children
  ?mariclare a dbo:Person ;
             dbp:spouse ?spouse .
  ?child dbo:parent ?spouse ;
         dbo:parent ?otherParent .

  # Step 3: Find the parents of those children (excluding the spouse)
  ?actor dbo:birthName ?name .
  FILTER(?actor != ?spouse) .
  
  # Step 4: Identify professionals in Eugène Cattin's profession
  ?eugene a dbo:Person ;
          dbp:profession ?profession .
  ?professional a dbo:Person ;
                dbp:profession ?profession .

  # Step 5: Find common actors between these groups
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:birthName ?name . }
  
  FILTER(?actor = ?otherParent || ?actor = ?professional)
}
```",8,9,9,3,3,3,3,71,0,5,1,0.0,0.0,0
905,71,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania's parent
  ?philip a dbo:Person ;
          dbp:parent ?philipParent .

  FILTER (STRSTARTS(STR(?philip), ""Philip, Despot of Romania"")) .
  
  # Ensure the parent is royalty
  ?philipParent a dbo:Monarch .

  # Step 2: Identify Philip's grandparent
  ?philipParent dbp:parent ?grandparent .

  # Ensure the grandparent is royalty
  ?grandparent a dbo:Monarch .

  # Step 3: Identify Maria of Bytom's spouse and their parent
  ?maria dbr:Maria_of_Bytom ;
        dbp:spouse ?spouseMaria .
  
  ?spouseMaria dbp:parent ?spouseParent .

  # Ensure the spouse is royalty
  ?spouseMaria a dbo:Monarch .

  # Step 4: Identify the father of Maria's spouse
  ?spouseParent dbp:parent ?fatherSpouse .

  # Ensure the father is royalty
  ?fatherSpouse a dbo:Monarch .

  # Step 5: Identify Stephen V of Hungary's predecessor and their child
  ?stephenV dbr:Stephen_V_of_Hungary ;
            dbp:predecessor ?predecessor .

  ?predecessor dbp:child ?roy",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
595,67,test,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Identify the politician from Chappaqua, New York, and spouse of Hillary Clinton
  ?person a dbo:Politician ;
          dbo:officeHolder true ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbp:spouse dbr:Hillary_Clinton .

  # Link to USS Arcadia (ID-1605) through World War II
  ?person dbo:commanderOf ?ship .
  ?ship rdfs:label ""USS Arcadia (ID-1605)""@en .
  
  ?war a dbo:Disease, dbo:SocietalEvent ;
       dbo:commander ?person .
  ?war rdfs:label ""World War II""@en .

  # Find the author of a work by this person
  ?work dbo:author ?person ;
        a dbo:WrittenWork, dbo:Book, dbo:Work .
  
  ?author a dbo:Author ;
          dbo:writtenWork ?work .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
943,67,test,"Give me the child of Dawit I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfDawitI ?alterEgo ?royaltyOfficeHolder WHERE {
  # Dawit I's child
  ?dawitI a dbo:Person ;
          dbp:spouse ?spouse .
  ?childOfDawitI dbo:parent ?dawitI .

  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alterEgo ?shadow .
  ?shadow foaf:name ?alterEgo .

  # Baeda Maryam I's child and their father who is a royalty and office holder
  ?baedaMaryamI a dbo:Person ;
               dbp:spouse ?spouseBaeda .
  ?childOfBaedaMaryamI dbo:parent ?baedaMaryamI .
  ?fatherOfChildBaeda dbo:parent ?childOfBaedaMaryamI .
  ?fatherOfChildBaeda a dbo:Monarch, dbo:OfficeHolder .

  # Linking the child of Dawit I to the alter ego and royalty
  ?childOfDawitI dbp:alterEgo ?shadow .
  ?royaltyOfficeHolder dbp:parent ?fatherOfChildBaeda .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,27,test,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Royal .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?isabella .
  ?isabella rdfs:label ""Isabella of Austria""@en .
  
  ?person dbo:child ?philip1 .
  ?philip1 rdfs:label ""Philip I of Castile""@en .

  OPTIONAL { 
    ?person dbo:participatedInEvent ?siegeOfPadua .
    ?siegeOfPadua rdfs:label ""Siege of Padua (1509)""@en .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
871,68,test,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby's children who are politicians
  ?child a dbo:Politician ;
         dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .

  # Child who is an awardee of the Rodney Lees Award
  ?awardee dbp:award ""Rodney Lees Award"" ;
          dbo:childOf ?child .

  # Edward Stanley, 17th Earl of Derby's parents who are politicians and office holders
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .
  ?parent a dbo:Politician ;
          dbo:officeHolder true .

  # The father of the child (politician) of Frederick Stanley, 16th Earl of Derby
  ?child dbo:father ?father .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
633,19,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfFather WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine and his spouse
  ?francisI a dbo:Person ;
            foaf:name ""Francis I, Duke of Lorraine""@en .
  
  ?spouse dbp:spouse ?francisI ;
          a dbo:Person .

  # Step 2: Identify their children who are royalty
  ?child dbo:parent ?spouse ;
         dbo:parent ?francisI ;
         a dbo:Royalty .

  # Step 3: Find the father of these children (Francis I)
  ?father dbp:child ?child .
  
  # Step 4: Identify the parent of this father
  ?parentOfFather dbp:child ?father .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
756,67,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?team WHERE {
  ?person a dbo:SportsManager .
  ?person dbo:birthday ""1968-08-26""^^xsd:date .
  ?person dbo:managedTeam dbr:VfL_Bochum .

  ?person dbo:nationality ?country .
  ?country dbo:leader dbr:West_Germany .

  ?team a dbo:SoccerClubSeason ;
        dbo:sportsTeamSeason ?sportsTeamSeason ;
        dbo:sportsSeason ?sportsSeason ;
        dbo:manager ?person .

  ?person foaf:name ?managerName .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
213,20,test,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v5 <http://dbpedia.org/ontology/country> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Step 1: Identify Hu Jieqing's spouse who is a writer
  dbr:Hu_Jieqing dbo:spouse ?spouse .
  ?spouse a dbo:Writer .

  # Step 2: Determine the country of work associated with this spouse
  ?spouse dbo:countryOfWork ?countryOfWork .

  # Step 3: Find politicians whose parents are deceased in Taipei
  ?politician a dbo:Politician ;
             dbo:parent ?deceasedParent .
  ?deceasedParent dbo:deathPlace dbr:Taipei .

  # Step 4: Ensure the politician's parent is linked to the country of work from step 2
  ?deceasedParent dbo:nationality ?countryOfWork .

  # Retrieve the birthplace of these politicians
  ?politician dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
203,67,test,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?militaryForce WHERE {
  # Napoleon Bonaparte as commander in the Egyptian Campaign
  ?campaign dbo:commander dbr:Napoleon_Bonaparte .
  ?campaign dbo:militaryConflict dbr:Egyptian_Campaign_(1801) .

  # French Army involved in the campaign
  ?campaign dbo:militaryForce ?militaryForce .
  FILTER(?militaryForce = dbr:French_Army)

  # William Bayne's connection to the Napoleonic Wars
  ?bayne dbp:awardeeOf dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?war dbo:militaryConflict dbr:Napoleonic_Wars .
  ?bayne dbo:servedIn ?war .

  # Linking Napoleon and the French Army to the Napoleonic Wars
  ?campaign dbo:militaryConflict ?war .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
871,69,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Rodney Lees' awardee
  ?awardee dbo:awardReceived dbr:Rodney_Lees .
  
  # Parent of the awardee who is also the father of a politician
  ?parent dbo:child ?awardee .
  ?politician dbo:father ?parent .
  ?politician a dbo:Politician .

  # Politician is an alumnus of Eton College and parent of another child
  ?politician dbp:almaMater dbr:Eton_College .
  ?politician dbo:child ?anotherChild .

  # Another child's parent is Frederick Stanley, 16th Earl of Derby
  ?anotherChild dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
943,71,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I's child (Eskender)
  ?eskender dbo:parent dbr:Baeda_Maryam_I ;
            a dbo:Person .
  
  # Eskender's father
  ?baeda_maryam dbo:child ?eskender ;
                a dbo:Person .

  # Baeda Maryam I's father
  ?dawit_i dbo:child ?baeda_maryam ;
           a dbo:Person .

  # Dawit I's father
  ?grandfather dbo:child ?dawit_i ;
               a dbo:Person .

  # Commander in Siege of Mukha and their royal parent
  ?commander dbo:parent ?royal_parent ;
             a dbo:Person .
  
  ?royal_parent a dbo:Royalty .
}
```",9,13,10,3,3,3,3,71,0,1,1,0.0,0.0,0
80,67,test,"Give me the actor of Shelby Oaks and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find actor associated with Shelby Oaks
  ?shelbyOaks a dbo:Film ;
              dbo:starring ?actor .
  FILTER(?shelbyOaks = dbr:Shelby_Oaks)

  # Find T.I.'s song that is also a musical work and its album
  ?song a dbo:SongsByT.I. ;
        dbo:album ?album .

  # Identify the series ""The Golden Master"" and its alter ego
  ?goldenMasterSeries a dbo:TelevisionSeries .
  ?goldenMasterSeries dbp:alterEgo ?alterEgo .

  # Find actor associated with the album of T.I.'s song
  ?album dbo:starring ?actor .

  # Ensure the same actor is involved in both Shelby Oaks and the album
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,69,test,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Myat Hpone Pyo's father who is royalty
  ?myatHponePyo a dbo:Person ;
                dbp:father ?father .
  ?father a dbo:Monarch .

  # Saw Min Phyu's spouse who is royalty and their child
  ?sawMinPhyu a dbo:Person ;
              dbp:spouse ?royaltySpouse .
  ?royaltySpouse a dbo:Monarch .
  ?royaltyChild dbp:parent ?royaltySpouse .

  # Minye Kyawswa's parent's child
  ?minyeKyawswa a dbo:Person ;
                dbp:child ?child .
  ?parentOfChild dbp:parent ?child .

  # Predecessor of the royalty child is the spouse we are looking for
  ?predecessor dbp:successor ?royaltySpouse .
  
  FILTER (?father = ?predecessor)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
668,69,test,"Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Rod Argent's profession
  VALUES (?rodArgent) { dbr:Rod_Argent }
  
  # Find the birth name of $pacely (assuming a known artist, e.g., Snoop Dogg)
  VALUES (?pacelyBirthName) { ""Calvin Cordozar Broadus Jr."" } # Example for Snoop Dogg
  
  # Find the birth name of an artist from Central Region, Ghana
  ?ghanaArtist a dbo:MusicalArtist .
  ?ghanaArtist dbo:birthPlace dbr:Central_Region,_Ghana .
  ?ghanaArtist dbp:birthName ?ghanaBirthName .

  # Find associated artists with the birth names
  ?person1 dbp:birthName ?pacelyBirthName .
  ?person2 dbp:birthName ?ghanaBirthName .
  
  # Assuming ""associated"" means collaboration or similar connection
  OPTIONAL { 
    ?collaboration dbo:artist ?person1 ;
                   dbo:artist ?associatedArtist .
  }
  OPTIONAL {
    ?collaboration dbo:artist ?person2 ;
                   dbo:artist ?associatedArtist .
  }

  FILTER(?associatedArtist != ?person1 && ?associatedArtist != ?person2)
}
ORDER BY ?associatedArtist
LIMIT 10
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
151,9,test,Give me the entity in the birthplace of Burhan Belge and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity ?award WHERE {
  # Retrieve birthplace of Burhan Belge
  dbr:Burhan_Belge dbo:birthPlace ?birthPlaceEntity .

  # Retrieve an award associated with Charles Parsons (British Army officer)
  OPTIONAL { 
    dbr:Charles_Parsons_(British_Army_officer) dbo:award ?award .
  }
}
```",4,4,5,2,2,2,2,9,0,0,3,0,0.0,0
23,28,test,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?danielBirthCountry ?royParty ?sofiaFatherParty WHERE {
  # Daniel Elahi Galán's country of birth
  dbr:Daniela_Elahi_Galán dbo:nationality ?nationality .
  ?nationality dbo:country ?danielBirthCountry .

  # Roy Leonardo Barreras Montealegre's political party
  dbr:Roy_Leonardo_Barreras_Montealegre dbp:partyAffiliation ?royParty .

  # Sofía Petro's father and his political party affiliation
  OPTIONAL {
    ?sofia dbo:parent ?father .
    ?father foaf:name ""Sofía Petro""@en .
    ?father dbp:partyAffiliation ?sofiaFatherParty .
  }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
412,27,test,"Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in the death place, that is a settlement, of Antonios Varthalitis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war1 ?war2 ?deathPlace WHERE {
  # Napoleon Zervas and the war he was involved in
  ?person1 dbo:name ""Napoleon Zervas"" .
  ?event1 dbo:agent ?person1 ;
          dbo:location dbr:Greece ;
          dbo:subject dbr:World_War_II .

  # Awardee of 30
  ?person2 dbp:awardYear ""1930""^^xsd:gYear .
  
  # Antonios Varthalitis' death place
  ?person3 dbo:name ""Antonios Varthalitis"" .
  ?person3 dbo:deathPlace ?deathPlace ;
          a dbo:Person .

  # Linking the wars and the death place
  ?event2 dbo:agent ?person2 ;
          dbo:subject ?war1 .
  
  FILTER(?war1 != ?war2)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
742,19,test,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  
  # Find settlements in the Eastern European Time zone
  ?settlement a dbo:Settlement ;
              dbo:timeZone dbr:Eastern_European_Time .

  # The person must be a resident of one of these settlements
  ?person dbo:residence ?settlement .

  # Retrieve their birthplace
  ?person dbo:birthPlace ?birthPlace .
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
756,68,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v5 . ?v4 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the successor season of VfL Bochum's 2006-07 season
  ?season1 dbo:succeeds dbr:2006%E2%80%9307_VfL_Bochum_season .
  
  # Identify Thomas Letsch's team in that season
  ?team dbp:manager dbr:Thomas_Letsch ;
        dbo:participatedInSeason ?season1 .

  # Find the manager of that team during the identified season
  ?team dbp:managerDuringSeason ?manager .

  # Determine the leader of West Germany and their native place
  ?leader dbo:nationality dbr:Germany ;
          dbo:position dbr:Chancellor_of_Germany .
  
  ?administration dbo:country dbr:Germany .
  ?leader dbo:nativePlace ?administration .

}
```",8,18,9,3,3,3,3,71,0,0,1,0,0.0,0
89,68,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Saw Shwe Khet's child who is royalty
  ?child1 a dbo:Royalty ;
          dbo:parent dbr:Saw_Shwe_Khet .

  # This child has another child who is also royalty
  ?child2 a dbo:Royalty ;
          dbo:parent ?child1 .

  # Minye Kyawswa is the grandparent of this second child
  ?child2 dbo:parent ?grandparent .
  ?grandparent dbp:spouse dbr:Saw_Shwe_Khet .

  # Find the father of the second child (who is also Saw Shwe Khet)
  ?father dbo:spouse ?mother ;
          dbo:child ?child2 .

  # Get the spouse of this father
  ?father dbp:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
399,9,test,Give me the band member of the person born as Emilia Yancheva Valeva and professional in the profession of Jamie T.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Identify Jamie T's resource using his birth name
  ?person a dbo:MusicalArtist ;
          dbp:birthName ""Emilia Yancheva Valeva""@en .
  
  # Find the band associated with Jamie T
  ?person dbo:memberOfBand ?band .

  # Retrieve members of that band
  ?bandMember dbo:memberOfBand ?band ;
              foaf:name ?name .
}
ORDER BY ?name
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
38,19,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Commander ;
          dbo:nationality dbr:United_States ;
          dbo:work ?writtenWork .
  
  ?writtenWork a dbo:WrittenWork, dbo:Book .

  OPTIONAL { 
    ?writtenWork dbp:relatedTo dbr:Joe_Biden .
  }

  ?person foaf:name ?author .
}
```",5,12,6,3,2,3,2,20,0,0,1,0,0.0,0
293,68,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Find landmark with specific elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation = 20.1168)

  # Step 2: Identify films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .

  # Step 3: Find actors in those films
  ?film dbo:starring ?actor .

  # Step 4: Determine the spouse of these actors
  ?actor dbp:spouse ?spouse .

  # Step 5: Identify person born as Ann Sothern's birth name
  dbr:Ann_Sothern dbp:birthName ?birthName .
  ?person dbp:birthName ?birthName .

  # Step 6: Find party member of the ruling party associated with this person
  ?partyMember dbo:memberOfParty ?rulingParty ;
               dbo:spouse ?person .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
737,69,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Archduchess Margarete Sophie of Austria's parent
  ?parentMargarete a dbo:Person ;
                   dbo:spouse ?margareteSophie .
  ?margareteSophie dbp:name ""Archduchess Margarete Sophie of Austria"" .

  # Duke Philipp of Württemberg's child
  ?childPhilipp a dbo:Person ;
               dbo:parent ?philippWuerttemberg .
  ?philippWuerttemberg dbp:name ""Duke Philipp of Württemberg"" .

  # Spouse of Archduchess Helena of Austria and their child
  ?spouseHelena a dbo:Person ;
                dbo:spouse ?helenaAustria .
  ?helenaAustria dbp:name ""Archduchess Helena of Austria"" .
  ?childSpouse a dbo:Person ;
               dbo:parent ?spouseHelena .

  # The target royalty
  ?targetRoyalty a dbo:RoyalFamilyMember ;
                 dbo:parent ?childOfChild .
  
  # Relationships to find the child of the child
  ?childMargarete a dbo:Person ;
                  dbo:parent ?margareteSophie .
  ?grandchildMargarete a dbo:Person ;
                        dbo:parent ?childMargarete .

  ?childPhilippGrandchild a dbo:Person ;
                          dbo:parent ?childPhilipp .

  # Predecessor relationship
  ?predecessor a dbo:RoyalFamilyMember ;
               dbo:successor ?targetRoyalty .
  
  FILTER (?grandchildMargarete = ?childOfChild || 
          ?childPhilippGrandchild = ?childOfChild ||
          ?childSpouse = ?childOfChild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,28,test,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?entityInBirthPlace ?warOfEntity ?personBornAsKoichirō ?warOfPerson WHERE {
  # Toyotomi Hideyoshi's child
  ?hideyoshi dbr:Toyotomi_Hideyoshi .
  ?hideyoshi dbo:child ?child .

  # Yamaza Enjirō's birth place and associated entity
  ?enjiro dbr:Yamaza_Enjirō .
  ?enjiro dbo:birthPlace ?birthPlace .
  ?entityInBirthPlace dbo:location ?birthPlace .

  # War involvement of the entity from Yamaza Enjirō's birth place
  OPTIONAL { ?entityInBirthPlace dbo:participatedInWar ?warOfEntity }

  # Person born as Koichirō and their war involvement
  ?person dbp:birthName ""Koichirō""@ja .
  OPTIONAL { ?person dbo:participatedInWar ?warOfPerson }
}
```",6,6,7,2,3,2,3,28,0,0,2,0,0.0,0
668,68,test,"Give me the associated musical artist of the person born as the birth name of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of Joey B.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Step 1: Get $pacely's birth name
  ?pacely a dbo:MusicalArtist ;
          foaf:name ""$pacely"" ;
          dbp:birthName ?pacelyBirthName .

  # Step 2: Find the writer of ""The Live Anthology""
  ?writer a dbo:Writer ;
          dbo:work dbr:The_Live_Anthology .

  # Step 3: Get Joey B's birth name
  ?joeyB a dbo:MusicalArtist ;
         foaf:name ""Joey B"" ;
         dbp:birthName ?joeyBBirthName .

  # Step 4: Find the associated musical artist
  ?associatedArtist a dbo:MusicalArtist ;
                   dbp:birthName ?pacelyBirthName, ?joeyBBirthName ;
                   dbo:worksFor ?writer .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
353,67,test,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?reference a dbo:Monarch ;
             dbo:spouse ?constance .
  ?child dbo:parent ?reference ;
         dbo:parent ?rogerII ;
         dbo:parent ?mother .
  ?rogerII dbr:Roger_II_of_Sicily .
  ?constance dbr:Constance_of_Burgundy .
  ?mother dbp:spouse ?rogerII .
  ?father dbo:child ?child .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
295,20,test,"Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Step 1: Identify the producer of ""Storm in a Teacup"" (film)
  ?producer dbo:productionCompany ?film .
  ?film rdfs:label ""Storm in a Teacup""@en .

  # Step 2: Find the birthplace of this producer
  ?producer dbo:birthPlace ?birthPlace .

  # Step 3: Identify works by Steven Kapur that are musical and related to ""the true self""
  ?kapur a dbo:Artist .
  ?kapur foaf:name ""Steven Kapur""@en .
  ?work dbo:artist ?kapur ;
        dbo:genre dbr:Musical_work ;
        dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""true self""))

  # Step 4: Determine the native of the birthplace
  ?native dbo:nationality ?birthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
213,19,test,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v4 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Find Chiang Ching-kuo's children who are politicians
  ?child a dbo:Politician ;
         dbo:parent dbr:Chiang_Ching-kuo .

  # Get the birth place of these children
  ?child dbo:birthPlace ?birthPlace .

  # Find Hu Jieqing's spouse who is a writer
  ?spouse a dbo:Writer ;
          dbo:spouse dbr:Hu_Jieqing .

  # Determine the country of origin for the spouse's work
  ?work dbo:author ?spouse ;
        dbo:countryOfOrigin ?country .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
687,70,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:SoccerPlayer .
  ?actor a dbo:Athlete .
  ?actor a dbo:Actor .

  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:starring ?actor .
  
  ?person1 dbp:birthday ?sarmientoBirthday .
  ?person1 a dbo:SoccerPlayer .
  ?person1 a dbo:SoccerManager .
  ?team1 dbo:player ?person1 .

  ?person2 dbp:birthday ""1955-02-22""^^xsd:date .
  ?person2 a dbo:Athlete .
  ?team2 dbo:player ?person2 .
  
  FILTER (?sarmientoBirthday = (SELECT ?birthday WHERE {
    ?sarmiento a dbo:SoccerPlayer ;
              dbp:birthday ?birthday .
  }))
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
103,71,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # The Shadow (video game) and its comics character's alter ego
  ?shadowGame a dbo:VideoGame .
  ?shadowGame dbp:basedOn dbr:The_Shadow_(comics_character) .
  ?shadowCharacter dbo:alterEgo ?alterEgo .

  # Ab Kya Hoga actor who is also a politician
  ?abKyaHogaActor a dbo:Actor ;
                  dbp:profession ?actorProfession ;
                  dbp:politicalRole ?politicianRole .

  # Richard Grant Esterhuysen's movie and associated TV show
  dbr:Richard_Grant_Esterhuysen dbo:birthName ""Richard Grant Esterhuysen"" .
  ?esterMovie dbo:starring dbr:Richard_Grant_Esterhuysen .
  ?esterMovie dbp:adaptation ?tvShow .

  # Find the common professional
  ?professional dbo:profession ?actorProfession ;
                dbo:alterEgo ?alterEgo ;
                dbo:starringIn ?esterMovie .
}
```",9,12,10,3,3,3,3,71,0,0,13,0,0.0,0
68,28,test,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark
  ?dorothea a dbo:Person ;
           foaf:name ""Dorothea of Denmark"" ;
           dbp:parent ?parent .

  # Her father
  ?parent a dbo:Person ;
          foaf:name ?fatherName ;
          dbp:parent ?grandparent .

  # Her grandfather (father's parent)
  ?grandparent a dbo:Person ;
               foaf:name ?grandfatherName ;
               dbo:role ?role .

  # Check if the role is related to the Siege of Padua
  FILTER(CONTAINS(LCASE(?role), ""siege of padua"") || CONTAINS(LCASE(?role), ""commander""))

  BIND(?grandparent AS ?grandfather)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
198,71,test,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v7 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v8 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?force ?entity WHERE {
  ?award a dbo:Award .
  ?award dbo:awardedBy dbr:United_States_Congress .
  ?award dbo:recipient ?person .

  ?gillmoreAward a dbo:Award .
  ?gillmoreAward dbo:recipient dbr:Quincy_Adams_Gillmore .
  
  ?person dbo:force ?force .
  ?force dbo:partOf ?war .

  OPTIONAL { 
    ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  }

  ?person dbo:birthPlace ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  ?entity dbo:birthPlace ?settlement .
  ?entity rdf:type dbo:Person ;
          dbo:nationality dbr:American .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
871,67,test,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Victor Stanley (Royal Navy officer)
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley"" ;
          dbo:childOf ?parent .

  # Child of Victor Stanley who is a politician and an alumnus of Eton College
  ?politician a dbo:Politician ;
              dbo:almaMater dbr:Eton_College ;
              dbo:childOf ?victor .

  # Parent of the politician child, who is also a politician and office holder
  ?officeHolderParent a dbo:Politician ;
                      dbo:officeHolder true ;
                      dbo:parentOf ?politician .

  # Edward Stanley, 17th Earl of Derby
  ?edward dbr:Edward_Stanley,_17th_Earl_of_Derby ;
          dbo:childOf ?officeHolderParent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
158,27,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Person native of Finland under Alexander II
  ?person dbo:nationality dbr:Finland .
  ?person dbo:birthPlace ?finlandPlace .
  ?finlandPlace dbo:governmentHead dbr:Alexander_II_of_Russia .

  # Person native of Russia under Nicholas II
  ?person dbo:nationality dbr:Russia .
  ?person dbo:birthPlace ?russianPlace .
  ?russianPlace dbo:governmentHead dbr:Nicholas_II_of_Russia .

  # Person deceased in Switzerland
  ?person dbo:deathPlace dbr:Switzerland .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,69,test,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  ?tvShow dbo:title ""Always the Love Songs"" .
  ?tvShow dbo:creator ?writer .

  # Identify a commander in the Battle of Vienna
  ?battle dbr:Battle_of_Vienna .
  ?commander dbo:participatedIn ?battle .
  ?commander dbo:position ""Commander"" .

  # Find the successor of this commander
  ?successor dbo:succeededBy ?commander .
  
  # Ensure Michał Kazimierz Pac is related to the battle
  ?pac dbr:Micha%C5%82_Kazimierz_Pac .
  ?pac dbo:participatedIn ?battle .

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,70,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?person a dbo:Politician .
  ?person dbo:nationality dbr:Spain .
  ?person dbo:residenceCountry dbr:Spain .
  ?person dbo:partyMembership dbr:Spanish_Socialist_Workers'_Party .
  ?election dbo:electionDate ?date .
  ?election dbo:office dbr:President_of_the_Galician_Executive_Council .
  ?election dbo:resultingLeader ?person .
  FILTER(YEAR(?date) = 2009)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
353,68,test,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find a child of Alfonso VI
  ?alfonsoVI dbo:child ?alfonsoChild .
  FILTER(STRSTARTS(STR(?alfonsoVI), ""http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile"")) .

  # Step 2: Find that child's child
  ?alfonsoChild dbo:child ?grandchild .

  # Step 3: Identify Roger II's parent
  ?rogerII dbo:parent ?rogerParent .
  FILTER(STRSTARTS(STR(?rogerII), ""http://dbpedia.org/resource/Roger_II_of_Sicily"")) .

  # Step 4: Match the two children
  ?rogerParent dbo:child ?grandchild .

  # Step 5: Find royalty and office holder related to William I
  ?person dbo:royalty true .
  ?person dbo:officeHolder true .
  ?williamI dbp:reference ?person .
  FILTER(STRSTARTS(STR(?williamI), ""http://dbpedia.org/resource/William_I"")) .

  # Ensure the person is also a father
  ?person dbo:child ?someChild .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
246,19,test,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find children of Prince Faisal bin Hussein and Princess Muna al-Hussein
  ?child dbo:parent dbr:Faisal_bin_Hussein ;
         dbo:parent dbr:Muna_al-Hussein .
  
  # Check if the child is royalty
  OPTIONAL { ?child a dbo:Royalty . }
  
  # Find the parent of this child (who should be royalty)
  ?child dbo:parent ?parent .

  # Ensure the parent is also royalty
  FILTER EXISTS { ?parent a dbo:Royalty . }

  # Limit to unique parents
  DISTINCT ?parent
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
531,68,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeOfCommander WHERE {
  # Manuel Pinto da Costa's role as a commander in a military conflict
  ?person dbr:Manuel_Pinto_da_Costa .
  ?person dbo:positionHeld ?commandRole .
  ?commandRole dbo:roleName ?officeOfCommander .
  ?conflict dbo:participant ?person .
  ?conflict a dbo:MilitaryConflict .

  # Leader of the 2003 Madrid City Council election
  ?election dbr:2003_Madrid_City_Council_election .
  ?leader dbp:electedAsLeaderOf ?election .
  ?residence dbo:location ?leader .

  # Conservative Republican Party (Spain) leader's office
  ?party dbr:Conservative_Republican_Party_(Spain) .
  ?partyLeader dbp:leaderOfParty ?party .
  ?officeOfLeader dbo:positionHeld ?partyLeader .
  
  # Linking the residence of the leader to Manuel Pinto da Costa
  ?person dbo:residence ?residence .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,71,test,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v4 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Step 1: Identify Bob Thompson (musician) by birth name
  ?bob a dbo:MusicalArtist .
  ?bob foaf:name ""Bob Thompson"" .

  # Step 2: Find the fictional character created by Walter B. Gibson
  ?fictionalCharacter a dbo:FictionalCharacter ;
                     dbo:creator dbr:Walter_B._Gibson ;
                     dbo:genre dbr:Comics .

  # Step 3: Determine the profession of the producer of Coke Studio Philippines
  ?producer a dbo:Producer ;
            dbp:worksFor dbr:Coke_Studio_Philippines .

  # Step 4: Connect these elements to find the band associated with Bob Thompson
  ?bob dbo:band ?band .
}
```",9,12,10,3,3,3,3,71,0,0,4,0,0.0,0
687,71,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Find actors in these films who are also soccer players and athletes
  ?actor dbo:spouseOrPartner ?film ;
         a dbo:SoccerPlayer, dbo:Athlete .

  # Match the actor with Marty Pollio's birthdate
  ?actor dbp:birthday ?birthday .
  FILTER (?birthday = ""1977-10-23""^^xsd:date) # Assuming this is Marty Pollio's birthday

  # Find teams associated with Marcelo Sarmiento
  ?team dbo:member ?marceloSarmiento .
  ?marceloSarmiento dbp:birthday ?sarmientoBirthday .
  FILTER (?sarmientoBirthday = ""1979-09-12""^^xsd:date) # Assuming this is Marcelo Sarmiento's birthday

  # Ensure the actor plays for the same team as Marcelo Sarmiento
  ?actor dbo:team ?team .

  BIND(?actor AS ?player)
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
531,70,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeOfCommander WHERE {
  # Manuel Pinto da Costa's office in a military conflict
  ?manuelPinto a dbo:OfficeHolder ;
               dbo:office ?officeOfCommander ;
               dbo:memberOf ?militaryConflict .
  
  ?militaryConflict a dbo:MilitaryConflict .

  # Alberto Ruiz-Gallardón's residence
  ?albertoRuiz dbp:residence ?residence ;
               dbo:office ?officeOfResidence .

  # Miguel Maura's political party and leader office
  ?miguelMaura dbo:leaderOf ?politicalParty .
  
  ?politicalParty a dbo:PoliticalParty .
  
  ?partyLeader dbo:leaderOf ?politicalParty ;
               dbo:office ?officeOfLeader .
  
  FILTER(?manuelPinto = dbr:Manuel_Pinto_da_Costa)
  FILTER(?albertoRuiz = dbr:Alberto_Ruiz-Gallardón)
  FILTER(?miguelMaura = dbr:Miguel_Maura)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
723,20,test,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/producer> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Step 1: Find the producer of ""Nothing to Gein""
  ?album a dbo:Album .
  ?album dbp:title ""Nothing to Gein"" .
  ?album dbo:producer ?producer .

  # Step 2: Ensure the producer is an organization and group
  ?producer a dbo:MusicalGroup ;
            a dbo:Organization .

  # Step 3: Find band members of this producer
  ?member dbo:memberOf ?producer .

  # Step 4: Find Nate Newton's associated musical artist
  dbr:Nate_Newton dbo:associatedBandOrMusicalArtist ?nateArtist .
  
  # Ensure the associated artist is a band and organization
  ?nateArtist a dbo:MusicalGroup ;
              a dbo:Organization .

  # Step 5: Find band members of Nate Newton's associated musical artist
  ?artistMember dbo:memberOf ?nateArtist .

  # Return the intersection of band members from both contexts
  FILTER (?member = ?artistMember)
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
203,68,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the military conflict associated with ""The Triple X's""
  ?tripleXEvent a dbo:MilitaryConflict .
  ?tripleXEvent dbo:participatedInMilitaryConflicts ?militaryForce1 .

  # Find the event involving Robert Calder
  ?calderEvent a dbo:Event .
  ?calderEvent dbo:participatedInMilitaryConflicts ?militaryForce2 .

  # Find the military conflict associated with William Bayne
  ?bayneConflict a dbo:MilitaryConflict .
  ?bayneConflict dbo:participatedInMilitaryConflicts ?militaryForce3 .

  # Ensure these forces are related to each other
  FILTER(?militaryForce1 = ?militaryForce2 && ?militaryForce2 = ?militaryForce3)

  # Find the commander of this military conflict
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:commandedMilitaryConflict ?tripleXEvent .

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,71,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v8 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantCountry WHERE {
  # Anxo Quintana's office in an administration
  ?quintanaOffice a dbo:GovernmentFunction ;
                  dbo:officeHolder dbr:Anxo_Quintana ;
                  dbo:partOf ?administration .

  # Administration linked to the Spanish Socialist Workers' Party
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .

  # Tenant of the administration (leader)
  ?tenant a dbo:GovernmentFunction ;
          dbo:officeHolder ?leader ;
          dbo:partOf ?administration .

  # Leader's country of citizenship
  ?leader dbo:nationality dbr:Spain .

  # Residence (country) of the tenant
  ?tenant dbo:residenceCountry ?tenantCountry .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
468,20,test,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon and child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?birthName WHERE {
  # Alfonso IV of Aragon and his children
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?mother .
  ?mother dbo:child ?child .

  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Retrieve birth name
  OPTIONAL { ?child dbp:birthName ?birthName . }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
103,69,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  # The Shadow (video game) and comics character
  ?shadowGame a dbo:VideoGame ;
              dbp:basedOn ?comicsCharacter .

  # Actor of the movie that is also a television show
  ?movie a dbo:Film ;
         dbo:adaptationOfWork ?tvShow .
  ?actor dbo:actedIn ?movie, ?tvShow .

  # Richard Grant Esterhuysen's professional alias
  ?esterhuysen a dbo:Person ;
               foaf:name ""Richard Grant Esterhuysen"" ;
               dbp:profession ?professionalAlias .

  # Shatrughan Sinha's profession
  ?sinha a dbo:Person ;
         foaf:name ""Shatrughan Sinha"" ;
         dbp:profession ?sinhaProfession .

  # Combine these elements
  FILTER(?actor = ?esterhuysen)
  FILTER(?sinhaProfession = ?professionalAlias)

  BIND(STR(?actor) AS ?professionalName)
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
782,68,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?band ?realNameOfKimWilsonBand WHERE {
  # Find musical artists born on March 30, 1945
  ?artist a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date ;
          dbp:birthName ""Nicholas Michael Curran""@en .

  # Find band members of these artists
  ?bandMember dbo:memberOfBand ?band ;
              dbo:associatedMusicalArtist ?artist .

  # Get the real name of the band associated with Kim Wilson
  dbr:Kim_Wilson dbo:realName ""Kim Wilson"" .
  ?kimWilsonBand dbo:memberOfBand dbr:Kim_Wilson .
  ?kimWilsonBand dbp:officialName ?realNameOfKimWilsonBand .

}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,20,test,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for , and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/postalCode> "","" . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find the location that is an English settlement
  ?location a dbo:Settlement ;
            dbo:country dbr:England .

  # Find the artist who is native to this location and is also a musical artist
  ?artist a dbo:Artist, dbo:MusicalArtist ;
          dbo:nationality dbr:England ;
          dbo:birthPlace ?location .

  # Find the deceased person who is an artist/musical artist and died on 2020-06-18
  ?deceasedPerson a dbo:Artist, dbo:MusicalArtist ;
                  dbo:dateOfDeath ""2020-06-18""^^xsd:date .

  # Find the movie/television show authored by the first artist
  ?work a dbo:Film, dbo:TelevisionShow ;
        dbo:author ?artist .

  # Find the parent of the first artist
  ?parent dbo:child ?artist .
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
58,19,test,Give me the spouse of the person born as Linda Sue Cobb and producer of the movie with the award of Ian Gregson (poet).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Linda Sue Cobb by her birth name
  ?person dbp:birthName ""Linda Sue Cobb"" .
  
  # Step 2: Find movies she produced
  ?movie dbo:producer ?person .
  
  # Step 3: Check if the movie has an award linked to Ian Gregson
  ?award dbo:recipient dbr:Ian_Gregson ;
         dbo:awardedFor ?movie .
  
  # Step 4: Retrieve spouse information for Linda Sue Cobb
  OPTIONAL { ?person dbp:spouse ?spouse . }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
756,70,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person a dbo:SportsManager .
  ?person dbp:birthday ""1968-08-26""^^xsd:date .
  
  ?teamSeason a dbo:SoccerClubSeason ;
              dbo:season ""2007–08"" ;
              dbo:club dbr:VfL_Bochum .

  ?person dbo:managerOfTeam ?teamSeason .
  
  ?country dbo:name ""West Germany""@en .
  ?person dbo:nationality ?country .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
859,20,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Step 1: Find a member of Khlyst (band) who is also a musical artist
  ?member dbo:memberOf dbr:Khlyst_(band) .
  ?member a dbo:MusicalArtist .

  # Step 2: Find the associated musical artist with this member
  ?member dbp:associatedBandOrMusicalArtist ?associatedArtist1 .
  
  # Step 3: Identify the band and group related to ""Burnt by the Sun""
  ?reference dbo:subject dbr:Burnt_by_the_Sun_(film) ;
             a (dbo:Group|dbo:Band|dbo:Organization) .

  # Step 4: Find the associated musical artist of this reference
  ?associatedArtist1 dbp:associatedBandOrMusicalArtist ?reference .
  
  # Step 5: Identify the band member of this associated musical artist
  ?bandMember dbo:memberOf ?associatedArtist1 ;
              a dbo:MusicalArtist .

  # Return the final associated artist
  ?bandMember dbp:associatedBandOrMusicalArtist ?associatedArtist .
}
```",6,11,7,3,2,3,2,20,0,0,5,0,0.0,0
628,69,test,"Give me the person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Step 1: Get Bobby Shmurda's birth name
  VALUES (?bobby) { dbr:Bobby_Shmurda }
  ?bobby dbo:birthName ?birthName .

  # Step 2: Find the region that is an award and a state
  ?award a dbo:Award ;
        dbo:country dbr:United_States_of_America ;
        dbo:stateOrProvince dbr:New_York_(state) .
  
  # Step 3: Connect to a band from New York (state)
  ?band dbo:location dbr:New_York_City ;
        dbo:award ?award .

  # Step 4: Find the band member associated with GS9
  ?member dbo:associatedBand ?band ;
          dbo:memberOfGS9 true .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
687,67,test,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInTeam ?soccerPlayerManager ?actorSoccerAthlete WHERE {
  # Juan Carlos Molina's team
  ?molina a dbo:SoccerPlayer ;
          dbp:team ?team .
  ?team dbp:player ?playerInTeam .

  # Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbo:birthday ?birthday .

  # Soccer player and manager born on the same day as Marcelo Sarmiento
  ?soccerPlayerManager a dbo:SoccerPlayer, dbo:SoccerManager ;
                      dbo:birthday ?sameBirthday .
  FILTER (?sameBirthday = ?birthday)

  # Actor who is also a soccer player and athlete in a film by Manuel Huerga
  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga .
  ?actorSoccerAthlete a dbo:Actor, dbo:SoccerPlayer, dbo:Athlete ;
                      dbo:actedIn ?film .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
628,70,test,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Step 1: Find musical artists native to Florida
  ?floridaArtist a dbo:MusicalArtist .
  ?floridaArtist dbo:birthPlace dbr:Florida .

  # Step 2: Get Bobby Shmurda's band members who are also musical artists
  ?bobbyShmurdaBandMember dbp:memberOf dbr:Bobby_Shmurda .
  ?bobbyShmurdaBandMember a dbo:MusicalArtist .

  # Step 3: Match the birth name of Florida artist with Bobby Shmurda's band member
  ?floridaArtist dbp:birthName ?birthName .
  ?bobbyShmurdaBandMember dbp:birthName ?birthName .

  # Step 4: Check if they have an award associated with New York (state)
  ?award a dbo:Award .
  ?award dbo:region dbr:New_York_(state) .
  ?awardee dbo:recipient ?bobbyShmurdaBandMember .
  ?awardee dbo:location dbr:New_York_City .

  # Ensure the awardee is a band
  ?awardee a dbo:MusicalGroup .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
198,69,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity WHERE {
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date .
  ?person dbo:honoraryTitle dbr:Gillmore_Medal .

  ?awardEvent dbo:awardee ?person ;
              a dbo:Award ;
              dbp:war ?war .

  ?congressAwardEvent dbo:awardee ?person ;
                      a dbo:Award ;
                      dbp:show ?war ;
                      dbo:country dbr:United_States_Congress .

  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  BIND(?birthPlace AS ?birthPlaceEntity)
}
LIMIT 1
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
731,19,test,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse and force of the awardee of Commander of the Order of the British Empire.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  # Find the societal event related to the sinking of Prince of Wales and Repulse
  ?event a dbo:SocietalEvent ;
         dbo:reference dbr:Sinking_of_Prince_of_Wales_and_Repulse .

  # Identify military conflicts that are also societal events
  ?war a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Find commanders associated with the war
  ?commander dbo:commanded ?unit .
  ?unit dbo:participatedIn ?war .

  # Link the commander to the societal event
  ?commander dbo:reference ?event .

  # Identify individuals who are awardees of Commander of the Order of the British Empire
  ?awardee dbp:award ""Commander of the Order of the British Empire"" ;
          dbo:receivedAwardBy ?order .
  
  # Link the commander to the awardee
  ?commander foaf:name ?name .
  ?awardee foaf:name ?name .

}
ORDER BY ?war
LIMIT 10
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
816,71,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Mariclare Costello's spouse
  ?mariclareCostello a dbo:Person ;
                    foaf:name ""Mariclare Costello"" .
  
  ?spouse dbo:spouse ?mariclareCostello .

  # Child of the spouse
  ?child dbo:parent ?spouse .

  # Professional in Eugène Cattin's profession
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin"" .
  
  ?profession dbp:profession ?eugeneProfession .
  ?eugeneCattin dbp:profession ?eugeneProfession .

  ?professional dbp:profession ?eugeneProfession .

  # Person decedent at Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles_County,_California ;
            dbo:parent ?child .
  
  # Movie actor related to the person decedent
  ?movie dbo:actor ?actor .
  ?actor dbo:birthName ?decedent .
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
159,67,test,"Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  # Find the work of George Ducas
  ?work dbo:author dbr:George_Ducas .
  
  # Identify Yurii Khmelnytsky and his successor
  ?yuriikhmelnytsky a dbo:Person ;
                   dbp:succeededBy ?successor .

  # Find the military force involved in the Battle of Vienna
  ?battle dbr:Battle_of_Vienna ;
         dbo:commander ?commander .
  
  # The commander is also associated with a television show and societal event
  ?commander dbo:work ?tvShow ;
             dbo:socialEvent ?societalEvent .

  # Link the successor to the commander
  ?successor = ?commander .

  # Find the writer of the work by George Ducas
  ?writer dbo:author ?work .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
941,20,test,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v4 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfParent WHERE {
  # Step 1: Princess Antoinette of Brunswick-Wolfenbüttel
  ?antoinette a dbo:Person ;
             foaf:name ""Princess Antoinette of Brunswick-Wolfenbüttel""@en .

  # Step 2: Her child who is royalty
  ?childOfAntoinette dbo:parent ?antoinette ;
                    a dbo:Royalty .

  # Step 3: Spouse of this child
  ?spouseOfChild dbp:spouse ?childOfAntoinette .

  # Step 4: Ferdinand Albert II's child and their spouse
  ?ferdinandAlbertII a dbo:Person ;
                    foaf:name ""Ferdinand Albert II, Duke of Brunswick-Lüneburg""@en .
  
  ?childOfFerdinandAlbertII dbo:parent ?ferdinandAlbertII ;
                           a dbo:Royalty .

  ?spouseOfChild2 dbp:spouse ?childOfFerdinandAlbertII .

  # Step 5: Child of the parent (from step 4) who is royalty
  ?parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?childOfFerdinandAlbertII .
  
  ?childOfParent dbo:parent ?spouseOfChild2 ;
                 a dbo:Royalty .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
119,19,test,"Give me the war of the commander in French Revolutionary Wars and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Step 1: Identify a Polish athlete native to Łódź
  ?athlete dbo:nationality dbr:Poland .
  ?athlete dbo:birthPlace dbr:_Łódź_ .
  ?athlete a dbo:Athlete .

  # Step 2: Determine their country of residence
  OPTIONAL { ?athlete dbp:residence ?country . }

  # Step 3: Find a commander from the French Revolutionary Wars associated with that country
  ?commander dbo:nationality ?country .
  ?commander dbo:participatedInWar ?war .
  FILTER EXISTS {
    ?war dbo:wikiPageWikiLink dbr:French_Revolutionary_Wars
  }

  # Link athlete to commander through the country of residence
  BIND(?athlete AS ?person)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
628,71,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Step 1: Find a musical artist native to Florida
  ?floridaArtist a dbo:MusicalArtist .
  ?floridaArtist dbo:birthPlace dbr:Florida .

  # Step 2: Identify GS9 members who are both artists and musical artists
  ?gs9Member a dbo:MusicalArtist, dbo:Artist ;
             dbo:memberOf dbr:GS9 .

  # Step 3: Find awards associated with New York (state)
  ?award a dbo:Award ;
         dbo:region dbr:New_York_(state) ;
         dbo:country dbr:United_States ;
         dbo:settlement dbr:New_York_City .

  # Step 4: Identify the awardee band from New York
  ?band a dbo:Band ;
        dbo:award ?award ;
        dbo:birthPlace dbr:New_York_(state) .

  # Step 5: Find the birth name of the Florida native musical artist
  ?floridaArtist dbp:birthName ?birthName .

  # Linking all parts together
  ?gs9Member dbo:associatedBand ?band .
}
```",9,18,10,3,3,3,3,71,0,0,1,0,0.0,0
140,20,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find John McDermott's death place
  ?johnMcDermott a dbo:Artist ;
                 dbp:deathPlace ?deathPlace .

  # Find the commander of Pickett's Charge
  ?pickettsCharge a dbo:SocietalEvent ;
                  dbo:commander ?commander .
  
  # Identify the military force involved in Pickett's Charge
  ?militaryForce dbo:partOf ?pickettsCharge .

  # Find the ruling party at the time of Pickett's Charge
  ?rulingParty a dbo:PoliticalParty, dbo:Organization ;
               dbo:partyMember ?partyMember .

  # Ensure the ruling party is in the death place of John McDermott
  ?rulingParty dbp:location ?deathPlace .
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
347,71,test,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:SocietalEvent ;
         a dbo:Event ;
         a dbo:TelevisionShow .
  
  ?militaryForce dbo:conflict dbr:Algerian_War .
  ?militaryForce dbo:commander ?commander .

  ?mariaAnna dbp:father ?fatherOfMariaAnna .
  ?childOfFather dbp:parent ?fatherOfMariaAnna .
  
  ?archdukeParent dbp:child dbr:Archduke_Charles_Joseph_of_Austria .
  ?grandChild dbp:parent ?archdukeParent .
  ?grandChild dbp:father ?commander .

  FILTER (?event = ?militaryForce)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
203,69,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Step 1: Identify ""The Triple X's"" and their military conflict
  ?tripleX a dbo:MilitaryConflict .
  
  # Step 2: Find the commander of this military conflict
  ?tripleX dbo:commander ?commander .

  # Step 3: Determine the event related to this commander
  ?event dbo:relatedEvent ?commander .
  ?event a dbo:SocietalEvent .

  # Step 4: Identify the awardee of Knight Commander of the Order of the Bath connected to this societal event
  ?awardee dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?awardee dbo:relatedEvent ?event .

  # Step 5: Find the military force involved in the war linked to William Bayne
  ?war a dbo:MilitaryConflict ;
      dbo:militaryForce ?militaryForce .
  
  ?bayne dbr:William_Bayne_(Royal_Navy_officer) ;
        dbo:militaryForce ?militaryForce .

  # Step 6: Identify the commander associated with this war
  ?war dbo:commander ?finalCommander .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
737,67,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Archduchess Margarete Sophie of Austria's parent
  ?margareteSophie a dbo:Person ;
                  dbp:parent ?parent .

  # Predecessor of Carl, Duke of Württemberg
  ?carl dbr:Carl,_Duke_of_W%C3%BCrttemberg ;
        dbo:predecessor ?predecessor .

  # Descendants of Alexander of Württemberg (1804-1881)
  ?alexander a dbo:Person ;
             dbp:name ""Alexander of Württemberg"" ;
             dbp:birthday ""1804-09-24""^^xsd:date ;
             dbp:deathDate ""1881-10-6""^^xsd:date .

  # Find the child of the child (grandchild) of Alexander
  ?alexanderChild a dbo:Person ;
                  dbp:parent ?alexander .
  ?grandchild a dbo:Person ;
              dbp:parent ?alexanderChild .

  # The person we are looking for is a royalty and fits all criteria
  ?person a dbo:Royalty ;
          dbp:predecessor ?predecessor ;
          dbp:parent ?grandchild .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
87,28,test,"Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Janusz Kamiński's awards and nominations
  ?janusz a dbo:Person ;
          foaf:name ""Janusz Kamiński"" ;
          dbo:award ?award .

  # Find movies with Audrey Hepburn
  ?movie1 dbo:starring dbr:Audrey_Hepburn ;
          dbo:starring ?actor1 .

  # Find movies with Iliza Shlesinger
  ?movie2 dbo:starring dbr:Iliza_Shlesinger ;
          dbo:starring ?actor2 .

  # Ensure the actor is in both movies
  FILTER (?actor1 = ?actor2)

  # Get the spouse of this actor
  ?actor1 dbo:spouse ?spouse .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
905,70,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Step 1: Identify Béla IV of Hungary (predecessor of Stephen V)
  dbr:Béla_IV_of_Hungary dbo:spouse ?spouseBela .
  
  # Step 2: Find child of Béla IV who is royalty
  ?childBela dbo:parent dbr:Béla_IV_of_Hungary ;
            a dbo:Monarch .

  # Step 3: Identify the spouse of Maria of Bytom and their father
  dbr:Maria_of_Bytom dbo:spouse ?spouseMaria .
  ?fatherOfSpouse dbp:child ?spouseMaria ;
                  a dbo:Monarch .

  # Step 4: Find parent of this father who is royalty
  ?parentOfFather dbo:child ?fatherOfSpouse ;
                  a dbo:Monarch .

  # Step 5: Identify the spouse of the father of Philip I, Prince of Taranto
  dbr:Philip_I,_Prince_of_Taranto dbo:parent ?fatherPhilip .
  ?spouseFatherPhilip dbo:spouse ?fatherPhilip .

  # Final step: Find child of child from Step 2 who matches conditions in Steps 3 and 4
  ?childOfChild dbo:parent ?childBela ;
                a dbo:Monarch ;
                dbp:spouse ?spouseFatherPhilip .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
311,19,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M. and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Step 1: Identify the writer of ""Sappy""
  dbr:Sappy dbo:composer ?writer .

  # Step 2: Find band members of this writer
  ?bandMember dbo:member ?writer .
  
  # Step 3: Determine which band member is associated with R.E.M.
  ?remArtist dbo:associatedMusicalArtist ?bandMember ;
             a dbo:MusicalArtist ;
             dbp:name ""R.E.M.""@en .

  # Step 4: Find the associated musical artist of this person
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
80,69,test,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?person a dbo:Actor ;
          dbo:profession ?profession .
  
  # Connection to The Golden Master series
  ?author dbo:name ""James Luceno"" ;
          dbo:work ?goldenMasterWork .
  ?goldenMasterWork dbo:creator ?person .

  # Connection to What You Know (T.I. song)
  ?album dbr:Trap_Muzik ;
         dbo:producer ?producer .
  ?producer foaf:name ?nameProducer .
  FILTER(?nameProducer = ""DJ Toomp"")
  
  # Connection to Smartbomb (book) author's movie
  ?movie dbo:writer dbr:Matthew_Costello ;
         dbo:actor ?person .

}
ORDER BY ?professional
LIMIT 10
```",8,8,9,3,3,3,3,71,0,0,4,0,0.0,0
159,68,test,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderInWar ?successorCommander WHERE {
  # Find the television show and societal event related to Jean Baptist, Comte d'Arco
  ?tvShow dbo:subject dbr:Jean_Baptiste,_Comte_d%27Arco .
  ?societalEvent dbo:subject dbr:Jean_Baptiste,_Comte_d%27Arco .

  # Find the commander in the war related to these events
  ?commanderInWar dbo:related tvShow .
  ?commanderInWar dbo:related societalEvent .

  # Find the successor of this commander who is a politician and office holder
  ?successorCommander dbo:succeededBy ?commanderInWar .
  ?successorCommander a dbo:Politician ;
                     dbo:officeHolder true .

  # Ensure the force is related to Michał Kazimierz Pac
  ?force dbo:related dbr:M%C4%85dry_Micha%C5%82_Kazimierz_Pa%C5%84cz .
  
  # Reference to the writer of the work of George Ducas
  ?writer dbo:work dbr:George_Ducas .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,69,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of the administration, that is an event, of Anxo Quintana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v7 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?administration dbo:country dbr:Spain .
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  ?administration dbo:leader ?leader .
  ?leader foaf:name ""Anxo Quintana""@en .

  ?quiroz dbo:residenceCountry ?country .
  ?quiroz foaf:name ""Álvaro Quirós""@es .

  ?event dbo:office ?office .
  ?office dbo:holder ?leader .

  ?administration dbo:tenant ?tenant .
  FILTER (?tenant = ?quiroz)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
782,69,test,"Give me the reference to the real name of the band of Kim Wilson and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band1 ?band2 ?associatedArtist WHERE {
  # Kim Wilson's band
  ?kimWilson a dbo:MusicalArtist ;
             foaf:name ""Kim Wilson"" .
  ?kimBand dbo:musicalArtist ?kimWilson ;
           dbp:name ?band1 .

  # Eric Clapton's band member and their band
  ?ericClapton a dbo:MusicalArtist ;
               foaf:name ""Eric Clapton"" .
  ?claptonBandMember dbo:musicalArtist ?ericClapton ;
                     dbo:memberOf ?claptonBand .
  ?claptonBand dbp:name ?band2 .

  # Nick Curran's associated musical artist
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" .
  ?associatedPerson dbo:associatedMusicalArtist ?nickCurran ;
                    foaf:name ?associatedArtist .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
361,27,test,"Give me the professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find actors in ""Lasso the Moon""
  ?film a dbo:Film ;
        foaf:name ""Lasso the Moon""@en .
  
  ?film dbo:starring ?actor .

  # Find actor with alter ego related to ""The Shadow""
  OPTIONAL { 
    ?actor dbp:alterEgo dbr:The_Shadow .
  }

  FILTER EXISTS {
    ?actor a dbo:Actor .
  }
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
39,69,test,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Step 1: Find Bob Thompson's birth name
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson"" ;
       dbp:birthName ?bobBirthName .

  # Step 2: Find The Shadow's alter ego
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow"" ;
          dbp:alterEgo ?shadowAlterEgo .
  
  # Step 3: Identify the producer of Coke Studio Philippines
  ?producer a dbo:Person ;
            dbp:profession dbr:Music_Producer ;
            dbp:worksFor dbr:Coke_Studio_Philippines .

  # Step 4: Find the band associated with Bob Thompson's birth name
  ?band a dbo:MusicalBand ;
        dbo:member ?bobMember .
  ?bobMember foaf:name ?bobBirthName .

  # Step 5: Determine the professional link
  ?professional a dbo:Person ;
                dbp:profession ?commonProfession .
  
  FILTER(?bobBirthName = ?shadowAlterEgo)
  FILTER(?producer = ?professional)
}
```",8,9,9,3,3,3,3,71,0,0,4,0,0.0,0
23,27,test,Give me the entity in the country of Daniel Elahi Galán and party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  VALUES ?person { 
    dbr:Dani_Elahi_Galán 
    dbr:Roy_Barreras 
    dbr:Sofía_Petro
  }
  
  ?person dbo:nationality dbr:Colombia .
  OPTIONAL { ?person dbo:father ?father . }
  OPTIONAL { ?entity dbo:country dbr:Colombia . }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,68,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://dbpedia.org/property/father> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  # His father
  ?father dbo:childOf ?philip ;
          a dbo:Person .

  # His grandfather (father's parent)
  ?grandfather dbo:childOf ?father ;
               a dbo:Person .

  # Spouse of the grandfather
  ?spouse dbo:spouse ?grandfather .
  
  # Ensure all are royalty
  ?philip dbo:occupation dbr:Royalty .
  ?father dbo:occupation dbr:Royalty .
  ?grandfather dbo:occupation dbr:Royalty .
  ?spouse dbo:occupation dbr:Royalty .

  # Additional conditions involving Béla IV of Hungary and Maria of Bytom
  ?child a dbo:Person ;
         dbo:parent ?belavIChild ;
         dbo:occupation dbr:Royalty .
  
  ?belavIChild dbo:parent dbr:Béla_IV_of_Hungary .

  ?mariaSpouse dbo:spouse dbr:Maria_of_Bytom ;
               a dbo:Person ;
               dbo:occupation dbr:Royalty .

  ?fatherOfMariaSpouse dbo:childOf ?mariaSpouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
595,71,test,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Hillary Clinton's book
  ?book a dbo:Book ;
        dbo:author dbr:Hillary_Clinton .

  # Step 2: Find the war associated with a disease and societal event
  ?war dbo:type dbr:Disease ; 
       dbo:type dbr:SocietalEvent .

  # Identify the owner of USS Arcadia (ID-1605) involved in this war
  ?owner dbo:commanderInWar ?war ;
         dbo:owns dbr:USS_Arcadia_ID_1605 .

  # Step 3: Find the resident of Chappaqua, New York
  ?resident a dbo:Politician ;
            dbo:officeHolder true ;
            dbo:residence dbr:Chappaqua,_New_York .

  # The author of the work by the resident
  ?work a dbo:Book ;
        dbo:author ?resident .

  # Step 4: Find the spouse of the author (Hillary Clinton)
  ?person dbp:spouse ?spouse .
  FILTER (?person = dbr:Hillary_Clinton)
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
609,70,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Paulus Powell's birth place
  VALUES (?paulusPowell) { dbr:Paulus_Powell }
  ?paulusPowell dbo:birthPlace ?place1 .

  # Vince Gilligan's awardee's birth place
  ?vinceGilliganAward dbp:recipient ?awardee .
  FILTER (strstarts(str(?vinceGilliganAward), ""http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan""))
  ?awardee dbo:birthPlace ?place2 .

  # Author of El Deafo reference's birth place
  ?elDeafoReference dbo:author ?author .
  FILTER (strstarts(str(?elDeafoReference), ""http://dbpedia.org/resource/El_Deafo""))
  ?author a dbo:Writer ;
          dbo:nationality dbr:United_States .

  # Governor's birth place matching any of the above
  ?governor a dbo:Politician ;
            dbo:office dbr:Governor ;
            dbo:birthPlace ?governorBirthPlace .
  
  FILTER (?governorBirthPlace = ?place1 || ?governorBirthPlace = ?place2)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
89,70,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Saw Min Phyu's spouse and their child
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Saw_Min_Phyu .
  ?child dbo:parent ?spouse .

  # Min Hla Htut of Pyakaung's parent
  ?minHlaHtutParent dbo:child dbr:Min_Hla_Htut_of_Pyakaung .

  # Saw Shwe Khet's child and their father's spouse
  ?sawShweKhetChild dbo:parent ?father ;
                   a dbo:Royalty .
  ?fatherSpouse dbo:spouse ?father .

  # Predecessor of the child from step 1
  ?predecessor dbo:successor ?child .
}
```",8,11,9,3,3,3,3,71,1,0,0,1.0,1.0,1.0
263,27,test,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          dbp:birthName ""Hon. Mary Frances Bowes-Lyon"" .
  ?person dbo:childOf ?parent .
  ?parent dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en }
  OPTIONAL { ?person dbo:birthPlace dbr:Middlesex . }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
557,69,test,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalAlterEgo WHERE {
  # Find the professional alter ego of Kent Allard
  ?kentAllard a dbo:FictionalCharacter ;
              rdfs:label ""Kent Allard (print)""@en .
  
  OPTIONAL { ?kentAllard dbp:alterEgo ?professionalAlterEgo . }
  
  # Find the actor and producer of High Society Blues
  ?highSocietyBlues a dbo:Film ;
                    dbp:starring ?actorProducer ;
                    dbp:producer ?actorProducer .
  
  # Find the work produced by the same person for Cora Sue Collins
  ?coraSueCollins a dbo:Work ;
                  dbp:producer ?actorProducer .

}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
769,20,test,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find Tony Hollings' birthday
  dbr:Tony_Hollings dbo:birthday ?hollingsBirthday .

  # Find athletes who are soccer players and sports managers, born on that date
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?hollingsBirthday ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbo:SportsManager .
  
  # Check if they have been managers of Hong Kong C
  OPTIONAL {
    ?managerPosition dbo:agent ?athlete ;
                    dbo:organization dbr:Hong_Kong_C .
  }
}
```",6,16,7,3,2,3,2,20,0,0,2,0,0.0,0
859,19,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Step 1: Find a member of Khlyst (band) who is also a musical artist
  ?member dbo:memberOfBand dbr:Khlyst_(band) .
  ?member a dbo:MusicalArtist .

  # Step 2: Find the associated musical artist of that member
  ?member dbp:associatedActs ?associatedArtist1 .
  
  # Step 3: Identify the band/group associated with Burnt by the Sun (band)
  dbr:Burnt_by_the_Sun_(band) dbo:genre ?genre .
  ?associatedBand a dbo:MusicalGroup ;
                  dbo:genre ?genre .

  # Step 4: Find a band member of this associated band/group
  ?member1 dbo:memberOfBand ?associatedBand .
  
  # Ensure the associated artist from step 2 is linked to the band member found in step 4
  ?member1 dbp:associatedActs ?associatedArtist1 .

  # Return the final associated musical artist
  BIND(?associatedArtist1 AS ?associatedArtist)
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
557,68,test,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?movie a dbo:Film .
  
  # Find the movie ""Johnny Doughboy"" and its actor
  ?actor dbo:actedIn ?johnnyDoughboy .
  ?johnnyDoughboy rdfs:label ""Johnny Doughboy""@en .

  # Find the alter ego of Kent Allard (The Shadow)
  ?fictionalCharacter dbo:alterEgoOf dbr:Lamont_Cranston .
  
  # Find Janet Gaynor's work and its producer
  ?janetGaynorMovie dbo:starring dbr:Janet_Gaynor .
  ?janetGaynorMovie dbo:producer ?producer .

  FILTER(CONTAINS(LCASE(?actor), ""robert taylor""))
  FILTER(CONTAINS(LCASE(?fictionalCharacter), ""the shadow""))
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
203,70,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?person dbo:awardReceived dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  ?war a dbo:MilitaryConflict ;
      dbo:eventType ?eventType .

  FILTER(?eventType IN (dbr:SocietalEvent, dbr:MilitaryConflict)).

  ?person dbo:militaryForceInWar ?militaryForce .
  ?militaryForce dbo:partOfWar ?war .

  ?bayne dbr:William_Bayne ;
         dbo:referenceTo ?person .

  ?commanderPosition a dbo:CommanderPosition ;
                     dbo:involvesMilitaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot ;
                     dbo:involvesPerson ?person .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,70,test,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?samProfession ?bandName ?alterEgo WHERE {
  # Sam Concepcion's profession
  ?sam a dbo:MusicalArtist ;
       foaf:name ""Sam Concepcion"" .
  ?sam dbo:profession ?samProfession .

  # Bob Thompson's birth name and associated band
  ?bob a dbo:MusicalArtist ;
       dbp:birthName ""Bob Thompson"" .
  OPTIONAL { ?band dbo:member ?bob ; foaf:name ?bandName . }

  # Walter B. Gibson's fictional character creation
  ?gibson a dbo:Writer ;
          foaf:name ""Walter B. Gibson"" .
  ?character dbo:creator ?gibson ;
             foaf:name ?alterEgo .
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
737,68,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria and child of the child of the child of Alexander of Württemberg (1804-1881).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Archduchess Helena of Austria and her spouse
  ?helena a dbo:Person ;
          foaf:name ""Helena, Duchess of Württemberg"" ;
          dbp:spouse ?spouse .

  # Step 2: Their child who is royalty
  ?child1 dbo:parent ?spouse ;
         dbo:parent ?helena ;
         a dbo:Royalty .

  # Step 3: Predecessor of the spouse of this child
  ?child1 dbp:spouse ?spouseChild1 .
  ?predecessor dbo:successor ?spouseChild1 .

  # Step 4: Archduke Charles Louis of Austria and his child who is royalty
  ?charles a dbo:Person ;
           foaf:name ""Charles Louis, Duke of Teschen"" ;
           dbp:child ?child2 .
  
  ?child2 a dbo:Royalty .

  # Step 5: Child of this child who is royalty
  ?grandChild1 dbo:parent ?child2 ;
              a dbo:Royalty .

  # Step 6: Alexander of Württemberg and his great-grandchild who is royalty
  ?alexander a dbo:Person ;
             foaf:name ""Alexander, Duke of Württemberg"" ;
             dbp:birthday ""1804-09-29""^^xsd:date ;
             dbp:deathDate ""1881-03-6""^^xsd:date .

  ?grandChild2 dbo:parent ?greatGrandParent .
  ?greatGrandParent dbo:parent ?grandParent .
  ?grandParent dbo:",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
557,70,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Actor of ""High Society Blues""
  ?actor dbo:actedIn dbr:High_Society_Blues .
  
  # Professional in the alter ego of ""The Shadow""
  ?shadowActor dbo:profession dbr:The_Shadow_Alter_Ego ;
               dbo:actedIn ?shadowWork .

  # Producer of a work related to the actor of ""Johnny Doughboy""
  ?johnnyDoughboyActor dbo:actedIn dbr:Johnny_Doughboy .
  ?producer dbo:produced ?work1 .
  
  # Linking conditions
  FILTER(?actor = ?shadowActor)
  ?producer dbo:produced ?work2 .
  FILTER(?johnnyDoughboyActor != ?actor)

  # Ensure the producer is common to both works
  OPTIONAL { ?work1 dbp:starring ?actor . }
  OPTIONAL { ?work2 dbp:starring ?johnnyDoughboyActor . }

}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
386,27,test,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?war ?awardNumber WHERE {
  ?person dbo:awardsReceived dbr:Golden_Sword_for_Bravery .
  ?person dbo:nationality dbr:Russian_Empire .
  
  ?person dbo:participatedInWar ?war .
  
  OPTIONAL { 
    ?person dbp:awardNumber ?awardNumber .
    FILTER (?awardNumber = ""25"")
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
103,67,test,"Give me the actor of Dispatches from Elsewhere and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?politicianName WHERE {
  # Find the actor of ""Dispatches from Elsewhere""
  ?series a dbo:TVSeries ;
          dbp:title ""Dispatches from Elsewhere""@en .
  
  ?series dbo:starring ?actor .
  ?actor foaf:name ?actorName .

  # Get the profession of this actor
  ?actor dbo:profession ?profession .

  # Find a politician with the same profession
  ?politician a dbo:Politician ;
              dbp:profession ?profession .
  
  ?politician foaf:name ?politicianName .

  # Find the alter ego in ""The Shadow"" (video game)
  ?gameSeries a dbo:VideoGame ;
              dbp:title ""The Shadow""@en .
  
  ?gameSeries dbo:character ?alterEgo .
  
  # Find a comics character with this alter ego
  ?comicsCharacter a dbo:ComicsCharacter ;
                   foaf:name ?alterEgo .

}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
628,67,test,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida and band member of Uncle Murda.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardName WHERE {
  # Step 1: Identify the award that is a region, American state, and settlement
  ?award dbo:type/dbo:subClassOf* (dbo:Region ; dbo:AmericanState ; dbo:Settlement) .
  
  # Step 2: Find the awardee band from New York (state)
  ?band dbo:awardsReceived ?award ;
        dbo:birthPlace dbr:New_York_(state) ;
        a dbo:Band .

  # Step 3: Person born as the birth name of a musical artist from Florida
  ?person dbp:birthName ?birthName .
  ?floridaArtist dbp:birthName ?birthName ;
                 dbo:birthPlace dbr:Florida ;
                 a dbo:MusicalArtist .
  
  # Step 4: Band member of Uncle Murda
  ?uncleMurdaMember dbo:bandMemberOf dbr:Uncle_Murda ;
                    foaf:name ?personName .

  # Link the person to the band and Uncle Murda
  FILTER(?person = ?band)
  FILTER(?person = ?uncleMurdaMember)

}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,68,test,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v7 <http://dbpedia.org/property/author> ?v0 . ?v5 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Hillary Clinton's book and her spouse
  dbr:Hillary_Clinton dbo:authorOf ?work .
  ?work a dbo:Book .

  ?spouse dbo:spouse dbr:Hillary_Clinton ;
          a dbo:Politician, dbo:OfficeHolder .

  # Spouse's role in the war (disease and societal event)
  ?war a dbo:Disease, dbo:SocietalEvent .
  
  ?commander dbo:commanderOf ?war ;
             dbo:nationality dbr:United_States_Navy ;
             dbp:spouse ?spouse .

}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
89,67,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?child1 dbo:parent dbr:Saw_Shwe_Khet .
  ?child1 a dbo:Royalty .

  ?father dbo:child ?child1 .
  ?father a dbo:Royalty .

  ?father dbp:spouse ?spouse .

  ?child2 dbo:parent dbr:Saw_Min_Hla .
  ?child3 dbo:predecessor ?child2 .

  ?spouse2 dbp:spouse ?child3 .
  ?spouse2 a dbo:Royalty .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
293,70,test,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyMember WHERE {
  # Ruling party member in Central, Louisiana
  ?central a dbo:PopulatedPlace ;
           dbo:country dbr:United_States ;
           dbp:stateOrProvince dbr:Louisiana .
  
  ?rulingParty dbo:member ?person .
  ?person dbo:residence ?central .

  # Spouse of the actor in Nat Levine's film
  ?natLevine a dbo:FilmProducer ;
             dbo:filmProduced ?film .
  
  ?film dbo:actor ?actor .
  ?actor foaf:mbox ?actorEmail .
  
  ?spouse foaf:mbox ?spouseEmail .
  ?actor foaf:account ?actorAccount .
  ?actorAccount foaf:accountServiceHomepage ?serviceHomepage .
  ?spouse foaf:account ?spouseAccount .
  ?spouseAccount foaf:accountServiceHomepage ?sameServiceHomepage .
  
  FILTER(?serviceHomepage = ?sameServiceHomepage) .

  # Person born as the birth name of Tisha Sterling's parent
  ?tishaSterling a dbo:Person ;
                 dbp:name ""Tisha Sterling""^^xsd:string ;
                 dbo:parent ?parent .
  
  ?parent foaf:name ?parentName ;
          dbp:birthName ?birthName .

  # Combine conditions to find the party member who matches all criteria
  FILTER(?person = ?spouse && ?personBirthName = ?birthName)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
80,70,test,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?song ?albumActor ?movieActor WHERE {
  # Find a song by T.I. that is also a musical work
  ?song dbo:artist dbr:T.I. ;
        a dbo:Songs .

  # Get the album of the song
  ?album dbo:song ?song .
  
  # Find actors associated with the album (e.g., featured artists)
  ?albumActor dbp:featuredInAlbum ?album .

  # Identify movies related to the album or its artists
  OPTIONAL {
    ?movie dbo:starring ?albumActor ;
           a dbo:Film .
    
    # Get actors from these movies
    ?movie dbo:starring ?movieActor .
  }

  # Find works related to ""The Golden Master"" series and their actors
  OPTIONAL {
    ?work dbp:title ?goldenMasterSeries ;
          dbo:performer ?actor .

    ?actor dbo:roleInFilm ?filmRole .
    
    # Get actors from these films
    ?filmRole dbo:starring ?movieActor .
  }
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
143,20,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Step 1: Find Cynthia Morgan's birth name
  ?cynthia a dbo:MusicalArtist ;
           foaf:name ""Cynthia Morgan"" ;
           dbp:birthName ?birthName .

  # Step 2: Identify the movie associated with Afeez Oyetoro
  ?afeez a dbo:Actor ;
         foaf:name ""Afeez Oyetoro"" ;
         dbo:actedIn ?movie .
  
  # Step 3: Find the person who shares Cynthia Morgan's birth name and is connected to the movie
  ?person dbp:birthName ?birthName ;
          dbo:actedIn ?movie .

  # Get the associated musical artist of this person
  ?associatedArtist a dbo:MusicalArtist ;
                    dbo:associatedWith ?person .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
258,20,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?eleonoraAlmaMater ?luizaAlmaMater ?foundingDate WHERE {
  # Eleonora Menicucci
  ?eleonora a dbo:Politician ;
            foaf:name ""Eleonora Menicucci"" ;
            dbp:birthName ?eleonoraBirthName .
  
  # Alma mater of Eleonora Menicucci
  ?eleonoraAlmaMater a dbo:EducationalInstitution, dbo:University, dbo:Organization ;
                     dbo:alumni ?eleonora .

  # Luiza Erundina
  ?luiza a dbo:Politician ;
         foaf:name ""Luiza Erundina"" .
  
  # Alma mater of Luiza Erundina
  ?luizaAlmaMater a dbo:EducationalInstitution, dbo:University, dbo:Organization ;
                  dbo:alumni ?luiza .

  # Founding date of Luiza Erundina's alma mater
  OPTIONAL { ?luizaAlmaMater dbp:foundingDate ?foundingDate . }
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
78,27,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalArtist WHERE {
  # Step 1: Find writer of ""Wizards of Waverly Place (soundtrack)""
  ?album dbo:genre dbr:Soundtrack .
  ?album dbp:title ""Wizards of Waverly Place (soundtrack)"" .
  ?album dbo:composer ?writer .
  ?writer a dbo:MusicalArtist .

  # Step 2: Find associated artist of Stuart Tosh
  dbr:Stuart_Tosh dbo:member ?band .
  ?band dbo:member ?associatedArtist .

  # Step 3: Find band member of the musical artist associated with David Paton
  ?artist dbo:member ?band .
  ?band dbo:member ?bandMember .
  ?artist dbp:associatedMusicalArtist dbr:David_Paton .

  # Combine results to find the final artist
  FILTER(?writer = ?associatedArtist)
  FILTER(?associatedArtist = ?artist)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
258,19,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?foundingDate WHERE {
  # Find Eleonora Menicucci by her birth name and retrieve her alma mater
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci"" ;
          dbp:birthName ""Eleonora Menicucci"" .
  
  OPTIONAL { 
    ?person dbp:almaMater ?almaMater . 
  }
  
  # Find the Federal University of Paraíba and its founding date
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
78,28,test,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person1 a dbo:MusicalArtist .
  ?person1 foaf:name ""Stuart McBeath Tosh"" .
  ?person2 a dbo:MusicalArtist ;
           dbo:bandMember dbr:Average_White_Band ;
           dbo:associatedBandMember ?commonArtist .
  ?person3 a dbo:MusicalArtist ;
           dbo:composerOf dbr:Wizards_of_Waverly_Place_(soundtrack) ;
           dbo:associatedBandMember ?commonArtist .
  ?commonArtist foaf:name ?artist .
}
```",6,9,7,2,3,2,3,28,0,0,2,0,0.0,0
345,9,test,"Give me the reference to the name of Mitaka, Tokyo and region of the time zone of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v3 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mitakaName ?regionName ?timeZone WHERE {
  dbr:Mitaka a dbo:PopulatedPlace .
  dbr:Mitaka dbo:partOf dbr:Tokyo .
  dbr:Mitaka dbo:locatedIn dbr:Japan .

  OPTIONAL { 
    dbr:Mitaka dbp:name ?mitakaName . 
  }

  OPTIONAL {
    ?region a dbo:Region ;
            dbo:containsPlace dbr:Mitaka ;
            dbp:name ?regionName .
  }

  OPTIONAL {
    dbr:Japan dbp:timeZone ?timeZone .
  }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
353,70,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Constance of Burgundy's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Constance_of_Burgundy .

  # Spouse's child (royalty)
  ?child1 dbo:parent ?spouse ;
          a dbo:RoyalFamilyMember .

  # Child's child (the person we want to find)
  ?childOfChild dbo:parent ?child1 .

  # Reference royalty and office holder related to William I
  ?reference a dbo:RoyalFamilyMember, dbo:OfficeHolder ;
             dbo:relatedTo dbr:William_I_of_Aquitaine .

  # Child of the reference
  ?child2 dbo:parent ?reference .

  # Parent of Roger III, Duke of Apulia
  ?rogerIIIParent dbo:child dbr:Roger_III,_Duke_of_Apulia .

  # Ensure childOfChild is related to the parent of Roger III
  ?childOfChild dbo:parent ?rogerIIIParent .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
492,28,test,Give me the death place of the actor of Aladdin (1958 film) and death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for Aladdin (1958 film)
SELECT ?actorName ?deathPlace WHERE {
  ?film a dbo:Film .
  ?film dbp:title ""Aladdin (1958 film)""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}

# Query for Color Me Dead
SELECT ?actorName ?deathPlace WHERE {
  ?film a dbo:Film .
  ?film dbp:title ""Color Me Dead""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}

# Query for The Sky Ranger (1928 film)
SELECT ?actorName ?deathPlace WHERE {
  ?film a dbo:Film .
  ?film dbp:title ""The Sky Ranger""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
737,71,test,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v7 . ?v8 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Alexander of Württemberg's descendants up to three generations
  ?alexander a dbo:Person ;
             dbp:name ""Alexander of Württemberg"" ;
             dbp:birthYear ""1804""^^xsd:gYear ;
             dbp:deathYear ""1881""^^xsd:gYear .
  
  ?child1 dbo:parent ?alexander ;
          dbo:child ?grandchild1 .

  ?grandchild1 dbo:parent ?child1 ;
               dbo:child ?greatGrandchild1 .

  ?greatGrandchild1 dbo:parent ?grandchild1 ;
                    dbo:child ?thirdGenerationChild .

  # Archduchess Margarete Sophie of Austria's parent and their child
  ?margareteSophie a dbo:Person ;
                   dbp:name ""Archduchess Margarete Sophie of Austria"" .
  
  ?parentMargareteSophie dbo:child ?margareteSophie .

  ?royaltyChildMargareteSophie dbo:parent ?parentMargareteSophie ;
                               dbo:child ?nextInLine .

  # Archduchess Helena of Austria's spouse and their child
  ?helena a dbo:Person ;
          dbp:name ""Archduchess Helena of Austria"" .
  
  ?spouseHelena dbo:marrigePartner ?helena ;
                dbo:child ?royaltyChildHelena .

  ?predecessor dbr:predecessorOf ?royaltyChildHelena .

  # Find the common individual
  FILTER (?thirdGenerationChild = ?nextInLine && ?nextInLine = ?predecessor)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
375,27,test,Give me the war of the child of Toyotomi Hideyoshi and war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  # Toyotomi Hideyori's involvement in wars
  ?hideyori a dbo:Person ;
            dbp:father dbr:Toyotomi_Hideyoshi ;
            dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?event dbo:agent ?hideyori ;
           dbo:subject ?war .
  }
  
  # Tokugawa Ieyasu's involvement in wars
  ?ieyasu a dbo:Person ;
          dbp:birthName ""Koichirō""^^xsd:string ;
          dbo:nationality dbr:Japan .

  OPTIONAL { 
    ?event2 dbo:agent ?ieyasu ;
            dbo:subject ?war .
  }
}
ORDER BY ?war
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
19,9,test,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in the birth name of John Boxer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Caroline Louise Bevan Symonds"" .
  OPTIONAL { ?person foaf:name ""John Boxer""@en . }
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
198,70,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date .
  
  # Check if the person was awarded something related to Quincy Adams Gillmore
  OPTIONAL { 
    ?award dbo:recipient ?person ;
           dbp:awardee ?gillmoreRecipient .
    ?gillmoreRecipient foaf:name ""Quincy Adams Gillmore""@en .
  }
  
  # Check if the person received the Medal of Honor
  OPTIONAL {
    ?medalAward dbo:recipient ?person ;
                dbp:award ""Medal of Honor"" .
  }

  # Ensure the birthplace is a settlement in America
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

}
LIMIT 1
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
270,9,test,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at the birth place, that is a settlement, of Mark Tournier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Ada Jane Low's politician resource
  ?adaJaneLow a dbo:Politician ;
              foaf:name ""Ada Jane Low"" ;
              dbp:birthName ""Ada Jane Low"" .

  # Find Mark Tournier's birth place
  ?markTournier a dbo:Person ;
                foaf:name ""Mark Tournier"" .
  ?markTournier dbo:birthPlace ?birthPlace .

  # Ensure the predecessor is related to Ada Jane Low
  ?predecessor dbo:successor ?adaJaneLow .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
742,20,test,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?birthPlace WHERE {
  # Identify the university
  dbr:Plovdiv_University_Paisii_Hilendarski dbo:alumni ?alumnus .
  
  # Find the birthplace of the alumnus
  ?alumnus dbo:birthPlace ?birthPlace .

  # Ensure the residence is in a settlement within the Eastern European Time zone
  ?alumnus dbo:residence ?residence .
  ?residence dbo:timeZone dbr:Eastern_European_Time .
  
  FILTER (?residence a dbo:Settlement)
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
687,69,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team WHERE {
  # Step 1: Get Marcelo Sarmiento's birthday
  VALUES (?marceloSarmientoBirthday) {
    { SELECT ?birthday WHERE { dbr:Marcelo_Sarmiento dbo:birthday ?birthday } }
  }

  # Step 2: Find soccer players and managers born on that date
  ?soccerPerson a dbo:SoccerPlayer ;
                dbo:birthday ?marceloSarmientoBirthday ;
                OPTIONAL { ?soccerPerson dbo:sportManagerOf ?team . }
                OPTIONAL { ?soccerPerson dbo:playsFor ?team . }

  # Step 3: Get Marty Pollio's birthday
  VALUES (?martyPollioBirthday) {
    { SELECT ?birthday WHERE { dbr:Marty_Pollio dbo:birthday ?birthday } }
  }

  # Step 4: Find athletes born on that date
  ?athletePerson a dbo:Athlete ;
                 dbo:birthday ?martyPollioBirthday .

  # Step 5: Identify actors who are soccer players and athletes in ""All or Nothing: Manchester City""
  ?actorPerson a dbo:Actor ;
               dbo:playsInFilm dbr:All_or_Nothing:_Manchester_City ;
               dbo:soccerPlayerOfTeam ?team ;
               dbo:athleteOfSport ?sport .

  # Step 6: Ensure the person is common across all criteria
  FILTER (?soccerPerson = ?athletePerson && ?soccerPerson = ?actorPerson)

  # Return the team of this person
  OPTIONAL { ?soccerPerson dbo:playsFor ?team }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
668,71,test,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v8 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person dbp:birthName ?birthName .
  FILTER(?birthName IN (""$pacely_birth_name"", ""ghana_artist_birth_name""))
  ?person a dbo:MusicalArtist .
  ?person foaf:name ?artist .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
159,70,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor WHERE {
  # Commander in the Battle of Vienna
  ?battle a dbo:MilitaryConflict ;
          dbo:participatingMilitaryForce [
            dbo:commander ?commander ;
            dbo:name ""Holy Roman Empire""^^xsd:string .
          ] .

  FILTER(?battle = dbr:Battle_of_Vienna) .

  # Television show and societal event (symbolic)
  OPTIONAL {
    ?commander dbo:wikiPageWikiLink ?tvShow .
    ?commander dbo:wikiPageDisambiguates ?societalEvent .
  }

  # Reference to the writer of the work of George Ducas
  OPTIONAL {
    ?ducas a dbo:Writer ;
           dbo:work ?work .
    ?successor dbo:predecessor ?ducas .
  }

  # Successor in Russo-Polish War (1654–1667)
  OPTIONAL {
    ?war a dbo:MilitaryConflict ;
         dbo:name ""Russo-Polish War (1654–1667)""^^xsd:string ;
         dbo:participatingMilitaryForce [
           dbo:commander ?successor .
         ] .
  }

  # Ensure the commander is also a politician and office holder
  ?commander a dbo:Politician, dbo:OfficeHolder .

}
ORDER BY ?commander
LIMIT 10
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
513,20,test,"Give me the entity in the award of the reference to George Hamilton Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/leader> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/residence> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find an award associated with George Hamilton Cameron
  ?award dbo:recipient dbr:George_Hamilton_Cameron .
  
  # Find the leader of a political party linked to George Savage (politician)
  ?party dbo:leader ?leader .
  ?leader dbp:residence ?residence .
  ?savage dbo:affiliation ?party ;
          foaf:name ""George Savage"" .

  # The entity should be both an organisation and a political party
  ?entity rdf:type dbo:Organization, dbo:PoliticalParty .
  
  # Link the award's reference to the residence of the leader
  ?award dbp:reference ?residence .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
347,70,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Maria Anna of Bavaria's children
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria"" ;
             dbp:spouse ?husband .
  
  ?child dbo:parent ?mariaAnna ;
         dbo:parent ?husband .

  # Father of the child (one of Maria Anna's husbands)
  ?father dbo:spouse ?mariaAnna ;
          dbo:spouse ?otherSpouse .

  # Grandchildren of Maria Anna
  ?grandchild dbo:parent ?child ;
              dbo:parent ?father .
  
  # Filter by royalty
  ?grandchild a dbo:Royalty .

  # Archduke Charles Joseph's parent
  ?charlesJoseph a dbo:Person ;
                 foaf:name ""Archduke Charles Joseph of Austria"" ;
                 dbo:parent ?parent .

  # Commander in the war and societal event
  ?commander dbo:memberOf dbr:2nd_Dragoon_Regiment_(France) ;
             dbo:event ?event .
  
  FILTER EXISTS { ?event a dbo:SocietalEvent . }
  FILTER EXISTS { ?event a dbo:Event . }
  FILTER EXISTS { ?event a dbo:TelevisionShow . }

  # Linking the commander to the grandchild
  ?grandchild dbo:commander ?commander .

}
LIMIT 10
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,69,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Mariclare Costello and her spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello"" .
  
  ?spouse dbo:spouse ?mariclare ;
          dbo:child ?child .

  # Photographer parent of the child
  ?photographer dbo:profession dbr:Photographer ;
                dbo:parent ?spouse .

  # Person decedent at Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles_County,_California ;
            dbo:child ?spouse .
  
  # Movie associated with the decedent
  ?movie dbo:actor ?decedent ;
         a dbo:Film .

  # Actor of the movie
  ?actor dbo:actor ?movie .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
871,70,test,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .

  # Child of Edward Stanley who is an awardee of Commander of the Royal Victorian Order
  ?child dbp:honours ""Commander of the Royal Victorian Order""@en .

  # Grandchildren of Edward Stanley (children of his children)
  ?child dbo:child ?grandChild .

  # Alumnus of Eton College who is a politician
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?alumnus a dbo:Politician .

  # Child of the alumnus (Edward Stanley's grandchild)
  ?alumnus dbo:child ?grandChild .

  # Parent of this child is Edward Stanley
  ?parent dbo:child ?alumnus .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
472,27,test,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?administrationRole ?mayorName WHERE {
  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?person a dbo:Person ;
          foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  
  OPTIONAL {
    ?person dbo:positionHeld ?administrationRole .
  }
  
  # Find the mayor of Duchy of Schleswig
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Duchy_of_Schleswig ;
         foaf:name ?mayorName .
  
  OPTIONAL {
    ?copenhagenAdmin a dbo:GovernmentOfficial ;
                    dbo:administers dbr:Copenhagen ;
                    foaf:name ?administrationRole .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
295,19,test,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of the producer of Storm in a Teacup (film).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  # Step 1: Identify the producer of ""Storm in a Teacup""
  dbr:Storm_in_a_Teacup dbo:producer ?producer .

  # Step 2: Determine the birthplace of this producer
  ?producer dbo:birthPlace ?birthPlace .
  
  # Step 3: Find musical works by Apache Indian with a writer
  dbr:Apache_Indian dbo:musicalWork ?musicalWork .
  ?musicalWork dbo:writer ?writer .

  # Step 4: Ensure the writer is native to the birthplace of the producer
  ?writer dbo:birthPlace ?birthPlace .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
687,68,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v5 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team WHERE {
  # Find the soccer player and manager born on 1979-11-03
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbp:birthday ""1979-11-03""^^xsd:date ;
          dbo:playsFor ?team .

  # Find an actor who is also a soccer player and athlete in a film by Manuel Huerga
  ?actor a dbo:Actor ;
         a dbo:SoccerPlayer ;
         a dbo:Athlete ;
         dbo:actedIn ?film .
  ?film dbo:director dbr:Manuel_Huerga .

  # Ensure the actor played with someone born on Marty Pollio's birthday
  ?castMember a dbo:CastMember ;
              dbo:characterName ?actor ;
              dbo:film ?film .
  ?otherPerson a dbo:Athlete ;
               dbp:birthday ?martyBirthday .
  ?martyPollio foaf:name ""Marty Pollio"" ;
               dbp:birthday ?martyBirthday .

  # Link the actor and the person born on Marty Pollio's birthday
  ?castMember dbo:characterName ?otherPerson .

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
59,9,test,"Give me the native of the residence of David Luckman and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # David Luckman's residence
  ?david a dbo:Person ;
         foaf:name ""David Luckman"" ;
         dbo:residence ?residence .

  # Sports club and soccer club
  ?club a dbo:SportsClub, dbo:SoccerClub .

  # Manager of the player Jamie McCunnie
  ?player a dbo:FootballPlayer ;
          foaf:name ""Jamie McCunnie"" .
  ?manager a dbo:SportsManager ;
           dbo:managedTeam ?team .
  ?team dbo:member ?player .
  
  # Native of the residence and manager connection
  ?native dbo:nativePlace ?residence ;
          dbo:manages ?club .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
263,28,test,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?claude a dbo:Person ;
          foaf:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .

  # Step 2: Find his child who is the parent of Hon. Mary Frances Bowes-Lyon
  ?child dbo:parent ?claude ;
         dbo:child ?maryFrances .
  
  ?maryFrances foaf:name ""Hon. Mary Frances Bowes-Lyon""@en .

  # Step 3: Determine the birthplace of William Gayner, which is a region and a country
  ?williamGayner a dbo:Person ;
                 foaf:name ""William Gayner""@en .
  
  ?williamGayner dbo:birthPlace ?birthPlace .
  ?birthPlace (dbo:country|dbo:region) ?placeType .

  # Step 4: Identify the person native to this birthplace
  ?nativePerson dbo:birthPlace ?birthPlace ;
                a dbo:Person .

  # Find the parent of this native person
  ?parent dbo:child ?nativePerson .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
557,67,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Step 1: Actor of ""High Society Blues"" who is also a producer
  ?actor1 dbo:actedIn dbr:High_Society_Blues .
  ?actor1 dbo:occupation dbo:FilmProducer .

  # Step 2: Actor of ""Johnny Doughboy""
  ?actor2 dbo:actedIn dbr:Johnny_Doughboy .

  # Step 3: Common work produced by the first actor and acted in by the second
  ?commonWork dbo:producer ?actor1 ;
              dbo:starring ?actor2 .

  # Step 4: Producer of that common work
  ?commonWork dbo:producer ?producer .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
668,70,test,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Step 1: Find musical artists who are writers of ""The Live Anthology""
  ?artist a dbo:MusicalArtist .
  ?artist dbo:work dbr:The_Live_Anthology .

  # Step 2: Identify individuals born as Elorm Kabu Amenyah
  ?person dbp:birthName ""Elorm Kabu Amenyah"" .

  # Step 3: Locate artists from the Central Region of Ghana
  ?artist dbo:birthPlace dbr:Central_Region,_Ghana .

  # Step 4: Connect these elements to find a professional in writing and music
  ?professional dbo:profession dbo:Writer ;
                dbo:profession dbo:MusicalArtist ;
                foaf:name ?name .

  # Ensure the person is associated with both Elorm Kabu Amenyah and the Central Region artist
  ?artist dbp:associatedWith ?person .
}
ORDER BY ?name
LIMIT 10
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,19,test,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Vera_Lynn ;
         dbo:workExample ?televisionShow .
  
  ?televisionShow a dbo:TelevisionSeries .

  ?artist a dbo:Artist, dbo:MusicalArtist ;
          dbo:nationality dbr:England ;
          dbo:birthPlace ?settlement .
  
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  ?parent dbo:child ?artist .
  ?movie dbo:creator ?parent .

  ?author dbp:creatorOf ?movie .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
557,71,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v7 <http://dbpedia.org/ontology/knownFor> ?v8 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Find actor of High Society Blues
  ?highSocietyBlues a dbo:Film .
  ?highSocietyBlues dbo:starring ?actor1 .

  # Find producer of work related to Johnny Doughboy
  ?johnnyDoughboyWork a dbo:Film .
  ?johnnyDoughboyWork dbo:producer ?producer .
  
  # Find actor of Johnny Doughboy
  ?johnnyDoughboyWork dbo:starring ?actor2 .

  # Find fictional character associated with Kent Allard (print)
  ?kentAllardRef a dbo:FictionalCharacter .
  ?kentAllardRef dbp:alterEgo ?fictionalCharacter .

  # Link the producer to all these roles
  ?producer dbo:produced ?highSocietyBlues .
  ?producer dbo:produced ?johnnyDoughboyWork .
  
  # Ensure actors are linked correctly
  FILTER (?actor1 = ?actor2)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
756,69,test,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v7 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Step 1: Find Theodor Heuss's country of administration
  dbr:Theodor_Heuss dbo:country dbr:Germany .
  
  # Step 2: Identify the sports manager born on 1968-08-26
  ?manager a dbo:SportsManager ;
          dbp:birthday ""1968-08-26""^^xsd:date ;
          dbo:managesTeam ?team .

  # Step 3: Find the player managed by this person in the successor of the 2006–07 VfL Bochum season
  ?player a dbo:SoccerClub ;
          dbo:playsForSeason ?season .
  
  ?successor dbr:""2007–08_VfL_Bochum_season"" ;
             dbo:succeeds dbr:""2006–07_VfL_Bochum_season"" .

  ?team dbo:participatesInSeason ?successor .
  ?player dbo:managedBy ?manager .

  # Step 4: Find the native of Germany (Theodor Heuss's country)
  ?nativeCountry a dbo:Person ;
                 dbo:nationality dbr:Germany ;
                 dbo:managesTeam ?team .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
723,19,test,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician) and band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Find Nate Newton's band
  ?nateNewton a dbo:MusicalArtist ;
              foaf:name ""Nate Newton"" .
  
  ?band a dbo:Band, dbo:Organization ;
        dbo:musicalArtist ?nateNewton .

  # Get the producer of ""Nothing to Gein""
  ?nothingToGein dbr:Nothing_to_Gein ;
                 dbo:producer ?producer .

  ?producer a dbo:Organization, dbo:Group .

  # Find band members of Nate Newton's band
  ?bandMember dbo:memberOfBand ?band .
  
  # Find band members of the producer of ""Nothing to Gein""
  OPTIONAL {
    ?producerMember dbo:memberOfBand ?producer .
    FILTER(?bandMember = ?producerMember)
  }
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
585,20,test,"Give me the child of the professional in the profession of Shirley Stoler and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v5 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Shirley Stoler and her profession
  dbr:Shirley_Stoler a dbo:Actor ;
                     dbo:spouse ?spouse .

  # Find an award associated with a place in New York (state)
  ?award dbo:recipient ?recipient .
  ?place a dbo:Settlement ;
         dbo:country dbr:United_States ;
         dbo:stateOrProvince dbr:New_York_(state) .
  ?award dbo:location ?place .

  # Find the child of Shirley Stoler
  ?spouse dbo:child ?child .
}
```",6,8,7,3,2,3,2,20,0,0,10,0,0.0,0
159,71,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find a television show that is also a societal event and related to a war
  ?tvShow a dbo:TelevisionSeries ;
          dbo:genre/dbo:subClassOf* dbo:SocietalEvent ;
          dbo:subject dbr:War .

  # Identify the commander in this war
  ?war dbo:commander ?commander .
  
  # Ensure the military force is related to the Battle of Vienna
  ?battle a dbo:MilitaryEngagement ;
         dbp:name ""Battle of Vienna"" ;
         dbo:militaryForce ?militaryForce .

  # Find the successor of a commander who is a politician and office holder
  ?commander dbo:successor ?successor .
  ?successor a dbo:Politician, dbo:OfficeHolder .

  # Ensure this involves Michał Kazimierz Pac
  ?event a dbo:MilitaryConflict ;
         dbo:participant ?michałKazimierzPac ;
         dbp:name ""Battle of Vienna"" .

  # Reference to the writer of work by George Ducas
  ?georgeDucas a dbo:Writer ;
               dbo:work ?work .
  ?reference dbo:referencedBy ?work .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
585,19,test,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in the profession of Shirley Stoler.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .

  ?award dbo:location dbr:AmericanSettlement .
  
  ?person dbp:profession ?profession .
  ?person dbo:childOf dbr:Shirley_Stoler .
  ?award dbo:recipient ?person .

  ?person dbo:nativePlace ?native .
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
198,67,test,"Give me the war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?force ?award ?settlement WHERE {
  # Amasa Tracy's war involvement
  ?tracy a dbo:Person ;
         foaf:name ""Amasa Tracy"" .
  ?tracy dbo:participatedIn ?war .

  # Quincy Adams Gillmore's award and force
  ?gillmore a dbo:Person ;
            foaf:name ""Quincy Adams Gillmore"" .
  ?gillmore dbo:award ?award .
  ?gillmore dbo:militaryUnit ?force .

  # Person deceased on 1850-08-05
  ?person a dbo:Person ;
          dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace ?settlement .
  FILTER (isLiteral(?settlement) && datatype(?settlement) = xsd:string)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
706,19,test,"Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Find individuals who are awardees of the Sangeet Natak Akademi Fellowship
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  
  # Ensure they acted in an Indian movie with Dipankar De
  ?movie dbo:starring ?person ;
         dbo:country dbr:India ;
         dbo:starring dbr:Dipankar_De .

  # Retrieve their birthplace
  ?person dbo:birthPlace ?birthPlace .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
398,19,test,Give me the figure known as the nickname of Russia national football team and player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?teamNickname ?playerName WHERE {
  # Find the Russia national football team and its nickname
  ?team a dbo:NationalSoccerTeam ;
        dbp:country dbr:Russia ;
        dbp:nickname ?teamNickname .

  # Find players associated with this team
  ?player dbo:playsForNationalTeam ?team ;
          foaf:name ?playerName .

  # Check if the player is also recognized as a writer by Aleksandr Filimonov
  OPTIONAL {
    ?writer dbr:Aleksandr_Filimonov dbo:writtenBy ?player .
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
943,70,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Yeshaq I and his father Zara Yaqob
  dbr:Yeshaq_I dbo:father dbr:Zara_Yaqob .

  # Zara Yaqob's father Dawit I
  dbr:Zara_Yaqob dbo:father dbr:Dawit_I .
  
  # Return the alter ego of Lamont Cranston
  ?alterEgo rdfs:label ""The Shadow""@en .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
119,67,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?office dbo:head ?person ;
          dbo:country dbr:Spain .

  ?person dbo:nationality dbr:Spain ;
          dbo:positionHeld ?position ;
          foaf:name ?name .

  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER(CONTAINS(LCASE(?position), ""president"") || CONTAINS(LCASE(?position), ""prime minister""))
}
ORDER BY ?name
LIMIT 1
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
468,19,test,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon and reference to the real name of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?realName WHERE {
  # Martin of Aragon's parent
  dbr:Martin_of_Aragon dbo:parent dbr:ParentOfMartin .

  # Parent is royalty and has children
  dbr:ParentOfMartin a dbo:Monarch .
  dbr:ParentOfMartin dbo:child ?child .

  # Peter IV of Aragon's real name
  dbr:Peter_IV_of_Aragon dbp:realName ?realName .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
119,20,test,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?warShow ?commander WHERE {
  ?warShow a dbo:MilitaryConflict ;
           a dbo:TelevisionSeries .
  
  ?commander dbo:commanded ?warShow ;
             dbo:leaderOf ?force .

  ?mariaI dbo:commanderIn ?warShow ;
          dbp:name ""Maria I of Portugal""^^xsd:string .

  ?athlete dbo:nativePlace dbr:Łódź ;
           a dbo:Athlete ;
           dbo:nationality dbr:Poland .
  
  ?athlete dbo:residence ?countryResidence .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
472,28,test,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/property/leader> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?administeredTerritory ?mayorOfDuchy ?administrationOfPrince WHERE {
  # Find Christian Ditlev Ammentorp Hansen's death place
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen"" ;
          dbo:deathPlace ?deathPlace .

  # Determine the territory administered from that settlement
  ?administeredTerritory dbo:administrativeCenter ?deathPlace .

  # Find the mayor of the Duchy of Schleswig
  ?mayorOfDuchy a dbo:Mayor ;
                dbp:office dbr:Duchy_of_Schleswig .

  # Identify Prince Christian of Schleswig-Holstein-Sonderburg-Beck and his administration
  ?prince a dbo:Person ;
          foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" ;
          dbp:birthName ""Christian of Schleswig-Holstein-Sonderburg-Beck"" .
  
  OPTIONAL { 
    ?administrationOfPrince dbo:administers ?prince .
  }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
531,67,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?miguelPartyLeaderOffice ?madridTenant ?manuelConflictRole WHERE {
  # Miguel Maura's political party
  ?miguel a dbo:Politician ;
          dbp:party dbr:Miguel_Maura_Political_Party .

  # Leader of the political party
  ?partyLeader a dbo:OfficeHolder, dbo:Politician ;
               dbp:office ?miguelPartyLeaderOffice ;
               dbp:party dbr:Miguel_Maura_Political_Party .

  # Tenant (leader) of Madrid
  ?madridTenant a dbo:OfficeHolder, dbo:Politician ;
                dbp:office ""Mayor of Madrid""^^xsd:string ;
                dbp:place dbr:Madrid .

  # Manuel Pinto da Costa's role in a military conflict
  ?manuel a dbo:OfficeHolder, dbo:Politician ;
          dbp:role ?manuelConflictRole ;
          dbo:conflict ?conflict .
  
  ?conflict a dbo:MilitaryConflict, dbo:SocietalEvent .

}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
225,19,test,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .

  ?person dbo:recipientOf ?award .
  ?person dbo:nationality dbr:Japan .

  OPTIONAL { 
    ?reference dbo:relatedTo ?award .
    ?reference a dbo:TelevisionShow .
  }

  ?person dbo:birthPlace ?place .
  FILTER (regex(str(?place), ""Japan Standard Time"", ""i""))

  BIND(?person AS ?entity)
}
LIMIT 10
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
58,20,test,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Step 1: Find Ian Gregson and an award associated with him
  ?ianGregson a dbo:Person ;
             foaf:name ""Ian Gregson"" ;
             dbo:award ?award .

  # Step 2: Find the movie related to this award
  ?movie dbo:awardsReceived ?award ;
         dbo:producer ?producer .

  # Step 3: Identify Linda Bruckheimer's birth name
  ?lindaBruckheimer a dbo:Person ;
                   foaf:name ""Linda Bruckheimer"" ;
                   dbp:birthName ?birthName .

  # Step 4: Find the spouse of the person born as Linda Bruckheimer's birth name
  ?spouse a dbo:Person ;
          dbp:birthName ?birthName ;
          dbo:spouse ?lindaBruckheimer .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
39,68,test,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Kid Rock"" .
  ?person dbp:birthName ""Robert Lamar Thompson"" .

  OPTIONAL { 
    ?person dbo:profession dbr:Coke_Studio_Philippines_producer .
  }

  ?band dbo:member ?person .
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
782,67,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMemberBand ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthday ""1945-03-30""^^xsd:date .
  
  # Connection to The Fabulous Thunderbirds
  ?person dbo:member dbr:The_Fabulous_Thunderbirds .

  # Find bands the person was a member of
  ?bandMemberBand dbo:member ?person .
  
  # Associated musical artist through Nick Curran's persona
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" .
  ?associatedArtist dbo:associatedMusicalArtist ?nickCurran .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
311,20,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Step 1: Find producer of Lotus (R.E.M. song)
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Step 2: Ensure the producer is an organization, band, and group
  ?producer a dbo:Organization ;
           a dbo:Band ;
           a dbo:MusicalGroup .

  # Step 3: Find associated musical artist of this producer
  ?artist dbo:associatedWith ?producer .
  
  # Step 4: Identify writer(s) of the album ""Sappy""
  dbr:Sappy_(album) dbo:writer ?writer .

  # Step 5: Ensure the writer is a band member
  ?writer dbo:bandMemberOf ?band .

  # Return associated artist if they match criteria
  BIND(?artist AS ?associatedArtist)
}
```",6,13,7,3,2,3,2,20,0,0,1,0,0.0,0
386,28,test,Give me the war of the awardee of Golden Sword for Bravery and war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?war1 ?war2 WHERE {
  # Step 1: Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Step 2: Identify awardees born in this place with the specified awards
  ?awardee dbo:birthPlace ?birthPlace .
  ?awardee dbo:award dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:award ?award25 .
  
  FILTER regex(str(?award25), ""25"", ""i"") # Assuming the award name contains '25'

  # Step 3: Find wars associated with these awardees
  OPTIONAL { ?awardee dbo:participatedInWar ?war1 . }
  OPTIONAL { ?awardee dbo:participatedInWar ?war2 . }

  FILTER(?war1 != ?war2) # Ensure different wars are selected if possible

}
ORDER BY ?awardee
LIMIT 10
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
80,68,test,"Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # The Shadow's alter ego
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .

  # Justin Timberlake as an actor in a movie with Tom Bissell
  ?movie dbo:writer dbr:Tom_Bissell .
  ?movie dbo:starring dbr:Justin_Timberlake .

  # Justin Timberlake's involvement in T.I.'s song ""Live Your Life""
  dbr:""Live_Your_Life_(T.I._song)"" dbo:featuring dbr:Justin_Timberlake .
  
  # Ensure the actor is Justin Timberlake
  ?actor rdfs:label ""Justin Timberlake""@en .
  FILTER(?actor = dbr:Justin_Timberlake)
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
871,71,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Edward Stanley, 17th Earl of Derby
  ?derby a dbo:Politician ;
         dbo:officeHolderOf ?office ;
         foaf:name ""Edward Stanley, 17th Earl of Derby"" .

  # Parent of the child of Edward Stanley
  ?childParent dbo:parentOf ?derbyChild .
  ?derbyChild dbo:parent ?derby .

  # Politician and alumnus of Eton College
  ?politician a dbo:Politician ;
              dbp:almaMater dbr:Eton_College ;
              dbo:child ?derbyChild .

  # Father of Rodney Lees' child
  ?leesChildParent dbo:parentOf ?rodneyLeesChild .
  ?rodneyLeesChild dbo:parent ?rodneyLees .

  ?awardee dbp:awardRecipient ?award ;
           foaf:name ""Rodney Lees"" .

  # The father of Rodney Lees' child is the same politician
  ?leesChildParent = ?politician .

  # Find the parent of the awardee (father of Rodney Lees' child)
  ?parent dbo:parentOf ?awardee .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
531,69,test,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenant WHERE {
  # Leader of the 2003 Madrid City Council election
  ?person1 dbo:officeHolderOf dbr:Madrid_City_Council .
  ?person1 dbo:electionYear ""2003""^^xsd:gYear .

  # Commander in the Central African Republic Civil War
  ?person2 dbo:officeHolderOf dbr:Central_African_Republic_Civil_War .
  ?person2 a dbo:Politician .

  # Leader of the party associated with Miguel Maura
  ?party dbp:foundedBy dbr:Miguel_Maura .
  ?person3 dbo:leaderOf ?party .
  ?person3 a dbo:Politician .

  # Find residences and tenants
  OPTIONAL { ?person1 dbo:residence ?residence1 . }
  OPTIONAL { ?person2 dbo:residence ?residence2 . }
  OPTIONAL { ?person3 dbo:residence ?residence3 . }

  OPTIONAL { ?residence1 dbo:tenant ?tenant . }
  OPTIONAL { ?residence2 dbo:tenant ?tenant . }
  OPTIONAL { ?residence3 dbo:tenant ?tenant . }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
353,71,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalPerson WHERE {
  # Step 1: Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Step 2: Spouse's child
  ?spouse dbo:child ?child .

  # Step 3: Child's child (grandchild)
  ?child dbo:child ?grandChild .
  
  # Step 4: Ensure grandchild is royalty
  ?grandChild a dbo:Monarch .

  # Step 5: Reference to William I
  ?reference a dbo:Monarch ;
             dbo:officeHolder ?office ;
             dbo:relatedTo dbr:William_I_of_Aquitaine .

  # Step 6: Parent of the child (royalty) of Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?siciyChild .
  ?parent dbo:child ?siciyChild .
  
  # Step 7: Final connection
  ?grandChild dbp:father ?reference .
  ?finalPerson dbp:mother ?parent .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
119,68,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  # Anxo Quintana as a leader in an administration
  ?administration dbo:leader dbr:Anxo_Quintana .
  
  # The event of his leadership
  ?event dbo:agent ?administration .

  # Spanish Socialist Workers' Party and its residence
  ?party dbp:name ""Spanish Socialist Workers' Party""@en ;
         dbo:headquarters ?residence .

  # Anxo Quintana's citizenship
  dbr:Anxo_Quintana dbo:nationality dbr:Spain .

  # The tenant of the residence (country)
  ?residence dbo:locationCountry ?tenant .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
668,63,val,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # For Tupac Shakur (Lesane Parish Crooks)
  VALUES (?birthName) { ""Lesane Parish Crooks"" }
  
  OPTIONAL {
    ?person dbp:birthName ?birthName .
    ?person dbo:profession dbr:Musician .
    ?association dbo:associatedMusicalArtist ?associatedArtist .
    ?association dbo:musicalArtist ?person .
  }

  # For Joey Badass (Jo-Vaughn Virginie Scott)
  VALUES (?birthName) { ""Jo-Vaughn Virginie Scott"" }
  
  OPTIONAL {
    ?person dbp:birthName ?birthName .
    ?person dbo:profession dbr:Musician .
    ?association dbo:associatedMusicalArtist ?associatedArtist .
    ?association dbo:musicalArtist ?person .
  }

  # For Rod Argent
  ?rodArgent a dbo:Person ;
             dbp:name ""Rod Argent"" ;
             dbo:profession dbr:Musician .

  OPTIONAL {
    ?association dbo:associatedMusicalArtist ?associatedArtist .
    ?association dbo:musicalArtist ?rodArgent .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
628,63,val,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeRegion WHERE {
  VALUES (?bobbyBirthName) { ""Rakim Mayers"" } # Known fact

  ?person dbp:birthName ?bobbyBirthName .
  ?bandMember dbo:memberOf ?associatedArtist .
  ?bandMember foaf:name ?person .

  ?award dbo:relatedTo dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  
  ?nativeRegion a dbo:State ;
               dbo:country dbr:United_States_of_America ;
               dbo:hasAwards ?award .

}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
103,65,val,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Actor in ""Ab Kya Hoga""
  ?abKyaHoga a dbo:Film ;
             dbo:starring ?actor1 .
  
  # Television show with Richard E. Grant
  ?tvShow a dbo:TVSeries ;
          dbo:starring ?actor2, dbr:Richard_E._Grant .

  # The person must be the same actor in both cases
  FILTER (?actor1 = ?actor2)

  # Alter ego is ""The Shadow""
  ?person dbp:alterEgo dbr:The_Shadow .

  # Person is a politician
  ?person dbo:occupation dbr:Politician .

  # Ensure the person is the same in all roles
  FILTER (?actor1 = ?person && ?actor2 = ?person)
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
585,18,val,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state) and child of the professional in Actress.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  ?award a dbo:Award ;
         dbo:location ?settlement ;
         dbo:country dbr:United_States .

  ?awardee dbo:recipientOf ?award ;
           dbo:nationality dbr:American ;
           dbo:birthPlace ?native .
  
  ?parent a dbo:Actress .
  ?awardee dbo:child ?parent .
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
412,25,val,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris and war of the leader of National Party of Greece.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/place> ?v4 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlaceEntity WHERE {
  # Antonios Varthalitis
  ?varthalitis a dbo:Person ;
               dbp:birthName ""Antonios Varthalitis"" ;
               dbo:deathPlace ?varthalitisDeathPlace .
  
  # Konstantinos Ventiris
  ?ventiris a dbo:Person ;
            dbp:birthName ""Konstantinos Ventiris"" ;
            dbo:deathPlace ?ventirisDeathPlace .

  # Leader of the National Party of Greece (assuming Eleftherios Venizelos)
  ?venizelos a dbo:Politician ;
             dbp:birthName ""Eleftherios Venizelos"" ;
             dbo:deathPlace ?venizelosDeathPlace .
  
  # Ensure death places are settlements
  ?varthalitisDeathPlace a dbo:Settlement ;
                         rdfs:label ?placeLabelVarthalitis .
  ?ventirisDeathPlace a dbo:Settlement ;
                      rdfs:label ?placeLabelVentiris .
  ?venizelosDeathPlace a dbo:Settlement ;
                       rdfs:label ?placeLabelVenizelos .

  # Find entities related to these places
  OPTIONAL { ?varthalitisDeathPlace dbo:wikiPageRedirects ?deathPlaceEntity . }
  OPTIONAL { ?ventirisDeathPlace dbo:wikiPageRedirects ?deathPlaceEntity . }
  OPTIONAL { ?venizelosDeathPlace dbo:wikiPageRedirects ?deathPlaceEntity . }

  FILTER(?deathPlaceEntity != dbr:Antonios_Varthalitis)
  FILTER(?deathPlaceEntity != dbr:Konstantinos_Ventiris)
  FILTER(?deathPlaceEntity != dbr:Eleftherios_Venizelos)
}
ORDER BY ?deathPlaceEntity
LIMIT 10
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
198,66,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity WHERE {
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date .
  
  ?medalHonorAward dbo:recipient ?person ;
                   dbo:conferralDate ?dateHonor ;
                   dbo:war ?war .

  ?gillmoreMedalAward dbo:recipient ?person ;
                      dbo:force ?force .

  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace a dbo:Settlement .
  ?birthPlace dbp:country dbr:United_States_of_America .

  ?birthPlaceEntity dbo:location ?birthPlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,64,val,Give me the spouse of Roger Pryor (actor) and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of the parent of Tisha Sterling.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?partyMember WHERE {
  # Find Roger Pryor (actor) and his spouse
  ?roger a dbo:Actor ;
         foaf:name ""Roger Pryor"" ;
         dbp:spouse ?spouse .

  # Find the landmark at elevation 20.1168 meters and its ruling party member
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
           dbo:location ?location .
  
  ?partyMember a dbo:Politician ;
               dbp:memberOf ?rulingParty ;
               dbo:officeHolderOf ?location .

  # Find Tisha Sterling's parent and their birth name
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling"" ;
         dbp:parent ?parent .
  
  ?parent dbp:birthName ?birthName .
  
  # Link the person with the birth name to the party member
  ?person dbp:birthName ?birthName ;
          dbp:memberOf ?rulingParty .

}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
78,25,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.","SELECT ?result WHERE { <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1 ?artist2 WHERE {
  # Find the musical artist born as Stuart Mcbeath Tosh
  ?person1 a dbo:MusicalArtist .
  ?person1 dbp:birthName ""Stuart Mcbeath Tosh"" .
  
  # Find the associated musical artist for this person
  ?person1 foaf:name ?artist1 .

  # Find the writer of Wizards of Waverly Place soundtrack and band member of The Alan Parsons Project
  ?person2 a dbo:MusicalArtist ;
           dbp:worksFor dbr:The_Alan_Parsons_Project ;
           dbo:work dbr:Wizards_of_Waverly_Place_(soundtrack) .
  
  # Find the associated musical artist for this person
  ?person2 foaf:name ?artist2 .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
37,9,val,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  { 
    ?person a dbo:MusicalArtist .
    ?person foaf:name ""Lauryn Hill"" .
    ?person dbo:album dbr:The_Miseducation_of_Lauryn_Hill .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  {
    ?person a dbo:MusicalArtist .
    ?person foaf:name ""Ethan Iverson"" .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
103,64,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?person foaf:name ""Richard Grant Esterhuysen""@en .
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Richard Grant Esterhuysen"")
  
  ?alterEgo dbo:alternateName ?professionalAlterEgo .
  ?alterEgo dbo:wikiPageRedirects dbr:The_Shadow_(video_game) .
  ?alterEgo a dbo:ComicsCharacter .

  ?person dbo:profession dbr:Actor .

  ?movie dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  
  ?tvShow dbo:genre dbr:Television_show .
  ?tvShow dbo:starring ?actor .
  
  FILTER(?movie = ?tvShow)
}
```",7,9,8,3,3,3,3,71,0,0,9,0,0.0,0
472,25,val,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v4 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?territory WHERE {
  # Christian Ditlev Ammentorp Hansen's death place
  ?hansen a dbo:Person ;
          dbp:deathPlace ?deathPlace .

  # Olaf I of Denmark's administration
  ?olaf a dbo:Monarch ;
        dbo:countryAdministered ?adminTerritory .

  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck's birth place
  ?prince a dbo:Royalty ;
          dbp:birthPlace ?birthPlace .

  # Linking death place to territory administered by Olaf I
  ?deathSettlement a dbo:Settlement ;
                   dbr:Olaf_I_of_Denmark ?adminTerritory .
  
  # Linking birth place to territory associated with Prince Christian
  ?birthSettlement a dbo:Settlement ;
                   dbp:countryAdministeredBy ?adminTerritory .

  # Ensure the territories are the same
  FILTER (?adminTerritory = ?territory)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
557,62,val,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerAStarIsBorn ?producerClaimToFame WHERE {
  # Producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producerAStarIsBorn .

  # Actor of Johnny Doughboy
  ?actor a dbo:Actor ;
         dbp:role dbr:Johnny_Doughboy .

  # Claim to fame of the actor (another work)
  ?claimToFame dbo:starring ?actor .
  ?claimToFame dbo:producer ?producerClaimToFame .

  # Reference to Kent Allard
  ?reference a dbo:FictionalCharacter ;
             dbp:name ""Kent Allard""^^xsd:string ;
             dbo:work dbr:Johnny_Doughboy .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,66,val,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?miguelParty ?commanderOffice ?ruizGallardonResidence WHERE {
  # Miguel Maura's political party
  dbr:Miguel_Maura dbo:partyLeaderOf ?party .
  ?party a dbo:PoliticalParty ;
         dbp:name ?miguelParty .

  # Office of the commander in the Central African Republic Civil War
  ?commander a dbo:OfficeHolder, dbo:Politician ;
             dbo:office ?warOffice .
  ?warOffice dbp:name ?commanderOffice .
  FILTER(CONTAINS(?warOffice, ""Central African Republic Civil War""))

  # Residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
  ?residence a dbo:Residence ;
             dbp:name ?ruizGallardonResidence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
756,64,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Identify the sports manager born on 1968-08-26 in West Germany
  ?person a dbo:SportsManager ;
          dbp:birthday ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany .

  # Step 2: Determine which player they manage
  ?player a dbo:SoccerClub, dbo:Organization, dbo:SoccerTeam ;
          dbo:manager ?person .

  # Step 3: Find the successor of the 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:succeededBy ?successorSeason .
  
  # Ensure the successor is a football league season, sports team season, and sports season
  ?successorSeason a dbo:FootballLeagueSeason, dbo:SportsTeamSeason, dbo:SportsSeason .

  # Step 4: Identify the manager of that team's season
  ?successorSeason dbo:team ?team .
  ?team dbo:manager ?manager .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
557,66,val,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # The Shadow's alter ego
  ?shadowAlterEgo foaf:name ""Lamont Cranston"" .
  
  # Producer of Cora Sue Collins' song
  ?song dbr:I'm_Gonna_Sit_Right_Down_and_Write_Myself_a_Letter ;
        dbo:producer ?producer .

  # Producer of Bing Crosby's movie
  ?movie dbr:White_Christmas ;
         dbo:producer ?producer .
  
  # Bing Crosby as actor in High Society Blues
  ?actor foaf:name ""Bing Crosby"" ;
         dbo:actedIn dbr:High_Society_Blues .

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
361,26,val,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in  and professional in the profession of Frédéric Bouraly.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find the resource for ""Lasso the Moon""
  ?album rdfs:label ""Lasso the Moon""@en .
  
  # Ensure it is categorized as both a film and a work
  ?album dbo:type/dbo:superClass* dbo:Film ;
         dbo:type/dbo:superClass* dbo:Work .

  # Find Frédéric Bouraly's involvement in this album
  ?frédéric dbr:Frédéric_Bouraly .
  ?frédéric dbo:profession dbp:Actor ; # Assuming he is an actor, adjust if needed
            dbo:worksForProject ?album .

  # Retrieve the actor associated with the album
  ?actor dbo:worksForProject ?album ;
         a dbo:Actor .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
203,63,val,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Triple Alliance or Entente related war
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryForce [
        dbo:member dbr:The_Triple_Alliance_or_The_Triple_Entente ; 
        dbo:commander ?commander .
      ] .

  # William Bayne's military conflict
  ?bayneWar a dbo:MilitaryConflict ;
            dbo:participatingMilitaryForce [
              dbo:militaryUnit dbp:Royal_Navy ;
              dbo:commander ?bayneCommander .
            ] .
  ?person dbr:William_Bayne_(Royal_Navy_officer) ;
          dbo:commanderOf ?bayneCommander .

  # Robert Calder's military conflict
  ?calderWar a dbo:MilitaryConflict ;
             dbo:participatingMilitaryForce [
               dbo:militaryUnit dbp:Royal_Navy ;
               dbo:commander ?calderCommander .
             ] .
  ?person dbr:Robert_Calder ;
          dbo:commanderOf ?calderCommander .

  # Find common commander
  FILTER (?commander = ?bayneCommander && ?commander = ?calderCommander)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
297,9,val,"Give me the entity in the birth place, that is a country, of Little Hat Jones and institution in the administration of Brian Kemp.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthCountry ?institution WHERE {
  # Find Little Hat Jones's birthplace country
  ?person a dbo:MusicalArtist ;
          foaf:name ""Little Hat Jones"" .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?birthCountry .

  # Find an institution in the administration of Brian Kemp
  ?kemp a dbo:Politician ;
        foaf:name ""Brian Kemp"" .
  ?kemp dbo:positionHeld ?position .
  ?position dbo:organization ?institution .
}
```",4,5,5,2,2,2,2,9,0,0,346,0,0.0,0
78,26,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Stuart Mcbeath Tosh"" .

  # Find the artist associated with David Paton
  ?patonArtist dbo:bandMember ?person ;
               dbo:associatedBand dbr:David_Paton .

  # Find the artist associated with Billy Lyall
  ?lyallArtist dbo:bandMember ?person ;
               dbo:associatedBand dbr:Billy_Lyall .

  # The musical artist we are interested in is associated with both
  ?artist dbo:bandMember ?person .
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
119,18,val,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Find wars associated with Maria I of Portugal
  ?person dbr:Maria_I_of_Portugal .
  ?person dbo:commanderInChief ?war .

  # Ensure the war is also a television show
  ?war a dbo:MilitaryConflict ;
      dbo:wikiPageRedirects ?tvShow .
  
  # Find Dawid Olejniczak's country of residence
  ?olejniczak dbr:Dawid_Olejniczak .
  ?olejniczak dbp:residenceCountry ?country .

  # Ensure the war is associated with the country where Dawid resides
  ?war dbo:location ?location .
  ?location dbo:country ?country .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
905,65,val,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Step 1: Béla IV of Hungary's child
  ?belavChild dbo:parent dbr:Béla_IV_of_Hungary .
  
  # Step 2: Philip I, Prince of Taranto's father and spouse
  ?philipFather dbo:child dbr:Philip_I,_Prince_of_Taranto .
  ?spouseOfPhilipsFather dbo:spouse ?philipFather .

  # Step 3: Parent of the spouse
  ?parentOfSpouse dbo:child ?spouseOfPhilipsFather .

  # Step 4: Ensure royalty status
  ?belavChild a dbo:Monarch .
  ?philipFather a dbo:Monarch .
  ?spouseOfPhilipsFather a dbo:Monarch .
  ?parentOfSpouse a dbo:Monarch .

  # Step 5: Spouse of Maria of Bytom
  ?mariaSpouse dbo:spouse dbr:Maria_of_Bytom .

  # Step 6: Father of the spouse of Maria of Bytom
  ?fatherOfMariaSpouse dbo:child ?mariaSpouse .
  
  # Final connection
  ?parentOfSpouse = ?fatherOfMariaSpouse .
  ?belavChild dbo:child ?childOfChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,66,val,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Saw Min Phyu's spouse and their child
  ?spouse a dbo:Person .
  ?spouse dbo:spouse dbr:Saw_Min_Phyu .
  ?child dbo:parent ?spouse .

  # Min Hla Htut of Pyakaung's parent and their child
  ?parentMinHlaHtut a dbo:Person .
  ?minHlaHtut dbp:parent ?parentMinHlaHtut .
  ?childMinHlaHtut dbo:parent ?parentMinHlaHtut .

  # Myat Hpone Pyo's father and their spouse
  ?fatherMyatHponePyo a dbo:Person .
  ?myatHponePyo dbp:father ?fatherMyatHponePyo .
  ?spouseFather dbp:spouse ?fatherMyatHponePyo .

  # Ensure all are royalty
  ?spouse dbo:royalty true .
  ?parentMinHlaHtut dbo:royalty true .
  ?fatherMyatHponePyo dbo:royalty true .

  # Find the predecessor of these individuals
  OPTIONAL { ?spouse dbp:predecessor ?predecessor . }
  OPTIONAL { ?parentMinHlaHtut dbp:predecessor ?predecessor . }
  OPTIONAL { ?fatherMyatHponePyo dbp:predecessor ?predecessor . }

}
ORDER BY ?predecessor
LIMIT 10
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
288,9,val,"Give me the theme of the show with Anumta Qureshi and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v1 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . ?v3 <http://dbpedia.org/ontology/openingTheme> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?showTheme WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Anumta Qureshi"" .
  ?show dbo:performer ?person ;
        dbo:theme ?showTheme .

  ?city dbo:officialName ""Lahore"" ;
        dbo:nickName ?nickname .

  FILTER(?nickname IN (""The Heart of Pakistan"", ""Paris of the East"", ""City of Gardens"", ""City of Literature""))

  ?nativePerson dbo:birthPlace dbr:Lahore .
  ?show dbo:performer ?nativePerson .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
68,25,val,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?dorothea a dbo:Person ;
            dbp:parent ?parent .
  ?parent dbp:spouse ?mother .
  ?mother foaf:name ""Dorothea of Brandenburg"" .

  ?johnII a dbo:Person ;
          dbp:child ?dorothea ;
          dbp:father ?father .

  ?louisII a dbo:Person ;
           dbo:commanderInBattle dbr:Siege_of_Padua .

  ?catherine a dbo:Person ;
             dbp:parent ?philipI .
  ?philipI dbp:spouse ?johanna .
  ?johanna foaf:name ""Joanna of Castile"" .

  ?father dbo:child ?johnII .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
737,66,val,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Duke Philipp of Württemberg's child
  ?philipp a dbo:Person ;
           dbp:spouse|dbo:child ?philippChild .

  # Child of Duke Philipp's child (grandchild)
  ?philippGrandchild dbo:parent ?philippChild .

  # Predecessor of the child of Philipp Albrecht, Duke of Württemberg
  ?albrecht a dbo:Person ;
           dbp:spouse|dbo:child ?albrechtChild .
  
  ?predecessor dbo:successor ?albrechtChild .

  # Parent of Archduchess Margarete Sophie of Austria and their child
  ?margareteSophieParent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria ;
                        dbp:spouse|dbo:child ?parentChild .

  # The person we are looking for is a royalty
  ?person a dbo:Royalty ;
          owl:sameAs ?philippGrandchild ;
          owl:sameAs ?predecessor ;
          owl:sameAs ?parentChild .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
158,26,val,"Give me the native of Grand Duchy of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Native of Grand Duchy of Finland
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .

  # Decedent at the birthplace of Sandro Bertaggia
  ?sandroBertaggia dbp:birthPlace ?bertaggiaBirthCountry .
  ?person dbo:deathPlace ?bertaggiaBirthCountry .

  # Native of the administration country of Nicholas II of Russia
  ?nicholasII dbo:nationality dbr:Nicholas_II_of_Russia .
  ?nicholasII dbp:countryOfCitizenship ?russianAdminCountry .
  ?person dbo:nationality ?russianAdminCountry .

}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
468,18,val,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfPeterIV ?realNameAlfonsoIVChild WHERE {
  # Find children of Peter IV of Aragon who are royalty
  ?person dbo:father dbr:Peter_IV_of_Aragon .
  ?person a dbo:Monarch .

  # Get the name of these children
  ?person foaf:name ?childOfPeterIV .

  # Find children of Alfonso IV of Aragon who are royalty and get their real names
  OPTIONAL {
    ?alChild dbo:father dbr:Alfonso_IV_of_Aragon .
    ?alChild a dbo:Monarch .
    ?alChild dbp:birthName ?realNameAlfonsoIVChild .
  }
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
353,65,val,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Alfonso VI and his children
  dbr:Alfonso_VI_of_León_and_Castile dbo:spouse ?spouse .
  ?parent (dbo:child|dbo:spouse) ?alfonsoVI .
  ?alfonsoVI dbr:Alfonso_VI_of_León_and_Castile .

  # Alfonso VI's grandchildren
  ?parent dbo:child ?grandparent .
  ?grandparent dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Reference to William I and Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:father ?rogerParent .
  ?rogerParent dbo:child ?relatedToWilliamI .
  ?relatedToWilliamI dbo:spouse|dbo:child dbr:William_I .

  # Ensure the grandchild is related to this lineage
  ?grandchild = ?relatedToWilliamI .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,63,val,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName ?band ?producer WHERE {
  # The Shadow's professional alias
  ?person1 a dbo:MusicalArtist .
  ?person1 foaf:name ""The Shadow"" .
  OPTIONAL { ?person1 dbp:alias ?professionalName . }

  # Lil Wayne's band
  ?person2 a dbo:MusicalArtist .
  ?person2 foaf:name ""Lil Wayne"" .
  OPTIONAL { ?person2 dbo:memberOfBand ?band . }

  # Producer of Coke Studio Philippines
  ?person3 a dbo:Producer .
  ?person3 dbp:worksFor dbr:Coke_Studio_Philippines .
  OPTIONAL { ?person3 foaf:name ?producer . }
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
782,66,val,"Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?realName ?associatedArtist WHERE {
  # Eric Clapton's bands
  ?clapton a dbo:MusicalArtist ;
           foaf:name ""Eric Clapton"" ;
           dbo:memberOfBand ?band .
  
  # Get band names associated with Eric Clapton
  ?band foaf:name ?bandName .

  # Real name of The Fabulous Thunderbirds members
  ?thunderbird a dbo:MusicalArtist ;
               dbo:memberOfBand dbr:The_Fabulous_Thunderbirds ;
               foaf:name ?realName .
  
  # Nick Curran's associated musical artist
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" ;
              dbp:associatedMusicalArtist ?associatedArtist .

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
119,63,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Anxo Quintana's role in an administration event
  ?administrationEvent a dbo:Event .
  ?administrationEvent dbo:leader dbr:Anxo_Quintana .

  # Anxo Quintana's association with PSOE
  ?person dbr:Anxo_Quintana .
  ?person dbo:partyMemberOf dbr:Spanish_Socialist_Workers'_Party .

  # Álvaro Quirós's residence country
  ?resident dbr:Álvaro_Quirós .
  ?resident dbo:residenceCountry ?country .

  # Linking the administration event to a specific office held by Anxo Quintana
  ?administrationEvent dbo:officeHeld ?office .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
38,18,val,"Give me the author of the work, that is a written work and a work, of Joe Biden and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?author WHERE {
  # Find works authored by Joe Biden
  ?work a dbo:CreativeWork ;
        dbo:author dbr:Joe_Biden .
  
  # Find the commander of North Carolina Air National Guard who is also an author
  ?commander a dbo:Politician, dbo:OfficeHolder ;
             dbo:officeLocation dbr:North_Carolina_Air_National_Guard ;
             dbo:work ?book .

  # Ensure the book is American and written work
  ?book a dbo:Book ;
        dbo:country dbr:United_States ;
        dbo:author ?commanderAuthor .
  
  # Match authors to works
  OPTIONAL { ?work dbo:author ?author . }
  OPTIONAL { ?book dbo:author ?commanderAuthor . }

  FILTER (?author = dbr:Joe_Biden || ?commanderAuthor != dbr:Joe_Biden)
}
```",5,13,6,3,2,3,2,20,0,0,1,0,0.0,0
412,26,val,Give me the entity in Athens and war of the leader of National Party of Greece and war of the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInAthens WHERE {
  # Find the leader of the National Party of Greece
  ?leader a dbo:Person ;
          dbp:partyLeaderOf dbr:National_Party_of_Greece .

  # Wars associated with this leader
  ?war dbo:participant ?leader .
  
  # Awardee who received an award number 30 (assuming Nobel Prize)
  ?awardee a dbo:Person ;
           dbo:awardReceived dbr:Nobel_Prize_in_Year_30 .

  # Wars associated with this awardee
  ?anotherWar dbo:participant ?awardee .
  
  # Find entities in Athens related to these wars
  ?entityInAthens a dbo:Place ;
                  dbp:location dbr:Athens ;
                  (dbo:relatedEvent|dbo:participatedIn) ?war ;
                  (dbo:relatedEvent|dbo:participatedIn) ?anotherWar .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,65,val,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?child1 dbo:parent dbr:Saw_Shwe_Khet .
  ?child1 a dbo:Royalty .

  ?predecessor dbo:succeededBy ?child1 .
  ?predecessorChild dbo:parent ?predecessor .
  
  ?minHlaHtut dbp:parentOf ?predecessorChild .
  ?minHlaHtut dbr:Pyakaung .

  ?father dbo:parent ?child1 .
  ?spouse dbo:spouse ?father .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,25,val,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?film dbo:title ""Rustlers' Rhapsody""@en .
  ?film dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbo:profession dbr:The_Shadow .
    ?actor dbo:profession dbr:Frédéric_Bouraly .
  }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
159,66,val,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?commander ?militaryForce ?successor WHERE {
  # Always the Love Songs writer
  ?tvShow dbo:title ""Always the Love Songs""@en .
  ?tvShow dbo:writer ?writer .

  # Commander in a war and television show
  ?war dbo:commander ?commander .
  ?tvShow dbo:commander ?commander .

  # Military force in Battle of Vienna
  ?battle dbr:Battle_of_Vienna .
  ?battle dbo:militaryForce ?militaryForce .

  # Successor in Russo-Polish War (1654–1667)
  ?war2 dbp:name ""Russo-Polish War (1654–1667)""@en .
  ?war2 dbo:commander ?successor .
  ?successor a dbo:Politician ;
             dbo:officeHolder ?office .

  # Linking the commander to both roles
  ?commander dbp:succeededBy ?successor .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
119,62,val,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantOfSantiago ?residenceCountry ?officeOfAnxo WHERE {
  # Tenant of Santiago de Compostela
  dbr:Santiago_de_Compostela dbo:mayor ?person .
  ?person foaf:name ?name .
  FILTER regex(?name, ""Mayor"", ""i"") # Assuming the tenant is the mayor

  # Residence country of a Spanish citizen
  ?citizen dbo:nationality dbr:Spain .
  ?citizen dbo:residenceCountry ?residenceCountry .

  # Office held by Anxo Quintana
  dbr:Anxo_Quintana dbo:office ?officeOfAnxo .
  ?officeOfAnxo a dbo:Event .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
89,62,val,"Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Myat Hpone Pyo and his predecessor
  ?myatHponePyo a dbo:Person ;
                dbp:successor ?predecessor .
  
  # Minye Kyawswa's child
  ?minyeKyawswaChild dbo:childOf dbr:Minye_Kyawswa .

  # Parent of Minye Kyawswa's child (which is Minye Kyawswa)
  ?parent a dbo:Person ;
          dbo:child ?minyeKyawswaChild .
  
  # Another child of Minye Kyawswa
  ?anotherChild dbo:childOf ?parent .

  # Spouse of the father of another child
  ?father dbp:spouse ?spouse .
  ?anotherChild dbo:childOf ?father .

  # Ensure all are royalty
  ?myatHponePyo a dbo:Royalty ;
                dbp:title ?titleMyatHponePyo .
  
  ?predecessor a dbo:Royalty ;
               dbp:title ?titlePredecessor .
  
  ?spouse a dbo:Royalty ;
          dbp:title ?titleSpouse .

  # Linking the predecessor to the spouse
  ?predecessor dbp:spouse ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,64,val,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?commander ?spouse ?workByHillary WHERE {
  # Step 1: Find the author of ""Back to Work (book)""
  dbr:Back_to_Work_(book) dbo:author ?person .
  
  # Step 2: Identify the commander in a war that is both a disease and societal event
  ?war dbo:type [a dbo:Disease ; a dbo:SocietalEvent] .
  ?owner dbo:owns dbr:USS_Arcadia_(ID-1605) .
  ?commander dbo:commandedInWar ?war .
  
  # Step 3: Find the spouse of the author who is also a politician and office holder
  ?person dbp:spouse ?spouse .
  ?spouse a dbo:Politician ;
          dbo:officeHolder ?office .

  # Step 4: Identify the work by Hillary Clinton
  dbr:Hillary_Clinton dbo:author ?workByHillary .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
353,64,val,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Constance of Burgundy's spouse and their child
  dbr:Constance_of_Burgundy dbo:spouse dbr:Roger_II_of_Sicily .
  dbr:Roger_II_of_Sicily dbo:child ?williamI .

  # Roger II of Sicily's parent and his child
  dbr:Simon_de_Hauteville dbo:child dbr:Roger_II_of_Sicily .
  ?williamI dbo:child ?fatherOfWilliamII .

  # The father of William II of Sicily is the child of Constance's spouse's child
  ?fatherOfWilliamII dbp:title ?royaltyTitle .
  FILTER EXISTS { ?royaltyTitle rdf:type dbo:Royalty }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
419,9,val,"Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find Yandamuri Veerendranath's birthplace
  ?yv a dbo:Person ;
      dbp:birthPlace ?birthPlace .

  # Find an Australian scientist who received the Australian Laureate Fellowship
  ?scientist a dbo:Scientist ;
             dbo:nationality dbr:Australia ;
             dbo:almaMater ?almaMater ;
             dbo:awardReceived dbr:Australian_Laureate_Fellowship .

  # Match the birthplace and alma mater
  FILTER (?birthPlace = ?almaMater)
  
  # Bind the common entity to a variable
  BIND(?birthPlace AS ?entity)

  # Filter for Yandamuri Veerendranath specifically
  VALUES ?yv { dbr:Yandamuri_Veerendranath }
}
```",4,6,5,2,2,2,2,9,0,0,2,0,0.0,0
492,25,val,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace WHERE {
  # Sal Mineo's death place
  OPTIONAL { 
    VALUES ?person { dbr:Sal_Mineo }
    ?person dbo:deathPlace ?deathPlace .
  }

  # Actor of ""The Sky Ranger"" (1928 film)
  OPTIONAL {
    ?film a dbo:Film ;
          dbp:title ""The Sky Ranger""@en ;
          dbp:year ""1928""^^xsd:gYear .
    ?film dbo:starring ?actor .
    ?actor dbo:deathPlace ?deathPlace .
  }

  # Actor of ""Color Me Dead""
  OPTIONAL {
    ?film a dbo:Film ;
          dbp:title ""Color Me Dead""@en .
    ?film dbo:starring ?actor .
    ?actor dbo:deathPlace ?deathPlace .
  }
}
```",5,5,6,2,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
816,62,val,"Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentDoonArbus ?professionalEugeneCattinProfession ?actorMovie WHERE {
  # Find Doon Arbus and her parent
  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus""@en .
  OPTIONAL { ?doonArbus dbp:parent ?parentDoonArbus . }

  # Identify Eugène Cattin's profession
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  ?eugeneCattin dbo:occupation ?profession .
  
  # Find a professional in the same field as Eugène Cattin
  ?professional dbr:Eugène_Cattin/occupation ?profession .
  BIND(?professional AS ?professionalEugeneCattinProfession)

  # Find an actor of a movie with a person decedent at Los Angeles
  ?actor a dbo:Actor ;
         foaf:name ?actorName .
  ?movie dbo:starring ?actor ;
         dbo:title ?title .
  OPTIONAL { ?decedent dbo:deathPlace dbr:Los_Angeles_County,_California . 
             ?movie dbo:character ?decedent . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,66,val,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  ?child1 dbo:parent ?alumnus ;
          dbo:honoraryTitle ""Commander of the Royal Victorian Order"" .

  ?child2 dbo:parent ?alumnus ;
          dbo:parent dbr:Fredrick_Stanley_16th_Earl_of_Derby .

  ?politician dbo:parent ?alumnus ;
              a dbo:Politician .
  
  ?father dbo:child ?alumnus .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
941,18,val,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Duchess Luise of Brunswick-Wolfenbüttel and her spouse
  dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel dbo:spouse ?luisesSpouse .

  # Step 2: Find the spouse's spouse (Duchess Luise herself)
  ?luisesSpouse dbo:spouse ?duchessLuise .

  # Step 3: Identify Duchess Luise's parent who is royalty
  ?duchessLuise dbo:parent ?royalParent .
  FILTER EXISTS { ?royalParent a dbo:Monarch . }

  # Step 4: Find the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?ferdinandsChild .

  # Step 5: Find the spouse of the royalty identified in step 3
  ?royalParent dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,64,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfParent WHERE {
  # Commander in Siege of Mukha who is a royalty
  ?commander dbo:occupation dbr:Siege_of_Mukha ;
             a dbo:Royalty .

  # Parent of the commander
  ?parent dbo:child ?commander .
  
  # Child of the parent
  ?childOfParent dbo:parent ?parent .

  # Father of the father (who is royalty and an office holder)
  ?fatherOfFather dbo:child ?childOfParent ;
                  a dbo:Royalty, dbo:OfficeHolder .

  # Child of Baeda Maryam I
  ?baedaChild dbo:parent dbr:Baeda_Maryam_I .
  
  # Reference to the child of Baeda Maryam I
  FILTER(?childOfParent = ?baedaChild)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
816,65,val,"Give me the parent of the child of Allan Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v6 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonParent WHERE {
  # Allan Arbus and his child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus"" .
  
  ?childAllanArbus dbo:parent ?allanArbus ;
                   dbo:parent ?commonParent .

  # Eugène Cattin's profession
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin"" .
  
  ?profession dbr:Eug%C3%A8ne_Cattin/dbo:occupation ;
              rdf:type dbo:Occupation .

  # Find someone in Eugène Cattin's profession who acted with Herschel Bernardi
  ?actor a dbo:Person ;
         dbo:occupation ?profession ;
         dbo:film dbr:A_Film_With_Herschel_Bernardi .
  
  ?film dbo:starring ?hereschelBernardi, ?actor .

  # Herschel Bernardi
  ?hereschelBernardi a dbo:Person ;
                     foaf:name ""Herschel Bernardi"" .

  # Parent of the actor in Eugène Cattin's profession
  ?actor dbo:parent ?commonParent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,65,val,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Hillary Rodham Clinton""@en .
  ?person dbo:spouse ?spouse .

  OPTIONAL { 
    ?person dbo:birthPlace dbr:Chappaqua, New York .
  }

  OPTIONAL {
    ?work dbo:title ""An Invitation to the White House""@en ;
          dbo:author ?person .
  }
  
  OPTIONAL {
    ?officeHolder a dbo:Politician ;
                  dbo:spouse ?spouse ;
                  dbo:birthPlace dbr:Chappaqua, New York .
  }

  OPTIONAL {
    ?warEvent a dbo:SocietalEvent, dbo:Disease ;
              dbo:commander ?father .
    ?father foaf:name ""Hugh Rodham""@en ;
            dbo:child ?person .
    ?navyService dbo:member ?father ;
                 dbo:organization dbr:United_States_Navy .
  }
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
557,65,val,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Janet Gaynor's famous movies
  VALUES ?movie { 
    dbr:7th_Heaven_(1927_film) 
    dbr:Street_Angel_(film) 
    dbr:Sunrise:_A_Story_of_One_Night 
  }
  
  ?movie dbo:producer ?producer .
  
  # Hal B. Wallis as producer of ""Yankee Doodle Dandy""
  OPTIONAL {
    dbr:Yankee_Doodle_Dandy_(film) dbo:producer ?wallisProducer .
    FILTER(?wallisProducer = <http://dbpedia.org/resource/Hal_B._Wallis>)
  }
  
  # Check if the producer is Hal B. Wallis
  FILTER(?producer = ?wallisProducer)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
492,26,val,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?deathPlace WHERE {
  # Actor of ""The Sky Ranger"" (1928)
  { 
    ?film a dbo:Film .
    ?film dbp:title ""The Sky Ranger"" .
    ?film dbo:releaseYear ""1928""^^xsd:gYear .
    ?film dbo:starring ?actor1 .
    ?actor1 foaf:name ?actorName .
    OPTIONAL { ?actor1 dbo:deathPlace ?deathPlace . }
  }

  UNION

  # Carolyn Jones
  {
    ?person a dbo:Actor ;
            foaf:name ""Carolyn Jones"" .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  }

  UNION

  # Actor of ""Aladdin"" (1958)
  {
    ?film2 a dbo:Film .
    ?film2 dbp:title ""Aladdin"" .
    ?film2 dbo:releaseYear ""1958""^^xsd:gYear .
    ?film2 dbo:starring ?actor2 .
    ?actor2 foaf:name ?actorName .
    OPTIONAL { ?actor2 dbo:deathPlace ?deathPlace . }
  }
}
ORDER BY ?actorName
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,64,val,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Predecessor of Stephen V of Hungary (Béla IV)
  dbr:Béla_IV_of_Hungary dbo:spouse ?spouse .
  
  # Child of Béla IV
  ?child dbo:parent dbr:Béla_IV_of_Hungary .
  ?child a dbo:Monarch .

  # Spouse of the father of the parent of Philip, Despot of Romania
  ?grandParent dbo:child ?parentOfPhilip .
  ?parentOfPhilip dbo:spouse ?spouse .
  
  # Parent of Charles Martel of Anjou
  ?parentOfCharlesMartel dbo:child dbr:Charles_Martel_of_Anjou .
  
  # The child of the child who is royalty and fits all criteria
  ?childOfChild dbo:parent ?child .
  ?childOfChild a dbo:Monarch .

  FILTER(?spouse = ?grandParent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,66,val,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?spouse ?work WHERE {
  # Step 1: Identify works authored by Bill Clinton
  ?work dbo:author dbr:Bill_Clinton .
  
  # Step 2: Find the spouse of Bill Clinton who is a politician and office holder
  ?billClinton dbo:spouse ?spouse .
  FILTER (str(?billClinton) = ""Bill_Clinton"")
  ?spouse a dbo:Politician ;
          dbo:officeHolder true .

  # Step 3: Link to ""An Invitation to the White House""
  ?invitationWork dbp:title ""An Invitation to the White House""@en .
  ?invitationWork dbo:author ?spouse .

  # Step 4: Identify the commander in the war related to a disease and societal event
  ?war dbo:name ?eventName .
  FILTER (CONTAINS(LCASE(?eventName), ""disease"") && CONTAINS(LCASE(?eventName), ""societal event""))
  
  ?commander dbo:commanded ?unit .
  ?unit dbo:owner dbr:USS_Arcadia_(ID-1605) .

  # Link the commander to the war
  ?war dbo:commander ?commander .

  # Ensure all conditions are met
  FILTER (?work = ?invitationWork)
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
472,26,val,"Give me the administration of Christian IX of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administrationPeriod ?deathPlaceSettlement ?mayorOfSchleswig WHERE {
  # Christian IX of Denmark's administration period
  ?christianIX dbo:monarchStartYear ?startYear .
  ?christianIX dbo:monarchEndYear ?endYear .
  BIND(CONCAT(""Christian IX of Denmark ("", STR(?startYear), "" - "", STR(?endYear), "")"") AS ?administrationPeriod)

  # Christian Ditlev Ammentorp Hansen's death place
  ?hansen a dbo:Person ;
          dbp:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .
  BIND(STR(?deathPlace) AS ?deathPlaceSettlement)

  # Mayor of Duchy of Schleswig during Christian IX's reign
  ?mayor a dbo:Mayor ;
         dbp:officeHolderOf dbr:Duchy_of_Schleswig ;
         dbo:termStartYear ?mayorStartYear ;
         dbo:termEndYear ?mayorEndYear .
  
  FILTER(?startYear <= ?mayorStartYear && ?endYear >= ?mayorEndYear)
  BIND(STR(?mayor) AS ?mayorOfSchleswig)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
905,62,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania"" ;
          dbo:parent ?parentOfPhilip .

  # Parent of Philip is royalty
  ?parentOfPhilip a dbo:RoyalFamilyMember ;
                  dbo:child ?fatherOfParent .

  # Father of the parent (royalty)
  ?fatherOfParent a dbo:RoyalFamilyMember ;
                  dbo:spouse ?spouse .

  # Spouse of Maria of Bytom
  ?maria dbr:Maria_of_Bytom ;
         dbo:spouse ?spouseMaria .

  # Father of the spouse of Maria is royalty and child of Stephen V of Hungary
  ?fatherOfSpouseMaria a dbo:RoyalFamilyMember ;
                       dbo:child ?spouseMaria ;
                       dbo:parent dbr:Stephen_V_of_Hungary .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
557,63,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?character WHERE {
  # Clark Kent is Superman's alter ego
  ?superman dbo:alterEgo dbr:Clark_Kent .
  
  # It Happened One Night and Seventh Heaven are works associated with Cora Sue Collins and Janet Gaynor
  ?itHappenedOneNight dbo:starring dbr:Janet_Gaynor ;
                    dbo:producer dbr:Cora_Sue_Collins .
  ?seventhHeaven dbo:starring dbr:Janet_Gaynor ;
                 dbo:producer dbr:Cora_Sue_Collins .

  # Clark Kent is associated with both works
  ?superman dbo:work dbr:It_Happened_One_Night ;
            dbo:work dbr:Seventh_Heaven .
  
  # Return the character
  ?character rdfs:label ""Clark Kent""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
769,18,val,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find sports managers who are also soccer managers
  ?manager a dbo:SportsManager ;
           dbo:sportTeamManaged dbr:Hong_Kong_C_Team .
  
  # Ensure the manager is specifically a soccer manager
  ?manager dbo:occupation dbp:Soccer_Manager .

  # Find Tony Hollings' birthday
  dbr:Tony_Hollings dbo:birthday ?hollingsBirthday .

  # Find players who are athletes, soccer players, sports managers, and soccer managers
  ?player a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:Soccer_Manager ;
          dbo:birthday ?birthday .
  
  # Match the player's birthday with Tony Hollings' birthday
  FILTER (?birthday = ?hollingsBirthday)

  # Ensure the manager is also a player in this context
  ?player dbo:manager ?manager .
}
```",5,11,6,3,2,3,2,20,0,0,2,0,0.0,0
39,64,val,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerName ?bandName WHERE {
  # Step 1: Find Bob Thompson's birth name
  VALUES (?bobThompson) { dbr:Bob_Thompson_(musician) }
  
  ?bobThompson dbo:birthName ?birthName .
  
  # Step 2: Find a musical artist with the same birth name
  ?artist a dbo:MusicalArtist ;
          dbp:birthName ?birthName .

  # Step 3: Identify the producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  
  ?producer foaf:name ?producerName .

  # Step 4: Find the band associated with this artist
  ?artist dbo:band ?band .
  ?band foaf:name ?bandName .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
905,63,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Philip, Despot of Romania's parent
  ?philip a dbo:Person ;
          dbp:parent ?parent .
  
  FILTER (str(?philip) = ""Philip, Despot_of_Romania"")

  # Identify the spouse of Philip's parent
  ?parent dbo:spouse ?spouse .

  # Ensure the parent is royalty
  ?parent a dbo:Monarch .

  # Identify Béla IV of Hungary's child
  ?belaIV a dbo:Person ;
          dbp:child ?stephenV .
  
  FILTER (str(?belaIV) = ""Béla_IV_of_Hungary"")

  # Identify Charles I of Hungary's father
  ?charlesI a dbo:Person ;
            dbp:father ?louisI .

  FILTER (str(?charlesI) = ""Charles_I_of_Hungary"")

  # Ensure the spouse is royalty
  ?spouse a dbo:Monarch .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
414,18,val,"Give me the award of the awardee of Nobel Prize in Physics and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award ?hostInstitution WHERE {
  ?person a dbo:NobelPrizeAwardee ;
          foaf:name ""Rainer Weiss""@en .
  
  ?award a dbo:Award ;
         dbo:category dbr:Nobel_Prize_in_Physics ;
         dbo:recipient ?person .

  OPTIONAL { 
    ?award dbo:hostingInstitution ?hostInstitution .
    FILTER (?hostInstitution != null)
  }
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
198,63,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Henry Clay Lewis' birthplace
  ?henry a dbo:Person ;
         dbp:birthPlace ?birthPlace .

  # Ensure the birthplace is an American settlement
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Award related to war given by United States Congress
  ?award a dbo:Award ;
         dbp:awardedBy dbr:United_States_Congress ;
         dbp:relatedToWar ?war .

  # Gillmore Medal awardee's force
  ?gillmoreMedalAward a dbo:Award ;
                      rdfs:label ""Gillmore Medal""@en .
  ?recipient a dbo:Person ;
             dbo:awardReceived ?gillmoreMedalAward ;
             dbo:militaryForce ?force .

  # Linking the entity (settlement) to both conditions
  ?entity = ?birthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
159,62,val,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor WHERE {
  # Identify the Great Turkish War
  ?war a dbo:MilitaryConflict ;
      rdfs:label ""Great Turkish War""@en .

  # Find the commander in the Great Turkish War
  ?commander dbo:commanded ?war ;
            a dbo:Person ;
            dbp:occupation dbr:Politician ;
            dbp:officeHolder true .

  # Determine the successor of the commander
  ?successor dbo:succeededBy ?commander ;
             a dbo:Person ;
             dbp:occupation dbr:Politician ;
             dbp:officeHolder true .

  # Ensure Michał Kazimierz Pac is involved in the force (event)
  ?force a dbo:MilitaryConflict ;
         dbo:participant ?pac .
  ?pac rdfs:label ""Michał Kazimierz Pac""@en .

  # Reference to George Ducas
  ?ducas a dbo:Writer ;
         dbo:work ?work .
  ?work dbo:author dbr:George_Ducas .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
513,18,val,Give me the residence of the leader of Ulster Unionist Party and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v3 <http://dbpedia.org/ontology/residence> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderResidence ?awardEntity WHERE {
  # Find the leader of the Ulster Unionist Party
  ?person a dbo:Politician ;
          dbo:partyLeaderOf dbr:Ulster_Unionist_Party ;
          dbp:residence ?leaderResidence .

  # Find awards related to George Hamilton Cameron
  ?award dbo:recipient dbr:George_Hamilton_Cameron .
  ?award dbo:relatedEntity ?awardEntity .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
39,65,val,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?samProfession ?bandName ?alterEgo WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # Musical artist born as Robert Lamar Thompson and their band
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Robert Lamar Thompson"" .
  ?person dbo:band ?band .
  ?band foaf:name ?bandName .

  # Fictional character created by Walter B. Gibson
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character a dbo:FictionalCharacter .
  ?character dbp:alterEgo ?alterEgo .
}
```",7,10,8,3,3,3,3,71,0,0,4,0,0.0,0
353,66,val,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Roger III, Duke of Apulia
  ?rogerIII a dbo:Person ;
            foaf:name ""Roger III, Duke of Apulia""@en .

  # Parent of Roger III
  ?parent dbo:child ?rogerIII .
  
  # Child of the parent (grandchild of Roger III)
  ?grandchild dbo:child ?parent .

  # Spouse of the parent and their child (great-grandchild of Roger III)
  ?spouse dbo:spouse ?parent ;
          dbo:child ?childOfSpouse .
  ?greatGrandchild dbo:child ?childOfSpouse .

  # Constance of Burgundy
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  
  # Children of Constance who are royalty
  ?constanceChild dbo:child ?constance ;
                  a dbo:Royalty .

  # William I of Sicily
  ?williamI a dbo:Person ;
            foaf:name ""William I of Sicily""@en .

  # Children of William I who are royalty
  ?williamIClild dbo:child ?williamI ;
                a dbo:Royalty .

  # The person we are looking for is both the grandchild and great-grandchild, and also a child of Constance or William I
  FILTER (?grandchild = ?greatGrandchild)
  FILTER (?person IN (VALUES ?constanceChild) UNION VALUES ?williamIClild))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
119,66,val,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?administration dbo:country dbr:Spain .
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  ?office dbo:election dbr:2009_Galician_regional_election .
  ?office dbo:leader ?person .
  ?person dbp:name ""Álvaro Quirós""@en .
  ?person dbo:residenceCountry ?country .
  ?tenant dbo:residenceCountry ?country .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
943,66,val,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?greatGrandchild WHERE {
  # Yeshaq I's child who is royalty
  ?yeshaqI a dbo:Monarch ;
           dbo:spouse ?motherOfChild .

  ?child dbr:Yeshaq_I/dbo:child ;
         a dbo:Monarch .

  # Great-grandchild of Yeshaq I (child of Yeshaq I's child)
  ?grandchild dbr:?child/dbo:child ;
              a dbo:Monarch .

  ?greatGrandchild dbr:?grandchild/dbo:child ;
                   a dbo:Monarch .

  # Baeda Maryam I's child and their parent
  ?baedaMaryamI a dbo:Monarch ;
                dbo:spouse ?motherOfBaedaChild .

  ?baedaChild dbr:Baeda_Maryam_I/dbo:child ;
              a dbo:Monarch .

  ?parentOfBaedaChild dbr:?baedaChild/dbo:parent ;
                      a dbo:Monarch, dbo:OfficeHolder .

  # Ensure the parent of Yeshaq I's great-grandchild is the same as Baeda Maryam I's child's parent
  FILTER (?grandchild = ?parentOfBaedaChild)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,62,val,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:alternateName ?alterEgo .
  
  OPTIONAL { 
    ?character dbo:wikiPageDisambiguates ?comics .
    ?comics dbo:wikiPageRedirects ?shadowComics .
    FILTER(STRSTARTS(STR(?shadowComics), ""The Shadow (comics)""))
  }
  
  OPTIONAL {
    ?producer a dbo:MusicProducer ;
              dbp:nameNoel_Cabangon .
  }

  OPTIONAL {
    ?band a dbo:MusicalBand ;
          dbp:leadMemberBob_Thompson .
  }
}
LIMIT 10
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
293,66,val,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Identify Tisha Sterling's parent
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling"" .
  
  ?parent dbo:child ?tishaSterling .

  # Step 2: Find the birth name of one of her parents
  OPTIONAL { ?parent dbp:birthName ?birthName . }

  # Step 3: Identify an actor associated with ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute"" .
  ?actor dbo:actedIn ?movie ;
         foaf:name ?actorName .

  # Step 4: Determine the spouse of that actor
  ?spouse dbo:spouse ?actor ;
          foaf:name ?spouseName .

  # Step 5: Find the ruling party member in Central, Louisiana
  ?partyMember dbo:memberOf ?rulingParty ;
               dbo:birthPlace dbr:Central,_Louisiana .
  
  FILTER(?birthName = ?spouseName)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
80,65,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with  and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify songs by T.I.
  ?song a dbo:Songs .
  ?song dbo:artist dbr:T.I. .

  # Step 2: Find albums associated with these songs
  ?album dbo:song ?song .
  
  # Step 3: Identify actors involved in the album
  ?actor dbo:album ?album .

  # Step 4: Identify movies featuring ""The Shadow"" as an alter ego
  ?movie dbo:character dbr:The_Shadow .
  ?actor dbo:film ?movie .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
119,65,val,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:memberOf dbr:Spanish_Socialist_Workers'_Party .
  ?person dbo:electionCandidate [
    dbo:election dbr:2009_Galician_regional_election ;
    dbo:office ?office
  ].
  ?person dbo:residence ?residence .
  ?residence a dbo:CivicOrganisation ; 
             dbo:member ?tenant .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
756,65,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerClubSeason ;
        dbo:season ""2007–08""^^xsd:string ;
        dbo:club dbr:VfL_Bochum .

  ?person foaf:name ""Thomas Letsch""@en .
  ?person dbo:position dbp:Manager .
  ?person dbo:managedTeam ?team .

  ?leader a dbo:Leader ;
          dbo:country dbr:West_Germany .
  
  ?administration dbo:leader ?leader .
  ?birthPlace dbo:administrativeRegion ?administration .
  ?person dbo:birthPlace ?birthPlace .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
159,63,val,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderInWar ?successorCommander WHERE {
  # Jean Baptist, Comte d'Arco as a commander in a war
  ?war dbo:commander dbr:Jean_Baptist,_Comte_d%27Arco ;
       dbo:wikiPageRedirects ?redirectedWar .
  
  # The war is also a television show and societal event
  ?redirectedWar rdf:type dbo:TelevisionShow, dbo:SocietalEvent .

  # Successor of the commander who is a politician and office holder
  ?successorCommander dbo:predecessor dbr:Jean_Baptist,_Comte_d%27Arco ;
                     rdf:type dbo:Politician, dbo:OfficeHolder .
  
  # Michał Kazimierz Pac's involvement in a force that is an event and military conflict
  ?force dbo:commander dbr:Micha%C5%82_Kazimierz_Pac ;
         rdf:type dbo:Event, dbo:MilitaryConflict .

  # Reference to the writer of ""Always the Love Songs""
  ?writer foaf:name ""John Doe"" ; # Replace with actual name if known
          dbo:work dbr:Always_the_Love_Songs .
  
  # Linking the successor commander to Michał Kazimierz Pac's force
  ?successorCommander dbo:commander ?force .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
737,65,val,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Alexander of Württemberg (1804-1881)
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear .

  # Step 2: Find his child
  ?child1 dbo:parent ?alexander .
  
  # Step 3: Find the grandchild of that child
  ?grandchild dbo:parent ?child1 .
  
  # Step 4: Find the great-grandchild (Philipp Albrecht, Duke of Württemberg)
  ?philippAlbrecht dbo:parent ?grandchild ;
                   foaf:name ""Philipp Albrecht, Duke of Württemberg"" .

  # Step 5: Identify Archduke Charles Louis of Austria's child and their child (a royalty)
  ?archduke a dbo:Person ;
            foaf:name ""Archduke Charles Louis of Austria"" .
  
  ?child2 dbo:parent ?archduke .
  ?royaltyChild dbo:parent ?child2 ;
                a dbo:Royalty .

  # Step 6: Find the predecessor in the royal line
  ?predecessor dbo:successor ?philippAlbrecht ;
               a dbo:Monarch .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,64,val,"Give me the birth place of Glenn Youngkin and birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName (GROUP_CONCAT(?birthPlaceLabel; separator="", "") AS ?birthPlaces) WHERE {
  # Glenn Youngkin
  { 
    dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .
    ?youngkinBirthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
  }
  
  UNION
  
  # Awardee associated with Vince Gilligan's award
  {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?gilliganAwardeeBirthPlace .
    ?gilliganAwardeeBirthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
  }
  
  UNION
  
  # American author referenced in El Deafo
  {
    dbr:El_Deafo dbo:reference ?author .
    ?author a dbo:Writer ;
            dbo:nationality dbr:United_States .
    ?author dbo:birthPlace ?elDeafoAuthorBirthPlace .
    ?elDeafoAuthorBirthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
  }
  
  # Bind the person names
  {
    OPTIONAL { dbr:Glenn_Youngkin foaf:name ?youngkinName . }
    OPTIONAL { ?awardee foaf:name ?gilliganAwardeeName . }
    OPTIONAL { ?author foaf:name ?elDeafoAuthorName . }
    
    BIND(COALESCE(?youngkinName, ?gilliganAwardeeName, ?elDeafoAuthorName) AS ?personName)
  }
}
GROUP BY ?personName
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,65,val,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby and his children who are politicians
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child1 .
  ?child1 a dbo:Politician .

  # Awardee of Commander of the Royal Victorian Order
  ?child1 dbp:honours ""Commander of the Royal Victorian Order""@en .

  # Edward Stanley, 17th Earl of Derby and his parents
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .
  
  # Parent who is a politician and office holder
  ?parent a dbo:Politician ;
          dbo:officeHolder ?office .

  # Linking the children to find the father
  ?child1 dbo:father ?father .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,63,val,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Shatrughan Sinha's movies
  ?movie dbo:starring dbr:Shatrughan_Sinha .
  
  # The Shadow's television show
  ?tvShow dbo:starring dbr:The_Shadow_(television_series) .

  # Find a common actor in both the movie and TV show
  ?actor dbo:starring ?movie ;
         dbo:starring ?tvShow .
}
```",7,8,8,3,3,3,3,71,0,0,13,0,0.0,0
80,63,val,Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # The Shadow's alter ego
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .

  # Professional who is Lamont Cranston
  ?professional foaf:name ""Lamont Cranston""@en .
  
  # Movie featuring Matthew Stover
  ?movie dbo:writer dbr:Matthew_Stover .
  ?movie dbo:starring ?actor .
  
  # Album related to T.I.'s song
  dbr:Urban_Legend_(T.I._album) dbo:artist dbr:T.I. .
  ?album dbo:track ?song .
  ?song dbp:title ""What You Know""@en .
  ?album dbo:starring ?actor .

  # Ensure the professional is linked to both movie and album
  FILTER (?actor = ?professional)
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
706,18,val,Give me the birthplace of the actor of Akaler Shandhaney and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?movie dbo:title ""Akaler Shandhaney""@en .
  ?movie dbo:actor ?person .
  ?person dbo:birthPlace ?birthPlace .
}

SELECT ?birthPlace WHERE {
  ?person dbo:honoraryTitle dbr:Sangeet_Natak_Akademi_Fellowship .
  ?person dbo:birthPlace ?birthPlace .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
198,65,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor and force of the awardee of the award of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Henry Clay Lewis's birthplace
  ?henry a dbo:Person ;
         dbp:birthPlace ?birthPlace .
  
  # Ensure the birthplace is an American settlement
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Quincy Adams Gillmore as awardee of Medal of Honor and another award
  ?gillmore a dbo:Person ;
            dbp:honor ""Medal of Honor""@en ;
            dbp:award ?anotherAward .
  
  # Connect the entity related to both
  ?entity dbo:birthPlace ?birthPlace ;
          dbo:awardeeOf ?medalOfHonor ;
          dbo:awardeeOf ?anotherAward .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,26,val,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Maximilian I and his children
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child .
  
  # Child of Maximilian I who is the father of Louis II, Count Palatine of Simmern
  ?child dbp:spouse ?spouse .
  ?spouse dbo:child ?louisII .
  ?louisII foaf:name ""Louis II, Count Palatine of Simmern""@en .

  # Philip I of Castile's child that is a royalty
  dbr:Philip_I_of_Castile dbo:child ?joanna .
  ?joanna foaf:name ""Joanna of Castile""@en .
  
  # Linking the relationships
  ?person dbp:spouse ?spouse2 .
  ?spouse2 dbo:child ?joanna .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
687,62,val,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?actorSoccerPlayer ?team WHERE {
  # Find Marty Pollio's birthday
  VALUES (?martyBirthday) { 
    SELECT ?birthday WHERE {
      ?person a dbo:Person ;
              foaf:name ""Marty Pollio"" ;
              dbp:birthday ?birthday .
    }
  }

  # Find an athlete born on Marty Pollio's birthday
  ?athlete a dbo:Athlete ;
           dbp:birthday ?martyBirthday .

  # Find a soccer player who is also an actor in a film by Manuel Huerga
  ?actorSoccerPlayer a dbo:SoccerPlayer, dbo:Actor ;
                     dbo:birthPlace ?place ;
                     dbp:team ?film .
  ?film dbo:director dbr:Manuel_Huerga .

  # Find Pablo Aimar's team
  ?pabloAimar a dbo:SoccerPlayer ;
              foaf:name ""Pablo Aimar"" ;
              dbp:team ?team .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
531,62,val,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeOfCommander WHERE {
  # Manuel Pinto da Costa's role in a military conflict
  ?manuelPinto a dbo:OfficeHolder ;
               dbo:positionHeld ?militaryConflict .
  
  ?militaryConflict a dbo:MilitaryConflict .

  # Leader of the 2003 Madrid City Council election and their residence
  ?madridElection dbr:2003_Madrid_City_Council_election ;
                 dbo:leader ?leaderOfMadridElection .
  
  ?leaderOfMadridElection dbo:residence ?residence .

  # Miguel Maura's office
  ?miguelMaura a dbo:OfficeHolder ;
               dbo:positionHeld ?officeOfMiguelMaura .

  # Linking the residence of the leader to Manuel Pinto da Costa's military conflict
  ?manuelPinto dbo:residence ?residence .
  
  # Linking Miguel Maura's office to the commander's office
  ?militaryConflict dbo:commander ?officeOfCommander ;
                    dbo:tenant ?officeOfMiguelMaura .

}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
347,66,val,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Maria Anna of Bavaria and her children
  dbr:Maria_Anna_of_Bavaria (dbo:spouse|dbo:partner) ?father .
  
  # Children of the father (Maria Anna's children)
  ?father dbo:child ?child .

  # Grandchildren of Maria Anna (children of her children)
  ?child dbo:child ?grandchild .

  # Check if grandchild is royalty and a commander in war
  ?grandchild a dbo:Monarch .
  OPTIONAL { 
    ?warEvent dbo:commander ?grandchild ;
              a dbo:MilitaryConflict .
    FILTER EXISTS {
      ?warEvent dbp:involvedUnit dbr:2nd_Dragoon_Regiment_(France)
    }
  }

  # Check if grandchild is also the father of Ferdinand III's child
  OPTIONAL { 
    ?ferdinandChild dbo:father ?grandchild ;
                    a dbo:Person .
    FILTER EXISTS {
      ?ferdinandChild dbp:parent dbr:Ferdinand_III,_Holy_Roman_Emperor
    }
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
58,18,val,Give me the producer of the movie with  and spouse of the person born as the birth name of Linda Bruckheimer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  dbr:Linda_Bruckheimer dbp:birthName ?birthName .
  ?person dbp:birthName ?birthName .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:produced ?movie .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
198,64,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Quincy Adams Gillmore"" .
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5) .

  ?person dbo:militaryService ?force .
  
  ?award a dbo:Award .
  ?award dbp:awardee ?person .
  ?award dbo:country dbr:United_States .
  ?award dbo:relatedEvent ?war .

  ?person dbo:birthPlace ?settlement .
  FILTER (isBlank(?settlement) = false && strstarts(str(?settlement), ""http://dbpedia.org/resource/"")) .
  
  ?settlement a dbo:Settlement .
  ?settlement dbo:country dbr:United_States .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,66,val,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo ?profession ?sharedProject WHERE {
  # The Shadow's comics character alter ego
  dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow .
  dbr:The_Shadow dbo:alterEgo ?alterEgo .

  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?profession .

  # Shared project between Richard E. Grant and Shatrughan Sinha
  ?sharedProject dbo:starring dbr:Richard_E._Grant .
  ?sharedProject dbo:starring dbr:Shatrughan_Sinha .
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
628,65,val,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find musical artists native to Florida
  ?artist a dbo:MusicalArtist .
  ?artist dbo:birthPlace dbr:Florida .

  # Step 2: Identify the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedBand dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?award a dbo:Award .
  ?award dbo:location ?region .
  
  # Ensure the region is an American state and settlement
  ?region rdf:type dbo:State ;
          dbo:country dbr:United_States_of_America .

  # Step 3: Find band members of Bobby Shmurda's associated musical artist
  ?bshmurdaArtist dbo:associatedBandMember ?bandMember .
  ?bshmurdaArtist dbp:associatedMusicalArtist dbr:Bobby_Shmurda .
  
  # Link the person to all conditions
  FILTER (?artist = ?person && ?region = ?awardLocation && ?bandMember = ?person)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
80,66,val,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?featuredArtist WHERE {
  # Part 1: Actor associated with T.I. (assuming media appearances)
  OPTIONAL {
    ?media dbo:starring dbr:T.I. .
    ?media dbo:starring ?actor .
  }

  # Part 2: Featured artists on the song ""What You Know""
  OPTIONAL {
    ?song dbp:title ""What You Know"" .
    ?song dbo:artist dbr:T.I. .
    ?song dbo:featuredArtist ?featuredArtist .
  }
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
295,18,val,"Give me the native of the birth place of Victor Saville and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePerson WHERE {
  # Step 1: Victor Saville's birth place
  ?victorSaville a dbo:FilmDirector ;
                 dbp:birthPlace ?birthPlace .

  # Step 2: Native of the same birth place
  ?nativePerson dbo:nationality dbr:United_Kingdom ; # Assuming native means nationality for simplicity
                dbo:birthPlace ?birthPlace .

  # Step 3: Steven Kapur's true self (artist)
  ?stevenKapur a dbo:Artist ;
               dbp:trueSelf ?trueSelfArtist .

  # Step 4: Writer of a musical work by that artist
  ?musicalWork dbo:composer ?trueSelfArtist ;
               a dbo:MusicalComposition .
  OPTIONAL { ?musicalWork dbo:lyricist ?writer . }

  FILTER(?writer != ?nativePerson) # Ensure the writer is not the native person themselves

}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
258,18,val,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university ?establishmentDate WHERE {
  # Luiza Erundina's alma mater
  ?luiza a dbo:Politician ;
         dbp:almaMater ?university .
  
  # Eleonora Menicucci de Oliveira's alma mater
  ?eleonora a dbo:Politician ;
            dbp:birthName ""Eleonora Menicucci de Oliveira"" ;
            dbp:almaMater ?university .

  # Ensure the university is an educational institution and organization
  ?university a dbo:University ;
              a dbo:EducationalOrganization ;
              a dbo:Organisation .
  
  # Get the establishment date of the university
  OPTIONAL { ?university dbo:foundingDate ?establishmentDate . }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
737,63,val,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Duke Philipp of Württemberg's child's child
  ?duke a dbo:Person ;
        foaf:name ""Duke Philipp of Württemberg"" .
  ?child1 dbo:parent ?duke ;
          dbo:child ?grandchild1 .

  # Archduke Charles Louis of Austria's child's child who is royalty
  ?archduke a dbo:Person ;
            foaf:name ""Archduke Charles Louis of Austria"" .
  ?child2 dbo:parent ?archduke ;
          dbo:child ?grandchild2 .
  ?grandchild2 a dbo:Royalty .

  # Archduchess Helena of Austria's spouse and their child
  ?archduchess a dbo:Person ;
               foaf:name ""Archduchess Helena of Austria"" .
  ?spouse dbo:spouse ?archduchess ;
          dbo:child ?child3 .

  # Predecessor of the child of Archduchess Helena's spouse
  ?predecessor dbo:successor ?child3 .

  # The individual we are looking for is a common person in all these relationships
  ?individual = ?grandchild1 .
  ?individual = ?grandchild2 .
  ?individual = ?predecessor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,64,val,"Give me the child of the parent of the child of Minye Kyawswa and spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Minye Kyawswa's child
  ?child dbo:parent dbr:Minye_Kyawswa .
  
  # Parent of that child (Minye Kyawswa)
  ?minyeKyawswa a dbo:Person ;
                dbo:child ?child .

  # Spouse of Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               dbp:spouse ?spouse .

  # Predecessor of the child of the spouse
  ?spouseChild dbo:parent ?spouse .
  ?predecessor dbo:successor ?spouseChild .

  # Royalty of Saw Min Phyu's spouse
  ?sawMinPhyu a dbo:Person ;
              dbp:spouse ?royaltySpouse .
  ?royaltySpouse a dbo:Royalty .

  # The person we are looking for is the predecessor found above
  ?predecessor = ?person .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,64,val,"Give me the father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Eleonore of Austria and her father
  ?eleonore a dbo:Person ;
            dbp:mother ?mother .
  ?mother dbp:spouse ?father .
  
  # Father is a commander in a war
  ?father dbo:occupation dbr:Military_commander .

  # Algerian War related events
  ?event dbo:type dbr:Societal_event ;
         dbo:relatedWorkOrEvent ?algerianWar .
  ?tvShow dbo:genre dbr:Television_show ;
          dbo:subject ?algerianWar .
  
  # Military force in the Algerian War
  ?militaryForce dbo:partOf ?algerianWar .

  # Maria Anna of Bavaria (1574) and her child who is royalty
  ?mariaAnna a dbo:Person ;
             dbp:birthYear ""1574""^^xsd:gYear ;
             dbp:child ?royaltyChild .
  ?royaltyChild a dbo:Royalty .
  
  # Connect the father of Eleonore to the military force and royalty child
  ?father dbo:relatedTo ?militaryForce .
  ?father dbo:relatedTo ?royaltyChild .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,62,val,"Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickCurranArtist ?kimWilsonBandName ?bandOfPersonBorn1945 WHERE {
  # Nick Curran's associated musical artist
  OPTIONAL { 
    ?nickCurran dbo:associatedMusicalArtist ?nickCurranArtist .
    FILTER (str(?nickCurran) = ""Nick_Curran"")
  }

  # Kim Wilson's band name
  OPTIONAL {
    ?kimWilson dbo:bandName ?kimWilsonBandName .
    FILTER (str(?kimWilson) = ""Kim_Wilson"")
  }
  
  # Band of the person born on March 30, 1945
  OPTIONAL {
    ?person dbo:birthDate ?birthDate ;
            dbo:associatedMusicalArtist ?bandOfPersonBorn1945 .
    FILTER (YEAR(xsd:date(?birthDate)) = 1945 && MONTH(xsd:date(?birthDate)) = 3 && DAY(xsd:date(?birthDate)) = 30)
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
816,63,val,"Give me the parent of the professional in Photographer and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfPhotographer WHERE {
  # Allan Arbus and his child
  dbr:Allan_Arbus dbo:child ?child .
  
  # The child is a photographer
  ?child a dbo:Photographer .

  # Find the movie this person acted in
  ?movie dbo:starring ?actor .
  FILTER (?actor = ?child) .

  # Identify the parent of the photographer
  ?parentOfPhotographer dbo:child ?child .

  # Find the decedent associated with Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles_County,_California .
  
  # Link the movie to the decedent (assuming a connection exists)
  ?movie dbp:decedent ?decedent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,63,val,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .

  # Step 2: Find his children who are politicians
  ?child dbo:parent ?frederick ;
         a dbo:Politician .

  # Step 3: Determine the parents of these politician children
  ?parent dbo:child ?child .

  # Step 4: Identify the awardee of an award associated with Rodney Lees and find their parent
  ?award dbr:Rodney_Lees .
  ?awardee dbo:recipientOf ?award ;
           dbo:parent ?parent2 .

  FILTER(?parent = ?parent2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,62,val,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  # Step 1: Identify Darryl Paa Kwesi Bannerman-Martin's professional name
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person foaf:name ?professionalName .

  # Step 2: Find musical artists associated with ""The Live Anthology""
  ?album a dbo:Album ;
         dbp:title ""The Live Anthology"" ;
         dbo:artist ?associatedArtist .
  
  # Ensure the person is a writer and a musical artist
  ?person dbo:occupation dbr:Writer ;
          dbo:occupation dbr:MusicalArtist .

  # Step 3: Determine the birth name of ""$pacely""
  ?pacely foaf:name ""$pacely"" .
  ?pacely dbp:birthName ?birthNameOfPacely .

  # Step 4: Identify any musical artist associated with the person from step 3
  ?associatedArtist dbo:associatedMusicalArtist ?personFromStep3 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,62,val,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Step 1: Identify Hillary Clinton's spouse
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  
  # Step 2: Find the resident of Chappaqua, New York who is a politician and office holder
  ?resident dbo:residence dbr:Chappaqua,_New_York ;
            a dbo:Politician ;
            dbo:officeHolder ?office .

  # Step 3: Ensure this resident is the spouse identified in step 1
  FILTER(?spouse = ?resident)

  # Step 4: Identify the work authored by this resident that is both a book and written work
  ?work dbo:author ?resident ;
        a dbo:Book, dbo:WrittenWork .

  # Step 5: Find the author of this work
  ?work dbo:author ?author .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
943,63,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Na'od and his father
  ?naod a dbo:Person ;
        dbp:parent ?fatherNaod .
  
  # Father of Na'od's father (Grandfather)
  ?fatherNaod dbp:parent ?grandfather .

  # Ensure both are royalty and office holders
  ?fatherNaod a dbo:Monarch ; 
              dbo:officeHolderOf ?office1 .
  ?grandfather a dbo:Monarch ;
               dbo:officeHolderOf ?office2 .

  # Commander in Siege of Mukha
  ?commander a dbo:Person ;
             dbp:event dbr:Siege_of_Mukha ;
             dbo:role dbr:Commander ;
             a dbo:Monarch .
  
  # Parent of the commander
  ?commander dbp:parent ?parentCommander .

  # Alter ego of The Shadow
  ?shadowAlterEgo rdfs:label ""The Shadow""@en ;
                  dbo:alterEgoOf ?personWithShadowEgo .

  # Linking all together
  FILTER(?fatherNaod = ?parentCommander)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
39,66,val,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  
  # Condition for birth name
  ?person dbp:birthName ""Bob Thompson""@en .

  # Condition for professional name (Sam Concepcion)
  OPTIONAL { 
    ?person foaf:name ""Sam Concepcion""@en .
  }

  # Condition for alter ego (The Shadow)
  OPTIONAL {
    ?person dbo:alias dbr:The_Shadow .
  }
  
  # Retrieve the band associated with the person
  ?band a dbo:Band ;
        dbo:member ?person .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
23,25,val,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Roy Leonardo Barreras Montealegre"" .
  ?person dbo:birthPlace dbr:Colombia .
  OPTIONAL { ?person dbp:politicalParty ?party . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,64,val,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?georgeDucasRef ?successorRef WHERE {
  # Reference to George Ducas
  dbr:George_Ducas a dbo:Person ;
                   rdfs:label ""George Ducas""@en .

  # Michał Kazimierz Pac as a commander in the Battle of Vienna
  dbr:Mikołaj_Pac a dbo:Person ;
                  dbp:commanderIn ?battleOfVienna .
  
  # The Battle of Vienna as an event and military conflict
  ?battleOfVienna a dbo:MilitaryConflict, dbo:Event ;
                  rdfs:label ""Battle of Vienna""@en .

  # Find the successor of Michał Kazimierz Pac in his role
  OPTIONAL {
    ?successor a dbo:Person ;
               dbp:commanderIn ?battleOfVienna .
    FILTER(?successor != dbr:Mikołaj_Pac)
  }

  BIND(dbr:George_Ducas AS ?georgeDucasRef)
  BIND(COALESCE(?successor, ""No successor found"") AS ?successorRef)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
375,18,val,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbo:birthPlace dbr:London .
  
  ?work dbo:author ?person ;
        a dbo:Film ;
        a dbo:TelevisionShow .

  ?deceasedPerson dbp:dateOfDeath ""2020-06-18""^^xsd:date ;
                  a dbo:Artist ;
                  a dbo:MusicalArtist ;
                  foaf:name ?name .
  
  FILTER(?person = ?deceasedPerson)

  OPTIONAL { ?person dbo:parent ?parent . }
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
246,18,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Princess Aisha bint Faisal's children who are royalty
  ?childA a dbo:Person ;
          dbo:spouseOrPartner ?aisha ;
          dbo:parent ?parentA .
  
  # Prince Faisal bin Hussein's children who are royalty
  ?childB a dbo:Person ;
          dbo:spouseOrPartner ?faisal ;
          dbo:parent ?parentB .

  # Linking to Princess Aisha bint Faisal and Prince Faisal bin Hussein
  ?aisha dbr:Princess_Aisha_bint_Faisal .
  ?faisal dbr:Prince_Faisal_bin_Hussein .

  # Ensuring the children are royalty
  ?childA dbo:royalty true .
  ?childB dbo:royalty true .

  # Finding a common parent for these royal children
  FILTER (?parentA = ?parentB)
  BIND(?parentA AS ?parent)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
103,62,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v3 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  # Step 1: Identify Richard Grant Esterhuysen (aka Kurt Russell)
  ?kurt a dbo:Actor ;
        foaf:name ""Kurt Russell"" ;
        dbp:birthName ""Richard Grant Esterhuysen"" .

  # Step 2: Find a television show that is also a movie
  ?show a dbo:TelevisionShow, dbo:Film ;
        dbo:starring ?kurt .

  # Step 3: Identify the actor of this show who is also a politician in ""Ab Kya Hoga""
  ?actor a dbo:Actor ;
         dbo:starring ?show .
  
  ?abKyaHoga a dbo:TelevisionShow ;
             dbo:title ""Ab Kya Hoga"" .

  ?politicianRole a dbo:PoliticianRole ;
                  dbo:characterName ?actorName ;
                  dbo:inMediaWork ?abKyaHoga .

  # Ensure the actor is linked to both roles
  ?actor foaf:name ?actorName .
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
557,64,val,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerTomSawyer ?producerClaimToFame WHERE {
  # Producer of The Adventures of Tom Sawyer (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Actor in High Society Blues
  dbr:High_Society_Blues dbo:starring ?actor .
  
  # Claim to fame of the actor (a movie or work)
  ?claimToFame dbo:starring ?actor .
  OPTIONAL { ?claimToFame a dbo:FictionalWork . }
  OPTIONAL { ?claimToFame a dbo:Film . }

  # Producer of the claim to fame
  ?claimToFame dbo:producer ?producerClaimToFame .

  # Reference to Kent Allard (fictional character)
  dbr:Kent_Allard dbo:fictionalCharacterOf ?reference .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,65,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist ?band ?realName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Nicholas Michael Curran"" .
  ?person dbp:birthday ""1945-03-30""^^xsd:date .
  
  # Find the band associated with Stevie Ray Vaughan
  ?bandMember dbo:member ?band ;
              foaf:name ?artist .
  FILTER(?artist = dbr:Stevie_Ray_Vaughan) .

  # Reference to the real name of The Fabulous Thunderbirds
  ?fabulousThunderbird a dbo:MusicalArtist ;
                      dbp:realName ?realName .
  FILTER(?realName = ""The Fabulous Thunderbirds"") .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,26,val,"Give me the spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?movie WHERE {
  # Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbp:spouse ?spouse .

  # Movies featuring Audrey Hepburn
  ?audreyMovie dbo:starring dbr:Audrey_Hepburn .
  
  # Movies featuring Iliza Shlesinger
  ?ilizaMovie dbo:starring dbr:Iliza_Shlesinger .

  # Find common movie between Audrey Hepburn and Iliza Shlesinger
  FILTER (?audreyMovie = ?ilizaMovie)
  BIND(?audreyMovie AS ?movie)
}
```",5,9,6,2,3,2,3,28,0,0,1,0,0.0,0
225,18,val,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards and entity in the region of the time zone in Kiyosu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?person dbo:nationality dbr:Japan .
  ?person dbo:birthPlace ?birthPlace .

  # Assuming there's a way to link the person to Kiyosu region via time zone
  ?region dbo:timeZone dbr:Asia/Tokyo .
  ?region dbo:location dbr:Kiyosu_City .
  ?person dbo:locatedIn ?region .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,62,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?commander a dbo:Monarch ;
             dbo:spouseOrPartner ?parent ;
             dbo:child ?child .
  
  ?commander dbo:placeOfBirth dbr:Mukha .

  ?baedaMaryamI dbp:father ?commander ;
                rdfs:label ""Baeda Maryam I""@en .

  OPTIONAL { ?shadow foaf:name ""Lamont Cranston""@en . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
756,63,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the successor season of VfL Bochum's 2006-07 season
  ?successorSeason dbo:succeeds dbr:2006%E2%80%9307_VfL_Bochum_season .
  
  # Identify a sports club and organization that is also a soccer club in this successor season
  ?team dbo:participatedIn ?successorSeason ;
        a dbo:SoccerClub, dbo:SportsOrganization .

  # Find the manager of this team during the specified season
  ?manager dbp:managedTeam ?teamDuringSuccessor ;
           dbp:birthPlace dbr:Germany . # Manager is native to Germany

  # Ensure the manager has managed a team in any season associated with Thomas Letsch
  ?letschSeason dbo:managedBy dbr:Thomas_Letsch .
  ?manager dbp:managedTeam ?teamDuringLetsch ;
           dbp:managedTeam ?teamDuringSuccessor .

}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
816,64,val,"Give me the parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentAmyArbus ?parentChildSpouseMariclareCostello WHERE {
  # Amy Arbus's parent
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus"" ;
            dbo:child ?child .
  ?parentAmyArbus dbo:child ?child .

  # Mariclare Costello's spouse and their child's parent
  ?mariclareCostello a dbo:Person ;
                     foaf:name ""Mariclare Costello"" ;
                     dbo:spouse ?spouse .
  ?spouse dbo:child ?childSpouse .
  ?parentChildSpouseMariclareCostello dbo:child ?childSpouse .

  # Actor of the movie with a person decedent at Los Angeles
  ?movie dbo:actor ?actor ;
         dbo:location dbr:Los_Angeles .
  ?decedent dbo:diedIn ?losAngelesDeath ;
            dbo:deathPlace ?losAngelesDeath .
  FILTER(?losAngelesDeath = dbr:Los_Angeles)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
687,64,val,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInAgüeroTeam ?soccerPlayerManager ?athleteOnPollioBirthday WHERE {
  # Sergio Agüero's team
  dbr:Sergio_Ag%C3%BCero dbo:playsFor ?team .
  
  # Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbp:birthday ?sarmientoBirthDate .

  # Soccer player and manager born on Marcelo Sarmiento's birthday
  ?soccerPlayerManager a dbo:SoccerPlayer ;
                      a dbo:SoccerManager ;
                      dbp:birthday ?sarmientoBirthDate .
  
  # Marty Pollio's birthdate
  dbr:Marty_Pollio dbp:birthday ?pollioBirthDate .

  # Athlete born on Marty Pollio's birthday
  ?athleteOnPollioBirthday a dbo:Athlete ;
                          dbp:birthday ?pollioBirthDate .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
737,64,val,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Albrecht, Duke of Württemberg and his children
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?child .
  
  # Grandchildren (child of Albrecht's child)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parentOfMargareteSophie .

  # Spouse and children of Archduchess Helena of Austria
  dbr:Helena_of_Austria dbo:spouse ?spouse .
  ?spouse dbo:child ?childOfSpouse .

  # Predecessor logic (assuming sibling or previous in line)
  ?parentOfMargareteSophie dbo:child ?predecessor .
  FILTER(?grandchild != ?predecessor)

  # Ensure the grandchild is a predecessor of one of Helena's spouse's children
  ?predecessor dbo:siblingOrPredecessor ?childOfSpouse .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,63,val,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderOffice ?leaderOffice ?tenantResidence WHERE {
  # Commander in Central African Republic Civil War
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?commanderRole .
  ?commanderRole dbo:roleName ?commanderOffice .
  ?person dbo:memberOf dbr:Civil_War_in_the_Central_African_Republic .

  # Leader of Conservative Republican Party (Spain)
  ?leader a dbo:Politician ;
          dbo:officeHolderOf ?partyLeaderRole .
  ?partyLeaderRole dbo:roleName ?leaderOffice .
  ?leader dbo:memberParty dbr:Conservative_and_Renewal_Party_(Spain) .

  # Tenant of the Residence of the Leader in 2003 Madrid City Council Election
  ?mayor a dbo:Politician ;
         dbo:electedAsMayorOf dbr:Madrid_City_Council_Election,_2003 .
  ?residence dbo:tenant ?mayor .
  ?residence dbp:name ?tenantResidence .

  # Linking the leader of the Madrid City Council to the tenant
  FILTER(?leader = ?mayor)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
668,66,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1 ?artist2 WHERE {
  # Find Shatta Wale by birth name
  ?person1 a dbo:MusicalArtist .
  ?person1 dbp:birthName ""Elorm Kabu Amenyah""@en .

  # Find an artist from Central Region, Ghana
  ?person2 a dbo:MusicalArtist .
  ?person2 dbo:birthPlace dbr:Central_Region,_Ghana .
  OPTIONAL { ?person2 foaf:name ?name2 . }

  # Ensure the person is also associated with Rod Argent's profession (keyboardist)
  ?person2 dbo:profession dbr:Keyboardist .

  BIND(?person1 AS ?artist1)
  BIND(?person2 AS ?artist2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
398,18,val,"Give me the player in the writer of The First Glove and figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?nickname WHERE {
  # Find Denis Kolodin as the writer of ""The First Glove""
  ?work dbo:author dbr:Denis_Kolodin .
  ?work rdfs:label ""The First Glove""@en .

  # Identify the player associated with Denis Kolodin
  ?player dbo:associatedWith dbr:Denis_Kolodin .
  
  # Find the nickname of that player, which is also a soccer club
  ?player dbp:nickname ?nickname .
  ?club a dbo:SoccerClub ;
        rdfs:label ?nickname .

  FILTER (lang(?workLabel) = ""en"")
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
668,65,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find Joey B and his associated musical artist
  ?joeyB a dbo:MusicalArtist ;
         dbp:birthName ""Elorm Kabu Amenyah"" .
  
  OPTIONAL { 
    ?joeyB dbo:associatedWith ?artist1 .
    ?artist1 a dbo:MusicalArtist .
  }
  
  # Find the writer of ""The Live Anthology""
  ?writer a dbo:Writer ;
          dbo:work dbr:The_Live_Anthology ;
          a dbo:MusicalArtist .
  
  OPTIONAL { 
    ?writer dbo:associatedWith ?artist2 .
    ?artist2 a dbo:MusicalArtist .
  }
  
  # Find common associated musical artist
  VALUES ?commonArtist {
    ?artist1
    ?artist2
  }
  
  FILTER(?artist1 = ?artist2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
386,26,val,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeWar ?baggovutWar ?birthPlaceEntity WHERE {
  # Find the war associated with an awardee of the Golden Sword for Bravery
  ?person dbo:award dbr:Golden_Sword_for_Bravery .
  ?person dbo:participatedIn ?awardeeWar .

  # Find the war associated with Karl Gustav von Baggovut
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?baggovutWar .

  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė and any notable entity there
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:notableFor ?birthPlaceEntity .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
80,62,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book) and professional in .","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Identify T.I.'s song that is also a musical work
  ?song a dbo:Songs .
  ?song dbo:artist dbr:T.I. .

  # Step 2: Find the album associated with this song
  ?album dbo:song ?song .
  
  # Step 3: Determine the author of ""Smartbomb""
  ?smartbombAuthor dbo:authorOf dbr:Smartbomb .
  
  # Step 4: Identify the movie featuring the author of ""Smartbomb""
  ?movie dbo:starring ?actor .
  ?movie dbo:writer ?smartbombAuthor .

  # Optional: Check for any professional connection
  OPTIONAL { 
    ?connection dbo:profession ?profession .
    ?actor dbo:professionalConnection ?connection .
  }
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
203,62,val,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battle1MilitaryForce ?battle2MilitaryForce WHERE {
  # Battle of Cape Finisterre (1805)
  ?battle1 a dbo:MilitaryConflict ;
           dbo:date ""1805-07-22""^^xsd:date ;
           dbo:participatingMilitaryUnit ?unit1 .
  
  OPTIONAL { 
    ?unit1 dbp:militaryForce ?battle1MilitaryForce .
  }
  
  # Military conflict involving William Bayne and The Triple X's
  ?battle2 a dbo:MilitaryConflict ;
           dbo:participant ?bayne ;
           dbo:commander ?tripleXsCommander .

  ?bayne foaf:name ""William Bayne"" .
  ?tripleXsCommander foaf:name ""The Triple X's"" .

  OPTIONAL { 
    ?battle2 dbo:participatingMilitaryUnit ?unit2 .
    ?unit2 dbp:militaryForce ?battle2MilitaryForce .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
89,63,val,"Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Saw Shwe Khet's child
  ?sawChild dbo:parent dbr:Saw_Shwe_Khet .
  
  # Minye Kyawswa's grandchild
  ?minyeGrandchild dbo:parent ?minyeChild .
  ?minyeChild dbo:parent dbr:Minye_Kyawswa .

  # Myat Hpone Pyo's father's spouse
  ?myatFather dbp:spouse ?myatSpouse .
  ?myatFather dbo:child dbr:Myat_Hpone_Pyo .

  # Find the royalty that fits all criteria
  ?person dbo:parent ?sawChild ;
          dbo:parent ?minyeGrandchild ;
          dbo:parent ?myatSpouse ;
          a dbo:Royalty .
  
  # Find predecessor of this person
  ?predecessor dbo:successor ?person .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
140,18,val,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Pickett's Charge event
  ?event a dbo:MilitaryEngagement ;
         dbo:name ""Pickett's Charge""@en ;
         dbo:commander ?commander .

  # Commander is a person and has political party membership
  ?commander a dbo:Person ;
             dbp:memberOf ?party .
  
  # Political party is ruling at some point
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:United_States ;
         dbo:hasMember ?member .

  # Party member has ties to Westport, Connecticut
  ?member dbo:residence dbr:Westport,_Connecticut .
}
```",5,8,6,3,2,3,2,20,0,0,4,0,0.0,0
353,62,val,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalChild WHERE {
  # Step 1: Roger II of Sicily's child who is royalty
  ?child1 dbo:parent dbr:Roger_II_of_Sicily .
  ?child1 a dbo:Monarch .

  # Step 2: Parent of this child (could be mother or father)
  OPTIONAL { ?parentOfChild1 dbo:spouse ?spouse . }
  OPTIONAL { ?parentOfChild1 dbo:child ?child1 . }

  # Step 3: Child of this parent who is royalty
  ?child2 dbo:parent ?parentOfChild1 .
  ?child2 a dbo:Monarch .

  # Step 4: Reference to a royalty and office holder related to William I
  ?officeHolder dbo:relatedTo dbr:William_I_of_Sicily .
  ?officeHolder a dbo:Monarch .
  ?officeHolder dbo:officeTitle ?title .

  # Step 5: Child of Elvira of Castile, Queen of Sicily
  ?child3 dbo:parent dbr:Elvira_of_Castile .
  ?child3 a dbo:Monarch .

  # Step 6: Father of this child
  OPTIONAL { ?fatherOfChild3 dbo:spouse ?mother . }
  OPTIONAL { ?fatherOfChild3 dbo:child ?child3 . }

  # Step 7: Connect these relationships to find the final answer
  FILTER(?child2 = ?officeHolder",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
293,62,val,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Identify actors in these films
  ?film dbo:starring ?actor .

  # Find Harriette Arlene Lake and her landmark
  ?person dbp:birthName ""Harriette Arlene Lake"" ;
          dbo:landmarkAtElevation ?elevation .
  FILTER(?elevation = 20.1168)

  # Identify the ruling party member associated with this person
  ?partyMember dbo:memberOfRulingParty ?rulingParty .

  # Find the spouse of the actor
  ?actor dbp:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,66,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Theodor Heuss and his country of administration
  dbr:Theodor_Heuss dbo:country dbr:Germany .

  # Person born on 1968-08-26 who is a sports manager
  ?person dbp:birthday ""1968-08-26""^^xsd:date ;
          a dbo:SportsManager ;
          dbo:nationality dbr:Germany .

  # Manager of the team during the 2007–08 VfL Bochum season
  ?teamSeason dbo:season ""2007–08"" ;
              dbo:club dbr:VfL_Bochum ;
              dbo:manager ?manager .
  
  # Ensure the manager is associated with a sports club, organisation, and soccer club
  ?manager a dbo:SoccerClub, dbo:SportsOrganization .

  # Link the person to the team season as a manager
  ?person dbo:managedTeamSeason ?teamSeason .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
293,65,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  ?annSothern a dbo:MusicalArtist ;
              foaf:name ""Ann Sothern"" ;
              dbp:birthName ?birthName .

  # Person with the same birth name as Ann Sothern
  ?person dbp:birthName ?birthName .

  # Spouse of an actor associated with a film by Nat Levine
  ?actor dbo:spouse ?person ;
         dbo:film ?film .
  ?film dbo:producer dbr:Nat_Levine .

  # Party member in Central, Louisiana
  ?partyMember a dbo:PartyMembership ;
               dbp:member ?person ;
               dbp:location dbr:Central,_Louisiana .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,64,val,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1 ?artist2 WHERE {
  # Find the person born as ""Pacely"" who is a musical artist
  ?person1 dbo:birthName ""Pacely""@en .
  ?person1 a dbo:MusicalArtist .

  # Find the associated musical artist for this person
  ?person1 dbp:associatedBandOrMusicalArtist ?artist1 .

  # Find the native of Central Region, Ghana who is an artist and professional musician
  ?person2 dbo:birthPlace dbr:Central_Region,_Ghana .
  ?person2 a dbo:MusicalArtist .
  ?person2 dbo:profession dbr:Musician .

  # Find the associated musical artist for this person
  ?person2 dbp:associatedBandOrMusicalArtist ?artist2 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,62,val,"Give me the father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Politician ;
          foaf:name ""Arthur Stanley"" ;
          dbp:parent ?father .

  # Awardee of Rodney Lees
  ?rodneyLeesAward a dbo:Award ;
                   dbo:recipient ?awardee .
  ?awardee dbo:parent ?parentOfAwardee .

  # Child of the parent (back to awardee's parent)
  ?child dbp:parent ?parentOfAwardee .

  # Politician and office holder related to Edward Stanley, 17th Earl of Derby
  ?edwardStanley a dbo:Politician ;
                 foaf:name ""Edward Stanley, 17th Earl of Derby"" .
  ?officeHolder dbo:parent ?father ;
                dbo:childOf ?edwardStanley .

  # Ensure the father is common across these relationships
  FILTER (?father = ?father)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
392,9,val,Give me the member of the figure known as Der Blau and reference to the designer of Aston Martin AMR1.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?memberName ?designerName WHERE {
  # Members of Der Blau
  ?group a dbo:Band ;
         foaf:name ""Der Blau""@en .
  ?member dbo:memberOf ?group ;
          foaf:name ?memberName .

  # Designer of Aston Martin AMR1
  dbr:Aston_Martin_AMR_1 dbo:designer ?designer .
  ?designer foaf:name ?designerName .
}
```",4,4,5,2,2,2,2,9,0,0,6,0,0.0,0
628,66,val,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMemberName WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?bobbyBirthName .

  # Step 2: Identify a band member associated with Bobby Shmurda
  ?bandMember dbo:member ?bobbyShmurda .
  ?bobbyShmurda dbp:birthName ?bobbyBirthName .
  
  # Ensure the band member is also a musical artist
  ?bandMember a dbo:MusicalArtist .

  # Step 3: Find the award-winning band from New York associated with this band member
  ?award dbr:New_York_(state) dbo:location ?band .
  ?band dbo:member ?bandMember .
  
  # Ensure the band is an awardee and a region/state/settlement
  ?award dbo:recipient ?band .
  ?band a dbo:Band .

  # Get the name of the band member
  ?bandMember foaf:name ?bandMemberName .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
687,63,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:birthday ""1979-11-03""^^xsd:date ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Soccer_Manager .

  # Athlete with the same birthday as Marty Pollio
  ?martyPollio dbp:birthday ?birthday .
  ?athlete dbo:birthday ?birthday ;
           dbo:sport dbr:Athletics .

  # Actor in ""All or Nothing: Manchester City"" who is a soccer player and athlete
  ?actor dbo:occupation dbr/Actor ;
         dbo:workFeaturedIn dbr/All_or_Nothing:_Manchester_City ;
         dbo:sport dbr:Soccer ;
         dbo:sport dbr:Athletics .

  # Find the team associated with these individuals
  OPTIONAL { ?person1 dbo:team ?team . }
  OPTIONAL { ?athlete dbo:team ?team . }
  OPTIONAL { ?actor dbo:team ?team . }

}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
687,66,val,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find actors in ""All or Nothing: Manchester City""
  ?actor dbo:starringIn dbr:All_or_Nothing:_Manchester_City .
  
  # Ensure the actor is also a soccer player and athlete
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

  # Find person born on 1955-02-22 who is an athlete
  ?person dbp:birthday ""1955-02-22""^^xsd:date ;
          a dbo:Athlete .
  
  # Find Marcelo Sarmiento's birthday and team
  ?sarmiento dbp:birthday ?birthdaySarmiento ;
             a dbo:SoccerPlayer, dbo:SoccerManager .

  ?teamMember dbp:birthday ?birthdaySarmiento ;
              a dbo:SoccerPlayer .

  # Ensure the player is part of the team associated with the person born on Marcelo Sarmiento's birthday
  ?teamMember dbo:playsFor ?team .
  
  # Match the actor to the player found in the above conditions
  FILTER (?actor = ?player)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
731,18,val,Give me the war of the commander in Sinking of Prince of Wales and Repulse and force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderName ?force WHERE {
  # Find the commanders of HMS Prince of Wales and HMS Repulse
  ?ship a dbo:Ship ;
        dbo:commandedBy ?commander .
  
  FILTER(?ship IN (dbr:HMS_Prince_of_Wales_(53), dbr:HMS_Repulse_(1916)))

  ?commander foaf:name ?commanderName .

  # Find the force associated with Edmund Hakewill-Smith
  ?person a dbo:Person ;
          dbp:honoredFor ""Sinking of Prince of Wales and Repulse"" ;
          foaf:name ""Edmund Hakewill-Smith""@en .
  
  OPTIONAL { ?person dbo:memberOf ?force . }
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
628,62,val,"Give me the native of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  # Step 1: Identify musical artists native to Florida
  ?artist a dbo:MusicalArtist .
  ?artist dbo:birthPlace dbr:Florida .

  # Step 2: Find band members of these artists who are also associated with GS9
  ?member dbo:bandMemberOf ?artist ;
          dbo:memberOf dbr:GS9 .

  # Step 3: Ensure the member is a musical artist and an artist
  ?member a dbo:MusicalArtist, dbo:Artist .

  # Step 4: Get the birth name of this person
  OPTIONAL { ?member dbp:birthName ?birthName . }
  
  # Bind the person to the result
  BIND(?member AS ?person)
}
ORDER BY ?person
LIMIT 10
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
159,65,val,"Give me the reference to the writer of the work of George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  # Step 1: Identify the work associated with George Ducas
  ?work dbo:author dbr:George_Ducas .
  
  # Step 2: Find the television show and societal event linked to Jean Baptist, Comte d'Arco
  ?tvShow dbo:creator dbr:Jean_Baptist_Comte_d'Arco ;
          a dbo:TelevisionSeries .
  ?event dbo:organizer dbr:Jean_Baptist_Comte_d'Arco ;
         a dbo:SocietalEvent .

  # Step 3: Determine the commander in the Russo-Polish War (1654–1667)
  ?commander dbo:participatedIn dbr:Russo-Polish_War_(1654%E2%80%931667) .
  
  # Step 4: Identify the successor who is a politician and office holder
  ?successor dbo:succeeded ?commander ;
             a dbo:Politician, dbo:OfficeHolder .

  # Final step: Find the writer of George Ducas's work
  ?writer dbo:author ?work .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
375,26,val,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?warToyotomiHideyoshi ?birthPlaceYamazaEnjirō ?entityBirthPlaceYamazaEnjirō ?warToyotomiHidenaga
WHERE {
  # Toyotomi Hideyoshi's child
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
  
  # War involving Toyotomi Hideyoshi's child
  OPTIONAL { ?child dbo:participatedIn ?warToyotomiHideyoshi . }
  
  # Yamaza Enjirō's birth place and related entity
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlaceYamazaEnjirō .
  OPTIONAL { ?entityBirthPlaceYamazaEnjirō dbo:location ?birthPlaceYamazaEnjirō . }
  
  # Toyotomi Hidenaga's war
  dbr:Toyotomi_Hidenaga dbo:participatedIn ?warToyotomiHidenaga .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
198,62,val,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?award a dbo:Award .
  ?award dbo:awardingBody dbr:United_States_Congress .

  ?entity dbo:location dbr:Charleston,_South_Carolina .
  ?entity dbo:relatedTo dbr:Quincy_Adams_Gillmore .

  ?person dbo:receivedAward ?award .
  ?person dbo:militaryForce ?force .
  ?force dbo:participatedIn ?war .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
213,18,val,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of Lao She.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?politician a dbo:Politician .
  ?politician dbo:childOf ?parent .
  ?parent dbo:deathPlace dbr:Taipei .

  OPTIONAL { ?politician dbo:birthPlace ?birthPlace . }

  ?laoShe dbo:workCountry ?countryOfWork .
  FILTER(?countryOfWork = ?birthPlace)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
737,62,val,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Alexander of Württemberg's lineage
  ?alexander a dbo:Person ;
             dbp:spouse ?spouse1 .
  ?child1 dbo:parent ?alexander ;
          dbo:parent ?spouse1 .
  ?grandchild1 dbo:parent ?child1 ;
               dbo:parent ?spouse2 .
  ?greatGrandchild dbo:parent ?grandchild1 ;
                   dbo:parent ?spouse3 .

  # Archduchess Margarete Sophie of Austria's child
  ?margarete a dbo:Person ;
             dbp:spouse ?spouse4 .
  ?margareteChild dbo:parent ?margarete ;
                  dbo:parent ?spouse5 .

  # Archduchess Helena of Austria's lineage
  ?helena a dbo:Person ;
          dbp:spouse ?spouse6 .
  ?helenaChild dbo:parent ?helena ;
               dbo:parent ?spouse6 .
  ?predecessor dbo:child ?helenaChild .

  # Combine conditions
  FILTER (?greatGrandchild = ?margareteChild)
  FILTER (?individual = ?predecessor)

  # Ensure the individual is royalty
  ?individual a dbo:Royalty .
}
```",7,8,8,3,3,3,3,71,0,3,1,0.0,0.0,0
609,66,val,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personLabel ?birthPlaceLabel WHERE {
  # Governor of Virginia
  { 
    ?person a dbo:Politician .
    ?person dbo:office dbr:Governor_of_Virginia .
    ?person dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  UNION

  # Author of ""El Deafo""
  {
    ?author a dbo:Writer ;
            dbp:nationality dbr:United_States ;
            dbo:work dbr:El_Deafo .
    ?author dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  UNION

  # Vince Gilligan
  {
    ?awardee a dbo:Person ;
             foaf:name ""Vince Gilligan""@en .
    ?awardee dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

}
ORDER BY ?personLabel
LIMIT 3
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
871,64,val,"Give me the parent of Edward Stanley, 17th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Find Edward Stanley, 17th Earl of Derby's parent
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby"" ;
          dbo:childOf ?parent .

  # Step 2: Identify the awardee of Rodney Lees' award
  ?award dbo:recipient ?awardee .
  ?award dbp:name ""Rodney Lees Award"" .

  # Ensure the parent is also the awardee
  FILTER (?parent = ?awardee)

  # Step 3: Find a politician who is an alumnus of Eton College and their father
  ?politician dbo:almaMater dbr:Eton_College ;
             a dbo:Politician ;
             dbo:childOf ?father .

  # Ensure the parent is also this child's father
  FILTER (?parent = ?father)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
203,65,val,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the military conflict involving the 30th (Cambridgeshire) Regiment of Foot
  ?conflict dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  
  # Find individuals related to this conflict as commanders
  ?conflict dbo:commander ?commander .

  # Ensure the commander is also involved in a military force related to William Bayne
  ?bayneConflict dbo:militaryUnit dbr:William_Bayne .
  ?bayneConflict dbo:commander ?commander .

  # Ensure the same commander is involved in a military force related to Robert Calder
  ?calderConflict dbo:militaryUnit dbr:Robert_Calder .
  ?calderConflict dbo:commander ?commander .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,63,val,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v6 <http://dbpedia.org/property/author> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Hillary Clinton as an author of a book
  ?hClinton a dbo:Writer ;
            dbo:writtenWork ?work .
  
  # The work is a book and written work
  ?work a dbo:Book .

  # Bill Clinton as a commander in the war involving United States Navy
  ?bClinton a dbo:Politician ;
            dbo:officeHolder ?office ;
            dbo:commanderInWar ?war .
  
  ?war dbo:involvesMilitaryBranch dbr:United_States_Navy .

  # Both are connected through marriage
  ?hClinton dbp:spouse ?spouse .
  ?bClinton dbp:spouse ?spouse .

  FILTER(?hClinton = dbr:Hillary_Clinton)
  FILTER(?bClinton = dbr:Bill_Clinton)
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
782,64,val,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artistName ?birthName WHERE {
  VALUES ?personUri { 
    dbr:Kim_Wilson 
    dbr:Nick_Curran
  }
  
  ?person a dbo:MusicalArtist ;
          foaf:name ?artistName ;
          dbp:birthName ?birthName .
  
  FILTER(?person = ?personUri)
}
ORDER BY ?artistName
```",7,8,8,3,3,3,3,71,0,2,1,0.0,0.0,0
263,25,val,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find William Gayner's birthplace
  ?williamGayner a dbo:Person ;
                 dbp:birthPlace ?birthPlace .

  # Ensure the birthplace is both a region and a country
  ?birthPlace rdf:type dbo:Region, dbo:Country .

  # Find Patrick Bowes-Lyon's parents
  ?patrickBowesLyon a dbo:Person ;
                    dbp:parent ?parent .

  # Ensure the parent is also William Gayner's parent
  ?williamGayner dbp:parent ?parent .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
353,63,val,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # William I of Sicily and his child who is royalty
  ?williamI a dbo:Monarch ;
            dbo:spouse ?spouse ;
            dbo:child ?child .
  
  FILTER(?williamI = dbr:William_I_of_Sicily)
  FILTER(dbo:RoyalTitle ?child) # Assuming there's a property for royal title

  # Alfonso VI of León and Castile and his grandchild
  ?alfonsoVI a dbo:Monarch ;
             dbo:spouse ?spouseAlfonso ;
             dbo:child ?childAlfonso .
  
  FILTER(?alfonsoVI = dbr:Alfonso_VI_of_León_and_Castile)
  ?childAlfonso dbo:child ?grandChild .

  # Roger II of Sicily and his descendant who is royalty
  ?rogerII a dbo:Monarch ;
           dbo:spouse ?spouseRoger ;
           dbo:child ?childRoger .
  
  FILTER(?rogerII = dbr:Roger_II_of_Sicily)
  ?descendant dbo:parent ?childRoger ;
              dbo:royalty ?descendantRoyalty .

  # Find the father of the child who is royalty
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .
  
  FILTER(?child = ?grandChild && ?child = ?descendant)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
723,18,val,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?v2 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Find band members of Cavalera Conspiracy
  ?cavaleraConspiracy a dbo:MusicalArtist ;
                      dbo:member ?bandMember .

  # Ensure the band member is also associated with the producer of ""Nothing to Gein""
  ?producer a dbo:Organization, dbo:Band ;
            dbp:producedAlbum dbr:Nothing_to_Gein .
  
  ?cavaleraConspiracy dbo:associatedMusicalArtist ?producer .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
609,62,val,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Cece Bell.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardeeBirthPlace ?governorBirthPlace ?ceceBellBirthPlace WHERE {
  # Vince Gilligan's award and its awardee
  ?award dbo:recipient dbr:Vince_Gilligan .
  ?award dbo:winner ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Birth place of Paulus Powell as a region and administrative region
  ?paulusPowell dbo:birthPlace ?region .
  ?region rdf:type dbo:Region ;
          dbo:administrativeRegion ?adminRegion .

  # Governor of the region who is a politician
  ?governor dbo:governmentRole dbr:Governor_of_?adminRegion ;
           dbo:birthPlace ?governorBirthPlace .
  ?governor a dbo:Politician .

  # Birth place of Cece Bell
  dbr:Cecil_C._""Cece""_Bell dbo:birthPlace ?ceceBellBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
23,26,val,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceInColombia ?partyOfRoyBarreras ?fatherName ?partyOfFather WHERE {
  # Roy Leonardo Barreras Montealegre
  ?roy a dbo:Politician ;
       foaf:name ""Roy Leonardo Barreras Montealegre"" ;
       dbp:birthPlace ?birthPlace .
  
  # Check if the birthplace is in Colombia
  ?birthPlaceInColombia dbr:Colombia ;
                        rdfs:label ?locationLabel .
  FILTER(CONTAINS(LCASE(?locationLabel), ""colombia""))

  # Get his political party
  ?roy dbp:party ?partyOfRoyBarreras .

  # Sofía Petro's father
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro"" .
  
  ?father a dbo:Person ;
          foaf:name ?fatherName ;
          dbo:child ?sofia .
  
  # Get the political party of her father
  ?father dbp:party ?partyOfFather .

}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
203,66,val,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bayneForce ?conflict ?regimentCommander ?awardeeForce WHERE {
  # William Bayne's military force
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne"" ;
         dbo:militaryService ?bayneForce .

  # Military conflict involving the 30th Regiment of Foot
  ?conflict a dbo:MilitaryConflict ;
            dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  
  # Commander of the 30th Regiment of Foot in that conflict
  ?regimentCommander a dbo:Person ;
                    dbo:militaryService ?conflict .

  # Awardee of Knight Commander of the Order of the Bath and their military force
  ?awardee a dbo:Person ;
           dbp:order ""Knight Commander of the Order of the Bath"" ;
           dbo:militaryService ?awardeeForce .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
87,25,val,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find movies with Iliza Shlesinger
  ?movie dbo:starring dbr:Iliza_Shlesinger .

  # Find actors of the movie ""Always"" (1989)
  ?alwaysMovie a dbo:Film ;
              dbp:title ""Always""@en ;
              dbo:releaseDate ?date ;
              FILTER(YEAR(?date) = 1989) .
  ?alwaysMovie dbo:starring ?actor .

  # Find spouse of an awardee associated with Janusz Kamiński
  ?kaminskiAwardee dbp:awardsReceived ?award .
  ?spouse foaf:mbox ?email ;
          dbo:spouse ?kaminskiAwardee .

  # Join the conditions to find a common actor
  ?movie dbo:starring ?actor .
  FILTER(?actor = ?alwaysActor)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
347,63,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Ferdinand II is the father of Cecilia Renata of Austria
  ?ceciliaRenata a dbo:Person ;
                 dbp:father dbr:Ferdinand_II,_Holy_Roman_Emperor .

  # Ferdinand III is a child of Ferdinand II and was a commander in war
  ?ferdinandIII a dbo:Person ;
                dbp:father dbr:Ferdinand_II,_Holy_Roman_Emperor ;
                dbo:occupation dbr:Military_Commander .

  # Find the societal event, television show related to Algerian War
  ?event a dbo:SocietalEvent , dbo:TelevisionShow ;
         dbo:relatedMilitaryForce dbr:Algerian_War .

  # The child of Ferdinand III is also involved in this event
  ?ferdinandIII dbp:child ?child .
  ?child dbo:involvedIn ?event .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
249,9,val,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shobhnaNative ?jamsetjiNative WHERE {
  # Shobhna Samarth's birthplace and its native
  ?shobhna a dbo:Person ;
           dbp:birthPlace ?birthPlaceShobhna .
  ?birthPlaceShobhna dbo:country dbr:India ; # Assuming India for example; adjust as needed
                    dbo:nativeName ?shobhnaNative .

  # Jamsetji Tata's work and its native
  ?jamsetji a dbo:Person ;
            dbp:occupation ?workJamsetji .
  ?workJamsetji dbo:country dbr:India ; # Assuming Indian entity; adjust as needed
                dbo:nativeName ?jamsetjiNative .
}",4,6,5,2,2,2,2,9,0,0,22,0,0.0,0
687,65,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person1 a dbo:SoccerPlayer ;
           a dbo:SoccerManager ;
           dbp:birthday ""1979-11-03""^^xsd:date .
  
  ?person2 a dbo:Athlete ;
           dbp:birthday ""1955-02-22""^^xsd:date .

  ?team dbo:player ?person1, ?person2 .

  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga .

  ?actor a dbo:Actor ;
         dbo:actedIn ?film .
  
  ?person2 dbo:playedWith ?actor .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
609,65,val,"Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardBirthPlace ?governorBirthPlace ?authorBirthPlace WHERE {
  # Vince Gilligan's awards and their awardees' birthplaces
  ?award dbo:recipient dbr:Vince_Gilligan .
  ?award dbo:awardee ?person .
  ?person dbo:birthPlace ?awardBirthPlace .

  # Paulus Powell's birthplace and the governor of that region
  dbr:Paulus_Powell dbo:birthPlace ?powellBirthPlace .
  ?region dbo:administrativeRegion ?powellBirthPlace ;
          dbo:governor ?governor .
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Author of ""El Deafo"" and their birthplace
  dbr:El_Deafo dbo:author ?author .
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
375,25,val,Give me the war of Hashiba Hidekatsu and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?hashibaWar ?yamazaEntity ?koichiroPerson ?koichiroWar WHERE {
  # Hashiba Hidekatsu's war
  ?hashiba a dbo:Person ;
           foaf:name ""Hashiba Hidekatsu""@en ;
           dbo:participatedIn ?hashibaWar .

  # Yamaza Enjirō's birthplace and associated entity
  ?yamaza a dbo:Person ;
          foaf:name ""Yamaza Enjirō""@en ;
          dbo:birthPlace ?birthPlace .
  ?entity dbo:location ?birthPlace .
  BIND(?entity AS ?yamazaEntity)

  # Person born as Koichirō and their war
  ?koichiro a dbo:Person ;
            dbp:birthName ""Koichirō""@en ;
            foaf:name ?koichiroPerson ;
            dbo:participatedIn ?koichiroWar .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
119,64,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person dbr:Anxo_Quintana .
  ?person dbo:partyMember dbr:Spanish_Socialist_Workers'_Party .
  ?event dbo:participant ?person .
  ?event dbo:place dbr:Spain .
  ?person dbo:positionHeld ?office .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,63,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Actor of ""1,000 Dollars a Minute""
  dbr:""1,000_Dollars_a_Minute"" dbo:starring ?actor .

  # Landmark at elevation and its ruling party
  dbr:Mount_Everest dbo:elevation ""20.116800000000001347""^^xsd:float .
  ?landmark dbo:rulingParty ?rulingParty .

  # Spouse of Ann Sothern who is an actor in the movie and a member of the ruling party
  dbr:Ann_Sothern foaf:spouse ?spouse .
  ?spouse dbo:actorIn dbr:""1,000_Dollars_a_Minute"" .
  ?spouse dbo:partyMember ?rulingParty .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
311,18,val,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Step 1: Identify the writer of ""No Alternative""
  ?noAlternative dbo:writer ?writer .
  
  # Step 2: Find a band member of this writer
  ?bandMember dbo:memberOfBand ?writer .

  # Step 3: Determine an associated musical artist of that band member
  ?associatedArtist dbo:associatedMusicalArtist ?bandMember .

  # Step 4: Identify the producer of ""Lotus"" (R.E.M. song)
  ?lotus dbo:producer ?producer .
  
  # Ensure the producer is both an organization and a band/group
  ?producer rdf:type dbo:Organization ;
            dbo:musicGroupType dbo:Band .

  # Step 5: Find an artist associated with this producer
  ?artist dbo:associatedMusicalArtist ?producer .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
609,63,val,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Author of ""El Deafo""
  { 
    ?work dbo:author ?person .
    ?work rdfs:label ""El Deafo""@en .
    FILTER (LANG(?work) = 'en')
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Governor of Virginia
  {
    ?person a dbo:Politician ;
            dbo:officeHolderOf dbr:Governor_of_Virginia ;
            dbo:birthPlace ?birthPlace .
  }

  UNION

  # Awardee associated with Vince Gilligan
  {
    ?awardee dbo:awardReceived ?award .
    ?award dbp:recipient ?person .
    ?award dbo:recipient dbr:Vince_Gilligan .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
943,65,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?yeshaqFather ?shadowAlterEgo WHERE {
  # Yeshaq I and his father Zara Yaqob
  dbr:Yeshaq_I dbo:father dbr:Zara_Yaqob .
  
  # Dawit II and his father Yeshaq I
  dbr:Dawit_II dbo:father dbr:Yeshaq_I .

  # The Shadow's alter ego Lamont Cranston
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Linking Zara Yaqob as Yeshaq I's father
  ?yeshaqFather a dbo:Monarch ;
               dbo:child dbr:Yeshaq_I .

  # Reference to The Shadow
  ?shadowAlterEgo a dbo:FictionalCharacter ;
                  dbo:alterEgo dbr:The_Shadow .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
905,66,val,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Charles I of Hungary and his father
  dbr:Charles_I_of_Hungary dbo:father ?charlesFather .
  
  # Father's spouse (Charles I's mother)
  ?charlesFather dbo:spouse ?charlesMother .

  # Philip I, Prince of Taranto and his father
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .

  # Father's spouse (Philip I's mother)
  ?philipFather dbo:spouse ?philipMother .

  # Child of Philip I's mother who is royalty
  ?child dbp:parent ?philipMother .
  ?child a dbo:Monarch .

  # Predecessor of Stephen V of Hungary and their royal child
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  ?royalChild dbp:parent ?predecessor .
  ?royalChild a dbo:Monarch .

  # Parent of Charles I's father (his grandfather) who is royalty
  ?charlesFather dbo:father ?grandfather .
  ?grandfather a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,65,val,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeLeader ?officePintoDaCosta WHERE {
  # Find the leader of the Conservative Republican Party (Spain)
  ?person1 dbo:partyMember dbr:Conservative_Party_(Spain) .
  ?person1 dbo:positionHeld ?officeLeader .

  # Check if this person was a tenant at Alberto Ruiz-Gallardón's residence
  OPTIONAL {
    ?residence dbp:tenant ?person1 .
    ?residence dbp:owner dbr:Alberto_Ruiz-Gallardón .
  }

  # Find offices held by Manuel Pinto da Costa in military conflicts or societal events
  ?person2 foaf:name ""Manuel Pinto da Costa"" .
  ?event a dbo:MilitaryConflict ; dbo:commander ?person2 .
  OPTIONAL { ?event a dbo:SocietalEvent . }
  ?person2 dbo:positionHeld ?officePintoDaCosta .

}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
158,25,val,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthCountry .

  # Alexander II of Finland and Russian Empire
  dbr:Alexander_II_of_Finland dbo:nativeOf dbr:Russian_Empire .
  
  # Person who died at Sandro Bertaggia's birthplace
  ?decedent a dbo:Person ;
            dbo:deathPlace ?birthCountry .

}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
628,64,val,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # French Montana details
  ?frenchMontana a dbo:MusicalArtist ;
                 foaf:name ""French Montana"" ;
                 dbp:birthName ""Ackquille Jean Pollard"" ;
                 dbo:birthPlace dbr:New_York_(state) .

  # GS9 association
  ?gs9 a dbo:Band ;
       dbo:member ?frenchMontana .

  # Find band members associated with French Montana
  ?associatedArtist a dbo:MusicalArtist ;
                    dbo:bandMemberOf ?gs9 ;
                    foaf:name ?bandMember .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
386,25,val,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?war WHERE {
  # Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Alexander Lvovich Davydov's war involvement
  dbr:Alexander_Lvovich_Davydov dbo:award ?war .

  # Awardee related to ""25"" and the birthplace of Elena Žalinkevičaitė-Petrauskienė
  ?awardee dbp:award ?award .
  FILTER(CONTAINS(LCASE(?award), ""25""))
  ?awardee dbo:birthPlace ?birthPlace .

  # Ensure the war is related to both entities
  ?awardee dbo:award ?war .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
756,62,val,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Leader of West Germany
  dbr:Helmut_Kohl dbo:nationality ?germanNationality .
  
  # Manager of SBV Vitesse in the 2020–21 season
  dbr:John_Stegeman dbo:managerOfTeam dbr:SBV_Vitesse_2020-21_season .

  # Manager of a player from the successor of the 2006–07 VfL Bochum season
  ?player dbo:nationality ?germanNationality .
  ?player dbo:playsFor dbr:VfL_Bochum_2007-08_season .
  ?manager dbo:managedPlayer ?player .
  
  # Linking the manager to both roles
  ?manager = dbr:John_Stegeman .

  # Native country of the administration (Chancellor's nationality)
  ?germanNationality dbp:countryName ?nativeCountry .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
742,18,val,Give me the birthplace of the resident of Sofia and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:residence dbr:Sofia .
  ?person dbo:almaMater dbr:Plovdiv_University_of_Saints_Kiril_and_Methodius .
  ?person dbo:birthPlace ?birthPlace .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
203,64,val,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battleMilitaryForce ?eventMilitaryForce WHERE {
  # Battle of Fort Royal military forces
  dbr:Battle_of_Fort_Royal dbo:militaryConflicts ?battle .
  ?battle dbo:participatingMilitaryUnit ?battleMilitaryForce .

  # Awardee of Knight Commander of the Order of the Bath and commander in a war
  ?person dbp:honours ""Knight Commander of the Order of the Bath""@en ;
          dbo:commanded ?war .
  
  # The Triple X's figure
  dbr:The_Triple_Xs dbo:relatedEvent ?event .

  # Find military forces involved in the event related to The Triple X's
  ?event dbo:militaryConflicts ?eventWar .
  ?eventWar dbo:participatingMilitaryUnit ?eventMilitaryForce .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
143,18,val,"Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?ciara a dbo:MusicalArtist ;
         foaf:name ""Ciara""@en ;
         dbp:birthName ""Cynthia Ikponmwenosa Morgan""@en .
  
  ?ciara dbo:actedIn ?movie .

  ?vector a dbo:Actor ;
          foaf:name ""Vector""@en ;
          dbp:birthName ""Afeez Oyetoro""@en .

  ?vector dbo:actedIn ?movie .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
80,64,val,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalAlterEgo WHERE {
  # The Golden Girls character
  ?goldenGirlsSeries dbo:title ""The Golden Girls""@en .
  ?dorothyCharacter dbo:characterName ""Dorothy Zbornak""@en ;
                    dbo:actor dbr:Bea_Arthur .

  # Smartbomb author and movie actor
  ?smartbombAuthor foaf:name ""Douglas Coupland"" .
  ?couplandMovie dbo:title ?movieTitle .
  ?couplandActor dbo:actorIn ?couplandMovie ;
                 dbp:actedWith dbr:Dwayne_Johnson .

  # ATL film actor
  ?atlFilm dbo:title ""ATL""@en .
  ?atlActor dbo:actorIn ?atlFilm ;
            dbp:actedWith dbr:Dwayne_Johnson .

  # Connecting the dots
  ?professionalAlterEgo foaf:name ""Dwayne Johnson"" .
}",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
816,66,val,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer and parent of the child of the spouse of Mariclare Costello.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Find movies with Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Step 2: Identify other actors in those movies
  ?movie dbo:starring ?actor .

  # Step 3: Ensure the actor is a parent of a professional photographer
  ?actor dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child dbp:profession dbr:Photographer .

  # Step 4: Ensure Mariclare Costello is a child of the spouse
  ?spouse dbo:child dbr:Mariclare_Costello .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,62,val,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Step 1: Identify the societal event, event, and television show
  ?event a dbo:SocietalEvent ;
         a dbo:Event ;
         a dbo:TelevisionShow .

  # Step 2: Find its commander in the war
  ?war a dbo:MilitaryConflict .
  ?commander dbo:commanded ?war .
  
  # Step 3: Relate it to the Algerian War
  ?algerianWar dbr:Algerian_War .
  ?commander dbo:participatedIn ?algerianWar .

  # Step 4: Trace lineage from Ferdinand II, Holy Roman Emperor
  ?ferdinand2 dbr:Ferdinand_II,_Holy_Roman_Emperor ;
             dbp:child ?child1 .
  
  ?child1 dbp:parent ?ferdinand2 ;
          dbp:child ?grandChild .

  ?archdukeParent dbp:child ?grandChild ;
                  dbp:child dbr:Archduke_Charles_Joseph_of_Austria .

  # Connect the commander to this lineage
  ?commander dbo:parent ?archdukeParent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,63,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?bandMember ?bandName WHERE {
  # Find Nicky Hopkins (Nicholas Michael Curran)
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Nicky Hopkins"" .
  ?person dbp:birthName ""Nicholas Michael Curran"" .

  # Find Eric Clapton's band members
  ?clapton a dbo:MusicalArtist ;
           foaf:name ""Eric Clapton"" ;
           dbo:bandMember ?bandMember .

  # Find The Fabulous Thunderbirds and Kim Wilson
  ?thunderbirds a dbo:Band ;
                foaf:name ""The Fabulous Thunderbirds"" .
  ?kimWilson a dbo:MusicalArtist ;
             foaf:name ""Kim Wilson"" ;
             dbo:bandMember ?thunderbirds .

  OPTIONAL { ?person dbo:associatedBand ?artist . }
  OPTIONAL { ?bandMember dbo:realName ?bandName . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
859,18,val,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun and associated musical artist of the associated musical artist of James Plotkin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Step 1: Find associated musical artist of James Plotkin
  ?plotkinArtist a dbo:MusicalArtist ;
                 foaf:name ""James Plotkin"" .
  
  # Step 2: Find the associated musical artist related to Burnt by the Sun
  ?burntBySunGroup dbp:associatedBand dbr:Burnt_by_the_Sun ;
                   a dbo:MusicGroup .

  # Step 3: Identify the band that is both an organization and a group
  ?band a dbo:MusicalArtist, dbo:Organization, dbo:Group ;
        dbp:associatedBand ?burntBySunGroup .
  
  # Step 4: Find the associated musical artist of the identified band
  ?artist a dbo:MusicalArtist ;
          dbp:associatedBand ?band .

  # Step 5: Retrieve band members of the identified band
  ?member a dbo:Musician ;
          dbo:musicalArtist ?band .
  
  # Linking all steps together
  ?plotkinArtist dbp:associatedBand ?artist .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
531,64,val,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?marianoOffice ?partyLeader ?miguelParty ?tenant2003 WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoOffice .

  # Leader of the party associated with Miguel Maura
  dbr:Miguel_Maura dbo:memberOf ?miguelParty .
  ?partyLeader a dbo:PoliticalParty ;
               dbo:leader ?personLeader .
  FILTER(?personLeader = dbr:Mariano_Rajoy) .

  # Political party of Miguel Maura
  ?miguelParty a dbo:PoliticalParty .

  # Tenant of the residence in the 2003 Madrid City Council election
  ?officeHolder dbo:electedDuring ?electionEvent .
  ?electionEvent dbp:date ""2003""^^xsd:gYear ;
                 dbo:place dbr:Madrid_City_Council_Election_2003 .
  ?officeHolder dbo:positionHeld ?tenant2003 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
263,26,val,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .

  # Mary Elphinstone, Lady Elphinstone
  ?child foaf:name ""Mary Elphinstone"" .
  
  # Parent of Mary Elphinstone who is also a child of Claude Bowes-Lyon
  ?parent dbo:child dbr:Mary_Elphinstone ;
          dbo:child ?child .

  # William Gayner's birthplace must be both a region and a country
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Region, dbo:Country .

  # The parent must be native to this place
  ?parent dbo:birthPlace ?birthPlace .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
347,65,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event WHERE {
  # Cecilia Renata of Austria's father
  ?ceciliaRenata a dbo:Person ;
                 dbp:father ?ferdinandII .
  
  # Ferdinand II's child who is also a parent of Archduke Charles Joseph
  ?leopoldV a dbo:Person ;
            dbp:parent ?ferdinandII ;
            dbp:child ?charlesJoseph .

  # Leopold V as commander in the war (hypothetical property)
  OPTIONAL { ?leopoldV dbo:militaryCommanderOf ?war . }

  # Societal event and television show related to 2nd Dragoon Regiment
  ?event a dbo:SocietalEvent, dbo:TelevisionShow ;
         dbp:relatedTo dbr:2nd_Dragoon_Regiment_(France) .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
633,18,val,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of the father of Dorothea of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine a dbo:Person ;
    dbo:child ?child .

  # Child's parent is Antoine
  ?child dbo:parent dbr:Antoine,_Duke_of_Lorraine .

  # Father of Dorothea of Lorraine
  ?dorotheaParent dbo:child dbr:Dorothea_of_Lorraine ;
    dbo:parent ?fatherOfDorothea .

  # Parent of that father is Antoine
  ?fatherOfDorothea dbo:parent dbr:Antoine,_Duke_of_Lorraine .

  # Antoine's spouse
  dbr:Antoine,_Duke_of_Lorraine dbo:spouse ?spouse .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
557,8,train,"Give me the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  dbr:Janet_Gaynor dbo:notableWorks ?work .
  FILTER (isLiteral(?work))
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
23,18,train,Give me the party of the father of Sofía Petro and entity in Colombia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  dbr:Sofía_Petro dbo:father ?father .
  ?father dbo:nationality dbr:Colombia .
  OPTIONAL { ?father dbo:politicalParty ?party . }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,45,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Identify Nick Curran as a musical artist
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran""@en .

  # Find associations with The Fabulous Thunderbirds and Kim Wilson
  OPTIONAL { 
    ?nickCurban dbo:bandMember dbr:The_Fabulous_Thunderbirds .
    ?nickCurran dbo:collaborator dbr:Kim_Wilson .
  }

  # Identify associated artists through collaborations or band memberships
  ?association a dbo:Collaboration ;
               dbo:artist1 ?nickCurran ;
               dbo:artist2 ?associatedArtist .

  OPTIONAL {
    ?band a dbo:Band ;
          dbo:member ?associatedArtist .
    ?band dbo:member dbr:The_Fabulous_Thunderbirds .
  }
}
ORDER BY ?associatedArtist
LIMIT 10
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,9,train,Give me the professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?role WHERE {
  VALUES ?movie { dbr:Rustlers'_Rhapsody }
  
  ?movie dbo:director ?person .
  BIND(""Director"" AS ?role)
  UNION
  ?movie dbo:starring ?person .
  BIND(""Actor"" AS ?role)

  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?role ?name
LIMIT 10
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
668,42,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # For Joey B (Elorm Kabu Amenyah)
  { 
    ?person a dbo:MusicalArtist .
    ?person dbp:birthName ""Elorm Kabu Amenyah""@en .
    ?person foaf:name ?name .
  }
  
  UNION
  
  # For another musician with a known birth name
  {
    ?person a dbo:MusicalArtist .
    ?person dbp:birthName ?birthName .
    FILTER EXISTS { ?person foaf:name ?name . } 
    FILTER regex(?birthName, "".*"", ""i"") # Assuming we need to find any musician with a known birth name
  }
  
  BIND(STR(?person) AS ?artist)
}
ORDER BY ?artist
LIMIT 10
```",5,5,6,2,3,3,3,71,0,9,1,0.0,0.0,0
87,3,train,"Give me the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:Work .
  ?movie dbo:starring dbr:Iliza_Shlesinger .
}
ORDER BY ?movie
LIMIT 10
```",1,3,2,1,1,2,3,28,1,6,0,0.14285714285714285,1.0,0.25
628,23,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  dbr:GS9 dbo:member ?gs9Member .
  
  ?gs9Member a dbo:Artist ;
             a dbo:MusicalArtist .

  ?gs9Member dbp:associatedActs ?associatedArtist .
  
  ?associatedArtist dbo:bandMember ?bandMember .
}
```",3,6,4,3,1,3,3,71,0,0,10,0,0.0,0
782,39,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?person1 a dbo:MusicalArtist .
  ?person1 foaf:name ""Nick Curran"" .

  ?person2 a dbo:MusicalArtist .
  ?person2 foaf:name ""Kim Wilson"" .

  ?band a dbo:Band ;
        dbo:member ?person1, ?person2 .

  ?person1 dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,35,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         dbp:name ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:politicalParty ?party ;
                  dbo:region dbr:Galicia ;
                  dbo:startDate ?start ;
                  dbo:endDate ?end .

  FILTER (?start <= ""2009-01-01""^^xsd:date && (?end >= ""2009-01-01""^^xsd:date || NOT EXISTS { ?administration dbo:endDate ?end }))

  ?leader dbo:positionHeld ?position .
  ?position dbo:office dbr:President_of_the_Galician_Parliament ;
            dbo:holder ?leader .

  OPTIONAL { ?leader foaf:name ?name . }
}
ORDER BY ?name
LIMIT 1
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
80,52,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Find the album of ""What You Know"" by T.I.
  ?song a dbo:Songs .
  ?song dbp:title ""What You Know"" .
  ?song dbo:artist dbr:T.I._(rapper) .
  ?album dbo:song ?song .

  # Step 2: Find actors associated with the album
  ?actor dbo:album ?album .
  ?actor a dbo:Actor .

  # Step 3: Identify the author of ""Smartbomb""
  ?book a dbo:Book .
  ?book dbp:title ""Smartbomb"" .
  ?book dbo:author ?author .

  # Step 4: Find movies where both the actor and the author acted
  ?movie dbo:starring ?actor ;
         dbo:starring ?author .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
89,29,train,"Give me the predecessor of Myat Hpone Pyo and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Myat Hpone Pyo's details
  ?myatHponePyo a dbo:Person ;
                dbo:title ?title ;
                dbo:successor ?predecessor .

  # Predecessor is a child of Saw Min Hla
  ?predecessor dbo:parent dbr:Saw_Min_Hla .

  # Predecessor's father and his spouse
  ?father dbo:child ?predecessor .
  ?father dbo:spouse ?spouse .

  # The predecessor must be royalty
  ?predecessor a dbo:Monarch ;
              dbo:royalHouse ?royalHouse .

}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
39,44,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalName ?alterEgo ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Robert Lamar Thompson"" .

  # Find the professional name
  OPTIONAL { ?person foaf:name ?professionalName . }

  # Check for alter ego known as The Shadow
  OPTIONAL { 
    ?alias foaf:name ""The Shadow"" .
    ?person dbo:alsoKnownAs ?alias .
  }

  # Identify any band they are associated with
  OPTIONAL {
    ?band a dbo:Band .
    ?band dbo:member ?person .
    ?band foaf:name ?bandName .
  }
}
```",5,6,6,2,3,3,3,71,0,0,3,0,0.0,0
628,16,train,"Give me the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person dbp:birthday ?birthday . }
  ?person foaf:name ?name .
  ?person dbp:birthName ?birthName .
}
ORDER BY ?name
LIMIT 10
```",2,3,3,2,1,3,3,71,10,0,49,1.0,0.1694915254237288,0.2898550724637681
687,36,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team WHERE {
  # Get Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbo:birthday ?birthday .

  # Find soccer players and managers born on that date
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?birthday ;
          dbo:managerOf ?team .
  
  OPTIONAL { 
    ?person dbo:playerFor ?team . 
  }

  # Get Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:playerFor ?molinaTeam .

  # Ensure the player is associated with the same team as Juan Carlos Molina
  FILTER(?team = ?molinaTeam)

  # Return the player and their team
  ?person foaf:name ?player .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
293,52,train,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Identify the landmark at the given elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""20.116800000000001347""^^xsd:float .

  # Step 2: Find the ruling party member associated with this landmark
  ?partyMember dbo:location dbr:; # Assuming the landmark is in a specific location
               dbo:memberOfParty ?party .
  
  # Step 3: Identify the actor of ""1,000 Dollars a Minute""
  ?film dbp:title ""1,000 Dollars a Minute"" ;
        dbo:starring ?actor .

  # Step 4: Determine the spouse of that actor
  ?actor foaf:name ?actorName ;
         dbo:spouse ?spouse .

  # Step 5: Find the person born as Harriette Arlene Lake
  ?person dbp:birthName ""Harriette Arlene Lake"" ;
          foaf:name ?personName .

  # Step 6: Check if the spouse is the same as the person born as Harriette Arlene Lake
  FILTER (?spouse = ?person)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
585,9,train,"Give me the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?award a dbo:Award .
  ?award dbo:country dbr:United_States_of_America .
  ?award dbo:settlementType ?settlementType .
  ?recipient dbo:awardReceived ?award .
  ?recipient dbo:birthPlace dbr:New_York_(state) .
}",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
816,37,train,Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  # Find parents of Doon Arbus
  OPTIONAL {
    ?doonArbus a dbo:Person ;
               foaf:name ""Doon Arbus""@en .
    ?doonArbus dbo:child ?child .
    ?child dbp:parents ?parent1 .
    ?parent1 foaf:name ?parentName .
  }
  
  # Find profession of Eugène Cattin and his parent
  OPTIONAL {
    ?eugeneCattin a dbo:Person ;
                  foaf:name ""Eugène Cattin""@en .
    ?eugeneCattin dbo:profession ?profession .
    ?eugeneCattin dbp:parents ?parent2 .
    ?parent2 foaf:name ?parentName .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
39,40,train,Give me the professional in  and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . }","```sparql
# Query 1 for Bob Thompson (musician)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?profession WHERE {
  dbr:Bob_Thompson_(musician) a dbo:MusicalArtist .
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?person dbo:occupation ?profession .
  }
}

# Query 2 for the producer of Coke Studio Philippines
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?role WHERE {
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer dbo:occupation ?role .
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
80,36,train,Give me the actor of Shelby Oaks and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  # Find the actor for Shelby Oaks
  ?character dbo:portrayedBy ?actor .
  ?character rdfs:label ""Shelby Oaks""@en .

  UNION

  # Find the professional alter ego in The Golden Master series
  ?character dbo:portrayedBy ?actor .
  ?character rdfs:label ?alterEgoLabel .
  FILTER(CONTAINS(?alterEgoLabel, ""The Golden Master""))

  BIND(CONCAT(""Actor for "", STR(?character), "": "", ?actorName) AS ?actorName)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
782,8,train,"Give me the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Nicholas Michael Curran"" .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
816,7,train,Give me the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Mariclare_Costello dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
941,7,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person dbo:spouseOrPartner ?parent .
  ?parent foaf:name ""Anthony Ulrich, Duke of Brunswick-Wolfenbüttel""@en .
  ?parent dbo:royaltyTitle ?title .
  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
737,11,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Identify Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?child .

  # Find the predecessor of each child
  ?child dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
737,14,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Find Archduke Charles Louis of Austria
  ?archduke a dbo:Person ;
            foaf:name ""Charles Louis, Archduke of Austria"" ;
            dbp:spouse ?parent .

  # Find the child (parent) of Archduke Charles Louis
  ?child dbo:childOf ?archduke ;
         a dbo:Person ;
         foaf:name ?nameParent .

  # Find the grandchild (child of the parent)
  ?grandchild dbo:childOf ?child ;
              a dbo:Royalty ;
              foaf:name ?nameGrandchild .
}
ORDER BY ?nameGrandchild
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
347,4,train,"Give me the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  # Find the resource for 2nd Dragoon Regiment (France)
  ?regiment a dbo:MilitaryUnit ;
            foaf:name ""2nd Dragoon Regiment (France)"" .

  # Find wars as societal events
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:relatedMilitaryUnit ?regiment .
  
  # Find wars as general events
  ?event a dbo:Event ;
         dbo:relatedMilitaryUnit ?regiment .

  # Find wars as television shows (assuming there's some connection)
  ?tvShow a dbo:TelevisionSeries ;
          dbo:subject ?war .

  # Bind the war to each type of event
  OPTIONAL { ?societalEvent dbp:name ?war . }
  OPTIONAL { ?event dbp:name ?war . }
  OPTIONAL { ?tvShow dbp:title ?war . }

}
ORDER BY ?war
LIMIT 10
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
38,11,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of Promise Me, Dad.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Joe Biden""@en .
  
  ?work dbo:author ?author ;
        rdf:type dbo:Book ;
        dbo:abstract ?abstract ;
        rdfs:label ?title .

  FILTER(CONTAINS(LCASE(?title), ""promise me, dad""))
  FILTER(CONTAINS(LCASE(?abstract), ""american""))

}",3,7,4,2,2,3,2,20,0,0,1,0,0.0,0
756,29,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Theodor Heuss's birthplace or nationality
  dbr:Theodor_Heuss dbo:nationality ?person .
  ?person dbo:country ?nativeCountry .

  # Manager of 2020–21 SBV Vitesse season
  OPTIONAL { 
    dbr:2020%E2%80%9321_SBV_Vitesse_season dbp:manager ?vitesseManager .
    ?vitesseManager dbo:nationality ?vitesseNationality .
  }

  # Manager of VfL Bochum
  OPTIONAL {
    dbr:VfL_Bochum dbp:currentManager ?bochumManager .
    ?bochumManager dbo:nationality ?bochumNationality .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
492,11,train,Give me the death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?deathPlace WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Aladdin (1958 film)""@en .

  OPTIONAL { 
    ?actor dbo:deathPlace ?deathPlace .
  }

  ?actor foaf:name ?actorName .
}
ORDER BY ?actorName
LIMIT 10
```",2,2,3,2,1,2,3,28,4,5,0,0.4444444444444444,1.0,0.6153846153846153
557,14,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?movie a dbo:Film .
  ?movie dbp:title ""Seventh Heaven (1927 film)""@en .
  ?movie dbo:starring dbr:Janet_Gaynor .
  ?movie dbo:producer ?producer .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
668,53,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Find the person with birth name $pacely (Tupac Shakur)
  ?tupac a dbo:MusicalArtist ;
         dbp:birthName ""$pacely"" .
  
  # Find the person with birth name Joey B (Joe Budden)
  ?joeBudden a dbo:MusicalArtist ;
             dbp:birthName ""Joey B"" .

  # Find an associated musical artist common to both
  ?tupac dbo:associatedWith ?commonArtist .
  ?joeBudden dbo:associatedWith ?commonArtist .
  
  # Ensure the common artist is a musician
  ?commonArtist a dbo:MusicalArtist .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
143,6,train,Give me the actor of The Campus Queen and associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?musicalArtistName WHERE {
  # Find the actor of ""The Campus Queen""
  ?film a dbo:Film .
  ?film dbp:title ""The Campus Queen"" .
  ?film dbo:starring ?person .
  ?person foaf:name ?actorName .

  # Find a musical artist associated with Cynthia Morgan
  ?cynthia a dbo:MusicalArtist ;
           foaf:name ""Cynthia Morgan"" .
  ?association dbo:associatedWith ?musicalArtist .
  ?musicalArtist foaf:name ?musicalArtistName .
  
  OPTIONAL { 
    ?association dbp:relatedTo ?cynthia .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
472,18,train,Give me the administration of the mayor of Duchy of Schleswig and administration of Christian IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorAdministration ?christianIXAdministration WHERE {
  # Find information about the mayor of Duchy of Schleswig
  OPTIONAL {
    ?mayor a dbo:Mayor ;
           dbo:officeLocation dbr:Duchy_of_Schleswig .
    ?mayor dbo:administration ?mayorAdministration .
  }

  # Find information about Christian IX of Denmark
  OPTIONAL {
    ?christianIX a dbo:Monarch ;
                 dbo:countryReigned dbr:Denmark .
    ?christianIX dbo:administration ?christianIXAdministration .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,15,train,"Give me the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""The Triple X"" .
  
  ?event a dbo:MilitaryConflict ;
         dbo:participatedIn ?person .

  OPTIONAL { 
    ?event rdfs:label ?warLabel .
    FILTER (lang(?warLabel) = 'en')
  }
}
ORDER BY ?war
LIMIT 10
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
19,7,train,Give me the spouse of Carrie Johnson and professional in the birth name of John Boxer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?birthName WHERE {
  # Query for Carrie Johnson's spouse
  OPTIONAL {
    ?carrie a dbo:Person ;
            foaf:name ""Carrie Johnson"" ;
            dbo:spouse ?spouse .
  }
  
  # Query for John Boxer's birth name
  OPTIONAL {
    ?john a dbo:Person ;
          foaf:name ""John Boxer"" ;
          dbp:birthName ?birthName .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
386,24,train,Give me the war of the awardee of 25 and war of the awardee of Golden Sword for Bravery.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeName WHERE {
  {
    ?award a dbo:Award .
    ?award rdfs:label ""War of the Awardee of 25""@en .
    ?recipient dbo:recipient ?award .
    ?recipient foaf:name ?awardeeName .
  }
  UNION
  {
    ?award a dbo:Award .
    ?award rdfs:label ""Golden Sword for Bravery""@en .
    ?recipient dbo:recipient ?award .
    ?recipient foaf:name ?awardeeName .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
557,25,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?producer WHERE {
  dbr:Janet_Gaynor dbo:famousFor ?work .
  ?work rdf:type dbo:Film .
  ?work rdfs:label ?movieLabel .
  FILTER(LANG(?movieLabel) = 'en') 
  BIND(REPLACE(STR(?movieLabel), "" \\(.*\\)$"", """") AS ?movie)
  
  ?work dbo:producer ?producer .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
386,14,train,Give me the entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?award WHERE {
  ?person a dbo:AwardRecipient .
  ?person dbo:awardedBy dbr:Russian_Empire .
  ?person dbo:relatedToWar ?war .
  ?person dbo:awardCount ?count .
  FILTER (?count = ""25""^^xsd:int)
  
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?award a dbo:Award . }
}
ORDER BY ?person
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,2,train,Give me the father of Baeda Maryam I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Baeda Maryam I""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  ?parent dbo:child ?person .
  ?parent foaf:name ?father .
}
```",1,1,2,1,1,3,3,71,0,3,1,0.0,0.0,0
609,22,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer .
  ?person foaf:name ""Vince Gilligan"" .
  ?person dbo:birthPlace ?birthPlace .
}

---

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer .
  ?person foaf:name ""Cece Bell"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,7,train,Give me the actor of High Society Blues.,SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:High_Society_Blues dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
347,29,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person1 a dbo:Person ;
           dbp:spouse ?spouse ;
           dbp:child ?child .
  ?person2 a dbo:Person ;
           rdfs:label ""Ferdinand II, Holy Roman Emperor""@en ;
           dbp:child ?person1 .
  ?person3 a dbo:Person ;
           rdfs:label ""Leopold V, Archduke of Austria""@en ;
           dbp:commanderInWar ?war .
  FILTER(?person1 = ?person3)
  
  ?person4 a dbo:Person ;
           rdfs:label ""Ferdinand III, Holy Roman Emperor""@en ;
           dbp:child ?grandChild .
  ?child dbp:parent ?person4 .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,58,train,"Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  ?awardee dbp:award dbr:Gillmore_Medal .
  ?war dbo:participant ?tracy .
  ?tracy foaf:name ""Amasa Tracy"" .

  ?force dbo:participatedIn ?war .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
198,34,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?award a dbo:Award .
  ?award dbo:awardingBody dbr:United_States_Congress .
  ?recipient dbo:recipientOf ?award .
  ?entity dbo:location dbr:Charleston,_South_Carolina .
  ?recipient dbo:associatedWith ?entity .
  OPTIONAL { ?recipient dbo:relatedTo ?war . }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
347,52,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find a person who is a commander in the Algerian War
  ?person dbo:allegiance dbr:Military_force_of_the_Algerian_War .
  ?person dbo:positionTitle ""Commander""@en .

  # Ensure this person is also related to societal events, events, and television shows
  ?event1 dbo:type dbr:Societal_event .
  ?event2 dbo:type dbr:Event .
  ?tvShow dbo:type dbr:Television_show .
  ?person dbo:relatedEvent ?event1 .
  ?person dbo:relatedEvent ?event2 .
  ?person dbo:relatedEvent ?tvShow .

  # Ensure this person is a child of Ferdinand II, Holy Roman Emperor
  ?ferdinandII dbr:Ferdinand_II,_Holy_Roman_Emperor ;
               dbp:child ?person .

  # Ensure this person is a father to someone related to Ferdinand III, Holy Roman Emperor
  ?ferdinardIII dbr:Ferdinand_III,_Holy_Roman_Emperor ;
                dbp:parent ?child .
  ?person dbp:child ?child .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
159,54,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas and commander in Great Turkish War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor ?writer ?turkishCommander WHERE {
  # Commander in the Russo-Polish War (1654–1667)
  ?commander dbo:occupation [ a dbo:Politician ; dbo:officeHolder true ] .
  ?commander dbo:participatedIn dbr:Russo-Polish_War_(1654%E2%80%931667) .

  # Successor of the commander
  OPTIONAL { 
    ?succession dbo:predecessor ?commander ;
                dbo:successor ?successor .
  }

  # Writer of the work of George Ducas
  ?work dbo:author ?writer ;
        dbo:about dbr:George_Ducas .

  # Commander in the Great Turkish War
  ?turkishCommander dbo:participatedIn dbr:Great_Turkish_War ;
                    a dbo:MilitaryPerson .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,16,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?force WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:honoursReceived dbr:Commander_of_the_Order_of_the_British_Empire .
  ?person dbo:event dbr:Sinking_of_Prince_of_Wales_and_Repulse .
  OPTIONAL { ?person dbo:militaryBranch ?force . }
}
ORDER BY ?person
LIMIT 10
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
103,45,train,"Give me the professional in Actor and actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  ?castMember dbo:character portrayedBy ?actor .
  ?show dbo:title ""Dispatches from Elsewhere""@en ;
        dbo:cast ?castMember .

  # Ensure the actor is also connected to The Shadow comics character
  OPTIONAL { 
    ?shadowCharacter dbo:alterEgo ?comicsCharacter .
    ?comicsCharacter rdfs:label ""The Shadow""@en .
    ?actor dbp:role ?shadowRole .
    ?shadowRole dbo:character ?shadowCharacter .
  }

  # Retrieve the actor's name
  ?actor foaf:name ?actorName .
}
ORDER BY ?actorName
LIMIT 10
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
905,5,train,Give me the spouse of Maria of Bytom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Maria_of_Bytom dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,59,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Step 1: Find the person born as ""Pacely""
  ?person dbp:birthName ""Pacely"" .
  
  # Step 2: Identify musical artists associated with this person
  ?association dbo:associatedMusicalArtist ?musicalArtist .
  ?association dbo:musicalArtist ?person .

  # Step 3: Find the professional who is a writer and has an album titled ""The Live Anthology""
  ?musicalArtist a dbo:MusicalArtist ;
                dbo:album dbr:The_Live_Anthology ;
                dbo:profession dbr:Writer .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
756,1,train,Give me the native of West Germany.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  FILTER (
    ?place IN (dbr:Bavaria, dbr:Hesse, dbr:North_Rhine-Westphalia, 
               dbr:Lower_Saxony, dbr:Rhineland-Palatinate, dbr:Saxony,
               dbr:Saxony-Anhalt, dbr:Schleswig-Holstein, dbr:Baden-Württemberg,
               dbr:Hamburg, dbr:Bremen, dbr:Berlin)
  )
}
ORDER BY ?name
LIMIT 10
```

This query selects individuals who are categorized as `dbo:Person` and whose birthplace is one of the states that made up West Germany. The list includes Bavaria, Hesse, North Rhine-Westphalia, Lower Saxony, Rhineland-Palatinate, Saxony, Saxony-Anhalt, Schleswig-Holstein, Baden-Württemberg, Hamburg, Bremen, and Berlin.",1,1,2,1,1,3,3,71,0,0,5170,0,0.0,0
472,17,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of Olaf I of Denmark.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?administration WHERE {
  VALUES ?person { 
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck
    dbr:Olaf_I_of_Denmark
  }
  
  OPTIONAL { ?person dbo:reignStart ?start . }
  OPTIONAL { ?person dbo:reignEnd ?end . }

  BIND(CONCAT(""Reigned from "", IF(BOUND(?start), STR(?start), ""unknown""), 
              "" to "", IF(BOUND(?end), STR(?end), ""present"")) AS ?administration)
}
```",3,4,4,2,2,2,3,28,0,3,1,0.0,0.0,0
687,11,train,"Give me the player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete .
  ?person dbp:birthday ""1955-02-22""^^xsd:date .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,18,0,0.0,0
943,60,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfParent WHERE {
  # Step 1: Commander in Siege of Mukha who is royalty
  ?commander a dbo:Royalty ;
             dbo:role ?siegeRole .
  ?siegeEvent dbo:name ""Siege of Mukha"" .
  ?siegeEvent dbo:participant ?commander .

  # Step 2: Parent of the commander
  ?parent dbp:child ?commander .
  
  # Step 3: Child of this parent
  ?childOfParent dbp:parent ?parent .

  # Step 4: Father of the father (who is royalty and an office holder)
  ?fatherOfFather dbp:child ?parent .
  ?officeHolder a dbo:OfficeHolder ;
                dbp:child ?fatherOfFather .

  # Step 5: Child of Baeda Maryam I
  ?baedaChild dbp:parent dbr:Baeda_Maryam_I .
  
  # Linking the child of Baeda Maryam I to the father found in step 4
  ?officeHolder dbp:child ?baedaChild .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,31,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Ackquille Jean Pollard's details
  ?ackquille a dbo:MusicalArtist ;
            foaf:name ""Ackquille Jean Pollard"" ;
            dbo:birthName ""Ackquille Jean Pollard"" .

  # Find the band he is associated with
  ?band dbo:member ?ackquille .
  
  # GS9 details
  ?gs9 a dbo:MusicalArtist ;
       foaf:name ""GS9"" .

  # Find members of GS9 who are also musical artists
  ?gs9Member a dbo:MusicalArtist ;
             dbo:member ?gs9 .

  # Find the band member associated with Ackquille's band and is in GS9
  ?bandMember a dbo:MusicalArtist ;
              dbo:member ?band ;
              dbo:member ?gs9 .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
225,13,train,Give me the entity in the region of the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  dbr:Kiyosu dbo:timeZone ?timeZone .
  ?region dbo:timeZone ?timeZone .
  ?region a dbo:Place .
  ?region foaf:name ?entity .
}
```",3,3,4,3,1,3,2,20,0,2123,8916,0.0,0.0,0
816,31,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?person dbo:deathPlace dbr:Los_Angeles .
  ?person dbo:child dbr:Amy_Arbus .
  ?movie dbo:starring ?actor .
  ?movie dbo:starring ?person .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,34,train,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor WHERE {
  # Find the Great Turkish War event
  ?war a dbo:MilitaryConflict ;
      rdfs:label ""Great Turkish War""@en .

  # Identify the commander of the war who is also a politician and office holder
  ?commander dbo:commanderOf ?war ;
            a dbo:Politician, dbo:OfficeHolder ;
            foaf:name ?nameCommander .

  # Find the successor of the commander who is also a politician and office holder
  ?successor dbp:succeededBy ?commander ;
             a dbo:Politician, dbo:OfficeHolder ;
             foaf:name ?nameSuccessor .
}
ORDER BY ?nameCommander
LIMIT 10
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
492,15,train,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?salMineoDeathPlace ?actorSkyRangerDeathPlace WHERE {
  # Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # Actor of ""The Sky Ranger"" (1928)
  OPTIONAL {
    dbr:The_Sky_Ranger_(film) dbo:actor ?actor .
    
    # Assuming we need to find the death place of this actor
    ?actor dbo:deathPlace ?actorSkyRangerDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,0,train,Give me the reference to Mitaka.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resource WHERE {
  ?resource rdfs:label ""Mitaka""@en .
}
LIMIT 10
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
492,24,train,Give me the death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?deathPlace WHERE {
  # Find actors in ""Color Me Dead""
  { 
    ?film a dbo:Film .
    ?film dbp:title ""Color Me Dead"" .
    ?film dbo:starring ?actor1 .
    ?actor1 foaf:name ?actorName .
    OPTIONAL { ?actor1 dbo:deathPlace ?deathPlace . }
  } UNION
  # Find actors in ""Aladdin"" (1958 film)
  {
    ?film a dbo:Film .
    ?film dbp:title ""Aladdin (1958 film)"" .
    ?film dbo:starring ?actor2 .
    ?actor2 foaf:name ?actorName .
    OPTIONAL { ?actor2 dbo:deathPlace ?deathPlace . }
  }
}
ORDER BY ?actorName
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
293,41,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person foaf:name ""Harriette Arlene Lake"" .
  
  OPTIONAL { 
    ?partyMembership dbo:member ?person .
    ?party dbo:country dbr:United_States .
    ?party dbo:stateOrProvince dbr:Louisiana .
    ?party dbo:city dbr:Central,_Louisiana .
  }
  
  OPTIONAL {
    ?spouseRelationship dbo:spouse ?actor .
    ?actor foaf:name ""1,000 Dollars a Minute"" .
    ?spouseRelationship dbo:person1 ?person ;
                       dbo:person2 ?actor .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
706,0,train,Give me the birthplace of Ebrahim Alkazi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Ebrahim_Alkazi dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
557,20,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?work dbo:composer dbr:Cora_Sue_Collins .
  ?work dbo:producer ?producer .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,51,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:awardReceived dbr:Gillmore_Medal .
  ?recipient dbp:awardedWith dbr:Gillmore_Medal .
  ?force dbo:member ?person .
  ?force dbo:member ?recipient .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
68,1,train,"Give me the child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:child ?child . }
  
  FILTER (?person = dbr:Maximilian_I,_Holy_Roman_Emperor)
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
398,3,train,Give me the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  dbr:Russia_national_football_team a dbo:SportsTeam .
  OPTIONAL { dbr:Russia_national_football_team dbp:commonName ?nickname . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
585,10,train,Give me the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/Shirley_Stoler>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  dbr:Shirley_Stoler dbo:occupation ?profession .
}
```",2,2,3,2,1,3,2,20,0,0,19241,0,0.0,0
472,12,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?administration WHERE {
  VALUES ?king { 
    dbr:Christian_IX_of_Denmark 
    dbr:Olaf_I_of_Denmark
  }
  
  ?person dbo:monarchOf ?king .
  OPTIONAL { ?person dbp:reignStart ?start . }
  OPTIONAL { ?person dbp:reignEnd ?end . }

  OPTIONAL {
    ?administration dbo:administrativeRegion ?territory .
    ?administration dbo:headquarterLocation dbr:Copenhagen .
    ?person dbo:administers ?administration .
  }

  FILTER(?king IN (dbr:Christian_IX_of_Denmark, dbr:Olaf_I_of_Denmark))
}
ORDER BY ?person
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
905,22,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?child WHERE {
  # Identify Charles II of Naples
  dbr:Charles_II_of_Naples a dbo:Monarch ;
                            dbo:spouse ?spouse .

  # Find the children of this spouse who are royalty
  ?spouse dbo:child ?child .
  
  # Ensure the child is royalty and has a connection to Béla IV of Hungary
  ?child a dbo:Royalty ;
         dbo:parent dbr:Béla_IV_of_Hungary .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
595,30,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in the Gulf War (a war involving the United States Navy)
  ?gulfWar dbo:commander ?person ;
           dbo:participatingMilitaryUnit dbr:United_States_Navy .

  # Author of ""Back to Work""
  ?book dbp:title ""Back to Work""@en .
  ?book dbo:author ?person .

  # Spouse of Hillary Clinton
  ?hBill a dbo:Spouse ;
         dbo:spouse dbr:Hillary_Clinton ;
         dbo:spouse ?person .
}
LIMIT 1
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
103,4,train,"Give me the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?title WHERE {
  ?work a dbo:Film ; 
        dbo:starring dbr:Richard_E._Grant .
  OPTIONAL { ?work a dbo:TelevisionSeries . }
  ?work rdfs:label ?title .
  FILTER (lang(?title) = 'en')
}
ORDER BY ?title
LIMIT 10
```",1,2,2,1,1,3,3,71,0,10,10,0.0,0.0,0
595,38,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?work a dbo:Book .
  ?work dbo:author dbr:Bill_Clinton .
  OPTIONAL { 
    ?work dbo:subject ?subject .
    FILTER (
      ?subject IN (dbr:HIV/AIDS, dbr:Gulf_War) # Assuming Gulf War as an example of societal event
    )
  }
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
737,59,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Alexander of Württemberg and his descendants
  dbr:Alexander_of_W%C3%BCrttemberg dbo:child ?grandChild .
  ?grandChild dbo:child ?greatGrandChild .
  ?greatGrandChild dbo:child ?thirdGenerationDescendant .

  # Spouse of Archduchess Helena of Austria
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  ?spouse dbo:child ?childOfSpouse .

  # Predecessor in lineage or title
  ?thirdGenerationDescendant dbo:predecessorInLineageOrTitle ?person .
  
  # Ensure the person is royalty
  ?person a dbo:RoyalFamilyMember .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,33,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .

  # Step 2: Find the children of Edward Stanley
  ?child dbo:parent ?parent .
  
  # Step 3: For each child, find their parents (including Edward Stanley)
  ?parent rdf:type dbo:Person .

  # Step 4: Identify the other parent (spouse) of Edward Stanley
  FILTER(?parent != dbr:Edward_Stanley,_17th_Earl_of_Derby)

  # Step 5: Ensure this person is a politician and an office holder
  ?parent rdf:type dbo:Politician .
  ?parent dbo:officeHolderOf ?office .

  BIND(?parent AS ?spouse)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,10,train,Give me the spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?charlesII a dbo:Monarch ;
             dbo:country dbr:Naples ;
             dbo:spouse ?spouse .
  
  ?stephenV a dbo:Monarch ;
            dbo:country dbr:Kingdom_of_Hungary ;
            dbo:child ?spouse .

}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,10,train,Who is the awardee of the reference to Nobel Prize in Physics?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:name ""Nobel Prize in Physics""@en .
  ?award dbo:recipient ?awardee .
}
ORDER BY ?awardee
LIMIT 10
```",2,2,3,2,1,3,2,20,0,0,31,0,0.0,0
414,1,train,Give me the award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  dbr:Max_Born dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
361,13,train,Give me the professional in the profession of Frédéric Bouraly and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?otherPerson WHERE {
  # Find Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly a dbo:Agent ;
                       dbo:occupation ?profession .

  # Find other professionals with the same occupation
  ?otherPerson a dbo:Agent ;
              dbo:occupation ?profession .
  
  FILTER(?otherPerson != dbr:Frédéric_Bouraly)
}
ORDER BY ?otherPerson
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
943,13,train,Give me the reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbp:alias ""The Shadow"" .
  ?character foaf:name ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
89,37,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Saw Shwe Khet and Myat Hpone Pyo
  ?sawShweKhet a dbo:Person ;
               dbp:successor dbr:Myat_Hpone_Pyo .

  # Find the child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Royalty .

  # Identify the spouse of Saw Shwe Khet
  ?sawShweKhet dbp:spouse ?spouse .
}
```",4,6,5,3,2,3,3,71,0,1,1,0.0,0.0,0
557,29,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:director ?person .
  OPTIONAL { ?person dbo:profession ?profession . }
  OPTIONAL { ?film dbo:producer ?producer . }
  FILTER(?film = dbr:A_Star_Is_Born_(1937_film))
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
23,7,train,Give me the party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?person { 
    dbr:Gustavo_Petro 
    dbr:Roy_Barreras 
  }
  
  ?person dbo:memberOfParty ?party .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
249,1,train,Give me the native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:India .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,2,9,10,1,8967,0.9090909090909091,0.0011139578923916676,0.0022251891410769915
353,2,train,"Give me the child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile"" ;
          dbp:spouse ?husband .
  
  OPTIONAL { ?elvira dbo:spouse ?husband . }
  
  ?child dbo:parent ?elvira ;
         a dbo:Person .

}
ORDER BY ?child
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
816,11,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Herschel_Bernardi .
  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Herschel_Bernardi)
}
ORDER BY ?actor
LIMIT 10
```",2,3,3,2,1,3,3,71,10,0,57,1.0,0.14925373134328357,0.2597402597402597
737,54,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfMargareteSophie ?predecessor WHERE {
  # Archduchess Margarete Sophie of Austria and her child
  ?margareteSophie a dbo:Person ;
                  foaf:name ""Archduchess Margarete Sophie of Austria"" .
  ?childOfMargareteSophie dbo:parent ?margareteSophie .

  # Philipp Albrecht, Duke of Württemberg and his child
  ?philippAlbrecht a dbo:Person ;
                  foaf:name ""Philipp Albrecht, Duke of Württemberg"" .
  ?childOfPhilippAlbrecht dbo:parent ?philippAlbrecht .

  # Alexander of Württemberg (1804-1881) and his great-grandchild
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear .
  ?childOfAlexander dbo:parent ?alexander .
  ?grandChildOfAlexander dbo:parent ?childOfAlexander .
  ?greatGrandChildOfAlexander dbo:parent ?grandChildOfAlexander .

  # Predecessor relationship
  ?predecessor dbo:successor ?childOfPhilippAlbrecht .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
119,33,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?country WHERE {
  # Find Alberto Núñez Feijóo and his office
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .
  
  # Find a Spanish citizen from Spain and their country of residence
  ?person dbo:nationality dbr:Spain ;
          dbo:birthPlace dbr:Spain ;
          dbp:residenceCountry ?country .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
213,12,train,Give me the country of the work of Lao She and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?workCountry ?birthPlace WHERE {
  # Lao She's work country
  OPTIONAL {
    ?work dbo:author dbr:Lao_She .
    ?work dbo:country ?workCountry .
  }
  
  # Winston Chang's birth place
  OPTIONAL {
    ?person dbp:name ""Winston Chang""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
731,4,train,"Give me the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event WHERE {
  VALUES ?resource { 
    dbr:Sinking_of_the_Prince_of_Wales_and_Reprulse
  }
  
  ?resource dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?redirect a dbo:MilitaryConflict . }
  OPTIONAL { ?redirect a dbo:SocietalEvent . }

  FILTER (?redirect != ?resource)
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
742,11,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of Reneta Kamberova.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Find Reneta Kamberova's birthplace
  VALUES ?reneta { dbr:Reneta_Kamberova }
  
  ?reneta dbo:birthPlace ?birthPlace .

  UNION

  # Find an alumnus of Plovdiv University ""Paisii Hilendarski"" and their birthplace
  {
    ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
    ?alumnus dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
68,4,train,"Who is the commander, that is a royalty, in Siege of Padua?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:location dbr:Padua .
  ?event dbo:eventDate ?date .
  FILTER (CONTAINS(LCASE(?eventLabel), ""siege of padua""))
  
  ?person dbo:role ?role .
  ?person dbo:memberOf ?royalty .
  ?person dbo:participatedIn ?event .
  ?person foaf:name ?commander .

  OPTIONAL { 
    ?person dbo:title ?title .
    FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke""))
  }
}
ORDER BY ?commander
LIMIT 10
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
59,5,train,Give me the native of the residence of David Luckman.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residenceNative WHERE {
  # Find David Luckman's place of residence
  ?person a dbo:Person ;
          foaf:name ""David Luckman"" .
  
  OPTIONAL { 
    ?person dbp:residence ?residence .
    
    # Find the native location of this residence
    ?residence dbo:nativeName ?residenceNative .
  }
}
```",2,2,3,2,1,2,2,9,0,0,971,0,0.0,0
347,42,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Ferdinand II is the father of both Cecilia Renata and Eleonore of Austria
  dbr:Cecilia_Renata_of_Austria dbo:father dbr:Ferdinand_II,_Holy_Roman_Emperor .
  dbr:Eleonore_of_Austria_Queen_of_Poland dbo:father dbr:Ferdinand_II,_Holy_Roman_Emperor .

  # The commander is a societal event, an event, and a television show
  ?commander a dbo:SocietalEvent ;
            a dbo:Event ;
            a dbo:TelevisionShow .

  # The commander is associated with the 2nd Dragoon Regiment (France)
  ?war dbo:participatingUnit dbr:2nd_Dragoon_Regiment_(France) .
  ?war dbo:commander ?commander .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
103,49,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find a television show that is also a movie
  ?show a dbo:TelevisionShow ;
        dbo:genre/dbo:subClassOf* dbo:Film .
  
  # Ensure the show features Richard E. Grant
  ?castMember dbo:character ?role .
  ?castMember dbp:name ""Richard E. Grant"" .
  ?castMember dbo:actor ?show .

  # The series' alter ego is a comics character named ""The Shadow""
  ?show dbo:basedOn dbr:The_Shadow_(comics) ;
        dbo:alterEgo dbr:The_Shadow_(video_game) .

  # Find the actor of this show
  ?actor dbp:name ?actorName .
  ?actor dbo:role ?roleInShow .
  ?actor dbo:actedIn ?show .
}
```",5,7,6,3,2,3,3,71,0,0,13,0,0.0,0
103,9,train,Give me the actor of Dispatches from Elsewhere and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
731,14,train,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:partOf ?war .
  
  ?commander dbo:commanded ?unit .
  ?unit dbo:involvedIn ?event .

  FILTER(?event = dbr:Sinking_of_Prince_of_Wales_and_Repulse)
}
```",3,5,4,3,1,3,2,20,0,0,12,0,0.0,0
39,0,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?singer ?name WHERE {
  ?singer a dbo:MusicalArtist .
  OPTIONAL { ?singer foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,12,10364,0.0,0.0,0
89,42,train,Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Min Hla Htut of Pyakaung's parent
  ?minHlaHtut a dbo:Person ;
              dbp:parent ?parent .

  # Saw Shwe Khet's spouse and child
  ?sawShweKhet a dbo:Person ;
               dbp:spouse ?spouse ;
               dbp:child ?child .

  # The individual we are looking for is the child of Min Hla Htut's parent,
  # who is also Saw Shwe Khet's spouse and predecessor of her child.
  ?parent dbo:child ?individual .
  FILTER (?individual = ?spouse)
  
  # Ensure this individual is a predecessor of Saw Shwe Khet's child
  ?child dbo:predecessor ?individual .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
668,54,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?shaggy a dbo:MusicalArtist .
  ?shaggy foaf:name ""Shaggy"" .
  ?shaggy dbp:birthName ""Elorm Kabu Amenyah"" .

  ?stormzy a dbo:MusicalArtist .
  ?stormzy foaf:name ""Stormzy"" .
  ?stormzy dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .

  ?shaggy dbo:profession dbr:Writer .
  ?stormzy dbo:profession dbr:Writer .

  ?associatedArtist a dbo:MusicalArtist .
  ?association dbo:subject ?shaggy ;
               dbo:predicate dbr:hasCollaborationWith ;
               dbo:object ?associatedArtist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,5,train,"Give me the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolder true .
  ?person dbo:residence dbr:Chappaqua,_New_York .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
943,47,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  # Find the alter ego of Lamont Cranston (The Shadow)
  ?shadow a dbo:FictionalCharacter ;
          dbp:name ""The Shadow"" ;
          dbp:alias ""Lamont Cranston"" .
  
  # Find Dawit I and his children
  ?dawitI a dbo:Monarch ;
          dbp:spouse ?spouse ;
          dbp:child ?child .

  # Filter for Yeshaq I as a child of Dawit I
  ?yeshaqI a dbo:Person ;
           dbp:name ""Yeshaq I"" ;
           dbp:parent ?dawitI .
  
  # Find the alter ego reference related to one of Dawit I's children
  ?child dbp:alterEgo ?alterEgo .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
706,7,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
ORDER BY ?person
LIMIT 10
```",2,2,3,2,1,3,2,20,3,8,0,0.2727272727272727,1.0,0.42857142857142855
782,55,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artistName ?bandName WHERE {
  # Find the artist born as Nicholas Michael Curran
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Nicholas Michael Curran"" .

  # Get the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbo:bandMember ?thunderbirdPerson .
  ?thunderbirdPerson foaf:name ?artistName .

  # Find Eric Clapton's band membership
  dbr:Eric_Claptont dbo:bandMember ?claptonBand .
  ?claptonBand foaf:name ?bandName .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
198,59,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Find awards associated with Quincy Adams Gillmore
  ?award dbo:recipient dbr:Quincy_Adams_Gillmore .
  
  # Find the force of the awardee of these awards
  ?awardee dbo:award ?award ;
          dbo:militaryForce ?force .

  # Find awards given by the United States Congress
  ?congressAward a dbo:Award ;
                 dbp:givingBody dbr:United_States_Congress .
  
  # Find the awardees of these congress awards and their forces
  ?congressAwardee dbo:award ?congressAward ;
                   dbo:militaryForce ?force .

}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
119,41,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  
  OPTIONAL { 
    ?person dbo:officeLocation dbr:Santiago_de_Compostela .
  }
  
  OPTIONAL {
    ?electionEvent dbo:leader ?person ;
                   dbo:electionDate ?date .
    FILTER(YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?electionEvent)), ""galician regional election""))
  }

  ?person dbo:residenceCountry ?residence .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,56,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?person dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?person dbo:militaryCommanderOf ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot ;
       dbo:participatingUnit dbr:Battle_of_Fort_Royal .

  ?event a dbo:SocietalEvent, dbo:MilitaryEvent .
  ?event dbo:relatedTo ?person .
  
  ?militaryForce dbo:relatedTo ?war .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
38,17,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bidenAuthor ?koreanConflictAuthor WHERE {
  # Find the author of ""Promises to Keep"" by Joe Biden
  dbr:Promises_to_Keep_(book) dbo:author ?bidenAuthor .

  # Find the commander during the Korean conflict and their written work
  ?commander a dbo:OfficeHolder ;
             dbp:officeHeld dbr:Commander_in_Chief_of_the_Armed_Forces_of_the_United_States_during_the_Korean_War .
  
  OPTIONAL { 
    ?writtenWork dbo:author ?koreanConflictAuthor .
    ?writtenWork dbo:creator ?commander .
    FILTER EXISTS { ?writtenWork a dbo:WrittenWork }
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
731,9,train,Who is the awardee of the award of Edmund Hakewill-Smith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award foaf:name ""Edmund H. W. Day Award""@en .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,3570,0,0.0,0
203,17,train,"Give me the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath .

  ?event dbo:type dbr:SocietalEvent ;
         dbo:agent ?person .

  ?event dbo:hasForce ?force .
}
```",2,4,3,2,1,3,3,71,0,0,298,0,0.0,0
859,17,train,"Give me the band member of Human Remains (band) and associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?humanRemainsMember ?khlystAssociatedArtist WHERE {
  # Find members of Human Remains
  ?humanRemainsMember dbo:memberOf dbr:Human_Remains_(band) .
  
  # For each member, find their associated musical artists
  ?humanRemainsMember dbp:associatedMusicalArtist ?associatedArtist .

  # Check if any associated artist is a member of Khlyst
  ?associatedArtist dbo:memberOf dbr:Khlyst_(band) .

  # Ensure the associated artist is also a musical artist
  ?associatedArtist a dbo:MusicalArtist .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
258,3,train,Give me the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  dbr:Federal_University_of_Paraíba a dbo:CollegeOrUniversity .
  OPTIONAL { dbr:Federal_University_of_Paraíba dbo:established ?foundingDate . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,59,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  # Find wars associated with William Bayne
  ?bayneWar a dbo:MilitaryConflict ;
            dbo:commander ?bayneCommander .
  ?bayneCommander foaf:name ""William Bayne"" .

  # Find wars associated with The Triple X's
  ?tripleXWar a dbo:MilitaryConflict ;
              dbo:commander ?tripleXCommander .
  ?tripleXCommander foaf:name ""The Triple X's"" .

  # Identify the common war
  FILTER (?bayneWar = ?tripleXWar)

  # Retrieve the military force involved in this war
  ?commonWar dbo:militaryForce ?militaryForce .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
386,13,train,Give me the war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Find wars involving Karl Gustav von Baggovut
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Karl Gustav von Baggovut""@en .
  ?baggovutWar dbo:participatedIn ?war .

  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  ?elena a dbo:Person ;
         foaf:name ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?elena dbo:birthPlace ?birthPlace .

  # Find the entity associated with her birthplace
  ?entity dbr:{{{?birthPlace}}}.

  # Check if the war is related to this entity
  ?war dbo:location ?entity .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,5,train,"Give me the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthday ""1945-03-30""^^xsd:date .
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
103,1,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
}
ORDER BY ?actor
LIMIT 10
```",1,1,2,1,1,3,3,71,1,9,21579,0.1,4.633920296570899e-05,9.263547938860583e-05
871,11,train,Give me the parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?parent WHERE {
  ?person dbp:awards dbr:Commander_of_the_Royal_Victorian_Order .
  OPTIONAL { 
    ?person dbo:parent ?parent .
  }
}",2,2,3,2,1,3,3,71,0,118,1,0.0,0.0,0
246,1,train,Give me the parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Prince_Omar_bin_Faisal dbo:childOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
468,4,train,Give me the parent of Martin of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Martin_of_Aragon dbo:childOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
347,58,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbr:Ferdinand_III ""hasChild"" ?child .
  ?child a dbo:Person .
  ?child dbo:parent dbr:Maria_Anna_of_Bavaria_(1574-1646) .
  OPTIONAL { ?child dbo:spouse ?spouse . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
59,0,train,Give me the native of Bristol.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Bristol .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,2,9,10,1,961,0.9090909090909091,0.010298661174047374,0.020366598778004074
119,48,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant ?office WHERE {
  ?administration a dbo:Government ;
                  dbo:party dbr:Spanish_Socialist_Workers'_Party .
  
  ?administration dbo:leader ?tenant .

  OPTIONAL { 
    ?event dbo:agent ?quintana ;
           dbo:positionHeld ?office .
    
    ?quintana foaf:name ""Anxo Quintana""@en .
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
119,17,train,"Give me the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty .
  ?party foaf:name ""Spanish Socialist Workers' Party""@en .
  ?party dbo:hasGovernment ?government .
  ?government dbo:headOfStateOrGovernment ?leader .
  ?administration dbo:headOfStateOrGovernment ?leader ;
                  dbo:country dbr:Spain .
}
ORDER BY ?administration
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,320,0,0.0,0
871,23,train,Give me the parent of the awardee of the award of Rodney Lees.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?award a dbo:Award .
  ?award foaf:name ""Rodney Lees""@en .  # Assuming Rodney Lees is the name of an award
  ?recipient dbo:awardReceived ?award .
  ?recipient dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
225,5,train,"Give me the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Japan .
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
}
ORDER BY ?awardee
LIMIT 10
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
737,28,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Identify Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht a dbo:Person ;
                  foaf:name ""Philipp Albrecht, Duke of Württemberg""@en ;
                  dbp:spouse ?margareteSophie .

  # Find his child who is also the child of Archduchess Margarete Sophie
  ?child dbo:parent ?philippAlbrecht ;
         dbo:parent ?albrechtDuke ;
         foaf:name ?name .

  # Identify Albrecht, Duke of Württemberg
  ?albrechtDuke a dbo:Person ;
                foaf:name ""Albrecht, Duke of Württemberg""@en .

  # Find the predecessor of this child
  ?child dbo:predecessor ?predecessor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
737,2,train,Give me the child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Margarete Sophie of Austria""@en .
  ?relation dbo:parent ?person ;
            dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,8,train,Who is the author of El Deafo?,SELECT ?result WHERE { <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book dbp:title ""El Deafo""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
203,60,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:name ""World War I"" .

  ?alliance dbo:member ?country1, ?country2, ?country3 .
  ?alliance dbo:name ""Triple Entente"" .

  ?person dbo:nationality ?country1 ;
          dbo:nationality ?country2 ;
          dbo:nationality ?country3 ;
          dbo:commanderOf ?conflict .

  ?person dbp:honors ""Knight Commander of the Order of the Bath""@en .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
706,9,train,Who is the awardee of the reference to Sangeet Natak Akademi Fellowship?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
}
```",2,2,3,2,1,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
557,9,train,Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) a dbo:Film .
  OPTIONAL { 
    ?film dbo:director ?director .
    ?film dbo:producer ?producer .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,25,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Na'od is a person
  dbr:Na'od a dbo:Person .

  # Find Na'od's father
  OPTIONAL { 
    ?naodFather dbo:spouse ?naodMother .
    ?naodFather dbp:child dbr:Na'od .
  }

  # Find the grandfather (father of Na'od's father)
  OPTIONAL {
    ?grandfather dbo:spouse ?grandmother .
    ?grandfather dbp:child ?naodFather .
    
    # Ensure the grandfather is royalty and an office holder
    ?grandfather a dbo:Monarch ;
                dbo:officeHolderOf ?office .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
158,10,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace ?place .
  ?person dbo:spouse|dbo:child|dbo:parent* ?relation .
  ?relation dbo:officeHolder dbr:Alexander_II,_Grand_Duke_of_Finland .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",2,2,3,2,1,2,3,28,0,0,355,0,0.0,0
311,4,train,"Give me the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?album WHERE {
  ?album a dbo:Album .
  ?album dbo:workType dbo:MusicalWork .
  ?album rdfs:label ""Sappy""@en .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
859,1,train,Give me the associated musical artist of Phantomsmasher.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?artist a dbo:MusicalArtist .
  OPTIONAL { 
    ?alias foaf:name ""Phantomsmasher"" .
    ?artist dbo:alias ?alias .
  }
}
```",1,1,2,1,1,3,2,20,3,125442,8,2.3914863087408826e-05,0.2727272727272727,4.7825532457594695e-05
816,27,train,Give me the parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Mariclare Costello's resource
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 2: Find the spouse's children
  ?child dbo:parent ?spouse .
  
  # Step 3: Determine the parents of those children (excluding the spouse)
  ?child dbo:parent ?parent .
  FILTER (?parent != ?spouse)
}
```",3,3,4,3,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
737,13,train,Give me the child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Duke Philipp of Württemberg
  ?duke a dbo:Person ;
        foaf:name ""Philipp, Duke of Württemberg""@en .
  
  # His children
  ?duke dbo:child ?child .

  # Children's children (grandchildren)
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
295,5,train,Give me the birth place of Victor Saville.,SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Victor_Saville a dbo:Person .
  OPTIONAL { dbr:Victor_Saville dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
293,25,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rogerSpouse ?annSothernPerson WHERE {
  # Find Roger Pryor and his spouse
  ?roger a dbo:Actor ;
         foaf:name ""Roger Pryor"" ;
         dbp:spouse ?rogerSpouse .

  # Find the person born with the birth name of Ann Sothern
  ?annSothernPerson a dbo:Person ;
                    dbp:birthName ""Ann Sothern"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
258,1,train,Give me the alma mater of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
414,14,train,Give me the award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person dbo:award dbr:Nobel_Prize_in_Physics .
  ?person dbo:honoraryTitle ?award .
}
```",3,3,4,3,1,3,2,20,0,0,87,0,0.0,0
39,60,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Step 1: Identify Bob Thompson by his birth name
  ?bob a dbo:MusicalArtist .
  ?bob foaf:name ""Bob Thompson"" .
  ?bob dbp:birthName ?birthName .

  # Step 2: Find a musical artist born as this person
  ?artist a dbo:MusicalArtist .
  ?artist dbp:birthName ?birthName .

  # Step 3: Determine the producer of Coke Studio Philippines
  ?producer a dbo:Person ;
            dbo:profession dbr:Music_producer ;
            dbo:worksFor dbr:Coke_Studio_Philippines .

  # Step 4: Identify the band associated with this producer
  ?band a dbo:Band .
  ?band dbo:member ?producer .
  
  # Linking the professional to the band
  ?professional dbo:profession ?band .
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
609,1,train,Give me the birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Glenn_Youngkin a dbo:Person .
  OPTIONAL { dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
87,7,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName WHERE {
  # Actors in ""Paradise"" (2013 film)
  OPTIONAL {
    ?paradiseFilm a dbo:Film .
    ?paradiseFilm dbo:title ""Paradise (2013 film)""@en .
    ?paradiseFilm dbo:starring ?paradiseActor .
    ?paradiseActor foaf:name ?actorName .
  }
  
  # Actors in ""Always"" (1989 film)
  OPTIONAL {
    ?alwaysFilm a dbo:Film .
    ?alwaysFilm dbo:title ""Always (film)""@en .
    ?alwaysFilm dbo:starring ?alwaysActor .
    ?alwaysActor foaf:name ?actorName .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
943,55,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  ?person a dbo:Person .
  ?person dbp:father dbr:Susenyos_I_of_Ethiopia .
  ?susenyos dbo:father dbr:Lebna_Dengel .
  ?lebna dbo:father dbr:Yeshaq_I_of_Ethiopia .
  ?fasilides a dbo:Monarch ;
             dbp:father dbr:Susenyos_I_of_Ethiopia ;
             dbp:birthPlace dbr:Na'od .
  OPTIONAL { ?person dbp:alterEgo ?alterEgo . }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
816,42,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfAmy ?parentOfAllanChild ?movie WHERE {
  # Amy Arbus's parent
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus"" ;
       dbp:parent ?parentOfAmy .

  # Allan Arbus and his child (likely Amy)
  ?allan a dbo:Person ;
         foaf:name ""Allan Arbus"" ;
         dbp:child ?child .
  
  FILTER(?child = ?amy) # Assuming the child is Amy

  # Parent of Allan's child
  ?child dbp:parent ?parentOfAllanChild .

  # Movie with Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi ;
         a dbo:Film .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,50,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley"" ;
          dbo:spouse ?wife .

  # Child of Edward Stanley who is a politician (Frederick Stanley)
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley"" ;
             dbo:parent ?edward ;
             dbo:occupation dbo:Politician .

  # Parent of Frederick Stanley
  ?parent a dbo:Person ;
          foaf:name ""Edward Stanley"" ;
          dbo:spouse ?wife .

  # Ensure Edward Stanley is an office holder
  ?officeHolder a dbo:OfficeHolder ;
                dbo:holder ?edward .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,23,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Anxo Quintana as a person
  dbr:Anxo_Quintana a dbo:Person .

  # Find any political role or administration he was involved in
  OPTIONAL { 
    dbr:Anxo_Quintana dbo:positionHeld ?role .
    ?role dbo:partOf ?administration .
    
    # Determine the leader of that administration
    ?administration dbo:leader ?leader .
    
    # Retrieve the office held by this leader
    ?leader dbo:office ?office .
  }
}
```",3,4,4,3,1,3,3,71,0,0,34,0,0.0,0
347,45,train,"Give me the commander in Thirty Years' War and father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Eleonore of Austria and her father
  ?eleonore a dbo:Person ;
            dbp:father ?father .

  # Father's child who is royalty
  ?child dbp:parent ?father ;
         a dbo:Royalty .

  # Maria Anna of Bavaria (born 1574) and her father
  dbr:Maria_Anna_of_Bavaria_(1574-1616) dbp:father ?mariaFather .

  # Commander in the Thirty Years' War
  ?commander a dbo:Person ;
             dbo:role ?role .
  
  FILTER(CONTAINS(LCASE(?role), ""thirty years war"")).
  
  # Connect the relationships
  ?child dbr:Maria_Anna_of_Bavaria_(1574-1616) .
  ?father ?mariaFather .

  # Ensure the commander is the father of Eleonore and fits into the family tree
  FILTER(?commander = ?father)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
293,17,train,Give me the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentBirthName WHERE {
  # Find Tisha Sterling's resource
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  # Identify her parents
  ?tisha dbo:childOf ?parent .

  # Get the birth name of each parent
  OPTIONAL { ?parent dbp:birthName ?parentBirthName . }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
531,10,train,Give me the office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?madridAssociation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Miguel Maura"" .
  
  OPTIONAL { 
    ?person dbo:positionHeld ?office .
  }
  
  OPTIONAL {
    ?person dbp:residence dbr:Madrid .
    BIND(""Resident of Madrid"" AS ?madridAssociation)
  }

  FILTER NOT EXISTS { ?person dbo:birthPlace ?place . } # Ensures we're not filtering by birthplace
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,1,train,Give me the parent of Kate Dimbleby.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Kate_Dimbleby dbo:childOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
263,2,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne dbo:childOf ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,51,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Find Tisha Sterling
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling"" .

  # Identify her parent
  ?parent dbo:child ?tisha .
  
  # Find the actor from ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?actor dbo:starringIn ?movie ;
         foaf:name ?actorName .

  # Identify the spouse of the actor
  ?spouse dbo:spouse ?actor ;
          dbp:birthName ?birthName .

  # Ensure the parent is also the spouse
  FILTER (?parent = ?spouse)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
943,49,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I's child
  ?child1 dbo:parent dbr:Baeda_Maryam_I .
  
  # Yeshaq I's parent who is royalty
  ?yeshaqParent dbo:parent dbr:Yeshaq_I ;
                a dbo:Monarch .

  # The child of the above parent (i.e., Yeshaq I)
  ?child2 dbo:parent ?yeshaqParent .
  
  # The father of Baeda Maryam I's child
  ?father1 dbo:parent ?child1 ;
           a dbo:Monarch ;
           dbo:officeHolder ?office .

  # The father of the above father (i.e., grandfather)
  ?grandfather dbo:parent ?father1 ;
               a dbo:Monarch ;
               dbo:officeHolder ?office .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
89,53,train,Give me the child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent WHERE {
  # Minye Kyawswa and his child
  ?minyeKyawswa dbr:Minye_Kyawswa .
  ?minyeKyawswa dbo:child ?child1 .

  # Saw Shwe Khet, her child, and spouse (predecessor)
  ?sawShweKhet dbr:Saw_Shwe_Khet .
  ?sawShweKhet dbo:spouse ?spouse .
  ?sawShweKhet dbo:child ?child2 .

  # Predecessor of Saw Shwe Khet's child
  ?predecessor dbo:succeededBy ?child2 .

  # Parent of Minye Kyawswa's child
  ?parent dbo:child ?child1 .
  
  # Child of this parent (which is the answer)
  ?parent dbo:child ?childOfParent .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
723,1,train,Give me the band member of Stone Sour.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band foaf:name ""Stone Sour"" .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
159,56,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?georgeDucas ?successor ?commander WHERE {
  # Reference to George Ducas
  dbr:George_Ducas dbo:wikiPageRedirects ?georgeDucas .

  # Successor of the commander in the Russo-Polish War (1654–1667)
  ?war dbo:participatedIn dbr:Russo-Polish_War_(1654%E2%80%931667) .
  ?commander dbo:positionHeld ?war ;
             dbo:successor ?successor .

  # Commander in the war that is a television show and societal event, related to Battle of Vienna
  ?tvShow dbo:genre dbr:Military_history ;
          dbo:relatedEvent dbr:Battle_of_Vienna .
  ?commander dbo:positionHeld ?tvShow .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
89,57,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Saw Shwe Khet's child who is royalty
  ?child a dbo:Monarch ;
         dbo:parent dbr:Saw_Shwe_Khet .

  # Father of the child and his spouse
  ?father dbo:spouse ?spouse .
  ?child dbo:parent ?father .

  # Predecessor of the spouse, who is royalty
  ?predecessor a dbo:Monarch ;
               dbo:successor ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,10,train,Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Harriette Arlene Lake"" .
  ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
119,46,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?administration a dbo:Event .
  ?administration dbo:leader dbr:Anxo_Quintana .
  ?administration dbo:office ?office .

  ?alvaroQuirós a dbo:Person .
  ?alvaroQuirós dbp:residenceCountry ?country .
  FILTER(?country = <http://dbpedia.org/resource/Country_of_Alvaro_Quirós>)

  OPTIONAL { ?administration dbo:relatedTo ?person }
  FILTER (?person = dbr:Álvaro_Quirós)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
384,1,train,Give me the party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  dbr:Bruno_Retailleau a dbo:Politician .
  OPTIONAL { dbr:Bruno_Retailleau dbo:politicalParty ?party . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
246,2,train,"Give me the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  dbr:Princess_Aisha_bint_Faisal a dbo:Person .
  OPTIONAL { 
    ?parent dbo:child dbr:Princess_Aisha_bint_Faisal . 
    ?parent dbo:spouse ?spouse .
    ?parent a dbo:Monarch .
    ?parent foaf:name ?parentName .
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
295,4,train,Who is the producer of Storm in a Teacup (film)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Storm_in_a_Teacup dbo:producer ?producer .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
159,48,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderInWar WHERE {
  # Find a television show and societal event related to Jean Baptist, Comte d'Arco
  ?tvShow dbo:subject dbr:Jean_Baptiste,_Comte_d%27Arco .
  ?societalEvent dbo:subject dbr:Jean_Baptiste,_Comte_d%27Arco .

  # Find a military conflict and political office related to Michał Kazimierz Pac
  ?militaryConflict dbo:commander ?pac .
  ?officeHolder dbo:positionHeld ?politicalOffice .
  
  # Link the commander in war who succeeded Michał Kazimierz Pac
  ?succeededBy dbo:succeeds ?pac .

  # Ensure the commander is related to both contexts
  ?commanderInWar dbo:subject ?tvShow ;
                  dbo:subject ?societalEvent ;
                  dbo:commander ?militaryConflict ;
                  dbo:succeeds ?officeHolder .
}
LIMIT 10
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
80,49,train,Give me the actor of the movie with  and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> """"@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?series dbo:title ""The Golden Master""@en .
  ?character dbo:partOfSeries ?series ;
             dbo:alterEgo ?alterEgo .
  ?professional dbo:profession ?profession .
  ?professional foaf:name ?alterEgo .
  ?actor dbo:role ?character .
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
756,40,train,"Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Manager of SBV Vitesse in 2020-21 season
  ?vitesseTeam a dbo:SoccerClub ;
               dbo:season ?vitesseSeason .
  ?vitesseSeason dbo:startDate ?startVitesseDate ;
                 dbo:endDate ?endVitesseDate .
  FILTER (YEAR(?startVitesseDate) = 2020 && YEAR(?endVitesseDate) = 2021)
  
  ?manager dbp:managedTeam ?vitesseTeam .

  # Manager's birthplace is West Germany
  ?manager dbo:nationality dbr:Germany ;
           dbo:birthPlace dbr:West_Germany .

  # Successor season of VfL Bochum 2006-07
  ?bochumTeam a dbo:SoccerClub ;
              dbo:season ?bochumSeason .
  ?bochumSeason dbo:startDate ?startBochumDate ;
                dbo:endDate ?endBochumDate .
  FILTER (YEAR(?startBochumDate) = 2006 && YEAR(?endBochumDate) = 2007)

  # Determine the successor season
  ?successorSeason dbo:follows ?bochumSeason .

  # Manager managed a player in the successor season
  ?player dbp:team ?successorTeam .
  ?successorTeam dbo:season ?successorSeason .
  
  ?manager dbp:managedPlayer ?player .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
943,19,train,"Give me the reference to  and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?child WHERE {
  # Find Yeshaq I
  ?yeshaqI a dbo:Person ;
           foaf:name ""Yeshaq I""@en ;
           dbo:spouse ?spouse .

  # Identify the parent of Yeshaq I who is royalty
  ?parent dbo:child ?yeshaqI .
  ?parent a dbo:Monarch .

  # Find children of this royal parent
  ?parent dbo:child ?child .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
668,35,train,Give me the person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Find the person with birth name Joseph Agyepong (Joey B)
  ?joeyB dbo:birthName ""Joseph Agyepong"" .
  
  # Find the person with birth name Elorm Kabu Amenyah (Stonebwoy)
  ?stonebwoy dbo:birthName ""Elorm Kabu Amenyah"" .

  # Find a musical artist associated with Joey B
  ?joeyB dbp:associatedMusicalArtist ?artist .
  
  # Ensure the same artist is associated with Stonebwoy
  ?stonebwoy dbp:associatedMusicalArtist ?artist .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
361,10,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  dbr:The_Shadow dbo:creator ?person .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbp:profession ?professionalName . }
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
103,36,train,"Give me the actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?role dbo:characterName ?character .
  ?role dbo:actor ?actor .
  
  ?game dbo:title ""The Shadow (video game)""@en .
  ?comicsCharacter dbo:alterEgo dbr:Lamont_Cranston .
  ?comicsCharacter dbo:relatedGame ?game .

  FILTER(?actor = ?actorInShadow)
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,5,train,"Give me the reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?place a dbo:Place .
  ?place foaf:name ""Mitaka, Tokyo"" .
  ?place dbp:wikiPageWikiLink ?reference .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
295,14,train,Give me the native of the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native WHERE {
  # Find producers of the film ""Storm in a Teacup""
  ?film dbo:producer ?producer .
  ?film rdfs:label ""Storm in a Teacup""@en .

  # Get birthplace of each producer
  ?producer dbo:birthPlace ?birthPlace .

  # Find natives from that birthplace
  ?native dbo:birthPlace ?birthPlace .
  ?native foaf:name ?name .
  
  FILTER(LANG(?filmLabel) = 'en')
}
ORDER BY ?name
LIMIT 10
```",3,3,4,3,1,3,2,20,0,0,4250,0,0.0,0
398,9,train,"Give me the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?clubNickName WHERE {
  ?person a dbo:SoccerPlayer .
  ?person foaf:name ""Denis Kolodin"" .
  ?person dbo:playsFor ?club .
  ?club dbp:nickname ?clubNickName .
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
89,56,train,"Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Saw Shwe Khet's spouse
  ?sawShweKhet a dbo:Person ;
               dbp:spouse ?spouse .

  # Find Min Hla Htut of Pyakaung's parent
  ?minHlaHtut a dbo:Person ;
              dbp:parent ?parent .

  # Find Saw Min Phyu's spouse who is royalty and their child
  ?sawMinPhyu a dbo:Person ;
             dbp:spouse ?royaltySpouse .
  FILTER EXISTS { ?royaltySpouse a dbo:Royalty }
  ?royaltyChild dbp:parent ?royaltySpouse .

  # Find the predecessor of this child
  ?predecessor dbp:successor ?royaltyChild .

  # Linking all together
  ?spouse = ?parent .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,9,train,Give me the native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:West_Germany .
  ?person dbo:managerOfTeam dbr:VfL_Bochum .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
293,26,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Find films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Find actors in those films
  ?film dbo:starring ?actor .

  # Get the spouse of each actor
  OPTIONAL { 
    ?actor dbp:spouse ?spouse .
  }
}
ORDER BY ?spouse
LIMIT 10
```",3,4,4,3,1,3,3,71,7,2,55,0.7777777777777778,0.11290322580645161,0.19718309859154928
89,50,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Step 2: Find the child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch .

  # Step 3: Determine the predecessor (parent) of this child
  ?predecessor dbo:child ?child .

  # Step 4: Identify the father of this predecessor and find his spouse
  ?father dbo:spouse ?spouse .
  ?father dbo:child ?predecessor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,4,train,Give me the party of Guillaume Peltier and party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party WHERE {
  VALUES ?person { 
    dbr:Guillaume_Peltier 
    dbr:Bruno_Retailleau
  }
  
  ?person dbo:memberOfParty ?party .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
39,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:aliasName ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
513,3,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  dbr:George_H._Cameron dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,2,0,3,1.0,0.4,0.5714285714285715
39,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,14,39640,0.0,0.0,0
419,8,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship and entity in Andhra Pradesh.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?scientist a dbo:Scientist .
  ?scientist dbo:nationality dbr:Australia .
  ?scientist dbo:honoraryTitle dbr:Australian_Laureate_Fellowship .
  ?scientist dbo:almaMater ?almaMater .

  # Association with Andhra Pradesh
  OPTIONAL {
    ?association dbo:location dbr:Andhra_Pradesh .
    ?association dbo:person ?scientist .
  }
}",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
203,46,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  # Find William Bayne and his associated military conflict
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne"" ;
         dbo:militaryConflict ?conflict1 .
  
  # Find the military force involved in that conflict
  ?conflict1 dbo:participatingMilitaryForce ?militaryForce .

  # Find The Triple X's and their associated military conflict
  ?tripleX a dbo:MilitaryPerson ;
           foaf:name ""The Triple X's"" ;
           dbo:militaryConflict ?conflict2 .
  
  # Ensure the same military force is involved in both conflicts
  ?conflict2 dbo:participatingMilitaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
158,16,train,"Give me the person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  
  # Decedent in Switzerland
  ?person dbo:deathPlace dbr:Switzerland .

  # Native of a country within the Russian Empire's administration
  ?person dbo:nationality ?nationality .
  FILTER (
    ?nationality IN (dbr:Russia, dbr:Poland, dbr:Lithuania, dbr:Ukraine, dbr:Belarus, dbr:Estonia, dbr:Latvia, dbr:Finland)
  )

  # Get the name of the person
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",3,4,4,2,2,2,3,28,1,3,35,0.25,0.027777777777777776,0.049999999999999996
943,21,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?yeshaqI a dbo:Monarch ;
           dbo:spouse ?spouse ;
           dbo:child ?child .
  
  ?baedaMaryamI a dbo:Monarch ;
                dbo:parent ?child .

  FILTER(?yeshaqI = dbr:Yeshaq_I)
  FILTER(?baedaMaryamI = dbr:Baeda_Maryam_I)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
943,22,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child1, ?child2 .

  FILTER(?child1 = dbr:Dawit_I_of_Ethiopia && ?child2 = dbr:Zara_Yaqob)

  ?zaraYaqob a dbo:Person ;
             dbp:fatherOf ?lebnaDengel .

  ?lebnaDengel dbo:parent ?na'od .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
159,36,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?person dbo:succeededBy ?successor .
  FILTER(?person = dbr:John_III_Sobieski) .

  OPTIONAL { 
    ?warEvent dbo:commander ?commander .
    FILTER(?warEvent = dbr:Battle_of_Vienna_(1683)) .
    FILTER(?commander = ?person)
  }

  OPTIONAL {
    ?tvShow dbo:subject ?successor .
    FILTER(STRSTARTS(LCASE(?tvShow), ""king john iii sobieski""))
  }
  
  OPTIONAL {
    ?event dbo:subject ?successor .
    FILTER(STRSTARTS(LCASE(?event), ""battle of vienna""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
531,45,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy and tenant of Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?office WHERE {
  # Find the political party associated with Miguel Maura and Mariano Rajoy
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Miguel_Maura ;
         dbo:member dbr:Mariano_Rajoy .

  # Identify politicians from this party
  ?politician a dbo:Politician ;
              dbo:affiliation ?party ;
              dbo:office ?office .

  # Ensure the office is located in Madrid
  ?office dbo:location dbr:Madrid .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
119,16,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of the commander in French Revolutionary Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residenceCountry ?war WHERE {
  # Find Dawid Olejniczak's residence country
  ?person a dbo:Person ;
          foaf:name ""Dawid Olejniczak"" ;
          dbp:residencePlace ?residence .
  
  ?residence dbo:country ?residenceCountry .

  # Find wars in which he was a commander during the French Revolutionary Wars
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryPersonal ?person ;
      dbo:dateStart ?startDate ;
      dbo:dateEnd ?endDate .

  FILTER (?startDate >= ""1792-01-01""^^xsd:date && ?endDate <= ""1802-12-31""^^xsd:date)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
89,12,train,Give me the spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  # Find Myat Hpone Pyo
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .

  # Identify the spouse of Saw Shwe Khet who is also the predecessor of Myat Hpone Pyo
  ?sawShweKhet dbo:spouse ?spouse .
  ?myatHponePyo dbo:predecessor ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,16,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .

  # Step 2: Find his children
  ?child a dbo:Person .
  
  # Step 3: Determine which child is native of Middlesex
  OPTIONAL { ?child dbo:nationality dbr:United_Kingdom . }
  ?child dbo:birthPlace dbr:Middlesex .

  # Step 4: Retrieve the parent(s) of that specific child
  ?parent dbo:child ?child .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,4,train,"Who is the parent, that is a royalty, of Yeshaq I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # Identify Yeshaq I's resource in DBpedia
  dbr:Yeshaq_I a dbo:Person ;
               dbo:spouse ?spouse .
  
  # Find the parent who is royalty
  OPTIONAL { ?spouse dbo:child dbr:Yeshaq_I . }
  OPTIONAL { ?parent dbo:child dbr:Yeshaq_I . }
  FILTER EXISTS { ?parent a dbo:Monarch } .

  # Get the name of the parent
  ?parent foaf:name ?parentName .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,54,train,"Give me the person born as Harriette Arlene Lake and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Harriette Arlene Lake
  ?harriette a dbo:Person ;
             foaf:name ""Harriette Arlene Lake"" ;
             dbo:spouse ?spouse .

  # Ensure the spouse is an actor
  ?spouse a dbo:Actor .

  # Find films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Ensure the spouse acted in these films
  ?film dbo:starring ?spouse .

  # Check if the spouse is a party member of the ruling party in Central, Louisiana
  ?spouse dbo:memberOf ?party ;
          dbp:residence dbr:Central,_Louisiana .
  
  ?party dbo:isRulingPartyIn dbr:Central,_Louisiana .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,7,train,"Give me the region of Japan Standard Time and reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?mitakaName WHERE {
  # Find the region associated with Japan Standard Time
  ?timeZone a dbo:TimeZone ;
            dbo:country dbr:Japan ;
            rdfs:label ""Japan Standard Time""@en .
  
  OPTIONAL { 
    ?timeZone dbo:region ?region .
  }
  
  # Reference Mitaka in Tokyo
  ?mitaka a dbo:PopulatedPlace ;
          dbo:partOf dbr:Tokyo ;
          rdfs:label ?mitakaName .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
414,15,train,"Give me the award of Max Born and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?maxBornAward ?maxBornHost ?rainerWeissAward ?rainerWeissHost WHERE {
  # Max Born's award
  ?maxBornAward a dbo:Award .
  ?maxBornAward dbo:recipient dbr:Max_Born .
  ?maxBornAward dbo:year ""1954""^^xsd:gYear .

  # Host institution for Max Born's award
  ?maxBornAward dbo:awardingBody ?maxBornHost .

  # Rainer Weiss's award
  ?rainerWeissAward a dbo:Award .
  ?rainerWeissAward dbo:recipient dbr:Rainer_Weiss .
  ?rainerWeissAward dbo:year ""2017""^^xsd:gYear .

  # Host institution for Rainer Weiss's award
  ?rainerWeissAward dbo:awardingBody ?rainerWeissHost .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
756,44,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Thomas Letsch as manager of VfL Bochum
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch"" ;
          dbo:position dbr:Soccer_manager ;
          dbo:worksFor dbr:VfL_Bochum .

  # Manager of VfL Bochum
  ?manager a dbo:Person ;
           dbo:position dbr:Soccer_manager ;
           dbo:worksFor dbr:VfL_Bochum .

  # Theodor Heuss's native country is Germany
  ?heuss a dbo:Person ;
         foaf:name ""Theodor Heuss"" ;
         dbo:nationality dbr:Germany .

  # Connect manager to Thomas Letsch and Germany through Theodor Heuss
  OPTIONAL { ?manager dbo:worksFor ?letsch }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
361,5,train,"Give me the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?album WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist foaf:name ""Lasso the Moon"" .
  
  ?album dbo:workExample ?artist ;
         a dbo:Album ;
         dbo:isFilm ?film .

  ?film a dbo:Film .
}
ORDER BY ?album
LIMIT 10
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
198,55,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?gillmoreAwardee ?medalOfHonorAwardee ?war WHERE {
  # Henry Clay Lewis's birthplace
  ?henryClayLewis a dbo:Person ;
                  foaf:name ""Henry Clay Lewis"" ;
                  dbp:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Gillmore Medal Awardee
  ?gillmoreAwardee dbp:award ""Gillmore Medal"" .

  # Medal of Honor Awardee and associated war
  ?medalOfHonorAwardee dbp:award ""Medal of Honor"" ;
                      dbo:associatedWithWar ?war .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,23,train,Give me the associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person foaf:name ""Pacely"" .
  ?person dbp:birthName ?birthName .
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
119,26,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?person dbo:nationality dbr:Spanish .
  ?person dbo:country dbr:Spain .
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
  ?residence dbo:resident ?tenant .
}
```",3,5,4,3,1,3,3,71,0,0,1184,0,0.0,0
87,19,train,"Give me the spouse of Janusz Kamiński and actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Janusz Kamiński's spouse
  ?kaminski a dbo:Person ;
            foaf:name ""Janusz Kamiński"" ;
            dbp:spouse ?spouse .

  # Spouse acted in Always (1989 film)
  ?alwaysFilm a dbo:Film ;
              dbo:title ""Always"" ;
              dbo:actor ?spouse .
  
  # Spouse acted in a movie with Iliza Shlesinger
  ?ilizaFilm a dbo:Film ;
             dbo:actor ?spouse, dbr:Iliza_Shlesinger .

}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
80,26,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?album ?actor WHERE {
  # Find albums by T.I.
  ?album a dbo:Album ;
         dbo:artist dbr:T.I. .

  # Ensure the album contains songs that are also musical works
  ?song dbo:partOfAlbum ?album ;
        a dbo:Songs ;
        dbo:musicalWork ?musicalWork .
  
  # Find performers or artists associated with these albums
  ?album dbo:performer ?actor .
}
ORDER BY ?album
LIMIT 10
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
375,12,train,Give me the entity in Japan and war of Hashiba Hidekatsu and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?person { 
    dbr:Hashiba_Hidekatsu 
    dbr:Toyotomi_Hidenaga 
  }
  
  ?person dbo:spouseOrPartner ?relatedPerson .
  OPTIONAL { ?relatedPerson rdfs:label ""Hideyoshi"" . FILTER (lang(?relatedPerson) = 'en') }

  ?war dbo:participatedIn ?participant .
  ?participant dbo:birthPlace dbr:Japan .

  VALUES ?personName {
    ""Hashiba Hidekatsu""
    ""Toyotomi Hidenaga""
  }
  
  OPTIONAL { 
    ?participant rdfs:label ?personName . FILTER (lang(?personName) = 'en') 
  }

}
ORDER BY ?war
LIMIT 10
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
628,39,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Ackquille Jean Pollard"" .
  
  ?award dbo:recipient ?band .
  ?band dbo:location dbr:New_York_(state) .
  ?band a dbo:Band .

  ?person dbo:musicGroup ?band .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,50,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .

  # Link to an award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:region dbr:Puerto_Rico ; 
         dbo:recipient ?person .

  OPTIONAL { ?person dbp:birthName ?birthName . }
}
ORDER BY ?person
LIMIT 10
```",5,10,6,3,2,3,3,71,0,0,59,0,0.0,0
311,9,train,"Who is the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song)?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Identify the producer of ""Lotus"" by R.E.M.
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .
  
  # Ensure the producer is an organization and also a band or group
  ?producer a dbo:Organization ;
            (dbo:bandMember|dbo:musicGroupMember) ?member .

  # Find associated musical artists with this producer
  ?associatedArtist dbo:recordedWith ?producer ;
                   a dbo:MusicalArtist .
}
```",2,6,3,2,1,3,2,20,0,0,2,0,0.0,0
595,23,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Hillary Clinton as an author of a book
  dbr:Hillary_Clinton dbo:authorOf ?work .
  
  # Ensure the work is classified as a book or written work
  ?work a dbo:Book .

  # Check if Hillary Clinton is also a politician and office holder
  dbr:Hillary_Clinton a dbo:Politician ;
                     dbo:officeHolder ?office .

  # Find her spouse
  OPTIONAL { dbr:Hillary_Clinton dbp:spouse ?spouse . }
}
```",3,7,4,3,1,3,3,71,0,0,1,0,0.0,0
943,56,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I
  ?baedaMaryamI a dbo:Monarch ;
                dbp:spouse ?motherOfChild .

  # Child of Baeda Maryam I and Yeshaq I's child
  ?child dbp:parent ?baedaMaryamI ;
         dbp:parent ?yeshaqI .

  # Yeshaq I
  ?yeshaqI a dbo:Monarch ;
           dbp:spouse ?motherOfChild .

  # Father of the child (Baeda Maryam I)
  ?father a dbo:Monarch, dbo:OfficeHolder ;
          dbp:child ?baedaMaryamI .

  # Grandfather on paternal side
  ?grandfather a dbo:Monarch, dbo:OfficeHolder ;
               dbp:child ?father .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
78,5,train,Give me the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person foaf:name ""David Paton""@en .
  ?person dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:MusicalArtist .
}
```",1,1,2,1,1,2,3,28,2,0,3,1.0,0.4,0.5714285714285715
143,15,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro and associated musical artist of Cynthia Morgan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie ?actor ?musician WHERE {
  ?movie a dbo:Film .
  
  # Find the actor associated with Afeez Oyetoro
  ?actor a dbo:Actor ;
         foaf:name ""Afeez Oyetoro""@en ;
         dbo:actedIn ?movie .

  # Find the musical artist associated with Cynthia Morgan
  ?musician a dbo:MusicalArtist ;
            foaf:name ""Cynthia Morgan""@en .
  
  OPTIONAL {
    ?movie dbp:musicBy ?musician .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
263,12,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?maryElphinstone a dbo:Person ;
                   foaf:name ""Mary Elphinstone, Lady Elphinstone""@en ;
                   dbo:birthPlace dbr:Middlesex ;
                   dbo:child ?patrickBowesLyon .

  ?patrickBowesLyon a dbo:Person ;
                    foaf:name ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en ;
                    dbo:parent ?parent .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
293,53,train,Give me the person born as the birth name of Ann Sothern and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  VALUES (?annSothern) { dbr:Ann_Sothern }
  ?annSothern dbo:birthName ?birthName .

  # Landmark with specific elevation and ruling party member
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation = 20.1168)
  ?partyMember dbo:memberOf ?rulingParty ;
               dbo:location ?landmark .

  # Roger Pryor's spouse
  VALUES (?rogerPryor) { dbr:Roger_Pryor_(actor) }
  ?rogerPryor dbp:spouse ?spouse .
  
  # Find the person who matches all criteria
  FILTER(?birthName = ""Anne Sothern""^^xsd:string)
  ?person dbp:spouse ?rogerPryor ;
          dbo:memberOf ?rulingParty .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
198,27,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity WHERE {
  ?person a dbo:Person .
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  OPTIONAL { ?birthPlace dbp:wikiPageRedirects ?birthPlaceEntity . }
}
```",3,5,4,3,1,3,3,71,0,0,12,0,0.0,0
270,7,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at Melbourne.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?person a dbo:Politician .
  ?person dbp:birthName ""Ada Jane Wilson"" .
  ?person dbo:deathPlace dbr:Melbourne .

  OPTIONAL { 
    ?person dbo:predecessor ?predecessor .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
737,44,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the child of Archduke Charles Louis of Austria
  ?child dbo:parent dbr:Archduke_Charles_Louis_of_Austria .
  
  # Ensure this person is a royalty
  ?child a dbo:Royalty .

  # This person should be a predecessor of Carl, Duke of Württemberg
  ?predecessor dbp:successor dbr:C._Duke_of_Württemberg .
  FILTER (?child = ?predecessor)

  # Find the child of the child of Duke Philipp of Württemberg
  ?grandchild dbo:parent ?childOfPhilipp .
  ?childOfPhilipp dbo:parent dbr:Duke_Philipp_of_Württemberg .

  # Ensure all these conditions are met by a single person
  FILTER (?child = ?predecessor && ?child = ?grandchild)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
595,29,train,"Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?roleInCrisis ?authoredWork WHERE {
  # Find Hillary Clinton's spouse, who is Bill Clinton
  ?hillary dbo:spouse ?bill .
  ?bill foaf:name ""Bill Clinton"" .

  # Find Bill Clinton's role in the Third Taiwan Strait Crisis
  OPTIONAL { 
    ?bill dbo:roleInEvent dbr:Third_Taiwan_Strait_Crisis .
    ?event dbo:agent ?bill ;
           dbp:name ""Third Taiwan Strait Crisis"" .
    ?event dbo:role ?roleInCrisis .
  }

  # Find an authored work by Bill Clinton
  OPTIONAL {
    ?bill dbo:author dbr:Work_by_Bill_Clinton .
    ?work dbo:wikiPageRedirects ?authoredWork ;
          a dbo:Book .
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
557,60,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find the actor of High Society Blues
  ?actor dbo:film dbr:High_Society_Blues .
  
  # Find works (movies) associated with this actor
  ?work dbo:starring ?actor .
  
  # Identify fictional characters in these works
  ?character dbo:appearanceIn ?work ;
             dbo:creator dbr:Kent_Allard .

  # Get the professional alias of the character
  OPTIONAL { ?character dbp:alias ?professional . }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
905,15,train,"Give me the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania"" ;
          dbo:parent ?parent .

  # Ensure the parent is royalty
  ?parent a dbo:Royalty .

  # Find the father of the parent (grandfather)
  ?parent dbo:parent ?grandfather .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
782,28,train,Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?realName WHERE {
  VALUES ?entity { 
    dbr:The_Fabulous_Thunderbirds 
    dbr:Nick_Curran_(musician) 
    dbr:Kim_Wilson
  }
  
  OPTIONAL { ?entity dbp:birthName ?realName . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
871,45,train,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley (Royal Navy officer)""@en .
  ?politician a dbo:Politician ;
              foaf:name ?name ;
              dbo:childOf ?parent .
  ?alumnus a dbo:Alumnus ;
           dbp:school dbr:Eton_College ;
           dbo:childOf ?parent .
  ?edward17th a dbo:Person ;
              foaf:name ""Edward Stanley, 17th Earl of Derby""@en ;
              dbo:parent ?parent .
  FILTER(?victor != ?politician)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,31,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?child WHERE {
  ?commander a dbo:Royal .
  ?commander dbo:memberOf ?royalty .
  ?commander dbo:occupation ""Commander"" .
  ?event dbo:title ""Siege of Mukha"" .
  ?commander dbo:event ?event .

  OPTIONAL { 
    ?parent dbo:child ?commander .
    ?parent a dbo:Royal .
  }
  
  OPTIONAL {
    ?commander dbo:child ?child .
    ?child a dbo:Royal .
  }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
419,5,train,Give me the entity in the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,3,166,0.0,0.0,0
103,23,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Identify John Cleese by his birth name
  ?cleese a dbo:Actor ;
          dbp:birthName ""Richard Grant Esterhuysen"" .

  # Find works (movies or TV shows) he has acted in
  ?work dbo:starring ?cleese ;
        a ?type .

  # Ensure the work is both a movie and a television show
  FILTER (?type = dbo:Film || ?type = dbo:TelevisionShow)

  # Retrieve actors of these works, excluding John Cleese himself
  ?work dbo:starring ?actor .
  FILTER(?actor != ?cleese)
}
```",3,4,4,3,1,3,3,71,0,0,53,0,0.0,0
816,41,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Doon Arbus and her parent
  dbr:Doon_Arbus dbo:parent ?parent .
  
  # The parent is an actor in a movie with Herschel Bernardi
  ?movie dbo:starring ?parent ;
         dbo:starring dbr:Herschel_Bernardi .

  # The parent has a child who is a Photographer
  ?parent dbo:child ?photographerChild .
  ?photographerChild dbp:occupation ""Photographer"" .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,0,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:party dbr:Republican_Party_(United_States) .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,21486,0,0.0,0
198,19,train,Give me the war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  # Find Quincy Adams Gillmore and his forces
  ?gillmore a dbo:MilitaryPerson ;
           foaf:name ""Quincy Adams Gillmore"" .
  
  # Identify Medal of Honor awardees in his force
  ?awardee dbo:awardReceived dbr:Medal_of_Honor ;
          dbo:militaryUnit ?unit .

  # Link the unit to Gillmore's command
  ?unit dbo:commander ?gillmore .

  # Find wars associated with these awardees
  ?awardee dbo:participatedInWar ?war .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
585,14,train,Give me the child of the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Shirley_Stoler a dbo:Person .
  OPTIONAL { 
    dbr:Shirley_Stoler dbo:spouse ?spouse . 
    ?spouse dbo:children ?child .
  }
  UNION
  OPTIONAL { 
    dbr:Shirley_Stoler dbo:children ?child .
  }
}
```",3,3,4,3,1,3,2,20,0,0,935,0,0.0,0
353,54,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of the parent of Roger III, Duke of Apulia and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile"" .
  
  ?rogerIV a dbo:Person ;
           foaf:name ""Roger IV"" ;
           foaf:name ""William II"" ;
           dbp:parent ?elvira ;
           dbp:child ?rogerIII .

  ?rogerIII a dbo:Person ;
            foaf:name ""Roger III, Duke of Apulia"" .
  
  OPTIONAL { ?rogerIV dbo:officeHolder ?office . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,22,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?hansenDeathAdmin ?princeBirthAdmin WHERE {
  # Information about Christian Ditlev Ammentorp Hansen
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen"" ;
          dbo:deathPlace ?deathPlace .
  
  ?deathPlace a dbo:Settlement ;
              dbo:administrativeTerritory ?hansenDeathAdmin .

  # Information about Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?prince a dbo:Person ;
          foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" ;
          dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement ;
              dbo:administrativeTerritory ?princeBirthAdmin .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
472,4,train,"Who is the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Monarch .
  ?person foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
  OPTIONAL { ?person dbp:birthday ?birthDate . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
119,61,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:headOfGovernment ?tenant ;
                  dbo:politicalParty ?party .

  ?tenant dbo:nationality dbr:Spain ;
          dbo:residenceCountry dbr:Spain .
}
```",6,9,7,3,2,3,3,71,0,0,23,0,0.0,0
941,5,train,Who is the spouse of Duchess Luise of Brunswick-Wolfenbüttel?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
492,18,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for Carolyn Jones' death place
SELECT ?deathPlace WHERE {
  dbr:Caryn_Jones dbo:deathPlace ?deathPlace .
}

UNION

# Query for the actor of Aladdin (1958 film) and their death place
{
  SELECT ?actorDeathPlace WHERE {
    dbr:Aladdin_(film)_1958 dbo:starring ?actor .
    ?actor a dbo:Actor ;
           dbo:deathPlace ?actorDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
297,8,train,Give me the institution in the administration of Brian Kemp and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Brian Kemp"" .
  ?person dbo:officeHolderOf ?position .
  ?position dbo:department ?institution .
  ?institution dbo:country dbr:United_States .
}
```",3,3,4,2,2,2,2,9,0,0,346,0,0.0,0
756,7,train,"Give me the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:SportsManager .
  ?person dbo:birthday ""1968-08-26""^^xsd:date .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,10,train,Give me the child of Saw Min Hla and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find children of Saw Min Hla
  ?sawMinHla a dbo:Person ;
             dbp:spouse ?parent2 .
  ?parent2 dbo:child ?child .

  FILTER(?sawMinHla = dbr:Saw_Min_Hla)

  # Find predecessors of Myat Hpone Pyo
  ?myatHponePyo a dbo:Person ;
                dbo:predecessor ?predecessor .
  
  FILTER(?myatHponePyo = dbr:Myat_Hpone_Pyo)
  
  # Match the child with the predecessor
  ?child = ?predecessor
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,5,train,Give me the work of Lao She.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  dbr:Lao_She dbo:literaryWork ?work .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
531,54,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?miguelOffice ?commander ?conflict ?albertoResidence WHERE {
  # Miguel Maura's office
  ?miguel a dbo:Politician ;
          dbp:office ?miguelOffice .

  # Commander in the military conflict involving Manuel Pinto da Costa
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant dbr:Manuel_Pinto_da_Costa .
  ?commander a dbo:Commander ;
             dbo:militaryConflict ?conflict .

  # Residence of Alberto Ruiz-Gallardón
  ?alberto a dbo:Politician ;
           dbp:name ""Alberto Ruiz-Gallardón""^^xsd:string ;
           dbp:residence ?albertoResidence .
  
  FILTER(?miguel = dbr:Miguel_Maura)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
943,26,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  dbr:Lamont_Cranston dbo:alias ?alterEgo .
}
```",3,3,4,3,1,3,3,71,0,0,98447,0,0.0,0
492,7,train,Give me the death place of Reed Howes and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Reed_Howes 
    dbr:Sal_Mineo 
  }
  
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
119,42,train,"Give me the tenant of Spain and office of the leader of 2009 Galician regional election and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  # Leader of Spain in 2009
  ?person dbo:position dbr:Prime_Minister_of_Spain .
  ?person dbo:termStart ?start .
  FILTER (?start <= ""2009-12-31""^^xsd:date && (?end >= ""2009-01-01""^^xsd:date || NOT EXISTS { ?person dbo:termEnd ?end }))

  # Leader of the Galician regional election in 2009
  ?galiciaElection dbo:electionDate ?electionDate .
  FILTER (?electionDate <= ""2009-12-31""^^xsd:date && ?electionDate >= ""2009-01-01""^^xsd:date)
  ?partyLeader dbo:position dbr:President_of_the_Galician_Parliament .
  ?partyLeader dbo:electedDuring ?galiciaElection .

  # Association with the Spanish Socialist Workers' Party
  ?person dbo:memberOfParty dbr:Spanish_Socialist_Workers'_Party .

  # Ensure it's the same person
  FILTER (?person = ?partyLeader)

  # Get the name of the person
  ?person foaf:name ?name .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
609,17,train,"Who is the author of the reference, that is American, to El Deafo?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book dbo:wikiPageRedirects dbr:El_Deafo .
  ?book dbo:author ?author .
  ?author dbo:nationality dbr:United_States .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
347,17,train,"Give me the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  dbr:Maria_Anna_of_Bavary (dbo:birthYear ""1574""^^xsd:gYear) .
  OPTIONAL { dbr:Maria_Anna_of_Bavary dbo:parent ?father . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
585,12,train,Give me the child of the professional in Actress and native of New York (state).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Actress .
  ?person dbo:birthPlace dbr:New_York_(state) .
  ?parentChildRelation dbo:child ?child .
  ?parentChildRelation dbo:parent ?person .
}",3,3,4,2,2,3,2,20,0,0,9,0,0.0,0
414,0,train,Give me the show of Royal Swedish Academy of Sciences.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show WHERE {
  dbr:Royal_Swedish_Academy_of_Sciences dbo:award ?nobelPrize .
  ?nobelPrize dbo:event ?show .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
398,17,train,Give me the player in the writer of the work of Aleksandr Filimonov and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . ?v0 <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find the work by Aleksandr Filimonov
  ?work dbo:author dbr:Aleksandr_Filimonov .
  
  # Identify the figure known as ""Наши парни"" or ""Nashi parni""
  ?figure foaf:name ""Наши парни""@ru ;
          foaf:name ""Nashi parni""@en .

  # Find the player associated with this work and figure
  ?work dbo:character ?player .
  ?player dbo:associatedWith ?figure .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
39,19,train,Give me the professional in the profession of Sam Concepcion and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion a dbo:MusicalArtist .
  
  # Find other professionals in the same profession
  ?person a dbo:MusicalArtist .
  FILTER(?person != dbr:Sam_Concepcion)
}
ORDER BY ?professional
LIMIT 10
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
347,21,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?event ?tvShow WHERE {
  # Ferdinand II and his children
  ?ferdinand a dbo:Person ;
             foaf:name ""Ferdinand II, Holy Roman Emperor"" ;
             dbo:spouse ?spouse .
  
  ?spouse dbo:child ?child .

  # Child who was a commander in war
  ?child dbo:occupation dbr:Military_commander .

  # Societal event and television show related to the 2nd Dragoon Regiment (France)
  ?event dbo:relatedEvent ?tvShow ;
         dbo:subject ?child .
  
  ?tvShow dbo:genre dbr:Television_show ;
          dbo:topic dbr:2nd_Dragoon_Regiment_(France) .

}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
628,60,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # GS9 member who is an artist and a musical artist
  ?gs9Member a dbo:MusicalArtist ;
             dbo:memberOf dbr:GS9 .

  # Award region that is New York (state)
  ?awardRegion a dbo:State , dbo:Settlement ;
               dbp:name ""New York"" ;
               dbo:country dbr:United_States_of_America .

  # GS9 member's native place
  ?gs9Member dbo:nativePlace ?awardRegion .

  # Associated musical artist of the GS9 member
  ?associatedArtist dbo:member ?gs9Member ;
                   a dbo:MusicalBand .

  # Band member of the associated musical artist
  ?bandMember dbo:memberOf ?associatedArtist ;
              a dbo:MusicalArtist .
}
```",6,14,7,3,2,3,3,71,0,0,1,0,0.0,0
557,26,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Find Johnny Doughboy
  ?actor a dbo:Actor ;
         foaf:name ""Johnny Doughboy""@en .
  
  # Identify his notable work (claim to fame)
  ?work dbo:starring ?actor ;
        a dbo:Film ;  # Assuming the claim to fame is a film; adjust if it's another type of work
        dbp:title ?title .

  # Find the producer(s) of that work
  ?work dbo:producer ?producer .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
58,10,train,Give me the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?award a dbo:Award .
  ?award dbo:recipient dbr:Ian_Gregson .
  ?award dbo:relatedWork ?work .
  ?work a dbo:Film .
  BIND(?work AS ?movie)
}
```",2,2,3,2,1,3,2,20,0,0,39790,0,0.0,0
59,7,train,Give me the native of the residence of David Luckman and manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePerson WHERE {
  # Find David Luckman and his place of residence
  ?luckman a dbo:Person ;
           foaf:name ""David Luckman"" ;
           dbp:residence ?residence .

  # Find the native person of that residence who is also manager of Hartlepool United F.C.
  ?nativePerson a dbo:Person ;
                dbo:nationality ?nationality ;
                dbo:birthPlace ?residence ;
                dbo:managerOf dbr:Hartlepool_United_F.C. .

}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
38,1,train,"Give me the author of Promise Me, Dad.","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book dbo:title ""Promise Me, Dad"" .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,12,train,Give me the war of Alexander Lvovich Davydov and war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  VALUES ?person { 
    dbr:Alexander_Lvovich_Davydov 
    dbr:Karl_Gustav_von_Baggovut
  }
  
  ?person dbo:militaryConflict ?war .
  ?war dbo:country dbr:Russian_Empire .

  OPTIONAL {
    ?war dbp:name ?warName .
  }

  FILTER (LANG(?warName) = 'en')
}
ORDER BY ?warName
LIMIT 10
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
398,4,train,Give me the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/Aleksandr_Filimonov>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Aleksandr Filimonov"" .
  OPTIONAL { ?person dbr:Aleksandr_Filimonov . }
  ?person dbo:work ?work .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
198,24,train,"Give me the force of the awardee of Gillmore Medal and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?person dbo:award dbr:Gillmore_Medal .
  ?person dbo:birthPlace dbr:Charleston,_South_Carolina .
  OPTIONAL { ?person dbo:militaryService ?service . }
  ?service dbo:rank ?force .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
288,5,train,"Give me the native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Lahore .
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",2,4,3,2,1,2,2,9,10,3,871,0.7692307692307693,0.011350737797956867,0.022371364653243846
89,3,train,Give me the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Minye_Kyawswa a dbo:Person .
  ?person dbo:parent dbr:Minye_Kyawswa .
  ?person a dbo:Person .
  ?person foaf:name ?child .
}
```",1,1,2,1,1,3,3,71,0,7,3,0.0,0.0,0
871,21,train,Give me the father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Person ;
          foaf:name ""Arthur Stanley"" ;
          dbp:title ""Member of Parliament for Northamptonshire South"" .

  # Find his father
  ?arthur dbo:parent ?father .

  # Ensure the father is also a parent to someone who received the Commander of the Royal Victorian Order
  ?child a dbo:Person ;
         dbo:parent ?father .
  OPTIONAL { 
    ?child dbo:honoursReceived dbr:Commander_of_the_Royal_Victorian_Order .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,39,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Owner of USS Arcadia (ID-1605)
  ?ship dbo:owner dbr:United_States .
  ?ship rdfs:label ""USS Arcadia (ID-1610)""@en .

  # Author of ""Back to Work""
  ?book dbo:author dbr:Paul_Krugman .
  ?book rdfs:label ""Back to Work""@en .

  # Disease and Societal Event
  ?event a dbo:Disease ;
         dbo:societalEvent true ;
         rdfs:label ""Spanish Flu""@en .

  # Commander in the War (World War I)
  ?war dbo:commander ?commander .
  ?war rdfs:label ""World War I""@en .
  
  FILTER(?ship = dbr:USS_Arcadia_(ID-1610))
  FILTER(?book = dbr:Back_to_Work_(Krugman_book))
  FILTER(?event = dbr:Spanish_Flu)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,Give me the war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?war WHERE {
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
  ?child dbo:spouse ?spouse .
  OPTIONAL { ?child dbo:deathDate ?deathDate . }
  ?war dbo:participant ?person .
  FILTER (?person = ?child || ?person = ?spouse)
}
ORDER BY ?child
LIMIT 10
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
198,16,train,Give me the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
295,15,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur and native of Birmingham.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v1 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""The True Self"" ;
          dbo:member Steven Kapur ;
          dbo:birthPlace dbr:Birmingham .
  
  ?work dbo:performer ?artist ;
        a dbo:MusicalWork .

  OPTIONAL { ?work dbo:writer ?writer . }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
399,6,train,Give me the professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  dbr:Jamie_T a dbo:MusicalArtist .
  OPTIONAL { dbr:Jamie_T foaf:name ?professionalName . }
}
```",2,2,3,2,1,2,2,9,0,1,44694,0.0,0.0,0
782,33,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .

  # Find reference to The Fabulous Thunderbirds
  ?reference dbo:subject ?person ;
             dbo:object dbr:The_Fabulous_Thunderbirds .

  # Get the band of which this person is a member
  ?bandMemberRelation dbo:member ?person .
  ?bandMemberRelation dbo:band ?band .
  
  ?band foaf:name ?bandName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
68,3,train,"Who is the parent of Dorothea of Denmark, Electress Palatine?","SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:childOf ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
531,15,train,"Give me the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:OfficeHolder .
  ?person dbo:electedDuring dbr:2003_Madrid_City_Council_election .
  ?person dbo:leaderOf ?organization .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
353,59,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Roger II of Sicily and his children
  dbr:Roger_II_of_Sicily a dbo:Monarch ;
    dbo:spouse ?spouse ;
    dbo:child ?child .

  # Children of Roger II who are royalty
  ?child a dbo:Monarch .

  # Grandchildren of Roger II (children of his children)
  ?child dbo:child ?grandchild .
  
  # Reference to Henry II and his father
  dbr:Henry_II_of_England a dbo:Monarch ;
    dbo:father dbr:Geoffrey_Plantagenet .

  # Find the grandchild whose parent is also Geoffrey Plantagenet
  ?grandchild dbo:parent dbr:Geoffrey_Plantagenet .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,49,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Step 1: Identify Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .

  # Step 2: Find band members of that musical artist who are also musical artists
  ?member dbo:memberOf ?artist .
  ?member a dbo:MusicalArtist .

  # Step 3: Determine the native region (state) of an awardee from New York State
  ?awardee dbo:award dbr:New_York_(state) .
  ?awardee dbo:nativePlace ?nativePlace .
  
  # Ensure the band member is a native of the same state as the awardee
  ?member dbo:nativePlace ?nativePlace .

}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
159,30,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to George Ducas.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?tvShow a dbo:TelevisionSeries .
  ?tvShow dbo:subject dbr:Jean_Baptiste,_Comte_d%27Arco ;
          dbo:subject dbr:Yurii_Khmelnytsky ;
          dbo:subject dbr:George_Ducas .

  OPTIONAL { ?tvShow dbp:commander ?commander . }
}
LIMIT 10
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
311,5,train,Who is the writer of No Alternative?,SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:No_Alternative dbo:producer ?person .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
297,4,train,Give me the institution in Georgia (U.S. state) and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?entity WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Georgia_(U.S._state) .
  OPTIONAL { ?institution dbo:country dbr:United_States . }
  OPTIONAL { ?institution dbp:associatedEntity ?entity . }
}
ORDER BY ?institution
LIMIT 10
```",2,2,3,1,2,2,2,9,0,0,346,0,0.0,0
80,11,train,Give me the actor of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring ?actor .
}
LIMIT 10
```",2,2,3,2,1,3,3,71,7,3,55779,0.7,0.00012547951098842004,0.0002509140440174923
531,12,train,Give me the office of Mariano Rajoy and office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  VALUES ?person { 
    dbr:Mariano_Rajoy 
    dbr:Miguel_Maura 
  }
  
  ?person dbo:positionHeld ?office .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
38,12,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bookTitle WHERE {
  # Find Joe Biden as an author
  ?person a dbo:Person ;
          foaf:name ""Joe Biden""@en .
  
  # Get books authored by Joe Biden
  ?work dbo:author ?person ;
        a dbo:Book .

  # Filter for the specific book ""Promises to Keep""
  OPTIONAL { 
    ?book dbr:Promises_to_Keep_(2021_book) .
    BIND(""Promises to Keep"" AS ?bookTitle)
  }

  # Get titles of other books authored by Joe Biden
  OPTIONAL {
    ?work rdfs:label ?bookTitle .
    FILTER(LANG(?bookTitle) = ""en"")
  }
}
ORDER BY ?bookTitle
LIMIT 10
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
203,2,train,Give me the military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Battle_of_Cape_Finisterre_1805 dbo:participatedInMilitaryForce ?force .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
80,28,train,Give me the actor of the movie with  and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .

  # Movie with ""and"" in its title
  ?movie rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), "" and ""))
  
  # Actor of ATL (film)
  VALUES ?atlMovie { dbr:ATL_(2006_film) }
  ?actor dbo:starring ?atlMovie .

}
ORDER BY ?actor
LIMIT 10
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
198,4,train,Give me the awardee of Medal of Honor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?medal a dbo:MedalOfHonor .
  ?medal dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,2190,0,0.0,0
89,59,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find Saw Shwe Khet's child who is royalty
  ?child dbo:parent dbr:Saw_Shwe_Khet ;
         a dbo:Royalty .

  # Step 2: Find Minye Kyawswa's grandchild who is royalty
  ?grandChild dbo:parent ?parentOfGrandChild ;
              a dbo:Royalty .
  ?parentOfGrandChild dbo:parent dbr:Minye_Kyawswa .

  # Step 3: Match the child from step 1 with the grandchild from step 2
  FILTER (?child = ?grandChild)

  # Step 4: Find the father of this individual
  ?father dbo:child ?child .

  # Step 5: Find the spouse of this father
  ?spouse dbo:spouse ?father .
}
```",6,8,7,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
375,8,train,"Give me the parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?parent WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:London .
  
  OPTIONAL { 
    ?person foaf:name ?name .
  }
  
  ?person dbp:parents ?parent .
}
ORDER BY ?name
LIMIT 10
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
347,1,train,"Give me the father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Eleonore_of_Austria_Queen_of_Poland dbo:parent ?person .
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  ?person dbo:spouse ?spouse .
  FILTER(?spouse = dbr:Sigismund_III_Vasa)
  ?person dbo:child dbr:Eleonore_of_Austria_Queen_of_Poland .
  ?person foaf:name ?fatherName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,9,train,Give me the native of Russian Empire and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace [
    rdf:type dbo:AdministrativeRegion ;
    dbo:country dbr:Russian_Empire ;
    dbo:country dbr:Grand_Duchy_of_Finland
  ].
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",2,2,3,1,2,2,3,28,0,0,126,0,0.0,0
80,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  dbr:The_Shadow dbo:creator ?creator .
  OPTIONAL { ?creator foaf:name ?name . }
  OPTIONAL { ?creator dbo:profession ?professionalName . }
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
140,16,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut and commander in the war, that is a societal event, of George Pickett.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the ruling political party in Westport, Connecticut
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Westport,_Connecticut .

  # Identify members of this political party
  ?member dbp:memberOf ?party ;
          foaf:name ?name .

  # Determine the war involving George Pickett as a commander
  ?war a dbo:SocietalEvent ;
       dbo:commander dbr:George_Pickett .

  # Find if any member was also a commander in that war
  OPTIONAL { ?member dbo:roleInWar ?war . }

  FILTER EXISTS { ?party dbp:rulingParty ""true""^^xsd:boolean }
}
```",4,7,5,2,2,3,2,20,0,0,4,0,0.0,0
668,24,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?argent a dbo:MusicalArtist ;
          foaf:name ""Rod Argent"" .
  
  ?steve a dbo:MusicalArtist ;
         dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .

  ?person a dbo:MusicalArtist ;
          ?relation1 ?argent ;
          ?relation2 ?steve .

  FILTER(?relation1 IN (dbo:collaboratedWith, dbo:bandMember))
  FILTER(?relation2 IN (dbo:collaboratedWith, dbo:bandMember))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
225,14,train,"Give me the birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:AwardRecipient .
  ?award dbo:recipient ?person .
  ?award dbo:name ""Anita Borg Institute Women of Vision Awards""@en .
  
  ?person dbo:nationality dbr:Japan .
  
  OPTIONAL { 
    ?reference dbo:subject ?person .
    ?reference dbo:type dbr:TelevisionShow .
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
LIMIT 10
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
203,21,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?regiment a dbo:MilitaryUnit ;
            dbo:participatedIn ?conflict .

  FILTER(STR(?regiment) = ""http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot"")

  ?battle a dbo:MilitaryConflict ;
          dbo:participatedIn ?conflict .

  FILTER(STR(?battle) = ""http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)"")

  ?commander dbo:commanded ?unit .
  ?unit dbo:participatedIn ?conflict .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,22,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find the actor in the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .

  # Find Allan Arbus's children
  ?allanArbus dbp:child ?child .
  ?allanArbus foaf:name ""Allan Arbus""@en .

  # Check if the actor is a parent of any of Allan Arbus's children
  OPTIONAL { ?actor dbo:spouse ?parent . }
  OPTIONAL { ?actor dbo:child ?child . }

  FILTER(?actor != ?allanArbus)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,24,train,Give me the child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfMargareteSophie ?grandChildOfPhilipp WHERE {
  # Find Archduchess Margarete Sophie of Austria and her child
  ?margareteSophie a dbo:Person ;
                  foaf:name ""Archduchess Margarete Sophie of Austria""@en .
  ?childOfMargareteSophie dbo:parent ?margareteSophie .

  # Find Duke Philipp of Württemberg and his grandchild
  ?philipp a dbo:Person ;
           foaf:name ""Duke Philipp of Württemberg""@en .
  ?childOfPhilipp dbo:parent ?philipp .
  ?grandChildOfPhilipp dbo:parent ?childOfPhilipp .

}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
203,40,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Battle of Cape Finisterre (1805)
  ?battle1 a dbo:MilitaryConflict ;
           dbo:participatedIn ?event1 ;
           dbp:name ""Battle of Cape Finisterre (1805)""@en .
  
  # Battle of Fort Royal
  ?battle2 a dbo:MilitaryConflict ;
           dbo:participatedIn ?event2 ;
           dbp:name ""Battle of Fort Royal""@en .

  # The Triple X's, likely referring to Admiral Horatio Nelson and his forces
  ?commander a dbo:Person ;
             dbo:commanded ?battle1, ?battle2 .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
756,47,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Step 1: Identify a Chancellor of West Germany
  ?chancellor a dbo:Chancellor ;
              dbo:country dbr:West_Germany .

  # Step 2: Find the manager of VfL Bochum in 2007–08
  ?manager dbp:managedTeam dbr:VfL_Bochum ;
           dbp:managementPeriod ?period .
  
  FILTER (CONTAINS(?period, ""2007-08""))

  # Step 3: Determine the native country of this manager
  ?manager dbo:nationality ?nativeCountry .

}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,33,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  ?person a dbo:Actor .
  ?person dbo:film dbr:Ab_Kya_Hoga .
  ?person dbo:film dbr:Dispatches_from_Elsewhere .
  ?person dbo:profession dbr:Politician .

  OPTIONAL { ?person foaf:name ?name . }
  ?person dbp:professionalName ?professionalName .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
419,0,train,Give me the entity in Andhra Pradesh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:India .
  ?entity dbo:stateOrProvince dbr:Andhra_Pradesh .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
ORDER BY ?label
LIMIT 10
```",1,1,2,1,1,2,2,9,0,0,166,0,0.0,0
158,7,train,Give me the person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Russian_Empire .
  ?person dbo:deathPlace dbr:Switzerland .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",2,2,3,1,2,2,3,28,10,10,26,0.5,0.2777777777777778,0.35714285714285715
375,24,train,Give me the war of the person born as Koichirō and war of the child of Toyotomi Hideyoshi.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?war WHERE {
  # Find person born as Koichirō
  { 
    ?person dbp:birthName ""Koichirō""@en .
    ?person dbo:participatedInWar ?war .
  }
  
  UNION
  
  # Find child of Toyotomi Hideyoshi and their wars
  {
    ?child dbo:parent dbr:Toyotomi_Hideyoshi .
    ?child dbo:participatedInWar ?war .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,53,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeRegion WHERE {
  # Step 1: Identify Ackquille Jean Pollard
  ?pollard a dbo:MusicalArtist ;
           foaf:name ""Ackquille Jean Pollard"" ;
           dbp:birthName ""Ackquille Jean Pollard"" .

  # Step 2: Find the musical artist associated with GS9 that includes this person as a member
  ?gs9Group a dbo:Band ;
            dbo:member ?pollard .
  
  # Step 3: Determine the band member of the associated musical artist connected to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
        dbo:associatedMusicalArtist ?gs9Group .
  
  ?bandMember a dbo:BandMember ;
              dbo:memberOf ?gs9Group ;
              dbo:associatedWith ?coro .

  # Step 4: Identify the native region and state related to an award
  ?award a dbo:Award ;
         dbo:nativeRegion ?nativeRegion ;
         dbo:nativeState ?nativeState .
  
  ?nativeRegion a dbo:Region, dbo:AmericanState ;
                dbo:settlement ?bandMember .

}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
347,34,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?name WHERE {
  # Ferdinand II and his children
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # Child who was a commander in war
  ?child dbo:occupation dbr:Military_commander .

  # Societal event and television show connection
  OPTIONAL { ?event dbo:relatedEvent ?societalEvent . }
  OPTIONAL { ?tvShow dbo:title ?title . }

  # Connection to Algerian War military force
  ?militaryForce dbo:participatedIn dbr:Algerian_War .
  ?child dbo:militaryService ?militaryForce .

  # Ensure the child is linked to both societal event and TV show
  ?societalEvent dbo:relatedEvent ?tvShow .

  # Return the name of the child
  ?child foaf:name ?name .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
628,15,train,"Give me the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?member a dbo:MusicalArtist .
  ?member dbo:memberOf dbr:GS9 .
  ?member dbo:artist dbr:GS9 .

  ?association dbo:associatedWith ?member .
  ?association dbo:associatedWith ?associatedArtist .
  
  FILTER(?associatedArtist != ?member)
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
103,37,train,"Give me the professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?profession ?politicalRole WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ?actorName .
  
  # Check if the person is involved in politics
  OPTIONAL { 
    ?person dbo:occupation dbr:Politician .
    ?person dbp:role ?politicalRole .
  }
  
  # Link to ""Ab Kya Hoga""
  ?person dbo:workExample dbr:Ab_Kya_Hoga .
  
  # Get the profession of the actor
  OPTIONAL { 
    ?person dbo:profession ?profession .
  }
}
ORDER BY ?actorName
LIMIT 10
```",4,5,5,3,2,3,3,71,0,0,39640,0,0.0,0
943,27,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandfather WHERE {
  # Step 1: Identify Baeda Maryam I
  ?baedaMaryamI a dbo:Person ;
                foaf:name ""Baeda Maryam I""@en .

  # Step 2: Find his children
  ?child dbo:parent ?baedaMaryamI .

  # Step 3: For each child, identify their father
  ?father dbo:parent ?child .
  
  # Step 4: From that father, find his father (the grandfather)
  ?grandfather dbo:parent ?father .

  # Step 5: Ensure this grandfather is both royalty and an office holder
  ?grandfather a dbo:Monarch ;
              dbo:officeHolder ?office .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
23,9,train,Give me the entity in Colombia and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  dbr:Gustavo_Petro dbo:nationality dbr:Colombia .
  dbr:Gustavo_Petro dbo:politicalParty ?party .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
353,45,train,"Give me the child of Roger II of Sicily and father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Roger II of Sicily and his child
  dbr:Roger_II_of_Sicily dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # The child must be the father of William II of Sicily
  ?child dbo:child dbr:William_II_of_Sicily .

  # Constance of Burgundy's spouse and their child
  dbr:Constance_of_Burgundy dbo:spouse ?conSpouse .
  ?conSpouse dbo:child ?conChild .

  # The child must be a royalty
  ?child a dbo:Monarch .

  # Ensure the child is connected through lineage to Constance of Burgundy's spouse
  ?conChild dbo:parent ?child .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
198,3,train,"Give me the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show WHERE {
  ?show a dbo:TelevisionShow .
  ?award dbo:awardedBy dbr:United_States_Congress .
  ?show dbo:recipientOfAward ?award .
}
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
723,15,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of Stone Sour.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?producer a dbo:Producer .
  ?producer dbo:memberOfOrganization dbr:Stone_Sour ;
            dbo:memberOfGroup dbr:Nothing_to_Gein .
  ?producer dbo:bandMember ?bandMember .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
531,40,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?leader a dbo:Politician .
  
  # Leader involved in the 2003 Madrid City Council election
  ?electionEvent dbo:officeHolder ?leader ;
                 dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2003 && CONTAINS(LCASE(STR(?electionEvent)), ""madrid city council""))

  # Leader served under Miguel Maura and Mariano Rajoy
  ?mauraTerm dbo:officeHolder ?leader .
  ?rajoyTerm dbo:officeHolder ?leader .
  
  FILTER (CONTAINS(LCASE(STR(?mauraTerm)), ""miguel maura"") &&
          CONTAINS(LCASE(STR(?rajoyTerm)), ""mariano rajoy""))

  # Find the residence of the leader
  ?residence dbo:tenant ?tenant ;
             dbo:resident ?leader .

}
ORDER BY ?leader
LIMIT 10
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
119,55,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?residenceCountry ?administration WHERE {
  # Álvaro Quirós as a person and his political role
  dbr:Álvaro_Quirós dbo:politicalParty dbr:Spanish_Socialist_Workers'_Party ;
                   dbp:officeHeldIn2009GalicianElection ?office .

  # Residence country of Álvaro Quirós
  OPTIONAL { 
    dbr:Álvaro_Quirós dbo:nationality ?residenceCountry .
  }

  # Administration led by PSOE
  OPTIONAL {
    ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party ;
                    dbo:leader ?psoeLeader .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
386,19,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?baggovutWar ?davydovWar ?birthPlaceEntity WHERE {
  # Wars involving Karl Gustav von Baggovut
  ?person1 dbo:name ""Karl Gustav von Baggovut""@en .
  ?person1 dbo:participatedIn ?baggovutWar .

  # Wars involving Alexander Lvovich Davydov
  ?person2 dbo:name ""Alexander Lvovich Davydov""@en .
  ?person2 dbo:participatedIn ?davydovWar .

  # Birthplace of Elena Žalinkevičaitė-Petrauskienė
  ?person3 dbo:name ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?person3 dbo:birthPlace ?birthPlaceEntity .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
213,6,train,Give me the country of Cat Country (novel) and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
# Query for the country of ""Cat Country"" (novel)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Cat_Country dbo:country ?country .
}

# Query for the birthplace of Winston Chang
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Winston_Chang dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,19,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?maximilian a dbo:Person ;
              dbo:spouse ?margaret_ofaustria ;
              dbo:child ?child .
  
  ?margaret_ofaustria a dbo:Person .

  FILTER (str(?maximilian) = ""Maximilian_I,_Holy_Roman_Emperor"")

  ?child a dbo:Person ;
         dbo:parent ?charlesv .

  ?charlesv a dbo:Person ;
            dbo:spouse ?dorothea_ofdenmark ;
            dbo:child ?catherineofaustria .
  
  FILTER (str(?charlesv) = ""Charles_V,_Holy_Roman_Emperor"")
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,39,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?birthPlaceEntity WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Quincy Adams Gillmore"" .
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  OPTIONAL { ?person dbo:militaryForce ?force . }
  
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  ?birthPlace dbp:wikiPageRedirects ?birthPlaceEntity .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
468,6,train,Give me the reference to Peter IV and child of Alfonso IV of Aragon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?alfonsoIV a dbo:Person ;
             foaf:name ""Alfonso IV of Aragon""@en .
  ?child dbo:parent ?alfonsoIV ;
         foaf:name ?name .
  FILTER regex(?name, ""Peter IV"", ""i"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
39,39,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Bob Thompson"" .
  OPTIONAL { ?person foaf:name ?name . }
  ?person dbo:memberOfBand ?band .
}
ORDER BY ?band
LIMIT 10
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
782,32,train,Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?realName WHERE {
  # Find bands associated with Eric Clapton
  ?clapton a dbo:MusicalArtist ;
           foaf:name ""Eric Clapton"" ;
           dbo:memberOfBand ?band .

  OPTIONAL {
    # Get the real name of The Fabulous Thunderbirds
    ?thunderbird a dbo:MusicalGroup ;
                 foaf:name ""The Fabulous Thunderbirds"" .
    ?thunderbird dbp:realName ?realName .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
943,50,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alias ""The Shadow"" .
  
  # Na'od and his father (Susenyos I)
  dbr:Na'od dbo:father dbr:Susenyos_I .

  # Susenyos I's father (Yaqob)
  dbr:Susenyos_I dbo:father dbr:Yaqob .

  # Yaqob is a royalty and office holder
  dbr:Yaqob a dbo:Monarch .
  
  # Linking The Shadow to Yaqob
  ?alterEgo rdfs:label ""The Shadow""@en .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
263,21,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Mary Elphinstone, Lady Elphinstone details
  ?maryElphinstone a dbo:Person ;
                   foaf:name ""Mary Elphinstone"" ;
                   dbo:birthPlace dbr:Middlesex .

  # Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne details
  ?claudeBowesLyon a dbo:Person ;
                   foaf:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne"" .

  # Relationship between Mary Elphinstone and her child
  ?child dbo:parent ?maryElphinstone .

  # Relationship between Claude Bowes-Lyon and his child
  ?child dbo:parent ?claudeBowesLyon .

  # The parent we are looking for is the same person in both relationships
  ?parent dbo:parent ?maryElphinstone .
  ?parent dbo:parent ?claudeBowesLyon .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
119,10,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  dbr:Alberto_Núñez_Feijóo a dbo:Person .
  OPTIONAL { 
    ?person dbo:positionHeld ?office .
    FILTER(?person = dbr:Alberto_Núñez_Feijóo)
  }
  OPTIONAL {
    ?person dbp:residence dbr:Santiago_de_Compostela .
    FILTER(?person = dbr:Alberto_Núñez_Feijóo)
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
531,17,train,"Give me the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  # Identify Miguel Maura as a politician
  dbr:Miguel_Maura a dbo:Politician ;
                   dbo:partyAffiliation ?party .

  # Find the leader of that party
  ?party dbo:leader ?leader .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
140,17,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?partyMember WHERE {
  # Find John McDermott's death place
  ?johnMcDermott a dbo:Artist .
  ?johnMcDermott foaf:name ""John McDermott (American artist)"" .
  ?johnMcDermott dbp:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find Pickett's Charge commander and ruling party member
  ?charge dbo:commander ?commander .
  ?party dbo:name ""Confederate States of America"" . # Assuming this was the ruling party during Pickett's Charge
  ?party dbo:member ?partyMember .

  # Link the death place to the time of Pickett's Charge
  ?charge dbo:date ?date .
  FILTER(?deathPlace = ?placeDuringCharge) # Ensure the death place is relevant to the charge

} ORDER BY ?commander LIMIT 10
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
737,36,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  ?parent1 a dbo:Person ;
           dbo:spouse ?mother1 ;
           dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Predecessor of Carl, Duke of Württemberg
  ?parent2 a dbo:Person ;
           dbp:title ""Duke of Urach""@en ;
           dbo:successor dbr:Carl,_Duke_of_W%C3%BCrttemberg .

  # Find grandchildren who are royalty
  OPTIONAL { ?parent1 dbo:child ?child1 . }
  OPTIONAL { ?child1 dbo:child ?grandchild . }
  OPTIONAL { ?parent2 dbo:child ?child2 . }
  OPTIONAL { ?child2 dbo:child ?grandchild . }

  FILTER (?grandchild != dbr:Archduchess_Margarete_Sophie_of_Austria)
  FILTER (?grandchild != dbr:Carl,_Duke_of_W%C3%BCrttemberg)

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch ;
              dbp:title ?title .
}
ORDER BY ?grandchild
LIMIT 10
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,40,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile""@en .
  
  ?roger a dbo:Person ;
         foaf:name ""Roger II of Sicily""@en .

  ?elvira dbo:spouse ?roger .
  
  ?child dbo:parent ?elvira ;
         dbo:parent ?roger ;
         a dbo:Royalty .

  OPTIONAL { ?child dbp:fatherOf dbr:William_II_of_Sicily . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
353,28,train,"Give me the father of William II of Sicily and child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William II of Sicily
  dbr:William_II_of_Sicily dbo:parent ?father .

  # Roger III, Duke of Apulia (child of Elvira of Castile)
  ?rogerIII a dbo:Person ;
            dbo:parent dbr:Elvira_of_Castile ;
            rdfs:label ""Roger III, Duke of Apulia""@en .
  
  # The father of William II is the child of Roger III
  ?father dbo:parent ?rogerIII .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
361,16,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?album a dbo:Album .
  ?album rdfs:label ""Lasso the Moon""@en .
  ?film a dbo:Film .
  ?work a dbo:CreativeWork .
  
  ?album dbo:isPartOf ?film .
  ?album dbo:isPartOf ?work .

  ?actor a dbo:Actor .
  ?actor dbp:profession ""Actor"" .
  ?actor dbo:role ?role .
  ?role dbo:associatedWith ?album .
}
```",3,5,4,2,2,2,3,28,0,0,4,0,0.0,0
89,8,train,Give me the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Saw_Shwe_Khet dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:children ?child . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,2,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Stephen_I_of_Hungary dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
  UNION
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
258,5,train,"Who is the person born, that is a politician, as Eleonora Menicucci de Oliveira?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbp:birthName ""Eleonora Menicucci de Oliveira"" .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
668,51,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicArtist .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  OPTIONAL { ?person dbp:profession ""musician"" . }
  ?person foaf:name ?name .
  ?person dbp:birthName ?birthName .
}
ORDER BY ?name
LIMIT 10
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  ?person a dbo:FictionalCharacter .
  ?person foaf:name ""The Shadow""@en .
  OPTIONAL { ?person dbo:creator ?creator . }
  OPTIONAL { ?person dbo:portrayedBy ?actor . }
  ?creator foaf:name ?professionalName .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
557,3,train,"Give me the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  ?character a dbo:FictionalCharacter .
  ?character foaf:name ""Kent Allard"" .
  OPTIONAL { ?character dbo:wikiPageRedirects ?redirect . }
  OPTIONAL { ?character dbo:wikiPageDisambiguates ?disambiguation . }
  OPTIONAL { ?character dbo:wikiPageExternalLink ?reference . FILTER regex(?reference, ""^http://"") }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,44,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?professional WHERE {
  # For Cora Sue Collins' work
  ?collinsWork dbo:starring dbr:Cora_Sue_Collins .
  
  # For Janet Gaynor's movie and work
  ?gaynorMovie dbo:starring dbr:Janet_Gaynor ;
              a dbo:Film .

  # Find the professional (director or producer) of these works
  OPTIONAL { ?collinsWork dbo:director ?professional . }
  OPTIONAL { ?collinsWork dbo:producer ?professional . }

  OPTIONAL { ?gaynorMovie dbo:director ?professional . }
  OPTIONAL { ?gaynorMovie dbo:producer ?professional . }

  # Return the work and its professional
  BIND(UNION(?collinsWork, ?gaynorMovie) AS ?work)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the reference to Spanish Socialist Workers' Party.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty .
  ?party foaf:name ""Spanish Socialist Workers' Party""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
198,61,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Identify Quincy Adams Gillmore
  ?gillmore a dbo:Person ;
            foaf:name ""Quincy Adams Gillmore"" ;
            dbo:deathDate ""1850-08-05""^^xsd:date .

  # Find the force associated with him
  ?gillmore dbo:militaryService ?force .

  # Identify awards related to Quincy Adams Gillmore and their awardees
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  
  # Link the award to Quincy Adams Gillmore
  ?award dbo:relatedTo dbr:Quincy_Adams_Gillmore .

  # Find the birthplace of the person deceased on 1850-08-05
  ?person a dbo:Person ;
          dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?settlement .
  
  # Ensure the settlement is in America and is a type of settlement
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Find entities related to this birthplace
  ?entity dbo:location ?settlement .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
756,50,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person dbr:Thomas_Letsch .
  ?person dbo:managerOf ?team .

  ?team a dbo:SoccerClubSeason ;
        dbo:sportTeam ?sportsTeam .

  ?leader dbo:country dbr:Germany_West .
  ?leader dbo:position dbr:Chancellor_of_Germany .

  ?adminCountry dbo:administrativeUnitLeader ?leader .
  ?person dbo:nationality ?adminCountry .

}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
119,31,train,"Give me the tenant of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event ?tenantOfSpain ?officeLeader WHERE {
  # Anxo Quintana as a person
  ?person dbr:Anxo_Quintana .
  
  # Events involving Anxo Quintana
  ?event dbo:agent ?person .

  # Tenant of Spain is the country itself
  ?tenantOfSpain rdfs:label ""Spain""@en .
  ?tenantOfSpain a dbo:Country .

  # Office of the leader of the administration (Prime Minister or President)
  OPTIONAL {
    ?officeLeader dbo:country ?tenantOfSpain ;
                  a dbo:GovernmentOffice ;
                  dbp:name ?leaderTitle .
    FILTER(CONTAINS(LCASE(?leaderTitle), ""prime minister"") || CONTAINS(LCASE(?leaderTitle), ""president""))
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
119,3,train,"Give me the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  ?event dbo:agent ?person ;
         a dbo:Event .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
905,34,train,"Give me the child of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  # Step 2: Find his parent (father)
  ?philip dbo:parent ?father .

  # Step 3: Determine the father's parent (grandfather)
  ?father dbo:parent ?grandfather .

  # Step 4: Identify the grandfather's spouse
  ?grandfather dbo:spouse ?spouse .
  
  # Step 5: Check if this spouse is also a child of Stephen V of Hungary and belongs to royalty
  ?spouse dbo:childOf dbr:Stephen_V_of_Hungary ;
          a dbo:Royalty .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
742,9,train,Give me the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?university a dbo:EducationalInstitution ;
              foaf:name ""Пловдивски университет „Паисий Хилендарски“""@bg .
  
  ?alumnus dbo:almaMater ?university .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
19,8,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Caroline Louise Bevan Symonds"" .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
89,58,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of Saw Min Hla.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Saw Min Phyu and spouse who is royalty
  ?spouse a dbo:RoyalFamilyMember ;
          dbo:spouse dbr:Saw_Min_Phyu .
  
  # Child of Saw Min Phyu's spouse
  ?child dbo:parent ?spouse .

  # Predecessor of this child (assuming predecessor means parent)
  ?predecessor dbo:child ?child .

  # Myat Hpone Pyo and father who is royalty
  ?father a dbo:RoyalFamilyMember ;
          dbo:child dbr:Myat_Hpone_Pyo .
  
  # Spouse of Myat Hpone Pyo's father
  ?spouseFather dbo:spouse ?father .

  # Child of Saw Min Hla
  ?sawMinHlaChild dbo:parent dbr:Saw_Min_Hla .

  # Ensure the spouse of Myat Hpone Pyo's father is the same as the child of Saw Min Phyu's spouse
  FILTER (?spouseFather = ?child)

  # Return the predecessor of this child
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,13,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?force WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Edmund Hakewill-Smith Award""@en .

  ?recipient dbo:recipientOfAward ?award .
  ?recipient foaf:name ?awardee .

  OPTIONAL { 
    ?recipient dbp:force ?force .
  }
}
```",3,3,4,3,1,3,2,20,0,0,734,0,0.0,0
89,2,train,Give me the predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?person a dbo:Person ;
          foaf:name ""Myat Hpone Pyo""@en .
  OPTIONAL { 
    ?position dbo:incumbent ?person ;
              dbo:predecessor ?predecessor .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,17,train,"Give me the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  ?character a dbo:ComicBook .
  ?character dbp:title ""The Shadow"" .
  OPTIONAL { ?character dbo:videoGame dbr:The_Shadow_(video_game) . }
  ?character dbo:alterEgo ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
557,38,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Find Cora Sue Collins' notable works and their producers
  ?collinsWork a dbo:Film ;
               dbo:starring dbr:Cora_Sue_Collins ;
               dbo:producer ?producer .

  UNION

  # Find Janet Gaynor's notable films (works) and their producers
  ?gaynorWork a dbo:Film ;
              dbo:starring dbr:Janet_Gaynor ;
              dbo:producer ?producer .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
263,1,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Mary_Elphinstone_Lady_Elphinstone dbo:childOf ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
80,23,train,Give me the actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find the author of the book ""Smartbomb""
  ?book a dbo:Book .
  ?book dbp:title ""Smartbomb"" .
  ?book dbo:author ?author .

  # Find movies associated with this author
  ?movie dbo:writer ?author .
  
  # Get actors from these movies
  ?movie dbo:actor ?actor .
}
```",3,3,4,3,1,3,3,71,0,0,55786,0,0.0,0
103,15,train,"Give me the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Die Antwoord"" .
  ?person dbp:birthName ""Richard Grant Esterhuysen"" .
  
  OPTIONAL { 
    ?film dbo:starring ?person .
    ?film rdf:type ?type .
    
    FILTER (
      ?type = dbo:Film OR
      ?type = dbo:TelevisionSeries
    )
    
    BIND(?film AS ?movie)
  }
}
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
39,37,train,"Give me the band of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?alterEgo WHERE {
  # Find Bob Thompson's band
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" .
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?band foaf:name ?bandName .
  }

  # Find Walter B. Gibson's fictional character
  ?creator a dbo:Writer ;
           foaf:name ""Walter B. Gibson"" .
  ?character dbo:createdBy ?creator ;
             a dbo:FictionalCharacter, dbo:ComicsCharacter .
  OPTIONAL { 
    ?character dbp:alterEgo ?alterEgo .
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
513,7,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""George H. Cameron"" .
  ?person dbo:honoraryAward ?award .
}
```",2,2,3,2,1,3,2,20,0,0,87241,0,0.0,0
159,6,train,Give me the writer of Always the Love Songs.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  dbr:Always_the_Love_Songs a dbo:Song .
  OPTIONAL { dbr:Always_the_Love_Songs dbo:lyricist ?writer . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
492,6,train,Give me the death place of Reed Howes and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Reed_Howes 
    dbr:Caryn_Jones 
  }
  
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
468,5,train,"Give me the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  dbr:Peter_IV_of_Aragon dbo:parent ?father .
  ?father a dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
78,14,train,"Give me the associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?stuartTosh a dbo:MusicalArtist ;
              foaf:name ""Stuart Tosh"" .
  ?collaboration dbo:artist ?stuartTosh ;
                 dbo:associatedMusicalArtist ?associatedArtist .
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?soundtrack a dbo:Soundtrack ;
              dbo:title ""Wizards of Waverly Place"" .
  ?soundtrack dbo:composer ?writer .
  ?writer a dbo:MusicalArtist, dbo:Artist .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
531,20,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office ?tenant WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?office .
  
  ?office dbo:location dbr:Madrid ;
          dbo:positionTitle ""Commander"" .

  ?person dbo:memberOf ?organization .
  ?organization dbo:country dbr:Central_African_Republic ;
                dbo:conflict dbr:Central_African_Republic_Civil_War .

  OPTIONAL { ?office dbp:tenant ?tenant . }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
159,32,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  ?writer dbo:work dbr:Always_the_Love_Songs .
  
  # Identify the commander in the Russo-Polish War (1654–1667)
  ?commander dbo:participatedIn dbr:Russo-Polish_War_(1654%E2%80%931667) .

  # Find the successor of the commander who is a politician and office holder
  ?successor dbo:succeeded ?commander .
  ?successor a dbo:Politician ;
             dbo:officeHolder true .
  
  # Ensure the successor is related to the writer
  ?writer dbp:relatedTo ?successor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
531,53,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeInMadridCouncil ?partyRole WHERE {
  # Mariano Rajoy's resource
  dbr:Mariano_Rajoy a dbo:Politician .

  # Office held in the Madrid City Council election of 2003
  OPTIONAL { 
    ?event dbo:place dbr:Madrid_City_Council_election_2003 .
    ?event dbo:participant dbr:Mariano_Rajoy .
    ?event dbo:positionHeld ?officeInMadridCouncil .
  }

  # Role within the Conservative Republican Party (Spain)
  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           dbp:name ""Conservative Republican Party (Spain)""@en .
    ?party dbo:member dbr:Mariano_Rajoy .
    ?party dbo:positionHeld ?partyRole .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
311,8,train,Give me the band member of the writer of No Alternative.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?album dbo:creator dbr:Kurt_Cobain .
  ?album rdfs:label ""No Alternative""@en .
  
  ?person dbo:memberOfBand ?band .
  ?band dbo:leadArtist dbr:Nirvana .
  ?band dbo:member ?bandMember .

  FILTER(?album != ?band)
}
LIMIT 10
```",2,2,3,2,1,3,2,20,0,0,123,0,0.0,0
941,17,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel and child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify the child of Princess Antoinette and Ferdinand Albert II
  ?child dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel .
  ?child dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttle .

  # Step 2: Ensure the child is royalty
  ?child a dbo:Royalty .

  # Step 3: Find the spouse of this child
  ?spouse1 dbo:spouse ?child .
  
  # Step 4: Determine the spouse of that spouse
  ?spouse1 dbo:spouse ?spouseOfSpouse .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
609,47,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  ?powell a dbo:Person ;
          foaf:name ""Paulus Powell"" ;
          dbo:birthPlace ?region .

  # Ensure the region is both a Region and an AdministrativeRegion
  ?region rdf:type dbo:Region, dbo:AdministrativeRegion .

  # Step 2: Find the governor of that region
  ?governor a dbo:Politician ;
            dbp:title ""Governor"" ;
            dbo:birthPlace ?region .

  # Step 3: Identify Vince Gilligan's award-winning work and its awardee's birth place
  ?award dbr:List_of_awards_and_nominations_received_by_Vince_Gilligan ;
         dbo:recipient ?awardee .
  
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Step 4: Find the common birth place
  FILTER (?region = ?awardeeBirthPlace)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,18,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor) and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Harriette Arlene Lake"" .
  
  OPTIONAL { 
    ?marriage dbo:spouse1 ?person ;
              dbo:spouse2 dbr:Roger_Pryor_(actor) .
  }
  
  OPTIONAL {
    ?partyMembership dbo:member ?person ;
                     a dbo:PoliticalPartyMembership ;
                     dbp:politicalParty dbr:Republican_Party_(United_States) .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
419,6,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?almaMater WHERE {
  ?awardee a dbo:Person .
  ?awardee dbo:nationality dbr:Australia .
  ?awardee dbo:occupation dbo:Scientist .
  ?award dbo:recipient ?awardee ;
         dbp:name ""Australian Laureate Fellowship"" .
  OPTIONAL { ?awardee dbo:almaMater ?almaMater . }
}
ORDER BY ?awardee
LIMIT 10
```",2,4,3,2,1,2,2,9,0,0,8,0,0.0,0
412,9,train,Give me the entity in Athens and war of Konstantinos Ventiris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Konstantinos Ventiris"" .

  OPTIONAL { 
    ?event dbo:location dbr:Athens .
    ?event dbo:participant ?person .
    ?event dbo:subject ?war .
    ?war rdfs:label ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""war""))
  }
  
  OPTIONAL {
    ?entity dbo:place dbr:Athens .
    ?entity dbo:relatedTo ?person .
  }

  FILTER(BOUND(?event) || BOUND(?entity))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
225,16,train,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Japan .
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?person dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is in Japan Standard Time region
  ?birthPlace dbo:timeZone dbr:Asia/Tokyo .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
37,0,train,Give me the birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Bob_Crewe dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
39,46,train,Give me the professional in the profession of the producer of Coke Studio Philippines and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerName ?shadowRealName WHERE {
  # Producer of Coke Studio Philippines
  ?person1 dbo:profession dbo:Producer .
  ?person1 dbp:worksFor dbr:Coke_Studio_Philippines .
  ?person1 foaf:name ?producerName .

  # Alter ego The Shadow
  ?person2 foaf:name ""The Shadow"" .
  ?person2 foaf:name ?shadowRealName .
}
```",5,5,6,3,2,3,3,71,0,0,39640,0,0.0,0
723,3,train,"Give me the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?film a dbo:Film .
  ?film dbp:title ""Nothing to Gein"" .
  ?film dbo:productionCompany ?producer .
  
  ?producer a dbo:Organization ;
            a dbo:MusicalGroup .

}
ORDER BY ?producer
LIMIT 10
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
756,60,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Find the sports manager born on 1968-08-26
  ?person a dbo:SportsManager ;
          dbp:birthday ""1968-08-26""^^xsd:date .

  # Step 2: Identify the team managed by this person in the season after 2006–07 VfL Bochum
  ?teamSeason a dbo:SoccerClubSeason, dbo:SportsTeamSeason, dbo:SportsSeason ;
              dbp:manager ?person ;
              dbp:seasonStartYear ?startYear .

  # Step 3: Find the successor of the 2006-07 VfL Bochum season
  ?vflBochumSeason a dbo:SoccerClubSeason, dbo:SportsTeamSeason, dbo:SportsSeason ;
                   dbp:club dbr:VfL_Bochum ;
                   dbp:seasonStartYear ""2006""^^xsd:gYear .

  ?successorSeason a dbo:FootballLeagueSeason, dbo:SportsTeamSeason, dbo:SportsSeason ;
                   dbo:succeeds ?vflBochumSeason ;
                   dbp:seasonStartYear ?successorYear .
  
  # Ensure the team season is in the successor year
  FILTER (?startYear = ?successorYear + 1)

  # Step 4: Find the manager of that team
  ?team a dbo:SoccerClub, dbo:SportsOrganization ;
        dbp:clubSeason ?teamSeason .

  ?managerTeamSeason a dbo:SoccerClubSeason, dbo:SportsTeamSeason, dbo:SportsSeason ;
                     dbp:manager ?manager ;
                     dbp:club ?team .
}
```",6,16,7,3,2,3,3,71,0,0,1,0,0.0,0
472,20,train,"Give me the administration of Olaf I of Denmark and territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?olafAdministration ?christianAdministration WHERE {
  # Olaf I of Denmark
  OPTIONAL {
    ?olaf a dbo:Monarch ;
          dbo:countryAdministered dbr:Copenhagen ;
          dbp:title ""King of Denmark"" .
    ?olaf dbp:administration ?olafAdministration .
  }

  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  OPTIONAL {
    ?christian a dbo:Person ;
               dbo:birthPlace dbr:Schleswig-Holstein-Sonderburg-Beck ;
               foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
    ?christian dbo:administrativeRole ?role .
    ?role dbp:administration ?christianAdministration .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
557,42,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Janet Gaynor's claim to fame
  ?movie dbo:starring dbr:Janet_Gaynor .
  
  # The Shadow or its alter ego connection
  OPTIONAL { ?movie dbo:workExample dbr:The_Shadow . }
  
  # Producer of the movie
  ?movie dbo:producer ?producer .

  # Producer also involved in ""The Adventures of Tom Sawyer"" (1938)
  ?tomSawyerFilm a dbo:Film .
  ?tomSawyerFilm dbp:title ""The Adventures of Tom Sawyer""@en .
  ?tomSawyerFilm dbo:producer ?producer .
}
```",5,7,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
119,45,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  # Identify the Spanish Socialist Workers' Party
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .

  # Find administrations associated with this party
  ?administration dbo:hasMember ?member .
  ?administration dbo:politicalAffiliation ?party .

  # Identify Alberto Núñez Feijóo and his role
  ?feijoo a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en ;
          dbo:officeHeld ?office .

  # Find the office of President of the Xunta de Galicia or similar roles
  ?office rdfs:label ?officeLabel .
  FILTER(CONTAINS(LCASE(?officeLabel), ""president"") || CONTAINS(LCASE(?officeLabel), ""galicia""))

  # Identify the tenant (leader) of Spain's administration
  ?tenant a dbo:Person ;
          dbo:officeHeld ?spanishOffice .

  # Find the office related to being the leader of Spain, such as Prime Minister or President
  ?spanishOffice rdfs:label ?spanishOfficeLabel .
  FILTER(CONTAINS(LCASE(?spanishOfficeLabel), ""prime minister"") || CONTAINS(LCASE(?spanishOfficeLabel), ""president""))

  # Ensure the tenant is associated with the administration linked to the Spanish Socialist Workers' Party
  ?administration dbo:hasMember ?tenant .

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
756,56,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Identify VfL Bochum as a sports club and its manager in the 2007-08 season
  ?club dbo:type dbr:Soccer_club .
  ?club dbp:officialWebsite ""http://www.vfl-bochum.de/"" .  # Assuming this is the official website for identification

  ?season dbo:team ?club ;
          dbo:seasonStartYear ""2007""^^xsd:gYear ;
          dbo:seasonEndYear ""2008""^^xsd:gYear .

  ?manager dbo:type dbr:Sports_manager .
  ?manager dbp:birthday ""1968-08-26""^^xsd:date .
  ?manager dbo:nationality dbr:Germany_Western ;  # Assuming this is the resource for West Germany

  ?season dbo:manager ?manager .

  OPTIONAL { ?manager foaf:name ?managerName . }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
225,9,train,Give me the region of the time zone in Kiyosu.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region WHERE {
  dbr:Kiyosu dbo:location dbr:Aichi_Prefecture .
  dbr:Aichi_Prefecture dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
119,11,train,Give me the entity in Poland and war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?name WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:nationality dbr:Poland .
  ?commander dbo:occupation dbo:Commander .
  ?commander foaf:name ?name .
  
  OPTIONAL { 
    ?event dbo:participatedIn dbr:French_Revolutionary_Wars .
    ?commander dbo:participatedIn ?event .
  }
}
ORDER BY ?name
LIMIT 10
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,6,train,Give me the war of Tom Phillips (Royal Navy officer) and force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force WHERE {
  # Find Tom Phillips and his associated war
  ?tomPhillips a dbo:Person ;
              foaf:name ""Tom Phillips"" ;
              dbo:occupation dbr:Royal_Navy_officer .
  
  OPTIONAL { 
    ?tomPhillips dbo:participatedIn ?war .
  }
  
  # Find William Tennant and his associated force
  ?williamTennant a dbo:Person ;
                  foaf:name ""William Tennant"" ;
                  dbo:occupation dbr:Royal_Navy_officer .
  
  OPTIONAL { 
    ?williamTennant dbo:commanded ?force .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
595,15,train,"Give me the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Identify Hillary Clinton's books
  ?book a dbo:Book ;
        dbo:author dbr:Hillary_Clinton .

  # Find the author who is also a politician and an office holder
  ?author a dbo:Politician, dbo:OfficeHolder ;
          dbo:authored ?book .
}
```",2,6,3,2,1,3,3,71,0,0,1,0,0.0,0
295,17,train,Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  VALUES (?person) { 
    dbr:Tim_Bevan 
    dbr:Eddy_Grant
  }
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  
  ?native dbo:birthPlace ?birthPlace .
  FILTER(?native != ?person)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
769,5,train,"Give me the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerTeam .
  ?team dbp:name ""Hong Kong C Team"" .
  
  ?team dbo:coach ?manager .
  ?manager a dbo:SportsManager ;
           dbo:sport dbr:Soccer .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
871,7,train,Who is the alumnus of Eton College?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
}
ORDER BY ?alumnus
LIMIT 10
```",1,1,2,1,1,3,3,71,10,0,201,1.0,0.04739336492890995,0.09049773755656107
58,5,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
}
ORDER BY ?movie
LIMIT 10
```

This query selects movies from DBpedia, ordering them by their titles and limiting the results to 10 for simplicity.",1,1,2,1,1,3,2,20,0,0,39790,0,0.0,0
628,24,train,Give me the person born as the birth name of Bobby Shmurda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  VALUES ?birthName { ""Bobby Shmurda"" } # Replace with Bobby Shmurda's actual birth name
  ?person dbo:birthPlace dbr:Florida .
  ?person dbp:birthName ?birthName .
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,43,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Charles II of Naples and his spouse
  ?charlesII a dbo:Monarch ;
             dbo:spouse ?maryOfHungary .
  
  # Mary of Hungary's parent (father)
  ?maryOfHungary dbo:parent ?louisIOfHungary .

  # Louis I of Hungary's parent (father)
  ?louisIOfHungary dbo:parent ?charlesIOfHungary .

  # Charles I of Hungary as a child of Stephen V
  ?charlesIOfHungary dbo:childOf dbr:Stephen_V_of_Hungary .

  # Maria of Bytom's spouse
  ?mariaOfBytom a dbo:Monarch ;
                dbo:spouse ?wladyslawIlokietek .
  
  # Władysław I Łokietek's parent (father)
  ?wladyslawIlokietek dbo:parent ?louisIOfHungary .

  # Ensure the person is royalty
  ?charlesIOfHungary a dbo:Monarch .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
347,49,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Maria Anna of Bavaria
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria"" ;
             dbp:birthYear ""1574""^^xsd:gYear ;
             dbp:father ?father .

  # Father's child (Maria Anna or her siblings)
  ?child dbp:parent ?father .
  
  # Child is royalty
  ?child a dbo:Monarch .

  # Child was a commander in war
  ?warEvent a dbo:MilitaryConflict ;
            dbo:commander ?child .
  
  # War event is societal, an event, and a television show
  ?warEvent rdf:type/rdfs:subClassOf*+ (dbo:SocietalEvent dbo:Event dbo:TelevisionShow) .

  # Specific war event related to the 2nd Dragoon Regiment (France)
  OPTIONAL { ?warEvent dbp:participatingUnit dbr:2nd_Dragoon_Regiment_(France) }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
399,1,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?singer ?name WHERE {
  ?singer a dbo:MusicalArtist .
  OPTIONAL { ?singer foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,2,9,0,12,10364,0.0,0.0,0
87,24,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Audrey Hepburn and her movies
  ?movie dbo:starring dbr:Audrey_Hepburn .
  
  # Actors in the same movie as Audrey Hepburn
  ?movie dbo:starring ?actor .

  # Spouse of an awardee from Janusz Kamiński's list
  ?spouse dbp:spouse ?awardRecipient .
  ?awardRecipient dbo:award dbr:List_of_awards_and_nominations_received_by_Janusz_Kami%C5%84ski .
  
  # The actor must be the spouse of an award recipient
  FILTER (?actor = ?spouse)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
595,13,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?work a dbo:Book .
  ?work dbo:author dbr:Bill_Clinton .
}
ORDER BY ?work
LIMIT 10
```",2,5,3,2,1,3,3,71,0,7,2,0.0,0.0,0
737,12,train,"Give me the child of Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent1 a dbo:Person ;
           foaf:name ""Albrecht, Duke of Württemberg""@en .
  ?parent2 a dbo:Person ;
           foaf:name ""Archduchess Margarete Sophie of Austria""@en .
  
  ?parent1 dbo:child ?child .
  ?parent2 dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
198,17,train,"Give me the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { 
    ?birthPlace a dbo:Settlement .
    ?birthPlace dbo:country dbr:United_States .
  }
}
```",2,4,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
119,32,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?country WHERE {
  # Find Álvaro Quirós
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  
  # Find his office related to the 2009 Galician regional election
  ?electionEvent dbo:date ?date ;
                 dbo:electionType dbr:Galician_regional_election_2009 .
  ?person dbo:officeHeld ?office ;
          dbo:heldPositionInElection ?electionEvent .

  # Find his residence country
  ?person dbp:residenceCountry ?country .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
80,43,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find a song by T.I.
  ?song dbo:artist dbr:T.I. ;
        a dbo:Song .

  # Get the album of this song
  ?album dbo:song ?song .
  
  # Find an actor who acted in ""Shelby Oaks""
  ?actor dbo:actedIn dbr:Shelby_Oaks .
  
  # Check if this actor is professionally involved with the album (e.g., as a producer, featured artist)
  OPTIONAL { 
    ?album dbo:producer ?actor ;
           dbo:featuredArtist ?actor .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
668,44,train,Give me the person born as the birth name of Joey B and professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  # Find Joey B's birth name
  VALUES (?joeyB) { dbr:Joey_B }
  ?joeyB dbo:birthName ?birthName .

  # Find Rod Argent and his profession
  VALUES (?rodArgent) { dbr:Rod_Argent }
  ?rodArgent a dbo:MusicalArtist .
  ?rodArgent dbo:profession dbr:Musician ; dbo:instrument dbr:Keyboardist .

  # Assume $pacely refers to an association with a musical artist
  VALUES (?pacely) { dbr:Pacely } # Placeholder for actual resource
  ?pacely dbo:associatedMusicalArtist ?person .

  # Ensure the person matches all criteria
  FILTER(?person = ?joeyB && ?person = ?rodArgent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
311,10,train,"Who is the writer of the album, that is a musical work and a work and an album, of Sappy?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  dbr:Sappy a dbo:Album .
  dbr:Sappy dbo:artist ?artist .
  dbr:Sappy dbo:creator ?writer .
}
```",2,5,3,2,1,3,2,20,0,0,26,0,0.0,0
871,48,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find the award Rodney Lees received
  ?rodneyLees a dbo:Person ;
              dbp:honorificTitle ?award .

  # Find Frederick Stanley's child who is a politician
  ?frederickStanley a dbo:Person ;
                    foaf:name ""Frederick Stanley, 16th Earl of Derby"" ;
                    dbo:child ?politicianChild .
  
  ?politicianChild a dbo:Politician .

  # Find the awardee of the same award as Rodney Lees
  ?awardee a dbo:Person ;
           dbp:honorificTitle ?award ;
           dbo:parent ?parent .

  # Ensure the parent is also the father of Frederick Stanley's child
  ?politicianChild dbo:father ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of Kate Dimbleby.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring dbr:Vera_Lynn .
  
  ?parent dbo:child dbr:Kate_Dimbleby .
  ?parent ?type ?movie .

  OPTIONAL { ?movie dbo:author ?author . }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
557,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  dbr:The_Shadow dbo:creator ?creator .
  OPTIONAL { ?creator foaf:name ?name . }
  OPTIONAL { ?creator dbo:profession ?professionalName . }
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
58,7,train,Give me the spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Linda Sue Cobb"" .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
384,0,train,Give me the party of Guillaume Peltier.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  dbr:Guillaume_Peltier dbo:politicalParty ?party .
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
213,15,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of Cat Country (novel).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?decedent dbo:deathPlace dbr:Taipei .
  ?decedent dbo:nationality dbr:China .
  ?child dbo:parent ?decedent .
  ?child a dbo:Politician .
  ?child dbp:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
78,8,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musicalArtist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Stuart McBeath Tosh"" .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:associatedBandOrMusicalArtist ?band . }
  BIND(?band AS ?musicalArtist)
}
ORDER BY ?name
LIMIT 10
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
557,2,train,Give me the producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,30,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  ?person a dbo:SoccerManager .
  ?person dbo:nationality dbr:West_Germany .
  ?person dbo:managedTeam dbr:VfL_Bochum .
  
  OPTIONAL { 
    ?person dbp:birthPlace dbr:West_Germany .
  }
  
  ?letsch a dbo:SoccerManager ;
          dbo:managerOfTeam dbr:VfL_Bochum ;
          dbo:managedBy ?person .

  ?person foaf:name ?managerName .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
737,15,train,"Give me the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Archduchess Helena of Austria
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  
  # Find the children of her spouse
  ?spouse dbo:child ?child .

  # Ensure that the child is royalty (either by type or property)
  OPTIONAL { ?child a dbo:Monarch . }
  OPTIONAL { ?child dbp:title ?title FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }

}
ORDER BY ?child
LIMIT 10
```",2,3,3,2,1,3,3,71,1,2,1,0.3333333333333333,0.5,0.4
609,51,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Query for the governor of Virginia who is a politician
  { 
    ?governor dbo:stateOrProvince dbr:Virginia .
    ?governor a dbo:Politician .
    ?governor dbp:office ""Governor of Virginia"" .
    ?governor dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Query for the author of El Deafo who is American
  {
    ?author dbo:nationality dbr:United_States .
    ?author dbo:work dbr:El_Deafo .
    ?author dbo:birthPlace ?birthPlace .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
943,58,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  ?baedaMaryamI dbo:parent dbr:Dawit_I .
  ?dawitI dbo:parent ?zaraYaqob .
  ?zaraYaqob a dbo:Monarch ;
             dbp:title ""Emperor of Ethiopia"" .
  OPTIONAL { ?zaraYaqob dbo:spouse ?spouse . }
  ?shadow dbr:The_Shadow .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,24,train,Give me the professional in the profession of Shatrughan Sinha and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?otherPerson WHERE {
  # Find Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha a dbo:Actor ;
                       dbo:profession ?sinhaProfession .

  # Find other professionals in the same profession
  ?otherPerson a dbo:Actor ;
               dbo:profession ?sinhaProfession .
  
  FILTER(?otherPerson != dbr:Shatrughan_Sinha)
}
ORDER BY ?otherPerson
LIMIT 10
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
353,27,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Find Constance of Burgundy
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .

  # Step 2: Identify her spouse(s)
  ?spouse dbo:spouseOf ?constance ;
          dbo:spouseOf ?constanceInverse .
  
  # Step 3: Find their children (Constance's stepchildren)
  ?child dbo:parent ?spouse ;
         dbo:parent ?constanceInverse .

  # Step 4: Identify the grandchildren
  ?grandchild dbo:parent ?child .

  # Step 5: Filter those who are royalty
  ?grandchild a dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,8,0,0.0,0
58,2,train,Give me the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Linda_Bruckheimer a dbo:Person .
  OPTIONAL { dbr:Linda_Bruckheimer dbp:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
609,6,train,"Who is the governor, that is a politician, of Virginia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolderOf dbr:Governor_of_Virginia .
  ?person foaf:name ?governor .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,34,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)

  # Find Harriette Arlene Lake's DBpedia resource
  ?person dbp:birthName ""Harriette Arlene Lake"" .

  # Determine the country of the landmark
  ?landmark dbo:country dbr:COUNTRY_RESOURCE .

  # Get the ruling party in that country
  ?rulingParty dbo:country dbr:COUNTRY_RESOURCE ;
               dbo:member ?partyMember .
  
  # Ensure Harriette Arlene Lake is connected to the ruling party
  OPTIONAL { ?person dbo:memberOf ?rulingParty }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
668,21,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  VALUES ?birthName { 
    ""Elorm Kabu Amenyah"" 
    ""Darryl Paa Kwesi Bannerman-Martin""
  }
  
  ?person dbo:birthName ?birthName .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:associatedMusicalArtist ?artist . }
}
ORDER BY ?birthName
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,37,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Stephen V of Hungary and his child
  dbr:Stephen_V_of_Hungary dbo:child ?child .
  
  # Find the spouse of Maria of Bytom
  ?spouse dbp:siblingOf dbr:Maria_of_Bytom .
  
  # Find the parent (royalty) of the spouse
  ?parent a dbo:Monarch ;
          dbo:child ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,50,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?alfonsoVI a dbo:Monarch ;
             dbo:spouse ?urraca ;
             dbo:child ?alfonsoVII .
  
  ?urraca a dbo:Person ;
          dbo:child ?alfonsoVII .

  ?alfonsoVII a dbo:Monarch ;
              dbo:parent ?alfonsoVI ;
              dbo:child ?henryII .

  ?henryII a dbo:Monarch ;
           dbo:spouse dbr:Eleanor_of_Aquitaine ;
           dbo:parent ?alfonsoVII .

  ?eleanor a dbo:Person ;
           dbo:title dbr:Duchess_of_Aquitaine ;
           dbo:officeHolder true ;
           dbo:child dbr:William_X,_Duke_of_Aquitaine .
  
  ?williamX a dbo:Monarch ;
            dbo:spouse ?motherOfEleanor ;
            dbo:child ?eleanor .

  FILTER(?henryII = dbr:Henry_II_of_England)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
816,52,train,"Give me the parent of the professional in Photographer and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?movie WHERE {
  # Find Doon Arbus and her parent
  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus"" ;
             dbp:parent ?parent .

  # Find a photographer who shares the same parent as Doon Arbus
  ?photographer a dbo:Photographer ;
                dbp:parent ?parent .

  # Find a movie that features an actor related to both Doon Arbus's parent and the photographer
  ?movie a dbo:Film ;
         dbo:starring ?actor .
  
  # The actor should be connected to the person who decedent at Los Angeles
  ?actor dbp:deathPlace dbr:Los_Angeles_County,_California .

  FILTER(?doonArbus != ?photographer)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
80,50,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalIdentity ?actor WHERE {
  # Find Lamont Cranston's professional identity
  ?person a dbo:FictionalCharacter .
  ?person foaf:name ""Lamont Cranston"" .
  OPTIONAL { ?person dbp:alias ""The Shadow""@en . }
  ?person dbp:profession ?professionalIdentity .

  # Find an actor associated with T.I.'s work
  ?album a dbo:Album ;
         dbo:artist dbr:T.I. ;
         dbo:song dbr:Live_Your_Life .
  OPTIONAL { ?album dbo:actor ?actor . }
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
151,2,train,Give me the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Burhan_Belge dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
361,2,train,Give me the actor of Rustlers' Rhapsody.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Rustlers'_Rhapsody dbo:starring ?actor .
}
```

This query selects actors who starred in ""Rustlers' Rhapsody"" by looking for the `dbo:starring` property associated with the movie's DBpedia resource.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
472,0,train,Give me the territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory WHERE {
  ?territory a dbo:AdministrativeRegion .
  OPTIONAL { ?territory dbo:administrativeCenter dbr:Copenhagen . }
  FILTER EXISTS { ?territory dbo:country dbr:Denmark . }
}
ORDER BY ?territory
LIMIT 10
```",1,1,2,1,1,2,3,28,0,10,4,0.0,0.0,0
119,19,train,Give me the office of the leader of 2009 Galician regional election and tenant of Spain.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person dbo:birthPlace dbr:Spain .
  ?electionEvent dbo:electionDate ?date .
  FILTER(YEAR(?date) = 2009)
  ?electionEvent dbo:region dbr:Galicia .
  ?electionEvent dbo:officeHeld ?office .
  ?person dbp:name ""Alberto Núñez Feijóo""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
311,11,train,"Give me the band member of Mark Eitzel and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?remArtist WHERE {
  # Mark Eitzel and his band
  dbr:Mark_Eitzel a dbo:MusicalArtist ;
                  dbo:memberOfBandOrMusicalGroup ?band .

  # Other members of the same band
  ?otherMember a dbo:MusicalArtist ;
               dbo:memberOfBandOrMusicalGroup ?band .
  
  FILTER(?otherMember != dbr:Mark_Eitzel)

  # Check if any other member is associated with R.E.M.
  OPTIONAL {
    ?remArtist a dbo:MusicalArtist ;
              dbo:memberOfBandOrMusicalGroup dbr:R.E.M. .

    # Association between the band member and the REM artist
    ?association dbo:associatedMusicalArtist ?otherMember .
    ?association dbo:associatedMusicalArtist ?remArtist .
  }

  # Return results
  BIND(?otherMember AS ?bandMember)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
37,1,train,Give me the birthplace of Scott LaFaro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Scott_LaFaro a dbo:MusicalArtist .
  dbr:Scott_LaFaro dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
859,9,train,"Give me the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ""Burnt by the Sun""@en .
  
  ?band a dbo:Band ;
        dbo:associatedMusicalArtist ?film .

  OPTIONAL { 
    ?band dbo:genre ?genre .
    FILTER(?genre IN (dbr:Rock_music, dbr:Pop_music)) # Assuming we're interested in bands with these genres
  }

  BIND(?band AS ?artist)
}
LIMIT 10
```",2,6,3,2,1,3,2,20,1,0,4,1.0,0.2,0.33333333333333337
347,38,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Ferdinand III and his children
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
  
  # Leopold V, Archduke of Austria (Father of Cecilia Renata)
  dbr:Cecilia_Renata_of_Austria dbo:father dbr:Leopold_V,_Archduke_of_Austria .

  # Charles II, Archduke of Austria (Father of Leopold V and thus great-grandfather to Ferdinand III's children)
  dbr:Leopold_V,_Archduke_of_Austria dbo:father ?charlesII .
  
  # Check if Charles II is the father of any child of Ferdinand III
  ?child dbo:father ?charlesII .

  BIND(?charlesII AS ?father)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
472,15,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?territory WHERE {
  # Hans Christian Andersen
  VALUES ?person { 
    dbr:Hans_Christian_Andersen 
    dbr:Olaf_I_of_Denmark 
  }
  
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  FILTER(?deathPlace != dbpedia:unknown)
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .
  
  # Find territories administered from these settlements
  ?administeredTerritory dbo:administrativeCenter ?deathPlace .
  
  # Return the territory
  ?administeredTerritory rdfs:label ?territory .
}
ORDER BY ?territory
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,7,train,Give me the figure known as the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonName WHERE {
  dbr:Russia_national_football_team a dbo:SoccerTeam .
  OPTIONAL { dbr:Russia_national_football_team dbp:commonName ?commonName . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
293,9,train,Give me the party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:spouse dbr:Roger_Pryor_(actor) .
  ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,8,train,Give me the country of the work of Lao She.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?country WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Lao She"" .
  ?author dbo:work ?work .
  OPTIONAL { ?work dbo:settingCountry ?country . }
}
LIMIT 10
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
119,40,train,"Give me the tenant of Spain and tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantOfSpain ?tenantOfSantiagoDeCompostela ?office WHERE {
  # Anxo Quintana resource
  VALUES ?anxoQuintana { dbr:Anxo_Quintana }

  # Tenant of Spain (Presidente del Gobierno de España)
  OPTIONAL {
    ?anxoQuintana dbo:positionHeld ?tenantOfSpain .
    ?tenantOfSpain dbp:title ""Presidente del Gobierno de España""@es .
  }
  
  # Tenant of Santiago de Compostela (Alcalde de Santiago de Compostela)
  OPTIONAL {
    ?anxoQuintana dbo:positionHeld ?tenantOfSantiagoDeCompostela .
    ?tenantOfSantiagoDeCompostela dbp:title ""Alcalde de Santiago de Compostela""@es .
  }
  
  # Office in the administration (Ministerio)
  OPTIONAL {
    ?anxoQuintana dbo:positionHeld ?office .
    ?office a dbo:GovernmentAgency ;
            dbp:name ?officeName .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
531,34,train,"Give me the office of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?residence ?tenant WHERE {
  # Find Miguel Maura as an office holder related to the 2003 Madrid City Council
  ?miguelMaura a dbo:OfficeHolder ;
               foaf:name ""Miguel Maura"" ;
               dbp:office ?office .
  
  # Filter for the specific time period (2003 Madrid City Council)
  ?office dbo:startDate ?startDate .
  FILTER (?startDate <= ""2003-06-01""^^xsd:date && 
          ?startDate >= ""2003-01-01""^^xsd:date)

  OPTIONAL {
    # Find residence information
    ?miguelMaura dbp:residence ?residence .
    
    # Find tenant of the residence
    ?residence dbo:tenant ?tenant .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,56,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1 ?artist2 WHERE {
  # Find the artist with birth name Elorm Kabu Amenyah
  ?person1 a dbo:MusicalArtist .
  ?person1 dbp:birthName ""Elorm Kabu Amenyah"" .
  ?person1 foaf:name ?artist1 .

  # Find the artist from Central Region, Ghana
  ?person2 a dbo:MusicalArtist .
  ?person2 dbo:nationality dbr:Ghanaian .
  ?person2 dbo:birthPlace dbr:Central_Region,_Ghana .
  ?person2 foaf:name ?artist2 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,8,train,Give me the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Allan Arbus"" .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  ?relation dbo:parent ?person ;
            dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
513,5,train,Give me the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:Ulster_Unionist_Party dbo:leader ?person .
  ?person foaf:name ?leader .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
353,43,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Identify William I
  ?williamI a dbo:Monarch ;
            dbp:spouse ?elviraOfCastile ;
            dbp:child ?child .

  # Elvira of Castile
  ?elviraOfCastile a dbo:Person ;
                   dbp:spouse ?williamI ;
                   dbp:child ?child .

  # Roger II of Sicily
  ?rogerII a dbo:Monarch ;
           dbp:child ?williamI .

  # Identify the child who is royalty and an office holder
  ?child a dbo:Person, dbo:Royalty ;
         dbo:officeHolder ?office .

  # Find the father of this child
  ?father a dbo:Person ;
          dbp:spouse ?mother ;
          dbp:child ?child .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
723,11,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of Stone Sour.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?producer a dbo:MusicalArtist ;
            dbo:associatedBand dbr:Nothing_to_Gein ;
            dbo:associatedBand dbr:Stone_Sour .
  
  ?album dbo:artist ?producer ;
         dbp:name ""Nothing to Gein"" ;
         dbo:genre ?genre .

  ?album2 dbo:artist ?producer ;
          dbp:name ""Stone Sour"" ;
          dbo:genre ?genre2 .

  ?bandMember dbo:associatedBand ?producer .
}
LIMIT 10
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
816,0,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film dbp:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,59,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo ?work WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:creator dbr:Kent_Allard .

  ?actor a dbo:Actor ;
         dbo:profession ?alterEgo .

  ?work dbo:actor ?actor ;
        dbo:title ""Johnny Doughboy""^^xsd:string .

}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,59,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find songs by T.I. that are also musical works
  ?song a dbo:SongsByArtist ;
        dbo:artist dbr:T.I._(rapper) ;
        dbo:album ?album .

  # Get the author of ""Smartbomb""
  ?smartbombAuthor dbo:authorOf dbr:Smartbomb_(book) .
  
  # Find movies related to the author of ""Smartbomb""
  ?movie dbo:starring ?actor ;
         dbo:writer ?smartbombAuthor .

}
```",6,8,7,3,2,3,3,71,0,0,10,0,0.0,0
384,2,train,"Give me the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Find Patrice Martin-Lalande and his role or position
  ?person a dbo:Person ;
          foaf:name ""Patrice Martin-Lalande""@en .
  
  OPTIONAL { 
    ?role dbo:agent ?person ;
          dbo:positionHeld ?position .
    
    # Assuming there is a way to find the successor in DBpedia, e.g., via a property
    ?role dbo:successor ?successorRole .
    ?successorRole dbo:agent ?successor .
  }
  
  # Ensure the successor is a politician and French
  ?successor a dbo:Politician ;
            dbo:nationality dbr:Francois_Mitterrand#Nationality ; # Assuming nationality is linked to France
            foaf:name ?name .
}
ORDER BY ?name
LIMIT 1
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
472,21,train,Give me the administration of Christian IX of Denmark and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  # Administration of Christian IX of Denmark
  OPTIONAL {
    dbr:Christian_IX_of_Denmark dbo:positionHeld ?position .
    ?position dbo:administeredBy dbr:Christian_IX_of_Denmark .
    ?position dbp:administrativeTerritory ?territory1 .
    BIND(""Christian IX"" AS ?administration)
  }
  
  # Administration of the mayor of Duchy of Schleswig
  OPTIONAL {
    ?mayor dbo:positionHeld ?schleswigPosition .
    ?schleswigPosition dbo:administeredBy ?mayor .
    ?schleswigPosition dbp:administrativeTerritory dbr:Duchy_of_Schleswig .
    BIND(""Mayor of Duchy of Schleswig"" AS ?administration)
  }
  
  # Territories administered from Copenhagen
  OPTIONAL {
    ?copenhagenAdmin dbo:positionHeld ?cphPosition .
    ?cphPosition dbp:administrativeTerritory ?territory2 .
    FILTER(CONTAINS(LCASE(?territory2), ""copenhagen""))
    BIND(""Copenhagen Administration"" AS ?administration)
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
633,1,train,"Give me the parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Francis_I,_Duke_of_Lorraine dbo:childOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
293,36,train,Give me the party member of Republican Party (United States) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Identify Tisha Sterling's parent
  dbr:Tisha_Sterling dbo:parent ?parent .

  # Step 2: Retrieve the birth name of that parent
  ?parent dbp:birthName ?birthName .

  # Step 3: Find individuals who are members of the Republican Party with the same birth name
  ?partyMember a dbo:Person .
  ?partyMember dbo:politicalAffiliation dbr:Republican_Party_(United_States) .
  ?partyMember dbp:birthName ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
595,24,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?work WHERE {
  # Find the commander in the Third Taiwan Strait Crisis
  ?event a dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(?event), ""third taiwan strait crisis""))

  # Find works authored by Bill Clinton
  OPTIONAL {
    ?work a dbo:Book ;
          dbo:author dbr:Bill_Clinton .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
68,9,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child .
  ?child dbo:spouse ?catherine .
  ?catherine rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
39,31,train,Give me the professional in  and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerName ?profession WHERE {
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer foaf:name ?producerName .
  OPTIONAL { 
    ?producer dbo:profession ?profession .
  }
}
```",4,4,5,3,2,3,3,71,0,3,39640,0.0,0.0,0
258,13,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?universityName ?foundingDate WHERE {
  # Identify Luiza Erundina's alma mater
  ?person a dbo:Person ;
          foaf:name ""Luiza Erundina""@en .
  
  OPTIONAL { 
    ?person dbo:almaMater ?university . 
    ?university a dbo:University ;
               foaf:name ?universityName ;
               dbp:foundingDate ?foundingDate .
  }
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
816,59,train,"Give me the parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find Eugène Cattin's profession
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin"" ;
                dbo:profession ?profession .

  # Find movies with actors who died in Los Angeles
  ?movie dbo:actor ?actor .
  ?decedent dbo:deathPlace dbr:Los_Angeles_County,_California ;
            dbo:film ?movie .

  # Ensure the actor is involved in a movie related to Eugène Cattin's profession
  ?profession rdfs:label ?professionLabel .
  FILTER(CONTAINS(LCASE(?professionLabel), ""actor"") || CONTAINS(LCASE(?professionLabel), ""cinematography""))

  # Find the parent of this actor
  ?actor dbo:parent ?parent .
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
871,52,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Frederick Stanley, 16th Earl of Derby and his children
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  # One child of Frederick Stanley
  ?child1 dbp:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .

  # Parent of the awardee of Rodney Lees' award
  ?awardee dbo:awardReceived dbr:Rodney_Lees_Award .
  ?awardee dbo:parent ?parent .

  # Father of Arthur Stanley (politician)
  dbr:Arthur_Stanley_(politician) dbo:father ?parent .

  # Linking the parent to be a child of Frederick Stanley
  FILTER(?child1 = ?parent)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
258,9,train,"Give me the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?foundingDate WHERE {
  # Identify Luiza Erundina
  ?luiza a dbo:Person ;
         foaf:name ""Luiza Erundina""@en .
  
  # Find her alma mater, which is a university and an educational institution
  ?luiza dbp:almaMater ?university .
  ?university a dbo:University ;
              a dbo:EducationalOrganization .

  # Retrieve the founding date of the university
  OPTIONAL { ?university dbo:foundingDate ?foundingDate . }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
492,19,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?deathPlace WHERE {
  # Actor of The Sky Ranger (1928 film)
  VALUES (?film) { dbr:The_Sky_Ranger_(1928_film) }
  
  ?actor dbo:starringIn ?film .
  OPTIONAL { ?actor dbp:deathPlace ?deathPlace . }
  ?actor foaf:name ?actorName .

  UNION

  # Sal Mineo
  VALUES (?actorName) { ""Sal Mineo"" }
  ?salMineo foaf:name ?actorName .
  OPTIONAL { ?salMineo dbp:deathPlace ?deathPlace . }

  UNION

  # Carolyn Jones
  VALUES (?actorName) { ""Carolyn Jones"" }
  ?carolynJones foaf:name ?actorName .
  OPTIONAL { ?carolynJones dbp:deathPlace ?deathPlace . }
}
ORDER BY ?actorName
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
737,46,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Duke Philipp of Württemberg and his child
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?philippChild .

  # Child of Duke Philipp's child (grandchild)
  ?philippChild dbo:child ?philippGrandchild .

  # Predecessor of the grandchild in a royal context
  ?predecessor dbo:succeededBy ?philippGrandchild .
  
  # Archduchess Helena of Austria and her spouse's child
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?helenaSpouse .
  ?helenaSpouse dbo:child ?helenaChild .

  # Ensure the predecessor is a royalty
  ?predecessor a dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,15,train,"Who is the parent of the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?child a dbo:Monarch .
  ?child dbo:spouse|dbo:childOf* dbr:Roger_II_of_Sicily .
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
905,18,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:parent dbr:Charles_Martel_of_Anjou .
  ?person dbo:spouse dbr:Charles_II_of_Naples .
  ?person dbo:childOf dbr:Stephen_V_of_Hungary .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
158,13,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  ?sandro a dbo:Person ;
          foaf:name ""Sandro Bertaggia"" ;
          dbo:birthPlace ?birthCountry .

  # Identify people native to the Grand Duchy of Finland
  ?person a dbo:Person ;
          dbo:nationality dbr:Grand_Duchy_of_Finland ;
          dbo:deathPlace ?deathPlace .

  # Match death place with Sandro Bertaggia's birthplace
  FILTER (?deathPlace = ?birthCountry)

  # Return the decedent
  BIND(?person AS ?decedent)
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
297,1,train,Give me the institution in Georgia (U.S. state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution WHERE {
  ?institution a dbo:EducationalOrganization .
  ?institution dbo:location dbr:Georgia_(U.S._state) .
}
LIMIT 10
```",1,1,2,1,1,2,2,9,0,0,941,0,0.0,0
293,49,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Subquery to find the birth name of Tisha Sterling's parent
  {
    SELECT ?birthName WHERE {
      dbr:Tisha_Sterling dbo:parent ?parent .
      OPTIONAL { ?parent foaf:name ?name . }
      ?parent dbp:birthName ?birthName .
    }
  } AS %birthName

  # Main query to find a party member with the same birth name
  ?person a dbo:Politician .
  ?person dbo:birthName %birthName .
  ?person dbo:residence dbr:Central,_Louisiana .
  ?person dbo:memberOf ?party .
  ?party dbo:isRulingPartyOf dbr:Central,_Louisiana .
  ?person foaf:name ?partyMember .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
531,27,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Identify Miguel Maura
  dbr:Miguel_Maura a dbo:Politician ;
                   dbp:partyAffiliation ?party .

  # Find the leader of that party
  ?leader dbo:positionHeld ?partyLeaderRole .
  ?partyLeaderRole dbp:roleName ""Leader""@en .
  ?partyLeaderRole dbo:person ?leader .

  # Get the office held by this leader
  ?office dbo:holder ?leader .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
585,6,train,Give me the native of New York (state) and child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:New_York_(state) .

  # Assuming Linda Miller is represented as a resource in DBpedia
  ?parent dbp:name ""Linda Miller""@en .
  ?parent dbo:spouse ?childParent .
  ?childParent dbp:children ?person .

  OPTIONAL { ?person foaf:name ?name . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
353,3,train,"Who is the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  ?person a dbo:Person .
  ?person dbp:father dbr:Roger_II_of_Sicily .
  ?person dbp:mother ?mother .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  ?child a dbo:Person .
  ?child foaf:name ?childName .
  FILTER EXISTS {
    ?child dbo:position dbr:King_of_Sicily ;
           dbo:position dbr:Duke_of_Puglia ;
           dbo:position dbr:Prince_of_Apulia ;
           dbo:position dbr:Count_of_Calabria
  }
}
ORDER BY ?childName
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
375,17,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Step 1: Identify an English settlement
  ?location a dbo:Settlement ;
            dbo:country dbr:United_Kingdom ;
            rdfs:label ?settlementLabel .
  
  FILTER (lang(?settlementLabel) = 'en' && regex(str(?settlementLabel), ""England""))

  # Step 2: Find an artist who is also a musical artist and native to this location
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace ?location ;
          a dbo:Artist, dbo:MusicalArtist .

  # Step 3: Determine the parent of this artist
  OPTIONAL { ?parent dbp:child ?person . }

  # Step 4: Find the author of ""A Picture of Britain""
  dbr:A_Picture_of_Britain dbo:author ?author .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
39,48,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producerName ?bandName WHERE {
  # Find the producer of Coke Studio Philippines
  ?show dbr:Coke_Studio_Philippines .
  ?show dbo:producer ?producer .
  ?producer foaf:name ?producerName .

  # Find the band associated with Kid Rock at birth
  ?kidRock a dbo:MusicalArtist ;
           foaf:name ""Kid Rock"" ;
           dbp:birthName ""Robert Lamar Thompson"" .
  
  OPTIONAL { 
    ?band dbo:member ?kidRock .
    ?band foaf:name ?bandName .
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
871,42,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             dbp:spouse ?wife ;
             dbp:child ?child .

  # Edward Stanley, 17th Earl of Derby is one of the children
  ?edward dbr:Edward_Stanley,_17th_Earl_of_Derby ;
          dbp:parent ?frederick ;
          dbp:parent ?mother .

  # Identify the child who is a politician and has received the Commander of the Royal Victorian Order
  ?child a dbo:Politician ;
         dbp:parent ?frederick ;
         dbp:parent ?mother ;
         dbp:honoursReceived ?award .
  
  FILTER EXISTS { 
    ?award dbo:recipient ?child ;
           dbo:title dbr:Commander_of_the_Royal_Victorian_Order
  }

  # Find the father of this child
  ?father a dbo:Person ;
          dbp:spouse ?mother ;
          dbp:child ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,5,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Prince Faisal bin Hussein
  dbr:Faisal_bin_Hussein a dbo:Person ;
    dbo:spouse ?spouse .

  # Find children of Prince Faisal bin Hussein
  ?child dbo:parent dbr:Faisal_bin_Hussein .
  
  # Ensure the child is royalty
  ?child a dbo:Royalty .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
737,58,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Archduchess Margarete Sophie of Austria's parent
  ?margareteSophie dbo:parent ?parent .
  
  # Predecessor of Carl, Duke of Württemberg
  ?carl dbp:title ""Duke of Württemberg"" ;
        dbo:predecessor ?predecessor .

  # Child of the predecessor (who is also a royalty)
  ?predecessor dbo:child ?royaltyChild .
  
  # Child of Duke Philipp of Württemberg
  ?philipp dbp:title ""Duke of Württemberg"" ;
           dbo:child ?philippChild .

  # The child of the child we are looking for is a royalty and matches all conditions
  ?royaltyChild dbo:child ?childOfChild .
  
  FILTER(?parent = ?predecessor && ?predecessor = ?philipp)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,57,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantOfMadrid ?officeOfCommander ?conflict ?leaderOfCPR 
WHERE {
  # Manuel Pinto da Costa's involvement in military conflicts
  ?person dbr:Manuel_Pinto_da_Costa .
  
  # Find the military conflict he was involved in as a commander
  ?conflict dbo:commander ?person ;
           a dbo:MilitaryConflict .

  # Office of the Commander related to the conflict
  ?officeOfCommander dbp:relatedTo ?conflict ;
                     rdfs:label ?officeLabel .
  
  FILTER(CONTAINS(LCASE(?officeLabel), ""commander""))

  # Leader of Conservative Republican Party (Spain)
  ?party dbr:Conservative_Republican_Party_(Spain) .
  ?leaderOfCPR dbo:leader ?party ;
               a dbo:Politician .

  # Tenant of Madrid
  ?tenantOfMadrid dbo:officeHolder ?office ;
                  dbp:city ""Madrid""^^xsd:string ;
                  a dbo:OfficeHolder, dbo:Politician .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
756,5,train,Give me the leader of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?name WHERE {
  ?leader a dbo:Politician .
  ?leader dbo:country dbr:West_Germany .
  OPTIONAL { ?leader foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,12,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?eleonore a dbo:Person ;
            dbo:childOf dbr:Ferdinand_II,_Holy_Roman_Emperor ;
            dbo:spouse dbr:Eleonora_of_Austria,_Queen_of_Poland .
  ?eleonore dbo:parent ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
258,6,train,Give me the establishment of 1955-12-02 and alma mater of Eleonora Menicucci.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?establishment ?almaMater WHERE {
  # Find establishment founded on December 2, 1955
  ?establishment a dbo:Organization ;
                 dbo:foundingDate ""1955-12-02""^^xsd:date .

  # Find alma mater of Eleonora Menicucci
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,48,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?commander a dbo:Royalty ;
             dbo:occupation dbo:Commander ;
             dbo:event dbr:Siege_of_Mukha .

  # Identify the parent (likely father) of this commander
  ?parent dbo:child ?commander .
  
  # Find the child of this parent
  ?child dbo:parent ?parent .

  # Determine the father of Na'od, who is royalty and an office holder
  dbr:Na'od dbo:father ?naodFather ;
           a dbo:Royalty ;
           dbo:officeHolder true .
  
  # Ensure the child found is also the father of Na'od
  ?child = ?naodFather .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
38,4,train,"Give me the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person a dbo:OfficeHolder .
  ?person dbo:office ?office .
  ?office dbo:positionTitle ?title .
  FILTER(CONTAINS(LCASE(?title), ""commander"") || CONTAINS(LCASE(?title), ""general""))
  
  ?person dbo:memberOf ?organization .
  ?organization dbp:name ?orgName .
  FILTER(CONTAINS(LCASE(?orgName), ""korean war"") || CONTAINS(LCASE(?orgName), ""korean conflict""))

  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,2,2,1,1,3,2,20,0,0,42,0,0.0,0
103,22,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  ?episode dbo:starring ?actor .
  ?episode dbp:title ""Dispatches from Elsewhere"" .

  # Find the actor associated with The Shadow
  OPTIONAL { 
    ?shadowCharacter dbo:portrayedBy ?actor .
    ?shadowCharacter rdfs:label ""The Shadow""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
39,9,train,Give me the professional in Singer and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?otherProfession WHERE {
  ?person a dbo:Singer .
  ?person foaf:name ?name .
  
  # Assuming there's another profession property, replace `dbo:OtherProfession` with the actual class
  ?person a dbo:OtherProfession .

  OPTIONAL { 
    ?person dbp:profession ?otherProfession .
  }
}
ORDER BY ?name
LIMIT 10
```

Please note that you need to replace `dbo:OtherProfession` and `dbp:profession` with the actual DBpedia classes and properties relevant to the second profession you are interested in.",2,2,3,1,2,3,3,71,0,0,5422,0,0.0,0
386,21,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeName ?war1 ?war2 WHERE {
  # Find the individual who received the Golden Sword for Bravery
  ?person dbo:award dbr:Golden_Sword_for_Bravery .
  ?person foaf:name ?awardeeName .

  # Find wars associated with this person
  ?person dbo:participatedInWar ?war1 .

  # Find information about Karl Gustav von Baggovut
  ?karl a dbo:MilitaryPerson ;
        foaf:name ""Karl Gustav von Baggovut"" ;
        dbo:participatedInWar ?war2 .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,17,train,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .
  
  OPTIONAL { 
    ?character a dbo:FictionalCharacter ;
               dbo:name ""The Shadow""@en ;
               dbo:portrayedBy ?actor .
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
103,10,train,Give me the actor of Dispatches from Elsewhere and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?otherProfession WHERE {
  ?series a dbo:TVSeries ;
          foaf:name ""Dispatches from Elsewhere""@en .
  
  ?series dbo:starring ?actor .
  ?actor foaf:name ?actorName .

  OPTIONAL {
    ?actor dbo:profession ?otherProfession .
  }
}
ORDER BY ?actorName
LIMIT 10
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
295,12,train,Give me the native of the birth place of Victor Saville and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonBirthPlace WHERE {
  # Victor Saville's birthplace
  ?victorSaville a dbo:FilmDirector ;
                 dbp:birthPlace ?victorBirthPlace .
  
  # Writer of ""Boom Shack-A-Lak""
  ?song dbr:Boom_Shack-a-Lak ;
        dbo:lyricsBy ?writer .
  ?writer dbp:birthPlace ?writerBirthPlace .

  # Check if they share the same birthplace
  FILTER (?victorBirthPlace = ?writerBirthPlace)
  
  BIND(?victorBirthPlace AS ?commonBirthPlace)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
58,9,train,Give me the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Linda_Bruckheimer dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
353,30,train,Give me the father of William II of Sicily and child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:William_II_of_Sicily dbo:parent ?father .
  
  ?father dbo:childOf dbr:Roger_II_of_Sicily .

  ?father dbo:childOf ?grandChild .
  ?grandChild dbo:parent dbr:Alfonso_VI_of_León_and_Castile .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
19,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:profession ?profession . }
  FILTER EXISTS { ?person dbo:birthPlace ?place } # Assuming you want professionals from a specific place
  FILTER NOT EXISTS { ?person dbo:deathDate ?date } # To ensure they are currently active or notable
}
ORDER BY ?professional
LIMIT 10
```",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
628,34,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find GS9 members who are native of Florida
  ?gs9Artist a dbo:MusicalArtist ;
             dbo:nationality dbr:United_States_of_America ;
             dbo:birthPlace dbr:Florida .
  
  # Step 2: Identify associated musical artists with these GS9 members
  ?associatedArtist dbo:member ?gs9Artist .

  # Step 3: Find band members of the associated musical artist
  ?bandMember a dbo:MusicalArtist ;
              dbo:memberOf ?associatedArtist .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
347,53,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:SocietalEvent ;
         dbo:relatedEvent ?war .
  
  ?war dbo:participatingMilitaryForce dbr:Military_force_of_the_Algerian_War .

  ?eleonore dbp:father ?commander ;
            rdf:type dbr:Eleonore_of_Austria,_Queen_of_Poland .

  ?ceciliaRenata dbp:father ?grandFather .
  
  ?commander dbo:childOf ?grandFather .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
103,34,train,"Give me the professional in  and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?movieTitle WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ?actorName .
  ?person dbp:birthName ""Richard Grant Esterhuysen"" .

  ?film a dbo:Film ;
        dbo:starring ?person ;
        dbo:genre dbr:Television_series .

  ?film rdfs:label ?movieTitle .
}
ORDER BY ?actorName
LIMIT 10
```",4,5,5,3,2,3,3,71,0,0,13,0,0.0,0
263,23,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePerson WHERE {
  # Step 1: Find William Gayner's birthplace
  ?williamGayner a dbo:Person ;
                 dbp:birthPlace ?birthPlace .

  # Step 2: Identify Claude Bowes-Lyon's child
  ?claudeBowesLyon a dbo:Person ;
                   foaf:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne"" ;
                   dbo:child ?child .

  # Step 3: Find the parent of that child
  ?parent a dbo:Person ;
          dbo:child ?child .

  # Step 4: Identify the native of William Gayner's birthplace
  ?nativePerson a dbo:Person ;
                dbo:nativePlace ?birthPlace .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
39,28,train,Give me the professional in  and professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?sameProfessionPerson ?band WHERE {
  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion a dbo:MusicalArtist ;
                     dbo:occupation ?samConceptionProfession .

  # Find another person with the same profession as Sam Concepcion
  ?person a dbo:MusicalArtist ;
          dbo:occupation ?sameProfession .
  FILTER (?sameProfession = ?samConceptionProfession) .
  
  # Get the band associated with Bob Thompson (musician)
  dbr:Bob_Thompson_(musician) dbo:bandMember ?band .

  # Return results
  BIND(?person AS ?sameProfessionPerson)
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
345,2,train,"Give me the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?name WHERE {
  ?place a dbo:Place .
  ?place dbo:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""mitaka"") && CONTAINS(LCASE(?name), ""tokyo""))
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
687,25,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:managerTeam ?team .
  
  # Ensure the person is also a manager
  ?person dbo:manages ?managedTeam .

  # Connection to Sergio Agüero
  ?agüero a dbo:SoccerPlayer ;
          dbp:birthDate ""1988-06-02""^^xsd:date ;
          dbo:playsFor ?team .
  
  FILTER (?person != ?agüero)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
941,16,train,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Duchess Luise of Brunswick-Wolfenbüttel's spouse
  ?luise a dbo:Duchess ;
         dbo:spouse ?luisesSpouse .

  # Spouse of Duchess Luise (which is Duchess Luise herself)
  ?luisesSpouse dbo:spouse ?dualSpouse .
  
  # Duke Anthony Ulrich of Brunswick's child
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:child ?dukesChild .

  # The person we are looking for is both the dual spouse and a child of Duke Anthony Ulrich
  FILTER (?dualSpouse = ?dukesChild)
  
  # Ensure the person is royalty
  ?person a dbo:Royalty ;
          owl:sameAs ?dualSpouse .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
609,4,train,Who is the awardee of List of awards and nominations received by Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  dbr:Vince_Gilligan a dbo:Person .
  ?award dbo:recipient dbr:Vince_Gilligan .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
557,27,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Identify the movie ""High Society Blues""
  dbr:High_Society_Blues a dbo:Film .
  
  # Find actors associated with this movie
  ?movie dbo:starring ?actor .
  FILTER(?movie = dbr:High_Society_Blues) .

  # Determine producers linked to this movie
  ?movie dbo:producer ?producer .
}
```",3,5,4,3,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
492,8,train,Give me the death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?deathPlace WHERE {
  ?film a dbo:Film .
  ?film dbo:title ""The Sky Ranger"" .
  ?film dbo:starring ?actor .
  ?actor a dbo:Actor ;
         foaf:name ?actorName .

  OPTIONAL { 
    ?actor dbp:deathPlace ?deathPlace .
  }
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
39,34,train,Give me the professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer ?band WHERE {
  # Find the producer of Coke Studio Philippines
  ?cokeStudio a dbo:TelevisionShow .
  ?cokeStudio dbp:productionCompany ?company .
  ?company dbo:employee ?producer .
  
  # Find the band associated with Bob Thompson, musician
  ?bobThompson a dbo:MusicalArtist ;
              foaf:name ""Bob Thompson"" .
  ?band dbo:member ?bobThompson .

  # Return the producer and band
  ?producer a dbo:Person .
  ?band a dbo:Band .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
386,11,train,Give me the war of the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  ?person dbo:award dbr:Golden_Sword_for_Bravery .
  ?person dbo:militaryConflict ?war .
}",2,2,3,2,1,2,3,28,0,0,15,0,0.0,0
668,4,train,Who is the person born as Elorm Kabu Amenyah?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Elorm Kabu Amenyah"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
386,0,train,Give me the entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Russian_Empire .
}
LIMIT 10",1,1,2,1,1,2,3,28,0,10,87,0.0,0.0,0
386,1,train,Give me the war of Karl Gustav von Baggovut.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war .
}
ORDER BY ?war
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
816,35,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find movies with Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Find other actors in those movies
  ?movie dbo:starring ?actor .

  # Find Allan Arbus's children
  ?child dbp:parent dbr:Allan_Arbus .

  # Check if any actor is a parent of Allan Arbus's child
  ?actor dbp:parent ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,9,train,Give me the actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find the film ""Always"" (1989)
  ?film a dbo:Film ;
        dbo:title ""Always""@en ;
        dbo:releaseDate ?releaseDate .
  
  FILTER(YEAR(?releaseDate) = 1989)

  # Find actors in this film
  ?film dbo:starring ?actor .

  # Find Janusz Kamiński and his spouse
  ?janusz a dbo:Person ;
          foaf:name ""Janusz Kamiński""@en ;
          dbp:spouse ?spouse .
  
  # Match the actor with Janusz's spouse
  FILTER(?actor = ?spouse)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
531,30,train,"Give me the office of Mariano Rajoy and tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?partyRole WHERE {
  # Resource for Mariano Rajoy
  dbr:Mariano_Rajoy a dbo:Politician .

  # Office held by Mariano Rajoy
  OPTIONAL { 
    ?office dbo:holder dbr:Mariano_Rajoy .
    ?office dbp:name ?officeName .
  }

  # Role in Madrid
  OPTIONAL {
    ?madridOffice dbo:holder dbr:Mariano_Rajoy .
    ?madridOffice dbp:city ""Madrid""^^xsd:string .
    ?madridOffice dbp:name ?madridOfficeName .
  }
  
  # Office of the leader within the Conservative Republican Party (Spain)
  OPTIONAL {
    ?partyRole dbo:leader dbr:Mariano_Rajoy .
    ?partyRole dbp:name ""Conservative Republican Party (Spain)""^^xsd:string .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,33,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Identify T.I. as a musical artist and actor
  ?tI a dbo:MusicalArtist ;
      foaf:name ""T.I.""@en ;
      dbo:album ?album .

  OPTIONAL { 
    ?tI dbo:spouseOrPartner ?shelbyOaks .
    ?shelbyOaks foaf:name ""Shelby Oaks""@en .
  }

  # Find songs or musical works by T.I.
  ?song a dbo:Songs ;
        dbo:musicalArtist ?tI .

  # Determine albums that include these songs
  ?album dbo:track ?song .

  # Identify actors associated with those albums
  ?actor a dbo:Actor .
  ?actor dbo:actedIn ?album .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,56,train,"Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Glenn Youngkin
  { 
    ?youngkin a dbo:Person ;
              foaf:name ""Glenn Youngkin"" ;
              dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Awardee of Vince Gilligan (assuming we are looking for someone related to his awards)
  {
    ?gilliganAward dbr:Vince_Gilligan ;
                   dbo:recipient ?awardee .
    ?awardee a dbo:Person ;
             dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Author of the reference to ""El Deafo"" (assuming we are looking for an American author)
  {
    ?elDeafoReference dbr:El_Deafo ;
                      dbo:author ?author .
    ?author a dbo:Person ;
            dbo:nationality dbr:United_States ;
            dbo:birthPlace ?birthPlace .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,15,train,"Give me the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:givenBy dbr:United_States_Congress .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
}
ORDER BY ?award
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,2196,0,0.0,0
158,20,train,"Give me the person decedent at Switzerland and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  
  # Native of the administration under Alexander II, Grand Duke of Finland
  ?person dbo:birthPlace dbr:Grand_Duchy_of_Finland_under_Alexander_II .

  # Native of the Russian Empire
  ?person dbo:nationality dbr:Russian_Empire .

  # Decedent in Switzerland
  ?person dbo:deathPlace dbr:Switzerland .
  
  # Optional: Retrieve name for better identification
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
68,7,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?catherine dbo:parent ?father .
  ?isabella dbo:parent ?father .
  
  VALUES ?catherine { dbr:Catherine_of_Austria_(1507–1578) }
  VALUES ?isabella { dbr:Isabella_of_Portugal,_Queen_of_Spain_(1503–1539) }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
198,26,train,Give me the force of the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?force WHERE {
  # Identify Quincy Adams Gillmore's awards
  ?award a dbo:Award ;
         dbo:recipient dbr:Quincy_Adams_Gillmore .

  # Find awardees of those awards
  ?relatedAward a dbo:Award ;
               dbo:recipient ?awardee .

  # Check if the related award is connected to Quincy Adams Gillmore's award
  FILTER(?award != ?relatedAward)
  
  # Retrieve force-related information about the awardee
  OPTIONAL { ?awardee dbo:force ?force . }
}
ORDER BY ?awardee
LIMIT 10
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
159,55,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  ?work dbo:title ""Always the Love Songs"" .
  ?work dbo:author ?writer .

  # Identify commanders in the Russo-Polish War and their successors
  ?war dbo:name ""Russo-Polish War (1654–1667)"" .
  ?commander dbo:participatedInWar ?war ;
             a dbo:Politician ;
             dbo:officeHolder ?office .

  OPTIONAL { 
    ?successor dbo:succeededBy ?commander .
  }

  # Find the commander related to Jean Baptist, Comte d'Arco
  ?tvShow dbo:title ?title .
  ?societalEvent dbo:name ?eventName .
  ?jeanBaptist dbo:relatedTo ?tvShow ;
               dbo:relatedTo ?societalEvent .

  OPTIONAL {
    ?commander dbo:relatedTo dbr:Jean_Baptiste,_Comte_d'Arco .
  }
}",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
213,11,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of Cat Country (novel).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Chiang Ching-kuo entity
  dbr:Chiang_Ching-kuo dbo:child ?politician .
  
  # Politician who is a child of Chiang Ching-kuo
  ?politician a dbo:Politician ;
             dbo:spouse|dbo:partner ?catCountryLink .

  # Link to ""Cat Country"" novel
  ?catCountryLink dbp:subject dbr:Cat_Country .
  
  # Birthplace of the politician
  ?politician dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
871,29,train,"Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Person ;
          dbp:name ""Arthur Stanley"" ;
          dbp:parent ?father .

  # Victor Stanley (Royal Navy officer)
  ?victor a dbo:Person ;
          dbp:name ""Victor Stanley"" ;
          dbp:parent ?father .

  # Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             dbp:name ""Frederick Stanley, 16th Earl of Derby"" ;
             dbp:child ?grandchild .
  
  # The child of Frederick Stanley
  ?grandchild dbp:parent ?father .

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,26,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?war a dbo:MilitaryConflict ;
      a dbo:Event ;
      dbo:reference dbr:William_Bayne .
  
  ?war dbo:militaryForce ?militaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,529,0,0.0,0
293,57,train,"Give me the party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  VALUES ?annSothernBirthName { ""Ann Sothern"" } # Assuming we know her birth name is ""Ann Sothern""
  
  ?person dbp:birthName ?annSothernBirthName .
  
  ?film dbo:producer dbr:Nat_Levine ;
        dbo:starring ?person .
  
  ?spouse dbo:spouse ?person ;
          dbo:partyMember dbr:Republican_Party_(United_States) .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
158,14,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  
  # Person was native of Finland during Alexander II's administration
  ?person dbo:nationality dbr:Finnish_people .
  ?person dbo:birthPlace dbr:Finland .
  
  # Deceased in Switzerland
  ?person dbo:deathPlace dbr:Switzerland .

  # Optional: Filter by time period if available (e.g., birth year)
  OPTIONAL { ?person dbp:birthday ?birthday . }
  FILTER (?birthday >= ""1855-03-19""^^xsd:date && ?birthday <= ""1881-10-17""^^xsd:date)

  # Get the name of the person
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
513,10,train,"Give me the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  # Identify George Savage as a politician
  dbr:George_Savage_(politician) a dbo:Politician .
  
  # Find the political party associated with him
  OPTIONAL { 
    dbr:George_Savage_(politician) dbo:memberOfParty ?party .
  }
  
  # Ensure the entity is both an organization and a political party
  ?party a dbo:PoliticalParty ;
        a dbo:Organization .

  # Retrieve leaders of that party
  ?party dbp:leader ?leader .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
668,8,train,Give me the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Joey_B_ (dbo:birthName) ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
628,1,train,Give me the person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?alias WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Ackquille Jean Pollard"" .
  OPTIONAL { ?person foaf:name ?alias . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,17,train,"Give me the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:Artist .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  OPTIONAL { ?person foaf:name ?name . }
  ?person dbp:birthName ?birthName .
}
ORDER BY ?name
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
159,0,train,Give me the successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?yuriiKhmelnytsky a dbo:Hetman ;
                    dbo:succeededBy ?successor .
  FILTER (str(?yuriiKhmelnytsky) = ""Yurii_Khmelnytsky"")
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
943,57,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Na'od's father is Zara Yaqob
  dbr:Na'od dbo:parent dbr:Zara_Yaqob .
  
  # Zara Yaqob's father (Na'od's grandfather) is Dawit I
  dbr:Zara_Yaqob dbo:parent ?grandfather .
  
  # Dawit I is the child of ?
  ?ancestor dbo:child dbr:Dawit_I .
  
  # The alter ego of Lamont Cranston is ""The Shadow""
  dbr:The_Shadow dbp:alterEgo dbr:Lamont_Cranston .

  # Find a connection between Dawit I and The Shadow
  OPTIONAL { ?grandfather rdfs:label ?label FILTER (CONTAINS(LCASE(?label), ""shadow"")) }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,12,train,Give me the force of William Tennant (Royal Navy officer) and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?war WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""William Tennant"" .
  OPTIONAL { ?person dbo:rank ?force . }
  OPTIONAL { 
    ?event dbo:commander ?person ;
           dbo:participatedInWar ?war .
    FILTER (str(?event) = ""Sinking of Prince of Wales and Repulse"")
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,19,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military conflict involving the 30th (Cambridgeshire) Regiment of Foot
  ?conflict dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  
  # Find the Battle of Fort Royal and its commander
  ?battle dbr:Battle_of_Fort_Royal ;
         dbo:commander ?commander .

  # Ensure the same commander is involved in both events
  FILTER(?conflict = ?battle)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
628,3,train,"Give me the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?gs9 a dbo:FolkloreGroup .
  ?gs9 dbp:members ?member .
  
  ?member a dbo:MusicalArtist ;
          dbo:genre dbr:Hip_hop_music .

  OPTIONAL { ?member foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
756,46,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the successor season of VfL Bochum's 2006-07 season
  ?season dbo:sportsTeam dbr:VfL_Bochum .
  ?season dbo:seasonStartYear ?startYear .
  FILTER (?startYear = ""2006""^^xsd:gYear)
  
  # Find the next season (successor)
  ?nextSeason dbo:predecessor ?season .
  ?nextSeason dbo:sportsTeam dbr:VfL_Bochum .

  # Ensure VfL Bochum is a sports club, organisation, and soccer club
  ?club a dbo:SoccerClub ;
        dbo:country dbr:Germany ;
        dbo:member ?player .

  # Find the manager of the player in that season
  ?manager dbo:managedTeam ?team .
  ?team dbo:sportsTeam dbr:VfL_Bochum .
  ?team dbo:season ?nextSeason .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
39,21,train,Give me the professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?samProfession ?bobBand WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .
  
  # Bob Thompson's band
  dbr:Bob_Thompson_(musician) dbo:band ?bobBand .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
628,19,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Identify Bobby Shmurda by his birth name
  ?bobby a dbo:MusicalArtist ;
         dbp:birthName ""Ackquille Jean Pollard"" .

  # Find band members associated with Bobby Shmurda
  ?association dbo:musicalArtist ?bobby ;
               dbo:bandMember ?bandMember .
  
  # Ensure the band member is also a musical artist
  ?bandMember a dbo:MusicalArtist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,38,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?tvShow dbo:genre dbr:Military_drama .
  ?tvShow dbo:character ?person .
  ?person foaf:name ""Jean Baptist, Comte d'Arco""@en .

  OPTIONAL { ?tvShow dbp:basedOn ?event . }
  OPTIONAL { ?event dbo:participatedIn ?war . }
  OPTIONAL { ?war dbo:commander ?commander . }

  ?writer dbo:work dbr:Always_the_Love_Songs .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
23,11,train,Give me the party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  dbr:Sofía_Petro dbo:father ?father .
  ?father dbo:politicalParty ?party .
}
```",2,2,3,2,1,2,3,28,0,0,6,0,0.0,0
293,13,train,"Give me the spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?film a dbo:Film .
  ?film dbp:title ""1,000 Dollars a Minute"" .
  ?film dbo:starring ?actor .
  ?actor dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
263,18,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find Mary Elphinstone, Lady Elphinstone's parent
  OPTIONAL {
    dbr:Mary_Elphinstone_Lady_Elphinstone dbo:childOf ?parent .
  }
  
  # Find Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne's child
  OPTIONAL {
    dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
    
    # Find the parent of that child
    ?child dbo:parent ?parent .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
756,58,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of Theodor Heuss.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?vflManager ?clubManager WHERE {
  # Step 1: Identify Theodor Heuss's country of administration
  dbr:Theodor_Heuss dbo:country dbr:Germany .

  # Step 2: Find a sports manager born on 1968-08-26 and native of Germany
  ?manager a dbo:SportsManager ;
          dbp:birthday ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:Germany .
  
  # Step 3: Determine the soccer club managed by this person during a specific season
  ?season a dbo:SoccerClubSeason ;
          dbo:manager ?manager ;
          dbo:sportsTeam ?team .

  ?team a dbo:SoccerClub .

  # Step 4: Retrieve the manager of VfL Bochum
  ?vflSeason a dbo:SoccerClubSeason ;
             dbo:manager ?vflManager ;
             dbo:sportsTeam dbr:VfL_Bochum .
  
  OPTIONAL { ?clubManager dbo:manager ?season . }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
159,33,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Find Yurii Khmelnytsky
  ?yuriikhmelnytsky a dbo:Writer ;
                   foaf:name ""Yurii Khmelnytsky""@en .

  # Find his successor
  ?successor dbo:succeededBy ?yuriikhmelnytsky ;
            a dbo:Writer .

  # Ensure the successor is associated with George Ducas
  ?association dbo:associatedWith dbr:George_Ducas .
  ?association dbo:writer ?successor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
39,45,train,"Give me the professional in Singer and professional in  and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?singerName ?bandName WHERE {
  # Identify the resource for Bob Thompson (musician)
  dbr:Bob_Thompson_(musician) a dbo:MusicalArtist .
  
  # Get his professional name
  OPTIONAL { 
    dbr:Bob_Thompson_(musician) dbp:profession ?singerName .
  }
  
  # Find bands he is associated with
  OPTIONAL {
    ?band a dbo:Band ;
          dbo:member dbr:Bob_Thompson_(musician) .
    ?band foaf:name ?bandName .
  }
}
```",5,6,6,3,3,3,3,71,0,0,3,0,0.0,0
905,25,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?child WHERE {
  # Find Charles Martel of Anjou's parent
  ?charles a dbo:Person ;
           dbp:fatherOrMother ?parent .

  # Ensure the parent has children who are royalty
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .

  # Connect Béla IV of Hungary to Charles Martel of Anjou through lineage
  ?bela dbr:Béla_IV_of_Hungary ;
       dbp:child ?intermediate .
  
  ?intermediate dbp:child ?charles .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Give me the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  dbr:Dawid_Olejniczak dbo:residence ?location .
  ?location a dbo:Country .
  ?location foaf:name ?country .
}
```",1,2,2,1,1,3,2,20,0,2,1,0.0,0.0,0
595,53,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?gulfWar a dbo:SocietalEvent ;
           dbo:associatedDisease dbr:Gulf_War_syndrome ;
           dbo:relatedToMilitaryConflict dbr:Gulf_War .

  ?rumsfeld a dbo:Person ;
            dbo:roleInMilitaryConflict ?gulfWar ;
            foaf:name ""Donald Rumsfeld""@en .

  ?book a dbo:Book ;
        dbp:title ""Back to Work"" ;
        dbo:author dbr:Robert_Reich .

  ?hillaryClinton a dbo:Politician ;
                  dbo:spouse dbr:Bill_Clinton ;
                  dbo:writtenWork ?book .

  ?billClinton a dbo:Person ;
               foaf:name ""Bill Clinton""@en ;
               dbo:spouse ?hillaryClinton .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
263,20,train,"Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find Mary Frances Bowes-Lyon and her parent
  ?mary a dbo:Person ;
        dbp:birthName ""Hon. Mary Frances Bowes-Lyon"" ;
        dbo:parent ?parent .

  # Find Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and his parent
  ?patrick a dbo:Person ;
           dbp:birthName ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne"" ;
           dbo:parent ?parent .

  # Ensure the parent is native to Middlesex
  ?parent dbo:nativePlace dbr:Middlesex .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,36,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of Uncle Murda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeRegion WHERE {
  ?award a dbo:Award .
  ?award dbo:recipient ?band .
  ?band dbo:member ?person .
  ?person foaf:name ""Uncle Murda"" .

  ?award dbo:location ?region .
  ?region rdf:type dbo:StateOrTerritory ;
          dbo:country dbr:United_States_of_America .

  ?person dbo:nativePlace ?nativeRegion .
  ?nativeRegion rdf:type dbo:StateOrTerritory ;
                dbo:country dbr:United_States_of_America .

  FILTER(?region != dbr:New_York_(state)) # Ensure the award is not from New York
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
119,9,train,"Who is the commander in the force, that is a television show and a military conflict, of Maria I of Portugal?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find military conflicts involving Maria I of Portugal
  ?conflict a dbo:MilitaryConflict ;
            dbo:participatedIn ?person1 .
  
  # Ensure the person is Maria I of Portugal
  ?person1 foaf:name ""Maria I of Portugal""@en .

  # Find commanders in these conflicts
  ?conflict dbo:commander ?commander .

  # Find television shows related to Maria I of Portugal
  OPTIONAL {
    ?show a dbo:TelevisionShow ;
          dbo:subject dbr:Maria_I_of_Portugal .
    
    # Find commanders in these shows
    ?show dbo:character ?character .
    ?character dbo:portrayedBy ?actor .
    ?actor dbo:role ?commanderRole .
  }
}
```",2,4,3,2,1,3,2,20,0,0,75,0,0.0,0
158,15,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Russian Empire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  ?sandro a dbo:Person ;
          foaf:name ""Sandro Bertaggia"" ;
          dbo:birthPlace ?birthCountry .

  # Find people native to the Russian Empire
  ?person a dbo:Person ;
          dbo:nationality dbr:Russian_Empire ;
          dbo:deathPlace ?deathPlace .

  # Match death place with Sandro's birthplace
  FILTER (?deathPlace = ?birthCountry)

  # Return the decedent
  BIND(?person AS ?decedent)
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
119,50,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Spain ;
         dbo:leader ?tenant .
  
  ?tenant dbo:nationality dbr:SpanishCitizenship .

  FILTER (STRSTARTS(STR(?party), ""http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party""))
}
```",5,8,6,3,2,3,3,71,0,0,23,0,0.0,0
513,15,train,Give me the residence of Doug Beattie and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence ?award WHERE {
  # Doug Beattie's residence
  OPTIONAL {
    dbr:Doug_Beattie dbo:currentResidence ?residence .
  }
  
  # George Hamilton Cameron's awards
  OPTIONAL {
    dbr:George_Hamilton_Cameron dbo:honoraryAward ?award .
  }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
39,2,train,Give me the band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Bob Thompson"" .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
492,20,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace WHERE {
  VALUES (?name) { 
    (dbr:Sal_Mineo)
    (dbr:Color_Me_Dead_(film)#CastAndCrew)
    (dbr:Reed_Howes)
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
38,6,train,"Give me the author of Promise Me, Dad and author of Promises to Keep (Biden book).","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  VALUES ?book { 
    dbr:Promise_Me,_Dad 
    dbr:Promises_to_Keep_(Biden_book)
  }
  
  ?book dbo:author ?author .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
38,5,train,"Give me the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:WrittenWork .
  ?work dbo:author dbr:Joe_Biden .
}
```",1,3,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
293,28,train,"Give me the party member of the ruling party in Central, Louisiana and person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the ruling party in Central, Louisiana
  ?location a dbo:PopulatedPlace ;
            dbo:country dbr:United_States ;
            rdfs:label ""Central, Louisiana""@en .
  
  ?governorship dbo:governingBody ?government ;
                dbo:officeHolder ?person ;
                dbo:politicalParty ?party .

  # Find the person born as Harriette Arlene Lake
  ?harriette a dbo:Person ;
             dbp:birthName ""Harriette Arlene Lake"" ;
             dbo:spouse ?rogerPryor .
  
  # Identify Roger Pryor (actor)
  ?rogerPryor a dbo:Actor ;
              foaf:name ""Roger Pryor""@en .

  # Check if the person is a member of the ruling party
  OPTIONAL { ?harriette dbo:partyMemberOf ?party . }
  
  FILTER(?party = ?party)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
78,9,train,Give me the band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Find band members of The Alan Parsons Project
  ?person dbo:musicArtist dbr:The_Alan_Parsons_Project .
  
  # Check if the person is associated with Billy Lyall
  OPTIONAL { 
    ?association dbp:associatedBandMember ?person ;
                 dbp:associatedPerson dbr:Billy_Lyall .
  }
  
  FILTER EXISTS {
    ?association dbp:associatedPerson dbr:Billy_Lyall .
  }

  # Return the band member's name
  ?person foaf:name ?bandMember .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
687,20,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player1 ?player2 WHERE {
  # Find a player associated with Juan Carlos Molina (footballer)
  ?molina a dbo:FootballPlayer ;
          foaf:name ""Juan Carlos Molina"" .
  
  ?team dbo:member ?player1 .
  ?molina dbo:playsFor ?team .

  # Find an actor who is also a soccer player and athlete in ""All or Nothing: Manchester City""
  ?actor a dbo:SoccerPlayer, dbo:Athlete ;
         foaf:name ?name ;
         dbp:appearanceIn dbr:All_or_Nothing:_Manchester_City .
  
  ?actor dbo:playsFor ?team2 .
  ?player2 dbo:playsFor ?team2 .

}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,38,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?leaderOffice WHERE {
  # Find the commander involved in the Central African Republic Civil War
  ?person dbo:officeHolder ?office .
  ?office dbo:positionName ?commanderOffice .
  ?person dbo:partyAffiliation dbr:Central_African_Republic_Civil_War .

  # Ensure the person is a politician
  ?person a dbo:Politician .

  # Find the leader of the Conservative Republican Party (Spain)
  ?leader dbo:officeHolder ?partyOffice .
  ?partyOffice dbo:positionName ?leaderOffice .
  ?leader dbo:partyAffiliation dbr:Conservative_Republican_Party_(Spain) .

  # Ensure the leader is a politician
  ?leader a dbo:Politician .

  # Link both roles to the same person if needed, or keep them separate
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
68,18,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Maximilian I and his children
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # Philip I of Castile's father
  dbr:Philip_I_of_Castile dbo:father ?father .

  # Find the child who is also a father to Philip I of Castile
  FILTER (?child = ?father)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,21,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of Pablo Aimar.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  ?athlete a dbo:Athlete .
  ?athlete dbo:birthday ""1955-02-22""^^xsd:date .

  ?team dbo:member ?athlete ;
        dbo:member dbr:Pablo_Aimar .

}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
412,2,train,Give me the war of Konstantinos Ventiris.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Konstantinos Ventiris""@en .
  OPTIONAL { 
    ?person dbo:participatedInWar ?war .
  }
}
```",1,1,2,1,1,2,3,28,0,0,10,0,0.0,0
103,54,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find the movie that is also a television show with Richard E. Grant
  ?movie a dbo:Film ;
         dbo:starring dbr:Richard_E._Grant ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionShow .

  # Find actors in this movie/TV show
  ?actor dbo:starring ?movie .

  # Find the actor who is also a politician and appears in ""Ab Kya Hoga""
  ?politicianActor dbo:starring dbr:Ab_Kya_Hoga ;
                   a dbo:Actor, dbo:Politician .
  
  # Get professions of this actor
  ?profession1 dbo:agent ?politicianActor ;
               a dbo:Occupation .

  ?profession2 dbo:agent ?actor ;
               a ?profession1 .

}
```",6,8,7,3,3,3,3,71,0,0,13,0,0.0,0
723,2,train,Give me the reference to Nothing to Gein.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resource WHERE {
  ?resource rdfs:label ""Nothing to Gein""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
103,27,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?character a dbo:ComicsCharacter .
  ?character rdfs:label ""The Shadow""@en .
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
  ?alterEgo dbo:profession ?professional .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
628,48,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Step 1: Identify GS9 member who is an artist and musical artist
  ?gs9Artist a dbo:MusicalArtist ;
             dbo:memberOf dbr:GS9 ;
             dbo:nativePlace dbr:Puerto_Rico .

  # Step 2: Find associated musical artists of this GS9 member
  ?associatedArtist dbo:bandMember ?gs9Artist .
  
  # Step 3: Get band members of the associated musical artist
  ?associatedArtist dbo:bandMember ?bandMember .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
213,3,train,"Who is the child, that is a politician, of Chiang Ching-kuo?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Chiang_Ching-kuo dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child a dbo:Politician .
}
```",1,2,2,1,1,3,2,20,0,1,1,0.0,0.0,0
557,41,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Producer of a work by Cora Sue Collins
  ?collinsWork dbo:actor dbr:Cora_Sue_Collins .
  ?collinsWork dbo:producer ?producer .

  # Producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  # Producer associated with The Shadow
  OPTIONAL { 
    ?shadowWork dbo:title ""The Shadow"" .
    ?shadowWork dbo:producer ?producer .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,45,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?georgeDucas ?commanderInWar ?tvShow ?societalEvent ?militaryForce ?successor WHERE {
  # Reference to George Ducas
  ?georgeDucas a dbo:Person ;
               foaf:name ""George Ducas""@en .

  # Commander in the war (Battle of Vienna)
  ?commanderInWar a dbo:MilitaryPerson ;
                  dbo:participatedIn dbr:Battle_of_Vienna ;
                  foaf:name ?nameCommander .

  # Television show
  ?tvShow a dbo:TelevisionSeries ;
          foaf:name ?nameTvShow .

  # Societal event
  ?societalEvent a dbo:Event ;
                 foaf:name ?nameSocietalEvent .

  # Military force of Battle of Vienna
  ?battle dbr:Battle_of_Vienna .
  ?battle dbo:participatingMilitaryUnit ?militaryForce .

  # Successor of Yurii Khmelnytsky
  ?yuriiKhmelnytsky a dbo:Person ;
                    foaf:name ""Yurii Khmelnytsky""@en .
  ?successor a dbo:Person ;
             dbo:succeededBy ?yuriiKhmelnytsky ;
             foaf:name ?nameSuccessor .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,27,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Step 1: Identify USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Step 2: Find diseases and societal events related to the owner
  OPTIONAL { ?disease dbo:relatedTo ?owner . }
  OPTIONAL { ?event dbo:relatedTo ?owner . }

  # Step 3: Identify a commander in war related to these diseases/societal events
  ?commander dbo:participatedInWar ?war .
  ?war dbo:hasDisease ?disease .
  ?war dbo:hasSocietalEvent ?event .

  FILTER(?disease != UNDEF && ?event != UNDEF)
}
```",3,5,4,3,1,3,3,71,0,0,18,0,0.0,0
737,26,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?greatGrandchild WHERE {
  # First generation (Alexander of Württemberg)
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbp:birthday ?birthday .
  
  FILTER(YEAR(?birthday) = 1804 && MONTH(?birthday) <= 12)

  # Second generation (child of Alexander)
  ?child dbo:parent ?alexander ;
         a dbo:Person .

  # Third generation (grandchild of Alexander)
  ?grandchild dbo:Parent ?child ;
              a dbo:Person .

  # Fourth generation (great-grandchild of Alexander)
  ?greatGrandchild dbo:parent ?grandchild ;
                   a dbo:Person .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
472,16,train,Give me the territory administered from Copenhagen and administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory ?mayor WHERE {
  ?copenhagen a dbo:City ;
              dbo:administrativeUnit ?territory .
  
  OPTIONAL { 
    ?schleswig dbo:mayor ?mayor .
    FILTER (CONTAINS(LCASE(STR(?schleswig)), ""duchy of schleswig""))
  }
  
  FILTER (CONTAINS(LCASE(STR(?copenhagen)), ""copenhagen""))
}
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,11,train,Give me the reference to the real name of Peter IV of Aragon and child of Alfonso IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Peter IV of Aragon""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child foaf:name ""Alfonso IV of Aragon""@en .
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
297,2,train,"Give me the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Little_Hat_Jones dbo:birthPlace ?birthPlace .
}
```",1,2,2,1,1,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
782,60,train,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName WHERE {
  # Find Kim Wilson and his band
  ?kim a dbo:MusicalArtist ;
      foaf:name ""Kim Wilson"" ;
      dbo:memberOf ?band .
  
  # Get the birth name of Kim Wilson
  OPTIONAL { ?kim dbp:birthName ?kimBirthName . }
  
  # Find Nick Curran and his band
  ?nick a dbo:MusicalArtist ;
        foaf:name ""Nick Curran"" ;
        dbo:memberOf ?band .
  
  # Get the birth name of Nick Curran
  OPTIONAL { ?nick dbp:birthName ?nickBirthName . }
  
  # Return the band's real name (if available)
  ?band dbp:officialName ?bandName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
89,23,train,Give me the child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Minye_Kyawswa dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,3,0,2,1.0,0.6,0.7499999999999999
905,26,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent WHERE {
  # Step 1: Identify Maria of Bytom and her spouse
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  ?spouse dbo:spouse ?maria ;
          foaf:name ?spouseName .

  # Step 2: Determine the spouse's father
  ?father dbo:child ?spouse ;
          foaf:name ?fatherName .

  # Step 3: Find the father's parents, focusing on royalty
  ?grandparent dbo:child ?father .
  
  OPTIONAL { ?grandparent a dbo:Monarch . }
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
375,15,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18 and parent of Kate Dimbleby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 2020 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)
  
  ?parent dbp:children dbr:Kate_Dimbleby .
  ?parent owl:sameAs ?person .

  ?work dbo:type [ a dbo:Film ; a dbo:TelevisionShow ] .
  ?work dbo:author ?author .
  ?author owl:sameAs ?person .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
816,32,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find movies featuring Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Ensure the movie is a work
  ?movie a dbo:Film .

  # Find other actors in the same movie
  ?movie dbo:starring ?actor .
  
  # Connect the movie to a photographer (as a parent or related entity)
  OPTIONAL { 
    ?movie dbo:director ?director .
    ?director dbp:profession dbr:Photographer .
  }
}
```",4,5,5,2,2,3,3,71,0,47,1,0.0,0.0,0
468,2,train,"Give me the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
}
```",1,2,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
353,8,train,Who is the child of Alfonso VI of León and Castile?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Alfonso_VI_of_León_and_Castile dbo:spouse ?parent .
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,1,0,2,1.0,0.3333333333333333,0.5
399,7,train,Give me the professional in Singer and band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?singerRole ?bandMember WHERE {
  ?person dbp:birthName ""Emilia Yancheva Valeva""@en .
  
  # Check if the person is a singer
  OPTIONAL { 
    ?person dbo:singer ?singerRole .
    FILTER (isLiteral(?singerRole))
  }
  
  # Check if the person is a band member
  OPTIONAL {
    ?person dbo:bandMember ?bandMember .
    FILTER (isLiteral(?bandMember))
  }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
492,2,train,Give me the death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  dbr:Sal_Mineo dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
198,8,train,"Give me the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Henry_Clay_Lewis a dbo:Person .
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
  ?birthPlace dbo:country dbr:United_States_of_America .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
706,5,train,Who is the actor of Akaler Shandhaney?,SELECT ?result WHERE { <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  dbr:Akaler_Shandhaney dbo:starring ?cast .
  ?cast a dbo:Actor .
  ?cast foaf:name ?actor .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
595,10,train,Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?commander WHERE {
  # Find the spouse of Hillary Clinton
  OPTIONAL {
    dbr:Hillary_Clinton dbo:spouse ?spouse .
  }
  
  # Find the commander during the Third Taiwan Strait Crisis
  OPTIONAL {
    dbr:Third_Taiwan_Strait_Crisis dbo:commander ?commander .
  }
}
```",2,2,3,1,2,3,3,71,1,17,0,0.05555555555555555,1.0,0.10526315789473684
295,13,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""Steven Kapur""@en .
  
  ?work dbo:composer ?artist ;
        a dbo:MusicalWork .

  OPTIONAL { 
    ?work dbo:lyricist ?writer .
  }
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
353,56,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of William II of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Constance of Burgundy and her spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Child of the spouse (grandchild of Constance)
  ?spouseChild dbo:parent ?spouse .
  ?spouseChild a dbo:Person .

  # Child of the child of the spouse (great-grandchild of Constance, who is royalty and father of William II of Sicily)
  ?childOfChild dbo:parent ?spouseChild .
  ?childOfChild a dbo:Royalty .
  ?childOfChild dbp:fatherOf dbr:William_II_of_Sicily .

  # Parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRoger .

  # Ensure the child of the child is also a child of this parent
  ?childOfChild dbo:parent ?parentOfRoger .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,44,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in Photographer and parent of the child of Allan Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Actor in the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .

  # This actor is a child of Allan Arbus
  ?actor dbo:childOf dbr:Allan_Arbus .

  # This actor has a child who is a professional photographer
  ?actor dbo:parentOf ?photographerChild .
  ?photographerChild dbo:occupation dbr:Photography .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
38,7,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book WHERE {
  ?book a dbo:Book .
  ?book dbo:author dbr:Joe_Biden .
  ?book rdf:type dbo:WrittenWork .
  ?book dbo:country dbr:United_States .
}
ORDER BY ?book
LIMIT 10
```",2,6,3,2,1,3,2,20,0,1,1,0.0,0.0,0
731,3,train,Who is the awardee of Commander of the Order of the British Empire?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbp:orderOfTheBritishEmpire ""Commander"" .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,853,0,0.0,0
159,8,train,"Give me the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tvShow ?event WHERE {
  ?person foaf:name ""Jean Baptist, Comte d'Arco"" .
  
  OPTIONAL { 
    ?association dbo:associatedWith ?tvShow .
    ?tvShow a dbo:TelevisionSeries .
  }
  
  OPTIONAL {
    ?association dbo:relatedTo ?event .
    ?event a dbo:SocietalEvent .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  dbr:Álvaro_Quirós dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?country)
}
```",2,3,3,2,1,3,3,71,0,0,216,0,0.0,0
311,6,train,Give me the associated musical artist of Filthy Friends and band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?band a dbo:Band ;
        dbo:member ?person .
  
  FILTER (?band = dbr:Filthy_Friends)
  
  OPTIONAL { 
    ?person dbo:associatedMusicalArtist ?artist .
    FILTER (?artist = dbr:Mark_Eitzel) 
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,39,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?name ?birthPlace WHERE {
  {
    ?person a dbo:Writer .
    ?person foaf:name ""Cece Bell"" .
    ?person dbo:nationality dbr:United_States .
    ?person dbo:work ?work .
    ?work rdfs:label ""El Deafo""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    ?person a dbo:Person .
    ?person foaf:name ""Glenn Youngkin"" .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,8,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Prince_Faisal_bin_Hussein a dbo:Person .
  OPTIONAL { 
    dbr:Prince_Faisal_bin_Hussein dbo:spouse ?spouse . 
    ?spouse dbo:child ?parent .
  }
  UNION
  OPTIONAL { 
    dbr:Prince_Faisal_bin_Hussein dbp:father ?parent .
  }
  UNION
  OPTIONAL { 
    dbr:Prince_Faisal_bin_Hussein dbp:mother ?parent .
  }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
39,42,train,"Give me the professional in  and professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Query for Sam Concepcion's profession and band membership
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?band WHERE {
  dbr:Sam_Concepcion a dbo:MusicalArtist .
  OPTIONAL { dbr:Sam_Concepcion dbo:occupation ?profession . }
  OPTIONAL { 
    ?memberOf dbo:member dbr:Sam_Concepcion ;
              dbo:name ?band .
  }
}

# Query for the musical artist born as Robert Lamar Thompson
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist ;
          dbp:birthName ""Robert Lamar Thompson""@en .
  ?person foaf:name ?artist .
}
```",5,6,6,2,3,3,3,71,0,0,4,0,0.0,0
213,13,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childBirthPlace WHERE {
  ?parent a dbo:Person .
  ?parent dbo:deathPlace dbr:Taipei .

  ?parent dbo:child ?child .
  ?child a dbo:Politician .

  ?child dbo:birthPlace ?childBirthPlace .
}
```",3,4,4,3,1,3,2,20,5,12,0,0.29411764705882354,1.0,0.45454545454545453
258,4,train,Give me the birth name of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Eleonora_Menicucci a dbo:Person .
  OPTIONAL { dbr:Eleonora_Menicucci dbp:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
59,1,train,Give me the manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:Hartlepool_United_F.C. dbo:manager ?person .
  ?person foaf:name ?manager .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
375,21,train,Give me the entity in Japan and war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?name WHERE {
  # Toyotomi Hidenaga's involvement in wars
  OPTIONAL { 
    ?hidenaga dbo:spouseOrPartner dbr:Toyotomi_Hidenaga .
    ?hidenaga dbo:child dbr:Toyotomi_Hideyoshi .
    ?hidenaga dbo:participatedIn ?entity .
    ?entity a dbo:MilitaryConflict ;
            rdfs:label ?name .
  }
  
  # Toyotomi Hideyoshi's involvement in wars
  OPTIONAL { 
    ?hideyoshi dbo:child dbr:Toyotomi_Hideyoshi .
    ?hideyoshi dbo:participatedIn ?entity .
    ?entity a dbo:MilitaryConflict ;
            rdfs:label ?name .
  }
  
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
756,18,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  ?vitesseTeam a dbo:SoccerClub ;
               dbo:season ?season .
  ?season dbo:startDate ?start ;
          dbo:endDate ?end .
  FILTER (YEAR(?start) = 2020 && YEAR(?end) = 2021)
  ?vitesseTeam dbo:manager ?manager .

  # Manager's nationality
  ?manager dbo:nationality dbr:West_Germany .

  # Managed VfL Bochum
  ?bochumTeam a dbo:SoccerClub ;
              dbo:manager ?manager .
  ?bochumTeam rdfs:label ""VfL Bochum""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
159,53,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Find Jean Baptist, Comte d'Arco's successor in a war context
  ?jeanBaptist dbo:role ""commander"" .
  ?jeanBaptist dbo:involvement [ 
    a dbo:MilitaryConflict ;
    dbo:participant ?war .
  ] .

  # Find Michał Kazimierz Pac's military conflict
  ?michaPac dbo:role ""commander"" .
  ?michaPac dbo:involvement [ 
    a dbo:MilitaryConflict ;
    dbo:participant ?force .
  ] .

  # Link the successor to George Ducas
  ?successor dbo:succeededBy ?jeanBaptist .
  ?successor dbo:relatedTo dbr:George_Ducas .

  # Ensure the successor is also a politician and office holder
  ?successor a dbo:Politician ;
             dbo:officeHolder true .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
419,3,train,"Who is the awardee, that is australian and a scientist, of Australian Laureate Fellowship?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?awardee a dbo:Scientist .
  ?awardee dbo:nationality dbr:Australia .
  ?award dbo:recipient ?awardee ;
         rdfs:label ""Australian Laureate Fellowship""@en .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
557,57,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?movieTitle ?producerName WHERE {
  # Find movies (works) of Janet Gaynor and their producers
  ?movie a dbo:Film ;
         dbo:starring dbr:Janet_Gaynor ;
         dbo:director ?director .
  
  OPTIONAL { 
    ?movie dbo:productionCompany ?company .
    ?company dbo:founder ?producer .
    ?producer foaf:name ?producerName .
  }
  
  # Find the actor of ""Johnny Doughboy"" and their works' producers
  dbr:Johnny_Doughboy dbo:starring ?actor .
  ?work a dbo:Film ;
        dbo:starring ?actor .
  
  OPTIONAL {
    ?work dbo:productionCompany ?company2 .
    ?company2 dbo:founder ?producer2 .
    ?producer2 foaf:name ?producerName .
  }
  
  # Bind movie titles
  ?movie rdfs:label ?movieTitle .
  
  FILTER (lang(?movieTitle) = 'en')
}
ORDER BY ?movieTitle
LIMIT 10
```",6,9,7,3,3,3,3,71,0,10,1,0.0,0.0,0
353,1,train,Give me the father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:William_II_of_Sicily dbo:parent ?father .
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
87,1,train,Give me the spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
756,53,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Thomas Letsch as a manager
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch"" ;
          dbo:occupation dbo:SoccerManager .

  # Manager of the player in VfL Bochum successor season
  ?player a dbo:FootballPlayer ;
          dbo:playsFor ?club .
  
  ?club dbp:succeededBy ?successorClub ;
        rdfs:label ""VfL Bochum""@en .

  ?season a dbo:SoccerSeason ;
          dbo:team ?successorClub ;
          dbo:manager ?letsch .

  # Manager native of West Germany
  ?letsch dbo:nationality dbr:West_Germany .

  # Get the manager's name
  ?letsch foaf:name ?managerName .
}
```",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
80,34,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify the author of ""Smartbomb""
  ?book a dbo:Book .
  ?book dbp:title ""Smartbomb"" .
  ?book dbo:author ?author .

  # Step 2: Find movies related to this author
  ?movie dbo:starring ?actor .
  ?movie dbo:director ?director .
  ?director foaf:name ?authorName .
  
  # Ensure the director is the same as the book's author
  FILTER (?author = ?director)

  # Step 3: Retrieve actors who are also musical artists
  ?actor a dbo:MusicalArtist .
}
```",4,4,5,3,2,3,3,71,0,0,7802,0,0.0,0
737,45,train,"Give me the predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Carl, Duke of Württemberg
  ?carl a dbo:Person ;
        foaf:name ""Carl, Duke of Württemberg"" ;
        dbo:title dbr:Duke_of_W%C3%BCrttemberg .

  # His predecessor (likely his father)
  ?predecessor dbo:child ?carl .
  
  # Predecessor is a child of Albrecht, Duke of Württemberg
  ?albrecht a dbo:Person ;
           foaf:name ""Albrecht, Duke of Württemberg"" .
  ?predecessor dbo:child ?albrecht .

  # Predecessor is royalty and related to Archduchess Margarete Sophie of Austria through her parent
  ?margareteSophie a dbo:Person ;
                  foaf:name ""Archduchess Margarete Sophie of Austria"" .
  ?parentMargareteSophie dbo:child ?margareteSophie .
  
  # Predecessor is related to the parent of Archduchess Margarete Sophie
  ?predecessor dbo:spouseOrChild ?parentMargareteSophie .

  # Ensure predecessor is royalty
  ?predecessor a dbo:Royalty .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
68,12,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?catherine a dbo:Person ;
             dbp:mother ?mother ;
             dbp:father ?father .
  ?isabella a dbo:Person ;
            dbp:mother ?mother ;
            dbp:father ?father .
  ?maximilian a dbo:Person ;
              dbp:child ?philip .
  
  FILTER(?catherine = dbr:Catherine_of_Austria_(1507-1578) &&
         ?isabella = dbr:Isabella_of_Austria_(1501–1526) &&
         ?maximilian = dbr:Maximilian_I,_Holy_Roman_Emperor)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
941,0,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel""@en .
  ?relation dbo:parent ?person ;
            dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,11,5,0.0,0.0,0
737,33,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Identify Carl, Duke of Württemberg
  ?carl a dbo:Person ;
        foaf:name ""Carl, Duke of Württemberg"" ;
        dbp:parent ?child1 .

  # Find the child of Carl (great-grandchild of Alexander)
  ?child1 a dbo:Person ;
          dbp:parent ?grandchild1 .

  # Find the grandchild of Carl (great-great-grandchild of Alexander)
  ?grandchild1 a dbo:Person ;
               dbp:parent ?greatGrandchild1 .

  # Find the great-grandchild of Carl (great-great-great-grandchild of Alexander)
  ?greatGrandchild1 a dbo:Person ;
                    dbp:parent ?predecessor .

  # Identify Alexander of Württemberg
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbp:birthday ""1804-04-24""^^xsd:date ;
             dbp:deathDate ""1881-03-6""^^xsd:date .

  # Establish the lineage from Alexander to Carl
  ?alexander dbp:child ?parentOfChild1 .
  ?parentOfChild1 dbp:child ?child1 .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
941,15,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Ferdinand Albert II and his spouse
  ?ferdinandAlbert2 a dbo:Person ;
                   dbo:spouse ?antoinetteAmalia ;
                   dbo:child ?charlesI .

  ?antoinetteAmalia a dbo:Person ;
                    dbp:name ""Antoinette Amalia of Nassau-Dietz""@en .

  # Charles I, Duke of Brunswick-Wolfenbüttel
  ?charlesI a dbo:Person ;
            dbp:name ""Charles I, Duke of Brunswick-Lüneburg""@en ;
            dbo:child ?augustusWilliam .

  # Prince Augustus William of Prussia
  ?augustusWilliam a dbo:Person ;
                   dbp:name ""Prince Augustus William of Prussia""@en ;
                   dbo:parent ?charlesI .

  # Find the child of Charles I (who is royalty)
  ?child a dbo:Person ;
         dbo:parent ?charlesI .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
737,10,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  ?person dbo:predecessor dbr:Claude_Frederick,_Duke_of_Württemberg .
  ?person dbp:title ""Duke of Württemberg""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,34,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  VALUES ?birthName { ""Snoop Dogg"" ""Darryl Paa Kwesi Bannerman-Martin"" }
  
  ?person dbo:birthName ?birthName .
  ?person a dbo:MusicalArtist .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
756,16,train,"Give me the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderName ?country WHERE {
  ?person a dbo:HeadOfState ;
          dbo:country dbr:West_Germany .
  OPTIONAL { ?person foaf:name ?leaderName . }
  OPTIONAL { ?person dbo:nationality ?nationality . }
  ?nationality dbo:country ?country .
}
ORDER BY ?leaderName
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,0,train,Give me the player in Juan Carlos Molina (footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?position WHERE {
  ?person a dbo:FootballPlayer .
  ?person foaf:name ""Juan Carlos Molina"" .
  OPTIONAL { ?person dbo:position ?position . }
  BIND(?person AS ?player)
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
816,56,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Actor acted in a movie with Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  ?movie dbo:starring ?actor .

  # Actor is a parent of Amy Arbus
  ?actor dbp:child dbr:Amy_Arbus .

  # Actor's child is married to Mariclare Costello's spouse
  ?actorChild dbp:parent ?actor .
  ?mariclareSpouse dbo:spouse ?actorChild .
  ?mariclareSpouse dbo:spouse dbr:Mariclare_Costello .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,6,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse dbr:Prince_Augustus_William_of_Prussia .
  ?person dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
386,6,train,Give me the war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Karl Gustav von Baggovut""@en .
  
  OPTIONAL { 
    ?person dbo:nationality dbr:Russian_Empire . 
  }
  
  ?event dbo:participatedIn ?person ;
         a dbo:Battle ;
         dbp:place ?location .

  FILTER EXISTS {
    ?location dbo:country dbr:Russia .
  }

  BIND(?event AS ?war)
}
ORDER BY ?war
LIMIT 10
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
203,0,train,Give me the commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?campaign dbo:commander ?commander .
  ?campaign rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""egypt and syria"") && CONTAINS(LCASE(?label), ""french campaign""))
}
```",1,1,2,1,1,3,3,71,48,0,0,1.0,1.0,1.0
80,42,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Michael Jai White"" .
  OPTIONAL { ?person dbo:alterEgo dbr:Lamont_Cranston . }
  OPTIONAL { ?person dbo:film dbr:ATL_(2006_film) . }
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
609,48,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName (GROUP_CONCAT(DISTINCT ?birthPlaceLabel; separator="", "") AS ?birthPlaces) WHERE {
  # Vince Gilligan's award awardee
  {
    SELECT DISTINCT ?awardee WHERE {
      ?award dbo:recipient ?awardee .
      ?award dbp:name ""Primetime Emmy Award for Outstanding Writing for a Drama Series""^^xsd:string .
      ?award dbo:year ?year .
      FILTER(?year >= 2008 && ?year <= 2013) # Years Breaking Bad won
    }
  } UNION {
    # Author of El Deafo
    SELECT DISTINCT ?author WHERE {
      ?book dbo:author ?author .
      ?book dbp:title ""El Deafo""^^xsd:string .
    }
  } BIND(?awardee AS ?person) UNION BIND(?author AS ?person)

  OPTIONAL { ?person foaf:name ?personName . }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?birthPlace rdfs:label ?birthPlaceLabel FILTER(LANG(?birthPlaceLabel) = ""en"") . }

} GROUP BY ?personName
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
225,2,train,Give me the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  dbr:Kiyosu dbo:location dbr:Japan .
  dbr:Japan dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
80,54,train,"Give me the professional in  and actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v3 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find movies featuring T.I.
  ?movie dbo:starring dbr:T.I. .
  
  # Find albums or songs by T.I.
  ?album dbo:artist dbr:T.I. ;
         dbo:track ?song .

  # Find individuals who are actors in the movie
  ?person dbo:starring ?movie .

  # Ensure they have a professional role related to the album/song
  OPTIONAL { 
    ?person dbo:role dbp:Producer ; # or other relevant roles like FeaturedArtist, etc.
             dbo:workAlbum ?album .
  }
  
  # Filter for individuals who are both actors and involved in music professionally
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
557,10,train,Give me the professional in  and producer of A Star Is Born (1937 film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:director ?director .
  OPTIONAL { dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,22,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeRegionCountry WHERE {
  # Find William Gayner's birthplace
  ?williamGayner a dbo:Person ;
                 foaf:name ""William Gayner"" ;
                 dbo:birthPlace ?gaynerBirthPlace .

  # Find Hon. Mary Frances Bowes-Lyon and her parent
  ?maryFrancesBowesLyon a dbo:Person ;
                        foaf:name ""Hon. Mary Frances Bowes-Lyon"" ;
                        dbp:parent ?parent .

  # Get the birthplace of the identified parent
  ?parent dbo:birthPlace ?parentBirthPlace .

  # Check if there's a common native region or country
  OPTIONAL { ?gaynerBirthPlace dbo:country ?gaynerCountry . }
  OPTIONAL { ?parentBirthPlace dbo:country ?parentCountry . }

  FILTER (?gaynerCountry = ?parentCountry)
  
  BIND(?gaynerCountry AS ?nativeRegionCountry)
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
203,36,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Ralph Abercromby"" .
  ?person dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?person dbo:militaryCommanderOf ?command .
  ?command dbo:participatedIn ?event .
  ?event a dbo:MilitaryEngagement ;
         dbo:place dbr:Alexandria_Egypt .
  OPTIONAL { ?event dbo:socialSignificance ?significance . }
  FILTER EXISTS {
    ?event dbo:socialSignificance ?significance .
  }
  BIND(?command AS ?militaryForce)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
557,33,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?work a dbo:Film .
  ?work rdfs:label ""Johnny Doughboy""@en .

  ?actor dbo:actedIn ?work ;
         foaf:name ?actorName .

  ?producer dbo:produced ?work ;
            foaf:name ?producerName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,3,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Prince Faisal bin Hussein
  ?person a dbo:Person ;
          foaf:name ""Faisal bin Hussein""@en .
  
  # Find his children who are royalty
  ?person dbo:child ?child .
  ?child a dbo:Royalty .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
609,11,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  # Find awards associated with Vince Gilligan
  ?award a dbo:Award .
  ?award dbo:recipient dbr:Vince_Gilligan .

  # Link the award to its awardees
  ?award dbo:winner ?awardee .

  # Get the birthplace of each awardee
  ?awardee dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,11,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?commander a dbo:Person .
  ?commander dbo:officeHolderOf ?office .
  ?commander dbo:role ?role .
  ?war dbr:Russo-Polish_War_(1654%E2%80%931667) .
  ?commander dbo:participatedIn ?war .

  # Ensure the commander is a politician
  ?commander dbo:occupation dbp:Politician .

  # Find the successor of this commander
  ?office dbo:successor ?successor .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
103,18,train,Give me the professional in Actor and professional in  and actor of Dispatches from Elsewhere.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:profession dbr:Actor .
  ?work dbo:starring ?actor .
  ?work rdfs:label ""Dispatches from Elsewhere""@en .
}
LIMIT 10
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
375,10,train,Give me the war of the person born as Koichirō.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?war WHERE {
  ?person foaf:name ""Koichirō"" .
  OPTIONAL { ?person dbp:birthName ""Koichirō"" . }
  ?person dbo:participatedInWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
782,17,train,"Give me the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Nick Curran"" .
  ?person dbp:birthName ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
609,60,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Vince Gilligan's award awardee
  ?award a dbo:Award .
  ?award dbo:recipient ?person1 .
  ?person1 dbo:nationality dbr:United_States .
  
  # Find the birth place of the awardee
  ?person1 dbo:birthPlace ?awardeeBirthPlace .

  # Author of El Deafo
  ?author a dbo:Writer ;
          dbo:work ?elDeafo ;
          dbo:nationality dbr:United_States .
  
  # Find the birth place of the author
  ?author dbo:birthPlace ?authorBirthPlace .

  # Linking to El Deafo
  ?elDeafo rdfs:label ""El Deafo""@en .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
293,19,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName ?party WHERE {
  # Identify Roger Pryor as an actor
  ?person a dbo:Actor ;
          foaf:name ""Roger Pryor"" .

  # Find his spouse
  OPTIONAL { 
    ?person dbo:spouse ?spouse .
    ?spouse foaf:name ?spouseName .
    
    # Check if the spouse is a member of any political party in Central, Louisiana
    OPTIONAL {
      ?spouse dbo:memberOf ?party ;
              dbo:residence dbr:Central,_Louisiana .
    }
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,13,train,Give me the person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Bobby_Shmurda a dbo:MusicalArtist .
  OPTIONAL { dbr:Bobby_Shmurda dbp:birthName ?birthName . }
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
38,9,train,"Give me the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person a dbo:OfficeHolder ;
          a dbo:Politician .
  
  ?role dbo:officeHolder ?person ;
        dbo:organization dbr:North_Carolina_Air_National_Guard .

  ?work dbo:author ?person ;
        a dbo:Book ;
        a dbo:WrittenWork .

}
ORDER BY ?work
LIMIT 10
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
756,20,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry ?managerName WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality ?nationality .
  ?nationality rdfs:label ?nativeCountry .

  # Managers of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?manager .
  ?manager foaf:name ?managerName .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
140,14,train,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Identify political parties in that settlement
  ?party a dbo:PoliticalParty ;
        dbo:location ?deathPlace ;
        dbp:rulingParty ""true""^^xsd:boolean .

  # Find members of this ruling party
  ?member dbo:memberOf ?party .
  
  # Return the member's name
  ?member foaf:name ?partyMember .
}
```",3,6,4,3,1,3,2,20,0,0,21486,0,0.0,0
943,45,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I's child
  ?child1 dbo:parent dbr:Baeda_Maryam_I .
  
  # Dawit I's child
  ?child2 dbo:parent dbr:Dawit_I .

  # The common child of both
  FILTER (?child1 = ?child2)

  # This child's father who is royalty and an office holder
  ?father dbo:spouse ?mother .
  ?father dbo:child ?child1 .
  ?father a dbo:Monarch ; 
          dbo:officeHolder ?office .

  # The grandfather (father of the father)
  ?grandfather dbo:child ?father .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,10,train,Give me the player in Juan Carlos Molina (footballer) and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?juanCarlosTeam ?pabloAimarTeam WHERE {
  # Find Juan Carlos Molina's team
  ?juanCarlos a dbo:FootballPlayer ;
              foaf:name ""Juan Carlos Molina"" ;
              dbo:team ?juanCarlosTeam .

  # Find Pablo Aimar's team
  ?pabloAimar a dbo:FootballPlayer ;
              foaf:name ""Pablo Aimar"" ;
              dbo:team ?pabloAimarTeam .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
419,2,train,Give me the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,3,0,0,1.0,1.0,1.0
905,51,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather ?greatGrandchild WHERE {
  # Charles I of Hungary and his father
  dbr:Charles_I_of_Hungary dbo:parent ?father .
  
  # Father's parent (grandfather)
  ?father dbo:parent ?grandfather .

  # Predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Child of the predecessor
  ?predecessor dbo:child ?child .

  # Great-grandchild (child's child)
  ?child dbo:child ?greatGrandchild .
  
  # Ensure all are royalty
  FILTER (?grandfather a dbo:Monarch || ?greatGrandchild a dbo:Monarch)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
297,3,train,Give me the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Brian Kemp"" .
  ?person dbo:office ?office .
  ?office dbo:holder ?person .
  ?office dbo:positionTitle ?title .
  FILTER(?title = ""Governor of Georgia""@en)
  OPTIONAL { ?person dbp:government ?administration . }
}
```",1,1,2,1,1,2,2,9,0,0,19,0,0.0,0
68,21,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Maximilian I, Holy Roman Emperor""@en .
  
  ?child dbo:parent ?person ;
         dbo:spouse dbr:Isabella_of_Portugal_(1503-1539) ;
         dbp:children dbr:Isabella_of_Austria .

  OPTIONAL { 
    ?child dbo:spouse dbr:Philip_I_of_Castile ;
           dbo:children ?royaltyChild .
  }
  
  FILTER EXISTS {
    ?royaltyChild a dbo:Royalty .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
39,22,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Lil Wayne"" .
  ?person dbp:birthName ""Robert Lamar Thompson"" .
  
  OPTIONAL { 
    ?person dbo:professionalOccupation ?profession .
  }
  
  OPTIONAL {
    ?person dbo:band ?band .
  }
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
203,25,train,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
# Query 1: Military Force of the Battle of Fort Royal
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Battle_of_Fort_Royal dbo:militaryConflicts ?battle .
  ?battle dbo:participatingMilitaryUnit ?militaryForce .
}

# Query 2: Military and Societal Event of Robert Calder
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  dbr:Robert_Calder dbo:event ?event .
  ?event a dbo:MilitaryEvent ;
         a dbo:SocietalEvent .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,20,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Carl, Duke of Württemberg
  dbr:Claude_Wilhelm_Carl_Frederick_Alexander_of_W%C3%BCrttemberg dbo:parent ?childOfCarl .
  
  # Child of the child of Duke Philipp of Württemberg
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:parent ?childOfPhilipp .
  ?childOfPhilipp dbo:parent ?grandChildOfPhilipp .

  # Find the predecessor (father) of Carl, who is also a grandchild of Duke Philipp
  ?predecessor dbo:parent dbr:Claude_Wilhelm_Carl_Frederick_Alexander_of_W%C3%BCrttemberg .
  ?predecessor = ?grandChildOfPhilipp .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
80,12,train,Give me the actor of ATL (film) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?actorName ?profession WHERE {
  # Find the film ""ATL""
  dbr:ATL dbo:starring ?actor .
  
  # Get the name of each actor
  ?actor foaf:name ?actorName .

  # Optionally, find any professional roles or occupations for the actors
  OPTIONAL { 
    ?actor dbo:occupation ?profession .
  }
}
ORDER BY ?actorName
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
595,25,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book dbo:author ?person .
  ?book rdfs:label ""Back to Work""@en .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""anne-marie slaughter""))
  
  OPTIONAL { 
    ?person dbo:memberOf ?organization .
    ?organization rdfs:label ?orgLabel .
    FILTER(CONTAINS(LCASE(?orgLabel), ""united states navy"") || CONTAINS(LCASE(?orgLabel), ""us state department""))
  }
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
39,43,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?character ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:genre dbr:Comics .
  
  OPTIONAL { 
    ?character dbp:alterEgo ?alterEgo .
    ?alterEgo dbo:profession dbr:Singer .
    
    ?musician a dbo:MusicArtist ;
              foaf:name ""Bob Thompson"" .
    ?band a dbo:Band ;
          dbo:member ?musician ;
          dbo:associatedWith ?character .
  }
}
LIMIT 10
```",5,7,6,3,3,3,3,71,0,0,3,0,0.0,0
361,11,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?album a dbo:Album ;
         dbo:workType dbr:Film ;
         dbo:abstract ?description .
  
  FILTER(CONTAINS(LCASE(?description), ""lasso the moon""))

  ?film dbo:basedOn ?album .

  ?film dbo:starring ?actor .
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
347,33,train,Give me the commander in Thirty Years' War and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Archduke Charles Joseph of Austria and his parent
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .
  
  # Parent's child
  ?child dbo:parent ?parent .
  
  # Commander in the Thirty Years' War who is also the father of the identified child
  ?commander a dbo:MilitaryPerson ;
             dbo:spouseOrPartner ?mother ;
             dbp:children ?child ;
             dbo:militaryConflict dbr:Thirty_Years'_War .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
595,16,train,"Give me the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://dbpedia.org/property/author> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person a dbo:OfficeHolder .
  ?person dbo:residence dbr:Chappaqua,_New_York .
  ?work dbo:author ?person ;
        a dbo:Book .
}
ORDER BY ?work
LIMIT 10
```",2,7,3,2,1,3,3,71,0,0,10,0,0.0,0
80,58,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorShelbyOaks ?actorWhatYouKnowAlbum ?professionalGoldenMaster WHERE {
  # Actor of Shelby Oaks
  ?work dbr:Shelby_Oaks .
  ?work dbo:starring ?actorShelbyOaks .

  # Actor of the album of What You Know (T.I. song)
  ?album dbp:title ""Paper Trail"" ;  # Album containing ""What You Know""
         dbo:performer ?artist .
  ?artist dbo:recordLabel ?label .
  OPTIONAL { ?actorWhatYouKnowAlbum dbo:starring ?album . }

  # Professional in the alter ego of the series of The Golden Master
  ?series dbr:The_Golden_Master .
  ?alterEgo dbo:alternateName ?professionalGoldenMaster .
  ?series dbo:character ?alterEgo .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
731,10,train,"Who is the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse?","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:partOf dbr:Pacific_War .
  ?event dbo:location dbr:Sinking_of_Prince_of_Wales_and_Repulse .
  ?event dbo:commander ?commander .
}
```",2,4,3,2,1,3,2,20,0,0,6,0,0.0,0
414,13,train,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show WHERE {
  # Find Rainer Weiss and his award
  dbr:Rainer_Weiss a dbo:Person .
  ?award dbo:recipient dbr:Rainer_Weiss ;
         dbo:awardingBody ?institution .

  # Check if the institution is an educational institution
  ?institution a dbo:EducationalInstitution .

  # Find shows hosted by this institution
  ?show dbo:hostedBy ?institution .
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
89,34,train,Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?myatHponePyo dbo:successorOf ?thihathu .
  ?thihathu dbo:predecessor ?predecessor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
293,6,train,"Give me the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie foaf:name ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
143,9,train,"Give me the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?result <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film WHERE {
  ?film a dbo:Film .
  OPTIONAL { 
    ?film dbo:starring dbr:Skepta .
    FILTER(CONTAINS(LCASE(?filmDescription), ""skepta""))
  }
  OPTIONAL { 
    ?film dbo:abstract ?filmDescription .
  }
}
ORDER BY ?film
LIMIT 10
```",2,3,3,2,1,3,2,20,0,10,4,0.0,0.0,0
668,32,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rodArgentProfession (GROUP_CONCAT(?associatedArtist; separator="", "") AS ?stonebwoyAssociatedArtists) WHERE {
  # Get the profession of Rod Argent
  dbr:Rod_Argent dbo:profession ?rodArgentProfession .

  # Get associated musical artists of Stonebwoy
  OPTIONAL {
    dbr:Stonebwoy dbp:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
633,5,train,Give me the father of Dorothea of Lorraine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  dbr:Dorothea_of_Lorraine dbo:parent ?person .
  ?person a dbo:Person .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""father""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
782,6,train,Give me the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band dbo:bandMember dbr:Eric_Clapton .
  ?band dbo:bandMember ?member .
  FILTER(?member != dbr:Eric_Clapton)
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
668,36,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Query for musical artist from Central Region, Ghana
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10

# Query for associated musical artist of $pacely
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?person foaf:name ""$pacely"" .
  ?person dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
87,17,train,Give me the actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?spouseName WHERE {
  # Part 1: Actor of ""Always"" (1989)
  dbr:Always_(film) dbo:castMember ?person .
  
  # Get the name of the actor
  ?person foaf:name ?actorName .

  # Part 2: Awardee and Spouse
  OPTIONAL {
    ?award dbp:recipient ?awardee .
    ?awardee dbo:spouse ?spouse .
    
    # Filter for an award associated with Janusz Kamiński
    ?kaminski dbr:Janusz_Kamiński .
    ?kaminski dbo:receivedAward ?award .

    # Get the name of the spouse
    ?spouse foaf:name ?spouseName .
  }
}
LIMIT 1
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
87,14,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Janusz Kamiński by his role in the film ""Paradise"" (2013)
  ?film dbo:director dbr:Janusz_Kamiński .
  FILTER(STRSTARTS(STR(?film), STR(dbr:Paradise_(2013_film))))

  # Ensure he is an actor
  ?person a dbo:Actor ;
          foaf:name ""Janusz Kamiński"" .

  # Find his spouse
  OPTIONAL { ?person dbp:spouse ?spouse . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
198,41,train,"Give me the entity in Charleston, South Carolina and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?force WHERE {
  ?entity a dbo:Person .
  ?entity dbo:birthPlace dbr:Charleston,_South_Carolina .

  # Medal of Honor
  ?medalOfHonorAward dbo:recipient ?entity ;
                     rdf:type dbo:Award ;
                     dbp:name ""Medal of Honor"" .

  # Gillmore Medal
  ?gillmoreMedalAward dbo:recipient ?entity ;
                      rdf:type dbo:Award ;
                      dbp:name ""Gillmore Medal"" .
  
  OPTIONAL { ?entity dbo:militaryService ?force . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
731,15,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?recipient a dbo:Person .
  ?recipient dbo:honoraryTitle dbr:Victoria_Cross .
  ?awardEvent dbo:awardedBy dbr:Edmund_Hakewill-Smith ;
              dbo:awardedBy dbr:Tom_Phillips_(Royal_Navy_officer) .
  ?awardEvent dbo:recipient ?recipient .
  OPTIONAL { ?recipient dbo:militaryService ?force . }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
419,1,train,Give me the alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  dbr:Chennupati_Jagadish dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,4,0,0,1.0,1.0,1.0
375,3,train,Give me the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
687,4,train,"Give me the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete .
  ?person dbp:birthday ""1955-02-22""^^xsd:date .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
58,8,train,Give me the producer of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Replace 'YourMovie' with the actual DBpedia resource name of the movie.
  dbr:YourMovie a dbo:Film .
  
  ?movie dbo:producer ?producer .
}
```

To use this query, replace `dbr:YourMovie` with the specific DBpedia resource identifier for the movie you are interested in. For example, if you want to find the producers of ""The Matrix,"" you would replace it with `dbr:The_Matrix`.",2,2,3,2,1,3,2,20,0,0,10672,0,0.0,0
943,9,train,Give me the reference to  and child of Dawit I.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dawit I""@en .
  ?person dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
769,14,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?manager a dbo:SportsManager ;
           dbo:sportTeamManaged dbr:Hong_Kong_C .
  
  ?team a dbo:SportsClub, dbo:SportsTeam, dbo:SoccerClub ;
        rdfs:label ""Hong Kong C""@en .

  ?manager dbo:position dbp:SoccerManager .

  ?player dbo:playedFor ?team ;
          foaf:name ?name .

}
ORDER BY ?name
LIMIT 10
```",3,9,4,3,1,3,2,20,0,0,4,0,0.0,0
80,15,train,Give me the movie with the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Smartbomb""@en .
  
  OPTIONAL { 
    ?author dbo:film ?movie .
  }
}
```",2,2,3,2,1,3,3,71,0,0,39790,0,0.0,0
468,3,train,Give me the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/Peter_IV_of_Aragon>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Peter_IV_of_Aragon a dbo:Person .
  OPTIONAL { dbr:Peter_IV_of_Aragon dbp:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Vera_Lynn .
  ?movie dbo:genre dbr:Television_Show .
  OPTIONAL { ?movie dbo:writer ?author . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
737,52,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Find Archduchess Helena's spouse
  ?helena a dbo:Person ;
          foaf:name ""Helena, Archduchess of Austria"" ;
          dbp:spouse ?spouse .

  # Step 2: Find the child of Helena's spouse who is royalty
  ?child1 dbp:parent ?spouse ;
          a dbo:Royalty .

  # Step 3: Find the grandchild, child of Archduchess Margarete Sophie
  ?grandchild dbp:parent ?child1 ;
              dbp:parent dbr:Margarete_Sophie_of_Austria .

  # Step 4: Find the great-grandchild, child of Duke Philipp
  ?greatGrandchild dbp:parent ?grandchild ;
                   dbp:parent dbr:Duke_Philipp_of_Württemberg .

  # Step 5: Find the predecessor (parent) of this great-grandchild
  ?predecessor dbp:child ?greatGrandchild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
78,21,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?stuartArtist ?billyArtist ?davidArtist ?bandMember WHERE {
  # Find the associated musical artist of Stuart Tosh
  ?stuartTosh dbo:associatedMusicalArtist ?stuartArtist .
  dbr:Stuart_Tosh ?stuartTosh .

  # Find the associated musical artist of Billy Lyall
  ?billyLyall dbo:associatedMusicalArtist ?billyArtist .
  dbr:Billy_Lyall ?billyLyall .

  # Find the associated musical artist of David Paton
  ?davidPaton dbo:associatedMusicalArtist ?davidArtist .
  dbr:David_Paton ?davidPaton .

  # Find band members of the associated musical artist of David Paton
  ?bandMember dbo:member ?davidArtist .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
731,11,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Tom Phillips"" .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:militaryBranch dbr:Royal_Navy .
  ?person dbp:honours dbr:Commander_of_the_Order_of_the_British_Empire .
  ?person dbo:force ?force .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
288,2,train,"Give me the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement .
  ?settlement dbo:country dbr:Pakistan .
  OPTIONAL { ?settlement rdfs:label ?label . FILTER (lang(?label) = 'en') }
  VALUES ?nickname {
    ""The Heart of Pakistan""
    ""Paris of the East""
    ""City of Gardens""
    ""City of Literature""
  }
  ?settlement dbo:nickname ?nickname .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
668,41,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of Rod Argent.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Shaggy's resource
  ?shaggy a dbo:MusicalArtist ;
          foaf:name ""Shaggy"" ;
          dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  # Stonebwoy's resource
  ?stonebwoy a dbo:MusicalArtist ;
             foaf:name ""Stonebwoy"" ;
             dbp:birthName ""Elorm Kabu Amenyah""@en .

  # Rod Argent's profession
  ?rodArgent a dbo:Musician ;
             foaf:name ""Rod Argent"" .
  
  # Find an artist associated with both Shaggy and Stonebwoy
  ?associatedArtist dbo:collaboratedWith ?shaggy ;
                   dbo:collaboratedWith ?stonebwoy .

  # Ensure the associated artist is a musician
  ?associatedArtist a dbo:Musician .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
468,17,train,"Give me the reference to Peter IV and child of the father, that is a royalty, of the parent of Martin of Aragon.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?peterIV ?child WHERE {
  # Martin of Aragon and his parent
  dbr:Martin_of_Aragon dbo:parent dbr:James_I_of_Aragon .

  # James I of Aragon's father who is royalty
  dbr:James_I_of_Aragon dbo:father ?royalFather .
  
  # Peter IV, son of the royal father
  ?peterIV a dbo:Monarch ;
           dbp:father ?royalFather ;
           foaf:name ""Peter IV""@en .

  # Child of Peter IV
  ?child dbo:parent ?peterIV .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
871,27,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?politician a dbo:Politician .
  ?child dbo:parent ?politician .
  ?child dbo:schoolAlumnus dbr:Eton_College .
  ?politician foaf:name ?name .
  OPTIONAL { ?politician dbp:birthName ?birthName . }
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .
}
ORDER BY ?name
LIMIT 10
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
68,24,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Identify Philip I of Castile
  dbr:Philip_I_of_Castile a dbo:Person ;
    dbo:spouse ?mother .

  # Find children who are royalty
  ?child dbo:parent dbr:Philip_I_of_Castile ;
         dbo:parent ?mother ;
         a dbo:Royalty .

  # Identify the commander involved in the Siege of Padua
  ?commander a dbo:Person ;
             dbo:spouse ?mother ;
             dbo:participatedIn dbr:Siege_of_Padua .

  # Find the father of this child
  ?child dbo:parent ?father .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
119,27,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty .
  ?party dbp:name ""Spanish Socialist Workers' Party""@en .
  ?party dbo:head ?leader .
}
```",3,4,4,3,1,3,3,71,0,0,100,0,0.0,0
347,57,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?charlesJoseph a dbo:Person ;
                 dbp:father ?father .
  ?ceciliaRenata a dbo:Person ;
                 dbp:father ?father .
  ?thirtyYearsWarCommander a dbo:Person ;
                           dbo:commanderIn ?thirtyYearsWar ;
                           dbp:father ?father .
  FILTER EXISTS { ?charlesJoseph rdfs:label ""Archduke Charles Joseph of Austria""@en }
  FILTER EXISTS { ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en }
  FILTER EXISTS { ?thirtyYearsWarCommander rdfs:label ""Ferdinand II, Holy Roman Emperor""@en }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,5,train,"Give me the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?character WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:wikiPageWikiLink dbr:Category:Comics_characters .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
37,5,train,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Lauryn Hill"" .
  ?person dbo:work dbr:The_Miseducation_of_Lauryn_Hill .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
756,4,train,"Give me the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?team a dbo:SoccerClub ;
        dbo:sportTeam dbr:VfL_Bochum .
  
  ?season dbo:club ?team ;
          dbo:season ""2007–08""^^xsd:string .

  ?player dbo:memberOfTeam ?team ;
          dbo:memberOfSeason ?season .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
78,18,train,Give me the band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the musical artists associated with David Paton
  ?artist1 dbo:musicalArtist dbr:David_Paton .

  # Find the musical artists associated with Billy Lyall
  ?artist2 dbo:musicalArtist dbr:Billy_Lyall .

  # Ensure both artists are part of the same band
  ?band dbo:member ?artist1 ;
        dbo:member ?artist2 .

  # Get the members of that band
  ?band dbo:member ?bandMember .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
687,47,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga .
  
  ?actor a dbo:Actor ;
         dbo:role ?film ;
         dbo:sportTeam ?team ;
         a dbo:Athlete .

  ?athlete a dbo:Athlete ;
           dbp:birthday ""1955-02-22""^^xsd:date .

  FILTER(?actor = ?player)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,1,train,Give me the birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Renata_Kamberova dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
39,12,train,Give me the professional in  and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?instrument ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" .
  
  OPTIONAL { 
    ?person dbo:instrument ?instrument .
  }
  
  OPTIONAL {
    ?person dbo:memberOfBand ?band .
  }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
159,22,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?warCommander WHERE {
  # Find Yurii Khmelnytsky's successor
  ?yuriikhmelnytsky a dbo:Person ;
                   foaf:name ""Yurii Khmelnytsky""@en .
  
  OPTIONAL { 
    ?yuriikhmelnytsky dbp:succeededBy ?successor .
  }
  
  # Find the war commander related to Yurii Khmelnytsky
  OPTIONAL {
    ?warCommander a dbo:Person ;
                  dbo:commanded ?war .
    ?war dbp:relatedTo ?yuriikhmelnytsky .
  }

  # Attempt to find any connection to Jean Baptist, Comte d'Arco
  OPTIONAL {
    ?jeanbaptist a dbo:Person ;
                 foaf:name ""Jean Baptist, Comte d'Arco""@en .
    
    ?tvShow a dbo:TelevisionSeries ;
            dbp:relatedTo ?jeanbaptist .
    
    ?societalEvent a dbo:SocietalEvent ;
                   dbp:relatedTo ?jeanbaptist .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,60,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfFather WHERE {
  # Maria Anna of Bavaria
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria"" ;
             dbp:birthYear ""1574"" .

  # Her child
  ?child dbo:parent ?mariaAnna .
  
  # The father of that child (her husband)
  ?father dbo:spouse ?mariaAnna ;
          dbo:child ?child .

  # Child of this father who is royalty
  ?royalChild dbo:parent ?father ;
              a dbo:Monarch .

  # Commander in the Algerian War
  ?war a dbo:SocietalEvent, dbo:Event, dbo:TelevisionShow ;
       dbp:name ""Algerian War"" .
  
  ?commander dbo:commandedMilitaryForce ?militaryForce ;
             dbo:participatedIn ?war .

  # The military force of the Algerian War
  ?militaryForce dbo:relatedEvent ?war .

  # Linking the commander to the child of the father (royalty)
  ?royalChild dbo:commander ?commander .

  # Select the child of the father who is royalty and a commander
  ?childOfFather ?p ?royalChild .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
905,36,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Béla IV of Hungary
  dbr:Béla_IV_of_Hungary a dbo:Monarch ;
    dbo:spouse ?spouse .

  # Find the child of Béla IV who is royalty
  ?spouse dbo:child ?child .
  ?child a dbo:Royalty .

  # Ensure this child is married to Charles II of Naples
  ?child dbo:spouse dbr:Charles_II_of_Naples .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
295,10,train,Give me the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerName ?birthPlaceLabel WHERE {
  # Find producers of the film ""Storm in a Teacup""
  ?film dbo:producer ?producer .
  ?film rdfs:label ""Storm in a Teacup""@en .

  # Get producer's name
  ?producer foaf:name ?producerName .

  # Get producer's birthplace
  OPTIONAL { ?producer dbo:birthPlace ?birthPlace . }
  
  # Get the label for the birthplace
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

} ORDER BY ?producerName LIMIT 10
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
353,21,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Roger III, Duke of Apulia
  ?roger3 a dbo:Person ;
          foaf:name ""Roger III, Duke of Apulia""@en .
  
  # Identify Elvira of Castile, Queen of Sicily
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile, Queen of Sicily""@en .

  # Find their common child
  ?child dbo:parent ?roger3 ;
         dbo:parent ?elvira .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
38,2,train,"Give me the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolderOf ?office .
  ?office dbo:location dbr:North_Carolina_Air_National_Guard .
  OPTIONAL { ?person dbo:positionHeld ?position . }
  FILTER EXISTS { ?person dbo:positionHeld dbr:Commander } .
}
ORDER BY ?commander
LIMIT 10
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
769,8,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?manager a dbo:SoccerManager ;
           dbo:sportsTeamManaged dbr:Hong_Kong_C_Team .
  
  ?manager dbo:employeeOf ?team .
  ?team dbo:member ?player .

  FILTER EXISTS { ?manager a dbo:SportsManager }
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
531,47,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  # Alberto Ruiz-Gallardón's residence
  ?ruizGallardon a dbo:OfficeHolder ;
                 dbo:officeLocation ?residence .

  # Manuel Pinto da Costa's military conflict as commander
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?pintoDaCosta .
  
  # Linking the residence to the office of the commander in the conflict
  ?residence dbp:tenant ?officeHolder .
  ?officeHolder a dbo:Politician .

  FILTER(?ruizGallardon = ?officeHolder)
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
203,47,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
  ?war dbo:militaryConflict ?regiment .
  ?regiment dbr:30th_(Cambridgeshire)_Regiment_of_Foot .

  # Ensure William Bayne is associated with these wars
  ?bayne dbp:name ""William Bayne"" .
  ?bayne dbo:commanderInWar ?war .

  # Retrieve the military force involved in these wars
  ?war dbo:militaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
119,54,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Spain .
  ?person dbo:residence dbr:Santiago_de_Compostela .
  ?person dbo:office dbr:President_of_the_Galician_Parliament .
  ?person dbo:election dbr:2009_Galician_regional_election .
  ?person dbp:countryOfResidence ?tenant .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
246,4,train,"Give me the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childName WHERE {
  dbr:Princess_Muna_al-Hussein dbo:spouse ?husband .
  ?husband dbo:child ?child .
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"")) }
  ?child foaf:name ?childName .
}
ORDER BY ?childName
LIMIT 10
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
159,10,train,Give me the commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successorName WHERE {
  ?yuriiKhmelnytsky a dbo:Person ;
                    foaf:name ""Yurii Khmelnytsky""@en .
  
  ?successor dbo:succeededBy ?yuriiKhmelnytsky ;
             foaf:name ?successorName .

  ?warEvent dbo:participatedIn ?successor ;
            dbo:wikiPageRedirects dbr:Great_Turkish_War .

}
ORDER BY ?successorName
LIMIT 1
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,7,train,"Give me the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
119,1,train,Give me the entity in Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Poland .
}
LIMIT 10",1,1,2,1,1,3,2,20,0,10,108,0.0,0.0,0
158,12,train,Give me the native of Grand Duchy of Finland and person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  
  # Native of Grand Duchy of Finland
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .

  # Decedent at Switzerland
  ?person dbo:deathPlace dbr:Switzerland .

  # Native of Russian Empire
  OPTIONAL { ?person dbo:nationality dbr:Russian_Empire . }
  
  # Ensure the person is linked to both nationalities
  FILTER EXISTS {
    ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
  }
  FILTER EXISTS {
    ?person dbo:nationality dbr:Russian_Empire .
  }

  # Get the name of the person
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
386,8,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity WHERE {
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Place .
  OPTIONAL { ?birthPlace rdfs:label ?birthPlaceLabel . FILTER (lang(?birthPlaceLabel) = ""en"") }
}
```",2,2,3,2,1,2,3,28,0,0,87,0,0.0,0
143,16,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?musicalArtist WHERE {
  # Find movies associated with Afeez Oyetoro (Skepta)
  ?movie dbo:starring dbr:Skepta .
  
  # Find actors of shows that are also movies
  ?show a dbo:Film ;
        dbo:starring ?actor ;
        dbo:starring dbr:Skepta .

  # Identify Nicki Minaj's birth name and her musical artist role
  ?person dbp:birthName ""Cynthia Ikponmwenosa Morgan"" .
  ?person a dbo:MusicalArtist ;
          foaf:name ?musicalArtist .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
943,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:aliasName ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
392,5,train,Give me the member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?group a dbo:MusicalGroup .
  ?group foaf:name ""Der Blau""@en .
  ?group dbo:bandMember ?member .
}
```",2,2,3,2,1,2,2,9,0,0,2569,0,0.0,0
347,39,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfEleonore WHERE {
  # Eleonore of Austria and her father
  dbr:Eleonora_of_Austria dbo:parent ?eleonoreFather .
  
  # Maria Anna of Bavaria (born 1574) and her royal child
  dbr:Maria_Anna_of_Bavaria_(1574-1616) dbo:child ?royalChild .
  ?royalChild a dbo:Royal .

  # Father of the royal child
  ?royalChild dbo:parent ?fatherOfRoyalChild .

  # The father of Eleonore is also the father of the royal child
  ?eleonoreFather = ?fatherOfRoyalChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
38,0,train,Give me the author of Promises to Keep (Biden book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book dbp:title ""Promises to Keep"" .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,57,train,"Give me the professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgoProfession ?politicianActor WHERE {
  # The Shadow's alter ego profession
  VALUES (?shadowAlterEgo) { dbr:Lamont_Cranston }
  ?shadowAlterEgo dbo:profession ?alterEgoProfession .

  # Actor in both ""Ab Kya Hoga"" and ""Dispatches from Elsewhere""
  ?actor a dbo:Actor .
  ?actor dbo:film dbr:Ab_Kya_Hoga .
  ?actor dbo:film dbr:Dispatches_from_Elsewhere .

  # Politician actor in ""Ab Kya Hoga""
  ?politicianRole dbo:characterName ?characterName .
  FILTER(?characterName = ""Politician"") .
  ?politicianRole dbo:actor ?politicianActor .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
756,57,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Find Thomas Letsch's managerial roles
  ?letsch a dbo:SoccerManager ;
          foaf:name ""Thomas Letsch"" .
  
  # Identify the team he managed, specifically VfL Bochum
  ?letsch dbp:managedTeam dbr:VfL_Bochum .

  # Find the leader of West Germany during his managerial period
  ?leader a dbo:Chancellor ;
          dbo:country dbr:Germany_West ;
          dbo:termStart ?start ;
          dbo:termEnd ?end .
  
  # Ensure the leadership term overlaps with Thomas Letsch's career
  FILTER (?start <= ?letschStartDate && ?end >= ?letschEndDate)

  # Get the native country of this leader
  ?leader foaf:nativeCountry ?nativeCountry .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
361,0,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
}
ORDER BY ?actor
LIMIT 10
```",1,1,2,1,1,2,3,28,1,9,21579,0.1,4.633920296570899e-05,9.263547938860583e-05
78,24,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # David Paton's associated musical artist
  ?artist1 a dbo:MusicalArtist ;
           dbo:member ?bandMember .

  # Find the band David Paton is known for
  ?paton dbr:David_Paton ;
         dbo:associatedBand ?artist1 .

  # Writer of ""Wizards of Waverly Place"" soundtrack who is also a musical artist and an artist
  ?writer a dbo:MusicalArtist, dbo:Artist ;
          dbo:work ?soundtrack .
  
  # Identify the soundtrack
  ?soundtrack dbr:Wizards_of_Waverly_Place_(soundtrack) .

  # Find common band members between David Paton's associated musical artist and the writer
  ?artist2 a dbo:MusicalArtist ;
           dbo:member ?bandMember .

  ?writer dbo:associatedBand ?artist2 .
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
742,16,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of Sofia.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  ?person dbp:residence dbr:Sofia .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
295,2,train,"Who is the true self, that is an artist, of Steven Kapur?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Steven Kapur"" .
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
203,41,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?commander WHERE {
  # Military force of the war involving William Bayne
  OPTIONAL {
    ?bayneEvent a dbo:MilitaryConflict ;
                dbo:agent dbr:William_Bayne_(Royal_Navy_officer) .
    ?bayneEvent dbo:militaryForce ?militaryForce1 .
  }

  # Military force of the Battle of Cape Finisterre (1805)
  OPTIONAL {
    ?capeFinisterreEvent a dbo:MilitaryConflict ;
                         dbp:name ""Battle_of_Cape_Finisterre_(1805)""^^xsd:string .
    ?capeFinisterreEvent dbo:militaryForce ?militaryForce2 .
  }

  # Commander in the war involving the 30th (Cambridgeshire) Regiment of Foot
  OPTIONAL {
    ?regimentEvent a dbo:MilitaryConflict ;
                   dbo:agent dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
    ?regimentEvent dbo:commander ?commander .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
89,7,train,"Give me the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saw Min Phyu"" .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse .
    ?spouse a dbo:Royalty .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
871,16,train,"Who is the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .

  # Ensure the parent is a politician and an office holder
  ?parent a dbo:Politician ;
          dbo:officeHolder ?office .

  # Find children of this parent
  ?parent dbo:child ?child .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
756,13,train,"Give me the native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  dbr:Theodor_Heuss dbo:positionHeld dbr:President_of_Germany .
  dbr:Federal_Republic_of_Germany dbo:country ?nativeCountry .
}
```",2,3,3,2,1,3,3,71,0,0,5170,0,0.0,0
782,10,train,Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?thunderbirds ?curran WHERE {
  # Reference to The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
                               dbo:member ?member .

  # Find members of The Fabulous Thunderbirds
  OPTIONAL { 
    ?member dbp:associatedMusicalArtist dbr:Nick_Curran .
  }

  # Reference to Nick Curran as an associated musical artist
  dbr:Nick_Curran a dbo:MusicalArtist ;
                  dbo:associatedBand ?thunderbirds .

}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,14,train,"Give me the country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Identify Hu Jieqing as a writer
  ?huJieqing a dbo:Writer ;
             foaf:name ""Hu Jieqing"" .

  # Find the spouse of Hu Jieqing
  ?huJieqing dbp:spouse ?spouse .

  # Ensure the spouse is also classified as a writer (optional, but can be included for specificity)
  OPTIONAL { ?spouse a dbo:Writer . }

  # Identify works associated with the spouse
  ?work dbo:author ?spouse ;
        dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
668,20,train,Give me the professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?associatedArtist WHERE {
  # Identify Rod Argent's profession
  dbr:Rod_Argent a dbo:MusicalArtist .
  OPTIONAL { dbr:Rod_Argent dbo:occupation ?profession . }

  # Find associated musical artist or group
  OPTIONAL {
    ?group dbo:member dbr:Rod_Argent .
    ?group dbp:name ?associatedArtist .
  }
  
  # Connect to Pacely (assuming a placeholder for relevant entity)
  OPTIONAL {
    ?entity dbp:location dbr:Pacely .
    ?entity dbo:relatedMusicalArtist ?associatedArtist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,6,train,Give me the person decedent at Switzerland and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Grand_Duchy_of_Finland .
  ?person dbo:deathPlace dbr:Switzerland .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",2,2,3,1,2,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
687,30,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Juan Carlos Molina (footballer) and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:managerTeam ?team .
  
  # Ensure the person has played with Juan Carlos Molina and Sergio Agüero
  ?player1 dbo:playsFor ?team .
  ?player1 foaf:name ""Juan Carlos Molina (footballer)""@en .
  
  ?player2 dbo:playsFor ?team .
  ?player2 foaf:name ""Sergio Agüero""@en .

  # Ensure the person is also a manager
  ?person dbo:managerTeam ?team .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
246,6,train,Give me the parent of Princess Sara bint Faisal and parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES (?person) { 
    (dbr:Princess_Sara_bint_Faisal)
    (dbr:Prince_Omar_bin_Faisal)
  }
  
  OPTIONAL { ?person dbo:childOf ?parent . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,20,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Step 1: Identify Charles I of Hungary
  ?charlesI a dbo:Person ;
            foaf:name ""Charles I of Hungary""@en ;
            dbp:spouse ?mother .

  # Step 2: Find his father
  ?father dbo:childOf ?grandfather .
  
  # Step 3: Check if the father is royalty and spouse of Charles II of Naples
  ?father a dbo:Monarch ;
          foaf:name ?nameFather ;
          dbp:spouse dbr:Charles_II_of_Naples .

  # Linking to Charles I's father
  ?charlesI dbo:childOf ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
531,8,train,"Give me the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty .
  ?party dbp:name ""Conservative Republican Party (Spain)""@en .
  ?party dbo:leader ?leader .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
140,1,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:party dbr:Republican_Party_(United_States) .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,21486,0,0.0,0
905,35,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Step 2: Find his father
  ?father dbo:child ?philip .

  # Step 3: Check if this father is a child of royalty from Béla IV of Hungary
  ?belavI a dbo:Person ;
          foaf:name ""Béla IV of Hungary""@en .
  
  ?royaltyChild dbo:parent ?belavI ;
                a dbo:Royalty .

  FILTER(?father = ?royaltyChild)

  # Step 4: Retrieve the spouse of this father
  ?father dbp:spouse ?spouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,19,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Find his father
  ?father dbo:child ?philip .

  # Retrieve the spouse of that parent (his father)
  ?father dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,19,train,Give me the band of Kim Wilson and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?realName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Kim Wilson"" .
  ?person dbo:memberOfBand ?band .
  ?band foaf:name ?bandName .
  OPTIONAL { ?band dbp:realName ?realName . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
816,9,train,Give me the parent of Amy Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Amy_Arbus dbo:childOf ?parent .
  
  ?parent dbo:spouseOrPartner ?actorRole .
  ?actorRole dbo:workExample dbr:Judgment_The_Trial_of_Julius_and_Ethel_Rosenberg .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,23,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athleteName WHERE {
  # Find Marty Pollio's birthday
  VALUES (?marty) { dbr:Marty_Pollio }
  
  ?marty dbo:birthday ?birthday .
  
  # Find athletes born on the same day as Marty Pollio
  ?person a dbo:Athlete ;
          dbo:birthday ?sameBirthday .

  FILTER (YEAR(?sameBirthday) = YEAR(?birthday) &&
          MONTH(?sameBirthday) = MONTH(?birthday) &&
          DAY(?sameBirthday) = DAY(?birthday))

  # Get the name of these athletes
  ?person foaf:name ?athleteName .
}
ORDER BY ?athleteName
LIMIT 10
```",3,4,4,3,1,3,3,71,0,0,18,0,0.0,0
737,57,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?greatGrandchild WHERE {
  # Alexander of Württemberg's child
  ?child1 dbo:spouse ?alexander .
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en .

  # Child of Alexander's child (grandchild)
  ?child2 dbo:parent ?child1 .

  # Great-grandchild of Alexander
  ?greatGrandchild dbo:parent ?child2 .

  # Predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:successor dbr:Claude,_Duke_of_W%C3%BCrttemberg .
  
  # Check if the great-grandchild is a predecessor
  FILTER (?greatGrandchild = ?predecessor)

  # Descendant of Archduke Charles Louis of Austria
  ?descendant dbo:parent ?ancestor .
  ?ancestor dbo:parent ?archduke .
  ?archduke a dbo:Person ;
            foaf:name ""Archduke Charles Louis of Austria""@en .

  FILTER (?greatGrandchild = ?descendant)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
89,15,train,Give me the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Minye Kyawswa
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .

  # Step 2: Find his children
  ?child dbo:parent ?minyeKyawswa .

  # Step 3: For each child, find their parents
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
203,55,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?war a dbo:MilitaryConflict .
  
  # William Bayne's involvement in a war
  ?bayne dbr:William_Bayne_(Royal_Navy_officer) .
  ?bayne dbo:commanderIn ?war .

  # 30th (Cambridgeshire) Regiment of Foot's involvement in a war
  ?regiment dbr:30th_Cambridgeshire_Regiment_of_Foot .
  ?regiment dbo:commanderIn ?war .

  # Robert Calder's military force
  ?calder dbr:Robert_Calder .
  ?calder dbo:militaryForce ?militaryForce .

  # The war must be the same for both Bayne and the regiment
  FILTER (?bayne = ?regiment)

  # Ensure the military force is related to the war
  ?war dbo:militaryForce ?militaryForce .
}
```",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
225,7,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?region dbo:timeZone dbr:Japan_Standard_Time .
  ?region rdfs:label ?entity .
}
```",2,2,3,2,1,3,2,20,0,2236,8916,0.0,0.0,0
140,4,train,"Give me the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""John McDermott"" .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  
  FILTER EXISTS {
    ?deathPlace a dbo:Settlement
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,12,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel dbo:child ?child .
  
  OPTIONAL { 
    ?spouse1 dbo:spouse ?child .
    ?spouse2 dbo:spouse ?spouse1 .
    ?spouse2 dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
23,1,train,Give me the entity in Colombia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?name WHERE {
  ?entity a dbo:Person .
  OPTIONAL { 
    ?entity dbo:birthPlace dbr:Colombia .
    ?entity foaf:name ?name .
  }
  UNION
  OPTIONAL {
    ?entity dbo:residence dbr:Colombia .
    ?entity foaf:name ?name .
  }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,2141,0,0.0,0
386,22,train,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Find Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Find an entity in the birth place
  ?entity a dbo:Place ;
          dbo:location ?birthPlace .

  # Find Nobel Prize awardee related to this entity and born in 25th year (assuming 1900s)
  ?awardee dbo:nobelPrizeAwardedFor ?award .
  ?awardee dbo:birthYear ?year .
  FILTER (?year >= 1925 && ?year < 1930) .

  # Find any war-related information about the awardee
  ?awardee dbo:participatedInWar ?war .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
633,7,train,"Give me the spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Francis I, Duke of Lorraine
  ?francis a dbo:Person ;
           foaf:name ""Francis I, Duke of Lorraine""@en ;
           dbp:fatherOrMother ?parent .

  # Ensure the parent is royalty and noble
  ?parent a dbo:Royalty ;
          dbo:nobleTitle ?title .

  # Find the spouse of the parent
  ?parent dbo:spouse ?spouse .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,18,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Audrey_Hepburn .

  ?director dbo:spouse dbr:Janusz_Kamiński .
  ?director dbo:directed ?movie .

  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Audrey_Hepburn)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
23,5,train,Who is the father of Sofía Petro?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Sofía Petro""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  ?person dbo:parent ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,14,train,Give me the child of the father of Cecilia Renata of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Cecilia Renata of Austria
  dbr:Cecilia_Renata_of_Austria dbo:parent ?father .
  
  # Find the children of her father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,2,2,1,0.5,0.6666666666666666,0.5714285714285715
159,31,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?georgeDucasRef ?successor WHERE {
  # Find George Ducas
  ?georgeDucas a dbo:Person ;
               foaf:name ""George Ducas"" .

  # Find Michał Kazimierz Pac and his commander
  ?michalPac a dbo:Person ;
             foaf:name ""Michał Kazimierz Pac"" .
  
  ?commander a dbo:Commander ;
             dbo:commandedBy ?michalPac .

  # Find the successor of this commander in a military conflict
  ?successor a dbo:Successor ;
             dbo:succeeded ?commander ;
             dbo:participatedIn ?conflict .
  
  ?conflict a dbo:MilitaryConflict ;
            dbo:hasParticipant ?michalPac .

}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
19,4,train,Give me the professional in  and spouse of Carrie Johnson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?spouse WHERE {
  dbr:Carrie_Johnson a dbo:Person .
  OPTIONAL { dbr:Carrie_Johnson dbo:occupation ?profession . }
  OPTIONAL { dbr:Carrie_Johnson dbo:spouse ?spouse . }
}
```",2,2,3,1,2,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
347,56,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Identify Maria Anna of Bavaria (born 1574)
  ?mariaAnna a dbo:Person ;
             dbp:birthYear ""1574""^^xsd:gYear ;
             dbp:spouse ?husband .

  # Step 2: Find her child who is a royalty
  ?child dbo:parent ?mariaAnna ;
         a dbo:Monarch .

  # Step 3: Identify the father of Eleonore of Austria, Queen of Poland
  ?eleonore dbp:father ?father .
  ?father rdfs:label ""Eleonore of Austria""@en .

  # Step 4: Link to the commander of the 2nd Dragoon Regiment (France)
  ?commander dbo:memberOf dbr:2nd_Dragoon_Regiment_(France) ;
             dbo:occupation ?event .
  
  # Ensure the event is a societal event, an event, and a television show
  ?event rdf:type dbo:SocietalEvent , dbo:Event , dbo:TelevisionShow .

  # Connect all parts together
  FILTER(?child = ?father)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
585,4,train,Give me the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/Shirley_Stoler>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  dbr:Shirley_Stoler dbo:occupation ?profession .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
943,0,train,Give me the child of Dawit I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?dawitI a dbo:Person ;
          foaf:name ""Dawit I""@en .
  
  ?parentChildRelation dbo:child ?child ;
                      dbo:parent ?dawitI .

}
```",1,1,2,1,1,3,3,71,0,1,4,0.0,0.0,0
375,1,train,Give me the war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Toyotomi Hidenaga""@en .
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .
  ?event foaf:name ?war .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
249,5,train,"Give me the native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?nativePlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jamsetji Tata""@en .
  
  ?person dbo:associatedWith ?work .
  ?work dbo:country dbr:India .

  OPTIONAL { 
    ?work dbp:nativePlace ?nativePlace .
  }
}
ORDER BY ?work
LIMIT 10
```",2,3,3,2,1,2,2,9,0,0,68,0,0.0,0
609,44,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # For the author of ""El Deafo""
  { 
    ?person dbo:work dbr:El_Deafo .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # For the governor, that is a politician, of Virginia
  { 
    ?person dbo:office dbr:Governor_of_Virginia ;
            a dbo:Politician .
    ?person dbo:birthPlace ?birthPlace .
  }

  UNION

  # For Vince Gilligan
  {
    ?person foaf:name ""Vince Gilligan""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
782,15,train,Give me the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Kim Wilson"" .
  ?band dbo:member ?person .
  ?band foaf:name ?bandName .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
468,14,train,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Martin of Aragon and his parent
  dbr:Martin_of_Aragon dbo:parent dbr:ParentOfMartin .

  # Parent's father who is royalty
  dbr:ParentOfMartin dbo:father ?royalFather .
  ?royalFather a dbo:Monarch .

  # Children of the royal father
  ?royalFather dbo:child ?child .
}
```",3,4,4,3,1,3,2,20,0,0,7,0,0.0,0
737,48,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Find Archduchess Helena of Austria's spouse who is a royalty
  ?spouse dbo:spouse dbr:Archduchess_Helena_of_Austria ;
          a dbo:RoyalFamilyMember .

  # Step 2: Find their children who are royalties
  ?child dbo:parent ?spouse ;
         a dbo:RoyalFamilyMember .
  
  # Step 3: Identify the predecessor of one such child
  ?predecessor dbo:successor ?child .

  UNION

  # Step 4: Find Archduke Charles Louis of Austria's child who is royalty
  ?grandparent dbr:Archduke_Charles_Louis_of_Austria ;
              a dbo:RoyalFamilyMember .
  
  ?parent dbo:parent ?grandparent ;
          a dbo:RoyalFamilyMember .

  # Step 5: Find their child (grandchild) who is also royalty
  ?grandchild dbo:parent ?parent ;
              a dbo:RoyalFamilyMember .

  # Identify the predecessor of this grandchild
  ?predecessor2 dbo:successor ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
668,31,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Pacely"" .
  OPTIONAL { ?person foaf:name ?professionalName . }
}
ORDER BY ?professionalName
LIMIT 10
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
557,40,train,"Give me the producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerAStarIsBorn ?producerTomSawyer ?alterEgo WHERE {
  # Producers of A Star Is Born (1937)
  ?filmAStarIsBorn a dbo:Film .
  ?filmAStarIsBorn dbp:title ""A Star Is Born"" .
  ?filmAStarIsBorn dbo:releaseDate ?dateAStarIsBorn .
  FILTER(YEAR(?dateAStarIsBorn) = 1937) .
  ?filmAStarIsBorn dbo:producer ?producerAStarIsBorn .

  # Producers of The Adventures of Tom Sawyer (1938)
  ?filmTomSawyer a dbo:Film .
  ?filmTomSawyer dbp:title ""The Adventures of Tom Sawyer"" .
  ?filmTomSawyer dbo:releaseDate ?dateTomSawyer .
  FILTER(YEAR(?dateTomSawyer) = 1938) .
  ?filmTomSawyer dbo:producer ?producerTomSawyer .

  # Alter ego of Kent Allard
  ?character a dbo:FictionalCharacter ;
             dbp:name ""Kent Allard"" .
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
80,37,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?album ?actor WHERE {
  ?song a dbo:Songs .
  ?song dbo:lyricsBy dbr:T.I. .
  ?song dbo:workType ""Song""^^xsd:string .

  ?musicalWork a dbo:MusicalWork .
  ?musicalWork dbo:lyricsBy dbr:T.I. .
  ?musicalWork dbo:workType ""Musical work""^^xsd:string .

  FILTER (?song = ?musicalWork)

  ?album dbo:artist dbr:T.I. ;
         dbo:release dbr:Album .

  ?album dbo:track ?song .

  OPTIONAL { 
    ?album dbo:featuredArtist ?actor .
  }
}
ORDER BY ?album
LIMIT 10
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
668,7,train,"Who is the native, that is an artist, of Central Region, Ghana?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?name WHERE {
  ?person a dbo:Artist .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
706,15,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?birthPlace WHERE {
  # Sangeet Natak Akademi Fellowship awardees
  { 
    ?person dbo:awardReceived dbr:Sangeet_Natak_Akademi_Fellowship .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Birthplace of Smita Patil
  {
    dbr:Smita_Patil dbo:birthPlace ?birthPlace .
    BIND(dbr:Smita_Patil AS ?person)
  }
}
```",4,4,5,3,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
723,5,train,"Give me the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?band a dbo:Band .
  ?band foaf:name ""Cavalera Conspiracy"" .
  ?band dbo:member ?person .
  ?person a dbo:MusicalArtist .
  ?person foaf:name ?artist .
}
ORDER BY ?artist
LIMIT 10
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
756,0,train,Give me the manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:VfL_Bochum dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
270,3,train,"Give me the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Mark_Tournier dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) && datatype(?birthPlace) = xsd:string)
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
905,45,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Charles Martel of Anjou's parent
  ?charlesMartel a dbo:Person ;
                 dbp:parent ?parent .

  # Predecessor of Stephen V of Hungary and their descendant who is royalty
  ?stephenV dbr:Stephen_V_of_Hungary ;
           dbo:predecessor ?predecessor .
  ?child1 dbo:childOf ?predecessor ;
          a dbo:Person .
  ?child2 dbo:childOf ?child1 ;
          a dbo:Royalty .

  # Spouse of Charles II of Naples
  ?charlesII dbr:Charles_II_of_Naples ;
             dbo:spouse ?person .

  # The person must satisfy all conditions
  FILTER (?parent = ?child2)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,61,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I and his child
  ?baedaMaryamI a dbo:Person ;
                foaf:name ""Baeda Maryam I"" .
  
  ?child dbo:parent ?baedaMaryamI ;
         dbo:positionTitle ?title .

  FILTER(?title IN (dbo:Monarch, dbo:OfficeHolder)) # Ensure the child is royalty or an office holder

  # Father of the child
  ?father dbo:parent ?child .
  
  # Grandfather on the paternal side
  ?grandfather dbo:parent ?father .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,20,train,Give me the war of Hashiba Hidekatsu and entity in Japan and war of the person born as Koichirō.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?entity WHERE {
  # Find wars involving Hashiba Hidekatsu
  ?person a dbo:Person ;
          foaf:name ""Hashiba Hidekatsu""@en .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse . 
    ?spouse dbp:birthName ""Koichirō""@en .
  }
  
  # Find wars Hashiba Hidekatsu was involved in
  ?war dbo:participant ?person ;
       a dbo:MilitaryConflict .

  # Find entities related to Koichirō
  OPTIONAL {
    ?entity dbp:birthName ""Koichirō""@en .
  }

}
ORDER BY ?war ?entity
LIMIT 10
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
23,8,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person a dbo:Politician .
  ?person dbp:birthName ""Roy Leonardo Barreras Montealegre"" .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",2,3,3,2,1,2,3,28,0,0,5,0,0.0,0
412,10,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlaceEntity WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Antonios Varthalitis"" .
  ?person dbo:deathPlace ?deathPlace .

  ?deathPlace a dbo:Settlement .
  ?deathPlace rdfs:label ?deathPlaceLabel .
  
  OPTIONAL { 
    ?deathPlaceEntity a dbo:Place ;
                      dbo:location ?deathPlace .
  }
}
```",2,3,3,2,1,2,3,28,0,0,12,0,0.0,0
941,1,train,Give me the spouse of Prince Augustus William of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Prince_Augustus_William_of_Prussia dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
668,60,train,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Find the musical artist associated with Tupac Shakur (Lesane Parish Crooks)
  ?person1 a dbo:MusicalArtist .
  ?person1 dbp:birthName ""Lesane Parish Crooks"" .
  
  OPTIONAL { ?person1 foaf:name ?tupacName . }
  
  # Find the musical artist associated with an artist from Central Region, Ghana
  ?person2 a dbo:MusicalArtist .
  ?person2 dbo:birthPlace dbr:Central_Region,_Ghana .
  
  OPTIONAL {
    ?person2 dbp:birthName ?ghanaBirthName .
    ?person3 dbp:birthName ?ghanaBirthName .
    ?person3 foaf:name ?ghanaArtistName .
  }
  
  # Return the associated musical artists
  VALUES ?artist { ?tupacName ?ghanaArtistName }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
595,37,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Politician ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:officeHolderOf ?office .
  ?person dbo:commanderInThirdTaiwanStraitCrisis true .

  ?work dbo:author ?author ;
        a dbo:Book, dbo:WrittenWork, dbo:CreativeWork .

  ?person dbo:writtenWork ?work .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
756,45,train,"Give me the manager of VfL Bochum and native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person a dbo:SoccerManager .
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person dbo:nationality dbr:West_Germany .

  ?team a dbo:SoccerClub ;
        dbo:currentManager ?person .

  ?season a dbo:SoccerSeason ;
          dbo:club ?team .

  ?team rdfs:label ""VfL Bochum""@en .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,38,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeRegion WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  ?bobbyShmurda a dbo:MusicalArtist ;
                foaf:name ""Bobby Shmurda"" ;
                dbp:birthName ?birthName .

  # Step 2: Identify any notable person with that birth name
  ?person a dbo:Person ;
          dbp:birthName ?birthName ;
          foaf:name ?name .

  # Step 3: Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
        dbo:awardReceived ?award .

  # Step 4: Determine the native region of the award
  ?award dbo:nativeRegion ?nativeRegion .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
392,7,train,Give me the reference to  and member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band foaf:name ""Der Blau""@en .
  ?band dbo:member ?member .
}
```",3,3,4,2,2,2,2,9,0,0,6,0,0.0,0
628,47,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person dbp:birthday ?birthday . }
  ?person foaf:name ?name .
  ?person dbp:birthName ?birthName .

  # Find band members of Bobby Shmurda
  ?bobbyShmurda a dbo:MusicalArtist ;
                foaf:name ""Bobby Shmurda""@en .
  
  ?bandMembership dbo:member ?person ;
                  dbo:group ?bobbyShmurda .
}
ORDER BY ?name
LIMIT 10
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
103,21,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?show a dbo:Film .
  ?show a dbo:TelevisionShow .

  ?role1 dbo:character ?character1 ;
         dbo:actor dbr:Richard_E._Grant ;
         dbo:work ?show .

  ?role2 dbo:character ?character2 ;
         dbo:actor ?actor ;
         dbo:work ?show .

  FILTER(?actor != dbr:Richard_E._Grant)
}
ORDER BY ?actor
LIMIT 10
```",3,4,4,2,2,3,3,71,0,0,13,0,0.0,0
943,30,train,"Give me the child of Dawit I and reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Dawit I's child
  ?dawitI a dbo:Person ;
          dbo:spouse ?partner .

  ?child dbo:parent ?dawitI ;
         a dbo:Royalty, dbo:OfficeHolder .

  # Na'od is the father of Dawit I's parent (Dawit I's grandfather)
  ?na'od a dbo:Person ;
         dbo:spouse ?partnerNa'od .
  
  ?parentOfDawitI dbo:child ?dawitI ;
                 dbo:parent ?na'od .

}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
80,40,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Cory Doctorow"" .

  ?film dbo:writer ?author ;
        dbo:title ""ATL""@en .

  ?actor a dbo:Actor ;
         dbo:actedIn ?film ;
         foaf:name ""T.I.""@en .

  ?professional a dbo:Actor ;
                dbo:actedIn ?film ;
                ?relation ?actor .
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
943,59,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent a dbo:Royalty .
  ?commander a dbo:Commander ;
             dbo:event dbr:Siege_of_Mukha ;
             dbo:parent ?parent .
  ?alterEgo rdfs:label ""The Shadow""@en ;
            dbo:alterEgoOf dbr:Lamont_Cranston_(radio) .
  ?reference dbo:referencedBy ?alterEgo .
  ?child dbo:parent ?parent .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
353,55,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Alfonso VI of León and Castile's children
  ?alfonsoVI a dbo:Monarch ;
             dbp:spouse ?spouseAlfonsoVI .
  
  # Children of Alfonso VI (his direct children)
  ?alfonsoChild dbo:parent dbr:Alfonso_VI_of_León_and_Castile ;
                dbo:child ?grandchild .

  # William I of Sicily's child who is royalty
  ?william1 a dbo:Monarch ;
            dbp:spouse ?spouseWilliam1 .
  
  ?williamsChild dbo:parent dbr:William_I_of_Sicily ;
                 dbo:child ?royaltyChild .

  # Roger III, Duke of Apulia's parent
  ?roger3 a dbo:Duke ;
          dbo:parent ?parentRoger3 .

  # The grandchild of Alfonso VI is the father of William I's child who is royalty
  ?grandchild dbo:spouse ?williamsChild .
  
  # Ensure the grandchild is also the parent of Roger III
  ?grandchild dbo:child ?roger3 .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
78,15,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Find band members of The Alan Parsons Project
  ?person dbo:musicGroup dbr:The_Alan_Parsons_Project .
  
  # Identify Stuart Mcbeath Tosh by his birth name
  ?stuart a dbo:MusicalArtist ;
          dbp:birthName ""Stuart Mcbeath Tosh"" .

  # Find association between band members and Stuart Mcbeath Tosh
  ?person dbo:associatedBandMember ?stuart .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
151,7,train,Give me the entity in the birthplace of Burhan Belge and reference to Order of the Medjidie.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity ?orderOfMedjidie WHERE {
  # Find Burhan Belge's birthplace
  dbr:Burhan_Belge dbo:birthPlace ?birthPlace .
  
  # Get the entity of the birthplace
  ?birthPlace a dbo:Place ;
              rdfs:label ?birthPlaceEntity .

  OPTIONAL {
    # Reference to Order of the Medjidie
    ?person dbp:honoraryTitle dbr:Order_of_the_Medjidie .
    FILTER(?person = dbr:Burhan_Belge)
  }
}
```",3,3,4,2,2,2,2,9,0,2,1,0.0,0.0,0
353,42,train,"Give me the father of William II of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William II of Sicily and his father
  dbr:William_II_of_Sicily dbo:parent ?father .

  # Alfonso VI of León and Castile's children
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?alfonsoChild .
  
  # Roger III, Duke of Apulia's parent
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?rogerParent .

  # The father must be a child of Alfonso VI and also related to Roger III through his parent
  FILTER (?father = ?alfonsoChild && ?father = ?rogerParent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
609,35,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cece_Bell 
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
68,22,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:parent ?parent .

  # Parent of Dorothea (her father)
  ?parent a dbo:Person .
  OPTIONAL { ?parent dbp:title ""Commander""@en . } # Assuming the title is relevant

  # Father's parent (Dorothea's grandfather)
  ?parent dbo:parent ?grandfather .

  # Ensure the grandfather was involved in the Siege of Padua
  ?grandfather dbo:memberOf dbr:Siege_of_Padua .
  ?grandfather a dbo:RoyalPerson . # Assuming this is how royalty is identified

}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
782,12,train,Give me the associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nick Curran""@en .
  OPTIONAL { 
    ?association dbo:associatedBandOrMusicalArtist ?associatedArtist .
    ?association dbo:musicalArtist ?person .
  }
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Kim Wilson""@en .
  OPTIONAL { 
    ?association dbo:associatedBandOrMusicalArtist ?band .
    ?association dbo:musicalArtist ?person .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,11,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of Max Born.",SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?show WHERE {
  # Max Born's affiliation with an institution
  ?born a dbo:Person ;
        foaf:name ""Max Born""@en .
  
  ?born dbo:almaMater ?institution ;
        dbo:nobelPrize dbr:Nobel_Prize_in_Physics .

  # Institution hosting shows
  ?show dbo:location ?institution ;
        a dbo:LectureSeries ; # or another relevant class for shows

  OPTIONAL {
    ?nobelWinner dbo:nobelPrize dbr:Nobel_Prize_in_Physics .
    ?nobelWinner dbo:affiliation ?institution .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
263,4,train,Give me the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Hon. Mary Frances Bowes-Lyon""@en .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
871,36,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of Victor Stanley (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Identify the alumnus of Eton College who is a parent of Victor Stanley
  ?person dbo:almaMater dbr:Eton_College .
  ?person dbo:child dbr:Victor_Stanley_(Royal_Navy_officer) .

  # Step 2: Find their children who are politicians
  ?person dbo:child ?politicianChild .
  ?politicianChild a dbo:Politician .

  # Step 3: Retrieve the father of that child
  ?politicianChild dbo:father ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
782,14,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musicalArtist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Nicholas Michael Curran"" .
  ?person dbo:musicalArtist ?musicalArtist .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
398,16,train,Give me the figure known as the nickname of Russia national football team and player in the writer of The First Glove.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?teamNickname ?playerName WHERE {
  # Find the Russia national football team and its nickname
  ?team a dbo:NationalSoccerTeam ;
        dbp:country dbr:Russia ;
        dbp:nickname ?teamNickname .

  # Find players of the Russia national football team
  ?player dbo:playsForNationalTeam ?team ;
          foaf:name ?playerName .

  # Filter for the player known as ""The First Glove""
  OPTIONAL { ?player rdfs:label ?playerLabel . FILTER(CONTAINS(LCASE(?playerLabel), ""the first glove"")) }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
203,11,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the military conflict involving the 30th Regiment of Foot
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .

  # Identify the commander of that conflict
  ?commander dbo:commanded ?unit .
  ?unit dbo:participatedIn ?conflict .
}
```",2,4,3,2,1,3,3,71,0,0,113,0,0.0,0
19,5,train,Give me the professional in the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalName WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""John Boxer"" .
  OPTIONAL { ?person foaf:name ?professionalName . }
}
```",2,2,3,2,1,2,2,9,0,0,39640,0,0.0,0
769,3,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .
  ?person dbo:athlete true .
  ?person dbo:soccerPlayer true .
  ?person dbo:sportsManager true .
  ?person dbo:soccerManager true .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
782,53,train,"Give me the band of Kim Wilson and reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?realBandName WHERE {
  ?person foaf:name ""Kim Wilson"" .
  ?person dbo:associatedBand ?band .
  ?band foaf:name ?bandName .
  OPTIONAL { ?band dbp:realName ?realBandName . }
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?person foaf:name ""Nicholas Michael Curran"" .
  ?person a dbo:MusicalArtist .
  OPTIONAL { ?person dbo:associatedBand ?band . }
  OPTIONAL { ?person dbo:associatedMusicalArtist ?associatedArtist . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
585,11,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?award WHERE {
  # Find Linda Miller (actress) and her child
  ?lindaMiller a dbo:Actor ;
              foaf:name ""Linda Miller"" .
  
  ?child dbo:parent ?lindaMiller ;
         foaf:nationality dbr:United_States .

  # Find an award that is American and a settlement in Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award a dbo:Award ;
         dbo:country dbr:United_States ;
         dbo:settlement dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
119,2,train,Give me the tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  ?tenant dbo:location dbr:Santiago_de_Compostela .
}
LIMIT 10
```

This query selects entities that have a location property pointing to Santiago de Compostela. The `dbo:location` predicate is used here as it typically denotes the geographical or administrative location of an entity.",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
361,7,train,Give me the actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Rustlers' Rhapsody""@en .
  FILTER (LANG(?movie) = 'en')
  ?actor a dbo:Actor .
}
```",2,2,3,1,2,2,3,28,0,0,4,0,0.0,0
782,4,train,Give me the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalArtist .
  OPTIONAL { dbr:The_Fabulous_Thunderbirds dbp:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
39,15,train,Give me the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerName ?profession WHERE {
  # Find the resource for Coke Studio Philippines
  ?cokeStudio a dbo:TelevisionShow ;
              dbp:name ""Coke Studio Philippines""@en .
  
  # Identify producers associated with this show
  ?cokeStudio dbo:producer ?producer .

  # Get the name of each producer
  ?producer foaf:name ?producerName .

  # Find the profession of each producer
  OPTIONAL { 
    ?producer dbo:profession ?professionResource .
    ?professionResource rdfs:label ?profession .
    FILTER (lang(?profession) = ""en"")
  }
}
ORDER BY ?producerName
LIMIT 10
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
531,61,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manuelOffice ?miguelParty ?miguelPosition WHERE {
  # Manuel Pinto da Costa's office in a military conflict
  ?manuel a dbo:Politician ;
          dbo:officeHolder ?office .
  ?office dbo:roleName ?manuelOffice .
  
  OPTIONAL { 
    ?conflict dbo:participant ?manuel ;
              a dbo:MilitaryConflict .
  }
  
  # Miguel Maura's leadership in a political party
  ?miguel a dbo:Politician ;
          dbo:leaderOf ?party .
  ?party a dbo:PoliticalParty ;
         dbp:name ?miguelParty .
  ?miguelPosition dbo:roleName ?position .
  FILTER(?manuel = dbr:Manuel_Pinto_da_Costa)
  FILTER(?miguel = dbr:Miguel_Maura)
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
816,49,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find movies with Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Step 2: Find other actors in those movies
  ?movie dbo:starring ?coActor .

  # Step 3: Check if the co-actor has a spouse
  OPTIONAL { ?coActor dbp:spouse ?spouse . }

  # Step 4: Check if the spouse has children
  OPTIONAL { ?child dbo:parent ?spouse . }
  
  # Step 5: Check if any of those children have parents (the co-actor) related to Mariclare Costello
  OPTIONAL { ?child dbo:parent ?coActor .
             ?mariclare dbr:Mariclare_Costello .
             ?mariclare dbo:spouse ?relatedPerson .
             FILTER(?relatedPerson = ?coActor)
           }
  
  # Ensure the actor is not Herschel Bernardi
  FILTER (?coActor != dbr:Herschel_Bernardi)

  BIND(?coActor AS ?actor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
756,42,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Find VfL Bochum's manager for the 2007-08 season
  ?team a dbo:SoccerClub ;
        dbo:sportTeamSeason dbr:2007–08_VfL_Bochum_season .
  
  ?season dbo:manager ?manager .
  ?manager foaf:name ?managerName .

  # Ensure the manager is native to West Germany
  ?manager dbo:nationality dbr:West_Germany .

  # Link this manager to Thomas Letsch's team management
  ?letschTeam a dbo:SoccerClub ;
              dbo:sportTeamSeason ?letschSeason .
  
  ?letschSeason dbo:manager ?manager .
  ?letschTeam dbp:player dbr:Thomas_Letsch .
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
737,8,train,"Give me the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Archduke Charles Louis of Austria"" .
  ?parent dbr:Charles_Louis,_Archduke_of_Austria .
  ?parent dbo:child ?child .
  ?child a dbo:Royalty .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
737,55,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht dbo:spouse ?spouse .
  ?philippAlbrecht dbo:child ?child1 .

  # Step 2: Find his child
  ?child1 dbo:child ?grandChild1 .

  # Step 3: Find the grandchild
  ?grandChild1 dbo:child ?greatGrandChild .

  # Step 4: Identify the great-grandchild who is royalty and related to Archduke Charles Louis of Austria
  ?greatGrandChild a dbo:Monarch .
  ?greatGrandChild dbp:parent ?archdukeCharlesLouisRelation .
  ?archdukeCharlesLouisRelation dbr:Archduke_Charles_Louis_of_Austria .

  # Step 5: Determine the predecessor in terms of title or position
  OPTIONAL { ?greatGrandChild dbo:predecessor ?predecessor . }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
492,3,train,Give me the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:The_Sky_Ranger_(1928_film) dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
361,15,train,Give me the actor of Rustlers' Rhapsody and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find actors in ""Rustlers' Rhapsody""
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Rustlers' Rhapsody""@en .

  # Ensure the actor is professionally associated with Frédéric Bouraly
  OPTIONAL { 
    ?association dbo:agent1 ?actor ;
                 dbo:agent2 dbr:Frédéric_Bouraly .
  }

  # Filter to ensure we have a valid association
  FILTER EXISTS {
    ?association dbo:agent1 ?actor ;
                 dbo:agent2 dbr:Frédéric_Bouraly .
  }
}
```",3,3,4,2,2,2,3,28,0,0,4,0,0.0,0
816,13,train,Give me the parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?parent WHERE {
  ?person a dbo:Photographer .
  OPTIONAL { 
    ?person dbo:spouse ?spouse . 
    ?spouse dbo:child ?child .
    FILTER(?child = ?person)
    ?spouse dbp:birthName ?parent
  }
  UNION
  OPTIONAL { 
    ?person dbo:child ?child .
    ?person dbo:spouse ?spouse .
    FILTER(?child = ?person)
    ?spouse dbp:birthName ?parent
  }
}
ORDER BY ?person
LIMIT 10
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
628,5,train,"Give me the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",1,2,2,1,1,3,3,71,0,10,97,0.0,0.0,0
159,51,train,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the writer of ""Always the Love Songs""
  ?tvShow dbo:title ""Always the Love Songs"" .
  ?tvShow dbo:writer ?person .

  # Find a commander in the war related to the Battle of Vienna
  ?warEvent dbo:name ?eventName .
  FILTER(CONTAINS(LCASE(?eventName), ""battle of vienna"") || CONTAINS(LCASE(?eventName), ""commander""))
  ?warEvent dbo:participant ?person .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
513,8,train,Give me the residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person .
  ?person dbo:positionTitle ""Leader of the Ulster Unionist Party""@en ;
          dbo:party dbr:Ulster_Unionist_Party .
  OPTIONAL { ?person dbp:residence ?residence . }
}
LIMIT 1
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
347,59,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Step 1: Find an entity that is a societal event, event, and television show
  ?entity a dbo:SocietalEvent ;
         a dbo:Event ;
         a dbo:TelevisionShow .

  # Step 2: Identify the commander in the war related to this entity
  ?war dbo:commander ?commander .
  
  # Step 3: Ensure the military force is connected to the Algerian War
  ?war dbo:militaryForce dbr:Algerian_War .

  # Step 4: Trace familial relationships for Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .
  ?parent dbo:child ?child .
  ?child dbo:father ?commander .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
39,36,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Bob Thompson"" .
  ?person dbo:profession dbr:Singer .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
943,38,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather ?alterEgo WHERE {
  # Na'od's father
  ?naod a dbo:Person ;
        dbp:father ?dawit .

  # Dawit II (Na'od's father)
  ?dawit a dbo:Person ;
         dbp:father ?zaraYaqob ;
         foaf:name ""Dawit II""@en .

  # Zara Yaqob (Grandfather of Na'od, royalty and office holder)
  ?zaraYaqob a dbo:Monarch ;
             dbo:country dbr:Ethiopia ;
             foaf:name ?grandfather .

  # Reference to The Shadow's alter ego
  ?shadowAlterEgo a dbo:FictionalCharacter ;
                  dbp:alterEgo ""Lamont Cranston""@en .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
203,5,train,Who is the reference to William Bayne?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?description WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""William Bayne"" .
  OPTIONAL { ?person dbo:description ?description . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
361,23,train,"Give me the professional in the profession of Frédéric Bouraly and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Frédéric Bouraly is an actor
  dbr:Frédéric_Bouraly a dbo:Actor .

  # Find works related to ""Lasso the Moon""
  ?work a dbo:Film ; 
        dbp:title ""Lasso the Moon""@en .
  
  # Find actors in that work
  ?work dbo:actor ?actor .
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
58,4,train,Give me the award of Ian Gregson (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person a dbo:Writer .
  ?person foaf:name ""Ian Gregson"" .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
295,11,train,"Give me the native of Birmingham and writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writerName WHERE {
  ?work a dbo:MusicalWork .
  ?work dbo:composer ?person .
  ?person foaf:name ?writerName .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace dbr:Birmingham .
  FILTER(CONTAINS(LCASE(?work), ""apache indian""))
}
LIMIT 10
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
557,23,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalAlterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character foaf:name ""Kent Allard""@en .
  OPTIONAL { ?character dbo:mediaType dbr:Comic_books . }
  ?character dbo:alterEgo ?alterEgo .
  ?alterEgo foaf:name ?professionalAlterEgo .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
103,7,train,"Give me the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?series WHERE {
  ?character a dbo:VideoGame .
  ?character foaf:name ""The Shadow""@en .
  OPTIONAL { ?character dbo:basedOn dbr:The_Shadow_(character) . }
  ?character dbo:inSeries ?series .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
468,9,train,"Give me the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?birthName WHERE {
  # Alfonso IV of Aragon resource
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?spouse .
  
  # Find children of Alfonso IV
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Retrieve birth name
  OPTIONAL { ?child dbp:birthName ?birthName . }
}
ORDER BY ?child
LIMIT 10
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
80,46,train,Give me the actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?albumActor ?movieActor WHERE {
  # Part 1: Actor of the album ""What You Know"" by T.I.
  ?song dbo:title ""What You Know (T.I. song)""@en .
  ?song dbo:lyricist dbr:T.I._(rapper) .
  ?song dbo:album ?album .
  
  OPTIONAL {
    ?album dbo:actor ?albumActor .
  }
  
  # Part 2: Actor of the movie related to the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb""@en .
  ?book dbo:author ?author .
  
  OPTIONAL {
    ?movie dbo:writer ?author .
    ?movie dbo:actor ?movieActor .
  }
}
```",5,5,6,3,2,3,3,71,0,0,10,0,0.0,0
353,32,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Identify William I of Sicily's children who are royalty
  ?child dbo:parent dbr:William_I_of_Sicily ;
         a dbo:Monarch .

  # Find Roger III, Duke of Apulia's parent
  ?rogerParent dbo:child dbr:Roger_III,_Duke_of_Apulia .

  # Ensure the child is also a child of Roger III's parent
  ?child dbo:parent ?rogerParent .

  # Get the father of this child
  ?child dbo:father ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
941,8,train,Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel dbo:spouse ?firstSpouse .
  
  ?firstSpouse a dbo:Person .
  
  ?firstSpouse dbo:spouse ?spouseOfSpouse .
}
```",2,2,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
103,46,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .

  # John Cleese's birth name and his professions
  dbr:John_Cleese dbp:birthName ""Richard Grant Esterhuysen""@en .
  
  # Find movies that are also television shows
  ?movie a dbo:Film ;
         dbo:genre ?genre .
  FILTER EXISTS { ?genre rdfs:label ""Television film""@en }
  
  # John Cleese acted in these movies
  dbr:John_Cleese dbo:actedIn ?movie .

  # Find professionals with the same profession as Shatrughan Sinha who also acted in these movies
  ?professional a dbo:Actor ;
                dbo:profession ?sinhaProfession ;
                dbo:actedIn ?movie .
}
```",5,6,6,3,2,3,3,71,0,0,28,0,0.0,0
39,8,train,"Who is the person born, that is a musical artist, as Robert Lamar Thompson?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Robert Lamar Thompson"" .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
203,9,train,Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battle ?militaryForce ?commander WHERE {
  # Retrieve information about the Battle of Fort Royal
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Fort Royal""@en .
  
  OPTIONAL { 
    ?battle dbp:militaryForce ?militaryForce . 
  }
  
  OPTIONAL {
    ?campaign a dbo:MilitaryCampaign ;
              rdfs:label ""French campaign in Egypt and Syria""@en .
    
    ?campaign dbp:commander ?commander .
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
816,43,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .

  ?actor dbo:child dbr:Eugène_Cattin .
  ?actor dbo:child dbr:Doon_Arbus .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
159,15,train,"Give me the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Identify Michał Kazimierz Pac and his associated military conflict
  dbr:Mikołaj_Kazimierz_Pas_(general) dbo:participatedIn ?conflict .
  
  # Find the commander who is a politician and office holder in that conflict
  ?commander dbo:positionHeld ?office ;
             dbo:memberOf ?politicalParty ;
             dbo:participatedIn ?conflict .

  FILTER(?conflict = ?conflict) # Ensure it's the same conflict

  # Optional: Filter for specific roles or titles if needed
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
905,49,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary
  dbr:Béla_IV_of_Hungary dbo:spouse ?spouse .
  
  # Children of Béla IV (his children)
  ?child dbo:parent dbr:Béla_IV_of_Hungary ;
         dbo:parent ?spouse .

  # Grandchildren of Béla IV
  ?grandchild dbo:parent ?child .

  # Maria of Hungary, spouse of Charles II of Naples
  dbr:Maria_of_Hungary dbo:spouse dbr:Charles_II_of_Naples .
  
  # Check if the grandchild is a royalty and connected to Maria of Hungary
  ?grandchild a dbo:Monarch ;
              dbo:spouse|dbo:partner ?mariaConnection .

  FILTER(?mariaConnection = dbr:Maria_of_Hungary)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
472,7,train,Give me the territory administered from Copenhagen and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory WHERE {
  ?person a dbo:Monarch .
  ?person foaf:name ""Olaf I of Denmark"" .
  ?person dbo:country dbr:Denmark .

  OPTIONAL { 
    ?administration dbo:administeredBy ?person .
    ?administration dbo:administrativeCenter dbr:Copenhagen .
    ?administration dbo:territory ?territory .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,12,train,Give me the tenant of Spain and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:country dbr:Spain .
  ?person dbo:city dbr:Santiago_de_Compostela .
}
```

This query looks for individuals who are associated with both Spain and Santiago de Compostela in the DBpedia dataset.",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
386,10,train,Give me the war of the awardee of 25.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?war WHERE {
  ?award a dbo:Award .
  ?award dbp:year ""2025""^^xsd:gYear .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .

  OPTIONAL { 
    ?person dbo:memberOf ?organization .
    ?organization dbo:member ?war .
    FILTER EXISTS { ?war a dbo:War }
  }

  OPTIONAL {
    ?person dbo:occupation ?occupation .
    FILTER CONTAINS(LCASE(?occupation), ""activist"")
  }
}
ORDER BY ?awardee
LIMIT 10
```",2,2,3,2,1,2,3,28,0,0,182,0,0.0,0
89,51,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Saw Min Phyu's spouse who is royalty
  ?spouse a dbo:Royalty ;
          dbo:spouse ?sawMinPhyu .
  
  # Identify the child of this spouse
  ?child dbo:parent ?spouse .

  # Find the predecessor of this child
  ?predecessor dbo:successor ?child .

  # Find Myat Hpone Pyo's father who is royalty
  ?myatHponePyo a dbo:Person ;
                dbp:father ?father .
  
  ?father a dbo:Royalty .

  # Identify the spouse of this father
  ?spouseFather dbo:spouse ?father .

  FILTER(?sawMinPhyu = dbr:Saw_Min_Phyu)
  FILTER(?myatHponePyo = dbr:Myat_Hpone_Pyo)
}
```",5,7,6,3,2,3,3,71,1,0,0,1.0,1.0,1.0
347,40,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  # Find Eleonore of Austria and her father
  ?eleonore a dbo:Person ;
            dbp:spouse ?husband ;
            dbp:parent ?father .
  
  ?father foaf:name ?fatherName ;
          dbp:birthName ""Ferdinand II, Holy Roman Emperor""@en .

  # Find events related to the Algerian War
  OPTIONAL {
    ?event dbo:subject dbr:Algerian_War ;
           a dbo:SocietalEvent .
    
    ?tvShow dbo:genre dbr:Military_Drama ;
            dbo:topic ?event .
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
668,43,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person dbo:work dbr:The_Live_Anthology .
  ?person dbo:associatedBand dbr:$pacely .
  ?person foaf:name ?professionalName .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
89,54,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Saw Shwe Khet and his child who is royalty
  ?sawShweKhet a dbo:Person ;
               dbo:child ?royaltyChild .

  # The royalty child's predecessor is Myat Hpone Pyo
  ?royaltyChild dbo:predecessor dbr:Myat_Hpone_Pyo .

  # Min Hla Htut is related to the royalty child through Saw Shwe Khet
  ?minHlaHtut dbo:parent ?sawShweKhet ;
             dbo:placeOfBirth dbr:Pyakaung .

  # Find the spouse of Saw Shwe Khet
  ?sawShweKhet dbo:spouse ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
585,0,train,Give me the native of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:New_York_(state) .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,7189,0,0.0,0
943,29,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow and child of Dawit I.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?alterEgo ?child WHERE {
  # Baeda Maryam I and his father
  ?baedaMaryamI a dbo:Person ;
                dbp:father ?father .

  # The Shadow's alter ego
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow"" .
  OPTIONAL { ?shadow dbo:alterEgo ?alterEgo . }

  # Dawit I and his child
  ?dawitI a dbo:Person ;
          dbp:child ?child .

  FILTER (?baedaMaryamI = dbr:Baeda_Maryam_I)
  FILTER (?shadow = dbr:The_Shadow)
  FILTER (?dawitI = dbr:Dawit_I_of_Ethiopia)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,43,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person dbr:Albrecht_von_Wallenstein .
  ?person dbo:childOf ?parent .
  ?parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  
  OPTIONAL { 
    ?parent dbo:commanderInThirtyYearsWar ?commander .
    ?commander dbr:Leopold_V,_Archduke_of_Austria .
    
    ?leopoldV dbo:childOf ?charlesJosephParent .
    ?charlesJosephParent dbr:Charles_Joseph_of_Austria .
  }
  
  ?person dbo:father ?father .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,4,train,Give me the reference to Mitaka and region of Japan Standard Time.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitaka ?region WHERE {
  ?mitaka a dbo:PopulatedPlace ;
          rdfs:label ""Mitaka""@en .
  OPTIONAL { 
    ?mitaka dbo:timeZone ?timezone .
    FILTER(CONTAINS(LCASE(STR(?timezone)), ""japan standard time""))
  }
  OPTIONAL {
    ?mitaka dbo:region ?region .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
297,7,train,"Give me the institution in Georgia (U.S. state) and entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?birthPlaceEntity WHERE {
  # Find Little Hat Jones
  ?person a dbo:MusicalArtist ;
          foaf:name ""Little Hat Jones"" .

  # Find the institution in Georgia (U.S. state)
  ?person dbo:almaMater ?institution .
  ?institution dbo:location dbr:Georgia_(U.S._state) .

  # Find the birth place entity, which is a country
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbp:countryName ?birthPlaceEntity .
}
```",3,4,4,2,2,2,2,9,0,0,346,0,0.0,0
871,18,train,"Give me the father of Arthur Stanley (politician) and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Person ;
          foaf:name ""Arthur Stanley"" ;
          dbo:parent ?father .

  # Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby"" ;
          dbo:parent ?father .

  # Victor Stanley (Royal Navy officer)
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley"" ;
          dbo:parent ?father .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,1,train,Give me the player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?agüero a dbo:Person ;
          foaf:name ""Sergio Agüero""@en ;
          dbo:nationality dbr:Argentina ;
          dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?team dbo:member ?agüero .
    ?team dbo:member ?player .
    FILTER(?player != ?agüero)
  }
  
  OPTIONAL {
    ?association dbo:agent1 ?agüero ;
                 dbo:agent2 ?player .
    FILTER(?player != ?agüero)
  }

  ?player a dbo:Person .
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
345,1,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan_Standard_Time dbo:timeZoneRegion ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
203,12,train,Give me the military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battle ?force1 ?force2 WHERE {
  VALUES ?battle { 
    dbr:Battle_of_Cape_Finisterre_(1805) 
    dbr:Battle_of_Fort_Royal
  }
  
  ?battle dbo:combatant ?combatant .
  
  OPTIONAL { ?combatant dbp:country ?force1 . }
  OPTIONAL { ?combatant2 dbo:opponentOf ?combatant . ?combatant2 dbp:country ?force2 . }

} 
ORDER BY ?battle
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
87,6,train,Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find the film ""Paradise"" (2013)
  ?film a dbo:Film ;
        dbo:title ""Paradise""@en ;
        dbo:releaseDate ?releaseDate .
  
  FILTER(YEAR(?releaseDate) = 2013)

  # Find actors in this film
  ?film dbo:starring ?actor .

  # Find Janusz Kamiński and his spouse
  ?janusz a dbo:Person ;
          foaf:name ""Janusz Kamiński""@en ;
          dbp:spouse ?spouse .
  
  # Match the actor with Janusz Kamiński's spouse
  FILTER(?actor = ?spouse)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
37,6,train,"Give me the birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?birthPlace WHERE {
  dbr:Ethan_Iverson a dbo:MusicalArtist .
  dbr:Ethan_Iverson a dbo:Artist .
  ?work dbo:artist dbr:Ethan_Iverson .
  OPTIONAL { ?work dbo:placeOfBirth ?birthPlace . }
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
375,8,train,Give me the entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,2,104,0.0,0.0,0
89,21,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?sibling WHERE {
  # Step 1: Identify Min Hla Htut of Pyakaung
  ?minHlaHtut dbo:name ""Min Hla Htut""@en .
  
  # Step 2: Find Min Hla Htut's parent
  ?parent dbo:child ?minHlaHtut .

  # Step 3: Identify children (siblings) of this parent
  ?sibling dbo:parent ?parent .
  
  # Ensure the sibling is not Min Hla Htut himself
  FILTER (?sibling != ?minHlaHtut)

  # Step 4: Identify Myat Hpone Pyo and find their predecessor
  ?myatHponePyo dbo:name ""Myat Hpone Pyo""@en .
  ?predecessor dbo:succeededBy ?myatHponePyo .

  # Step 5: Match the sibling with the predecessor
  FILTER (?sibling = ?predecessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
119,8,train,"Give me the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  ?administration a dbo:Government .
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
}
ORDER BY ?administration
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,320,0,0.0,0
633,14,train,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine
  dbr:François_I,_Duke_of_Lorraine dbo:child ?child .
  
  # Step 2: Ensure the child is royalty
  ?child a dbo:Monarch .

  # Step 3: Find the father of this child (which should be Francis I)
  ?father dbo:spouse ?mother ;
          dbo:child ?child .

  # Step 4: Find the parent(s) of this father
  ?parent dbo:child ?father .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
756,37,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePerson WHERE {
  # Step 1: Identify Konrad Adenauer as the leader of West Germany
  ?adenauer a dbo:Politician ;
            foaf:name ""Konrad Adenauer"" ;
            dbo:nationality dbr:Germany .

  # Step 2: Find the manager of SBV Vitesse for the 2020–21 season
  ?vitesseTeam a dbo:SoccerClub ;
              dbp:teamName ""SBV Vitesse"" .
  
  ?manager a dbo:SportsAgent ;
           dbo:managedTeam ?vitesseTeam ;
           dbo:managementPeriod ?period .

  FILTER(?period >= ""2020-07-01""^^xsd:date && ?period <= ""2021-06-30""^^xsd:date)

  # Step 3: Determine the manager's birthplace
  ?manager dbo:nationality ?country .

  # Step 4: Query for a notable person from that country
  ?nativePerson a dbo:Person ;
                dbo:nationality ?country .
}
ORDER BY ?nativePerson
LIMIT 10
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
595,33,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Politician ;
          dbo:spouse dbr:Hillary_Clinton ;
          dbo:residence dbr:Chappaqua,_New_York .
  
  ?work dbo:author ?author ;
        a dbo:Book .

  ?person dbo:writtenWork ?work .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,51,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeRegion WHERE {
  VALUES (?bobbyBirthName) { ""Rakim Mayers"" } # Known birth name of Bobby Shmurda

  ?band a dbo:Band ;
        dbo:birthPlace dbr:New_York_(state) .

  ?award dbo:recipient ?band ;
         dbo:place ?nativeRegion .

  ?nativeRegion a dbo:State ;
                dbo:country dbr:United_States_of_America ;
                dbo:settlementType dbp:Settlement .

  ?person foaf:name ""Bobby Shmurda"" ;
          dbp:birthName ?bobbyBirthName .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
737,35,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht a dbo:Person ;
                  foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .

  # Step 2: Find his children
  ?child dbp:parent ?philippAlbrecht .
  
  # Step 3: Find the grandchildren (children of Philipp Albrecht's children)
  ?grandChild dbp:parent ?child .

  # Step 4: Filter these grandchildren to include only those who are royalty
  ?grandChild a dbo:Royalty ;
              foaf:name ?name .
  
  # Ensure they are also descendants of Archduke Charles Louis of Austria
  ?archdukeCharlesLouis a dbo:Person ;
                       foaf:name ""Archduke Charles Louis of Austria""@en .
  ?ancestor dbp:parent ?grandChild .
  ?ancestor dbp:parent* ?archdukeCharlesLouis .

  # Step 5: Determine the predecessor of each qualifying grandchild
  OPTIONAL { 
    ?predecessor dbo:succession ?grandChild .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,53,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in Actor.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""The Shadow"" .
  ?person dbp:birthName ""Richard Grant Esterhuysen"" .

  ?show a dbo:TelevisionShow ;
        dbo:starring ?person ;
        dbo:filmBasedOn dbr:The_Shadow_(radio_series) .

  OPTIONAL { ?show dbo:basedOn dbr:The_Shadow_(radio_series) . }
}
```",6,7,7,3,3,3,3,71,0,0,9,0,0.0,0
386,20,train,Give me the war of Alexander Lvovich Davydov and war of the awardee of 25 and entity in Russian Empire.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?davydovWar ?awardee ?award WHERE {
  # Find Alexander Lvovich Davydov and his wars
  ?davydov a dbo:Person ;
          foaf:name ""Alexander Lvovich Davydov"" ;
          dbo:nationality dbr:Russian_Empire ;
          dbo:militaryConflict ?davydovWar .

  # Find awardees of the Order of St. George, 4th class
  ?awardee a dbo:Person ;
           dbo:nationality dbr:Russian_Empire ;
           dbo:awardReceived ?order .
  
  ?order dbo:name ""Order of Saint George (Russia), 4th class"" .

  # Optional: Filter by specific time period or additional criteria if needed
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
58,0,train,Give me the spouse of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Linda_Bruckheimer dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
258,12,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?establishmentDate ?almaMater WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en .
  
  OPTIONAL { 
    ?person dbo:birthDate ""1955-12-02""^^xsd:date . 
  }
  
  OPTIONAL {
    ?person dbp:almaMater ?almaMater .
  }

  OPTIONAL {
    ?establishment dbo:foundingDate ?establishmentDate ;
                  dbo:founder ?person .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
531,26,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:OfficeHolder .
  ?person a dbo:Politician .
  ?person foaf:name ""Manuel Pinto da Costa"" .
  
  OPTIONAL { 
    ?person dbo:positionHeld ?office .
    ?office dbo:partOf ?event .
    
    FILTER (
      (?event a dbo:MilitaryConflict) || 
      (?event a dbo:SocietalEvent)
    )
  }
}
```",3,7,4,3,1,3,3,71,0,0,485,0,0.0,0
347,5,train,Give me the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Archduke_Charles_Joseph_of_Austria dbo:childOf ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,58,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorBirthPlace ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Author of ""El Deafo""
  ?author dbo:birthPlace ?authorBirthPlace .
  ?author dbo:nationality dbr:United_States .
  ?author dbo:work ?elDeafo .
  ?elDeafo rdfs:label ""El Deafo""@en .

  # Governor of Virginia
  ?governor a dbo:Politician ;
            dbo:governmentRole dbr:Governor_of_Virginia ;
            dbo:birthPlace ?governorBirthPlace .

  # Vince Gilligan
  ?vinceGilligan a dbo:Person ;
                 foaf:name ""Vince Gilligan""@en ;
                 dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,16,train,"Give me the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?album WHERE {
  ?song a dbo:Songs .
  ?song dbo:artist dbr:T.I. .
  ?song dbo:releaseAlbum ?album .
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
58,14,train,Give me the producer of the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Find Ian Gregson and his awards
  ?ianGregson a dbo:Person ;
             foaf:name ""Ian Gregson"" ;
             dbo:award ?award .

  # Link the award to a movie
  ?award dbo:recipient ?ianGregson ;
         dbo:subject ?movie .

  # Get the producer of the movie
  ?movie dbo:producer ?producer .
}
```",3,3,4,3,1,3,2,20,0,0,10672,0,0.0,0
782,25,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?band WHERE {
  VALUES (?person ?birthName) { 
    (dbr:Nick_Curran ""Nicholas Michael Curran"") 
    (dbr:Kim_Wilson ""Kim Wilson"")
  }
  
  ?person a dbo:MusicalArtist .
  ?person foaf:name ?name .
  OPTIONAL {
    ?association dbo:associatedBand ?band .
    ?association dbo:artist ?person .
    ?association dbo:associatedArtist ?artist .
    FILTER(?artist != ?person)
  }

  UNION {
    ?association dbo:associatedBand ?band .
    ?association dbo:artist ?person .
    FILTER NOT EXISTS { ?association dbo:associatedArtist ?artist }
  }
}
ORDER BY ?name
LIMIT 10
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
668,39,train,"Give me the professional in Musician and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
ORDER BY ?name
LIMIT 10
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
769,11,train,"Give me the player in Lai Sun Cheung and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete .
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .
  ?person a dbo:SoccerManager .
  ?person dbo:birthday ""1981-12-01""^^xsd:date .

  OPTIONAL { 
    ?team dbr:Lai_Sun_Cheung .
    ?playerTeam dbp:team ?team .
    ?playerTeam dbp:player ?person .
  }

  ?person foaf:name ?name .
}
```",3,7,4,2,2,3,2,20,0,0,2,0,0.0,0
353,57,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?rogerII a dbo:Person ;
           dbo:childOf ?father ;
           dbo:spouse ?constance .
  
  ?constance a dbo:Person ;
             foaf:name ""Constance of Hauteville""@en .

  ?alfonsoVI a dbo:Person ;
            foaf:name ""Alfonso VI of León and Castile""@en ;
            dbo:child ?urraca .

  ?urraca a dbo:Person ;
          foaf:name ""Urraca of León and Castile""@en ;
          dbo:spouse ?raymondBurgundy .
  
  ?raymondBurgundy a dbo:Person ;
                   foaf:name ""Raymond of Burgundy""@en ;
                   dbo:child ?alfonsoVII .

  ?alfonsoVII a dbo:Person ;
              foaf:name ""Alfonso VII of León and Castile""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,13,train,"Give me the father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?child a dbo:Monarch .
  ?child dbo:parent ?father .
  ?child dbo:spouse|dbo:partner* dbr:William_I_of_Sicily .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
375,2,train,"Give me the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?person dbp:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 2020 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
143,0,train,Give me the actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  dbr:The_Campus_Queen a dbo:Film .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,6,119686,1,5.012866356982923e-05,0.8571428571428571,0.00010025146408909014
943,20,train,Give me the child of Dawit I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for child of Dawit I
SELECT ?child WHERE {
  ?parent a dbo:Person ;
          foaf:name ""Dawit I""@en .
  ?parent dbo:child ?child .
}

UNION

# Query for alter ego of The Shadow
SELECT ?alterEgo WHERE {
  ?entity a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  ?entity dbp:alterEgo ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
249,0,train,Give me the native of Jamshedpur.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Jamshedpur .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,2,9,10,10,58,0.5,0.14705882352941177,0.22727272727272727
595,7,train,Give me the owner of USS Arcadia (ID-1605).,SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner WHERE {
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,9,train,"Give me the father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Eleonore_of_Austria dbp:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
203,28,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Define the battles of interest
  VALUES ?battle { 
    dbr:Battle_of_Fort_Royal 
    dbr:Battle_of_Cape_Finisterre_(1805)
  }
  
  # Find commanders involved in these battles
  ?battle dbo:commander ?commander .
  
  # Ensure the commander is associated with both battles
  VALUES ?regiment { dbr:30th_(Cambridgeshire)_Regiment_of_Foot }
  ?battledetail dbo:participatingUnit ?regiment ;
                dbo:conflict ?battle .

  # Filter to ensure involvement of the specific regiment in both battles
  FILTER EXISTS {
    ?battledetail1 dbo:participatingUnit ?regiment ;
                   dbo:conflict dbr:Battle_of_Fort_Royal .
  }
  
  FILTER EXISTS {
    ?battledetail2 dbo:participatingUnit ?regiment ;
                   dbo:conflict dbr:Battle_of_Cape_Finisterre_(1805) .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
398,12,train,Give me the player in the writer of The First Glove and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:wikiPageWikiLink dbr:The_First_Glove .
  ?person foaf:name ""Наши парни""@ru ;
          foaf:name ""Nashi parni""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
89,9,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?sawMinHla a dbo:Person ;
             foaf:name ""Saw Min Hla""@en .
  
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  ?sawMinHla dbo:child ?child .
  ?sawShweKhet dbo:spouse ?child .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,38,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Alfonso VI of León and Castile
  dbr:Alfonso_VI_of_León_and_Castile a dbo:Person ;
    dbo:spouse ?spouse .

  # His children
  ?child dbo:parent dbr:Alfonso_VI_of_León_and_Castile ;
         dbo:parent ?spouse .

  # Alfonso VI's grandchildren (children of his children)
  ?grandchild dbo:parent ?child .

  # Find the grandchild who is a father to royalty related to William I of Sicily
  ?royalty dbo:parent ?grandchild .
  ?royalty dbo:spouse ?williamISpouse .
  ?williamISpouse dbo:spouse dbr:William_I_of_Sicily .

}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
609,59,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  ?powell a dbo:Person ;
          foaf:name ""Paulus Powell"" ;
          dbo:birthPlace ?region .

  # Ensure the region is both a region and an administrative region
  ?region rdf:type dbo:Region, dbo:AdministrativeRegion .

  # Step 2: Find the governor of that region
  ?governor a dbo:Politician ;
            dbp:governmentRole ""Governor"" ;
            dbo:birthPlace ?region .
  
  # Step 3: Identify Vince Gilligan's award
  ?vince a dbo:Person ;
         foaf:name ""Vince Gilligan"" ;
         dbo:awardReceived ?award .

  # Step 4: Find another awardee of the same award
  ?otherAwardee a dbo:Person ;
                dbo:awardReceived ?award .

  # Step 5: Determine the birth place of this other awardee
  ?otherAwardee dbo:birthPlace ?governorBirthPlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
158,21,train,"Give me the person decedent at Switzerland and native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .

  # Deceased in Switzerland
  ?person dbo:deathPlace dbr:Switzerland .

  # Native of the Grand Duchy of Finland
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .

  # Native of an administration under Nicholas II (Russian Empire)
  ?person dbo:nationality dbr:Russian_Empire .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
78,11,train,Give me the band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""David Paton""@en .
  
  ?collaboration dbo:member ?artist ;
                 dbo:member ?bandMember .

  FILTER(?bandMember != ?artist)
}
```",2,2,3,2,1,2,3,28,0,0,114,0,0.0,0
723,13,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?album a dbo:Album .
  ?album dbp:title ""Nothing to Gein"" .
  ?album dbo:producer ?producer .

  ?producer a dbo:Organization ;
            a dbo:MusicalGroup .

  ?member dbo:musicArtist ?producer .
  ?member foaf:name ?bandMember .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
103,6,train,Give me the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Shatrughan_Sinha a dbo:Person .
  OPTIONAL { dbr:Shatrughan_Sinha dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
140,8,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Westport,_Connecticut ;
         dbo:member ?member .
  
  OPTIONAL { 
    ?party dbo:isRulingParty true . 
  }
}",2,4,3,2,1,3,2,20,0,0,21486,0,0.0,0
293,40,train,Give me the person born as Harriette Arlene Lake and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbp:birthName ""Harriette Arlene Lake"" .
  
  ?marriage dbo:spouse1 ?person ;
            dbo:spouse2 dbr:Roger_Pryor_(actor) .

  ?landmark dbo:elevation ""20.1168000000""^^xsd:float ;
            dbo:rulingParty ?party .

  ?party dbo:member ?person .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
203,35,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  # Identify Robert Calder as a person involved in military events
  ?calder a dbo:Person ;
          foaf:name ""Robert Calder""@en .
  
  # Find the war or conflict where he was a commander
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?calder .

  # Connect the 30th (Cambridgeshire) Regiment of Foot to the conflict
  ?regiment dbr:30th_(Cambridgeshire)_Regiment_of_Foot ;
            dbo:partOf ?conflict .
  
  # Identify the military force associated with the conflict
  ?conflict dbo:militaryForce ?militaryForce .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
39,33,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in Singer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:profession dbr:Singer .
  ?character dbo:alterEgo ?alterEgo .
}
```",4,6,5,3,2,3,3,71,0,0,5422,0,0.0,0
731,1,train,Give me the war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  dbr:Tom_Phillips_(Royal_Navy_officer) dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
595,54,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Hillary Clinton as a resident of Chappaqua, New York and author
  ?hClinton a dbo:Politician ;
            dbo:residence dbr:Chappaqua,_New_York ;
            dbo:spouse ?bClinton ;
            dbp:authorOf dbr:An_Invitation_to_the_White_House .

  # Bill Clinton as spouse of Hillary Clinton
  ?bClinton a dbo:Politician ;
            foaf:name ""Bill Clinton""^^xsd:string ;
            dbo:spouse ?hClinton .

  # Bill Clinton's role in the Third Taiwan Strait Crisis
  ?crisis dbr:The_Third_Taiwan_Strait_Crisis .
  ?commander a dbo:Person ;
             dbo:roleInCrisis ?crisis ;
             foaf:name ""Bill Clinton""^^xsd:string .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
119,3,train,Who is the commander in French Revolutionary Wars?,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderName WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:militaryConflict dbr:French_Revolutionary_Wars .
  OPTIONAL { ?person foaf:name ?commanderName . }
}
ORDER BY ?commanderName
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,58,0,0.0,0
386,17,train,Give me the war of the awardee of 25 and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Aleksandr_Lvovich_Davydov dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,6,train,Give me the birthplace of Ebrahim Alkazi and birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Ebrahim_Alkazi 
    dbr:Smita_Patil 
  }
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
119,28,train,Give me the tenant of Santiago de Compostela and tenant of Spain and office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?office WHERE {
  # Find leaders of Santiago de Compostela
  ?santiagoLeader a dbo:Politician ;
                 dbo:spouseOrPartner ?person .
  
  # Find leaders of Spain
  ?spanishLeader a dbo:Politician ;
                 dbo:spouseOrPartner ?person .

  # Ensure the same person is leader in both places
  FILTER (?santiagoLeader = ?spanishLeader)

  # Get the office held during the 2009 Galician regional election
  ?officeEvent dbo:date ""2009-05-01""^^xsd:date ;
              dbo:place dbr:Santiago_de_Compostela ;
              dbo:participant ?person .
  
  ?person dbo:positionHeld ?office .

  # Bind the leader to a variable for output
  BIND(?person AS ?leader)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,34,train,"Give me the military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battle ?force1 ?commander1 ?force2 ?commander2 WHERE {
  # Identify the battle
  ?battle a dbo:MilitaryConflict ;
          dbo:date ""1805-07-22""^^xsd:date ;
          rdfs:label ?battleLabel .

  FILTER(CONTAINS(LCASE(?battleLabel), ""cape finisterre""))

  # Get forces and commanders involved in the battle
  OPTIONAL {
    ?battle dbo:participatedInMilitaryForce1 ?force1 .
    ?force1 dbo:commander ?commander1 .
  }
  
  OPTIONAL {
    ?battle dbo:participatedInMilitaryForce2 ?force2 .
    ?force2 dbo:commander ?commander2 .
  }

  # Filter forces to include those from the Triple Alliance
  FILTER(
    EXISTS { ?force1 rdfs:label ?forceLabel1 . FILTER(CONTAINS(LCASE(?forceLabel1), ""britain"") || CONTAINS(LCASE(?forceLabel1), ""portugal"") || CONTAINS(LCASE(?forceLabel1), ""spain"")) }
    ||
    EXISTS { ?force2 rdfs:label ?forceLabel2 . FILTER(CONTAINS(LCASE(?forceLabel2), ""britain"") || CONTAINS(LCASE(?forceLabel2), ""portugal"") || CONTAINS(LCASE(?forceLabel2), ""spain"")) }
  )
}
ORDER BY ?battle
LIMIT 10
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,53,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          a dbo:SoccerPlayer, dbo:SoccerManager .

  # Find Marty Pollio's birthday
  dbr:Marty_Polio dbo:birthday ?martyBirthday .

  # Find an athlete who shares the same birthday as Marty Pollio and played with the person from step 1
  ?athlete dbo:birthday ?martyBirthday ;
           a dbo:Athlete .
  
  # Ensure this athlete played in the same team as the person from step 1
  ?team dbo:player ?person, ?athlete .

  # Find teams where Sergio Agüero also played
  ?agüeroTeam dbo:player dbr:Sergio_Agüero .
  
  # The team must be the same for both conditions
  FILTER (?team = ?agüeroTeam)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
203,45,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battleMilitaryForce ?battleCommander ?event ?awardee WHERE {
  # Battle of Fort Royal details
  VALUES ?battle { dbr:Battle_of_Fort_Royal }
  
  ?battle dbo:militaryForce ?battleMilitaryForce .
  OPTIONAL { ?battle dbo:commander ?battleCommander . }

  # French campaign in Egypt and Syria context
  ?campaign dbo:participatedIn ?battle .
  ?campaign a dbo:MilitaryCampaign ;
            dbp:name ""French campaign in Egypt and Syria"" .

  # Event related to Knight Commander of the Order of the Bath
  ?awardee dbo:honour dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  ?event dbo:awardRecipient ?awardee ;
         a dbo:Event, dbo:SocietalEvent .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
23,0,train,Give me the party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Roy Barreras""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
731,7,train,Give me the force of the awardee of Commander of the Order of the British Empire.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?person dbo:honoraryTitle dbr:Commander_of_the_Order_of_the_British_Empire .
  OPTIONAL { ?person dbo:memberOf ?force . }
}",2,2,3,2,1,3,2,20,0,0,162,0,0.0,0
687,38,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find actors associated with ""All or Nothing: Manchester City""
  ?actor dbo:workFeaturedIn dbr:All_or_Nothing:_Manchester_City .
  
  # Ensure the actor is a soccer player and an athlete
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

  # Identify the person born on November 3, 1979, who is both a soccer player and manager
  ?manager dbp:birthDate ""1979-11-03""^^xsd:date ;
           a dbo:SoccerPlayer ;
           a dbo:SoccerManager .
  
  # Find the team associated with this manager
  ?team dbo:coach ?manager .

  # Ensure the actor is part of the same team as the manager
  ?actor dbo:playsFor ?team .

  # Return the player (actor)
  BIND(?actor AS ?player)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
859,2,train,"Give me the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?group WHERE {
  ?album a dbo:MusicAlbum .
  ?album dbp:title ""Burnt by the Sun"" .
  ?album dbo:artist ?group .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
687,8,train,"Give me the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person dbo:birthday ""1979-11-03""^^xsd:date .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
39,18,train,Give me the professional in Singer and band of Bob Thompson (musician) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName WHERE {
  # Find Bob Thompson as a musician
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" .

  # Check if he is associated with any bands
  ?person dbo:memberOfBand ?band .
  
  # Get the name of the band
  ?band foaf:name ?bandName .

  UNION

  # Check if he has a role as a singer in any group
  ?group dbo:leadSinger ?person ;
         foaf:name ?groupName .

}
ORDER BY ?bandName
LIMIT 10
```",3,3,4,1,3,3,3,71,0,0,3,0,0.0,0
628,32,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Identify Bobby Shmurda by his birth name
  ?bobby a dbo:MusicalArtist ;
         foaf:name ""Bobby Shmurda"" ;
         dbp:birthName ""Ackquille Jean Pollard"" .

  # Find band members associated with Bobby Shmurda
  ?association dbo:associatedBandMember ?bandMember .
  ?association dbo:musicalArtist ?bobby .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
595,58,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Bill Clinton's written work
  ?work dbo:author dbr:Bill_Clinton ;
        a dbo:Book .

  # Commander in the war (metaphorical)
  ?commander dbo:commanded ?war .
  ?war rdf:type dbo:Disease ;  # Metaphorically a disease
       rdf:type dbo:SocietalEvent .

  # Owner of USS Arcadia (ID-1605)
  ?ship dbr:USS_Arcadia_(ID-1605) ;
        dbo:owner ?owner .

  # Spouse of Hillary Clinton is Bill Clinton
  ?billClinton dbp:spouse dbr:Hillary_Clinton .
  
  # Linking all conditions
  ?commander dbr:Bill_Clinton .  # Assuming Bill Clinton was the commander in this context
  ?owner dbr:Bill_Clinton .

  # The author of the work is what we want to find
  ?author dbr:Bill_Clinton .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
412,6,train,Give me the entity in Athens and war of Napoleon Zervas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?description WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Athens .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbp:wikiPageWikiLink ?link . FILTER(CONTAINS(LCASE(STR(?link)), ""georgios_zervas"")) }
  ?person rdfs:comment ?description .
}
ORDER BY ?person
LIMIT 10
```",2,2,3,1,2,2,3,28,0,20,1,0.0,0.0,0
412,0,train,Give me the war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict .
  ?war dbo:participatedIn [
    a dbo:Person ;
    foaf:name ""Napoleon Bonaparte""^^xsd:string
  ] .
  OPTIONAL { 
    ?war dbo:participatedIn [
      a dbo:Person ;
      foaf:name ""Markos Vafiadis""^^xsd:string
    ] .
  }
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
871,5,train,"Who is the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolder true .
  ?child foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  ?child dbo:parent ?person .
  ?person foaf:name ?parentName .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
628,20,train,Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Find members of Uncle Murda
  ?band a dbo:MusicalGroup ;
        foaf:name ""Uncle Murda""@en .
  ?band dbo:member ?member .

  # Find birth name of Bobby Shmurda
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bobby Shmurda""@en .
  ?person dbp:birthName ?bobbyBirthName .

  # Check if any member has the same birth name as Bobby Shmurda
  OPTIONAL { ?member dbp:birthName ?memberBirthName . }
  
  FILTER (?memberBirthName = ?bobbyBirthName)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,45,train,"Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional (GROUP_CONCAT(DISTINCT ?work; separator="", "") AS ?works) WHERE {
  # Step 1: Find the director/producer of ""The Adventures of Tom Sawyer"" (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:directorOrProducer ?professional .

  # Step 2: Identify the actor in ""High Society Blues""
  dbr:High_Society_Blues dbo:actor ?actor .

  # Step 3: Determine the claim to fame (a notable work) of that actor
  ?actor dbo:notableWorks ?work .
  
  # Step 4: Find the producer of that notable work
  OPTIONAL { ?work dbo:producer ?professional . }
}
GROUP BY ?professional
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
414,16,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of the awardee of Nobel Prize in Physics.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?person dbo:nobelPrize dbr:Nobel_Prize_in_Physics .
  ?institution a dbo:EducationalOrganization ;
               dbo:alumni ?person .
  ?show dbo:presenter ?institution .
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
198,37,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?force WHERE {
  # Find Quincy Adams Gillmore
  dbr:Quincy_Adams_Gillmore a dbo:Person .
  
  # Identify awards related to him
  ?award dbo:recipient dbr:Quincy_Adams_Gillmore ;
         dbo:recipient ?awardee .

  # Connect awardees to entities in Charleston, South Carolina
  ?entity dbo:location dbr:Charleston,_South_Carolina .
  ?awardee dbo:relatedEntity ?entity .

  # Retrieve the force of the awardee
  ?awardee dbp:force ?force .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,58,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:TelevisionShow .
  ?entity a dbo:SocietalEvent .

  ?entity dbo:commanderInWar dbr:Battle_of_Vienna .
  
  ?successor dbo:succeededBy dbr:Yurii_Khmelnytsky .
  ?successor dbp:name ?entityName .
  
  ?writer foaf:name ""Always the Love Songs"" ;
          dbo:reference ?entity .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,55,train,"Give me the person born as the birth name of Ann Sothern and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  VALUES (?annSothern) { dbr:Ann_Sothern }
  ?annSothern dbo:birthName ?birthName .

  # Person who is a party member in Central, Louisiana
  ?partyMember dbo:residence dbr:Central,_Louisiana .
  ?partyMember dbo:memberOfParty ?rulingParty .

  # Actor from ""1,000 Dollars a Minute"" and their spouse
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:spouse ?spouse .

  # Find the person who matches all criteria
  FILTER (?person = ?partyMember && ?person = ?spouse)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
353,4,train,"Who is the parent of Roger III, Duke of Apulia?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
782,21,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickCurranArtist ?fabulousThunderbirdsRealName WHERE {
  # Find Nick Curran's associated musical artist
  ?nickCurran dbo:associatedMusicalArtist ?nickCurranArtist .
  
  # Find the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbp:realName ?fabulousThunderbirdsRealName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,59,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Step 1: Identify musical artists native to Florida
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .

  # Step 2: Check if they are band members of another artist
  ?bandMemberOf a dbo:Band ;
               dbo:member ?person .

  # Step 3: Ensure the second artist is part of GS9
  ?gs9Artist a dbo:MusicalArtist .
  ?gs9Artist dbo:member ?bandMemberOf .
  ?gs9Artist dbp:associatedActs dbr:GS9 .

  # Retrieve birth name
  ?person dbp:birthName ?birthName .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,26,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?memberOf dbo:member ?person .
  ?memberOf dbo:name ?bandName .
}
```",3,4,4,3,1,3,3,71,0,0,14,0,0.0,0
398,11,train,Give me the player in Aleksandr Filimonov and figure known as the nickname of Russia national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerName ?teamNickname WHERE {
  # Find Aleksandr Filimonov as a player
  ?person a dbo:FootballPlayer ;
          foaf:name ""Aleksandr Filimonov""@en .
  
  # Find the Russia national football team and its nickname
  ?team a dbo:NationalSoccerTeam ;
        dbp:country dbr:Russia ;
        dbp:nickname ?teamNickname .

  # Link Aleksandr Filimonov to the Russia national football team
  ?person dbo:playsFor ?team .
  
  # Get the player's name for clarity in results
  ?person foaf:name ?playerName .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
39,7,train,Give me the birth name of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Bob_Thompson_(musician) a dbo:MusicalArtist .
  OPTIONAL { dbr:Bob_Thompson_(musician) dbp:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,22,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  dbr:The_Shadow a dbo:FictionalCharacter .
  OPTIONAL { dbr:The_Shadow dbo:profession ?professional . }
}

SELECT ?profession WHERE {
  dbr:Frédéric_Bouraly a dbo:Person .
  OPTIONAL { dbr:Frédéric_Bouraly dbo:occupation ?profession . }
}
```",4,4,5,2,2,2,3,28,0,0,4210,0,0.0,0
782,23,train,Give me the reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Kim Wilson"" .
  ?band dbo:member ?person .
  ?band foaf:name ?bandName .
}
```",3,3,4,3,1,3,3,71,0,0,10,0,0.0,0
386,4,train,Give me the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardEvent a dbo:Award .
  ?awardEvent dbo:number ""25""^^xsd:int .
  ?awardEvent dbo:recipient ?awardee .
}
```

This query assumes that the award event is represented in DBpedia with a property `dbo:number` indicating its sequence number. Adjustments may be needed based on the specific structure of the data for different awards.",1,1,2,1,1,2,3,28,0,0,326,0,0.0,0
633,4,train,"Give me the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbr:François_Ier,_Duke_of_Lorraine .
  ?person dbo:spouse ?spouse .
  ?parent dbo:child ?child .
  FILTER (?parent = ?person || ?parent = ?spouse) .
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
557,31,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer ?fictionalCharacter WHERE {
  # Find the producer of ""The Adventures of Tom Sawyer"" (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .

  # Find the fictional character associated with Kent Allard
  ?character dbp:alterEgo dbr:Kent_Allard .
  
  # Bind the producer and fictional character to variables
  BIND(?producer AS ?filmProducer)
  BIND(?character AS ?fictionalCharacter)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
816,23,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?person dbo:deathPlace dbr:Los_Angeles_County,_California .
  
  # Link the person to the movie
  ?movie dbo:director ?person ;
         dbo:starring ?actor .

}
```",3,4,4,3,1,3,3,71,0,0,10313,0,0.0,0
159,46,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?writer WHERE {
  # Find Michał Kazimierz Pac's role in a military conflict
  ?pac a dbo:Politician ;
       dbo:officeHolderOf ?office ;
       dbo:commanderIn ?conflict .

  # Identify his successor
  ?successor dbo:succeededBy ?pac ;
            dbo:commanderIn ?conflict .

  # Find the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:author ?writer .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
119,12,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of Alexander Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Dawid Olejniczak's residence or associated country
  OPTIONAL { 
    ?dawid a dbo:Person .
    ?dawid foaf:name ""Dawid Olejniczak"" .
    ?dawid dbo:residence ?residence1 .
    ?residence1 dbo:country ?country1 .
  }
  
  # Alexander Suvorov's residence or associated country
  OPTIONAL { 
    ?suvorov a dbo:Person .
    ?suvorov foaf:name ""Alexander Suvorov"" .
    ?suvorov dbo:residence ?residence2 .
    ?residence2 dbo:country ?country2 .
  }
  
  # Find the entity in the country of residence
  OPTIONAL { 
    ?entity dbo:location ?location .
    FILTER (?location = ?country1 || ?location = ?country2)
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
59,4,train,Give me the manager of Hartlepool United F.C. and native of Bristol.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerClub .
  ?team dbp:name ""Hartlepool United F.C.""@en .
  ?team dbo:manager ?manager .

  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?manager foaf:page ?personPage .
  ?person foaf:isPrimaryTopicOf ?personPage .

  OPTIONAL { ?person dbo:birthPlace dbr:Bristol . }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
668,9,train,Give me the associated musical artist of $pacely and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist foaf:name ""$pacely"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
905,56,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Charles Martel of Anjou's parent
  dbr:Charles_Martel_of_Anjou dbo:childOf ?parent .

  # Philip I, Prince of Taranto's father and spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?father .
  ?father dbp:spouse ?spouse .

  # Child of Philip I's child who is royalty
  ?descendant dbo:childOf dbr:Philip_I,_Prince_of_Taranto .
  ?royalty dbo:parent ?descendant .
  ?royalty a dbo:Monarch .

  # Predecessor of Stephen V of Hungary and their child
  ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
  ?child dbo:childOf ?predecessor .
  
  # Linking the parent of Charles Martel to the spouse of Philip I's father
  FILTER(?parent = ?spouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,46,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardShow ?awardee ?war WHERE {
  ?awardShow a dbo:Award .
  ?awardShow dbo:country dbr:United_States_Congress .
  
  ?recipient dbo:recipientOfAward ?awardShow ;
             dbo:recipientOfAward dbr:Gillmore_Medal .

  OPTIONAL { ?recipient dbo:associatedWithWar ?war . }
}
ORDER BY ?awardShow
LIMIT 10
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
414,3,train,"Give me the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?host WHERE {
  dbr:Nobel_Prize_in_Physics dbo:awardingBody ?institution .
  ?institution a dbo:EducationalInstitution .
  OPTIONAL { ?institution foaf:name ?host . }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,13,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childOfRoyalParent WHERE {
  # Step 1: Identify Ferdinand Albert II, Duke of Brunswick-Lüneburg
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:spouse ?spouse .
  
  # Step 2: Find his children (offspring)
  ?child dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg ;
         a dbo:Person .

  # Step 3: For each child, identify their parents who are royalty
  ?child dbo:parent ?royalParent .
  ?royalParent a dbo:Monarch ; 
               dbo:country dbr:Germany .

  # Step 4: Retrieve the children of these royal parents
  ?childOfRoyalParent dbo:parent ?royalParent ;
                     a dbo:Person .
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
782,47,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?realName WHERE {
  ?person a dbo:MusicalArtist .
  ?bandMember dbo:member ?person .
  ?bandMember dbo:name ""The Fabulous Thunderbirds"" .
  ?person dbo:birthday ""1945-03-30""^^xsd:date .
  OPTIONAL { ?person dbp:birthName ?realName . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
859,5,train,Give me the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person dbr:James_Plotkin .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
412,24,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?award WHERE {
  # Antonios Varthalitis resource
  dbr:Antonios_Varthalitis a dbo:Person .
  
  # Death place that is a settlement
  OPTIONAL { 
    dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
    ?deathPlace a dbo:Settlement .
  }
  
  # Check for war-related awards
  OPTIONAL {
    dbr:Antonios_Varthalitis dbo:honorificTitle ?award .
    FILTER(CONTAINS(LCASE(?award), ""war"") && CONTAINS(LCASE(?award), ""30""))
  }
}
```",4,5,5,2,2,2,3,28,0,1,3,0.0,0.0,0
293,30,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Roger Pryor (Ann Sothern)
  ?person a dbo:Actor ;
          dbp:birthName ""Ann Sothern""@en .
  
  # Get the spouse of Roger Pryor
  ?person dbo:spouse ?spouse .

  # Ensure the person is a member of the Republican Party
  ?spouse dbo:party dbr:Republican_Party_(United_States) .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,26,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  dbr:Paulus_Powell dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birth place is a region and an administrative region
  ?birthPlace rdf:type dbo:Region .
  ?birthPlace rdf:type dbo:AdministrativeRegion .

  # Step 3: Find the governor of this region who is also a politician
  ?governor a dbo:Politician ;
            dbo:governmentRole dbr:Governor_of_?birthPlace ;
            dbo:officeHolderOf ?birthPlace .

  # Step 4: Retrieve the birth place of this governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
668,52,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Rod Argent's profession is musician
  ?argent a dbo:MusicalArtist ;
          foaf:name ""Rod Argent"" .
  
  # Stevie Wonder's birth name and profession
  ?wonder a dbo:MusicalArtist ;
          dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin"" ;
          foaf:name ""Stevie Wonder"" .

  # Tupac Shakur's birth name
  ?pacely a dbo:MusicalArtist ;
          dbp:birthName ""Tupac Amaru Shakur"" ;
          foaf:name ""$pacely"" .
  
  # Find the professional who is a musician and associated with both Stevie Wonder and Tupac Shakur
  ?professional a dbo:MusicalArtist ;
                dbo:associatedWith ?wonder, ?pacely .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
706,14,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace WHERE {
  # Find movies that are Indian and feature Dipankar De
  ?movie a dbo:Film ;
         dbo:country dbr:India ;
         dbo:starring dbr:Dipankar_De .

  # Get actors who co-starred with Dipankar De in these movies
  ?movie dbo:starring ?actor .
  
  # Ensure the actor is not Dipankar De himself
  FILTER (?actor != dbr:Dipankar_De)

  # Retrieve birthplace of the actor
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```",3,5,4,3,1,3,2,20,11,0,2,1.0,0.8461538461538461,0.9166666666666666
737,1,train,"Give me the child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Albrecht,_Duke_of_Württemberg dbo:spouse ?spouse .
  OPTIONAL { dbr:Albrecht,_Duke_of_Württemberg dbo:child ?child . }
  UNION
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
258,7,train,Give me the establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
668,27,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:Artist .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  OPTIONAL { ?person dbp:birthday ?birthday . }
  ?person foaf:name ?name .
  ?person dbp:birthName ?birthName .
}
ORDER BY ?name
LIMIT 10
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
159,39,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find entities related to the Battle of Vienna
  ?battle a dbo:MilitaryConflict ;
          dbo:participatedInMilitaryForce ?militaryForce ;
          rdfs:label ""Battle of Vienna""@en .

  # Link George Ducas to the military force involved in the battle
  ?georgeDucas dbo:memberOf ?militaryForce ;
               foaf:name ""George Ducas""@en .

  # Find a television show or societal event related to this context
  OPTIONAL { ?tvShow dbo:subject ?battle .
             ?tvShow a dbo:TelevisionSeries . }

  OPTIONAL { ?event dbo:subject ?battle .
             ?event a dbo:SocietalEvent . }

  # Identify the commander involved in the battle
  ?commander dbo:commandedMilitaryForce ?militaryForce ;
             foaf:name ?name .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,17,train,"Give me the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Ladislaus IV of Hungary as Stephen V's predecessor
  dbr:Ladislaus_IV_of_Hungary dbo:predecessorOf dbr:Stephen_V_of_Hungary .
  
  # Find children who are royalty of Ladislaus IV
  ?person dbo:childOf dbr:Ladislaus_IV_of_Hungary ;
          a dbo:Monarch .

  # Bind the child to the variable
  ?person dbp:name ?child .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
375,23,train,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?war WHERE {
  # Toyotomi Hideyoshi's child
  ?hideyoshi a dbo:Person ;
             foaf:name ""Toyotomi Hideyoshi""@en .
  
  ?child dbo:parent ?hideyoshi ;
         a dbo:Person .

  # Yamaza Enjirō's birth place
  ?enjiro a dbo:Person ;
          foaf:name ""Yamaza Enjirō""@en .
  
  ?enjiro dbo:birthPlace ?birthPlace .

  # War involving Toyotomi Hideyoshi's child and entity in Yamaza Enjirō's birth place
  ?war a dbo:MilitaryConflict ;
      dbo:participant ?child ;
      dbo:location ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
103,61,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgoProfessional ?actorName WHERE {
  # The Shadow comics character's alter ego professional role
  ?shadowCharacter a dbo:ComicsCharacter .
  ?shadowCharacter dbp:fictionalAlterEgo ?alterEgo .
  ?alterEgo dbo:profession ?alterEgoProfessional .

  # Actor from ""Ab Kya Hoga"" who is also a politician
  ?actor a dbo:Actor ;
         dbo:film ?show .
  ?show rdfs:label ""Ab Kya Hoga""@en .
  OPTIONAL { ?actor dbo:occupation dbp:Politician . }
  
  FILTER (LANG(?show) = 'en')
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
159,21,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Identify John II Casimir Vasa
  ?johnCasimir a dbo:Politician ;
               dbo:officeHolderOf dbr:Kingdom_of_Poland ;
               foaf:name ""John II Casimir Vasa""@en .
  
  # Find his successor in the political office or command role
  OPTIONAL {
    ?successor dbo:succeededBy ?johnCasimir .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,2,train,Give me the office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  dbr:Miguel_Maura dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
140,3,train,"Give me the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""George Pickett"" .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:occupation dbo:Military_person .
  ?event dbo:agent ?person ;
         a dbo:Battle .
  ?event dbo:partOf ?war .
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
353,9,train,Give me the child of Roger II of Sicily and father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:spouse ?spouse .
  
  # Find the child of Roger II who is also a parent to William II
  ?child dbo:parent dbr:Roger_II_of_Sicily ;
         dbo:parentOf dbr:William_II_of_Sicily .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,12,train,Give me the father of Baeda Maryam I and reference to .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Baeda Maryam I""@en .
  OPTIONAL { ?person dbp:father ?father . }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
943,18,train,Give me the father of Baeda Maryam I and reference to  and child of Dawit I.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?baedaMaryamI a dbo:Person ;
                dbo:childOf ?dawitI ;
                dbo:parent ?father .
  
  ?dawitI a dbo:Person ;
          rdfs:label ""Dawit I""@en .

  FILTER(CONTAINS(LCASE(?baedaMaryamI), ""baeda maryam i""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
89,36,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Identify Saw Min Phyu's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouseOf dbr:Saw_Min_Phu .

  # Find the children of the spouse
  ?child dbo:parent ?spouse .
  
  # Ensure the child is also a child of Saw Min Hla
  ?child dbo:parent dbr:Saw_Min_Hla .

  # Check if the child is royalty
  ?child a dbo:Monarch ;
         dbo:predecessor ?successor .

  # Find the predecessor of this royal child
  ?successor dbo:predecessor ?predecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
203,3,train,Give me the figure known as The Triple X's.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?description WHERE {
  ?entity a dbo:Band .
  OPTIONAL { ?entity rdfs:label ?name . FILTER (lang(?name) = 'en' && contains(lcase(str(?name)), ""the triple x's"")) }
  OPTIONAL { ?entity dbo:abstract ?description . FILTER(langMatches(lang(?description), ""EN"")) }
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,20,1,0.0,0.0,0
89,33,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfSawMinHla ?spouseOfFather ?royalChild WHERE {
  # Find Saw Min Hla
  ?sawMinHla a dbo:Person ;
             foaf:name ""Saw Min Hla""@en .
  
  # Find children of Saw Min Hla
  ?childOfSawMinHla dbo:parent ?sawMinHla ;
                   a dbo:Person .

  # Find father of the child (should be Saw Min Hla)
  ?fatherOfChild dbo:parent ?childOfSawMinHla .
  
  # Find spouse of the father
  ?spouseOfFather dbo:spouse ?fatherOfChild ;
                  a dbo:Person .

  # Check if the spouse has children who are royalty
  ?royalChild dbo:parent ?spouseOfFather ;
              a dbo:Royalty .

}
```",4,6,5,3,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
89,25,train,Give me the predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Find the child of Saw Shwe Khet
  ?child dbo:parent ?sawShweKhet .

  # Find the spouse of this child
  ?spouse dbo:spouse ?child .

  # Find the predecessor of this spouse
  ?predecessor dbo:successor ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
375,16,train,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbo:birthPlace dbr:London .
  
  ?work dbo:author ?person ;
        a (dbo:Film|dbo:TelevisionShow) .

  ?appearance dbo:actor ?veraLynn ;
              dbo:work ?work .
  
  ?veraLynn foaf:name ""Vera Lynn""@en .

  OPTIONAL { ?person dbp:parent ?parent . }
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
531,23,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?officeHolder a dbo:OfficeHolder .
  ?officeHolder dbo:electedDuring dbr:2003_Madrid_City_Council_election .
  ?officeHolder dbo:residence ?residence .

  ?residence dbo:tenant ?tenant .
}
```",3,4,4,3,1,3,3,71,0,0,375,0,0.0,0
756,35,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # VfL Bochum as a sports club and soccer club
  dbr:VfL_Bochum a dbo:SportsClub ;
                 dbo:sport dbr:Soccer .

  # Manager of VfL Bochum during the 2007–08 season
  ?season dbp:team dbr:VfL_Bochum ;
          dbp:season ""2007–08"" .
  
  ?manager a dbo:Person ;
           dbo:positionTitle ""Manager"" ;
           dbo:managedTeam ?season .

  # Thomas Letsch as a manager
  OPTIONAL {
    ?letsch a dbo:Person ;
            foaf:name ""Thomas Letsch"" ;
            dbo:positionTitle ""Manager"" .
    
    ?letsch dbo:managedTeam ?teamSeason .
    
    FILTER(?manager = ?letsch)
  }
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
531,13,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:OfficeHolder ;
          a dbo:Politician .
  ?person dbo:positionHeld ?office .
  ?office dbo:relatedEvent dbr:Central_African_Republic_Civil_War_(2012–present) .
}
```",2,4,3,2,1,3,3,71,0,0,485,0,0.0,0
39,10,train,Give me the band of Bob Thompson (musician) and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Bob Thompson"" .
  OPTIONAL { ?person dbo:genre dbr:Singer . }
  ?person dbo:memberOf ?band .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
119,21,train,Give me the office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Politician .
  ?person dbo:electedAs ?election .
  ?election dbo:date ""2009-01-01""^^xsd:date ; 
            dbo:place dbr:Galicia, Spain .
  ?person dbp:residence dbr:Santiago_de_Compostela .
  ?person dbo:office ?office .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
737,32,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Duke Philipp of Württemberg's child
  ?philipp a dbo:Person ;
           dbp:spouse ?spouse1 .
  
  # Child of Duke Philipp (grandchild)
  ?child1 dbo:parent ?philipp ;
          dbo:parent ?mother1 .

  # Predecessor of the grandchild
  ?predecessor dbo:succ ?child1 .

  # Child of Philipp Albrecht, Duke of Württemberg
  ?albrecht a dbo:Person ;
           dbp:spouse ?spouse2 .
  
  ?child2 dbo:parent ?albrecht ;
          dbo:parent ?mother2 .

  FILTER(?predecessor != ?child2)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
23,12,train,Give me the entity in Colombia and party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyName WHERE {
  VALUES (?person ?party) {
    (dbr:Gustavo_Petro dbr:Colombia_Humana)
    (dbr:Roy_Barreras dbr:Alianza_Verde)
  }
  
  ?person dbo:memberOf ?party .
  ?party foaf:name ?partyName .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
225,6,train,Give me the entity in Japan and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .
  FILTER (lang(?birthPlaceLabel) = ""en"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,16,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of Isabella of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?father WHERE {
  ?person dbr:Philip_I_of_Castile .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  
  ?child a dbo:Monarch ;
         dbo:parent ?parent1, ?parent2 .

  FILTER(?parent1 = dbr:Philip_I_of_Castile || ?parent2 = dbr:Philip_I_of_Castile) .
  FILTER(?child != dbr:Isabella_of_Austria) .
  
  OPTIONAL { ?parent1 dbp:name ""Philip I of Castile""@en . }
  OPTIONAL { ?parent2 dbp:name ""Joanna of Castile""@en . }

  BIND(COALESCE(?parent1, ?parent2) AS ?father)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
412,11,train,Give me the war of the awardee of 30.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?award a dbo:Award .
  ?award dbp:number ""30""^^xsd:string .
  ?recipient dbo:receivedAward ?award .
  OPTIONAL { 
    ?recipient dbo:nationality ?nationality .
    ?conflict dbo:participant ?nationality .
    ?conflict dbo:name ?war .
  }
}
```",2,2,3,2,1,2,3,28,0,0,526,0,0.0,0
468,10,train,"Give me the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Martin of Aragon
  dbr:Martin_of_Aragon dbo:parent ?parent .

  # Parent's father who is royalty
  ?parent dbo:father ?father .
  ?father a dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
80,19,train,Give me the actor of the movie with  and actor of ATL (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  dbr:ATL dbo:starring ?actor .
}
```",3,3,4,2,2,3,3,71,0,0,10,0,0.0,0
89,35,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Min Hla Htut of Pyakaung's parent
  ?minHlaHtut a dbo:Person ;
              dbp:parent ?parent .

  # Saw Shwe Khet's child and their predecessor
  ?sawShweKhet a dbo:Person ;
               dbp:child ?child .
  
  ?predecessor a dbo:Person ;
               dbo:succeededBy ?child .

  # Find the individual who is both the child of Min Hla Htut's parent and the predecessor of Saw Shwe Khet's child
  ?parent dbp:child ?individual .
  FILTER (?individual = ?predecessor)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
756,34,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the successor season for VfL Bochum 2006–07
  dbr:VfL_Bochum_season_2006%E2%80%9307 dbo:succeeds ?bochumSuccessor .
  
  # Find the manager of the successor season of VfL Bochum 2006–07
  ?bochumSuccessor dbo:manager ?manager .

  # Find the successor season for SBV Vitesse 2020–21
  dbr:SBV_Vitesse_season_2020%E2%80%9321 dbo:succeeds ?vitesseSuccessor .
  
  # Ensure the manager is also associated with the successor of SBV Vitesse 2020–21
  ?vitesseSuccessor dbo:manager ?manager .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
80,30,train,Give me the actor of ATL (film) and professional in the alter ego of The Shadow and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Actor in ATL
  ?atlFilm a dbo:Film ;
           dbo:title ""ATL"" ;
           dbo:starring ?actor .
  
  # Actor with alter ego The Shadow
  ?shadowCharacter a dbo:Role ;
                   dbp:name ""The Shadow"" ;
                   dbo:portrayedBy ?actor .

  # Actor in Shelby Oaks
  ?shelbyOaksFilm a dbo:Film ;
                  dbo:title ""Shelby Oaks"" ;
                  dbo:starring ?actor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
585,13,train,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace WHERE {
  ?award a dbo:Award .
  ?award dbo:country dbr:United_States_of_America .
  ?award dbo:settlementType ?settlementType .
  FILTER(?settlementType = ""Settlement"") .

  ?person dbp:recipientOf ?award .
  ?person dbo:nationality dbr:American .
  ?person dbo:birthPlace ?nativePlace .
  
  ?place a dbo:Settlement ;
        dbo:stateOrProvince dbr:New_York_(state) .
  ?person dbo:birthPlace ?place .
}
```",3,5,4,3,1,3,2,20,0,0,8569,0,0.0,0
263,6,train,"Give me the native of Middlesex and parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Middlesex .
  ?person dbo:child dbr:Mary_Elphinstone,_Lady_Elphinstone .
  OPTIONAL { ?person foaf:name ?parentName . }
}
ORDER BY ?parentName
LIMIT 1
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
628,41,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Bobby Shmurda's birth name
  VALUES (?bobbyBirthName) { ""Bobby Shmurda"" }

  # Find artists with the same birth name and native to Florida
  ?artist a dbo:MusicalArtist ;
          dbp:birthName ?bobbyBirthName ;
          dbo:birthPlace dbr:Florida .

  # Bobby Shmurda's resource
  VALUES (?bobbyShmurda) { dbr:Bobby_Shmurda }

  # Find band members associated with Bobby Shmurda
  ?bobbyBandMember a dbo:MusicalArtist ;
                   dbo:bandMemberOf ?bobbyShmurda .

  # Find band members associated with the artist from Florida
  ?artistBandMember a dbo:MusicalArtist ;
                    dbo:bandMemberOf ?artist .

  # Match common band members
  FILTER (?bobbyBandMember = ?artistBandMember)
  
  BIND(?bobbyBandMember AS ?bandMember)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
258,15,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university ?foundingDate WHERE {
  # Luiza Erundina's alma mater
  ?luiza a dbo:EducationalInstitution ;
         dbo:almaMaterOf dbr:Luiza_Erundina .
  
  # Eleonora Menicucci's alma mater
  ?eleonora a dbo:EducationalInstitution ;
            dbo:almaMaterOf dbr:Eleonora_Menicucci .

  # Find the common university
  FILTER (?luiza = ?university && ?eleonora = ?university)

  # Get the founding date of the university
  ?university dbo:foundingDate ?foundingDate .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
375,14,train,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/postalCode> "","" . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace ?location .
  
  ?location a dbo:Settlement ;
            dbo:country dbr:England .

  OPTIONAL { ?person dbp:parents ?parent . }
}
ORDER BY ?person
LIMIT 10
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
531,3,train,"Give me the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?election a dbo:Election .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2003)
  ?election dbo:place dbr:Madrid_City_Council_election_2003 .

  ?officeHolder dbo:holdsOffice ?position .
  ?officeHolder dbo:memberOf ?party .
  ?officeHolder foaf:name ?leader .

  OPTIONAL { 
    ?officeHolder dbo:electedAsLeaderOf ?election .
  }
}
ORDER BY ?leader
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
609,41,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Governor of Virginia
  { 
    ?person a dbo:Politician .
    ?person dbo:officeHolderOf dbr:Governor_of_Virginia .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Awardee related to Vince Gilligan
  {
    ?awardee dbo:awardReceived dbr:List_of_awards_and_nominations_received_by_Vince_Gilligan .
    ?awardee dbo:birthPlace ?birthPlace .
  }

  UNION

  # Cece Bell
  {
    ?person dbr:Cecily_Bell .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
270,1,train,Give me the person decedent at Melbourne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Melbourne .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,2,9,10,4,799,0.7142857142857143,0.012360939431396786,0.02430133657351154
756,61,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Identify the leader of West Germany
  ?leader a dbo:President ;
          dbo:country dbr:West_Germany .

  # Step 2: Find the country associated with this leader's administration
  ?administration dbo:headLeader ?leader ;
                  dbo:country ?country .

  # Step 3: Locate a sports manager born on 1968-08-26 and native of that country
  ?person a dbo:SportsManager ;
          dbp:birthday ""1968-08-26""^^xsd:date ;
          dbo:nationality ?nationality .
  
  FILTER (?nationality = ?country)

  # Step 4: Determine the soccer club season managed by this person
  ?teamSeason a dbo:SportsTeamSeason ;
              dbo:sport dbr:Soccer ;
              dbo:manager ?person .

  # Link to find the manager of the team
  ?teamSeason dbo:team ?team .
  ?team dbo:currentManager ?manager .
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
557,34,train,"Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer ?alterEgo WHERE {
  # Find the producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  # Find fictional characters related to Kent Allard
  ?character a dbo:FictionalCharacter .
  ?character dbp:alterEgoOf ?allard .
  
  # Link the alter ego to Kent Allard
  ?allard foaf:name ""Kent Allard""@en .

  # Connect the producer to any fictional character as an alter ego or professional connection
  OPTIONAL { ?producer dbo:profession ?character . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,18,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,1,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
119,56,train,"Give me the tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderName WHERE {
  ?person a dbo:Politician .
  ?person dbo:party dbr:Spanish_Socialist_Workers'_Party .
  ?person dbo:office dbr:Prime_Minister_of_Spain .
  ?person dbo:termStart ?start .
  ?person dbo:termEnd ?end .
  
  FILTER (?start <= ""2009-01-01""^^xsd:date && (?end >= ""2009-01-01""^^xsd:date || ?end = ""infinity""))
  
  OPTIONAL { 
    ?election dbo:electionDate ?date .
    ?election dbo:region dbr:Galicia .
    ?election dbo:relatedParty dbr:Spanish_Socialist_Workers'_Party .
    FILTER (?date <= ""2009-01-01""^^xsd:date)
  }
  
  ?person foaf:name ?leaderName .
}
ORDER BY ?leaderName
LIMIT 1
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
905,6,train,"Give me the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  dbr:Charles_I_of_Hungary dbo:parent ?person .
  ?person a dbo:Monarch .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
159,24,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:work dbr:Always_the_Love_Songs .
  ?person dbo:occupation dbo:Commander .
  ?commanderEvent dbo:agent ?person ;
                  dbo:place dbr:Great_Turkish_War .
}
LIMIT 10
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
78,23,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the associated musical artist for David Paton
  ?davidPaton a dbo:MusicalArtist ;
              foaf:name ""David Paton""@en .
  
  # Find band members of David Paton's associated musical artist
  ?davidBand a dbo:Band ;
             dbo:member ?bandMember .

  ?davidPaton dbo:associatedMusicalArtist ?davidBand .

  UNION

  # Find the associated musical artist for Stuart McBeath Tosh
  ?stuartTosh a dbo:MusicalArtist ;
              dbp:birthName ""Stuart McBeath Tosh""@en .
  
  # Find band members of Stuart McBeath Tosh's associated musical artist
  ?stuartBand a dbo:Band ;
              dbo:member ?bandMember .

  ?stuartTosh dbo:associatedMusicalArtist ?stuartBand .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
492,13,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?deathPlaceActor ?carolynJonesDeathPlace WHERE {
  # Find the actor of ""The Sky Ranger"" (1928 film)
  ?film dbo:starring ?person .
  ?film rdfs:label ""The Sky Ranger""@en .
  FILTER(CONTAINS(str(?film), ""1928""))
  
  OPTIONAL { ?person dbp:deathPlace ?deathPlaceActor . }
  OPTIONAL { ?person foaf:name ?actorName . }

  # Find Carolyn Jones
  ?carolynJones a dbo:Person ;
                foaf:name ""Carolyn Jones""@en .
  OPTIONAL { ?carolynJones dbp:deathPlace ?carolynJonesDeathPlace . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,13,train,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?birthName WHERE {
  # Alfonso IV of Aragon resource
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?spouse .
  
  # Find children of Alfonso IV
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Retrieve birth name
  OPTIONAL { ?child dbp:birthName ?birthName . }
}
ORDER BY ?child
LIMIT 10
```",3,4,4,3,1,3,2,20,0,0,17,0,0.0,0
412,5,train,Who is the awardee of 30?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:numberOfAwards ?numberOfAwards . }
  FILTER (?numberOfAwards = ""30""^^xsd:integer)
}
ORDER BY ?person
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
89,55,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Myat Hpone Pyo's father who is a royalty
  ?father dbo:parent dbr:Myat_Hpone_Pyo ;
          a dbo:Royalty .

  # Step 2: Find Min Hla Htut's parent
  ?minParent dbo:child dbr:Min_Hla_Htut .

  # Ensure the father is also the parent of Min Hla Htut
  FILTER(?father = ?minParent)

  # Step 3: Determine Saw Shwe Khet's child
  ?sawChild dbo:parent dbr:Saw_Shwe_Khet .

  # Step 4: Identify the predecessor of Saw Shwe Khet's child
  ?predecessor dbo:succeededBy ?sawChild .

  # Ensure the father is also the predecessor
  FILTER(?father = ?predecessor)

  # Step 5: Find the spouse of the identified father
  ?spouse dbo:spouse ?father .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
119,36,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:headOfGovernment ?tenant ;
                  dbo:country dbr:Spain .

  OPTIONAL { ?administration dbp:oppositionLeader dbr:Alberto_Núñez_Feijóo . }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,8,train,Give me the reference to Mitaka and region of the time zone of Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mitakaReference ?region ?timeZone WHERE {
  # Mitaka reference
  dbr:Mitaka a dbo:Settlement .
  
  # Region of Mitaka
  OPTIONAL { 
    dbr:Mitaka dbo:locatedInRegion ?region . 
  }
  
  # Time zone information for Japan
  OPTIONAL {
    dbr:Japan dbp:timeZone ?timeZone .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
398,15,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in Aleksandr Filimonov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club ?nickname WHERE {
  # Denis Kolodin's club association
  ?kolodin a dbo:SoccerPlayer ;
           foaf:name ""Denis Kolodin"" ;
           dbo:playsFor ?club1 .
  
  # Aleksandr Filimonov's club association
  ?filimonov a dbo:SoccerPlayer ;
             foaf:name ""Aleksandr Filimonov"" ;
             dbo:playsFor ?club2 .

  # Ensure both players are associated with the same club
  FILTER (?club1 = ?club2)
  
  # Retrieve the club's nickname
  ?club dbp:nickname ?nickname .
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
871,6,train,"Who is the child of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .
  ?relation dbo:parent ?person .
  ?relation dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
531,29,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?officeHolderName ?tenant WHERE {
  ?person a dbo:OfficeHolder .
  ?person dbo:occupation dbr:Politician .

  # Office involvement in Central African Republic Civil War
  ?person dbo:memberOf ?organization .
  ?organization dbo:wikiPageRedirects ?war .
  FILTER(CONTAINS(LCASE(?war), ""central african republic civil war""))

  # Held the office of Miguel Maura
  ?person dbo:office dbr:Miguel_Maura .

  # Tenant in Madrid
  OPTIONAL { ?person dbp:residence ?tenant . }
  FILTER(CONTAINS(LCASE(STR(?tenant)), ""madrid""))
  
  # Get the name of the person
  ?person foaf:name ?officeHolderName .
}
ORDER BY ?officeHolderName
LIMIT 10
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
769,10,train,"Give me the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Identify Hong Kong C as a sports club, team, and soccer club
  dbr:Hong_Kong_C a dbo:SportsClub ;
                 a dbo:SportsTeam ;
                 a dbo:FootballClub .

  # Find the manager of Hong Kong C who is also a sports manager and specifically a soccer manager
  ?manager dbp:managedSportTeam dbr:Hong_Kong_C .
  ?manager a dbo:SportsManager .
  ?manager a dbo:SoccerManager .
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
871,30,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Frederick_Stanley_16th_Earl_of_Derby dbo:parent ?person .
  
  ?person a dbo:Person ;
          dbo:gender ""male""^^xsd:string ;
          OPTIONAL { ?person dbo:title ?title . FILTER regex(?title, ""Earl"", ""i"") }
  
  BIND(?person AS ?father)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
633,15,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine dbo:child ?royalChild .
  
  # The child must be royalty
  ?royalChild a dbo:Monarch .

  # Identify the parent of this royal child
  ?parent dbo:child ?royalChild .
  
  # The parent must be both royalty and noble
  ?parent a dbo:Monarch ;
          a dbo:Noble .

  # Retrieve the spouse of such a parent
  ?parent dbp:spouse ?spouse .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
213,7,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName ?birthPlace WHERE {
  # Identify Chiang Ching-kuo
  dbr:Chiang_Ching-kuo dbo:spouse ?spouse .
  
  # Find children of Chiang Ching-kuo
  ?spouse dbo:child ?child .
  ?child foaf:name ?childName .

  # Check if the child is a politician
  ?child a dbo:Politician .

  # Get birthplace of the child
  ?child dbo:birthPlace ?birthPlace .
}
ORDER BY ?childName
LIMIT 10
```",2,3,3,2,1,3,2,20,0,3,3,0.0,0.0,0
595,45,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person dbr:Bill_Clinton dbo:spouse ?spouse .
  ?book dbo:author ?person .
  FILTER(STRSTARTS(LCASE(?book), ""back to work""))
  ?ship dbo:owner ?person .
  FILTER(STRSTARTS(LCASE(?ship), ""uss arcadia (id-1605)""))
  ?event dbo:commander ?commander .
  ?event dbo:war dbr:Gulf_War_1990–91 .
  ?disease dbo:societalEvent ?event .
  FILTER(STRSTARTS(LCASE(?disease), ""hiv/aids""))
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,57,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Politician ;
          dbo:spouse dbr:Hillary_Clinton ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:officeHolderOf dbr:United_States_President .
  
  ?war a dbo:MilitaryConflict ;
       dbo:participatingMilitaryForce dbr:United_States_Navy .

  ?person dbo:commanderInWar ?war .

  ?work a dbo:Book ;
        dbo:author ?author ;
        dbo:creator ?person .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
668,22,train,Give me the associated musical artist of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Joey_B a dbo:MusicalArtist .
  OPTIONAL { dbr:Joey_B dbp:birthName ?birthName . }
}
```",3,3,4,2,2,3,3,71,0,1,1,0.0,0.0,0
595,18,train,Give me the spouse of Hillary Clinton and author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Spouse of Hillary Clinton
  ?person dbo:spouse dbr:Hillary_Clinton .

  # Author of ""Back to Work""
  ?person dbo:author dbr:Back_to_Work_(book) .

  # Commander in the Third Taiwan Strait Crisis
  ?person dbo:commanderIn dbr:Third_Taiwan_Strait_Crisis .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
513,12,train,Give me the residence of the leader of Ulster Unionist Party and entity in United Kingdom.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderName ?residence WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Ulster Unionist Party""@en .
  
  ?party dbp:leader ?person .

  OPTIONAL { 
    ?person foaf:name ?leaderName .
  }

  OPTIONAL {
    ?person dbo:residence ?residence .
  }
}
```",3,3,4,2,2,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
905,41,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Charles I of Hungary and his father
  dbr:Charles_I_of_Hungary dbo:father dbr:Robert_King_of_Naples .
  
  # Robert, King of Naples, is the child of Stephen V of Hungary
  dbr:Robert_King_of_Naples dbo:childOf dbr:Stephen_V_of_Hungary .

  # Elizabeth the Cuman is a parent (mother) of Robert and royalty related to Stephen V
  dbr:Elizabeth_the_Cuman dbo:parent dbr:Robert_King_of_Naples .
  
  # Philip I, Prince of Taranto's father
  dbr:Philip_I,_Prince_of_Taranto dbo:father dbr:Charles_II_of_Anjou .

  # Spouse of Charles II of Anjou is Maria of Hungary
  dbr:Charles_II_of_Anjou dbo:spouse dbr:Maria_of_Hungary .
  
  # Elizabeth the Cuman as a royalty related to Stephen V
  dbr:Elizabeth_the_Cuman a dbo:Royalty ;
                         dbo:childOf dbr:Stephen_V_of_Hungary .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,56,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?kimWilsonBirthName ?nickCurranResource WHERE {
  # Find The Fabulous Thunderbirds and their members
  ?band a dbo:Band ;
        foaf:name ""The Fabulous Thunderbirds""@en .
  
  # Identify Kim Wilson as a member of the band
  ?member dbo:memberOf ?band ;
          foaf:name ""Kim Wilson""@en .
  
  # Get Kim Wilson's birth name
  OPTIONAL { ?member dbp:birthName ?kimWilsonBirthName . }
  
  # Find Nick Curran as a musical artist
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran""@en ;
              dbp:birthName ?nickCurranRealName .
  
  # Ensure the person is associated with The Fabulous Thunderbirds or Kim Wilson
  OPTIONAL { ?member dbo:associatedBandMember ?nickCurranResource . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,19,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  ?athlete a dbo:Athlete .
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date .

  ?team dbo:member ?athlete ;
        dbo:member dbr:Sergio_Agüero .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
158,3,train,"Give me the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceCountry WHERE {
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  OPTIONAL { ?birthPlace dbp:countryName ?birthPlaceCountry . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
203,53,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?conflict a dbo:MilitaryConflict .
  
  # The Triple X's involvement in the conflict
  ?tripleXs dbo:participatedIn ?conflict .
  
  # Battle of Fort Royal involvement
  dbr:Battle_of_Fort_Royal dbo:participatedIn ?conflict .

  # Robert Calder's role
  dbr:Robert_Calder dbo:commanderOf ?conflict .

  # Find the commander of the conflict
  ?conflict dbo:commander ?commander .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,10,train,"Give me the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?nateNewton a dbo:MusicalArtist ;
              foaf:name ""Nate Newton"" .
  
  ?minutemen a dbo:Band, dbo:Organization ;
             dbo:musicalArtist ?nateNewton .

  ?minutemen dbo:member ?member .
  ?member dbp:associatedActs ?associatedArtist .
}
```",2,5,3,2,1,3,2,20,0,0,15,0,0.0,0
742,7,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
LIMIT 10
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
246,11,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of Prince Omar bin Faisal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Prince Omar bin Faisal
  dbr:Prince_Omar_bin_Faisal dbo:childOf ?parent .
  
  # Prince Faisal bin Hussein and his spouse (the parent we are interested in)
  OPTIONAL { ?parent dbp:honorificPrefix ""His Royal Highness"" . }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
39,61,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Find Bob Thompson's birth name
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson"" ;
       dbp:birthName ?birthName .

  # Find the fictional character created by Walter B. Gibson
  ?character dbo:creator dbr:Walter_B._Gibson ;
             dbo:fictionalCharacter ""The Shadow"" .

  # Find the alter ego of The Shadow
  ?alterEgo dbp:alias ""Lamont Cranston"" ;
            dbo:fictionalCharacter ?character .

  # Find the musical artist with the birth name and alter ego
  ?person a dbo:MusicalArtist ;
          dbp:birthName ?birthName ;
          foaf:name ?alterEgo .

  # Get the band associated with this person
  ?band dbo:musicalArtist ?person .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
159,18,train,Give me the commander in Great Turkish War and reference to George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event dbo:participatedIn dbr:Great_Turkish_War .
  ?person dbo:role ?role .
  FILTER(?role = dbo:Commander) .
  ?person dbo:successor dbr:Yurii_Khmelnytsky .
  ?person dbo:predecessor dbr:George_Ducas .
  ?event dbo:commandedBy ?person .
  BIND(?person AS ?commander)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
386,23,train,Give me the war of the awardee of Golden Sword for Bravery and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Step 1: Find Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Step 2: Find entities related to her birthplace
  ?entity dbo:location ?birthPlace .
  
  # Step 3: Identify the awardee of the Golden Sword for Bravery and their associated war
  ?awardee dbp:award dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:participatedInWar ?war .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
595,17,train,"Give me the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Find wars associated with this owner
  ?war a dbo:MilitaryConflict ;
      dbo:participatingOrganisation ?organisation .
  
  # Ensure the organisation is related to the owner
  FILTER(?organisation = ?owner)

  # Check if the war is also categorized as a disease or societal event
  OPTIONAL { ?war dbo:wikiPageRedirects dbr:Disease . }
  OPTIONAL { ?war dbo:wikiPageRedirects dbr:Societal_event . }

  # Ensure at least one of these categories applies
  FILTER(?war = ?war)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
871,20,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley, 16th Earl of Derby"" ;
             dbo:child ?child .

  ?child dbo:parentOf dbr:Victor_Stanley_(Royal_Navy_officer) .
  
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
59,2,train,Give me the residence of David Luckman.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""David Luckman"" .
  OPTIONAL { ?person dbp:residence ?residence . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
119,47,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Spain .
  ?office dbo:holder ?person .
  ?office dbo:election dbr:2009_Galician_regional_election .

  OPTIONAL { 
    ?residence dbo:country ?tenant .
    ?person dbo:residence ?residence .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,7,train,"Give me the party of Bruno Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party WHERE {
  VALUES (?name) { (dbr:Bruno_Retailleau) (dbr:Patrice_Martin-Lalande) }
  
  ?person dbo:name ?name .
  ?person a dbo:Politician .
  ?person dbp:nationality dbr:France .
  OPTIONAL { ?person dbo:party ?party . }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
89,48,train,Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find child of Saw Shwe Khet
  ?sawShweKhetChild dbo:parent dbr:Saw_Shwe_Khet .
  
  # Find child of Minye Kyawswa
  ?minyeKyawswaChild dbo:parent dbr:Minye_Kyawswa .

  # Find predecessor of the child of Saw Shwe Khet
  ?sawShweKhetChild dbo:predecessor ?predecessor1 .
  
  # Find predecessor of the child of Minye Kyawswa
  ?minyeKyawswaChild dbo:predecessor ?predecessor2 .

  FILTER (?predecessor1 = ?predecessor2)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
119,20,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country WHERE {
  # Find Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:office ?office .

  # Find Álvaro Quirós' country of residence
  dbr:Álvaro_Quirós dbo:nationality ?country .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
871,2,train,Give me the father of Arthur Stanley (politician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Arthur Stanley"" .
  OPTIONAL { ?person dbp:birthName ?birthName . }
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  ?familyMember dbo:parent ?person ;
               a dbo:Person .
  ?familyMember foaf:name ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,27,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?teamName WHERE {
  ?person a dbo:SportsManager .
  ?person dbp:birthday ""1968-08-26""^^xsd:date .
  ?person foaf:name ?managerName .

  ?team a dbo:SoccerClub ;
        dbo:season ?season .
  
  ?season a dbo:SportsSeason, dbo:TeamSeason .

  ?team dbo:manager ?person .
}
```",3,7,4,3,1,3,3,71,0,0,5,0,0.0,0
472,14,train,"Give me the territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory ?administeredBy WHERE {
  # Find the territory administered from Copenhagen
  ?territory dbo:administrativeCapital dbr:Copenhagen .
  
  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?person a dbo:Monarch ;
          foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" ;
          dbp:birthName ?administeredBy .

  # Link the territory to the person administering it
  ?territory dbo:administrator ?person .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
399,4,train,Give me the professional in Singer and band member of Emilia (Bulgarian singer).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?role WHERE {
  dbr:Emilia_(Bulgarian_singer) a dbo:Singer .
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?person foaf:name ""Emilia""@en .
    ?person dbp:occupation ?role .
  }
}
```",2,2,3,1,2,2,2,9,0,0,3,0,0.0,0
89,0,train,Give me the child of Saw Min Hla.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Saw Min Hla"" .
  ?relation dbo:parent ?person .
  ?relation dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
585,15,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find Linda Miller (actress)
  ?lindaMiller a dbo:Actor ;
              foaf:name ""Linda Miller"" .

  # Find her child
  ?child dbo:parent ?lindaMiller .
  
  # Find an award native to an American settlement
  ?award dbo:awardee ?awardee ;
         dbo:place dbr:American_settlement .

  # Ensure the awardee is from New York State
  ?awardee dbo:nationality <http://dbpedia.org/resource/Category:People_from_New_York_(state)> .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
361,21,train,"Give me the professional in  and professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?album ?film ?professional WHERE {
  # Identify the album ""Lasso the Moon""
  ?album a dbo:Album ;
         rdfs:label ""Lasso the Moon""@en .
  
  OPTIONAL {
    # Find related films
    ?film dbo:work ?album ;
          a dbo:Film .
    
    # Find professionals involved in the album or film
    ?professional dbo:profession dbp:musician ;
                  dbo:worksForProject ?album ;
                  foaf:name ?name .
                  
    OPTIONAL {
      ?professional dbo:profession dbp:actor ;
                    dbo:worksForProject ?film ;
                    foaf:name ?actorName .
    }
  }
}
ORDER BY ?album
LIMIT 10
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
392,6,train,Give me the reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```",2,2,3,2,1,2,2,9,0,0,98447,0,0.0,0
89,26,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  dbr:Saw_Shwe_Khet a dbo:Person .

  # Step 2: Find children of Saw Shwe Khet who are royalty
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?child a dbo:Royalty .

  # Step 3: For each child, find their father who is royalty
  ?father dbo:spouse ?mother .
  ?child dbo:parent ?father .
  ?father a dbo:Royalty .

  # Step 4: Retrieve the spouse of that father
  ?father dbp:spouse ?spouse .
}
```",3,5,4,3,1,3,3,71,0,4,2,0.0,0.0,0
782,54,train,"Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?realName ?band WHERE {
  # Find Nick Curran's associated musical artist
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" .
  OPTIONAL { 
    ?association dbo:associatedBandOrMusicalArtist ?associatedArtist .
    ?association dbo:musicalArtist ?nickCurran .
  }

  # Find the real name of The Fabulous Thunderbirds' band member born on March 30, 1945
  ?bandMember a dbo:MusicalArtist ;
              dbp:birthday ""1945-03-30""^^xsd:date ;
              foaf:name ?name .
  OPTIONAL { 
    ?bandMember dbp:birthName ?realName .
  }
  
  # Ensure the band member is part of The Fabulous Thunderbirds
  ?association dbo:musicalArtist ?bandMember ;
               dbo:associatedBandOrMusicalArtist dbr:The_Fabulous_Thunderbirds .

  # Find the band of this person
  OPTIONAL {
    ?bandMember dbo:memberOf ?band .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
609,57,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governorBirthPlace ?authorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Step 1: Find the birthplace of Paulus Powell
  ?paulusPowell dbo:birthPlace ?region .
  
  # Step 2: Find the governor of that region
  ?governor a dbo:Politician ;
            dbo:governmentRole dbr:Governor_of_?region ;
            dbo:birthPlace ?governorBirthPlace .

  # Step 3: Find the birthplace of Cece Bell, author of ""El Deafo""
  ?ceceBell dbo:birthPlace ?authorBirthPlace ;
            dbo:work ?elDeafo .
  ?elDeafo rdfs:label ""El Deafo""@en .

  # Step 4: Find the birthplace of Vince Gilligan
  ?vinceGilligan dbo:birthPlace ?vinceGilliganBirthPlace ;
                 foaf:name ""Vince Gilligan"" .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
557,37,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?work a dbo:TheatreWork .
  ?work dbp:title ""Death of a Salesman"" .
  ?production dbo:adaptationOfWork ?work .
  ?production dbo:producer ?producer .
  ?actor dbo:role ?role .
  ?actor foaf:name ""Fredric March""@en .
  ?actor dbo:actedIn ?film .
  ?film dbp:title ""A Star Is Born (1937 film)"" .
  ?actor dbo:produced ?film .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
288,1,train,Give me the theme of Dikhawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theme WHERE {
  dbr:Dikhawa dbo:theme ?theme .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
609,50,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorBirthPlace ?governorBirthPlace WHERE {
  # Step 1: Find the author of ""El Deafo"" and their birth place
  ?author dbo:title dbr:El_Deafo .
  ?author dbo:birthPlace ?authorBirthPlace .

  # Step 2: Identify Paulus Powell's birth region
  ?paulusPowell a dbo:Person ;
                dbp:birthPlace ?region .

  # Ensure the region is both a region and an administrative region
  ?region a dbo:Region ;
          a dbo:AdministrativeRegion .

  # Step 3: Find the governor of this region who is a politician
  ?governor a dbo:Politician ;
            dbo:governmentRole dbr:Governor_of_?region .
  
  # Retrieve the birth place of this governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
633,8,train,Give me the parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?dorothea a dbo:Person ;
            foaf:name ""Dorothea of Lorraine""@en .
  
  ?father dbo:child ?dorothea ;
          dbo:spouse ?mother .

  ?father dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,2,2,0,0.5,1.0,0.6666666666666666
23,14,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?country WHERE {
  # Query for Roy Barreras' political party
  OPTIONAL { 
    dbr:Roy_Barreras dbo:politicalParty ?party .
  }
  
  # Query for Daniel Elahi Galán's country
  OPTIONAL {
    dbr:Daniel_Elái_Galán dbo:nationality ?nationality .
    ?country dbo:name ?countryName .
    ?nationality dbp:country ?country .
  }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
731,0,train,Give me the force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""William Tennant"" .
  OPTIONAL { ?person dbo:rank ?force . }
  FILTER EXISTS { ?person dbo:nationality dbr:United_Kingdom . } # Assuming he is British
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
723,4,train,"Give me the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nate Newton"" .
  
  ?band a dbo:Band, dbo:Organization ;
        dbo:member ?person .

}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
158,1,train,Give me the native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,3,28,0,4,355,0.0,0.0,0
89,45,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla and spouse of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Saw Min Phyu's spouse
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Saw_Min_Phuu .

  # Child of Saw Min Phyu's spouse
  ?child dbo:parent ?spouse ;
         dbo:parent ?otherParent .

  # Other parent is child of Saw Min Hla and spouse of Saw Shwe Khet
  ?otherParent a dbo:Person ;
               dbo:parent dbr:Saw_Min_Hla ;
               dbo:spouse dbr:Saw_Shwe_Khet .

  # Predecessor of the child in terms of royalty or title
  ?child dbo:title ?title .
  ?predecessor dbo:title ?title ;
              dbo:endTime ?endTime .
  FILTER (?child dbo:startTime > ?endTime)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
468,1,train,Give me the child of Alfonso IV of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
  UNION
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
140,7,train,"Give me the commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""George Pickett"" .
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .
  OPTIONAL { 
    ?event dbo:commander ?commander .
  }
}
```",2,3,3,2,1,3,2,20,0,0,26,0,0.0,0
723,14,train,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Nate Newton and his associated bands
  dbr:Nate_Newton a dbo:MusicalArtist .
  
  # Get the organizations (bands) he is part of
  ?organization dbo:musicalArtist dbr:Nate_Newton ;
                a dbo:Band .

  # Retrieve band members from those organizations
  ?member dbo:musicalArtist ?organization .
}
```",3,6,4,3,1,3,2,20,0,0,112,0,0.0,0
687,43,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInMolina ?actorSoccerPlayerAthlete ?film ?teamOfAimar WHERE {
  # Find players associated with Juan Carlos Molina
  ?molina a dbo:Footballer ;
          foaf:name ""Juan Carlos Molina"" .
  
  ?playerInMolina dbo:playedWith ?molina .

  # Find actor who is both a soccer player and an athlete in a film by Manuel Huerga
  ?actor a dbo:SoccerPlayer, dbo:Athlete ;
         foaf:name ?actorName .
  
  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .

  # Find team associated with Pablo Aimar
  ?aimar a dbo:Footballer ;
         foaf:name ""Pablo Aimar"" .
  
  ?teamOfAimar dbo:member ?aimar .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
871,53,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             dbp:spouse ?wife ;
             dbo:child ?child .

  # Identify the child who is a politician and parent of Edward Stanley, 17th Earl of Derby
  ?child a dbo:Politician ;
         dbo:parent ?father ;
         dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby ;
         dbo:child ?awardRecipient .

  # The award recipient is associated with Rodney Lees
  ?awardRecipient dbp:awardedBy dbr:Rodney_Lees .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,51,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:headOfGovernment ?tenant ;
                  dbo:politicalParty ?party .

  ?tenant dbo:nationality dbr:Spain .

  ?tenant dbo:residenceCountry ?country .
  ?alvaroQuirós dbo:residenceCountry ?country .
  ?alvaroQuirós rdfs:label ""Álvaro Quirós""@en .
}
```",5,7,6,3,2,3,3,71,0,0,23,0,0.0,0
103,30,train,Give me the actor of Dispatches from Elsewhere and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:profession dbr:Actor .
  
  # Check for involvement in ""Dispatches from Elsewhere""
  ?tvSeries dbo:title ""Dispatches from Elsewhere""@en .
  ?tvSeries dbo:castMember ?actor .

  # Check for role as The Shadow's alter ego
  OPTIONAL {
    ?shadowCharacter dbo:name ""The Shadow""@en ;
                     dbo:alterEgo ?actor .
  }
  
  FILTER EXISTS { ?shadowCharacter dbo:name ""Lamont Cranston""@en }
}
LIMIT 1
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,33,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Franz Gerber"" .
  OPTIONAL { ?person dbo:managerOf dbr:VfL_Bochum . }
  ?person dbo:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,28,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?commander a dbo:Politician ;
             dbo:officeHolderOf ?office ;
             dbo:role [dbo:roleName ""Commander""^^xsd:string] .
  
  # Russo-Polish War (1654–1667)
  ?commander dbo:participatedIn dbr:Russo-Polish_War_(1654%E2%80%931667) .

  # Great Turkish War
  ?commander dbo:participatedIn dbr:Great_Turkish_War .

  # Successor information
  ?office dbo:successorOf ?successor .

  # Reference to George Ducas
  OPTIONAL { ?commander dbo:relatedTo dbr:George_Ducas }
}
ORDER BY ?successor
LIMIT 10
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
557,39,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Identify William Dieterle as actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film)
  ?dieterle a dbo:FilmActor ;
            dbo:film dbr:High_Society_Blues ;
            dbo:film dbr:The_Adventures_of_Tom_Sawyer_(1938_film) .
  
  # Identify his claim to fame, The Devil and Daniel Webster
  ?claimToFame a dbo:FictionalWork, dbo:Film ;
               dbp:title ""The Devil and Daniel Webster""@en ;
               dbo:director ?dieterle ;
               dbo:producer ?producer .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
668,47,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Elorm Kabu Amenyah"" .
  ?person foaf:name ?artist .

  OPTIONAL {
    ?writer a dbo:Writer .
    ?writer dbo:work dbr:The_Live_Anthology .
    ?writer foaf:name ?name .
    FILTER(?name = ?artist)
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
756,41,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Theodor Heuss's birthplace
  dbr:Theodor_Heuss dbo:nationality ?nationality .
  
  # Manager of VfL Bochum in the 2007-08 season
  ?manager a dbo:SportsManager ;
           dbp:managedTeam dbr:VfL_Bochum ;
           dbp:managementPeriod ?bochumPeriod .
  FILTER (CONTAINS(?bochumPeriod, ""2007"") && CONTAINS(?bochumPeriod, ""2008""))

  # Manager of SBV Vitesse in the 2020-21 season
  ?manager2 a dbo:SportsManager ;
            dbp:managedTeam dbr:SBV_Vitesse ;
            dbp:managementPeriod ?vitessePeriod .
  FILTER (CONTAINS(?vitessePeriod, ""2020"") && CONTAINS(?vitessePeriod, ""2021""))

  # Ensure the same manager for both teams
  FILTER (?manager = ?manager2)

  # Find the native country of this manager
  ?manager dbo:nationality ?nativeCountry .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
198,18,train,"Give me the war of Amasa Tracy and force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?entity WHERE {
  ?person1 a dbo:Person ;
           foaf:name ""Amasa Tracy""@en .
  ?person2 a dbo:Person ;
           foaf:name ""Quincy Adams Gillmore""@en .

  OPTIONAL { ?person1 dbo:participatedIn ?event . }
  OPTIONAL { ?person2 dbo:participatedIn ?event . }

  ?event a dbo:MilitaryConflict ;
         dbp:location dbr:Charleston,_South_Carolina .

  BIND(?event AS ?war)
  
  OPTIONAL {
    ?entity a dbo:Place ;
            dbo:locatedIn dbr:Charleston,_South_Carolina .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
595,59,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Identify Hillary Clinton
  ?hillary a dbo:Politician ;
           dbo:spouse ?billClinton .

  # Bill Clinton resides in Chappaqua, New York
  ?billClinton dbo:residence dbr:Chappaqua,_New_York ;
               a dbo:OfficeHolder .

  # Find works authored by Bill Clinton that are books
  ?work dbo:author ?billClinton ;
        a dbo:Book ;
        dbo:literaryGenre ?genre .
  
  # Ensure the work is a written work and book
  FILTER(?genre IN (dbr:Fiction, dbr:Nonfiction)) 

  # Get the author of the work
  OPTIONAL { ?work dbo:author ?author . }
}
```",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
742,12,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Query for Ekaterina Zaharieva's birthplace
  OPTIONAL {
    dbr:Ekaterina_Zaharieva dbo:birthPlace ?birthPlace .
  }
  
  # Query for any resident of Sofia's birthplace
  OPTIONAL {
    ?person dbo:residence dbr:Sofia ;
            dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,2,0,0,1.0,1.0,1.0
595,47,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person a dbo:Politician ;
          dbo:spouse dbr:Hillary_Clinton ;
          dbo:residence dbr:Chappaqua .
  ?authorship dbo:agent ?person ;
              dbo:subject ?work .
  ?work a dbo:Book .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
158,11,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Nicholas_II_of_Russia dbo:nationality ?nationality .
  ?nationality dbo:country ?country .
}
```",2,3,3,2,1,2,3,28,0,0,5723,0,0.0,0
782,59,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  # Find musical artists born on March 30, 1945
  ?artist a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .

  # Find band members of these artists
  ?member dbo:memberOf ?band ;
          dbo:associatedBandMember ?artist .

  # Get the real name of Kim Wilson's band
  dbr:Kim_Wilson dbo:associatedBandMember ?kimBand .
  
  # Ensure we are referencing the same band as Kim Wilson's
  FILTER(?band = ?kimBand)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
871,43,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer) and father of Arthur Stanley (politician).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:childOf ?parent .
  
  # Victor Stanley (Royal Navy officer)
  OPTIONAL { 
    dbr:Victor_Stanley_(Royal_Navy_officer) dbo:parent ?edwardStanley .
    FILTER(?edwardStanley = dbr:Edward_Stanley,_17th_Earl_of_Derby)
  }
  
  # Arthur Stanley (politician)
  OPTIONAL { 
    dbr:Arthur_Stanley_(politician) dbo:parent ?edwardStanley .
    FILTER(?edwardStanley = dbr:Edward_Stanley,_17th_Earl_of_Derby)
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
398,8,train,Give me the player in the writer of The First Glove.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?work a dbo:Book .
  ?work dbp:title ""The First Glove"" .
  ?work dbo:author ?author .
  ?author dbo:occupation dbr:Sports_player .
  ?author foaf:name ?player .
}
```",2,2,3,2,1,3,2,20,0,0,17,0,0.0,0
723,12,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of Mudvayne.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?cavaleraConspiracy a dbo:Band ;
                      dbo:member ?bandMember .
  
  ?mudvayne a dbo:Band ;
            dbo:member ?bandMember .

  FILTER(?cavaleraConspiracy = dbr:Cavalera_Conspiracy)
  FILTER(?mudvayne = dbr:Mudvayne)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
782,52,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?realName WHERE {
  # Kim Wilson's band (The Fabulous Thunderbirds)
  ?band a dbo:Band ;
        dbo:member dbr:Kim_Wilson .
  
  OPTIONAL { 
    ?bandMember dbo:birthName ?realName .
    FILTER(?bandMember = dbr:Kim_Wilson) 
  }
  
  # Nick Curran as an associated musical artist
  ?artist a dbo:MusicalArtist ;
          dbp:associatedBand ?band .
  OPTIONAL {
    ?artist dbo:birthName ?realName .
    FILTER(?artist = dbr:Nick_Curran)
  }

  # Eric Clapton's band members (Cream, Derek and the Dominos, etc.)
  ?claptonBand a dbo:Band ;
               dbo:member dbr:Eric_Clapton .
  
  OPTIONAL {
    ?bandMember dbo:birthName ?realName .
    FILTER(?bandMember != dbr:Eric_Clapton)
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
353,48,train,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Alfonso VI's grandchild
  ?alfonsoVI a dbo:Person ;
             dbo:spouse ?spouseAlfonsoVI .
  ?spouseAlfonsoVI dbo:child ?childAlfonsoVI .
  ?childAlfonsoVI dbo:child ?grandchildAlfonsoVI .

  # Roger II's grandchild
  dbr:Adelaide_del_Vasto dbo:child dbr:Roger_II_of_Sicily ;
                        dbo:child ?parentWilliamI .
  ?parentWilliamI dbo:child ?grandchildRogerII .

  # Intersection of both genealogies in royalty
  ?individual dbo:spouse ?spouseIndividual .
  FILTER (?grandchildAlfonsoVI = ?individual || ?grandchildRogerII = ?individual)
  FILTER EXISTS { ?individual a dbo:Royalty }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
198,9,train,Give me the war of Amasa Tracy and force of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?person { 
    dbr:Amasa_Tracy 
    dbr:Quincy_Adams_Gillmore 
  }
  
  ?person dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
249,3,train,"Give me the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceCountry WHERE {
  dbr:Shobhna_Samarth dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Place ;
              dbo:country ?birthPlaceCountry .
}
```",1,2,2,1,1,2,2,9,1,0,2,1.0,0.3333333333333333,0.5
119,1,train,Give me the tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?monarch WHERE {
  ?person a dbo:Monarch .
  ?person dbo:country dbr:Spain .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 1
```",1,1,2,1,1,3,3,71,0,0,216,0,0.0,0
89,41,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor ?spouse WHERE {
  # Myat Hpone Pyo
  ?myatHponePyo a dbo:Person .
  ?myatHponePyo foaf:name ""Myat Hpone Pyo""@en .

  # Predecessor of Myat Hpone Pyo (assuming a royal title)
  ?myatHponePyo dbo:predecessor ?predecessor .
  
  # Spouse of the father of Myat Hpone Pyo
  ?father dbp:child ?myatHponePyo .
  ?spouse dbp:spouse ?father .

  # Min Hla Htut of Pyakaung
  ?minHlaHtut a dbo:Person .
  ?minHlaHtut foaf:name ""Min Hla Htut""@en .
  ?parent dbp:child ?minHlaHtut .

  # Linking the parent to Myat Hpone Pyo's father
  ?parent = ?father .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
103,43,train,"Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName (GROUP_CONCAT(DISTINCT ?profession; separator="", "") AS ?professions) WHERE {
  ?show dbo:title ""Dispatches from Elsewhere""@en .
  ?show dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  OPTIONAL { 
    ?actor dbo:occupation ?profession .
  }
} GROUP BY ?actorName

SELECT ?politicianName (GROUP_CONCAT(DISTINCT ?profession; separator="", "") AS ?professions) WHERE {
  ?show dbo:title ""Ab Kya Hoga""@en .
  ?show dbo:starring ?actor .
  ?actor a dbo:Politician .
  ?actor foaf:name ?politicianName .
  OPTIONAL { 
    ?actor dbo:occupation ?profession .
  }
} GROUP BY ?politicianName
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
311,2,train,"Give me the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?song a dbo:Song .
  ?song dbp:title ""Lotus"" .
  ?song dbo:artist dbr:R.E.M. .
  ?song dbo:producer ?producer .
  ?producer a dbo:Band ;
            a dbo:MusicalGroup .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
468,15,train,"Give me the child of Alfonso IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?realName WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child a dbo:Monarch .
  OPTIONAL { ?child foaf:name ?name . }
  OPTIONAL { ?child dbp:birthName ?realName . }
}
ORDER BY ?child
LIMIT 10
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
412,20,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Napoleon Zervas and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement WHERE {
  # Antonios Varthalitis
  OPTIONAL { 
    ?varthalitis a dbo:Person .
    ?varthalitis dbp:deathPlace ?deathPlaceVarthalitis .
    ?deathPlaceVarthalitis dbo:settlement ?settlement .
  }
  
  # Napoleon Zervas
  OPTIONAL {
    ?zervas a dbo:Person .
    ?zervas dbp:deathPlace ?deathPlaceZervas .
    ?deathPlaceZervas dbo:settlement ?settlement .
  }

  # Konstantinos Ventiris
  OPTIONAL {
    ?ventiris a dbo:Person .
    ?ventiris dbp:deathPlace ?deathPlaceVentiris .
    ?deathPlaceVentiris dbo:settlement ?settlement .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
198,2,train,"Give me the entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?label WHERE {
  ?entity dbo:location dbr:Charleston,_South_Carolina .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
ORDER BY ?label
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
353,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent a dbo:Monarch ;
          foaf:name ""William I""@en .
  
  ?parent dbo:spouse|dbo:child ?relation .
  ?relation dbo:child ?child .

  ?child a dbo:Monarch .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
361,19,train,Give me the professional in the profession of Frédéric Bouraly and professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?actor WHERE {
  # Find Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly a dbo:Agent .
  OPTIONAL { dbr:Frédéric_Bouraly dbo:occupation ?profession . }
  
  # Find actors in ""Rustlers' Rhapsody""
  dbr:Rustlers'_Rhapsody dbo:actor ?actor .
  
  # Ensure the actor is also a professional
  ?actor a dbo:Agent .
  OPTIONAL { ?actor dbo:occupation ?actorProfession . }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,9,train,Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Ackquille Jean Pollard"" .
  ?band dbo:member ?person .
  ?band foaf:name ""Uncle Murda""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,0,train,"Give me the predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?carl a dbo:Person ;
        foaf:name ""Carl, Duke of Württemberg""@en .
  
  ?title dbo:holder ?carl ;
         dbo:previousHolder ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
782,36,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Nick Curran"" .
  OPTIONAL { ?person dbo:associatedBand dbr:The_Fabulous_Thunderbirds . }
  ?person dbo:associatedBand ?band .
  ?band dbo:member ?artist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,8,train,"Who is the father, that is a royalty and an office holder, of Na'od?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?naod a dbo:Person ;
        dbp:parent ?father .
  
  ?father a dbo:Monarch ;
          dbo:officeHolderOf ?office .

  FILTER (str(?naod) = ""Na'od"")
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
399,3,train,Give me the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Jamie_T a dbo:MusicalArtist .
  OPTIONAL { dbr:Jamie_T dbo:occupation ?profession . }
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
119,60,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person dbr:Anxo_Quintana .
  ?person dbo:nationality dbr:Spain .
  ?person dbo:partyMembership dbr:Spanish_Socialist_Workers'_Party .

  OPTIONAL { 
    ?administration dbo:leader ?person .
    ?administration dbo:office ?office .
  }

  OPTIONAL {
    ?administration dbo:tenant ?person .
    ?administration dbo:office ?office .
  }
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
871,49,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  ?child dbo:parent ?alumnus ;
         a dbo:Politician .

  ?awardee dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order ;
           dbo:parent ?parent .

  ?parent dbp:spouseOrPartner ?father .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
609,42,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName (SAMPLE(?birthPlaceLabel) AS ?birthPlace)
WHERE {
  # Glenn Youngkin's birth place
  { 
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    BIND(""Glenn Youngkin"" AS ?personName)
  }

  UNION

  # Awardee from Vince Gilligan's list of awards and nominations
  {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    BIND(""Awardee of Vince Gilligan"" AS ?personName)
  }

  UNION

  # Cece Bell, author of El Deafo
  {
    dbr:El_Deafo dbo:author ?author .
    ?author dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    BIND(""Cece Bell"" AS ?personName)
  }
}
ORDER BY ?personName
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
531,37,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?miguelOffice ?conflictName ?commander WHERE {
  # Find Miguel Maura's office
  ?miguel a dbo:Politician ;
          dbo:officeHeld ?miguelOffice .

  # Find military conflict involving Manuel Pinto da Costa
  ?conflict a dbo:MilitaryConflict ;
           dbo:participant dbr:Manuel_Pinto_da_Costa .
  
  # Find the commander of that conflict
  ?commander a dbo:Commander ;
             dbo:militaryConflict ?conflict .

  # Get names for readability
  OPTIONAL { ?miguelOffice rdfs:label ?officeLabel . FILTER (lang(?officeLabel) = 'en') }
  OPTIONAL { ?conflict rdfs:label ?conflictName . FILTER (lang(?conflictName) = 'en') }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
871,10,train,Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Person ;
          foaf:name ""Arthur Stanley"" ;
          dbp:birthName ""Arthur Stanley""@en .
  
  OPTIONAL { 
    ?arthur dbo:parent ?father . 
  }
  
  # Victor Stanley (Royal Navy officer)
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley"" ;
          dbp:birthName ""Victor Stanley""@en .

  OPTIONAL {
    ?victor dbo:parent ?father .
  }

  FILTER(?arthur != ?victor) # Ensure they are distinct individuals
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,11,train,"Give me the father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?father WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Philip I of Castile""@en .
  
  ?person dbo:spouse ?spouse .
  ?parent dbo:child ?child .
  FILTER (?parent = ?person || ?parent = ?spouse) .

  ?child a dbo:Monarch .
  OPTIONAL { ?child dbp:father ?father . }
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
89,5,train,"Give me the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Saw Shwe Khet"" .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  ?relation dbo:parent ?person ;
            dbo:child ?child .
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
151,4,train,Give me the entity in Ottoman Empire and reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:Ottoman_Empire .
  ?entity dbo:award dbr:Order_of_the_Medjidie .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
859,14,train,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find members of Khlyst who are musical artists
  ?member a dbo:MusicalArtist ;
          dbo:bandMemberOf dbr:Khlyst .

  # Find associated musical artists of these members
  ?member dbp:associatedBandOrMusician ?firstAssociatedArtist .
  
  # Find associated musical artists of the first level associated artists
  ?firstAssociatedArtist dbp:associatedBandOrMusician ?secondAssociatedArtist .

  # Return the second level associated artists
  ?secondAssociatedArtist a dbo:MusicalArtist ;
                         foaf:name ?associatedArtist .
}
```",3,4,4,3,1,3,2,20,0,0,34,0,0.0,0
595,42,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?spouse WHERE {
  # Find the author of ""Back to Work""
  ?book dbo:author ?author .
  ?book rdfs:label ""Back to Work""@en .

  # Find a commander in a war that is both a disease and societal event
  ?person dbo:nationality dbr:United_States .
  ?person dbo:militaryBranch dbr:United_States_Navy .
  ?person dbo:occupation [a dbo:MilitaryCommander ; 
                         dbo:relatedWork [dbo:subject (dbr:HIV/AIDS) ;
                                          dbo:subject (dbr:Pandemic)] ] .

  # Find the spouse who is a politician and office holder
  ?author dbp:spouse ?spouse .
  ?spouse dbo:occupation dbr:Politician .
  ?spouse dbo:officeHolder true .
  
  FILTER(?person = ?author)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
557,16,train,"Give me the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?actor a dbo:Actor .
  ?actor foaf:name ""Johnny Doughboy"" .
  ?actor dbo:notableWork ?work .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
595,51,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  ?arcadia a dbo:Ship ;
           dbp:owner ?owner .

  FILTER(STR(?arcadia) = ""USS_Arcadia_(ID-1605)"")

  # Find Bill Clinton's authored work
  ?work a dbo:Book ;
        dbo:author dbr:Bill_Clinton .

  # Find the disease and societal event related to both
  ?event a dbo:Disease, dbo:SocietalEvent ;
         dbo:commanderInWar ?commander .

  # Ensure the commander is linked to both the owner of USS Arcadia and Bill Clinton's work
  ?owner dbo:relatedTo ?event .
  ?work dbo:relatedTo ?event .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
595,4,train,"Give me the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""An Invitation to the White House""@en .

  ?author a dbo:Politician ;
          dbo:officeHolder ?office .

}
ORDER BY ?author
LIMIT 1
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
143,12,train,Give me the actor of The Campus Queen and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?musicalArtistName WHERE {
  # Find the actor of ""The Campus Queen""
  ?film a dbo:Film .
  ?film dbp:title ""The Campus Queen"" .
  ?film dbo:starring ?person1 .
  ?person1 foaf:name ?actorName .

  # Find the musical artist born as Cynthia Ikponmwenosa Morgan
  ?person2 a dbo:MusicalArtist .
  ?person2 dbp:birthName ""Cynthia Ikponmwenosa Morgan"" .
  ?person2 foaf:name ?musicalArtistName .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
943,15,train,"Who is the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find the commander in the Siege of Mukha who is royalty
  ?commander a dbo:RoyalFamilyMember ;
             dbo:memberOf ?royaltyGroup ;
             dbo:participatedIn dbr:Siege_of_Mukha .
  
  # Identify the parent of this commander who is also royalty
  ?parent dbo:child ?commander ;
          a dbo:RoyalFamilyMember .

}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
80,7,train,Give me the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?series WHERE {
  ?series a dbo:Series .
  ?series foaf:name ""The Golden Master""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,51,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  # Find Baeda Maryam I's child
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Find the father of this child (grandfather)
  ?grandfather dbo:child ?child .

  # Find the alter ego of The Shadow
  ?shadow a dbo:FictionalCharacter ;
          dbp:alterEgo ?alterEgo .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch, dbo:OfficeHolder .
  
  # Link the alter ego to the grandfather
  ?alterEgo dbr:PersonSameAs ?grandfather .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
472,10,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck a dbo:Person .
  OPTIONAL { 
    ?person dbo:positionHeld ?role .
    ?role dbo:administrativeArea ?administration .
  }
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
375,6,train,Give me the entity in Japan and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Toyotomi Hidenaga""@en .
  OPTIONAL { 
    ?person dbo:spouse ?spouse . 
  }
  OPTIONAL { 
    ?person dbo:child ?child . 
  }
  ?person dbo:memberOf ?organization .
  ?event a dbo:Event ;
         dbo:place dbr:Japan ;
         dbo:participant ?person .
}
ORDER BY ?event
LIMIT 10
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
557,13,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?work a dbo:CreativeWork .
  ?work dbo:composer dbr:Cora_Sue_Collins .
  OPTIONAL { ?work dbo:producer ?producer . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
258,14,train,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Eleonora Menicucci"" .
  ?person dbp:birthName ""Eleonora Menicucci"" .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
375,4,train,Give me the person born as Koichirō.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Koichirō""@en .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
687,3,train,Give me the birthday of Marty Pollio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthday WHERE {
  dbr:Marty_Polio a dbo:Person .
  OPTIONAL { dbr:Marty_Polio dbp:birthday ?birthday . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,14,train,Give me the predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  # Find his children
  ?child dbo:parent ?sawShweKhet .

  # Find the predecessor of each child
  ?predecessor dbo:successor ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
89,30,train,Give me the spouse of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Find Saw Shwe Khet's spouse
  ?sawShweKhet dbo:spouse ?spouse .

  # Ensure the spouse is a child of Saw Min Hla
  ?minHla a dbo:Person ;
          foaf:name ""Saw Min Hla""@en .
  ?minHla dbo:child ?spouse .

  # Verify that this spouse is also the predecessor of Saw Shwe Khet's child
  ?sawShweKhetChild a dbo:Person ;
                    dbo:parent ?sawShweKhet ;
                    dbo:predecessor ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,38,train,"Give me the force of the awardee of Gillmore Medal and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Find Henry Clay Lewis and his birthplace
  dbr:Henry_Clay_Lewis a dbo:Person ;
                       dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is an American settlement
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:United_States .

  # Find the Gillmore Medal awardee
  ?awardee dbo:award dbr:Gillmore_Medal .

  # Determine the force associated with the awardee
  ?awardee dbo:force ?force .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
557,52,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Judy Garland as Cora Sue Collins and her role in A Star Is Born (1937)
  dbr:A_Star_Is_Born_(1937_film) dbo:starring dbr:Judy_Garland .
  
  # George Cukor as the producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  # Ensure that the producer is a person
  ?producer a dbo:Person .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
706,3,train,Who is the awardee of Sangeet Natak Akademi Fellowship?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle dbr:Sangeet_Natak_Akademi_Fellowship .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
414,5,train,Who is the awardee of Nobel Prize in Physics?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:NobelPrizeInPhysics .
  ?award dbo:laureate ?person .
  ?person foaf:name ?awardee .
}
ORDER BY ?awardee
```",1,1,2,1,1,3,2,20,0,0,31,0,0.0,0
293,20,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Actor .
  ?film dbo:starring ?person .
  ?film rdfs:label ""1,000 Dollars a Minute""@en .
  FILTER NOT EXISTS { ?film dbo:starring ?otherPerson . FILTER(?person != ?otherPerson) }
  ?person dbp:politicalAffiliation dbr:Republican_Party_(United_States) .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,5,train,Give me the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander of Württemberg""@en .
  OPTIONAL { 
    ?person dbo:birthYear ?birthYear .
    FILTER(?birthYear >= 1804 && ?birthYear <= 1881)
  }
  ?relation dbo:parent ?person .
  ?relation dbo:child ?child .
}
ORDER BY ?child
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
249,6,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  dbr:Shobhna_Samarth dbo:birthPlace ?birthplace .
  ?person a dbo:Person .
  ?person dbo:birthPlace ?birthplace .
  ?person foaf:name ?name .
  FILTER(?person != dbr:Shobhna_Samarth)
}
ORDER BY ?name
LIMIT 10
```",2,3,3,2,1,2,2,9,0,0,11051,0,0.0,0
687,51,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find actors in ""All or Nothing: Manchester City"" who are also soccer players and athletes
  ?actor dbo:spouseOrPartner ?person .
  ?actor dbo:film dbr:All_or_Nothing:_Manchester_City .
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

  # Find individuals born on Marcelo Sarmiento's birthday who are soccer players and managers
  ?manager dbp:birthday ?birthday .
  FILTER (?birthday = (SELECT ?bday WHERE {
    ?sarmiento dbp:birthDate ?bday .
    ?sarmiento a dbo:SoccerPlayer ;
               a dbo:SoccerManager .
    ?sarmiento foaf:name ""Marcelo Sarmiento""@en
  }))
  
  # Check if there is a team connection between the actor and manager
  ?actor dbo:team ?team .
  ?manager dbo:team ?sameTeam .

  FILTER (?team = ?sameTeam)

  BIND(?actor AS ?player)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,51,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
# Query for Shatrughan Sinha's profession
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Shatrughan_Sinha dbo:occupation ?profession .
}

# Query for The Shadow's alter ego
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow_(video_game) dbo:characterName ?character .
  ?character dbo:alias ?alterEgo .
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
293,35,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Query to find Ann Sothern's birth name
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Ann_Sothern dbo:birthName ?birthName .
}

# Query to find a party member of the ruling party in Central, Louisiana
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:partyMemberOf dbr:Democratic_Party .
  ?person dbo:birthPlace dbr:Central,_Louisiana .
}
LIMIT 1
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
513,11,train,Give me the entity in the award of George H. Cameron and residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # George H. Cameron's award
  ?cameron a dbo:Person ;
           foaf:name ""George H. Cameron"" ;
           dbp:award ?award .
  
  # Doug Beattie's residence
  ?beattie a dbo:Person ;
           foaf:name ""Doug Beattie"" ;
           dbo:residence ?residence .

  # Find the common entity between award and residence
  ?award rdfs:label ?entityLabel .
  FILTER (lang(?entityLabel) = 'en')
  
  ?residence rdfs:label ?entityLabel .
  FILTER (lang(?entityLabel) = 'en')

  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?entityLabel), "" "", ""_""))) AS ?entity)
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,6,train,Give me the entity in United Kingdom and residence of Doug Beattie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?residence WHERE {
  dbr:Doug_Beattie a dbo:Person .
  OPTIONAL { dbr:Doug_Beattie dbo:birthPlace ?birthPlace . }
  OPTIONAL { dbr:Doug_Beattie dbo:currentResidence ?residence . }
  FILTER (isBlank(?birthPlace) || ?birthPlace IN (dbr:United_Kingdom, dbpedia:uk))
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
943,16,train,"Give me the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  dbr:Lamont_Cranston dbo:alias ?character .
  ?character rdfs:label ?alterEgo .
  FILTER(CONTAINS(LCASE(?alterEgo), ""the shadow""))
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
158,18,train,"Give me the native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  
  # Born in the Grand Duchy of Finland
  ?person dbo:birthPlace dbr:Grand_Duchy_of_Finland .

  # Associated with a country under Nicholas II's administration (Russia or its territories)
  ?person dbo:nationality dbr:Russian_Empire ;
          OPTIONAL { ?person dbo:residence dbr:Russian_Empire } .
  
  # Get the name of the person
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",3,4,4,2,2,2,3,28,0,0,126,0,0.0,0
158,17,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  
  # Native of the administration of Alexander II as Grand Duke of Finland
  ?person dbo:nationality dbr:Finnish_people .
  OPTIONAL { 
    ?person dbo:birthPlace dbr:Grand_Duchy_of_Finland . 
  }
  
  # Native of the Russian Empire
  ?person dbo:nationality dbr:Russian_Empire_citizens .
  OPTIONAL {
    ?person dbo:birthPlace dbr:Russian_Empire .
  }

  # Ensure person has a name
  ?person foaf:name ?name .

}
ORDER BY ?name
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,126,0,0.0,0
943,10,train,Give me the child of Dawit I and father of Baeda Maryam I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?dawitI a dbo:Person ;
          dbo:spouse ?spouse .
  ?baedaMaryamI a dbo:Person ;
                dbo:father ?child .
  ?child dbo:mother ?spouse .
  FILTER(?dawitI = dbr:Dawit_I_of_Ethiopia)
  FILTER(?baedaMaryamI = dbr:Baeda_Maryam_I_of_Ethiopia)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
311,17,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy and associated musical artist of Filthy Friends.",SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the album ""Sappy""
  ?sappyAlbum a dbo:MusicalWork ;
             dbo:title ""Sappy""@en .
  
  # Find the album ""Filthy Friends""
  ?filthyFriendsAlbum a dbo:MusicalWork ;
                     dbo:title ""Filthy Friends""@en .

  # Find writers of these albums
  ?writer dbo:album ?sappyAlbum ;
          dbo:album ?filthyFriendsAlbum ;
          a dbo:MusicalArtist .
  
  # Get band members of the writer
  ?bandMember dbo:member ?writer .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
198,5,train,Give me the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  dbr:Quincy_Adams_Gillmore dbo:receivedAward ?award .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
78,20,train,"Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?role WHERE {
  # Band members of The Alan Parsons Project
  { 
    ?project dbr:The_Alan_Parsons_Project .
    ?project dbo:musicalArtist ?bandMember .
    ?bandMember foaf:name ?name .
    BIND(""Band Member"" AS ?role)
  }
  
  UNION
  
  # Associated musical artists of Stuart Tosh
  {
    ?stuartTosh dbr:Stuart_Tosh .
    ?stuartTosh dbo:associatedMusicalArtist ?associatedArtist .
    ?associatedArtist foaf:name ?name .
    BIND(""Associated Musical Artist"" AS ?role)
  }
  
  UNION
  
  # Writers who are musical artists and artists involved in Wizards of Waverly Place soundtrack
  {
    ?soundtrack dbr:Wizards_of_Waverly_Place_(soundtrack) .
    ?soundtrack dbo:musicalArtist ?writer .
    ?writer a dbo:MusicalArtist ;
            a dbo:Artist .
    ?writer foaf:name ?name .
    BIND(""Writer and Artist"" AS ?role)
  }
}
ORDER BY ?name
LIMIT 10
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
158,4,train,"Give me the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Alexander II, Grand Duke of Finland""@en .
  OPTIONAL { 
    ?person dbo:positionHeld ?administration .
    ?administration dbo:startDate ?startDate .
    ?administration dbo:endDate ?endDate .
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
39,16,train,"Give me the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:wikiPageRedirects ?comicsCharacter .
  ?comicsCharacter dbo:alterEgo ?alterEgo .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
628,2,train,Give me the native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,10,4,961,0.7142857142857143,0.010298661174047374,0.020304568527918784
756,32,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # VfL Bochum in the 2007–08 season
  dbr:VfL_Bochum dbo:sportTeamInSeason dbr:2007%E2%80%9308_VfL_Bochum_season .
  
  # Manager of VfL Bochum during that season
  ?season dbp:manager ?manager .

  # Theodor Heuss's native country is Germany
  dbr:Theodor_Heuss dbo:nationality dbr:Germany .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
412,1,train,Give me the entity in Athens.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?label WHERE {
  ?entity dbo:location dbr:Athens .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
ORDER BY ?label
LIMIT 10
```",1,1,2,1,1,2,3,28,0,20,12,0.0,0.0,0
628,7,train,"Give me the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?award WHERE {
  ?band a dbo:Band .
  ?band dbo:birthPlace dbr:New_York_(state) .
  ?band dbo:award ?award .
  ?band foaf:name ?bandName .
}
ORDER BY ?bandName
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
87,13,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of Janusz Kamiński.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find movies featuring Iliza Shlesinger
  ?movie dbo:starring dbr:Iliza_Shlesinger .
  
  # Identify the director of these movies who is a spouse of Janusz Kamiński
  ?movie dbo:director ?director .
  ?director dbp:spouse dbr:Janusz_Kamiński .

  # Retrieve actors from these identified movies
  ?movie dbo:starring ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
198,40,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?forceInCharleston ?award WHERE {
  # Identify Quincy Adams Gillmore
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Quincy Adams Gillmore"" .

  # Find the force he was associated with in Charleston, South Carolina
  ?person dbo:commanded ?unit .
  ?unit dbo:location dbr:Charleston,_South_Carolina .

  BIND(?unit AS ?forceInCharleston)

  # Identify any awards given by the United States Congress related to a war
  OPTIONAL {
    ?award a dbo:Award ;
          dbp:awardee ?person ;
          dbo:givenBy dbr:United_States_Congress .
    ?war dbo:relatedEvent ?award .
  }

  BIND(?award AS ?award)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
737,30,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Child of Archduke Charles Louis of Austria (grandchild of Albrecht)
  ?archdukeGrandchild dbo:parent ?intermediateParent .
  ?intermediateParent dbo:parent dbr:Archduke_Charles_Louis_of_Austria .

  # The individual must be the same person
  FILTER (?albrechtChild = ?archdukeGrandchild)

  # Must be royalty
  ?child a dbo:Monarch .

  # Predecessor of Carl, Duke of Württemberg
  ?succession dbo:predecessor ?child .
  ?succession dbo:successor dbr:Carl,_Duke_of_W%C3%BCrttemberg .

  # Ensure the individual is the same as the child identified above
  FILTER (?child = ?albrechtChild)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,5,train,"Give me the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?song WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""T.I.""@en .
  
  ?album dbo:artist ?person ;
         dbo:track ?song .

  ?song a dbo:Songs .
}
ORDER BY ?song
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,44,0,0.0,0
159,59,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?writer WHERE {
  # Michał Kazimierz Pac as a commander in a military conflict
  ?pac a dbo:MilitaryPerson ;
       dbo:commanderOf ?conflict .

  # The successor of Michał Kazimierz Pac
  ?successor dbo:succeededBy ?pac ;
            dbo:officeHolder true ;
            dbo:politician true .

  # Reference to George Ducas through a writer
  ?work dbo:author dbr:George_Ducas .
  ?work dbo:about ?conflict .
  ?writer dbo:writtenWork ?work .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
513,14,train,"Give me the residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  # Find George Savage and his associated political party
  ?savage a dbo:Politician ;
          foaf:name ""George Savage"" ;
          dbp:party ?party .

  # Ensure the entity is both an organization and a political party
  ?party a dbo:Organization, dbo:PoliticalParty .

  # Find the leader of that party
  ?leader dbp:leaderOf ?party .

  # Get the residence of the leader
  OPTIONAL { ?leader dbo:residenceLocation ?residence . }
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
756,31,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # VfL Bochum as a sports club and its season in 2006-07
  dbr:VfL_Bochum dbo:sportTeamInSeason dbr:2006–07_VfL_Bochum_season .
  
  # The manager of VfL Bochum during the 2006-07 season
  ?season dbp:manager ?manager .

  # Ensure the manager is native to West Germany
  ?manager dbo:nationality dbr:West_Germany .

  # Optional: Filter by birthplace if needed for more precision
  OPTIONAL { ?manager dbo:birthPlace dbr:West_Germany . }
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
472,23,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?administeredTerritory ?mayorAdministration WHERE {
  # Hans Christian Andersen's death place
  dbr:Hans_Christian_Andersen dbo:deathPlace ?deathPlace .
  
  # Territory administered from the death place
  ?deathPlace dbo:administrativeRegion ?administeredTerritory .

  # Mayor's administration in Duchy of Schleswig
  OPTIONAL {
    ?duchy dbp:name ""Duchy of Schleswig""@en ;
           dbo:mayor ?mayor .
    ?mayor dbo:officeLocation ?location .
    FILTER(?location = ?deathPlace)
    BIND(""Mayor's administration in Duchy of Schleswig"" AS ?mayorAdministration)
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
816,30,train,Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentAmy ?actorJudgment WHERE {
  # Amy Arbus's parent
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus"" ;
            dbp:parent ?parentAmy .

  # Allan Arbus and his child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus"" .
  OPTIONAL { ?child dbp:parent ?allanArbus . }

  # Actor in Judgment: The Trial of Julius and Ethel Rosenberg
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:actor ?actorJudgment .

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
668,26,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?work dbr:The_Live_Anthology .
  ?work dbo:author ?person .
  ?person a dbo:MusicalArtist .
  ?person foaf:name ?name .
}
```",3,4,4,3,1,3,3,71,0,0,59565,0,0.0,0
143,2,train,Give me the reference to Afeez Oyetoro.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resource WHERE {
  ?resource foaf:name ""Afeez Oyetoro""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
347,35,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?event ?tvShow WHERE {
  # Cecilia Renata of Austria's father
  ?ceciliaRenata a dbo:Person ;
                 foaf:name ""Cecilia Renata of Austria"" ;
                 dbo:father ?father .

  # Child of the father who was a commander in war
  ?child dbo:parent ?father ;
         dbo:occupation dbr:Military_commander .

  # Societal event and television show related to 2nd Dragoon Regiment (France)
  ?event dbo:relatedEvent ?tvShow ;
         dbo:associatedWith dbr:2nd_Dragoon_Regiment_(France) .
  
  OPTIONAL { ?child dbo:participatedIn ?event . }
}
ORDER BY ?child
LIMIT 10
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
782,31,train,Give me the reference to the real name of the band of Kim Wilson and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?realName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Kim Wilson"" .

  ?band dbo:member ?person ;
        dbp:name ?bandName ;
        OPTIONAL { ?band dbp:realName ?realName } .

}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
943,5,train,"Give me the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resource WHERE {
  ?resource dbo:wikiPageRedirects dbr:Lamont_Cranston .
  OPTIONAL { ?resource dbo:genre ?genre . FILTER(?genre IN (dbo:RadioShow, dbo:Film, dbo:TelevisionSeries)) }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?war WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:participatedInWar ?war .
  FILTER (STRSTARTS(STR(?war), ""French Revolutionary Wars""))
}
ORDER BY ?commander
LIMIT 10
```",2,2,3,2,1,3,2,20,0,0,121,0,0.0,0
198,22,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement WHERE {
  # Henry Clay Lewis
  VALUES ?person { dbr:Henry_Clay_Lewis }
  
  OPTIONAL {
    ?person dbo:birthPlace ?place .
    ?place a dbo:Settlement ;
           dbo:country dbr:United_States_of_America .
    BIND(?place AS ?settlement)
  }

  # Amasa Tracy
  VALUES ?person { dbr:Amasa_Tracy }
  
  OPTIONAL {
    ?person dbo:birthPlace ?place .
    ?place a dbo:Settlement ;
           dbo:country dbr:United_States_of_America .
    BIND(?place AS ?settlement)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
353,39,train,"Give me the father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Constance of Burgundy and her spouse
  dbr:Constance_of_Burgundy dbo:spouse dbr:Roger_II_of_Sicily .
  
  # Roger II's child, William I of Sicily
  dbr:Roger_II_of_Sicily dbo:child dbr:William_I_of_Sicily .

  # William I's child, William II of Sicily
  dbr:William_I_of_Sicily dbo:child dbr:William_II_of_Sicily .
  
  # Find the father of William II of Sicily
  ?father dbo:child dbr:William_II_of_Sicily .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,49,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  # Step 1: Identify Elorm Kabu Amenyah
  ?elon a dbo:Person ;
        foaf:name ""Elorm Kabu Amenyah"" ;
        dbp:birthName ""Elorm Kabu Amenyah"" .

  # Step 2: Find associated musical artists of Elorm Kabu Amenyah
  ?elon dbo:associatedMusicalArtist ?artist .
  
  # Step 3: Filter for artists native to the Central Region, Ghana
  ?artist dbo:birthPlace dbr:Central_Region,_Ghana ;
          dbp:birthName ?birthName .

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
742,13,train,Give me the birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?birthPlace WHERE {
  ?alumnus a dbo:Person .
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  OPTIONAL { ?alumnus dbo:birthPlace ?birthPlace . }
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
859,3,train,"Give me the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  dbr:Burnt_by_the_Sun_(band) dbo:member ?person .
  OPTIONAL { ?person dbo:memberOf ?group . }
  ?group a (dbo:Band | dbo:MusicalGroup | dbo:Organization) .
  BIND(?group AS ?associatedArtist)
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
756,54,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find a player from VfL Bochum in the 2007-08 season
  ?player dbo:memberOf dbr:VfL_Bochum .
  ?season dbo:team dbr:VfL_Bochum ;
          dbo:season ""2007–08""^^xsd:string .
  
  # Find the manager of this player during that season
  ?manager dbo:managedTeam ?player ;
           dbo:managedTeam dbp:team dbr:SBV_Vitesse ;
           dbo:managedSeason ""2020–21""^^xsd:string .

  # Ensure the manager is native to Germany
  ?manager dbo:nationality dbr:Germany .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
737,60,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Archduchess Margarete Sophie of Austria's parent
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Child of the parent (grandchild of Archduchess Margarete Sophie)
  ?grandchild dbo:parent ?parent .
  
  # Ensure the grandchild is royalty
  ?grandchild a dbo:Royalty .

  # Archduchess Helena's spouse and their child
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  ?spouseChild dbo:parent ?spouse .
  
  # Predecessor of the spouse's child (could be a sibling or previous generation)
  ?predecessor dbo:sibling ?spouseChild .

  # Ensure the predecessor is royalty
  ?predecessor a dbo:Royalty .

  # Find the intersection where the grandchild matches the predecessor
  FILTER (?grandchild = ?predecessor)

  BIND(?grandchild AS ?childOfChild)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
198,21,train,"Give me the war of the awardee of Medal of Honor and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?war WHERE {
  ?awardee a dbo:Person .
  ?awardee dbo:honorsReceived dbr:Medal_of_Honor .
  ?awardee dbo:birthPlace dbr:Charleston,_South_Carolina .
  OPTIONAL { ?awardee dbp:deathPlace dbr:Charleston,_South_Carolina . }
  ?awardee dbo:award ?medalOfHonor .
  ?medalOfHonor dbo:conferralEvent ?war .
}
ORDER BY ?awardee
LIMIT 10
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
943,3,train,"Who is the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:Event .
  ?event dbo:location dbr:Mukha_Siege .
  ?person dbo:role ?role .
  FILTER(CONTAINS(LCASE(?role), ""commander"") || CONTAINS(LCASE(?role), ""leader"")) .
  ?person dbo:memberOf ?royalty .
  ?royalty a dbo:RoyalFamily .
  ?event dbo:participant ?person .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,6,train,"Give me the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Myat Hpone Pyo""@en .
  
  OPTIONAL { 
    ?person dbp:father ?father .
  }
  
  FILTER EXISTS {
    ?father a dbo:Monarch .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
37,2,train,"Who is the writer, that is an artist, of The Miseducation of Lauryn Hill?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?album a dbo:Album .
  ?album dbp:title ""The Miseducation of Lauryn Hill"" .
  ?album dbo:artist ?person .
  ?person dbo:occupation dbo:Singer ; dbo:composer true .
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
687,12,train,Give me the player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Get teams for Sergio Agüero
  ?agüeroTeam dbo:member dbr:Sergio_Ag%C3%BCero .
  
  # Get teams for Pablo Aimar
  ?aimarTeam dbo:member dbr:Pablo_Aimar .

  # Find common team
  FILTER (?agüeroTeam = ?aimarTeam)

  # Get other players in the common team during Agüero's time
  ?agüeroTeam dbo:member ?player .
  
  # Ensure it is not Aimar or Agüero themselves
  FILTER(?player != dbr:Pablo_Aimar && ?player != dbr:Sergio_Ag%C3%BCero)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,18,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the child of Saw Min Hla
  ?child dbo:parent dbr:Saw_Min_Hla .
  
  # Ensure this person is also the spouse of Saw Shwe Khet
  ?spouse dbo:spouse dbr:Saw_Shwe_Khet .
  FILTER (?child = ?spouse)
  
  # Check if this person is the predecessor of Myat Hpone Pyo
  ?predecessor dbo:successor dbr:Myat_Hpone_Pyo .
  FILTER (?spouse = ?predecessor)

}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
557,12,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  VALUES (?film ?year) { 
    (dbr:The_Adventures_of_Tom_Sawyer_(1938_film) ""1938"") 
    (dbr:A_Star_Is_Born_(1937_film) ""1937"")
  }
  
  ?film dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,9,train,Give me the war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  VALUES (?person) { 
    dbr:Toyotomi_Hidenaga 
    dbr:Hashiba_Hidekatsu 
  }
  
  ?person dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war ;
         dbo:description ?description .

  FILTER (lang(?war) = 'en' && lang(?description) = 'en')
}
ORDER BY ?war
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
816,17,train,Give me the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find Mariclare Costello
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  # Find her spouse(s)
  ?mariclare dbo:spouse ?spouse .

  # Find the children of those spouses
  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
941,3,train,"Who is the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:childOf ?parent .
  ?parent a dbo:Monarch .
  OPTIONAL { ?parent foaf:name ?parentName . }
}
ORDER BY ?parentName
LIMIT 10
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
311,0,train,Give me the associated musical artist of Filthy Friends.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  dbr:Filthy_Friends dbo:bandMember ?member .
  ?member dbo:associatedBand dbr:Filthy_Friends .
  ?member foaf:name ?artist .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
119,39,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?person a dbo:Person .
  ?person dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .
  ?person dbo:country dbr:Spain .
  ?person dbo:position dbr:Prime_Minister_of_Spain .
  ?person foaf:name ?leader .
}
ORDER BY ?leader
LIMIT 10
```",4,5,5,3,2,3,3,71,0,0,23,0,0.0,0
871,37,train,"Give me the father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Arthur Stanley's father
  OPTIONAL { 
    dbr:Arthur_Stanley_(politician) dbo:parent ?father .
  }
  
  # Edward Stanley, 17th Earl of Derby's child and their parent who is a politician and office holder
  OPTIONAL {
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .
    ?child dbo:parent ?politicianParent .
    FILTER (?politicianParent != dbr:Edward_Stanley,_17th_Earl_of_Derby) # Exclude Edward himself
    ?politicianParent a dbo:Politician ;
                     dbo:officeHolder ?office .
  }
  
  # Return the father of Arthur Stanley if he matches the criteria
  FILTER (?father = ?politicianParent)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,28,train,"Give me the child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Stephen V of Hungary's child
  ?child dbo:parent dbr:Stephen_V_of_Hungary .
  
  # Philip I, Prince of Taranto's father's spouse
  ?spouse dbo:spouse ?fatherOfPhilipI .
  ?fatherOfPhilipI dbo:child dbr:Philip_I,_Prince_of_Taranto .

  # Parent of Charles Martel of Anjou
  ?parent dbo:child dbr:Charles_Martel_of_Anjou .

  # The person who fits all criteria
  FILTER (?child = ?spouse && ?spouse = ?parent)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,25,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Eleonore of Austria and her father
  dbr:Eleonora_of_Austria dbo:parent ?eleonoreFather .
  
  # Cecilia Renata of Austria and her father
  dbr:Cecilia_Renata_of_Austria dbo:parent ?ceciliaFather .

  # The father of Eleonore is also the father of Cecilia Renata
  FILTER (?eleonoreFather = ?ceciliaFather)
  
  BIND(?eleonoreFather AS ?father)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,38,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Saw Shwe Khet's child
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  
  # Identify Myat Hpone Pyo and their spouse
  ?myatHponePyo dbp:spouse ?spouse .

  # Ensure the spouse is related to the child of Saw Shwe Khet
  ?child dbo:parent ?myatHponePyo .

  # Find the predecessor in royalty for this spouse
  ?predecessor dbo:successor ?spouse .
  
  # Ensure all entities are part of a royal lineage
  ?spouse a dbo:Monarch .
  ?predecessor a dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
392,8,train,Give me the member of 1. FC Magdeburg and reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName ?designerName WHERE {
  # Find members of 1. FC Magdeburg
  ?team a dbo:SoccerClub ;
        dbo:location dbr:Magdeburg, Saxony-Anhalt ;
        dbo:member ?player .
  
  ?player foaf:name ?memberName .

  # Find the designer of Aston Martin AMR1
  ?car a dbo:AstonMartinAMR1 ;
       dbo:designer ?designer .
  
  ?designer foaf:name ?designerName .
}
LIMIT 10
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
103,16,train,"Give me the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?profession WHERE {
  ?person a dbo:Actor .
  ?person dbo:occupation dbo:Politician .
  ?person foaf:name ?actorName .
  OPTIONAL { ?person dbo:worksFor dbr:Ab_Kya_Hoga . }
  ?person dbp:profession ?profession .
}
ORDER BY ?actorName
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
742,5,train,Give me the resident of Sofia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { 
    ?person dbo:birthPlace dbr:Sofia .
    ?person foaf:name ?name .
  }
  UNION
  OPTIONAL {
    ?person dbo:residence dbr:Sofia .
    ?person foaf:name ?name .
  }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,16,0,0.0,0
628,4,train,"Give me the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?bobby a dbo:MusicalArtist ;
         foaf:name ""Bobby Shmurda""@en .
  
  ?association dbo:associatedMusicalArtist ?bobby ;
               dbo:musicalArtist ?associatedArtist .
}
ORDER BY ?associatedArtist
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
103,44,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Actor in ""Dispatches from Elsewhere""
  ?castMember dbo:character dbr:Dispatches_from_Elsewhere .
  ?castMember dbo:actor ?actor .

  # Professional association with The Shadow
  OPTIONAL { 
    ?shadowCharacter dbo:alterEgo dbr:The_Shadow .
    ?shadowCharacter dbo:actor ?actor .
  }

  # Professional association with Shatrughan Sinha
  OPTIONAL {
    ?sinhaFilm dbo:starring dbr:Shatrughan_Sinha .
    ?sinhaFilm dbo:castMember ?actor .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
905,46,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Philip, Despot of Romania's parent
  ?philipParent a dbo:Person ;
                dbo:child dbr:Philip,_Despot_of_Romania ;
                dbo:spouse ?spouse .

  # Ensure the parent is royalty
  ?philipParent dbo:occupation dbr:Royalty .

  # Identify Charles I of Hungary's father
  ?charlesFather a dbo:Person ;
                 dbo:child dbr:Charles_I_of_Hungary ;
                 dbo:parent ?charlesGrandparent .

  # Ensure the grandparent is royalty
  ?charlesGrandparent dbo:occupation dbr:Royalty .

  # Link the two sets of parents through their children
  FILTER(?philipParent = ?charlesGrandparent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,0,train,Give me the birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Winston_Chang dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
119,53,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Anxo Quintana""@en .
  ?person dbo:nationality dbr:Spain .
  ?person dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .

  ?event dbo:leader ?person ;
         dbo:place dbr:Spain .

  ?person dbo:officeHeld ?office .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
258,8,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Eleonora Menicucci de Oliveira"" .
  OPTIONAL { ?person dbo:birthName ""Eleonora Menicucci de Oliveira"" . }
  ?person dbo:almaMater ?almaMater .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
943,37,train,"Give me the father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName ?alterEgo WHERE {
  # Part 1: Find the father of Baeda Maryam I
  ?baedaMaryamI a dbo:Monarch ;
                dbp:name ""Baeda Maryam I""@en ;
                dbp:father ?father .
  ?father foaf:name ?fatherName .

  # Part 2: Reference to Lamont Cranston's alter ego
  ?lamontCranston a dbo:FictionalCharacter ;
                  dbp:name ""Lamont Cranston""@en ;
                  dbp:alterEgo ?alterEgo .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
871,51,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child1 .
  
  # Child who is a politician
  ?child1 a dbo:Politician ;
          dbo:father ?politicianFather .

  # Alumnus of Eton College related to this politician as their father
  ?politicianFather dbp:almaMater dbr:Eton_College .
  
  # Find the child of this alumnus
  ?politicianFather dbo:child ?child2 .

  # Parent of this child
  ?child2 dbo:parent ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
311,3,train,"Who is the associated musical artist, that is an artist, of R.E.M.?",SELECT ?result WHERE { <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  dbr:R.E.M. a dbo:MusicalBand .
  ?association dbo:band dbr:R.E.M. ;
               dbo:artist ?associatedArtist .
}
ORDER BY ?associatedArtist
LIMIT 10
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
293,59,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Step 2: Find landmarks at the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""20.116800000000001347""^^xsd:float .

  # Step 3: Determine the ruling party in the landmark's location
  ?location dbo:isPartOf ?country .
  ?country dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .

  # Ensure the landmark is associated with the location
  ?landmark dbo:locatedIn ?location .

  # Step 4: Identify actors involved in these films
  ?film dbo:starring ?actor ;
        a dbo:Film .

  # Step 5: Retrieve spouse information for these actors
  OPTIONAL { ?actor dbp:spouse ?spouse . }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
87,0,train,Give me the actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  dbr:Paradise_(2013_film) a dbo:Film .
  dbr:Paradise_(2013_film) dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,7,0,0.0,0
633,16,train,"Give me the parent of the father of Dorothea of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandmother WHERE {
  ?dorothea dbo:father ?father .
  FILTER(STR(?dorothea) = ""Dorothea_of_Lorraine"") .

  ?father dbo:parent ?grandfather .
  
  ?grandfather dbo:spouse ?grandmother .
  
  ?grandmother a dbo:Royalty ;
              a dbo:Noble .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
905,60,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Find the predecessor of Stephen V of Hungary
  ?predecessor a dbo:Monarch ;
               dbo:successor dbr:Stephen_V_of_Hungary .

  # Find the child of this predecessor
  ?child dbo:parent ?predecessor ;
         a dbo:Person .

  # Find the spouse of the father of the parent of Philip, Despot of Romania
  ?philipParent a dbo:Person ;
                dbp:spouse ?fatherOfParent .
  ?fatherOfParent a dbo:Person ;
                  dbo:parent ?grandparent .
  ?grandparent a dbo:Monarch .

  # Find the spouse of this father
  ?spouse a dbo:Person ;
          dbp:spouse ?fatherOfParent .

  # The child of the child we are looking for is related to both these paths
  ?childOfChild dbo:parent ?child ;
                dbo:spouse ?spouse .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,32,train,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v1 <http://dbpedia.org/property/starring> """"@en . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Query for actor in the movie ATL
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:title ""ATL"" .
  ?movie dbo:starring ?actor .
}
LIMIT 1

# Query for artist of the album Urban Legend
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?album a dbo:MusicAlbum .
  ?album dbo:title ""Urban Legend"" .
  ?album dbo:artist ?artist .
}
LIMIT 1
```",4,4,5,2,2,3,3,71,0,0,10,0,0.0,0
78,2,train,Give me the band member of The Alan Parsons Project.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?group a dbo:MusicalBand .
  ?group foaf:name ""The Alan Parsons Project"" .
  ?group dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,0,0,17,0,0.0,0
609,0,train,Give me the birth place of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Vince_Gilligan a dbo:Person .
  OPTIONAL { dbr:Vince_Gilligan dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
905,54,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Father of Philip I
  ?father dbo:child ?philip ;
          foaf:name ?fatherName .

  # Spouse of the father (Mother of Philip I)
  ?mother dbo:spouse ?father ;
          foaf:name ?motherName .

  # Parent of the mother who is royalty and child of Stephen V
  ?parent a dbo:RoyalFamilyMember ;
          dbo:child ?mother ;
          dbo:child dbr:Stephen_V_of_Hungary .
  
  # Spouse of Maria of Bytom
  ?spouse dbo:spouse dbr:Maria_of_Bytom ;
          foaf:name ?spouseName .

  FILTER(?parent = ?spouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,14,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSpouse WHERE {
  # Find Princess Antoinette of Brunswick-Wolfenbüttel
  ?princess a dbo:Person ;
            foaf:name ""Princess Antoinette of Brunswick-Wolfenbüttel""@en .

  # Identify her child who is royalty
  ?child dbo:parent ?princess ;
         a dbo:Royalty .

  # Find the spouse of that child
  ?spouseOfChild dbp:spouse ?child .

  # Finally, find the spouse of the spouse of the child
  ?spouseOfSpouse dbp:spouse ?spouseOfChild .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
414,7,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show WHERE {
  ?institution a dbo:EducationalOrganization .
  ?nobelPrize a dbo:NobelPrizeInPhysics .
  ?nobelPrize dbo:laureate ?person .
  ?person dbo:almaMater ?institution .
  
  OPTIONAL { 
    ?person dbp:hostedShow ?show .
  }
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
80,61,train,"Give me the professional in the alter ego of the series of The Golden Master and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find the alter ego related to ""The Golden Master""
  ?alterEgo dbo:associatedWith dbr:The_Golden_Master .
  
  # Find the professional with this alter ego
  ?professional dbo:alias ?alterEgo .

  # Find T.I.'s work that is both a song and a musical piece
  ?work dbo:type [a dbo:Songs; a dbo:MusicalWorks] .
  ?work dbp:artist dbr:T.I. .

  # Find the professional who acted in this work
  ?professional dbo:actedIn ?work .
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
668,13,train,Give me the professional in the profession of Rod Argent.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/Rod_Argent>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  dbr:Rod_Argent dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,45620,0,0.0,0
756,3,train,"Give me the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successorSeason WHERE {
  dbr:2006–07_VfL_Bochum_season dbo:succeeds ?successor .
  ?successor a dbo:SportsSeason ;
             dbo:league dbr:Bundesliga ;
             dbp:name ?successorSeason .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
39,27,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Bob Thompson"" .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
37,4,train,Give me the birthplace of Scott LaFaro and birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Scott_LaFaro 
    dbr:Bob_Crewe 
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
103,19,train,"Give me the professional in Actor and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find television shows featuring Richard E. Grant
  ?show a dbo:TelevisionShow ;
        dbo:starring dbr:Richard_E._Grant .
  
  # Identify other actors in those shows
  ?show dbo:starring ?actor .

  # Ensure the actor is a professional in acting
  ?actor a dbo:Actor .
}
```",3,4,4,2,2,3,3,71,0,2,24,0.0,0.0,0
769,13,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Tony Hollings' birthdate
  VALUES (?hollingsBirthDate) { 
    SELECT ?birthday WHERE {
      dbr:Tony_Hollings dbo:birthday ?birthday .
    }
  }

  # Find athletes with the specified roles who share this birthdate
  ?person a dbo:Athlete ;
          dbo:birthDate ?personBirthday ;
          (dbo:SoccerPlayer | dbo:SportsManager | dbo:SoccerManager) .

  FILTER (?personBirthday = ?hollingsBirthDate)
}
```",3,7,4,3,1,3,2,20,0,0,6,0,0.0,0
392,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resource ?reference WHERE {
  ?resource a dbo:Resource .
  ?resource ?property ?reference .
}
LIMIT 10
```

This query selects resources and their references based on any property. You can replace `?resource` with a specific resource identifier (e.g., `dbr:Albert_Einstein`) to tailor the query for that particular subject.",1,1,2,1,1,2,2,9,0,0,98447,0,0.0,0
816,24,train,Give me the parent of the professional in Photographer and parent of Doon Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  # Find Doon Arbus and her parents
  OPTIONAL {
    ?doonArbus a dbo:Photographer ;
               foaf:name ""Doon Arbus"" .
    ?doonArbus dbo:mother ?mother ;
               dbo:father ?father .
    BIND(UNION(?mother, ?father) AS ?parent)
  }
  
  # Find parents of another photographer
  OPTIONAL {
    ?photographer a dbo:Photographer .
    ?photographer dbo:mother ?mother ;
                  dbo:father ?father .
    FILTER(?photographer != ?doonArbus)
    BIND(UNION(?mother, ?father) AS ?parent)
  }
  
  # Get the names of these parents
  ?parent foaf:name ?parentName .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
293,14,train,Give me the person born as the birth name of Ann Sothern.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Ann_Sothern dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
871,41,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Awardee of Commander of the Royal Victorian Order
  ?awards dbo:award dbr:Commander_of_the_Royal_Victorian_Order .
  ?person dbo:honoraryTitle ?awards .

  # Father of Arthur Stanley (politician)
  ?arthur dbp:father ?person ;
          rdf:type dbo:Politician ;
          foaf:name ""Arthur Stanley"" .
  
  # Parent of Frederick Stanley, 16th Earl of Derby
  ?frederick dbp:parent ?person ;
             rdf:type dbo:Person ;
             foaf:name ""Frederick Stanley, 16th Earl of Derby"" .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
198,45,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Identify Quincy Adams Gillmore
  ?gillmore a dbo:MilitaryPerson ;
            dbp:dateOfDeath ""1850-08-05""^^xsd:date ;
            dbo:birthPlace ?birthplace .

  # Ensure the birthplace is an American settlement
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Identify Amasa Tracy and find wars involving both
  ?tracy a dbo:MilitaryPerson ;
         dbp:name ""Amasa Tracy"" .
  
  ?war dbo:participant ?gillmore ;
       dbo:participant ?tracy .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
782,16,train,"Give me the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthday ""1945-03-30""^^xsd:date .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
ORDER BY ?person
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,61,0,0.0,0
347,27,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childOfFather WHERE {
  # Step 1: Identify Maria Anna of Bavaria and her children who are royalty
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria"" ;
             dbp:birthYear ""1574"" .

  ?mariaAnnaChild dbo:childOf ?mariaAnna ;
                  a dbo:RoyalFamilyMember .

  # Step 2: Identify the father of each child
  ?father dbo:spouse ?mariaAnna ;
          dbo:child ?mariaAnnaChild .

  # Step 3: Find other children of these fathers
  ?otherChild dbo:childOf ?father .
  
  BIND(?otherChild AS ?childOfFather)
}
ORDER BY ?childOfFather
LIMIT 10
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
871,59,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Rodney Lees' award and its awardee
  ?award dbo:recipient ?awardee .
  ?lees dbo:name ""Rodney Lees"" .
  ?lees dbo:receivedAward ?award .

  # Parent of the awardee's parent
  ?awardee dbo:parent ?childOfAwardeeParent .
  ?childOfAwardeeParent dbo:parent ?parent1 .

  # Edward Stanley, 17th Earl of Derby and his child's parent
  ?edward dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?edward dbo:child ?childOfEd .
  ?childOfEd dbo:parent ?parent2 .

  # The person is both a politician and an office holder
  FILTER (?parent1 = ?parent2)
  ?parent1 a dbo:Politician ;
           dbo:officeHolder true .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
943,39,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Step 1: Identify Baeda Maryam I
  dbr:Baeda_Maryam_I a dbo:Person ;
                     dbp:child ?child .

  # Step 2: Find the child's father (Baeda Maryam I's son)
  ?child dbp:parent ?father .
  
  # Step 3: Identify the grandfather (father of the father)
  ?father dbp:parent ?grandfather .

  # Step 4: Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch ;
               dbo:officeHolderOf ?office .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
737,37,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?greatGrandChild WHERE {
  # Alexander of Württemberg and Archduchess Margarete Sophie of Austria
  ?alexander a dbo:Person ;
             dbp:spouse dbr:Archduchess_Margarete_of_Austria ;
             dbp:child ?child1 .

  # First child
  ?child1 a dbo:Person ;
          dbp:parent ?alexander, dbr:Archduchess_Margarete_Sophie_of_Austria ;
          dbp:child ?grandChild1 .

  # Second child (grandchild of Alexander)
  ?grandChild1 a dbo:Person ;
               dbp:parent ?child1 ;
               dbp:child ?greatGrandChild .

  # Third child (great-grandchild of Alexander)
  ?greatGrandChild a dbo:Person ;
                   dbp:parent ?grandChild1 .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,17,train,"Give me the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tvShow ?societalEvent WHERE {
  # Find the Battle of Vienna resource
  dbr:Battle_of_Vienna a dbo:MilitaryConflict .

  # Look for television shows related to the Battle of Vienna
  ?tvShow dbo:subject dbr:Battle_of_Vienna .
  ?tvShow a dbo:TelevisionSeries .

  # Look for societal events related to the Battle of Vienna
  ?societalEvent dbo:relatedTo dbr:Battle_of_Vienna .
  ?societalEvent a dbo:SocietalEvent .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,38,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Joseph Benjamin Akuffo"" .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
668,58,train,"Give me the associated musical artist of $pacely and professional in the profession of Rod Argent and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Find Rod Argent's associated musical artist
  ?rodArgent a dbo:MusicalArtist ;
             foaf:name ""Rod Argent"" .
  
  ?rodArgent dbo:memberOf ?band .
  ?band dbo:member ?associatedArtist .

  # Find an artist from Central Region, Ghana and their birth name
  ?ghanaArtist a dbo:MusicalArtist ;
               dbo:birthPlace dbr:Central_Region,_Ghana .
  
  ?ghanaArtist dbp:birthName ?birthName .

  # Find a person with the same birth name as the artist from Central Region, Ghana
  ?person dbp:birthName ?birthName ;
          foaf:name ?name .

  # Link Rod Argent's associated artist to this person
  ?associatedArtist foaf:name ?name .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,3,train,Give me the designer of Aston Martin AMR1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```

This query selects the designer of the Aston Martin AMR1 by looking up its DBpedia resource and querying for the `dbo:designer` property.",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
140,13,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  dbr:Pickett's_Charge dbo:partOf dbr:Battle_of_Gettysburg .
  dbr:Battle_of_Gettysburg dbo:commander ?commander .
  FILTER (strstarts(str(?commander), ""George Pickett""))
}
```",3,4,4,3,1,3,2,20,0,0,42,0,0.0,0
270,5,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?person a dbo:Politician .
  ?person dbp:birthName ""Ada Jane Low"" .
  
  OPTIONAL { 
    ?office dbo:incumbent ?person ;
            dbo:predecessor ?predecessor .
  }
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
816,4,train,"Give me the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Herschel Bernardi"" .
  ?work dbo:starring ?person .
  ?work a dbo:Film .
  BIND(?work AS ?movie)
}
ORDER BY ?movie
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,13,0,0.0,0
198,50,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Find awards associated with Quincy Adams Gillmore
  ?award dbo:recipient ?person1 .
  ?person1 foaf:name ""Quincy Adams Gillmore""@en .

  # Identify Henry Clay Lewis's birthplace as a settlement in the USA
  ?person2 foaf:name ""Henry Clay Lewis""@en .
  ?person2 dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Find the awardee who was born in the same place as Henry Clay Lewis
  ?award dbo:recipient ?person3 .
  ?person3 dbo:birthPlace ?birthPlace .

  # Get the force of this awardee
  ?person3 dbo:militaryRank ?force .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
609,14,train,Give me the birth place of the author of El Deafo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Cecily_Ann_Bell a dbo:Writer .
  OPTIONAL { dbr:Cecily_Ann_Bell dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,23,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?commander a dbo:Person .
  ?commander dbo:role ""Commander"" ;
             dbo:place ""Siege of Mukha"" .
  ?commander dbo:royalty ?parentRoyalty .
  
  ?parentRoyalty dbo:child ?child .
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
375,15,train,Give me the entity in the birth place of Yamaza Enjirō and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceEntity WHERE {
  # Yamaza Enjirō
  OPTIONAL { 
    ?yamaza a dbo:Person .
    ?yamaza dbo:birthPlace ?birthPlaceYamaza .
    ?birthPlaceYamaza rdfs:label ?birthPlaceLabelYamaza .
    FILTER (lang(?birthPlaceLabelYamaza) = ""en"")
  }
  
  # Hashiba Hidekatsu
  OPTIONAL { 
    ?hashiba a dbo:Person .
    ?hashiba dbo:birthPlace ?birthPlaceHashiba .
    ?birthPlaceHashiba rdfs:label ?birthPlaceLabelHashiba .
    FILTER (lang(?birthPlaceLabelHashiba) = ""en"")
  }
  
  # Return the birth place entities
  {
    SELECT DISTINCT ?entity WHERE { 
      VALUES ?placeVar { ?birthPlaceYamaza ?birthPlaceHashiba }
      ?placeVar rdfs:label ?label .
      FILTER (lang(?label) = ""en"")
      BIND(?placeVar AS ?birthPlaceEntity)
    }
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
905,42,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary
  ?belaviv a dbo:Monarch ;
           dbo:spouse ?spouseBelaviv ;
           dbo:child ?childBelaviv .

  # Child of Béla IV
  ?childBelaviv a dbo:Person ;
                dbo:child ?grandchild .

  # Grandchild (Child of the Child) who is royalty
  ?grandchild a dbo:Monarch .

  # Spouse of the father of Philip I, Prince of Taranto
  ?philip1 a dbo:Person ;
           dbp:father ?fatherPhilip1 .
  ?fatherPhilip1 dbo:spouse ?spouseFatherPhilip1 .
  
  # Ensure this grandchild is the spouse
  FILTER (?grandchild = ?spouseFatherPhilip1)

  # Parent of Charles Martel of Anjou
  ?charlesMartel a dbo:Person ;
                 dbp:parent ?parentCharlesMartel .
  FILTER (?grandchild = ?parentCharlesMartel)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
89,52,train,"Give me the child of the parent of the child of Minye Kyawswa and predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalty WHERE {
  # Minye Kyawswa's child
  ?minyeKyawswaChild dbo:childOf dbr:Minye_Kyawswa .
  
  # Parent of the child of Minye Kyawswa (which is Minye Kyawswa himself)
  ?parent dbo:parentOf ?minyeKyawswaChild .
  
  # Predecessor of Myat Hpone Pyo
  ?predecessor dbo:predecessor dbr:Myat_Hpone_Pyo .
  
  # Father of Myat Hpone Pyo and his spouse
  ?father dbo:child dbr:Myat_Hpone_Pyo .
  ?spouse dbo:spouseOf ?father .

  # The royalty we are looking for is the child of the parent (Minye Kyawswa) 
  # and predecessor of Myat Hpone Pyo, and spouse of the father of Myat Hpone Pyo
  ?royalty dbo:childOf ?parent .
  ?royalty dbo:predecessor dbr:Myat_Hpone_Pyo .
  ?royalty dbo:spouseOf ?father .

  # Ensure the person is royalty
  ?royalty a dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,44,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?juanCarlosTeam ?actorSoccerPlayerAthlete ?teamOfPersonBorn1979 WHERE {
  # Juan Carlos Molina (footballer) and his team(s)
  ?juancarlos a dbo:SoccerPlayer ;
              foaf:name ""Juan Carlos Molina"" ;
              dbp:team ?juanCarlosTeam .

  # Actor who is also a soccer player and athlete in ""All or Nothing: Manchester City""
  ?actor a dbo:Actor, dbo:SoccerPlayer, dbo:Athlete ;
         foaf:name ?actorName ;
         dbp:work ?allOrNothing .
  ?allOrNothing rdfs:label ""All or Nothing: Manchester City""@en .

  # Person born on 1979-11-03 who is a soccer player and manager
  ?person a dbo:SoccerPlayer, dbo:SoccerManager ;
          foaf:name ?personName ;
          dbp:birthday ""1979-11-03""^^xsd:date .
  ?person dbp:team ?teamOfPersonBorn1979 .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
633,13,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine dbo:child ?child .
  
  # Child is royalty
  ?child a dbo:Royalty .

  # Parent who is both royalty and noble
  ?parent dbo:child ?child ;
          a dbo:RoyalFamilyMember, dbo:Noble .

  # Spouse of the parent
  ?parent dbo:spouse ?spouse .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
39,23,train,Give me the professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerName ?profession WHERE {
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer foaf:name ?producerName .
  OPTIONAL { ?producer dbo:occupation ?profession . }
}
```",3,3,4,3,1,3,3,71,0,6,46017,0.0,0.0,0
905,55,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Charles I of Hungary's father
  dbr:Charles_I_of_Hungary dbo:father dbr:Stephen_V_of_Hungary .
  
  # Father of Philip I, Prince of Taranto
  dbr:Philip_I,_Prince_of_Taranto dbo:father dbr:Charles_II_of_Anjou .

  # Spouse of Charles II of Anjou
  dbr:Charles_II_of_Anjou dbo:spouse ?spouse .
  
  # Child of Béla IV of Hungary (royalty)
  ?child dbo:parent dbr:Béla_IV_of_Hungary ;
         a dbo:Monarch .

  # Parent of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:father ?parent .

  # Linking the spouse and parent
  FILTER(?spouse = ?parent)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,30,train,Give me the associated musical artist of $pacely and professional in Musician and person born as the birth name of Joey B.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  foaf:name ?person ""Joey B"" .
  OPTIONAL { ?person dbp:birthday ?birthday . }
  ?person dbp:birthName ?birthName .

  ?relatedPerson a dbo:MusicalArtist .
  ?relatedPerson foaf:name ?artist .
  FILTER regex(?artist, ""$pacely"", ""i"") .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,40,train,Give me the birth place of Cece Bell and birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Cecily_Ann_Bell 
    (SELECT DISTINCT ?awardee WHERE {
      ?award a dbo:Award .
      ?award dbo:recipient ?awardee .
      ?awardee dbo:occupation dbr:Vince_Gilligan .
    })
    dbr:Glenn_Youngkin
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
595,12,train,Give me the author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorName WHERE {
  # Find the author of ""Back to Work""
  OPTIONAL {
    ?book a dbo:Book .
    ?book dbp:title ""Back to Work"" .
    ?book dbo:author ?person1 .
    ?person1 foaf:name ?authorName .
  }
  
  # Find the commander during the Third Taiwan Strait Crisis
  OPTIONAL {
    ?event a dbo:MilitaryConflict ;
           dbp:name ""Third Taiwan Strait Crisis"" .
    ?event dbo:commander ?person2 .
    ?person2 foaf:name ?commanderName .
    
    FILTER(?authorName = ?commanderName)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,15,train,"Give me the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:alias ?reference .
  FILTER(CONTAINS(LCASE(?reference), ""kent allard"")) .
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
}
ORDER BY ?alterEgo
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
609,20,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Query for Vince Gilligan's birthplace
  { 
    dbr:Vince_Gilligan dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Query for governors who are politicians from Virginia
  { 
    ?governor a dbo:Politician ;
              dbo:governmentRole dbr:Governor_of_Virginia ;
              dbo:birthPlace ?birthPlace .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
737,61,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?descendant WHERE {
  # Alexander of Württemberg's lineage
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en ;
             dbp:birthYear ""1804""^^xsd:gYear ;
             dbp:deathYear ""1881""^^xsd:gYear .

  # First child of Alexander
  ?child1 dbo:parent ?alexander .
  
  # Second child (grandchild of Alexander)
  ?child2 dbo:parent ?child1 .
  
  # Third child (great-grandchild of Alexander)
  ?child3 dbo:parent ?child2 .

  # Archduchess Margarete Sophie's parent
  ?margarete a dbo:Person ;
             foaf:name ""Archduchess Margarete Sophie of Austria""@en .
  
  ?parentMarg dbp:child ?margarete .
  
  # Child of the parent of Margarete (grandchild)
  ?child4 dbo:parent ?parentMarg .

  # Second child (great-grandchild of Margarete's parent)
  ?child5 dbo:parent ?child4 .

  # Find common descendant
  ?descendant dbo:parent ?child3 ;
              dbo:parent ?child5 .
  
  # Ensure the descendant is royalty
  ?descendant a dbo:Royalty .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
531,32,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  # Identify Alberto Ruiz-Gallardón
  ?person a dbo:Politician ;
          foaf:name ""Alberto Ruiz-Gallardón""@en .
  
  # Find his roles as an office holder and politician
  OPTIONAL { ?person dbo:officeHolderOf ?office . }
  OPTIONAL { ?person dbo:memberOf ?organization . }

  # Link to the Central African Republic Civil War
  ?event a dbo:Event ;
         dbp:name ""Central African Republic Civil War""@en .
  
  # Find connections between his roles and the event
  ?office dbo:relatedEvent ?event .
  ?organization dbo:relatedEvent ?event .

  # Identify tenants of his residence or office
  OPTIONAL { ?office dbo:tenant ?tenant . }
  OPTIONAL { ?person dbo:residence ?residence . }
  OPTIONAL { ?residence dbo:tenant ?tenant . }

}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
905,30,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Charles Martel of Anjou
  dbr:Charles_Martel_of_Anjou a dbo:Person ;
    dbo:child ?child .

  # Parent who is royalty
  ?parent dbo:child ?child .
  ?parent a dbo:Royalty .

  # Child's spouse is Charles II of Naples
  ?child dbo:spouse dbr:Charles_II_of_Naples .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,0,train,Give me the birthplace of Ekaterina Zaharieva.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Ekaterina_Zaharieva dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
375,13,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?author WHERE {
  ?artist a dbo:MusicalArtist ;
          dbo:deathDate ""2020-06-18""^^xsd:date .
  
  ?work dbo:creator ?artist ;
        a dbo:Film, dbo:TelevisionShow .

  ?work dbp:writer ?author .
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
89,11,train,Give me the child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Min Hla Htut
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en .
  
  # Find his parents
  ?parent dbo:child ?minHlaHtut .

  # From those parents, find their children (i.e., Min Hla Htut's siblings or cousins)
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,2,5,0.0,0.0,0
203,54,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
  ?regiment a dbo:MilitaryUnit ;
            dbo:participatedIn ?war .
  
  FILTER(?regiment = dbr:30th_(Cambridgeshire)_Regiment_of_Foot)

  # Find wars involving William Bayne
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne"" ;
         dbo:commanderOf ?unit .

  ?unit dbo:participatedIn ?war .
  
  # Get the commander of the war
  ?war dbo:commander ?commander .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
143,4,train,Give me the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Cynthia_Morgan a dbo:MusicalArtist .
  OPTIONAL { dbr:Cynthia_Morgan dbp:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
687,28,train,"Give me the player in Sergio Agüero and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?agueroPlayer ?aimarTeam ?athleteName WHERE {
  # Sergio Agüero's team(s)
  ?aguero a dbo:Footballer ;
          dbp:team ?agueroTeam .
  
  # Pablo Aimar's team(s)
  ?aimar a dbo:Footballer ;
         dbp:team ?aimarTeam .

  # Athlete born on 1955-02-22
  ?athlete a dbo:Athlete ;
           dbp:birthday ""1955-02-22""^^xsd:date ;
           foaf:name ?athleteName .
  
  # Find the player in both Sergio Agüero's and Pablo Aimar's team(s)
  ?agueroTeam dbp:player ?agueroPlayer .
  ?aimarTeam dbp:player ?agueroPlayer .

}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
943,34,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  dbr:Baeda_Maryam_I dbo:parent ?father .
  
  ?father a dbo:Monarch .

  OPTIONAL {
    ?commander dbo:event dbr:Siege_of_Mukha .
    ?commander a dbo:Monarch .
    
    ?commander dbo:parent ?father .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
398,10,train,Who is the writer of the work of Aleksandr Filimonov?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?author WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Aleksandr Filimonov""@en .
  
  ?work dbo:author ?person ;
        dbo:wikiPageRedirects ?redirect .

  OPTIONAL { 
    ?redirect dbo:wikiPageRedirects ?actualWork .
    ?actualWork dbo:author ?author .
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
731,8,train,Give me the war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?event a dbo:MilitaryEngagement .
  ?event dbo:location dbr:HMS_Prince_of_Wales_and_HMS_Repulse_sinking .
  ?event dbo:partOf ?war .
}
```",2,2,3,2,1,3,2,20,0,0,12,0,0.0,0
159,35,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:name ""Russo-Polish War (1654–1667)""@en .
  
  ?commander1 dbo:role ""Commander"" ;
              dbo:participatedIn ?war ;
              dbo:occupation [ a dbo:Politician ; 
                               dbo:officeHolder true ] .

  ?commander2 dbo:role ""Commander"" ;
              dbo:participatedIn ?war ;
              dbp:succeededBy ?successor .
  
  FILTER(?commander1 != ?commander2)
}
LIMIT 10
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
263,13,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find William Gayner's birthplace that is both a region and a country
  ?gayner dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdf:type dbo:Region .

  # Find Mary Elphinstone, Lady Elphinstone
  ?maryElphinstone dbp:fullName ""Mary Elphinstone, Lady Elphinstone""^^xsd:string .

  # Find her parent who is native to the same birthplace as William Gayner
  ?parent dbo:child ?maryElphinstone ;
          dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
119,11,train,Give me the office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?election dbo:electionDate ?date .
  ?election dbo:region dbr:Galicia .
  FILTER(YEAR(?date) = 2009)
  
  ?candidate dbo:electedAs ?position .
  ?candidate dbo:electedIn ?election .
  
  ?position dbp:title ?office .
}
LIMIT 1
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
158,5,train,"Give me the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  dbr:Nicholas_II_of_Russia a dbo:Monarch .
  dbr:Nicholas_II_of_Russia dbo:ruledCountry ?country .
}
```",1,2,2,1,1,2,3,28,0,0,3,0,0.0,0
531,11,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Alberto Ruiz-Gallardón""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
  ?residence dbo:resident ?tenant .
}
```",2,2,3,2,1,3,3,71,0,0,375,0,0.0,0
295,6,train,Give me the native of Birmingham and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicArtist .
  ?person dbo:birthPlace dbr:Birmingham_United_Kingdom .
  ?song dbo:lyricsBy ?person .
  ?song foaf:name ""Boom Shack-A-Lak"" .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
668,6,train,Give me the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/Rod_Argent>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  dbr:Rod_Argent dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
628,33,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Subquery to find the birth name of a musical artist from Florida
  SELECT ?birthName WHERE {
    ?person a dbo:MusicalArtist .
    ?person dbo:birthPlace dbr:Florida .
    ?person dbp:birthName ?birthName .
  } ORDER BY ?birthName LIMIT 1

  # Main query to find Uncle Murda band member with the same birth name
  ?band a dbo:Band .
  ?band dbr:Uncle_Murda .
  ?band dbo:member ?person .
  ?person foaf:name ?name .
  ?person dbp:birthName ?birthName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,47,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?gillmoreForce ?medalOfHonorWar WHERE {
  # Quincy Adams Gillmore's award and force
  dbr:Quincy_A._Gillmore a dbo:MilitaryPerson .
  OPTIONAL { 
    ?award dbo:recipient dbr:Quincy_A._Gillmore .
    ?award dbo:militaryBranch ?gillmoreForce .
  }

  # Medal of Honor awardees and their wars
  ?medalOfHonorAward a dbo:Award ;
                     dbo:recipient ?awardee .
  OPTIONAL {
    ?awardee dbo:participatedInWar ?war .
    ?war dbp:name ?medalOfHonorWar .
  }
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
103,31,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  # Identify John Cleese by his birth name and profession
  ?person a dbo:Actor ;
          foaf:name ""John Cleese"" ;
          dbp:birthName ""Richard Grant Esterhuysen"" .
  
  # Find movies or TV shows he acted in that are also television shows
  ?movie dbo:starring ?person ;
         a (dbo:Film|dbo:TelevisionShow) .

  FILTER EXISTS { ?movie dbo:type dbr:Television_show }
}
```",4,5,5,3,2,3,3,71,0,0,24,0,0.0,0
288,0,train,Give me the native of Lahore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Lahore .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,2,9,10,3,871,0.7692307692307693,0.011350737797956867,0.022371364653243846
203,23,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:eventParticipant ?figure .
  
  ?figure foaf:name ""Triple X""@en ; # Replace with the actual name
          dbo:birthName ""The Triple X"" . # Assuming this is how they are identified

  ?war dbo:commander ?commander .

  FILTER (EXISTS { ?war a dbo:Event }) # Ensure it's also an event
}
```",3,5,4,3,1,3,3,71,0,0,113,0,0.0,0
557,18,train,Give me the professional in  and producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Producer of A Star Is Born (1937)
  ?aStarIsBorn dbo:director ?producer .
  FILTER(STRSTARTS(STR(?aStarIsBorn), ""http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)""))

  # Producer of The Adventures of Tom Sawyer (1938)
  ?tomSawyer dbo:director ?producer .
  FILTER(STRSTARTS(STR(?tomSawyer), ""http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)""))
}
```",3,3,4,1,3,3,3,71,0,1,1,0.0,0.0,0
609,33,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?vinceBirthPlace ?governorName ?paulusBirthPlace WHERE {
  # Find Vince Gilligan's birth place
  ?vince a dbo:Person ;
         foaf:name ""Vince Gilligan""@en ;
         dbo:birthPlace ?vinceBirthPlace .

  # Check if the birth place is an administrative region and find its governor
  ?vinceBirthPlace a dbo:AdministrativeRegion .
  OPTIONAL {
    ?governor a dbo:Politician ;
              dbo:officeHolderOf ?vinceBirthPlace ;
              foaf:name ?governorName .
  }

  # Find Paulus Powell's birth place
  ?paulus a dbo:Person ;
          foaf:name ""Paulus Powell""@en ;
          dbo:birthPlace ?paulusBirthPlace .

  # Ensure the birth place is both a region and an administrative region
  ?paulusBirthPlace a dbo:Region, dbo:AdministrativeRegion .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
38,3,train,"Give me the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?work a dbo:Book .
  ?work dbo:author dbr:Joe_Biden .
  ?work dbo:country dbr:United_States .
  FILTER NOT EXISTS { ?work dbo:abstract ?abstract . } # Ensures it's not an abstract work
}
ORDER BY ?work
LIMIT 10
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
687,59,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player1 ?player2 WHERE {
  # Find Marty Pollio's birthday
  ?marty a dbo:Athlete ;
         foaf:name ""Marty Pollio"" ;
         dbp:birthday ?birthday .

  # Find another athlete born on the same date
  ?person1 a dbo:Athlete ;
           dbp:birthday ?sameBirthday .
  FILTER (?sameBirthday = ?birthday)
  
  # Get Manuel Huerga's film
  ?film dbo:director dbr:Manuel_Huerga ;
        a dbo:Film .

  # Find an actor who is also a soccer player in that film
  ?person2 a dbo:SoccerPlayer, dbo:Actor ;
           dbo:workIn ?film .
  
  # Assign variables for clarity
  BIND(?person1 AS ?player1)
  BIND(?person2 AS ?player2)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,30,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?associatedArtist WHERE {
  # Identify Kim Wilson by his birth name
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Kim Wilson"" .
  ?person dbp:birthName ""Nicholas Michael Curran"" .

  # Find the band The Fabulous Thunderbirds and its members
  ?band a dbo:Band ;
        dbo:member ?member .
  
  FILTER(?band = dbr:The_Fabulous_Thunderbirds) .
  
  # Get associated artists of Kim Wilson
  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
58,16,train,Give me the producer of the movie with  and spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer ?spouse WHERE {
  # Find the person with birth name Linda Sue Cobb
  ?person dbp:birthName ""Linda Sue Cobb"" .
  
  # Find movies associated with this person
  ?movie dbo:starring ?person ;
         dbo:producer ?producer .

  # Get spouse information of the person
  OPTIONAL { 
    ?person dbo:spouse ?spouse .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
531,18,train,Give me the office of Mariano Rajoy and office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  VALUES ?person { 
    dbr:Mariano_Rajoy 
    dbr:Miguel_Maura 
  }
  
  ?person dbo:positionHeld ?office .
  
  OPTIONAL {
    ?office dbo:location dbr:Madrid .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
39,53,train,"Give me the professional in  and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalRole ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Robert Lamar Thompson"" .
  OPTIONAL { ?person dbo:profession ?professional . }
  OPTIONAL { ?professional dbo:wikiPageRedirects dbr:Coke_Studio_Philippines_producer . }
  OPTIONAL { ?person dbo:band ?band . }
  
  BIND(IF(BOUND(?professional), ?professional, ""Unknown"") AS ?professionalRole)
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
246,0,train,Give me the parent of Princess Sara bint Faisal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Princess_Sara_bint_Faisal dbo:childOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
668,1,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,12,7563,0.0,0.0,0
943,46,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo ?royaltyParent ?commander WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  # Alter ego's parent who is royalty
  ?alterEgo dbo:parent ?royaltyParent .
  ?royaltyParent a dbo:Monarch .

  # Commander in Siege of Mukha related to the royalty
  ?commander dbo:relatedTo ?royaltyParent .
  ?commander dbp:title ""Commander"" .
  
  FILTER (CONTAINS(LCASE(?commander), ""siege of mukha""))
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
943,36,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?dawitI dbo:child ?child .
  ?baedaMaryamI dbo:child ?baedaChild .

  ?child dbo:father ?dawitI .
  ?dawitI a dbo:Monarch .
  ?dawitI dbo:officeHolder true .

  ?baedaChild dbo:parent ?relatedPerson .
  ?relatedPerson = ?dawitI .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
68,17,train,"Give me the father of Catherine of Austria, Queen of Portugal and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Catherine of Austria, Queen of Portugal
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:parent ?father .
  
  # Ensure the father is a royalty
  ?father a dbo:Monarch .

  # Check if the father was involved in the Siege of Padua as a commander
  OPTIONAL {
    ?siege dbo:commander ?father ;
           dbp:name ""Siege of Padua"" .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,31,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  # Find Marty Pollio's birthday
  VALUES (?martyBirthday) { 
    SELECT ?birthday WHERE {
      dbr:Marty_Pollio dbo:birthday ?birthday .
    }
  }

  # Find athletes with the same birthday as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbp:birthday ?birthday .

  FILTER(?birthday = ?martyBirthday)

  # Ensure these athletes are players like Sergio Agüero
  OPTIONAL { 
    ?athlete dbo:playsSport dbr:Football . # Assuming we want football players similar to Agüero
  }

  # Optionally, ensure they have a role similar to player
  OPTIONAL {
    ?athlete dbo:role dbp:player .
  }
}
ORDER BY ?athlete
LIMIT 10
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
89,27,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .

  # Step 2: Find their spouse
  ?spouse dbo:spouseOf ?sawMinPhyu ;
          a dbo:Person .

  # Step 3: Determine if the spouse is royalty
  ?spouse dbo:royaltyTitle ?title .
  
  # Step 4: Identify any children of this royal spouse
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Step 5: Find the predecessor of that child
  ?predecessor dbo:successor ?child .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
628,35,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePerson WHERE {
  # Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedMusicalArtist dbr:Bobby_Shmurda .
  ?award dbo:location dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .

  # Identify the region that is an American state and settlement
  ?region a dbo:State ;
          a dbo:Settlement ;
          dbo:country dbr:United_States_of_America .
  
  # Find the native of this region who is also a band member of a musical artist associated with Bobby Shmurda
  ?nativePerson dbo:nationality ?region .
  ?nativePerson dbo:bandMemberOf ?musicalArtist .
  ?musicalArtist dbo:associatedMusicalArtist dbr:Bobby_Shmurda .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
80,4,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
}
ORDER BY ?movie
LIMIT 10
```",1,1,2,1,1,3,3,71,1,9,39789,0.1,2.5131942699170645e-05,5.0251256281407036e-05
295,9,train,"Give me the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""Steven Kapur"" .
  ?artist dbo:works ?work .
  FILTER (?work a dbo:MusicalWork)
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
756,55,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Thomas Letsch's manager role in VfL Bochum during the 2007-08 season
  ?person dbr:Thomas_Letsch .
  ?season dbo:sportTeamSeason dbr:VfL_Bochum_season_2007–08 .
  ?season dbo:manager ?manager .
  
  # Theodor Heuss's native administration (Germany)
  ?theodorHeuss dbr:Theodor_Heuss .
  ?theodorHeuss dbo:nationality dbr:Germany .

  # Linking Thomas Letsch to the same manager as in VfL Bochum
  ?manager dbp:managedTeam ?team .
  ?person dbp:manages ?team .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
742,6,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Ekaterina_Zaharieva 
    dbr:Reneta_Kamberova 
  }
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,4,0,0.2,1.0,0.33333333333333337
412,22,train,"Give me the war of the leader of National Party of Greece and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Antonios Varthalitis' death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # National Party of Greece leader
  ?leader dbp:party dbr:National_Party_of_Greece ;
          dbo:occupation dbo:Politician .

  # Wars involving the leader
  ?war dbo:participant ?leader .
  
  # Check if the war is connected to the death place
  ?war dbo:location ?deathPlace .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
414,9,train,"Give me the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution WHERE {
  ?award a dbo:Award .
  ?award dbo:recipient dbr:Rainer_Weiss .
  ?award dbo:hostOrganization ?institution .
  FILTER (isLiteral(?institution) = false)
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
633,6,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of Renée of Bourbon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Francis I, Duke of Lorraine""@en .
  OPTIONAL { ?person dbo:spouse dbr:Renée_of_Bourbon . }
  ?person dbo:parent ?parent .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,28,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and reference to  and father of Baeda Maryam I.","SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Yeshaq I is a royalty and has children
  ?yeshaqI a dbo:Monarch ;
           dbo:spouse ?spouse ;
           dbo:child ?child .

  # Baeda Maryam I is the child of Yeshaq I
  ?baedaMaryamI a dbo:Monarch ;
               rdfs:label ""Baeda Maryam I""@en ;
               dbo:parent ?yeshaqI .

  # Ensure the child is also the parent of Baeda Maryam I
  ?child dbo:parent ?baedaMaryamI .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
203,58,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  # Identify William Bayne and his awards
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne"" ;
         dbp:honours dbr:Knight_Commander_of_the_Order_of_the_Bath .

  # Find the military conflict (war) involving him
  ?conflict dbo:commander ?bayne ;
           a dbo:MilitaryConflict .

  # Identify the French campaign in Egypt and Syria as an event
  ?campaign dbo:name ""French campaign in Egypt and Syria"" ;
            a dbo:Event, dbo:MilitaryConflict .

  # Find the military force involved in both the war and the campaign
  ?conflict dbo:militaryForce ?militaryForce .
  ?campaign dbo:militaryForce ?militaryForce .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
80,21,train,Give me the actor of the movie with  and professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  ?movie dbo:title "":MovieTitle"" .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
  OPTIONAL { ?actor dbp:profession "":Profession"" . }
  ?actor foaf:name ?actorName .
}
```",3,3,4,2,2,3,3,71,0,0,7802,0,0.0,0
687,60,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?team WHERE {
  # Find Marty Pollio's birthday
  VALUES (?martyBirthday) { 
    (dbr:Marty_Pollio dbo:birthday ?martyBirthday)
  }
  
  # Find athletes born on Marty Pollio's birthday
  ?person a dbo:Athlete .
  ?person dbo:birthDate ?athleteBirthDate .
  FILTER(?athleteBirthDate = ?martyBirthday) .
  OPTIONAL { ?person dbp:team ?team . }
  ?person foaf:name ?athlete .

  # Find Marcelo Sarmiento's birthday
  VALUES (?marceloBirthday) {
    (dbr:Marcelo_Sarmiento dbo:birthday ?marceloBirthday)
  }

  # Find soccer players/managers born on Marcelo Sarmiento's birthday
  ?soccerPerson a dbo:SoccerPlayer ;
                dbo:sportManagerOf ?team .
  ?soccerPerson dbo:birthDate ?soccerBirthDate .
  FILTER(?soccerBirthDate = ?marceloBirthday) .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
119,24,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantSantiago ?countryQuirós WHERE {
  # Find the tenant of Santiago de Compostela
  OPTIONAL { 
    dbr:Santiago_de_Compostela dbo:mayor ?tenantSantiago .
  }
  
  # Find the country where Álvaro Quirós resides
  OPTIONAL {
    dbr:Álvaro_Quirós dbp:residenceCountry ?countryQuirós .
  }
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
143,10,train,Give me the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Cynthia_Morgan dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
203,49,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath .

  ?commandRole dbo:roleName ""Commander"" ;
               dbo:agent ?person ;
               dbo:place ?war .

  ?war a dbo:MilitaryConflict ;
      dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .

  ?event a dbo:SocietalEvent, dbo:MilitaryEvent ;
         dbo:associatedWith ?person .
  
  ?militaryForce dbo:commander ?person .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
23,20,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party WHERE {
  VALUES (?person ?label) {
    (dbr:Roy_Barreras ""Roy Barreras"")
    (dbr:Daniel_Elahi_Galán ""Daniel Elahi Galán"")
    (dbr:Gustavo_Petro ""Gustavo Petro"")
  }
  
  ?person dbo:party ?party .
}
```",4,4,5,2,3,2,3,28,1,11,0,0.08333333333333333,1.0,0.15384615384615385
198,56,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity WHERE {
  ?person a dbo:Person .
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:militaryService ?service .
  ?service dbo:commander dbr:Quincy_Adams_Gillmore .
  ?service dbo:conflict ?war .
  ?war dbo:medalOfHonorRecipient ?recipient .
  ?recipient a dbo:Person .

  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .

  ?birthPlace dbp:wikiPageRedirects ?birthPlaceEntity .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,5,train,Give me the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  dbr:Aladdin_(1958_film) a dbo:Film .
  dbr:Aladdin_(1958_film) dbo:starring ?castMember .
  ?castMember foaf:name ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
414,12,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show ?award WHERE {
  ?person a dbo:NobelPrize laureate .
  ?person dbo:field ""Physics"" .
  ?person dbo:awardedBy dbr:Royal_Swedish_Academy_of_Sciences .
  OPTIONAL { ?person dbp:award ?award . }
  OPTIONAL { ?show dbo:prizesAwarded ?award . }
}
LIMIT 10
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,1,train,Give me the residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doug Beattie""@en .
  OPTIONAL { ?person dbp:residence ?residence . }
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
143,17,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musicalArtist WHERE {
  # Find the person with birth name Cynthia Morgan
  ?person dbp:birthName ""Cynthia Morgan"" .
  
  # Find the actor known as The Campus Queen
  ?actor foaf:name ""The Campus Queen""@en .

  # Ensure they are the same person
  FILTER(?person = ?actor)

  # Retrieve associated musical artist
  ?actor dbo:associatedMusicalArtist ?musicalArtist .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
80,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:aliasName ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
80,18,train,Give me the actor of Shelby Oaks and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film1 dbo:starring ?actor .
  ?film2 dbo:starring ?actor .
  
  FILTER (?film1 = dbr:Shelby_Oaks OR ?film1 = dbr:ATL) .
  FILTER (?film2 = dbr:Shelby_Oaks OR ?film2 = dbr:ATL) .

  FILTER(?film1 != ?film2)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,51,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Find Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello"" ;
             dbo:spouse ?spouse .

  # Identify children of the spouse
  ?child dbo:parent ?spouse .
  
  # Find parents of these children (which includes Mariclare and her spouse)
  ?child dbo:parent ?parent .

  # Ensure one parent is a professional photographer
  OPTIONAL { 
    ?parent dbo:occupation dbr:Photographer .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
347,47,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria
  ?archduke a dbo:Person ;
            foaf:name ""Archduke Charles Joseph of Austria""@en ;
            dbp:childOf ?parent .

  # Step 2: Find his parent
  ?parent a dbo:Person ;
          foaf:name ?parentName .

  # Step 3: Identify the child of that parent (could be Archduke himself or another sibling)
  ?parent dbp:child ?child .

  # Step 4: Determine the father of this child (grandparent of Archduke Charles Joseph)
  ?parent dbo:spouse ?spouse .
  ?spouse a dbo:Person ;
          foaf:name ?spouseName .
  
  OPTIONAL {
    ?spouse dbo:role ?role .
    FILTER (?role IN (""Commander"", ""Societal Event"", ""Event"", ""Television Show""))
  }

  # Step 5: Link to commander in war and societal events
  ?spouse dbo:memberOf ?regiment ;
          dbp:memberOfMilitaryUnit dbr:2nd_Dragoon_Regiment_(France) .
  
  OPTIONAL {
    ?spouse dbo:role ?eventRole .
    FILTER (?eventRole IN (""Societal Event"", ""Event"", ""Television Show""))
  }

  # Return the grandparent
  BIND(?spouse AS ?grandparent)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,14,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty .
  ?party dbp:name ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:headOfGovernment ?leader .
  ?administration dbo:country dbr:Spain .

  OPTIONAL { ?leader dbo:nationality dbr:Spain . }
}
ORDER BY ?leader
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,100,0,0.0,0
468,7,train,Give me the reference to the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Peter_IV_of_Aragon a dbo:Person .
  OPTIONAL { dbr:Peter_IV_of_Aragon dbp:birthName ?birthName . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
151,1,train,Give me the reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resource WHERE {
  ?resource a dbo:Award .
  ?resource foaf:name ""Order of the Medjidie""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
731,5,train,Who is the commander in Sinking of Prince of Wales and Repulse?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:location dbr:Sinking_of_the_Prince_of_Wales_and_Repulse .
  ?event dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
198,31,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?awardShow a dbo:Award .
  ?awardShow dbo:awardee ?person .
  ?awardShow dbo:organizer dbr:United_States_Congress .

  ?force dbo:commander dbr:Quincy_Adams_Gillmore .
  ?person dbo:militaryForce ?force .

  ?war dbo:participatingMilitaryUnit ?force .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
347,48,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
  
  # The child who is a commander in the war
  ?father dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") || CONTAINS(LCASE(?occupation), ""military""))

  # Link to societal events, events, and television shows related to the Algerian War
  OPTIONAL { ?event dbo:relatedEvent dbr:Algerian_War . }
  OPTIONAL { ?show dbo:genre dbp:Societal_event . }
  
  ?child dbo:relatedTo ?event .
  ?child dbo:appearedIn ?show .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
782,49,train,"Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Nick Curran"" .
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,18,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?elvira a dbo:Person ;
          dbo:spouse ?rogerII ;
          dbo:child ?child .
  
  ?rogerII a dbo:Person ;
           rdfs:label ""Roger II of Sicily""@en ;
           dbo:child ?child .

  ?williamII a dbo:Person ;
             rdfs:label ""William II of Sicily""@en ;
             dbo:parent ?child .

  FILTER(CONTAINS(LCASE(?elvira), ""elvira of castile""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
943,41,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?baedaMaryamI ?yeshaqI WHERE {
  # Baeda Maryam I and his father Yeshaq I
  dbr:Baeda_Maryam_I dbo:father dbr:Yeshaq_I .
  
  # Yeshaq I is royalty
  dbr:Yeshaq_I a dbo:Monarch .

  # Reference to Lamont Cranston as an alter ego of The Shadow
  OPTIONAL { 
    ?shadow dbo:alterEgo dbr:Lamont_Cranston .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
198,48,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?awardAwardee WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:nationality dbr:United_States ;
                       dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Find an award related to war given by U.S. Congress
  ?award a dbo:Award ;
         dbp:awardedBy dbr:United_States_Congress ;
         dbp:relatedToWar true .
  
  # Identify the awardee of that award
  ?award dbp:recipient ?awardAwardee .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
39,17,train,"Who is the person born, that is a musical artist, as the birth name of Bob Thompson (musician)?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Bob Thompson"" .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
293,5,train,"Give me the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film WHERE {
  ?person a dbo:FilmProducer .
  ?person foaf:name ""Nat Levine"" .
  ?film dbo:producer ?person .
}
```",1,2,2,1,1,3,3,71,0,0,96,0,0.0,0
384,3,train,"Give me the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolder true .
  ?person foaf:name ""Bruno Daniel Marie Paul Retailleau"" .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
293,37,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Find actors in those films
  ?film dbo:starring ?actor .

  # Match the actor with birth name Harriette Arlene Lake (Harriet Hilliard)
  ?actor dbp:birthName ""Harriette Arlene Lake""@en .
  
  # Retrieve spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
293,58,train,"Give me the party member of Republican Party (United States) and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Find the actor of ""1,000 Dollars a Minute""
  ?actor dbo:film dbr:_1000_Dollars_a_Minute .
  
  # Step 2: Find the birth name of Tisha Sterling's parent
  ?parent dbo:child dbr:Tisha_Sterling ;
          dbp:birthName ?birthName .

  # Step 3: Find the party member who is a spouse of the actor and was born with the birth name from step 2
  ?partyMember dbo:spouse ?actor ;
               dbo:politicalParty dbr:Republican_Party_(United_States) ;
               dbp:birthName ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
628,44,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of Uncle Murda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeRegion WHERE {
  # Find the person with the birth name Ackquille Jean Pollard who is a band member of Uncle Murda
  ?person dbo:birthName ""Ackquille Jean Pollard""@en .
  ?person dbo:musicGroup dbr:Uncle_Murda .

  # Identify an award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:recipient ?person .
  ?award dbo:relatedWork dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .

  # Determine the native region of this person that is a state and settlement in America
  ?person dbo:nativePlace ?nativeRegion .
  ?nativeRegion a dbo:State ;
               a dbo:Settlement ;
               dbo:country dbr:United_States_of_America .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
905,1,train,Give me the parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Charles_Martel_of_Anjou dbo:childOf ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
347,50,train,Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?ceciliaRenata dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?leopoldWilliam dbo:parent ?father .
  ?leopoldWilliam a dbo:Person .
  ?father a dbo:Person .
  ?father dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  FILTER(?child = ?father)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
905,39,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of Charles Martel of Anjou.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?belaIV a dbo:Person ;
          dbo:spouse ?spouseBelaIV .
  
  ?andrewIII dbo:parent ?belaIV ;
            dbo:child ?charlesI .

  ?charlesI dbo:parent ?andrewIII ;
           a dbo:Monarch ;
           dbo:child ?descendant .

  ?descendant rdfs:label ""Charles Martel of Anjou""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
39,35,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Robert Lamar Thompson""@en .
  ?person foaf:name ""Sam Concepcion""@en .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
668,5,train,"Who is the writer, that is a musical artist, of The Live Anthology?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?album a dbo:Album .
  ?album dbp:title ""The Live Anthology"" .
  ?album dbo:composer ?artist .
  ?artist a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,0,0,19,0,0.0,0
68,10,train,"Give me the child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?event a dbo:Event .
  ?event dbo:location dbr:Siege_of_Padua .

  ?person dbo:role ?role .
  ?role dbo:event ?event .
  ?role dbo:position ""Commander""^^xsd:string .

  ?person dbp:hasChild ?child .
  
  ?child a dbo:Monarch .
}
ORDER BY ?child
LIMIT 10
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
68,2,train,"Give me the father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Catherine_of_Austria_Queen_of_Portugal dbo:parent ?person .
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  ?person dbo:spouse ?catherine .
  FILTER(?catherine = dbr:Catherine_of_Austria_Queen_of_Portugal) .
  ?person dbo:child ?catherine .
  BIND(?person AS ?father)
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
375,13,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity ?warEntity WHERE {
  # Yamaza Enjirō's birthplace
  OPTIONAL { 
    dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceEntity .
    FILTER(LANG(?birthPlaceEntity) = ""en"")
  }
  
  # Toyotomi Hidenaga's associated war
  OPTIONAL {
    dbr:Toyotomi_Hidenaga dbo:associatedWith ?war .
    ?war rdfs:label ?warEntity .
    FILTER(LANG(?warEntity) = ""en"")
  }
}
```",3,3,4,2,2,2,3,28,0,2,3,0.0,0.0,0
295,8,train,Give me the native of the birth place of Victor Saville.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  dbr:Victor_Saville dbo:birthPlace ?birthPlace .
  
  ?native a dbo:Person ;
          dbo:birthPlace ?birthPlace .
}
LIMIT 10
```",2,2,3,2,1,3,2,20,10,0,1521,1.0,0.006531678641410843,0.012978585334198572
263,24,train,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Hon. Mary Frances Bowes-Lyon
  ?mary a dbo:Person ;
        dbp:birthName ""Hon. Mary Frances Bowes-Lyon"" ;
        dbo:childOf ?parent .

  # Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?claude a dbo:Person ;
          dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne ;
          dbo:childOf ?parent .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,29,train,Give me the person born as the birth name of Bobby Shmurda and band member of Uncle Murda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Resource for Bobby Shmurda
  dbr:Bobby_Shmurda a dbo:MusicalArtist .
  
  # Check birth name
  OPTIONAL { dbr:Bobby_Shmurda dbp:birthName ?birthName . }
  
  # Check if he is native to Florida
  OPTIONAL { dbr:Bobby_Shmurda dbo:birthPlace dbr:Florida . }

  # Check association with Uncle Murda band
  OPTIONAL {
    ?band a dbo:Band .
    ?band dbp:member dbr:Bobby_Shmurda .
    ?band foaf:name ""Uncle Murda""@en .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
756,15,train,"Give me the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Identify VfL Bochum as a soccer club and sports organization
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 dbo:sportsTeamInLeague ?league .

  # Find the season for 2006–07 and its successor
  ?season1 dbp:team dbr:VfL_Bochum ;
           dbp:year ""2006""^^xsd:gYear ;
           dbp:endYear ""2007""^^xsd:gYear .
  
  ?successorSeason a dbo:FootballLeagueSeason ;
                   dbp:predecessor ?season1 ;
                   dbp:team dbr:VfL_Bochum .

  # Find players in the successor season
  ?player dbo:playsForTeam ?successorSeason .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
492,12,train,Give me the death place of Reed Howes and death place of Carolyn Jones and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Reed_Howes 
    dbr:Carolyn_Jones 
    dbr:Sal_Mineo
  }
  ?person dbo:deathPlace ?deathPlace .
}
```",3,3,4,1,3,2,3,28,1,3,0,0.25,1.0,0.4
756,12,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerTeam .
  ?team dbp:season ""2020–21"" .
  ?team dbp:manager ?manager .

  ?manager dbo:nationality dbr:West_Germany .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
723,7,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Identify the album ""Nothing to Gein""
  ?album a dbo:Album ;
         rdfs:label ""Nothing to Gein""@en .

  # Find the producer of this album
  ?album dbo:producer ?producer .

  # Ensure the producer is an organization and a group
  ?producer a dbo:Organization, dbo:MusicalGroup .

  # Get band members associated with this producer
  ?bandMember dbo:memberOf ?producer .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
668,14,train,Give me the person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Joey_B a dbo:MusicalArtist .
  OPTIONAL { dbr:Joey_B dbp:birthName ?birthName . }
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
871,56,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person dbo:almaMater dbr:Eton_College .
  
  ?child1 dbo:parent ?person ;
          a dbo:Politician .

  ?child2 dbo:parent ?person ;
          dbp:honours ""Commander of the Royal Victorian Order""@en .

  ?child3 dbo:parent ?person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  
  ?father dbo:child ?child1 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,6,train,"Give me the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  dbr:Bill_Clinton dbo:author ?work .
  ?work a dbo:Book .
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
595,50,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Politician ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:officeHolderOf ?office .
  
  ?war a dbo:MilitaryConflict ;
       dbo:nationInvolved dbr:United_States_Navy .

  ?person dbo:commanderInWar ?war .

  ?work a dbo:Book, dbo:WrittenWork ;
        dbo:author ?person .
        
  ?person foaf:name ?author .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
225,17,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInJapan ?birthPlace WHERE {
  ?award a dbo:Award .
  ?award dbp:name ""Anita Borg Institute Women of Vision Awards""@en .

  ?recipient dbo:recipientOf ?award .
  ?recipient dbo:nationality dbr:Japan .

  ?reference dbo:subject ?recipient .
  ?reference a dbo:TelevisionShow .

  ?recipient dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Japan .

  OPTIONAL { ?entityInJapan dbo:location ?birthPlace . }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
706,8,train,Give me the birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Manna Dey"" .
  ?person dbo:film dbr:Akaler_Shandhaney .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,10,0,0.0,0
742,8,train,Give me the birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:residence dbr:Sofia .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
ORDER BY ?person
LIMIT 10
```",2,2,3,2,1,3,2,20,5,7,9,0.4166666666666667,0.35714285714285715,0.3846153846153846
609,29,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Birth place of Cece Bell
  { 
    dbr:Cecil_Alice_Bell a dbo:Writer .
    dbr:Cecil_Alice_Bell dbo:birthPlace ?birthPlace1 .
    BIND(dbr:Cecil_Alice_Bell AS ?person)
  }
  
  UNION
  
  # Birth place of the governor of Virginia
  { 
    ?governor a dbo:Politician ;
              dbo:governmentRole dbr:Governor_of_Virginia ;
              dbo:birthPlace ?birthPlace2 .
    BIND(?governor AS ?person)
  }
  
  UNION
  
  # Birth place of Vince Gilligan
  { 
    dbr:Vince_Gilligan a dbo:Writer ;
                       dbo:birthPlace ?birthPlace3 .
    BIND(dbr:Vince_Gilligan AS ?person)
  }

}
ORDER BY ?person
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
905,31,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Charles Martel of Anjou
  ?charles a dbo:Person ;
           foaf:name ""Charles Martel of Anjou""@en .
  
  # Step 2: Find his parent (father)
  ?parent dbo:child ?charles ;
          rdf:type dbo:Person .

  # Step 3: Determine the spouse of this parent
  ?spouse dbo:spouse ?parent ;
          rdf:type dbo:Person .

  # Step 4: Ensure that this spouse is a royalty
  ?spouse dbo:royaltyTitle ?title .

  # Step 5: Connect to Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  ?parent2 dbo:child ?philip ;
           rdf:type dbo:Person .

  FILTER(?parent = ?parent2)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,20,train,Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?person dbo:award dbr:Gillmore_Medal .
  ?war dbo:commander dbr:Amasa_Tracy .
  ?person dbo:servedIn ?force .
  ?force dbo:partOf ?war .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
756,8,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse . 
  }
  
  ?coachRole a dbo:Coach ;
             dbo:agent ?person ;
             dbo:worksFor ?team .

  ?team a dbo:SoccerClub ;
        dbo:sport dbr:Soccer .
}",1,4,2,1,1,3,3,71,0,0,5,0,0.0,0
816,50,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Eugène Cattin's parent
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  OPTIONAL { ?eugeneCattin dbo:profession ?profession . }
  ?eugeneParent dbo:child ?eugeneCattin .

  # Allan Arbus's child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  ?arbusChild dbo:parent ?allanArbus .
  
  # Find the common parent
  ?commonParent dbo:child ?eugeneCattin, ?arbusChild .

  FILTER(?eugeneParent = ?commonParent)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
353,44,train,"Give me the child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Roger II of Sicily's children
  ?roger2 a dbo:Person ;
          dbp:spouse ?spouse1, ?spouse2 ;
          dbp:child ?child1 .
  
  # Alfonso VI's grandchild
  ?alfonso6 a dbo:Person ;
            dbp:child ?childAlf ;
            ?childAlf dbp:child ?grandChildAlf .

  # William I of Sicily's royal child
  ?william1 a dbo:Person ;
            dbp:spouse ?spouse3 ;
            dbp:child ?royalChild .
  
  # Find the common individual
  FILTER (?child1 = ?grandChildAlf)
  FILTER (?grandChildAlf = ?royalChild)

  BIND(?child1 AS ?individual)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
492,14,train,Give me the death place of Reed Howes and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Reed Howes""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?actorDeathPlace WHERE {
  ?film a dbo:Film ;
        foaf:name ""Color Me Dead""@en .
  ?film dbo:starring ?actor .
  ?actor a dbo:Actor ;
         foaf:name ?actorName .
  OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
258,2,train,"Give me the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Luiza Erundina""@en .
  
  ?education dbo:almaMater ?university ;
             dbo:student ?person .

  ?university a dbo:University ;
              a dbo:EducationalOrganization ;
              a dbo:Organisation .
}
LIMIT 10
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
78,10,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?work dbo:writer ?person .
  ?work dbo:title ""Wizards of Waverly Place (soundtrack)""@en .
  ?work dbo:musicalArtist ?associatedArtist .
}
```",2,4,3,2,1,2,3,28,0,0,18,0,0.0,0
347,28,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:SocietalEvent ;
         dbo:relatedEvent ?militaryEvent .
  
  ?militaryEvent dbo:participatingUnit dbr:2nd_Dragoon_Regiment_(France) .

  ?person dbo:childOf dbr:Ferdinand_II,_Holy_Roman_Emperor ;
          dbo:parentOf dbr:Eleonore_of_Austria,_Queen_of_Poland ;
          dbo:commanderInWar ?militaryEvent .
  
  OPTIONAL { ?tvShow a dbo:TelevisionShow ; dbo:relatedEvent ?event . }

  FILTER (?person = ?commander)
}
LIMIT 1
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
595,35,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?disease a dbo:Disease .
  ?societalEvent a dbo:SocietalEvent .
  FILTER(?disease = ?societalEvent) .

  ?war dbo:relatedDiseaseOrSocietalEvent ?disease .
  ?commander dbo:rank ""Commander"" ;
             dbo:militaryBranch dbr:United_States_Navy ;
             dbo:participatedInWar ?war .

  ?author dbp:title ""An Invitation to the White House""@en ;
          a dbo:Politician, dbo:OfficeHolder .
  ?author dbo:spouse ?commander .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
119,58,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantOfResidence ?officeHeldByFeijóo ?tenantOfPSOEAdmin WHERE {
  # Álvaro Quirós' residence country
  ?alvaroQuirós a dbo:Person ;
                foaf:name ""Álvaro Quirós"" .
  ?alvaroQuirós dbp:residenceCountry ?country .
  ?country dbo:populationTotal ?tenantOfResidence .

  # Alberto Núñez Feijóo's office
  ?feijoo a dbo:Politician ;
          foaf:name ""Alberto Núñez Feijóo"" .
  ?feijoo dbp:officeHeld ?officeHeldByFeijóo .

  # Tenant of the administration of PSOE
  dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalParty ;
                                      dbo:headquartersLocation ?location .
  ?location dbo:populationTotal ?tenantOfPSOEAdmin .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,7,train,Who is the awardee of Knight Commander of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:honorificTitle ""Knight Commander of the Order of the Bath""@en .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,899,0,0.0,0
353,12,train,"Give me the father of William II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William II of Sicily
  dbr:William_II_of_Sicily dbo:parent ?father .
  
  # Elvira of Castile, Queen of Sicily
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:child ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,22,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office WHERE {
  ?person a dbo:Politician .
  ?person dbo:party dbr:Conservative_Party_(Spain) .
  OPTIONAL { ?person dbo:residence dbr:Madrid . }
  OPTIONAL { ?person dbp:positionHeld ?office . }
}
ORDER BY ?person
LIMIT 10
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
628,40,train,"Give me the native of Florida and person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Ackquille Jean Pollard"" .
  ?person dbo:birthPlace dbr:Florida .

  # Find the band member relationship
  ?bandMemberRelation dbo:member ?person .
  ?bandMemberRelation dbo:associatedBand ?band .

  # Identify GS9 and its members
  ?gs9Artist a dbo:MusicalArtist ;
             dbo:memberOfGroup ?gs9Group .
  ?gs9Group dbp:name ""GS9"" .

  # Link the band to GS9 artist
  ?bandMemberRelation dbo:associatedBand ?gs9Artist .

}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
293,16,train,"Give me the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film dbo:producer dbr:Nat_Levine .
  ?film dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,201,31,56,0.8663793103448276,0.7821011673151751,0.8220858895705522
295,0,train,Give me the writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?song a dbo:Song .
  ?song foaf:name ""Boom Shack-A-Lak"" .
  ?song dbo:composer ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,7,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne dbo:childOf ?parent .
  ?parent a dbo:Person .
  OPTIONAL { ?parent foaf:name ?parentName . }
  OPTIONAL { ?parent dbp:birthPlace dbr:Middlesex . }
}
ORDER BY ?parentName
LIMIT 10
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
347,61,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Archduke Charles Joseph of Austria's parent
  ?parent a dbo:Person ;
          dbo:child dbr:Archduke_Charles_Joseph_of_Austria .

  # Child of the parent (sibling of Archduke Charles Joseph)
  ?sibling dbo:parent ?parent .

  # Father of the sibling (also father of Archduke Charles Joseph)
  ?father dbo:spouse ?mother ;
          dbo:child ?sibling .

  # Maria Anna of Bavaria's child
  ?bavarianChild dbo:parent dbr:Maria_Anna_of_Bavaria_(1574) .

  # Father of the Bavarian child (also a royalty)
  ?royaltyFather dbo:spouse ?bavarianMother ;
                 dbo:child ?bavarianChild ;
                 a dbo:Royalty .

  # Find commonality in fatherhood
  FILTER(?father = ?royaltyFather)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
628,21,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Identify Bobby Shmurda as a musical artist
  dbr:Bobby_Shmurda a dbo:MusicalArtist .
  
  # Find band members associated with Bobby Shmurda
  ?association dbo:associatedBandMember dbr:Bobby_Shmurda ;
               dbo:associatedBandMember ?bandMember .

  # Ensure these band members are also musical artists
  ?bandMember a dbo:MusicalArtist .

  # Verify they are natives of Florida
  ?bandMember dbo:birthPlace dbr:Florida .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
361,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:aliasName ?alterEgo .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
687,42,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find the person born on 1979-11-03 who is both a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date ;
          a dbo:SoccerPlayer, dbo:SoccerManager .

  # Find teams where this person played as a player or manager
  ?team dbo:player ?person .
  UNION
  ?team dbo:manager ?person .

  # Find the athlete born on 1955-02-22
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date ;
           a dbo:Athlete .

  # Ensure this athlete played in the same team as the person from above
  ?team dbo:player ?athlete .

  # Find teams where Sergio Agüero played
  ?agüeroTeam dbo:player dbr:Sergio_Agüero .

  # Ensure the team is also one where Sergio Agüero played
  FILTER (?team = ?agüeroTeam)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Maria I of Portugal as a person
  dbr:Maria_I_of_Portugal a dbo:Person .

  # Find wars during her reign
  ?war dbo:participatedIn dbr:Maria_I_of_Portugal .
  
  # Check if the war is also a television show
  OPTIONAL { 
    ?tvShow dbo:subject ?war .
    ?tvShow a dbo:TelevisionSeries .
  }
}
```",3,5,4,3,1,3,2,20,0,0,121,0,0.0,0
375,14,train,Give me the war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?war WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Koichirō"" .
  ?person dbo:country dbr:Japan .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?war .
}
ORDER BY ?person
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
58,11,train,Give me the spouse of the person born as Linda Sue Cobb and producer of 12 Strong.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Linda Sue Cobb"" .
  ?film dbo:producer ?person .
  ?film rdfs:label ""12 Strong""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
859,4,train,"Give me the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band foaf:name ""Khlyst"" .
  ?band dbo:member ?member .
  ?member a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
89,13,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Myat Hpone Pyo
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  # Step 2: Find his father who is royalty
  ?father dbo:child ?myatHponePyo ;
          a dbo:RoyalFamilyMember .

  # Step 3: Retrieve the spouse of this royal father
  ?father dbp:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
23,22,train,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country ?party WHERE {
  # Find Daniel Elahi Galán and his country of birth
  ?galan a dbo:Politician ;
         foaf:name ""Daniel Elahi Galán""@en .
  OPTIONAL { ?galan dbo:birthPlace ?place . }
  ?place dbo:countryName ?country .

  # Find Roy Leonardo Barreras Montealegre and his political party
  ?barreras a dbo:Politician ;
            foaf:name ""Roy Leonardo Barreras Montealegre""@en .
  OPTIONAL { ?barreras dbp:party ?party . }
}
```",4,5,5,2,2,2,3,28,0,0,5,0,0.0,0
531,1,train,Give me the office of Mariano Rajoy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  dbr:Mariano_Rajoy dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
39,54,train,"Give me the band of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Bob Thompson (musician)
  { 
    ?person1 foaf:name ""Bob Thompson"" .
    ?person1 dbo:profession dbo:Musician .
    OPTIONAL { ?person1 dbo:musicalBand ?band . }
  }

  UNION

  # Sam Concepcion
  { 
    ?person2 foaf:name ""Sam Concepcion"" .
    ?person2 dbo:profession dbo:Musician .
    OPTIONAL { ?person2 dbo:musicalBand ?band . }
  }

  UNION

  # The Shadow (fictional character by Walter B. Gibson)
  {
    ?character dbo:creator dbr:Walter_B._Gibson .
    ?character foaf:name ""The Shadow"" .
    OPTIONAL { ?character dbo:musicalBand ?band . }
  }
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
80,9,train,Give me the actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES (?film) { (dbr:ATL_(film)) (dbr:Shelby_Oaks) }
  
  ?film dbo:starring ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,22,train,Give me the child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Charles II, Archduke of Inner Austria""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child foaf:name ?name .
  OPTIONAL { ?child dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""commander"")) }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,37,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?name ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
ORDER BY ?name
LIMIT 10
```",4,5,5,3,2,3,3,71,0,14,59,0.0,0.0,0
687,55,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:SoccerPlayer .
  ?actor a dbo:Athlete .
  ?actor dbo:spouseOrPartner ?person1 .
  ?person1 dbo:birthDate ""1955-02-22""^^xsd:date .

  ?actor dbo:spouseOrPartner ?person2 .
  ?person2 dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person2 a dbo:SoccerPlayer .
  ?person2 a dbo:SoccerManager .

  ?actor dbo:appearanceIn dbr:All_or_Nothing:_Manchester_City .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
668,19,train,Give me the professional in Musician and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Elorm Kabu Amenyah"" .
  OPTIONAL { ?person foaf:name ?professionalName . }
  OPTIONAL { ?person dbo:associatedBandOrMusicalArtist ?artistResource . }
  ?artistResource foaf:name ?associatedArtist .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,28,train,Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Producer of A Star Is Born (1937)
  ?aStarIsBorn a dbo:Film .
  ?aStarIsBorn dbp:title ""A Star Is Born"" .
  ?aStarIsBorn dbo:releaseDate ?date1 .
  FILTER(YEAR(?date1) = 1937) .
  ?aStarIsBorn dbo:producer ?person .

  # Producer of The Adventures of Tom Sawyer (1938)
  ?tomSawyer a dbo:Film .
  ?tomSawyer dbp:title ""The Adventures of Tom Sawyer"" .
  ?tomSawyer dbo:releaseDate ?date2 .
  FILTER(YEAR(?date2) = 1938) .
  ?tomSawyer dbo:producer ?person .

  # Alter ego as The Shadow
  OPTIONAL { 
    ?person dbp:alterEgo dbr:The_Shadow .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,37,train,"Give me the team of Pablo Aimar and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team ?actor WHERE {
  # Find Pablo Aimar's team
  ?aimar a dbo:SoccerPlayer ;
         foaf:name ""Pablo Aimar"" ;
         dbo:playsFor ?team .

  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:workExample ?actorFilmRole .
  
  # Ensure the actor is also a soccer player and athlete
  ?actor a dbo:SoccerPlayer, dbo:Athlete ;
         foaf:name ?actorName ;
         dbp:roleIn ?actorFilmRole .

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?position .
  ?position dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
80,17,train,Give me the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  dbr:The_Golden_Master_series dbo:alias ?series .
  ?series dbo:character ?character .
  ?character dbp:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
119,30,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  # Spanish Socialist Workers' Party administration leader
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  OPTIONAL { 
    ?administration dbo:headOfGovernment ?leader ;
                    dbo:politicalParty ?party .
    ?leader foaf:name ?tenant .
  }
  
  # Office held by Alberto Núñez Feijóo
  ?feijoo a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en ;
          dbo:officeHeld ?office .

  OPTIONAL {
    ?office dbo:headOfGovernment ?leader .
    ?leader foaf:name ?tenant .
  }
  
  # Tenant of Spain
  ?country a dbo:Country ;
           rdfs:label ""Spain""@en .
  
  OPTIONAL {
    ?administration dbo:country ?country .
    ?administration dbo:headOfGovernment ?leader .
    ?leader foaf:name ?tenant .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
531,60,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?miguelMaura a dbo:Politician ;
               foaf:name ""Miguel Maura"" .
  
  ?party a dbo:PoliticalParty ;
         dbo:member ?miguelMaura .

  ?electionEvent dbo:electionDate ?date ;
                 dbo:place dbr:Madrid_City_Council_election,_2003 ;
                 dbo:officeHolder ?miguelMaura ;
                 dbo:office ?office .
  
  FILTER(YEAR(?date) = 2003)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
557,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Florida .
  ?person dbo:occupation ?profession .
}
ORDER BY ?profession
LIMIT 10
```",1,1,2,1,1,3,3,71,0,6,39640,0.0,0.0,0
531,0,train,Give me the tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:residence dbr:Madrid .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,20,259,0.0,0.0,0
595,60,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Step 1: Find the owner of USS Arcadia (ID-1605)
  ?arcadia dbo:owner ?owner .

  # Step 2: Find the spouse of this owner who is an author, politician, and office holder
  ?spouse dbo:spouse ?owner ;
          a dbo:Author ;
          a dbo:Politician ;
          a dbo:OfficeHolder .

  # Step 3: Determine the work written by this author
  ?work dbo:author ?spouse ;
        a dbo:Book .

  # Step 4: Find the commander in the war that is both a disease and a societal event
  ?commander dbo:relatedWork ?work ;
             a dbo:Disease ;
             a dbo:SocietalEvent .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
37,3,train,"Who is the work, that is an artist and a musical artist, of Ethan Iverson?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Ethan Iverson""@en .
  OPTIONAL { 
    ?person dbo:occupation ?occupation .
    FILTER (
      CONTAINS(LCASE(?occupation), ""artist"") ||
      CONTAINS(LCASE(?occupation), ""musical artist"")
    )
  }
  ?work dbo:creator ?person .
}
ORDER BY ?work
LIMIT 10
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
782,20,train,Give me the band of the band member of Eric Clapton and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Find band members of Eric Clapton
  ?member dbo:bandMemberOf dbr:Eric_Clapton .
  
  # Check if the member is also associated with The Fabulous Thunderbirds
  ?member dbo:bandMemberOf dbr:The_Fabulous_Thunderbirds .

  # Retrieve the band(s) that this member belongs to
  ?member dbo:bandMemberOf ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,61,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find a person who is an artist from Central Region, Ghana
  ?person dbo:nationality dbr:Ghana .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .

  # Ensure the person is involved in writing and music
  ?person dbo:profession dbr:Writer .
  ?person dbo:occupation dbr:MusicalArtist .

  # Link to ""The Live Anthology""
  ?album dbo:artist ?person .
  ?album rdfs:label ""The Live Anthology""@en .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
38,15,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard and author of Promise Me, Dad.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:officeHolderOf dbr:North_Carolina_Air_National_Guard ;
          dbo:occupation dbo:Politician .
  ?person dbo:work ?writtenWork .
  ?writtenWork a dbo:Book, dbo:WrittenWork ;
               dbp:country ""United States""^^xsd:string .
  ?person foaf:name ?authorName .
  OPTIONAL { ?person dbo:autobiography dbr:Promise_Me,_Dad . }
}
ORDER BY ?authorName
LIMIT 1
```",4,10,5,3,2,3,2,20,0,0,1,0,0.0,0
140,12,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?party WHERE {
  # Find the commander of Pickett's Charge
  ?charge a dbo:MilitaryOperation ;
          dbo:commander ?commander .
  
  FILTER(STRSTARTS(LCASE(?charge), ""picketts_charge""))

  # Check if this person was a member of any political party
  ?commander dbo:memberOfParty ?party .

  # Ensure the political party is an organization and has influence in Westport, Connecticut
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Westport,_Connecticut .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
23,4,train,Give me the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  dbr:Daniel_Elahi_Galán dbo:nationality ?nationality .
  ?nationality dbo:country ?country .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
203,8,train,"Give me the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Robert Calder""@en .
  
  ?event a dbo:Event, dbo:SocietalEvent ;
         dbo:associatedWith ?person .

}
```",1,3,2,1,1,3,3,71,0,0,4,0,0.0,0
119,10,train,"Give me the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v0 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residenceCountry WHERE {
  ?person a dbo:Athlete .
  ?person dbo:nationality dbr:Poland .
  ?person dbo:birthPlace dbr:Łódź .
  OPTIONAL { ?person dbo:residence ?residence . }
  ?residence dbp:countryName ?residenceCountry .
}
ORDER BY ?residenceCountry
LIMIT 10
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
668,48,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  VALUES (?birthName) { (""Tupac Amaru Shakur"" ""Joseph Badamosi Akpobome"") }
  
  ?person dbo:birthName ?birthName .
  ?person a dbo:MusicalArtist .
  ?person foaf:name ?artist .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
585,17,train,Give me the child of the professional in the profession of Shirley Stoler and native of New York (state).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shirley Stoler""@en ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:New_York_(state) .
  
  OPTIONAL { 
    ?person dbp:children ?child .
  }
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
941,4,train,"Who is the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:RoyalFamilyMember .
  ?person dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel .
  ?person dbo:child ?child .
}
```",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
816,55,train,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Allan Arbus and his child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus"" .
  
  ?child dbo:parent ?allanArbus ;
         a dbo:Person .

  # Movie with Herschel Bernardi
  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Herschel_Bernardi .

  # Actor is the child of Allan Arbus
  FILTER(?child = ?actor)

  # Parent of a professional photographer
  ?photographer a dbo:Photographer .
  ?parent dbo:child ?photographer .

  # The actor is also this parent
  FILTER(?parent = ?child)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
159,12,train,Give me the commander in Great Turkish War and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?name WHERE {
  ?war dbo:wikiPageRedirects dbr:Great_Turkish_War .
  ?war dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:commander ?commander .
  ?commander foaf:name ?name .

  OPTIONAL { 
    ?commander dbp:relatedTo dbr:George_Ducas .
  }
}
ORDER BY ?name
LIMIT 10
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,42,train,"Give me the professional in Actor and professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:role ?shadowRole .
  ?shadowRole rdfs:label ""Lamont Cranston""@en .
  ?movie dbo:starring ?actor .
  ?movie dbo:starring dbr:Richard_E._Grant .
  ?tvSeries dbo:basedOn ?movie .
}",5,6,6,2,3,3,3,71,0,0,9,0,0.0,0
78,0,train,Give me the associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person foaf:name ""Stuart Tosh"" .
  ?person dbo:associatedBandOrMusicalArtist ?artist .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
213,17,train,"Give me the birth place of Winston Chang and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?countryOfWork WHERE {
  # Find Winston Chang
  ?winston a dbo:Person ;
           foaf:name ""Winston Chang"" ;
           dbo:birthPlace ?birthPlace .

  # Find Hu Jieqing as spouse and writer
  ?hu a dbo:Writer ;
      foaf:name ""Hu Jieqing"" .
  
  # Ensure Hu Jieqing is Winston's spouse
  ?winston dbo:spouse ?hu .

  # Get the country of work for Hu Jieqing
  ?work dbo:author ?hu ;
        dbo:country ?countryOfWork .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
159,16,train,Give me the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?writer WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""George Ducas"" .
  
  ?work dbo:artist ?person ;
        dbo:composer ?writer .

  OPTIONAL { 
    ?work dbo:lyricist ?writer .
  }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,34,train,Give me the parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find the award associated with Rodney Lees
  ?award dbo:recipient ?awardee .
  ?award dbo:name ?awardName .

  # Assume we know the name of the award or have a way to identify it
  FILTER(CONTAINS(LCASE(?awardName), ""rodney lees""))

  # Find Arthur Stanley, the politician
  dbr:Arthur_Stanley dbp:father ?parent .

  # Ensure the awardee is also the parent of Arthur Stanley
  ?awardee = ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,23,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?deathPlace WHERE {
  # For ""The Sky Ranger"" (1928)
  OPTIONAL {
    ?film a dbo:Film ;
          dbo:title ""The Sky Ranger""@en ;
          dbo:starring ?actor .
    ?actor foaf:name ?actorName ;
           dbp:deathPlace ?deathPlace .
  }
  
  # For ""Aladdin"" (1958)
  OPTIONAL {
    ?film2 a dbo:Film ;
           dbo:title ""Aladdin""@en ;
           dbo:starring ?actor2 .
    ?actor2 foaf:name ?actorName2 ;
            dbp:deathPlace ?deathPlace2 .
    
    BIND(STR(?actorName) AS ?actorName)
    BIND(COALESCE(?deathPlace, ?deathPlace2) AS ?deathPlace)
  }
  
  FILTER (EXISTS { ?film dbo:title ""The Sky Ranger""@en } || EXISTS { ?film2 dbo:title ""Aladdin""@en })
}
ORDER BY ?actorName
LIMIT 10
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
513,4,train,"Give me the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person dbr:George_Savage_(politician) .
  ?person dbo:memberOfParty ?party .
  ?party a dbo:PoliticalParty ;
         dbo:isMemberOfOrganization ?organization .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
816,16,train,Give me the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Identify Eugène Cattin and his profession
  dbr:Eugène_Cattin a ?profession .
  
  # Find other individuals with the same profession
  ?person a ?profession .
  FILTER(?person != dbr:Eugène_Cattin)
}
LIMIT 10
```",2,2,3,2,1,3,3,71,0,10,940,0.0,0.0,0
782,58,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fabulousThunderbirds ?bandMemberOfEricClapton ?associatedArtistOfNickCurran WHERE {
  # Reference to The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
    rdfs:label ""The Fabulous Thunderbirds""@en .

  # Band member of Eric Clapton
  ?bandMemberOfEricClapton dbo:memberOf dbr:Eric_Clapton ;
    a dbo:MusicalArtist .

  # Associated musical artist of Nick Curran
  ?nickCurran dbp:birthName ""Nick Curran""@en ;
    a dbo:MusicalArtist .
  
  ?associatedArtistOfNickCurran dbo:associatedBandMember ?nickCurran ;
    a dbo:MusicalArtist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
384,8,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of Guillaume Peltier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party WHERE {
  VALUES ?name { 
    ""Bruno Daniel Marie Paul Retailleau"" 
    ""Guillaume Peltier""
  }
  
  ?person a dbo:Politician .
  ?person dbo:officeHolder true .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbp:party ?party . }
}
ORDER BY ?name
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
609,16,train,"Who is the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor WHERE {
  # Find Paulus Powell's birthplace
  ?person a dbo:Person ;
          foaf:name ""Paulus Powell"" .
  
  ?person dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is both a region and an administrative region
  ?birthPlace a dbo:Region, dbo:AdministrativeRegion .

  # Find the current governor of that place
  ?governor a dbo:Politician ;
            dbp:governmentRole ""Governor"" ;
            dbo:officeHolderOf ?birthPlace .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
89,19,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Min Hla Htut
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en ;
              dbo:birthPlace dbr:Pyakaung .

  # Step 2: Find Min Hla Htut's parent(s)
  ?parent dbo:child ?minHlaHtut .

  # Step 3: Determine the children of those parents
  ?sawShweKhet dbo:spouse ?spouse ;
              dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,46,train,Give me the band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ericBand ?kimWilsonBand ?kimWilsonBirthName WHERE {
  # Find bands associated with Eric Clapton
  ?clapton a dbo:MusicalArtist ;
           foaf:name ""Eric Clapton"" .
  ?clapton dbo:bandMemberOf ?ericBand .

  # Find the band of Kim Wilson and his birth name
  ?wilson a dbo:MusicalArtist ;
          foaf:name ""Kim Wilson"" .
  ?wilson dbo:bandMemberOf ?kimWilsonBand .
  OPTIONAL { ?wilson dbp:birthName ?kimWilsonBirthName . }
}
LIMIT 10
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
737,40,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Predecessor of this child
  ?predecessor dbo:succeededBy ?albrechtChild .

  # Spouse of Archduchess Helena of Austria
  ?spouse dbp:spouse dbr:Archduchess_Helena_of_Austria .
  
  # Child of the spouse who is royalty and also a child of Archduchess Margarete Sophie of Austria
  ?royaltyChild dbo:parent ?spouse ;
                dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria ;
                a dbo:Royalty .

  # Ensure the predecessor is related to this royalty child
  ?predecessor dbo:succeededBy ?royaltyChild .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
609,28,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
347,19,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?war a dbo:SocietalEvent ;
      dbo:participatingOrganisation dbr:2nd_Dragoon_Regiment_(France) .
  
  ?person dbo:spouse ?eleonore .
  ?eleonore dbp:name ""Eleonore of Austria"" ;
           rdf:type dbo:Queen ;
           dbo:country dbr:Poland .

  ?person dbo:child ?eleonore .
  ?person dbo:commanderOf ?war .
  
  BIND(?person AS ?commander)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
492,1,train,Give me the death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  dbr:Caryn_Jones dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,32,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Ferdinand III and his child
  ?child dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # The father of the child (Ferdinand III)
  ?father dbo:child ?child .
  
  # Link to societal event, event, and television show related to 2nd Dragoon Regiment
  OPTIONAL { ?person dbo:relatedEvent dbr:Societal_Event . }
  OPTIONAL { ?person dbo:relatedEvent dbr:Event . }
  OPTIONAL { ?person dbo:relatedTVShow dbr:Television_Show . }
  
  # Assuming the person is related to the 2nd Dragoon Regiment
  ?person dbo:militaryUnit dbr:2nd_Dragoon_Regiment_(France) .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
816,61,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?profession .

  # Step 2: Find individuals in the same profession
  ?person dbo:profession ?profession .
  
  # Step 3: Determine Mariclare Costello's spouse and their child
  dbr:Mariclare_Costello dbp:spouse ?spouse .
  ?spouse dbo:child ?child .

  # Step 4: Find the parent of that child (which could be the spouse or another parent)
  ?child dbo:parent ?parent .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
213,2,train,Who is the person decedent at Taipei?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Taipei .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,10,2,210,0.8333333333333334,0.045454545454545456,0.08620689655172414
80,53,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find the author of ""Smartbomb""
  ?smartbombAuthor dbo:authorOfBook dbr:Smartbomb .
  
  # Find the professional in The Shadow
  ?shadowProfessional dbo:alterEgo dbr:The_Shadow .

  # Find the actor of ""ATL""
  ?atlActor dbo:actorInFilm dbr:ATL .

  # Find a movie that includes all three individuals
  ?movie dbo:starring ?commonActor .
  
  FILTER (?commonActor = ?smartbombAuthor || ?commonActor = ?shadowProfessional || ?commonActor = ?atlActor)
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
293,29,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake and party member of Republican Party (United States).","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Actor .
  ?person dbo:title ""1,000 Dollars a Minute""@en .
  ?person dbp:birthName ""Harriette Arlene Lake"" .
  ?person dbo:party dbr:Republican_Party_(United_States) .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,6,train,Give me the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:name ""Gillmore Medal"" .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,24,train,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Find the person associated with ""The Shadow"" alter ego
  OPTIONAL { 
    ?shadowCharacter dbo:alterEgoOf ?person .
    ?shadowCharacter rdfs:label ""The Shadow""@en .
  }
  
  # Find the person who acted in the album ""Lasso the Moon""
  OPTIONAL {
    ?album dbo:actor ?person .
    ?album rdfs:label ""Lasso the Moon""@en .
  }

  FILTER(?shadowCharacter || ?album)
}
LIMIT 10
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
905,33,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfCharlesII WHERE {
  # Step 1: Find Charles II of Naples' spouse
  ?charlesII a dbo:Monarch ;
             dbp:country ""Naples"" ;
             dbp:spouse ?spouse .

  # Step 2: Identify the parent of that spouse's father
  ?spouse dbp:father ?father .
  ?father dbp:motherOrFather ?parentOfFather .

  # Ensure the person is royalty
  ?parentOfFather a dbo:Monarch .

  # Step 3: Find Maria of Bytom's spouse
  ?maria dbr:Maria_of_Bytom ;
         dbp:spouse ?spouseMaria .

  # Step 4: Identify the spouse of Maria of Bytom's spouse
  ?spouseMaria dbp:spouse ?finalSpouse .

  # Ensure the final person is royalty
  ?finalSpouse a dbo:Monarch .

  # Match the two people found in steps 2 and 4
  FILTER (?parentOfFather = ?finalSpouse)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
140,5,train,"Give me the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty .
  ?party a dbo:Organization .
  ?party dbo:location dbr:Westport,_Connecticut .
  OPTIONAL { ?party dbo:governmentRole ""ruling"" . }
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,40,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artistName ?bandName ?birthName WHERE {
  # For Kim Wilson and his band
  VALUES (?person) { dbr:Kim_Wilson }
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?band foaf:name ?bandName .
  }

  OPTIONAL { 
    ?person dbp:birthName ?birthName .
  }

  # For Nick Curran and his band
  VALUES (?curran) { dbr:Nick_Curran }
  
  OPTIONAL {
    ?curran dbo:memberOfBand ?curranBand .
    ?curranBand foaf:name ?curbandName .
  }

  OPTIONAL {
    ?curran dbp:birthName ?curranBirthName .
  }

  # Bind names for clarity
  BIND(?person AS ?artist1)
  BIND(?curran AS ?artist2)

  BIND(COALESCE(?birthName, ""Unknown"") AS ?kimWilsonBirthName)
  BIND(COALESCE(?curranBirthName, ""Unknown"") AS ?nickCurranBirthName)

  # Return results
  VALUES (?artistName) { (""Kim Wilson""^^xsd:string) (""Nick Curran""^^xsd:string) }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
687,9,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teammate WHERE {
  ?team a dbo:SoccerTeam .
  ?team dbo:player dbr:Juan_Carlos_Molina_(footballer) .
  ?team dbo:player ?teammate .
  FILTER(?teammate != dbr:Juan_Carlos_Molina_(footballer))
}
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teammate WHERE {
  ?team a dbo:SoccerTeam .
  ?team dbo:player dbr:Sergio_Ag%C3%BCero .
  ?team dbo:player ?teammate .
  FILTER(?teammate != dbr:Sergio_Ag%C3%BCero)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,29,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of Rod Argent and associated musical artist of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person foaf:name ""Rod Argent"" .
  ?person dbo:associatedBand dbr:The_Zombies .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
23,13,train,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity ?party WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Roy Leonardo Barreras Montealegre"" .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceEntity ;
             rdf:type dbo:AdministrativeRegion ;
             dbo:country dbr:Colombia .
  OPTIONAL { ?person dbp:party ?party . }
}
```",3,4,4,2,2,2,3,28,0,0,5,0,0.0,0
737,22,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Archduke Charles Louis of Austria and his children
  dbr:Archduke_Charles_Louis_of_Austria dbo:spouse ?parent2 .
  
  # Children of Archduke Charles Louis (children of the parent)
  ?parent1 dbo:spouse ?parent2 .
  ?child dbo:parent ?parent1 ;
         dbo:parent ?parent2 .

  # Grandchildren of Archduke Charles Louis
  ?grandchild dbo:parent ?child .

  # The grandchild must be royalty
  ?grandchild a dbo:Monarch .

  # Predecessor relationship to Carl, Duke of Württemberg
  ?predecessor dbp:successor dbr:C._Duke_of_Württemberg .
  FILTER (?grandchild = ?predecessor)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,43,train,"Give me the entity in Charleston, South Carolina and war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find Amasa Tracy and his involvement in a war
  ?tracy a dbo:MilitaryPerson ;
         foaf:name ""Amasa Tracy"" ;
         dbo:servedIn ?war .

  # Find Quincy Adams Gillmore and the award he received
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore"" ;
            dbo:receivedAward dbr:Medal_of_Honor ;
            dbo:participatedInAttack ?attack .

  # Connect the attack to Charleston, South Carolina
  ?attack dbo:location dbr:Charleston,_South_Carolina ;

          # Find the force involved in the attack
          dbo:involvedForce ?force .

  # Ensure the war context is the American Civil War
  ?war foaf:name ""American Civil War"" .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
816,48,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Allan Arbus and his child
  dbr:Allan_Arbus dbo:child ?child .
  
  # Decedent who lived in Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles_County,_California ;
           dbo:spouse|dbo:partner ?parent .

  # The parent of the decedent is Allan Arbus's child
  ?parent dbp:child ?child .
  
  # Decedent was an actor in a movie
  ?decedent dbo:actorIn ?movie .
  
  # Find the actor associated with this movie
  ?movie dbo:starring ?actor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
87,2,train,Give me the actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Always_(1989_film) dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
288,8,train,Give me the theme of the show with Anumta Qureshi and native of Lahore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?v2 <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show ?theme WHERE {
  # Find Anumta Qureshi and her associated shows
  ?anumta a dbo:Person ;
          foaf:name ""Anumta Qureshi"" ;
          dbo:memberOf ?show .

  # Find a native of Lahore and their associated shows
  ?lahoreNative a dbo:Person ;
                dbo:birthPlace dbr:Lahore ;
                dbo:memberOf ?show .

  # Ensure the show is common to both Anumta Qureshi and the native of Lahore
  FILTER (?anumta != ?lahoreNative)

  # Get the theme of the show
  ?show dbp:theme ?theme .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
258,0,train,Give me the establishment of 1955-12-02.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:foundingDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 12 && DAY(?date) = 02)
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
386,9,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?person { 
    dbr:Karl_Gustav_von_Baggovut 
    dbr:Alexander_Lvovich_Davydov 
  }
  
  ?person dbo:participatedInWar ?war .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
557,49,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Step 1: Identify The Shadow's creator
  ?person a dbo:Writer ;
          foaf:name ""Walter B. Gibson"" .

  # Step 2: Find professional roles, focusing on producer
  OPTIONAL { ?person dbo:profession dbr:Film_producer . }

  # Step 3: Identify the actor of High Society Blues and related works
  ?actor a dbo:Actor ;
         foaf:name ?actorName ;
         dbp:actedIn dbr:High_Society_Blues .

  # Find works produced by the professional associated with The Shadow
  OPTIONAL { ?professional dbo:producedWork ?work .
             ?work dbo:actor ?actor . }

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,1,train,Give me the band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?markEitzel a dbo:MusicalArtist ;
              foaf:name ""Mark Eitzel""@en .
  
  ?collaboration dbo:artist ?markEitzel ;
                 dbo:member ?bandMember .

  ?bandMember a dbo:MusicalArtist .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
353,33,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?reference a dbo:Monarch ;
             dbo:spouse|dbo:childOf+ dbr:William_I_of_Sicily ;
             dbo:childOf dbr:Roger_II_of_Sicily .
  
  ?child dbo:parent ?reference ;
         a dbo:Monarch .

  ?father dbo:child ?child .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
361,18,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?album a dbo:Album .
  ?album dbo:title ""Lasso the Moon"" .
  ?film a dbo:Film .
  ?film dbo:title ""Lasso the Moon"" .
  ?work a dbo:CreativeWork .
  ?work dbo:title ""Lasso the Moon"" .

  # Ensure it's both an album and a film
  FILTER (?album = ?film)

  # Find actors associated with this work/film/album
  ?film dbo:actor ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
375,10,train,"Give me the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace ?place .
  ?place dbo:country dbr:England .
  ?place a dbo:Settlement .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?artist
LIMIT 10
```",2,6,3,2,1,3,2,20,0,0,659,0,0.0,0
595,40,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Hillary Clinton
  ?hillary a dbo:Person ;
           foaf:name ""Hillary Clinton"" ;
           dbo:authorOf dbr:Back_to_Work_(book) ;
           dbo:officeHolder dbr:Third_Taiwan_Strait_Crisis .

  # Find her spouse who is an author, politician, and office holder
  ?hillary dbo:spouse ?spouse .
  ?spouse a dbo:Person ;
          dbo:authorOf ?work ;
          dbo:politician true ;
          dbo:officeHolder ?office .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
80,27,train,Give me the professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?series a dbo:TelevisionSeries .
  ?series dbp:title ""The Golden Master""@en .
  ?character dbo:partOf ?series .
  ?character dbo:profession ?professional .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
871,44,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?child a dbo:Politician .
  ?child dbo:parent dbr:Fredrick_Stanley_16th_Earl_of_Derby .
  ?child dbo:parentOf dbr:Victor_Stanley_(Royal_Navy_officer) .
  ?child dbo:parent ?father .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,43,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in Great Turkish War.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?person a dbo:Person .
  ?person dbo:successorOf dbr:Yurii_Khmelnytsky .
  ?person dbo:commanderInWar dbr:Great_Turkish_War .
  ?work dbo:author ?person .
  ?work dbo:title ""George Ducas"" .

  OPTIONAL { ?person dbp:name ?writer . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
737,21,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  ?child dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Find the child of Philipp Albrecht, Duke of Württemberg
  ?grandChild dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Identify the predecessor relationship
  ?child dbo:predecessor ?individual .
  ?individual dbo:successor ?grandChild .
  
  # Ensure the individual is the same in both relationships
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,59,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  # Find the leader of the 2003 Madrid City Council election
  ?person1 a dbo:OfficeHolder ;
           dbo:office dbr:Mayor_of_Madrid ;
           dbo:electedDuring dbr:Madrid_City_Council_election,_2003 .

  # Find any military conflict involving Manuel Pinto da Costa
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?person2 .
  
  # Ensure the commander is also an office holder and politician
  ?person2 a dbo:OfficeHolder, dbo:Politician ;
           dbo:office ?office .

  # Link the leader of Madrid to the commander in the conflict
  FILTER(?person1 = ?person2)

  # Find the residence associated with this person
  ?residence dbo:resident ?person1 .
  
  # Determine the tenant of that residence
  ?residence dbp:tenant ?tenant .
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
531,36,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?leader ?officeInMadrid WHERE {
  # Find Miguel Maura and his associated political party
  dbr:Miguel_Maura dbo:memberOfParty ?party .
  
  # Get the leader of that political party
  ?party dbo:leader ?leader .

  # Find the office or position held by this leader in Madrid
  OPTIONAL { 
    ?leader dbo:office ?officeInMadrid .
    FILTER(CONTAINS(LCASE(STR(?officeInMadrid)), ""madrid""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,32,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?philipI a dbo:Person ;
           dbp:father ?charlesII ;
           rdfs:label ""Philip I, Prince of Taranto""@en .
  
  ?charlesII a dbo:Person ;
             dbp:mother ?mariaArpad ;
             rdfs:label ""Charles II of Anjou""@en .

  ?mariaArpad a dbo:Person ;
              dbp:spouse ?stephenV ;
              rdfs:label ""Maria Arpad of Hungary""@en .
  
  ?stephenV a dbo:Person ;
            rdfs:label ""Stephen V of Hungary""@en .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
871,40,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  
  OPTIONAL { 
    ?person dbo:child dbr:Arthur_Stanley_(politician) .
  }
  
  ?person dbo:father ?parent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
89,4,train,Give me the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Min Hla Htut""@en .
  OPTIONAL { ?person dbo:birthPlace dbr:Pyakaung . }
  
  # Assuming there is a property for parent, which might not be available
  OPTIONAL { ?person dbp:parent ?parent . }

  FILTER (lang(?name) = ""en"")
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,38,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary and his children
  dbr:Béla_IV_of_Hungary dbo:spouse ?spouse .
  ?parent (dbo:spouse|dbo:child) dbr:Béla_IV_of_Hungary .

  # Child of Béla IV who is royalty
  ?child dbo:childOf ?parent ;
         a dbo:Monarch .

  # Grandchild of Béla IV who is royalty
  ?grandchild dbo:childOf ?child ;
              a dbo:Monarch .

  # Parent of Charles I's father
  dbr:Charles_I_of_Hungary dbo:father ?charlesFather .
  ?grandchild dbo:parent ?charlesFather .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
293,32,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the ruling party in Central, Louisiana
  ?central a dbo:Place ;
           dbo:country dbr:United_States ;
           dbo:stateOrProvince dbr:Louisiana ;
           dbo:partOf dbr:Central_Louisiana .
  
  ?rulingParty dbo:location ?central ;
               dbo:member ?partyMember .

  # Find the actor from ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute"" ;
         dbo:actor ?actor .

  # Find the spouse of the actor
  ?actor dbp:spouse ?spouse .

  # Check if the party member is connected to the spouse
  ?partyMember foaf:name ?name .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
782,38,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMemberName ?bandName ?associatedArtistName WHERE {
  # Find Eric Clapton's band members
  ?clapton a dbo:MusicalArtist ;
           foaf:name ""Eric Clapton"" ;
           dbo:memberOfBand ?band .
  
  ?bandMember a dbo:MusicalArtist ;
              dbo:memberOfBand ?band ;
              foaf:name ?bandMemberName .

  # Find Nicholas Michael Curran's associated musical artist
  ?curran a dbo:MusicalArtist ;
          foaf:name ""Nicki Minaj"" ;  # Nicki Minaj is the stage name of Nicholas Michael Curran
          dbp:birthPlace dbr:Florida .
  
  OPTIONAL {
    ?curran dbo:associatedMusicalArtist ?associatedArtist .
    ?associatedArtist foaf:name ?associatedArtistName .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
159,47,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?workAuthor WHERE {
  # Find the commander in the Russo-Polish War who was a politician and office holder
  ?commander dbo:occupation [a dbo:Politician; dbo:officeHolder true] .
  ?commander dbo:participatedIn dbr:Russo-Polish_War_(1654%E2%80%931667) .

  # Find the successor of this commander
  ?successor dbo:succeededBy ?commander .

  # Find works by George Ducas and their authors
  ?work dbo:author dbr:George_Ducas .
  ?work dbo:wikiPageWikiLink ?workAuthor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
80,41,train,Give me the professional in  and actor of the album of What You Know (T.I. song) and actor of the movie with .,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?album ?movie WHERE {
  # Find the artist of ""What You Know""
  dbr:What_You_Know_(T.I._song) dbo:artist dbr:T.I. .

  # Get albums by T.I.
  OPTIONAL { 
    ?album dbo:artist dbr:T.I. .
    ?album dbp:title ?title .
  }

  # Find movies acted in by T.I.
  OPTIONAL {
    ?movie dbo:starring dbr:T.I. .
    ?movie dbp:name ?mname .
  }
  
  BIND(dbr:T.I. AS ?artist)
}
ORDER BY ?artist
LIMIT 10
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
213,4,train,"Who is the spouse, that is a writer, of Hu Jieqing?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?hu a dbo:Person ;
      foaf:name ""Hu Jieqing"" .
  
  ?hu dbo:spouse ?spouse .

  ?spouse a dbo:Writer .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
103,5,train,"Give me the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbp:title ""Ab Kya Hoga""@en .

  ?actor a dbo:Actor ;
         a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
668,10,train,Give me the associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # For Snoop Dogg ($pacely)
  VALUES ?person1 { dbr:Snoop_Dogg }
  
  # For Stevie Wonder (Darryl Paa Kwesi Bannerman-Martin)
  VALUES ?person2 { dbr:Stevie_Wonder }

  # Find associated artists for Snoop Dogg
  {
    ?person1 dbo:associatedMusicalArtist ?artist .
    ?artist a dbo:MusicalArtist .
    BIND(?artist AS ?associatedArtist)
  }
  
  UNION
  
  # Find associated artists for Stevie Wonder
  {
    ?person2 dbo:associatedMusicalArtist ?artist .
    ?artist a dbo:MusicalArtist .
    BIND(?artist AS ?associatedArtist)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,29,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of Carl, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Duke Philipp of Württemberg as grandparent
  ?grandChild dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # The child is a predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:successor dbr:Carl,_Duke_of_W%C3%BCrttemberg .
  ?grandChild dbo:parent ?predecessor .

  # The individual is also a child of Archduchess Margarete Sophie of Austria
  ?child dbp:mother dbr:Archduchess_Margarete_Sophie_of_Austria .
  ?child dbo:parent ?predecessor .

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,14,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person dbr:Thomas_Letsch .
  ?person a dbo:SoccerManager .
  ?team dbo:manager ?person .
  ?season dbo:club ?team ;
          a dbo:SoccerSeason .
  OPTIONAL { ?team dbp:name ?teamName . }
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
668,45,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ?birthName .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
375,5,train,Give me the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Toyotomi_Hideyoshi dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
  UNION
  ?parent dbo:child dbr:Toyotomi_Hideyoshi .
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
668,11,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Elorm Kabu Amenyah"" .
  ?person foaf:name ?artist .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
737,42,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Archduke Charles Louis of Austria and his child who is royalty
  ?archduke a dbo:Person ;
            foaf:name ""Archduke Charles Louis of Austria"" ;
            dbo:spouse ?spouse .
  
  ?child1 dbo:parent ?archduke ;
          a dbo:RoyalFamilyMember .

  # Child of the child (grandchild) who is royalty
  ?child2 dbo:parent ?child1 ;
          a dbo:RoyalFamilyMember .

  # Philipp Albrecht, Duke of Württemberg and his child
  ?philippAlbrecht a dbo:Person ;
                  foaf:name ""Philipp Albrecht, Duke of Württemberg"" .
  
  ?child3 dbo:parent ?philippAlbrecht .

  # Child of the child (grandchild) of Philipp Albrecht
  ?child4 dbo:parent ?child3 .

  # Predecessor of the grandchild of Philipp Albrecht
  ?predecessor dbo:successor ?child4 ;
               a dbo:RoyalFamilyMember .

  # Find the intersection where the child of the child from Archduke Charles Louis is the predecessor
  FILTER (?child2 = ?predecessor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
39,50,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""The Amazing Kreskin"" .
  ?person dbp:birthName ""Robert Lamar Thompson"" .

  OPTIONAL { 
    ?character dbo:creator dbr:Walter_B._Gibson .
    ?character rdf:type dbo:FictionalCharacter .
    ?character dbo:wikiPageRedirects dbr:The_Shadow .
  }

  ?person dbo:band ?band .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
386,3,train,Give me the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
353,60,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Roger II of Sicily and his children
  dbr:Roger_II_of_Sicily dbo:spouse ?constance .
  ?constance a dbo:Monarch . # Constance is royalty

  ?rogerChild dbo:parent dbr:Roger_II_of_Sicily ;
              dbo:childOf ?constance .

  # Children of Roger II's children (grandchildren)
  ?rogerGrandchild dbo:parent ?rogerChild .

  # Constance of Burgundy and her children
  ?constanceChild dbo:parent ?constance .

  # Children of Constance's children (grandchildren)
  ?constanceGrandchild dbo:parent ?constanceChild .

  # Find the common grandchild
  VALUES ?commonGrandchild {
    ?rogerGrandchild
    ?constanceGrandchild
  }

  FILTER(?commonGrandchild = ?rogerGrandchild && ?commonGrandchild = ?constanceGrandchild)
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
595,41,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?author ?spouse WHERE {
  # Commander in Third Taiwan Strait Crisis
  ?event a dbo:MilitaryConflict ;
         dbo:participatingCommanders ?commander .
  FILTER(CONTAINS(LCASE(STR(?event)), ""third taiwan strait crisis""))

  # Author of a work by Bill Clinton
  ?work dbo:author dbr:Bill_Clinton ;
        a dbo:Book .
  ?author dbp:spouse ?spouse .

  # Spouse of the author is a politician and office holder
  ?spouse a dbo:Politician, dbo:OfficeHolder .

  # Linking the work to ""An Invitation to the White House""
  FILTER(CONTAINS(LCASE(STR(?work)), ""invitation to the white house""))
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
353,53,train,"Give me the father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # William II of Sicily's father
  dbr:William_II_of_Sicily dbo:parent ?father .
  
  # Father is a child of Roger II's grandparent
  ?grandparent dbo:child ?father .
  ?grandparent dbo:child dbr:Roger_II_of_Sicily .

  # Father is also a child of Alfonso VI
  ?alfonsoVI dbr:Alfonso_VI_of_León_and_Castile .
  ?alfonsoVI dbo:child ?father .

  # Ensure the father is royalty
  ?father a dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
557,17,train,"Give me the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  # Find the actor of ""High Society Blues""
  ?movie a dbo:Film .
  ?movie dbp:title ""High Society Blues"" .
  ?movie dbo:starring ?actor .

  # Retrieve works associated with this actor
  OPTIONAL { ?actor dbo:film ?work . }
  OPTIONAL { ?actor dbo:literaryWork ?work . }

  FILTER(?work != dbr:High_Society_Blues) # Exclude the movie itself from results
}
ORDER BY ?work
LIMIT 10
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
595,8,train,"Give me the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?war a dbo:War .
  ?war dbo:participatingOrganisation dbr:United_States_Navy .

  # Check if the war is also categorized as a disease
  ?war dbo:wikiPageRedirects ?disease .
  ?disease a dbo:Disease .

  # Check if the war is also categorized as a societal event
  ?war dbo:wikiPageRedirects ?event .
  ?event a dbo:SocietalEvent .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
89,61,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Saw Shwe Khet's child who is royalty
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?child a dbo:Royalty .

  # Predecessor of the child
  ?predecessor dbo:succeededBy ?child .
  ?predecessor a dbo:Royalty .

  # Spouse of the predecessor
  ?spouse dbo:spouse ?predecessor .
  ?spouse a dbo:Royalty .

  # Father of Saw Shwe Khet
  ?father dbo:parent dbr:Saw_Shwe_Khet .
  
  # We want the spouse of this father
  ?fatherSpouse dbo:spouse ?father .
  ?fatherSpouse a dbo:Person .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
595,31,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify the book ""Back to Work"" by Hillary Clinton
  dbr:Back_to_Work_(book) dbo:author dbr:Hillary_Clinton .
  
  # Ensure Hillary Clinton is a politician and an office holder
  dbr:Hillary_Clinton a dbo:Politician ;
                     a dbo:OfficeHolder .

  # Retrieve spouse information
  OPTIONAL { dbr:Hillary_Clinton dbp:spouse ?spouse . }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
756,48,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Thomas Letsch's management role
  ?team a dbo:SoccerClub ;
        dbo:manager ?letschRole .
  
  ?letschRole dbo:agent dbr:Thomas_Letsch ;
              dbo:position ""Manager"" .

  # Successor of the 2006–07 VfL Bochum season
  ?vflBochumSeason a dbo:SoccerLeagueSeason ;
                   dbp:club dbr:VfL_Bochum ;
                   dbp:season ""2006–07"" .
  
  ?successorSeason a dbo:SoccerLeagueSeason ;
                   dbo:succeeds ?vflBochumSeason .

  # Manager of the player in the successor season
  ?player a dbo:SoccerPlayer ;
          dbo:playsFor ?teamInSuccessor ;
          dbo:playedIn ?successorSeason .
  
  ?managerRole a dbo:ManagerialPosition ;
               dbo:agent ?manager ;
               dbo:position ""Manager"" .

  ?teamInSuccessor dbo:manager ?managerRole .
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
398,0,train,Give me the figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?description WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist foaf:name ""Наши парни"" .
  OPTIONAL { ?artist dbo:description ?description . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,10,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
782,27,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Nick Curran"" .
  OPTIONAL { ?person dbo:associatedBandOrMusicalGroup ?associatedArtist . }
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
905,50,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary and his children
  dbr:Béla_IV_of_Hungary a dbo:Monarch ;
                        dbo:spouse ?spouseBelaIV ;
                        dbo:child ?childBelaIV .

  # Children of Béla IV who are royalty
  ?childBelaIV a dbo:Monarch ;
               dbo:child ?grandchild .
  
  # Spouse of Maria of Bytom and their father
  dbr:Maria_of_Bytom dbo:spouse ?spouseMariaBytom .
  ?spouseMariaBytom dbo:father ?fatherSpouseMariaBytom .

  # Check if the grandchild is the same as the parent of the spouse's father
  ?grandchild dbo:parent ?fatherSpouseMariaBytom .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,9,train,"Who is the child, that is a politician, of the person decedent at Taipei?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  ?politician a dbo:Politician .
  ?politician foaf:name ?childName .
  
  ?parent dbo:deathPlace dbr:Taipei .
  ?parent dbo:child ?politician .

}
```",2,3,3,2,1,3,2,20,0,9,2,0.0,0.0,0
609,54,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ceceBirthPlace ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Birth place of Cece Bell
  ?cece a dbo:Writer ;
        foaf:name ""Cece Bell"" .
  ?cece dbo:birthPlace ?ceceBirthPlace .

  # Birth place of Paulus Powell and governor's birth place
  ?paulus a dbo:Person ;
          foaf:name ""Paulus Powell"" .
  ?paulus dbo:birthPlace ?powellBirthPlace .
  
  ?region a dbo:AdministrativeRegion, dbo:Region ;
          dbr:contains ?powellBirthPlace .
  
  ?governor a dbo:Politician ;
            dbo:governs ?region .
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Birth place of awardees from Vince Gilligan's awards and nominations
  ?vince a dbo:Writer ;
         foaf:name ""Vince Gilligan"" .
  
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  
  ?nomination dbo:nominatedFor ?award ;
              dbo:nominee ?vince .

  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
375,3,train,"Give me the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?work a dbo:Film .
  ?work a dbo:TelevisionShow .
  ?work dbo:starring dbr:Vera_Lynn .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
203,16,train,"Give me the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""William Bayne"" .

  ?event dbo:type dbr:Military_conflict ;
         dbo:participatedIn ?person .

  OPTIONAL { 
    ?event dbp:reference ?reference .
    FILTER(CONTAINS(LCASE(?reference), LCASE(""William Bayne"")))
  }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
871,28,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Identify Edward Stanley, 17th Earl of Derby
  ?person dbr:Edward_Stanley,_17th_Earl_of_Derby .
  
  # Find his parent
  ?person dbo:childOf ?parent .

  # Ensure the parent is also the father of Arthur Stanley (politician)
  ?parent dbo:child ?arthur .
  ?arthur dbr:Arthur_Stanley_(politician) .

  # Check if the parent has a child who received the Commander of the Royal Victorian Order
  OPTIONAL { 
    ?parent dbo:child ?awardee .
    ?awardee dbo:honoursReceived ?award .
    ?award dbp:name ""Commander of the Royal Victorian Order""@en .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
595,26,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Politician ;
          dbo:residence dbr:Chappaqua,_New_York .
  
  ?work a dbo:Book, dbo:WrittenWork ;
        dbo:author ?author .

  ?person dbo:writtenWork ?work .
}
```",3,8,4,3,1,3,3,71,0,0,3,0,0.0,0
151,3,train,Give me the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Charles Parsons"" .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:militaryBranch dbr:British_Army .
  ?person dbo:receivedAward ?award .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
941,9,train,"Who is the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Identify Ferdinand Albert II, Duke of Brunswick-Lüneburg
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?child .

  # Find the parent of this child who is a royalty
  ?child dbo:parent ?parent .
  ?parent a dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
628,46,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Step 1: Identify Bobby Shmurda and his birth name
  dbr:Bobby_Shmurda a dbo:MusicalArtist ;
                    dbp:birthName ?bobbyBirthName .

  # Step 2: Find associated musical artists or bands he is part of
  ?band a dbo:Band ;
        dbo:member dbr:Bobby_Shmurda .
  
  # Step 3: Check if any band members are also GS9 members
  ?gs9Member a dbo:MusicalArtist ;
             dbo:memberOf dbr:GS9 ;
             dbo:member ?band .

  # Return the birth name of Bobby Shmurda
  FILTER(?bobbyBirthName = ?birthName)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
756,26,train,"Give me the native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  dbr:Konrad_Adlerauer dbo:nationality ?nationality .
  ?person dbo:birthPlace ?nativeCountry .
  FILTER(?person = dbr:Konrad_Adlerauer)
}
```",3,4,4,3,1,3,3,71,0,0,5170,0,0.0,0
557,56,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?movie a dbo:Film .
  ?movie dbp:title ""Dracula"" .
  ?movie dbo:starring dbr:Bela_Lugosi .
  ?movie dbo:productionCompany ?company .
  ?company dbo:founder ?producer .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
816,12,train,Give me the parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES (?person) { 
    dbr:Doon_Arbus 
    dbr:Amy_Arbus 
  }
  
  ?person dbo:property:parent ?parent .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
737,50,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?descendant WHERE {
  # Alexander of Württemberg (1804-1881)
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbp:birthYear ""1804""^^xsd:gYear ;
             dbp:deathYear ""1881""^^xsd:gYear .

  # First child of Alexander
  ?child1 dbo:parent ?alexander ;
          a dbo:Person .

  # Second child (grandchild) of Alexander
  ?child2 dbo:parent ?child1 ;
          a dbo:Person .

  # Third child (great-grandchild) of Alexander
  ?child3 dbo:parent ?child2 ;
          a dbo:Person .

  # Archduke Charles Louis of Austria
  ?charles a dbo:Person ;
           foaf:name ""Archduke Charles Louis of Austria"" ;
           dbp:birthYear ?birthYear1 ;
           dbp:deathYear ?deathYear1 .

  # First child of Archduke Charles Louis
  ?child4 dbo:parent ?charles ;
          a dbo:Person .

  # Second child (grandchild) of Archduke Charles Louis
  ?child5 dbo:parent ?child4 ;
          a dbo:Person .

  # Find common descendant
  ?descendant dbo:parent ?child3, ?child5 .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
386,2,train,Give me the war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event WHERE {
  dbr:Alexander_Lvovich_Davydov dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation dbo:wikiPageRedirects ?resource .
  ?resource a dbo:Event ;
            dbp:name ?event .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
756,36,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?teamManagedByPerson ?vflBochumManager WHERE {
  # Find the sports manager born on 1968-08-26
  ?person a dbo:SportsManager ;
          dbo:birthday ""1968-08-26""^^xsd:date ;
          foaf:name ?personName .

  # Find the team managed by this person
  ?team a dbo:SportsTeam ;
        dbo:manager ?person .
  BIND(?team AS ?teamManagedByPerson)

  # Find the manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?vflBochumManager .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,57,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement WHERE {
  # Henry Clay Lewis's birthplace
  ?henry a dbo:Person ;
         dbp:birthPlace ?birthPlace .
  
  # Quincy Adams Gillmore's award
  ?gillmore a dbo:Person ;
            dbp:award ?award .
  ?award dbo:recipient ?force .

  # Amasa Tracy's war
  ?tracy a dbo:Person ;
         dbo:militaryConflict ?war .

  # Ensure all entities are American
  ?henry dbo:nationality dbr:United_States ;
         foaf:name ""Henry Clay Lewis"" .
  ?gillmore dbo:nationality dbr:United_States ;
            foaf:name ""Quincy Adams Gillmore"" .
  ?tracy dbo:nationality dbr:United_States ;
         foaf:name ""Amasa Tracy"" .

  # Ensure the birthplace is a settlement
  ?birthPlace a dbo:Settlement .

  # Combine conditions
  FILTER(?force = ?award && ?war = ?gillmore)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
668,0,train,Give me the associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist foaf:name ""$Pacely"" .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
89,47,train,"Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalRoyalty WHERE {
  # Min Hla Htut of Pyakaung
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en ;
              dbo:parent ?parent .

  # Parent's Father
  ?parent dbo:parent ?grandfather .

  # Spouse of the Grandfather
  ?spouse dbo:spouse ?grandfather ;
          dbo:child ?royaltyChild .

  # Saw Shwe Khet and their child who is royalty
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?sawShweKhet dbo:child ?sawShweKhetChild .
  ?sawShweKhetChild a dbo:Royalty .

  # Final royalty child
  FILTER(?royaltyChild = ?sawShweKhetChild)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,41,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?person dbo:officeHolderOf dbr:Russo-Polish_War_(1654–1667) .
  ?person dbo:commanderIn dbr:Great_Turkish_War .
  ?person dbo:succeededBy ?successor .

  OPTIONAL { 
    ?reference dbp:artist dbr:John_Mayer ;
               dbp:title ""Always the Love Songs"" .
    ?successor foaf:name ?name .
    FILTER EXISTS { ?reference dbo:relatedTo ?successor }
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
633,3,train,"Give me the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  # Identify Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine dbo:child ?person .
  
  # Find the parents of Francis I
  ?person dbo:parent ?parent .

  # Filter parents who are royalty or nobility
  ?parent a (dbo:Monarch | dbo:Noble) .

  # Get the name of the parent
  ?parent foaf:name ?parentName .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,3,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Kim Wilson"" .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
737,27,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .

  ?child dbo:parent ?parent .
  
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
347,15,train,"Give me the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event WHERE {
  ?event a dbo:SocietalEvent .
  ?event a dbo:Event .
  ?event a dbo:TelevisionShow .
  ?event dbp:relatedToMilitaryForce dbr:Algerian_War .
}",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
628,14,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?coro a dbo:MusicalGroup .
  ?coro foaf:name ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .

  ?award dbo:recipient ?coro .
  ?award dbo:country dbr:United_States .
  ?award dbo:region ?region .
  FILTER (STRSTARTS(STR(?region), ""dbr:"") && 
          (CONTAINS(STR(?region), ""State"") || CONTAINS(STR(?region), ""Settlement"")))
}
```",2,6,3,2,1,3,3,71,0,0,8569,0,0.0,0
737,9,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?albrecht a dbo:Person ;
           dbp:title ""Duke of Württemberg"" ;
           dbp:spouse ?spouse .
  
  ?carl a dbo:Person ;
        dbp:title ""Duke of Württemberg"" .

  ?child dbo:parent ?albrecht ;
         dbo:predecessorOf ?carl .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,47,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?work a dbo:FictionalWork .
  ?work dbp:title ""The Shadow"" .
  ?work dbo:creator ?alterEgo .
  ?alterEgo foaf:name ""Lamont Cranston""@en .
  
  ?work dbo:producer ?producer .
  ?producer foaf:name ?name .

  OPTIONAL { 
    ?actor a dbo:Actor .
    ?actor foaf:name ""Edward G. Robinson""@en .
    ?film dbo:starring ?actor .
    ?film dbp:title ""Angels with Dirty Faces"" .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
293,48,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of Ann Sothern.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember WHERE {
  # Step 1: Find Ann Sothern's birth name
  dbr:Ann_Sothern dbp:birthName ?birthName .

  # Step 2: Find a landmark at the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbp:elevation 20.1168 .

  # Step 3: Determine the ruling party in that location
  ?landmark dbo:location ?location .
  ?location dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .

  # Step 4: Find a member of that ruling party
  ?person dbo:memberOf ?rulingParty ;
          foaf:name ?partyMember .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,21,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  # Doon Arbus and her parents
  dbr:Doon_Arbus dbo:childOf ?parent .
  
  # Movies featuring the parent and Herschel Bernardi
  ?parent dbo:spouseOrPartner ?movie .
  ?movie dbo:starring dbr:Herschel_Bernardi .

  # Get the name of the parent
  ?parent foaf:name ?parentName .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
89,43,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor ?spouse WHERE {
  # Find Myat Hpone Pyo's predecessor
  ?myatHponePyo dbo:succession ?position .
  ?predecessor dbo:succession ?position .
  FILTER(?myatHponePyo != ?predecessor) .

  # Find Saw Shwe Khet's child who is royalty
  ?sawShweKhet dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Monarch .

  # Find Saw Min Hla and his father's spouse
  ?sawMinHla dbo:parent ?father .
  ?father dbp:spouse ?spouse .
  
  # Ensure the predecessor is also royalty
  ?predecessor a dbo:Monarch .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
353,5,train,"Who is the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  ?person dbo:spouse|dbo:child|dbo:parent|dbo:successor|dbo:predecessor dbr:William_I .
  ?person a dbo:Monarch ;
          (dbo:officeHolder|dbo:royalty) ?role .
  FILTER(?role != """")
}
ORDER BY ?reference
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
151,5,train,Give me the entity in the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Burhan_Belge dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,2,249,0.0,0.0,0
386,18,train,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeWar ?baggovutWar WHERE {
  # Find a person who received the Golden Sword for Bravery and their associated wars
  ?person dbo:award dbr:Golden_Sword_for_Bravery .
  ?person dbo:militaryConflict ?awardeeWar .

  # Find Karl Gustav von Baggovut and his associated wars
  dbr:Karl_Gustav_von_Baggovut dbo:militaryConflict ?baggovutWar .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
263,0,train,Give me the native of Middlesex.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Middlesex .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,3,28,10,1,925,0.9090909090909091,0.0106951871657754,0.02114164904862579
293,31,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the landmark at the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation = ""20.1168""^^xsd:float)

  # Find Roger Pryor (actor) and his spouse
  ?rogerPryor a dbo:Actor ;
              foaf:name ""Roger Pryor""@en ;
              dbp:spouse ?spouse .

  # Determine the party membership of the spouse
  ?spouse dbo:partyMemberOf ?party .
  ?party dbo:member ?partyMember .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,24,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Stephen V of Hungary
  dbr:Stephen_V_of_Hungary a dbo:Monarch ;
                          dbo:spouse ?spouse .

  # Find his children who are royalty
  ?child dbo:parent dbr:Stephen_V_of_Hungary ;
         a dbo:Person, dbo:Royalty .

  # Charles I of Hungary's father
  dbr:Charles_I_of_Hungary dbo:father ?charlesFather .

  # The child must be the parent of Charles I's father
  ?child dbo:parent ?charlesFather .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
756,59,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the successor season of 2006–07 VfL Bochum
  dbr:VfL_Bochum_season_2007-08 dbo:sportsTeam dbr:VfL_Bochum .
  
  # Ensure VfL Bochum is a sports club, organisation, and soccer club
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 a dbo:SportsOrganization .

  # Find the manager of VfL Bochum during that season
  ?manager dbp:managedTeam dbr:VfL_Bochum_season_2007-08 .
  
  # Ensure the leader of West Germany was from Germany
  dbr:Bonn dbo:country dbr:Germany .
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
288,6,train,Give me the theme of the show with Anumta Qureshi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show ?theme WHERE {
  ?person foaf:name ""Anumta Qureshi"" .
  ?person dbo:performerIn ?show .
  OPTIONAL { ?show dbo:abstract ?theme }
}
LIMIT 10
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
557,24,train,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for producer of A Star Is Born (1937 film)
SELECT ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}

# Query for producer of the claim to fame work of Cora Sue Collins
SELECT ?work ?producer WHERE {
  dbr:Cora_Sue_Collins dbo:famousFor ?claimToFame .
  ?claimToFame a dbo:Work .
  ?claimToFame dbo:producer ?producer .
  BIND(?claimToFame AS ?work)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
513,17,train,"Give me the entity in United Kingdom and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderName ?residence ?ukEntity WHERE {
  # George Savage's political party
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:George_Savage_(politician) .

  # Leader of the party
  ?party dbo:leader ?leader .
  ?leader foaf:name ?leaderName .

  # Residence of the leader
  OPTIONAL { ?leader dbp:residence ?residence . }

  # Entity in the United Kingdom associated with the leader
  OPTIONAL {
    ?ukEntity a dbo:Organisation ;
              dbo:location dbr:United_Kingdom ;
              dbo:head ?leader .
  }
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
39,4,train,Give me the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  dbr:Sam_Concepcion dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,1,0,6,1.0,0.14285714285714285,0.25
585,8,train,Give me the child of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?actress a dbo:Actress .
  ?actress dbp:children ?child .
}
ORDER BY ?child
LIMIT 10
```",2,2,3,2,1,3,2,20,0,0,935,0,0.0,0
80,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  # Assuming you want to filter by a specific location or context, replace 'dbr:Location' with the actual resource
  ?person dbo:birthPlace dbr:Location .
}
ORDER BY ?name
LIMIT 10
```

Please replace `dbr:Location` with the specific DBpedia resource for the location or context you are interested in.",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
905,40,train,"Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Stephen V of Hungary's child
  ?stephenV a dbo:Person ;
            dbp:child ?child .

  # Charles Martel of Anjou's parent
  ?charlesMartel a dbo:Person ;
                 dbp:parent ?parent .

  # The person is both the child of Stephen V and the parent of Charles Martel
  FILTER (?child = ?parent)

  # Spouse of the father of the parent (from step 2)
  ?parent dbp:father ?grandFather .
  ?grandFather dbo:spouse ?person .

  # The person must be royalty
  ?person a dbo:Monarch ;
          dbo:country ?country .

  # Related to Philip, Despot of Romania
  ?philip a dbo:Person ;
          dbp:parent ?relatedParent .
  ?relatedParent dbo:spouse ?person .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
492,17,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?deathPlace WHERE {
  # Query for Sal Mineo
  { 
    ?salMineo a dbo:Actor ;
              foaf:name ""Sal Mineo""@en .
    OPTIONAL { ?salMineo dbp:deathPlace ?deathPlace . }
  } UNION
  # Query for the actor of Color Me Dead
  {
    ?movie dbo:starring ?actor ;
           dbo:title ""Color Me Dead""@en .
    OPTIONAL { ?actor dbp:deathPlace ?deathPlace . }
    BIND (STR(?actor) AS ?personName)
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
89,49,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Identify Saw Min Phyu
  ?sawMinPhyu a dbo:Person ;
              dbp:spouse ?spouse .

  # Find the spouse of Saw Min Phyu
  ?spouse a dbo:Person ;
          dbp:child ?royaltyChild .

  # Ensure the child is royalty
  ?royaltyChild a dbo:Royalty .

  # Identify Min Hla Htut and their parent
  ?minHlaHtut a dbo:Person ;
              dbp:parent ?parentOfMinHlaHtut .

  # Find Saw Min Phyu as the child of this parent
  ?parentOfMinHlaHtut dbp:child ?sawMinPhyu .

  # Find the predecessor of the royalty child
  ?royaltyChild dbo:predecessor ?predecessor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
89,31,train,Give me the spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Minye Kyawswa's child
  ?childMinyeKyawswa dbo:parent dbr:Minye_Kyawswa .
  
  # Child of Minye Kyawswa's child (grandchild)
  ?grandchild dbo:parent ?childMinyeKyawswa .

  # Parent of the grandchild
  ?parentGrandchild dbo:child ?grandchild .

  # Saw Shwe Khet and their spouse
  dbr:Saw_Shwe_Khet dbo:spouse ?spouse .
  
  # Linking Saw Shwe Khet to the parent of the grandchild
  FILTER(?parentGrandchild = dbr:Saw_Shwe_Khet)
}
```",4,4,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
905,3,train,"Give me the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Philip_Despot_of_Romania dbo:childOf ?parent .
  ?parent a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
198,11,train,Give me the war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  ?person dbo:honorsReceived dbr:Medal_of_Honor .
  ?person dbo:militaryConflict ?war .
}
```",2,2,3,2,1,3,3,71,0,0,611,0,0.0,0
225,4,train,"Give me the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tvShow WHERE {
  ?awards a dbo:Award .
  ?awards dbp:name ""Anita Borg Institute Women of Vision Awards"" .
  ?awards dbo:reference ?tvShow .
  ?tvShow a dbo:TelevisionSeries .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
80,24,train,Give me the actor of the album of What You Know (T.I. song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?album a dbo:MusicAlbum .
  ?album dbp:title ""Paper Trail"" .
  ?album dbo:artist dbr:T.I. .
  ?track dbo:isPartOf ?album ;
         rdfs:label ""What You Know""@en .

  OPTIONAL { 
    ?track dbo:actor ?actor .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
103,28,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Richard E. Grant as an actor in a movie or TV show
  dbr:Richard_E._Grant dbo:profession dbr:Actor .
  
  # Productions (movies or TV shows) featuring Richard E. Grant
  ?production dbo:starring dbr:Richard_E._Grant ;
              a ?type .

  # Ensure the production is either a movie or a television show
  VALUES ?type { dbo:Film dbo:TelevisionSeries }

  # Co-actors in these productions
  ?production dbo:starring ?actor .
  
  # Exclude Richard E. Grant from the results
  FILTER (?actor != dbr:Richard_E._Grant)
}
```",4,5,5,2,3,3,3,71,0,0,9,0,0.0,0
905,61,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Step 1: Find Béla IV of Hungary
  ?belav a dbo:Monarch ;
         dbo:country dbr:Hungary ;
         dbp:predecessor dbr:Stephen_V_of_Hungary .

  # Step 2: Find children of Béla IV who are royalty
  ?childOfBela a dbo:Person ;
               dbo:parent ?belav ;
               dbo:royalty true .

  # Step 3: Find grandchildren (children of the child) who are royalty
  ?grandchild a dbo:Person ;
              dbo:parent ?childOfBela ;
              dbo:royalty true .

  # Step 4: Identify Maria of Bytom's spouse
  ?maria dbr:Maria_of_Bytom ;
         dbp:spouse ?casimir .

  # Step 5: Find Casimir II the Just's father
  ?fatherOfCasimir a dbo:Person ;
                   dbo:parent ?casimir ;
                   dbo:royalty true .

  # Step 6: Find parent of Casimir II the Just's father who is royalty
  ?childOfChild a dbo:Person ;
                dbo:parent ?fatherOfCasimir ;
                dbo:royalty true .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
668,57,train,"Give me the person born as the birth name of Joey B and associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  # Find Joey B's birth name
  VALUES (?joeyB) { dbr:Joey_B_(musician) }
  
  ?joeyB dbo:birthName ?birthName .
  
  # Find musical artist associated with $pacely
  ?pacelyArtist a dbo:MusicalArtist .
  ?pacelyArtist dbp:associatedWith ""$pacely"" .
  
  # Find writer of ""The Live Anthology""
  VALUES (?anthology) { dbr:The_Live_Anthology }
  ?writer a dbo:Writer ;
          dbo:work ?anthology ;
          a dbo:MusicalArtist .

  # Ensure the person is associated with both $pacely and the anthology
  FILTER(?person = ?pacelyArtist && ?person = ?writer)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,57,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person foaf:name ""Alberto Núñez Feijóo""@en .
  ?person dbo:party dbr:Spanish_Socialist_Workers'_Party .
  ?person dbo:nationality dbr:Spain .
  ?person dbo:residence dbr:Spain .
  ?person dbo:office ?office .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,31,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Find awards associated with Rodney Lees and Edward Stanley, 17th Earl of Derby
  ?award dbo:recipient ?rodneyRecipient .
  ?award dbo:recipient ?edwardRecipient .

  ?rodney dbr:Rodney_Lees . 
  ?rodney dbo:awardsReceived ?award .

  ?edward dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?edward dbo:awardsReceived ?award .

  # Find the awardees of these awards
  ?award dbo:recipient ?awardee .

  # Get the parents of these awardees
  OPTIONAL { ?awardee dbo:parent ?parent . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
769,15,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in Lai Sun Cheung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Tony Hollings' birthday
  ?tonyHollings a dbo:Athlete ;
                dbp:birthday ?birthday .

  # Find individuals who are athletes, soccer players, sports managers, and soccer managers
  ?person a dbo:Athlete ;
          dbo:sport dbr:Soccer ;
          dbo:occupation [a dbo:SportsManager, dbo:SoccerManager] .
  
  # Ensure they share the same birthday as Tony Hollings
  ?person dbp:birthday ?birthday .

  # Find association with Lai Sun Cheung
  ?laiSunCheung a dbo:Person ;
                dbo:spouse ?person ;  # Assuming spouse relationship, adjust if different

  FILTER(?tonyHollings != ?person)
}
```",4,8,5,3,2,3,2,20,0,0,2,0,0.0,0
412,21,train,Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war1 ?war2 WHERE {
  # War involving Napoleon Zervas (Greek Civil War)
  ?zervas a dbo:Person ;
          foaf:name ""Napoleon Zervas"" ;
          dbo:spouseOrPartner ?partner .
  
  ?civilWar dbo:participant ?zervas ;
           dbp:name ?war1 .

  # War associated with an awardee of 1930 (Winston Churchill and World War II)
  ?churchill a dbo:Person ;
             foaf:name ""Winston Churchill"" ;
             dbo:awardReceived ?nobelAward .
  
  ?nobelAward dbo:dateReceived ""1953-10-13""^^xsd:date .

  ?worldWar dbo:participant ?churchill ;
            dbp:name ?war2 .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,17,train,Give me the war of Hashiba Hidekatsu and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personName ?war WHERE {
  VALUES (?person ?personName) {
    (dbr:Toyotomi_Hideyoshi ""Hashiba Hidekatsu"")
    (dbr:Koichirō ""Koichirō"")  # Assuming there's a DBpedia resource for Koichirō
  }
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  ?person foaf:name ?name .
  
  ?person dbo:participatedInWar ?war .
}
ORDER BY ?personName
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
905,21,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Charles II of Anjou""@en .
  ?person dbo:child dbr:Philip_I,_Prince_of_Taranto .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
263,15,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Identify Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent .

  # Find William Gayner's birthplace that is both a region and a country
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { ?birthPlace a dbo:Country . }
  FILTER EXISTS { ?birthPlace a dbo:Region . }

  # Match the parent who is native to this place
  ?parent dbo:nativePlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
203,20,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?conflict ?commander WHERE {
  # Find the military conflict related to William Bayne
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:participatedIn dbr:William_Bayne_(Royal_Navy_officer) .

  # Identify the commander of this conflict
  ?conflict dbo:commander ?commander .

  # Filter for the specific campaign in Egypt and Syria
  ?conflict dbp:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""egypt"") && CONTAINS(LCASE(?name), ""syria""))
}
ORDER BY ?conflict
LIMIT 10
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
782,29,train,Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fabulousThunderbirds ?bandMember ?nickCurranArtist WHERE {
  # Reference to The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
    rdfs:label ?fabulousThunderbirds .

  # Band members of Eric Clapton
  OPTIONAL {
    ?claptonBand a dbo:Band ;
      dbo:bandMember dbr:Eric_Clapton .
    ?claptonBand dbp:name ?bandMember .
  }

  # Associated musical artists of Nick Curran
  OPTIONAL {
    ?nickCurranAssociatedArtist a dbo:MusicalArtist ;
      dbo:associatedBand dbr:Nick_Curran .
    ?nickCurranAssociatedArtist rdfs:label ?nickCurranArtist .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
225,10,train,"Give me the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:reference dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?award dbo:recipient ?person .
  ?person dbo:nationality dbr:Japan .
  OPTIONAL { ?person foaf:name ?awardee . }
}
ORDER BY ?awardee
LIMIT 10
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
78,22,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?soundtrack a dbo:Soundtrack ;
              dbp:composer ?writer .
  ?writer a dbo:MusicalArtist, dbo:Artist ;
          dbp:name ""Wizards of Waverly Place (soundtrack)"" .
  OPTIONAL { ?writer dbo:associatedMusicalArtist ?associatedArtist . }
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Stuart Mcbeath Tosh"" .
  OPTIONAL { ?person dbo:birthName ""Stuart Mcbeath Tosh"" . }
  OPTIONAL { ?person dbo:associatedMusicalArtist ?associatedArtist . }
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
293,61,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Find Tisha Sterling's parent
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling"" .
  
  ?parent dbo:child ?tisha ;
          dbp:birthName ?birthName .

  # Find Nat Levine's film production
  ?nat dbr:Nat_Levine ;
       dbo:filmProduction ?film .

  # Find an actor in that film
  ?actor a dbo:Actor ;
         dbo:actedIn ?film .

  # Find the spouse of that actor
  ?spouse dbo:spouse ?actor .
  
  # Ensure the parent and spouse are the same person
  FILTER (?parent = ?spouse)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
492,0,train,Give me the death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  dbr:Reed_Howes dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
871,9,train,"Give me the parent of Victor Stanley (Royal Navy officer) and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES (?person) { 
    dbr:Victor_Stanley_(Royal_Navy_officer)
    dbr:Edward_Stanley,_17th_Earl_of_Derby
  }
  
  ?person dbo:parent ?parent .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,16,train,Give me the war of the child of Toyotomi Hideyoshi and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Toyotomi Hideyoshi""@en .
  ?child dbo:parent ?person ;
         foaf:name ""Toyotomi Hideyori""@en .
  ?war dbo:participant ?child ;
       dbp:name ?warName .
}
ORDER BY ?warName
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
87,16,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and actor of Paradise (2013 film).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find movies with Audrey Hepburn
  ?movie dbo:starring dbr:Audrey_Hepburn .
  
  # Find actors in those movies
  ?movie dbo:starring ?actor .

  # Ensure the actor also starred in ""Paradise"" (2013 film)
  ?paradiseMovie a dbo:Film ;
                 dbp:title ""Paradise""@en ;
                 dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 2013)

  ?paradiseMovie dbo:starring ?actor .

}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
159,49,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?battleCommander WHERE {
  # Russo-Polish War Commander and Successor
  ?janKazimierz a dbo:Politician ;
                dbo:officeHolderOf dbr:Kingdom_of_Poland ;
                dbo:succeededBy ?successor .
  
  # Battle of Vienna Commander
  ?sobieski a dbo:MilitaryPerson ;
            dbo:commanderInBattle dbr:Battle_of_Vienna ;
            dbp:associatedWithTelevisionShow ?tvShow .

  FILTER(?janKazimierz = dbr:Jan_II_Kazimierz_Waza)
  FILTER(?sobieski = dbr:John_III_Sobieski)

  # Optional: Link to societal event
  OPTIONAL { ?tvShow dbo:societalEvent ?event }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
203,43,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805) and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce WHERE {
  # Military conflict involving William Bayne
  OPTIONAL {
    ?conflict a dbo:MilitaryConflict .
    ?conflict dbo:participant ?person .
    ?person foaf:name ""William Bayne"" .
    ?conflict dbo:militaryForce ?militaryForce .
  }

  # Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_1805 a dbo:MilitaryConflict ;
      dbo:militaryForce ?militaryForce .
  }

  # French campaign in Egypt and Syria
  OPTIONAL {
    dbr:French_campaign_in_Egypt_and_Syria a dbo:MilitaryConflict ;
      dbo:militaryForce ?militaryForce .
  }
}
ORDER BY ?militaryForce
LIMIT 10
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
531,33,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantOfMadrid ?officeOfCommander WHERE {
  # Identify Manuel Pinto da Costa as a politician and office holder
  ?person dbr:Manuel_Pinto_da_Costa .
  
  # Ensure the person is an office holder and a politician
  ?person dbo:OfficeHolder .
  ?person dbo:Politician .

  # Find the tenant of Madrid (assuming this refers to a political role related to Madrid)
  OPTIONAL { 
    ?person dbp:officeOfMadrid ?tenantOfMadrid .
  }

  # Identify military conflicts or societal events
  ?event a (dbo:MilitaryConflict|dbo:SocietalEvent) .

  # Find the office of commander in these events
  OPTIONAL {
    ?person dbo:commanderIn ?event .
    ?person dbp:officeOfCommander ?officeOfCommander .
  }
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
557,58,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Cora Sue Collins' notable work
  ?work1 dbo:composer dbr:Cora_Sue_Collins .
  
  # Actor in ""High Society Blues""
  ?actor a dbo:Actor ;
         dbo:film dbr:High_Society_Blues .

  # Works associated with the actor
  ?work2 dbo:starring ?actor .

  # Producers of these works
  ?work1 dbo:producer ?producer .
  ?work2 dbo:producer ?producer .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
723,17,train,"Give me the band member of Mudvayne and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mudvayneMember WHERE {
  # Nate Newton's band
  dbr:Nate_Newton dbo:memberOf dbr:Converge .

  # Organizations associated with Converge
  dbr:Converge dbo:associatedBand dbr:OrganizationX .
  
  # Mudvayne members
  ?mudvayneMember a dbo:MusicalArtist ;
                  dbo:memberOf dbr:Mudvayne ;
                  dbo:memberOf ?organization .

  # Check if the organization is associated with Converge
  FILTER (?organization = dbr:OrganizationX)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
353,22,train,Give me the child of the child of Alfonso VI of León and Castile and child of Roger II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Alfonso VI of León and Castile
  ?alfonso a dbo:Person ;
           foaf:name ""Alfonso VI of León and Castile"" ;
           dbo:spouse ?spouse1 .

  # Roger II of Sicily
  ?roger a dbo:Person ;
         foaf:name ""Roger II of Sicily"" ;
         dbo:spouse ?spouse2 .

  # Children of Alfonso VI
  ?childAlfonso dbo:parent ?alfonso ;
                dbo:parent ?spouse1 .

  # Children of Roger II
  ?childRoger dbo:parent ?roger ;
              dbo:parent ?spouse2 .

  # Grandchildren (children of children)
  ?grandchild dbo:parent ?childAlfonso .
  OPTIONAL { ?grandchild dbo:parent ?childRoger . }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
80,51,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Tyrese Gibson"" .
  OPTIONAL { ?person dbp:alias ?alias . }
  OPTIONAL { ?person dbo:profession ?profession . }
}
```",5,5,6,3,2,3,3,71,0,0,4,0,0.0,0
633,17,train,"Give me the spouse of Renée of Bourbon and parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?renée a dbo:Person ;
         foaf:name ""Renée of Bourbon""@en ;
         dbp:spouse ?spouse .
  
  ?spouse foaf:name ?name .

  ?child dbo:parent ?spouse ;
         dbo:parent ?otherParent .

  ?francisI dbo:father ?charlesV .
  ?charlesV dbo:father ?charlesIII .
  ?charlesIII dbp:spouse ?renée .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
723,9,train,"Give me the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Nothing_to_Gein dbo:productionCompany ?producer .
  ?producer a dbo:Organization ;
            a dbo:MusicalGroup .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
816,18,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .

  ?actor dbo:child ?doonArbus .
  ?doonArbus rdfs:label ""Doon Arbus""@en .

  ?actor dbo:child ?amyArbus .
  ?amyArbus rdfs:label ""Amy Arbus""@en .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
249,2,train,"Give me the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jamsetji Tata""@en .
  
  ?work dbo:agent ?person ;
        dbo:country dbr:India .

  OPTIONAL { ?work rdf:type dbo:CreativeWork . }
}
ORDER BY ?work
LIMIT 10
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
816,58,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?photographer WHERE {
  # Step 1: Find actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?person .
  ?person a dbo:Actor ;
          foaf:name ?actor .

  # Step 2: Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 3: Find child of Mariclare Costello's spouse
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Step 4: Identify parent (either Mariclare or her spouse)
  OPTIONAL { ?child dbo:parent dbr:Mariclare_Costello . }

  # Step 5: Find professional photographer related to this parent
  ?photographer a dbo:Photographer ;
               dbo:parent ?spouse ;
               foaf:name ?photoName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
609,61,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  ?powell a dbo:Person ;
          foaf:name ""Paulus Powell"" .
  ?powell dbo:birthPlace ?region .

  # Ensure the region is both a region and an administrative region
  ?region a dbo:Region, dbo:AdministrativeRegion .

  # Step 2: Find the governor of that region
  ?governor a dbo:Politician ;
            dbo:governs ?region .
  ?governor dbp:office ""Governor"" .

  # Get the birth place of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Step 3: Find the author of El Deafo who is American
  ?book a dbo:Book ;
        dbo:title ""El Deafo"" .
  ?author dbo:authorOf ?book ;
          foaf:nationality dbr:United_States .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
80,13,train,Give me the actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
  ?album dbo:artist ?person .
  OPTIONAL { ?album dbo:featuredArtist ?actor . }
  FILTER(?actor != ?person)
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
375,0,train,Give me the author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book dbp:title ""A Picture of Britain""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
723,16,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer ?bandMember WHERE {
  # Find the producer of ""Nothing to Gein""
  ?album dbo:artist dbr:Cavalera_Conspiracy ;
         dbo:producer ?producer .
  
  FILTER (str(?album) = ""Nothing_to_Gein"")

  # Ensure the producer is part of an organization
  ?producer dbo:memberOf ?organization .

  # Find band members of ""Cavalera Conspiracy""
  ?bandMember dbo:memberOf dbr:Cavalera_Conspiracy ;
              a dbo:MusicalArtist .
  
  # Link the producer and band member if they are the same person
  FILTER (?producer = ?bandMember)
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
756,11,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Identify the VfL Bochum club
  dbr:VfL_Bochum a dbo:SportsClub ;
                 dbo:sport dbr:Soccer ;
                 dbo:season ?season .

  # Filter for the specific season
  FILTER(CONTAINS(LCASE(STR(?season)), ""2007–08""))

  # Find the manager of the club during that season
  ?season dbo:manager ?manager .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
531,39,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?office WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura a dbo:Politician ;
               dbp:party ?miguelParty .
  
  # Find Mariano Rajoy's political party
  ?marianoRajoy a dbo:Politician ;
                dbp:party ?rajoyParty .

  # Get the leaders of these parties and their offices
  OPTIONAL {
    ?leader1 a dbo:PoliticalLeader ;
             dbp:party ?miguelParty ;
             dbo:office ?office .
  }
  
  OPTIONAL {
    ?leader2 a dbo:PoliticalLeader ;
             dbp:party ?rajoyParty ;
             dbo:office ?office .
  }

  # Bind Miguel Maura and Mariano Rajoy to their respective resources
  VALUES (?miguelMaura ?marianoRajoy) {
    (dbr:Miguel_Maura dbr:Mariano_Rajoy)
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,3,train,Give me the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  dbr:Vince_Gilligan dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
119,22,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?administration WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  
  OPTIONAL { 
    ?person dbo:positionHeld ?office .
    ?office dbo:partOf ?administration .
    
    FILTER EXISTS { 
      ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
    }
  }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
472,1,train,Give me the administration of Christian IX of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Christian_IX_of_Denmark dbo:monarchFor ?country .
  ?country dbo:administrativeMonarchy ?administration .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
58,12,train,Give me the spouse of Linda Bruckheimer and producer of the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer""@en .
  
  ?linda dbo:spouse ?spouse .

  ?spouse foaf:name ?spouseName .
  
  OPTIONAL { 
    ?movie dbo:producer ?spouse .
    ?movie rdf:type dbo:Film .
  }
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
585,7,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?award a dbo:Award .
  ?award dbo:country dbr:United_States_of_America ;
         dbo:placeOfBirth ?place .
  ?place foaf:name ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
}
```",2,4,3,2,1,3,2,20,0,0,8569,0,0.0,0
263,9,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES (?person) { 
    dbr:Mary_Elphinstone_Lady_Elphinstone 
    dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne
  }
  
  ?person dbo:parent ?parent .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
782,13,train,Give me the band of the band member of Eric Clapton.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?clapton a dbo:MusicalArtist ;
           foaf:name ""Eric Clapton""@en .
  
  ?memberOf dbo:member ?clapton ;
            a dbo:Band .

  ?memberOf foaf:name ?band .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
258,10,train,"Who is the person born, that is a politician, as the birth name of Eleonora Menicucci?",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbp:birthName ""Eleonora Menicucci"" .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,7,train,Give me the birthday of Marcelo Sarmiento.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthday WHERE {
  dbr:Marcelo_Sarmiento dbo:birthday ?birthday .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
816,2,train,Give me the parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbr:Doon_Arbus .
  ?person dbo:childOf ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
159,52,train,"Give me the commander in Great Turkish War and reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?writer ?successor WHERE {
  # Commander in the Great Turkish War
  ?commander a dbo:MilitaryPerson ;
             dbo:participatedIn dbr:Great_Turkish_War .

  # Writer of ""Always the Love Songs""
  ?writer dbo:title dbr:Always_the_Love_Songs ;
          dbo:occupation dbo:Musician .

  # Successor who is a politician and office holder
  ?successor dbo:succeeded ?commander ;
             a dbo:Politician ;
             dbo:officeHeld ?office .

  # Michał Kazimierz Pac's involvement in the force/event/military conflict
  ?event dbo:participatedIn dbr:Great_Turkish_War ;
         dbo:participant dbr:Micahel_Kazimierz_Pac .
  
  FILTER(?commander != ?successor)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
225,11,train,Give me the birthplace of Chieko Asakawa and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?relatedEntity WHERE {
  # Find Chieko Asakawa's birthplace
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .

  # Find entities related to the birthplace that are in Japan Standard Time region
  ?relatedEntity dbo:location ?birthPlace .
  ?relatedEntity dbo:timeZone dbr:Japan_Standard_Time .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
871,19,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:honoursReceived dbr:Commander_of_the_Royal_Victorian_Order .
  ?person dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?person dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,44,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?belaIV a dbo:Monarch ;
          dbo:spouse ?kingaOfPoland ;
          dbo:child ?leszekTheWhite .
  
  ?kingaOfPoland a dbo:Monarch ;
                 dbp:name ""Kinga of Poland"" ;
                 dbo:spouse ?leszekTheWhite ;
                 dbo:child ?elizabethTheCuman .

  ?leszekTheWhite a dbo:Monarch ;
                  dbp:name ""Leszek the White"" ;
                  dbo:child ?elizabethTheCuman .

  ?elizabethTheCuman a dbo:Monarch ;
                     dbp:name ""Elizabeth the Cuman"" ;
                     dbo:spouse ?charlesIIOfNaples, ?andrewIIIOfHungary ;
                     dbo:parent ?charlesIOfHungary .
  
  ?charlesIIOfNaples a dbo:Monarch ;
                     dbp:name ""Charles II of Naples"" .

  ?andrewIIIOfHungary a dbo:Monarch ;
                      dbp:name ""Andrew III of Hungary"" ;
                      dbo:child ?charlesIOfHungary .

  ?charlesIOfHungary a dbo:Monarch ;
                     dbp:name ""Charles I of Hungary"" .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
557,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:aliasName ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
103,35,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?work a dbo:Film .
  ?work dbo:genre dbr:Television_series .
  ?work dbo:starring dbr:Richard_E._Grant .
  ?work dbo:character dbr:The_Shadow .

  ?work dbo:starring ?person .
  ?person foaf:name ?actor .
}
```",4,5,5,2,2,3,3,71,0,0,13,0,0.0,0
609,49,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for Cece Bell, author of ""El Deafo""
SELECT ?birthPlace WHERE {
  ?person a dbo:Writer .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:work ?work .
  ?work rdfs:label ""El Deafo""@en .
  FILTER (LANG(?work) = 'en')
  ?person dbp:birthPlace ?birthPlace .
}

UNION

# Query for Vince Gilligan, awardee
SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          dbo:nationality dbr:United_States .
  ?award dbo:recipient ?person .
  ?award rdfs:label ?awardLabel .
  FILTER (CONTAINS(LCASE(?awardLabel), ""vince gilligan""))
  ?person dbp:birthPlace ?birthPlace .
}

LIMIT 2
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,13,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ferdinand III, Holy Roman Emperor""@en .
  
  ?person dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:parent ?father .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
80,31,train,Give me the actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  # Find the author of ""Smartbomb""
  ?smartbomb a dbo:Book .
  ?smartbomb rdfs:label ""Smartbomb""@en .
  ?smartbomb dbo:author ?author .

  # Find an actor from ""ATL""
  ?atl a dbo:Film .
  ?atl rdfs:label ""ATL""@en .
  ?atl dbo:starring ?actor .

  # Find a movie that involves both the author and the actor
  ?movie dbo:starring ?author ;
         dbo:starring ?actor .
}
```",4,4,5,3,2,3,3,71,0,0,10,0,0.0,0
39,20,train,Give me the professional in the alter ego of The Shadow and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgoName ?singerName WHERE {
  # Find the professional name of ""The Shadow""
  ?person a dbo:Person .
  ?person foaf:name ""The Shadow"" .
  OPTIONAL { ?person dbp:profession ?profession . FILTER(CONTAINS(LCASE(?profession), ""actor"")) }
  ?person foaf:name ?alterEgoName .

  # Find the professional name of the singer
  ?singer a dbo:Singer .
  ?singer foaf:name ?singerName .
}
```",3,3,4,2,2,3,3,71,0,0,5422,0,0.0,0
293,45,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Identify Tisha Sterling
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling"" .

  # Find her parents
  ?parent dbo:child ?tisha .
  
  # Check if the parent is a member of the Republican Party
  ?parent dbo:partyMembership dbr:Republican_Party_(United_States) .

  # Check if the parent is married to Roger Pryor
  ?parent dbo:spouse dbr:Roger_Pryor_(actor) .
  
  # Retrieve the birth name of this individual
  ?parent dbp:birthName ?birthName .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,3,train,Give me the time zone of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?timeZone WHERE {
  dbr:Japan dbo:timeZone ?timeZone .
}",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
871,58,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Identify the alumnus of Eton College who is a parent
  ?alumnus dbo:almaMater dbr:Eton_College ;
          dbo:child ?parent .

  # Step 2: Find the child of Frederick Stanley, 16th Earl of Derby
  ?frederickChild dbp:father dbr:Fredrick_Stanley_16th_Earl_of_Derby ;
                  dbo:child ?parent .

  # Ensure the parent from step 1 and step 2 is the same person
  FILTER (?parent = ?alumnus)

  # Step 3: Identify the politician who is a child of this parent
  ?politician dbo:child ?parent ;
              a dbo:Politician .

  # Find the father of this politician
  ?politician dbp:father ?father .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
68,8,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:parent ?parent .
  
  # Parent of Dorothea (her father)
  ?parent a dbo:Person ;
          dbo:father ?grandfather .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
756,21,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?vitesseManager ?bochumPlayerManager WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  ?team a dbo:SoccerClub ;
        dbp:officialWebsite dbr:SBV_Vitesse ;
        dbo:manager ?vitesseManager .
  
  # Player in VfL Bochum for the 2007–08 season
  ?bochumTeam a dbo:SoccerClub ;
              dbp:officialWebsite dbr:VfL_Bochum ;
              dbo:player ?player .
  
  # Manager of that player during the 2007–08 VfL Bochum season
  ?player dbo:manager ?bochumPlayerManager .

  FILTER(YEAR(?vitesseSeasonStart) = 2020 && YEAR(?vitesseSeasonEnd) = 2021)
  FILTER(YEAR(?bochumSeasonStart) = 2007 && YEAR(?bochumSeasonEnd) = 2008)

}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
472,2,train,Give me the administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  dbr:Olaf_I_of_Denmark a dbo:Monarch .
  OPTIONAL { dbr:Olaf_I_of_Denmark dbo:reignStart ?start . }
  OPTIONAL { dbr:Olaf_I_of_Denmark dbo:reignEnd ?end . }
  OPTIONAL { dbr:Olaf_I_of_Denmark dbp:administration ?administration . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
628,26,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
ORDER BY ?birthName
LIMIT 10
```",3,4,4,3,1,3,3,71,10,10,49,0.5,0.1694915254237288,0.25316455696202533
213,10,train,"Give me the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  # Find Hu Jieqing
  ?huJieqing a dbo:Writer ;
             foaf:name ""Hu Jieqing""@en .
  
  # Identify the spouse of Hu Jieqing
  ?huJieqing dbo:spouse ?spouse .

  # Ensure the spouse is also a writer
  ?spouse a dbo:Writer .

  # Retrieve works associated with the spouse
  ?spouse dbo:work ?work .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
871,60,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  # Rodney Lees and the award he received
  dbr:Rodney_Lees dbo:award ?award .
  
  # The awardee of the same award
  ?awardee dbo:award ?award .

  # Parent of the awardee
  ?awardee foaf:parent ?parent .

  # Child of this parent who is a politician and an alumnus of Eton College
  ?child foaf:parent ?parent .
  ?child a dbo:Politician .
  ?child dbo:almaMater dbr:Eton_College .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,51,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Archduchess Margarete Sophie of Austria's parent
  ?parent1 dbo:spouse ?margareteSophie .
  ?margareteSophie a dbo:Person ;
                  foaf:name ""Margarete Sophie, Archduchess of Austria""@en .

  # Duke Philipp of Württemberg's child
  ?childOfPhilipp dbp:father dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # Find the common descendant who is royalty
  ?parent2 dbo:spouse ?childOfPhilipp .
  ?commonAncestor dbo:child ?parent1 ;
                  dbo:child ?parent2 .

  ?royalty dbo:child ?commonAncestor .
  ?royalty a dbo:Monarch .
  
  # The child of the common ancestor
  ?childOfChild dbo:child ?royalty .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
353,19,train,"Give me the child of the parent of Roger III, Duke of Apulia and father of William II of Sicily.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Roger III, Duke of Apulia
  ?rogerIII a dbo:Person ;
            foaf:name ""Roger III, Duke of Apulia""@en .
  
  # Identify his father
  ?father dbo:spouse ?mother ;
          dbo:child ?rogerIII .

  # Find the children of Roger III's father
  ?father dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,4,train,"Give me the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war .
}
ORDER BY ?war
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
103,20,train,Give me the actor of Dispatches from Elsewhere and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  # Find the actor from ""Dispatches from Elsewhere""
  ?show dbr:Dispatches_from_Elsewhere .
  ?show dbo:starring ?person .
  
  # Get the name of the person
  ?person foaf:name ?actorName .

  OPTIONAL {
    # Check for any professional connection with Shatrughan Sinha
    ?sinha a dbo:Actor ;
           foaf:name ""Shatrughan Sinha"" .
    
    # Look for shared projects or collaborations
    ?sharedProject dbo:starring ?person, ?sinha .
  }
}
LIMIT 10
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
492,16,train,Give me the death place of Reed Howes and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for Reed Howes' death place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Reed_Howes a dbo:Person .
  OPTIONAL { dbr:Reed_Howes dbo:deathPlace ?deathPlace . }
}

# Query for the actor's death place from ""Aladdin"" (1958 film)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?deathPlace WHERE {
  dbr:Aladdin_(film) dbo:starring ?actor .
  ?actor a dbo:Actor ;
         foaf:name ?actorName .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
905,7,train,Give me the predecessor of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?stephenV a dbo:Monarch ;
            dbp:country dbr:Kingdom_of_Hungary ;
            dbp:reignEnd ?endDate .
  
  OPTIONAL { 
    ?predecessor dbo:successor ?stephenV .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
80,10,train,Give me the professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Actor .
  ?person a dbo:Professional .
  ?person foaf:name ?name .
  OPTIONAL { 
    ?person dbo:birthPlace dbr:Shelby_Oaks .
  }
}
ORDER BY ?name
LIMIT 10
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,42,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artistName ?realName ?band WHERE {
  # Find the artist associated with Nicholas Michael Curran (Kid Rock)
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Nicholas Michael Curran""@en .
  ?person dbp:birthName ?realName .

  # Find Kim Wilson's real name and band association
  ?kimPerson a dbo:MusicalArtist .
  ?kimPerson foaf:name ""Kim Wilson""@en .
  ?kimPerson dbp:birthName ?realName .
  ?kimPerson dbo:band dbr:The_Fabulous_Thunderbirds .

  # Link the two artists if needed (optional, based on query requirements)
  OPTIONAL { 
    ?person dbo:associatedBand ?band .
  }
  
  BIND(?person AS ?artistName)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
905,14,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary
  dbr:Béla_IV_of_Hungary a dbo:Monarch ;
    dbo:spouse ?parent1, ?parent2 .

  # Children of Béla IV (parents)
  OPTIONAL { ?parent1 dbo:child ?child . }
  OPTIONAL { ?parent2 dbo:child ?child . }

  # Grandchildren of Béla IV
  ?child dbo:child ?grandchild .
  
  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
119,15,train,"Who is the leader of the administration, that is an event, of Anxo Quintana?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?administration a dbo:Government .
  ?administration dbo:headLeader ?leader .
  ?administration dbo:member dbr:Anxo_Quintana .
}
```",2,3,3,2,1,3,3,71,0,0,9,0,0.0,0
816,33,train,Give me the parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  # Identify Eugène Cattin's resource
  dbr:Eug%C3%A8ne_Cattin a dbo:Actor ;
    dbo:film dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg .

  # Find parent information
  OPTIONAL { 
    ?person dbo:parent ?parent .
    ?parent foaf:name ?parentName .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,44,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?countryOfResidence ?administration WHERE {
  # Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .

  # Álvaro Quirós and his country of residence
  dbr:Álvaro_Quirós dbo:nationality dbr:Spain .
  dbr:Álvaro_Quirós dbo:residenceCountry ?countryOfResidence .

  # Spanish Socialist Workers' Party administration
  dbr:Spanish_Socialist_Workers'_Party dbo:administration ?administration .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
871,0,train,Give me the parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Victor_Stanley dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child dbr:Victor_Stanley . }
  OPTIONAL { ?spouse dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
347,6,train,"Give me the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
87,23,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies with Iliza Shlesinger
  ?movieIliza dbo:starring dbr:Iliza_Shlesinger .
  
  # Find actors in those movies
  ?movieIliza dbo:starring ?actor .

  # Find movies with Audrey Hepburn
  ?movieAudrey dbo:starring dbr:Audrey_Hepburn .
  
  # Ensure the actor is also in those movies
  ?movieAudrey dbo:starring ?actor .
}
```",4,8,5,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
769,0,train,Give me the player in Ye Jia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?team a dbo:SoccerClub .
  ?team rdfs:label ""Ye Jia""@en .
  ?player dbo:playsFor ?team ;
          a dbo:Athlete .
  OPTIONAL { ?player foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
311,15,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of Mark Eitzel.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify the producer of ""Lotus"" by R.E.M.
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .
  
  # Step 2: Ensure the producer is an organization, band, and group
  ?producer a dbo:Organization ;
            a dbo:Band ;
            a dbo:MusicalGroup .

  # Step 3: Find Mark Eitzel as a member of this producer
  ?producer dbo:bandMember dbr:Mark_Eitzel .

  # Step 4: Identify associated musical artists with the producer
  ?producer dbp:associatedActs ?associatedArtist1 .
  
  # Step 5: Ensure these associated acts are also related to Mark Eitzel
  OPTIONAL { 
    ?markEitzel a dbo:MusicalArtist ;
                dbp:bandMember ?producer ;
                dbp:associatedActs ?associatedArtist2 .
    
    FILTER (?associatedArtist1 = ?associatedArtist2)
  }
  
  # Step 6: Return the associated musical artist
  BIND(?associatedArtist1 AS ?associatedArtist)
}
ORDER BY ?associatedArtist
LIMIT 10
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
103,58,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shatrughanProfession ?shadowAlterEgo ?dispatchesActor WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?shatrughanProfession .

  # The Shadow (video game) alter ego, which is a comics character
  dbr:The_Shadow_(video_game) dbo:alterEgo ?shadowAlterEgo .
  FILTER EXISTS { ?shadowAlterEgo dbo:type dbr:Comics_character }

  # Actor of Dispatches from Elsewhere
  dbr:Dispatches_from_Elsewhere dbo:actor ?dispatchesActor .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
375,6,train,Give me the parent of Kate Dimbleby and author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?kate a dbo:Person ;
        foaf:name ""Kate Dimbleby""@en .
  
  ?book dbo:author ?parent ;
        dbp:title ""A Picture of Britain""@en .

  ?kate dbo:parent ?parent .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
143,14,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Cynthia Morgan"" .
  ?person dbp:birthName ?birthName .
  FILTER(?birthName = ""Cynthia Morgan"")
  ?person dbo:associatedBandOrMusicalArtist ?artist .
}
```",3,3,4,3,1,3,2,20,0,0,6,0,0.0,0
159,4,train,"Give me the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:dateStart ?startDate .
  ?event dbo:dateEnd ?endDate .
  FILTER (?startDate >= ""1654-01-01""^^xsd:date && ?endDate <= ""1667-12-31""^^xsd:date) .
  
  ?event dbo:participatingMilitaryUnit ?unit .
  ?commander dbo:positionHeld ?office .
  ?commander a dbo:Politician .
  ?commander foaf:name ?name .

  OPTIONAL { ?commander dbp:birthPlace ?birthPlace . }
  OPTIONAL { ?commander dbp:deathPlace ?deathPlace . }

  FILTER EXISTS {
    ?unit dbo:commander ?commander .
  }
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
595,9,train,Give me the spouse of Hillary Clinton and author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?hilda a dbo:Person ;
         dbp:spouse ?spouse .
  
  ?book dbo:author ?spouse ;
        rdfs:label ""Back to Work""@en .

  FILTER (str(?hilda) = str(dbr:Hillary_Clinton))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the person decedent at Switzerland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Switzerland .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,3,28,10,1,896,0.9090909090909091,0.011037527593818985,0.02181025081788441
706,4,train,"Give me the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Dipankar De""@en .
  ?film dbo:starring ?actor ;
        a dbo:Film ;
        dbp:country dbr:India .
  BIND(?film AS ?movie)
}
LIMIT 10
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
531,48,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Find the leader of the Conservative Republican Party (Spain)
  ?person a dbo:Politician ;
          dbo:partyLeaderOf dbr:Conservative_Republican_Party_(Spain) .
  
  # Ensure this person was an office holder in the 2003 Madrid City Council election
  ?officeHolder a dbo:OfficeHolder ;
               dbo:electedDuring dbr:2003_Madrid_City_Council_election ;
               dbo:officeHolderOf ?person .

  # Get the office held by this leader
  ?officeHolder dbo:holdsPublicOffice ?office .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify the song ""Lotus"" by R.E.M.
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Step 2: Check if the producer is an organization and also a band or group
  ?producer a dbo:Organization ;
            (dbo:bandMember|dbo:musicGroup) ?bandOrGroup .

  # Step 3: Find associated musical artists linked to these producers
  ?producer dbp:associatedMusicalArtist ?associatedArtist .
}
```",3,7,4,3,1,3,2,20,0,0,28,0,0.0,0
609,55,train,"Give me the birth place of the author of El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Cecily_Ann_Bell a dbo:Writer .
  dbr:Cecily_Ann_Bell dbo:work dbr:El_Deafo .
  dbr:Cecily_Ann_Bell dbo:birthPlace ?birthPlace .
}

---

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Vince_Gilligan a dbo:Writer .
  dbr:Vince_Gilligan dbo:award ?award .
  dbr:Vince_Gilligan dbo:birthPlace ?birthPlace .
}

---

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Politician .
  ?person dbo:office dbr:Governor_of_Virginia .
  ?person dbo:birthPlace ?birthPlace .
}
LIMIT 1
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
731,2,train,Give me the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  dbr:Edmund_Hakewill-Smith dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
87,10,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Janusz Kamiński's resource in DBpedia
  dbr:Janusz_Kamiński a dbo:Person .
  
  # Find awards associated with Janusz Kamiński
  OPTIONAL { 
    ?award dbo:recipient dbr:Janusz_Kamiński .
  }
  
  # Get the spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
}
```",2,2,3,2,1,2,3,28,1,0,0,1.0,1.0,1.0
816,6,train,Give me the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?photographer WHERE {
  ?photographer a dbo:Photographer .
}
ORDER BY ?photographer
LIMIT 10
```",1,1,2,1,1,3,3,71,0,10,937,0.0,0.0,0
687,40,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Pollio dbo:birthday ?martyBirthday .

  # Find athletes born on the same date as Marty Pollio
  ?athlete a dbo:Athlete .
  ?athlete dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = YEAR(?martyBirthday) && MONTH(?birthday) = MONTH(?martyBirthday) && DAY(?birthday) = DAY(?martyBirthday))

  # Check if the athlete has played in teams with both Pablo Aimar and Sergio Agüero
  ?team dbo:member ?athlete .
  ?team dbo:member dbr:Pablo_Aimar .
  ?team2 dbo:member ?athlete .
  ?team2 dbo:member dbr:Sergio_Agüero .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,53,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentAmy ?parentChildAllan ?actor WHERE {
  # Amy Arbus's parent
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus"" ;
            dbp:parent ?parentAmy .

  # Allan Arbus's child and their parent
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus"" .
  ?childAllan dbp:parent ?allanArbus ;
              dbp:parent ?parentChildAllan .

  # Actor of the movie associated with a person who passed away in Los Angeles
  ?movie a dbo:Film ;
         dbo:actor ?actor .
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Los_Angeles_County,_California ;
            dbp:associatedWith ?movie .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
782,35,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Nicholas Michael Curran"" .
  OPTIONAL { ?person foaf:name ?name . }
  
  ?collaboration dbo:performer ?person ;
                dbo:performer ?artist .
  
  FILTER(?artist != ?person)
  
  OPTIONAL {
    ?artist foaf:name ""The Fabulous Thunderbirds""@en
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
531,9,train,Give me the tenant of Madrid and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?role ?startDate ?endDate WHERE {
  VALUES ?person { dbr:Mariano_Rajoy }
  
  OPTIONAL {
    ?person dbo:office ?office .
    ?office dbo:positionHeldBy ?person ;
            dbo:startDate ?startDate ;
            dbo:endDate ?endDate .
    
    FILTER EXISTS { ?office dbp:name ""Mayor of Madrid"" } # For his role in Madrid
    FILTER EXISTS { ?office dbp:name ""President of the Government of Spain""@en } # For his national office
  }
}
ORDER BY ?role ?startDate
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
143,1,train,Give me the associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Cynthia Morgan"" .
  OPTIONAL { ?person dbp:associatedActs ?artist . }
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
585,2,train,Give me the awardee of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?person .
  ?person dbo:birthPlace dbr:New_York_(state) ;
          foaf:name ?awardee .
}
ORDER BY ?awardee
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,60,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Find Tisha Sterling's parent
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling"" .
  
  ?parent dbo:child ?tisha ;
          dbp:birthName ?birthName .

  # Check if the parent is a member of the ruling party in a landmark at elevation 20.1168
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float .
  ?party dbo:location ?landmark ;
         dbo:member ?parent .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
151,0,train,Give me the entity in Ottoman Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:Ottoman_Empire .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
ORDER BY ?label
LIMIT 10
```",1,1,2,1,1,2,2,9,10,10,237,0.5,0.04048582995951417,0.07490636704119849
143,11,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of Cynthia Morgan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find movies/shows featuring Afeez Oyetoro
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Afeez_Oyetoro .

  # Find Cynthia Morgan's associated musical artist
  ?cynthiaArtist a dbo:MusicalArtist ;
                dbp:associatedWith dbr:Cynthia_Morgan .

  # Find actors in the same movie/show as Afeez Oyetoro
  ?movie dbo:starring ?actor .
  
  # Ensure the actor is also associated with Cynthia Morgan's musical artist
  ?actor dbo:associatedMusicalArtist ?cynthiaArtist .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
595,21,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?office ;
          dbo:author ""An Invitation to the White House""@en .
  ?person foaf:name ""James Baker III""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,57,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find actor in the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .

  # Check if this actor is a parent of someone with profession matching Eugène Cattin
  ?actor dbo:child ?parentOfCattin .
  ?parentOfCattin dbp:profession dbr:Eugène_Cattin .

  # Check if this actor is also a grandparent of Allan Arbus
  ?actor dbo:child ?parentOfAllanArbus .
  ?parentOfAllanArbus dbo:child dbr:Allan_Arbus .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,30,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Robert Lamar Thompson""@en .
  OPTIONAL { ?person foaf:name ?professionalName . }
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",4,5,5,2,3,3,3,71,0,1,3,0.0,0.0,0
158,23,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Russia .
  ?person dbo:deathPlace dbr:Switzerland .
}
LIMIT 10
```",4,6,5,2,2,2,3,28,0,1,36,0.0,0.0,0
531,14,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Politician .
  ?person dbo:party dbr:Partido_Popular_(Spain) .
  ?person dbo:leaderOf dbr:Partido_Popular_(Spain) .
  ?person dbo:holdsOffice ?office .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
706,17,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of Ebrahim Alkazi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?birthPlace WHERE {
  # Find movies featuring Dipankar De and Ebrahim Alkazi
  ?movie dbo:starring dbr:Dipankar_De .
  ?movie dbo:starring dbr:Ebrahim_Alkazi .

  # Get actors from these movies who are Indian
  ?actor dbo:starring ?movie ;
         a dbo:Actor ;
         dbp:nationality dbr:India .

  # Retrieve the birthplace of these actors
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
375,22,train,Give me the war of the person born as Koichirō and entity in the birth place of Yamaza Enjirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person dbp:birthName ""Koichirō"" .
  
  ?yamaza a dbo:Person ;
          dbp:birthPlace ?birthPlaceYamaza .

  ?person dbo:birthPlace ?birthPlaceYamaza .

  OPTIONAL { 
    ?person dbo:participatedInWar ?war .
  }
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
668,3,train,Give me the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""$Pacely"" .
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,4,train,"Give me the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?result <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organisation WHERE {
  ?organisation a dbo:SportsClub .
  ?organisation a dbo:SportsTeam .
  ?organisation a dbo:SoccerClub .
  ?organisation dbo:location dbr:Hong_Kong_C .
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
293,11,train,"Give me the party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  # Assuming the ruling party is identified as ""Democratic Party"" for this example
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Democratic Party""@en .
  
  ?member dbo:memberOf ?party ;
          dbo:residence dbr:Louisiana .

  OPTIONAL { ?member foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",2,2,3,2,1,3,3,71,0,0,21486,0,0.0,0
595,61,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  ?ship a dbo:Ship ;
        dbp:name ""USS Arcadia (ID-1605)"" .
  
  ?owner dbo:owns ?ship .

  # Step 2: Find the commander who is a politician and office holder from Chappaqua, New York
  ?commander a dbo:Politician, dbo:OfficeHolder ;
             dbo:residence dbr:Chappaqua,_New_York ;
             dbo:commandedInWar ?war .

  # Link the owner to the commander through some context (e.g., war)
  ?owner dbo:relatedTo ?commander .
  
  # Step 3: Identify the author of a written work that is a book
  ?author a dbo:Writer ;
          dbo:writtenWork ?work .
  
  ?work a dbo:Book, dbo:WrittenWork .

  # Link the commander to the author through some context (e.g., biography or related works)
  ?commander dbo:relatedTo ?author .
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
119,59,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person dbr:Anxo_Quintana .
  ?person dbo:nationality dbr:Spain .
  ?event dbo:leader ?person .
  ?event a dbo:PoliticalEvent .
  ?country dbo:headOfState ?person ;
           a dbo:CivicOrganisation .
  ?person dbp:residence ?country .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
609,19,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?award dbp:recipient ?awardee .
  ?awardee dbo:birthPlace ?birthPlace .
  FILTER EXISTS { 
    ?award dbp:recipient dbr:Vince_Gilligan .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,30,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
23,21,train,Give me the party of Roy Barreras and entity in Colombia and party of the father of Sofía Petro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royParty ?entityInColombia ?sofiaFatherParty WHERE {
  # Roy Barreras and his political party
  OPTIONAL {
    ?roy a dbo:Person .
    ?roy foaf:name ""Roy Barreras"" .
    ?roy dbp:party ?royParty .
    ?roy dbo:nationality dbr:Colombian .
  }
  
  # Entity in Colombia associated with Roy Barreras
  OPTIONAL {
    ?entityInColombia a dbo:PoliticalEntity ;
                      dbo:member ?roy .
  }

  # Sofía Petro and her father's political party
  OPTIONAL {
    ?sofia a dbo:Person ;
           foaf:name ""Sofía Petro"" .
    ?sofia dbp:father ?father .
    ?father dbp:party ?sofiaFatherParty .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,12,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Find the author of ""A Picture of Britain""
  ?book dbo:author ?author .
  ?book rdfs:label ""A Picture of Britain""@en .

  # Check if this author has children
  ?author dbp:child ?child .

  # Ensure the child is both an artist and a musical artist, and native to London
  ?child a dbo:Artist ;
         a dbo:MusicalArtist .
  ?child dbo:birthPlace dbr:London .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
103,25,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?profession WHERE {
  ?entity a dbo:Agent .
  OPTIONAL { 
    ?entity dbo:alterEgo dbr:The_Shadow . 
    ?entity dbo:occupation ?profession .
    FILTER (CONTAINS(LCASE(STR(?profession)), ""actor"") || CONTAINS(LCASE(STR(?profession)), ""actress""))
  }
}
ORDER BY ?entity
LIMIT 10
```",3,3,4,2,2,3,3,71,0,10,4210,0.0,0.0,0
119,16,train,"Give me the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residenceCountry WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Spanish_nationality .
  ?person dbo:birthPlace dbr:Spain .
  OPTIONAL { ?person dbo:countryResidence ?residenceCountry . }
}
ORDER BY ?residenceCountry
LIMIT 10
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
39,24,train,Give me the band of Bob Thompson (musician) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Bob Thompson"" .
  OPTIONAL { ?person dbp:alias ""The Shadow"" . }
  ?person dbo:memberOfBand ?band .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
347,44,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person dbr:Ferdinand_III,_Holy_Roman_Emperor .
  ?child dbo:parent ?person ;
         dbo:parent ?father .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
737,17,train,"Give me the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .
  
  ?parent dbo:child ?child .
  FILTER EXISTS { ?child a dbo:RoyalFamily . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
943,14,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Na'od is a person with a father and grandfather
  ?naod a dbo:Person ;
        dbp:father ?father .
  
  # The father of Na'od has a father (Na'od's grandfather)
  ?father dbp:father ?grandfather .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch ; 
               dbo:officeHolderOf ?office ;
               foaf:name ?name .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
39,52,train,Give me the professional in the alter ego of The Shadow and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo ?band WHERE {
  OPTIONAL { 
    dbr:The_Shadow dbo:aliasName ?alterEgo .
  }
  
  OPTIONAL {
    dbr:Bob_Thompson_(musician) dbo:memberOfBand ?band .
  }
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerProfession WHERE {
  ?producer a dbo:Person ;
            dbo:occupation ?profession ;
            dbp:worksFor dbr:Coke_Studio_Philippines .
  
  BIND(?profession AS ?producerProfession)
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
58,13,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Linda Bruckheimer's resource
  dbr:Linda_Bruckheimer a dbo:Person .
  
  # Retrieve her birth name to confirm it matches ""Linda Bruckheimer""
  OPTIONAL { dbr:Linda_Bruckheimer dbp:birthName ?birthName . FILTER(?birthName = ""Linda Bruckheimer"") }
  
  # Find the spouse of Linda Bruckheimer
  OPTIONAL { dbr:Linda_Bruckheimer dbo:spouse ?spouse . }
}
```",3,3,4,3,1,3,2,20,1,0,0,1.0,1.0,1.0
203,37,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battleMilitaryForces ?warMilitaryForces WHERE {
  # Retrieve military forces involved in the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryConflicts [
    ?conflict dbp:combatant1 ?combatant1 ;
              dbp:combatant2 ?combatant2
  ] .
  
  BIND(CONCAT(?combatant1, "" vs "", ?combatant2) AS ?battleMilitaryForces)
  
  # Retrieve military conflicts associated with William Bayne
  OPTIONAL {
    dbr:William_Bayne dbo:militaryConflicts [
      ?conflict dbp:combatant1 ?warCombatant1 ;
                dbp:combatant2 ?warCombatant2
    ] .
    
    BIND(CONCAT(?warCombatant1, "" vs "", ?warCombatant2) AS ?warMilitaryForces)
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
119,29,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantSantiago ?residenceCountry ?officeFeijóo WHERE {
  # Find the tenant of Santiago de Compostela
  dbr:Santiago_de_Compostela dbo:mayor ?tenantSantiago .
  
  # Find the residence country of Álvaro Quirós
  dbr:Álvaro_Quirós dbo:nationality ?residenceCountry .

  # Find the office held by Alberto Núñez Feijóo
  dbr:Alberto_Núñez_Feijóo dbo:office ?officeFeijóo .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
89,22,train,Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?child1 dbo:parent dbr:Saw_Shwe_Khet .
  ?child2 dbo:parent dbr:Saw_Min_Hla .
  FILTER(?child1 != ?child2)
  OPTIONAL { 
    ?child1 dbo:predecessor ?predecessor .
  }
  OPTIONAL {
    ?child2 dbo:predecessor ?predecessor .
  }
  FILTER(?predecessor != """")
}
```",3,3,4,2,2,3,3,71,1,3,0,0.25,1.0,0.4
419,7,train,Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Yandamuri Veerendranath's birthplace
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?yvBirthplace .
  
  # Chennupati Jagadish's alma mater
  dbr:Chennupati_Jagadish dbo:almaMater ?cjAlmaMater .

  # Find a common entity
  FILTER (?yvBirthplace = ?entity)
  FILTER (?cjAlmaMater = ?entity)
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
756,43,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Manager of SBV Vitesse for 2020–21 season
  ?vitesseManager a dbo:SportsAgent ;
                 dbo:managedTeam dbr:SBV_Vitesse ;
                 dbp:teamSeason ""2020–21""^^xsd:string .
  
  # Manager of VfL Bochum
  ?bochumManager a dbo:SportsAgent ;
                 dbo:managedTeam dbr:VfL_Bochum .

  # Find the manager who is native to the country that administered West Germany's leader
  OPTIONAL { ?vitesseManager dbp:nationality ?nationality . }
  OPTIONAL { ?bochumManager dbp:nationality ?nationality . }

  # Country that administered West Germany (e.g., France)
  VALUES ?administeringCountry {
    dbr:France
    dbr:United_States
    dbr:Soviet_Union
    dbr:United_Kingdom
  }
  
  FILTER (?nationality = ?administeringCountry)

  # Get the manager's name
  OPTIONAL { ?vitesseManager foaf:name ?managerName . }
  OPTIONAL { ?bochumManager foaf:name ?managerName . }

  FILTER(?managerName != """")
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
258,17,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?establishmentDate ?almaMater ?birthName WHERE {
  # Find Eleonora Menicucci
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci""@en .
  
  # Get her birth name
  OPTIONAL { ?person dbp:birthName ?birthName . }
  
  # Get her alma mater
  OPTIONAL { ?person dbo:almaMater ?university . 
             ?university rdfs:label ?almaMater ;
                        foaf:name ?almaMater .
             FILTER (lang(?almaMater) = ""en"") }

  # Find the establishment date of December 2, 1955
  OPTIONAL { ?person dbo:birthday ""1955-12-02""^^xsd:date . 
             BIND(""1955-12-02"" AS ?establishmentDate) }
}
```",4,5,5,3,2,3,2,20,0,3,1,0.0,0.0,0
557,61,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor of ""Johnny Doughboy"" and their producer
  ?actor1 dbo:actedIn dbr:Johnny_Doughboy .
  ?actor1 dbo:producedBy ?producer .

  # Find the actor of ""High Society Blues"" and their producer
  ?actor2 dbo:actedIn dbr:High_Society_Blues .
  ?actor2 dbo:producedBy ?producer .

  # Ensure the producers are the same for both movies
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
412,12,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?war ?athensEntity WHERE {
  VALUES ?person { 
    dbr:Konstantinos_Ventiris 
    dbr:Napoleon_Zervas
  }
  
  OPTIONAL {
    ?person dbo:memberOf ?organization .
    ?organization dbo:member ?individual .
    ?individual dbo:spouseOrPartner ?war .
    ?war a dbo:MilitaryConflict .
  }

  OPTIONAL {
    ?athensEntity a dbo:Place ;
                  dbp:location dbr:Athens .
    ?person dbo:placeOfBirth ?birthPlace .
    FILTER(?birthPlace = ?athensEntity)
  }
}
```",3,3,4,1,3,2,3,28,0,2,1,0.0,0.0,0
782,51,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Eric Clapton's band members
  ?claptonBandMember dbo:memberOf ?band .
  ?claptonBandMember foaf:name ""Eric Clapton"" .

  # Nick Curran as a persona of a musical artist
  ?nickCurranPerson dbp:birthName ""Nick Curran"" .
  ?nickCurranPerson a dbo:MusicalArtist .

  # Associated musical artist of Nick Curran
  ?associatedArtist dbo:associatedBandMember ?nickCurranPerson .
  
  # Band of the associated musical artist
  ?associatedArtist dbo:memberOf ?band .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
159,37,train,Give me the reference to the writer of the work of George Ducas and commander in Great Turkish War.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf ?war .
  ?war rdfs:label ""Great Turkish War""@en .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse .
    ?spouse foaf:name ""George Ducas""@en .
  }
  
  OPTIONAL {
    ?person dbo:author ?work .
    ?work dbo:creator ?writer .
  }

  FILTER (lang(?war) = 'en')
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,59,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania's father who is royalty
  ?philip a dbo:Person ;
          dbp:father ?father .
  FILTER (CONTAINS(LCASE(?father), ""royalty"")) .

  # Step 2: Identify the grandfather (father's father)
  ?father dbp:father ?grandfather .
  FILTER (CONTAINS(LCASE(?grandfather), ""royalty"")) .

  # Step 3: Identify Maria of Bytom's spouse
  dbr:Maria_of_Bytom dbp:spouse ?mariaSpouse .

  # Step 4: Identify the father of Maria's spouse who is royalty
  ?mariaSpouse dbp:father ?mariaSpouseFather .
  FILTER (CONTAINS(LCASE(?mariaSpouseFather), ""royalty"")) .

  # Step 5: Identify the grandfather of Maria's spouse (father's father)
  ?mariaSpouseFather dbp:father ?mariaGrandfather .
  FILTER (CONTAINS(LCASE(?mariaGrandfather), ""royalty"")) .

  # Find the spouse of Philip's grandfather
  ?grandfather dbo:spouse ?spouse .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
297,5,train,"Give me the entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceCountry WHERE {
  dbr:Little_Hat_Jones dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Place ;
              dbo:country ?birthPlaceCountry .
}
```",2,3,3,2,1,2,2,9,0,1,63421,0.0,0.0,0
213,1,train,Give me the country of Cat Country (novel).,SELECT ?result WHERE { <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  dbr:Cat_Country dbo:author ?author .
  dbr:Cat_Country dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
58,15,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person1 dbp:birthName ""Linda J. Bruckheimer""@en .
  ?person2 dbo:spouse ?person1 ;
           dbp:name ""Jerry Bruckheimer""@en .
  OPTIONAL { ?film dbo:producer ?person2 . }
  FILTER EXISTS { ?film rdfs:label ""12 Strong""@en }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
816,1,train,Give me the parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Amy_Arbus dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child dbr:Amy_Arbus . }
  OPTIONAL { ?spouse dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
472,11,train,Give me the administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor ?administration WHERE {
  ?entity a dbo:AdministrativeRegion .
  ?entity dbo:wikiPageRedirects dbr:Duchy_of_Schleswig .
  
  OPTIONAL { 
    ?entity dbo:mayor ?mayor .
    ?mayor dbp:office ?office .
    ?office dbo:administrativeUnit ?administration .
  }
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
159,50,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?tvShow a dbo:TelevisionSeries .
  ?tvShow dbo:subject dbr:Jean_Baptiste,_Comte_d'Arco .
  ?tvShow dbo:relatedEvent ?event .
  ?event a dbo:SocietalEvent .

  ?character dbo:roleName ?commander .
  ?character dbo:inMedia ?tvShow .

  OPTIONAL {
    ?work dbo:author dbr:George_Ducas .
    ?work dbo:subject ?tvShow .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
633,9,train,"Give me the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine a dbo:Person ;
    dbo:child ?child .

  # The child must be royalty
  ?child a dbo:Royalty .

  # Find the parent who is both royalty and noble
  ?parent dbo:child ?child .
  ?parent a dbo:Royalty, dbo:Noble .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
737,31,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Archduchess Helena of Austria and her spouse Albrecht, Duke of Württemberg
  ?helena a dbo:Person ;
          foaf:name ""Helena, Archduchess of Austria"" ;
          dbp:spouse ?albrecht .
  
  ?albrecht a dbo:Person ;
           foaf:name ""Albrecht, Duke of Württemberg"" .

  # Their children who are royalties
  ?child dbo:parent ?helena ;
         dbo:parent ?albrecht ;
         a dbo:Royalty .

  # Find the predecessor of one of those children
  ?predecessor dbo:successor ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,34,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Roger II of Sicily and Elvira of Castile
  ?roger a dbo:Person ;
         foaf:name ""Roger II of Sicily""@en .
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile, Queen of Sicily""@en .

  # Their child
  ?child dbo:parent ?roger ;
         dbo:parent ?elvira .

  # The grandchild (child of the above child)
  ?grandchild dbo:parent ?child .
  
  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
80,38,train,Give me the actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find actors associated with T.I.'s album ""Urban Legend""
  ?album a dbo:Album .
  ?album dbp:title ""Urban Legend"" .
  ?album dbo:artist dbr:T.I. .

  OPTIONAL { 
    ?album dbo:contributor ?person .
    ?person a dbo:Actor .
    BIND(?person AS ?actor)
  }

  # Find professionals associated with the alter ego ""The Shadow""
  OPTIONAL {
    ?person a dbo:Actor .
    ?person dbp:alias ""The Shadow"" .
    FILTER EXISTS { ?person dbo:profession dbr:Acting }
    BIND(?person AS ?actor)
  }

  # Combine results
  VALUES ?actor { ?actor }
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
628,6,train,Give me the birth name of Bobby Shmurda.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/Bobby_Shmurda>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Bobby_Shmurda a dbo:MusicalArtist .
  OPTIONAL { dbr:Bobby_Shmurda dbp:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,24,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName ?alterEgo WHERE {
  # Baeda Maryam I's father
  dbr:Baeda_Maryam_I dbo:parent dbr:?:?father .
  ?father foaf:name ?fatherName .

  # The Shadow's alter ego
  dbr:The_Shadow dbp:alterEgo ?alterEgoResource .
  ?alterEgoResource foaf:name ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
140,10,train,"Give me the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  ?deathPlace a dbo:Settlement .

  ?party a dbo:PoliticalParty ;
        dbo:location ?deathPlace ;
        dbp:isOrganization true .

  OPTIONAL { 
    ?party dbp:rulingParty ""true""^^xsd:boolean .
  }

  BIND(?party AS ?rulingParty)
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
375,4,train,"Give me the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?location a dbo:Settlement .
  ?location dbo:country dbr:England .
}
ORDER BY ?location
LIMIT 10",1,3,2,1,1,3,2,20,0,10,6,0.0,0.0,0
687,18,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team WHERE {
  VALUES (?person ?label) { 
    (dbr:Juan_Carlos_Molina_(footballer) ""Juan Carlos Molina"") 
    (dbr:Sergio_Agüero ""Sergio Agüero"")
    (dbr:Pablo_Aimar ""Pablo Aimar"")
  }
  
  ?person dbo:birthName ?label .
  ?player dbo:playedForTeam ?team .
  FILTER (?player = ?person)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
103,52,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?show a dbo:TelevisionShow .
  ?show dbo:title ""Monty Python's Flying Circus""@en .
  
  ?movie a dbo:Film ;
         dbo:basedOn dbr:Monty_Python's_Flying_Circus .

  ?actor dbo:profession dbo:Actor ;
         dbo:birthName ""Richard Grant Esterhuysen""^^xsd:string ;
         dbo:actedIn ?show .

  OPTIONAL {
    ?actor dbo:birthName ""Shatrughan Sinha""^^xsd:string .
  }
}
```",6,7,7,3,3,3,3,71,0,0,13,0,0.0,0
492,21,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film) and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?deathPlace WHERE {
  # Carolyn Jones
  { 
    dbr:Caryn_Jones dbo:birthName ?birthName .
    OPTIONAL { dbr:Caryn_Jones dbo:deathPlace ?deathPlace . }
    BIND(""Carolyn Jones"" AS ?personName)
  }

  UNION

  # Actor of Aladdin (1958 film)
  {
    ?actor dbo:starringIn dbr:Aladdin_(film) .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
    ?actor foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""steve""))
    BIND(?name AS ?personName)
  }

  UNION

  # Reed Howes
  {
    dbr:Reed_Howes dbo:deathPlace ?deathPlace .
    OPTIONAL { dbr:Reed_Howes foaf:name ?name . }
    BIND(""Reed Howes"" AS ?personName)
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,3,train,Give me the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  dbr:Frédéric_Bouraly a dbo:Person .
  OPTIONAL { dbr:Frédéric_Bouraly dbo:occupation ?profession . }
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
687,17,train,"Give me the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Get Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthday .

  # Find individuals who are both soccer players and managers
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbo:birthday ?birthday .

  # Filter by matching birthdays
  FILTER (?birthday = ?marceloSarmientoBirthday)
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
375,2,train,Give me the war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Hashiba Hidekatsu""@en .
  OPTIONAL { ?person dbo:nationality dbr:Japan . }
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .
  ?event dbp:name ?war .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
742,10,train,"Give me the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?result <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?resident WHERE {
  ?region dbo:timeZone dbr:Eastern_European_Time .
  ?region dbo:hasPart ?settlement .
  ?settlement a dbo:Settlement .
  OPTIONAL { ?settlement dbo:populationTotal ?population . }
  ?resident dbo:residence ?settlement .
}
ORDER BY ?settlement
LIMIT 10
```",2,3,3,2,1,3,2,20,0,0,159,0,0.0,0
585,5,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?name WHERE {
  ?person a dbo:Actress .
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,19241,0,0.0,0
633,0,train,Give me the spouse of Renée of Bourbon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Renée_of_Bourbon dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
263,11,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?parent WHERE {
  # Identify Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
  
  # Find the parent of each child (which should be Claude himself)
  OPTIONAL { ?child dbo:parent ?parent . }
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
595,3,train,"Give me the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bookTitle WHERE {
  ?author a dbo:Writer .
  ?author foaf:name ""Hillary Clinton"" .
  ?work dbo:author ?author ;
        a dbo:Book .
  ?work rdfs:label ?bookTitle .
  FILTER(LANG(?bookTitle) = 'en')
}
ORDER BY ?bookTitle
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
595,0,train,Give me the spouse of Hillary Clinton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Hillary_Clinton dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,33,train,"Give me the associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?anthology dbo:artist dbr:The_Live_Anthology .
  ?anthology dbo:writer ?writer .
  
  ?writer a dbo:MusicalArtist ;
          dbo:associatedBandOrMusicalGroup ?associatedArtist .

  OPTIONAL { 
    ?associatedArtist dbp:profession ""Writer""@en .
  }

  FILTER EXISTS {
    ?relatedEntity dbo:associatedWith dbr:$pacely .
    ?relatedEntity dbo:artist ?associatedArtist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
943,11,train,"Give me the child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?yeshaqI a dbo:Monarch ;
           foaf:name ""Yeshaq I""@en ;
           dbp:spouse ?spouse .
  
  ?child dbo:parent ?yeshaqI ;
         a dbo:Monarch .

}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
399,2,train,Give me the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?currentName WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Emilia Yancheva Valeva""@en .
  OPTIONAL { ?person foaf:name ?currentName . }
}
ORDER BY ?currentName
LIMIT 10
```",1,1,2,1,1,2,2,9,0,2,1,0.0,0.0,0
816,28,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Doon Arbus and parent of Amy Arbus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Herschel_Bernardi .

  ?person dbo:spouseOrPartner ?parent1, ?parent2 .
  ?parent1 foaf:name ""Doon Arbus""@en .
  ?parent2 foaf:name ""Amy Arbus""@en .

  ?movie dbo:starring ?actor .
  ?actor dbo:spouseOrPartner ?person .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,6,train,Give me the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?album WHERE {
  dbr:What_You_Know_(T.I._song) a dbo:Song .
  OPTIONAL { dbr:What_You_Know_(T.I._song) dbo:album ?album . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
263,19,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual ?parent ?birthPlaceRegion ?birthPlaceCountry WHERE {
  # Mary Elphinstone, Lady Elphinstone
  VALUES ?mary { dbr:Mary_Elphinstone_Lady_Elphinstone }
  
  # Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  VALUES ?patrick { dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne }

  # William Gayner
  VALUES ?william { dbr:William_Gayner }

  # Find parents for Mary Elphinstone, Lady Elphinstone and Patrick Bowes-Lyon
  {
    ?individual ?parent .
    FILTER (?individual = ?mary || ?individual = ?patrick)
    BIND(?individual AS ?person)
  }
  
  UNION
  
  # Find birthplace region and country of William Gayner
  {
    ?william dbo:birthPlace ?birthPlace .
    OPTIONAL { ?birthPlace dbo:country ?birthPlaceCountry . }
    OPTIONAL { ?birthPlace dbo:region ?birthPlaceRegion . }
    
    BIND(?william AS ?person)
    BIND(NULL AS ?parent) # No parent information needed for this part
  }
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
871,12,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
225,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Japan .
}
LIMIT 10
```",1,1,2,1,1,3,2,20,1,9,8915,0.1,0.00011215791834903544,0.0002240645305848084
375,18,train,Give me the war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  VALUES ?person { 
    dbr:Toyotomi_Hidenaga 
    dbr:Toyotomi_Hideyori 
  }
  
  ?war dbo:participant ?person .
  OPTIONAL { ?war dbo:description ?description . }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
159,7,train,Give me the military force of Battle of Vienna.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  VALUES ?battle { dbr:Battle_of_Vienna_(1683) }
  
  ?battle dbo:participatingMilitaryForce ?force .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
414,2,train,Give me the award of Rainer Weiss.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  dbr:Rainer_Weiss dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
198,10,train,"Give me the war of Amasa Tracy and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?charlestonEntity WHERE {
  # Find Amasa Tracy and his involvement in wars
  ?tracy a dbo:Person ;
         foaf:name ""Amasa Tracy"" ;
         dbo:memberOf ?militaryOrganization .
  
  ?militaryOrganization dbo:participatedIn ?war .

  # Find entities related to Charleston, SC during the war period
  ?charlestonEntity a dbo:Event ;
                   dbo:location dbr:Charleston,_South_Carolina ;
                   dbo:timePeriod ?timePeriod .

  FILTER (?war = ?charlestonEvent)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
871,54,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Person .
  ?person dbp:honours ""Commander of the Royal Victorian Order""@en .
  ?person dbp:child ?arthurStanley .
  ?arthurStanley foaf:name ""Arthur Stanley (politician)""@en .

  ?person dbp:parent ?parent .

  ?derby a dbo:Person ;
         foaf:name ""Edward Stanley, 17th Earl of Derby""@en ;
         dbo:child ?child .

  ?child dbo:parent ?parent .

  FILTER(?parent != ?person)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
295,7,train,"Give me the writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?writer WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Apache Indian""@en .
  
  ?work dbo:artist ?person ;
        a dbo:MusicalWork .

  OPTIONAL { 
    ?work dbo:composer ?writer .
  }
}
ORDER BY ?work
LIMIT 10
```",2,3,3,2,1,3,2,20,0,1,1,0.0,0.0,0
595,32,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?spouse WHERE {
  # Identify the book ""An Invitation to the White House""
  ?book a dbo:Book .
  ?book dbp:title ""An Invitation to the White House""@en .

  # Find Bill Clinton as the author
  ?book dbo:author dbr:Bill_Clinton .

  # Get Bill Clinton's spouse who is also a politician and office holder
  OPTIONAL {
    ?billClinton dbo:spouse ?spouse .
    ?spouse a dbo:Politician ;
            dbo:officeHolder true .
  }
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
103,41,train,"Give me the professional in  and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shatrughanProfession ?commonActor WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?shatrughanProfession .

  # Richard E. Grant's movies and TV shows
  ?grantMovie a dbo:Film ;
              dbo:starring [dbo:actor dbr:Richard_E._Grant] .
  
  ?grantTvShow a dbo:TelevisionSeries ;
               dbo:starring [dbo:actor dbr:Richard_E._Grant] .

  # Common actor in both movie and TV show
  ?commonActor dbo:starring [
    dbo:film ?grantMovie ;
    dbo:televisionSeries ?grantTvShow
  ] .
}
```",5,6,6,2,3,3,3,71,0,0,13,0,0.0,0
353,36,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Constance of Burgundy
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Spouse is royalty
  ?spouse a dbo:Monarch .

  # Children of the spouse (children of Constance)
  ?spouse dbo:child ?child .

  # Grandchildren of Constance (children of her children)
  ?child dbo:child ?grandchild .

  # Ensure grandchild is also a child of Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?grandchild .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
23,2,train,Give me the party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Gustavo_Petro dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
89,1,train,Give me the spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Saw Shwe Khet"" .
  OPTIONAL { ?person dbp:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
531,56,train,"Give me the office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeMarianoRajoy ?residenceAlbertoRuizGallardon ?partyLeaderOffice WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:positionHeld ?marianorajoyPosition .
  ?marianorajoyPosition dbp:title ?officeMarianoRajoy .

  # Alberto Ruiz-Gallardón's residence during his office
  dbr:Alberto_Ruiz-Gallardón dbo:positionHeld ?albertoruizgallardonPosition .
  ?albertoruizgallardonPosition dbp:residence ?residenceAlbertoRuizGallardon .

  # Political party of Miguel Maura
  dbr:Miguel_Maura dbo:memberOfParty ?miguelmauraParty .

  # Leader of the political party associated with Miguel Maura
  ?partyLeader a dbo:Politician ;
               dbo:positionHeld ?leaderPosition .
  ?leaderPosition dbp:title ""Leader"" ;
                  dbo:memberOfParty ?miguelmauraParty .
  ?leaderPosition dbp:office ?partyLeaderOffice .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,20,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Myat Hpone Pyo
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .

  # Find the father of Myat Hpone Pyo
  ?father dbo:spouse ?myatHponePyo .
  
  # Identify Saw Min Hla as the spouse of the father
  ?sawMinHla dbo:spouse ?father ;
            foaf:name ""Saw Min Hla""@en .

  # Find the child of Saw Min Hla and the father (who is royalty)
  ?child dbo:parent ?sawMinHla ;
         dbo:parent ?father .
  
  # Ensure the child is a royalty
  ?child a dbo:Royalty .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
39,32,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?profession WHERE {
  VALUES (?name) { (dbr:Sam_Concepcion dbr:The_Shadow) }
  
  ?person dbo:name ?name .
  OPTIONAL { 
    ?person dbo:occupation ?profession .
  }
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
68,6,train,"Give me the father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Isabella_of_Austria dbo:parent ?father .
  
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child .

  FILTER (?father = ?child)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
737,16,train,Give me the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Find Alexander of Württemberg
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbp:birthday ?birthday .
  
  FILTER (YEAR(?birthday) = 1804 && MONTH(?birthday) <= 12)
  
  # Find his children
  ?child dbo:parent ?alexander ;
         a dbo:Person .

  # Find the grandchildren
  ?grandchild dbo:parent ?child ;
              a dbo:Person .
}
ORDER BY ?grandchild
LIMIT 10
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
39,29,train,Give me the professional in the alter ego of The Shadow and professional in Singer and band of Bob Thompson (musician).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  ?person a dbo:FictionalCharacter .
  ?person foaf:name ""The Shadow"" .
  OPTIONAL { ?person dbp:alias ?alias . }
  OPTIONAL { ?person dbp:profession ?professionalName . }
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Bob Thompson"" .
  OPTIONAL { ?person dbp:profession ?professionalName . }
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",4,4,5,2,3,3,3,71,0,0,3,0,0.0,0
871,25,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Identify Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  
  # Identify Frederick Stanley, 16th Earl of Derby as his child
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley, 16th Earl of Derby""@en ;
             dbp:father ?parent .

  # Ensure the parent is also the father of Edward Stanley, 17th Earl of Derby
  ?edward dbp:father ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
398,1,train,Give me the player in Aleksandr Filimonov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?sport WHERE {
  ?person a dbo:Athlete .
  ?person foaf:name ""Aleksandr Filimonov"" .
  OPTIONAL { ?person dbo:sport ?sport . }
}
```",1,1,2,1,1,3,2,20,0,0,17,0,0.0,0
89,44,train,"Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find the child of Saw Shwe Khet and Saw Min Hla
  ?child1 dbo:parent dbr:Saw_Shwe_Khet .
  ?child2 dbo:parent dbr:Saw_Min_Hla .

  FILTER (?child1 = ?child2) # Ensure it's the same person

  # Find Myat Hpone Pyo's father and his spouse (Myat Hpone Pyo's mother)
  ?myatHponePyo dbp:father ?father .
  ?mother dbo:spouse ?father .

  # Identify the predecessor of Myat Hpone Pyo's mother in royalty
  ?predecessor dbo:successor ?mother .
  FILTER (?predecessor a dbo:Monarch) # Ensure it is a royalty

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,50,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find wars involving William Bayne
  ?war a dbo:MilitaryConflict ;
      dbo:participatedIn ?bayneEvent .
  
  ?bayneEvent dbo:agent dbr:William_Bayne ;
              dbo:militaryForce ?militaryForce .

  # Find events involving Robert Calder
  ?calderEvent a dbo:Event, dbo:SocietalEvent ;
               dbo:agent dbr:Robert_Calder ;
               dbo:militaryForce ?militaryForce .
  
  OPTIONAL { 
    ?war dbo:participatedIn ?calderEvent . 
  }
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
531,46,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenant WHERE {
  # Find the leader of the 2003 Madrid City Council election
  ?person1 a dbo:OfficeHolder ;
           dbo:office dbr:Mayor_of_Madrid ;
           dbo:electedDuring dbr:Madrid_City_Council_election,_2003 .
  
  # Find the commander in the Central African Republic Civil War
  ?person2 a dbo:OfficeHolder, dbo:Politician ;
           dbo:office dbr:Commander_in_the_Central_African_Republic_Civil_War .

  # Get the residences of these individuals
  OPTIONAL { ?person1 dbo:residence ?residence1 . }
  OPTIONAL { ?person2 dbo:residence ?residence2 . }

  # Find tenants of these residences
  OPTIONAL { ?residence1 dbo:tenant ?tenant . }
  OPTIONAL { ?residence2 dbo:tenant ?tenant . }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
58,3,train,Give me the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Linda Sue Cobb"" .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,Give me the war of Hashiba Hidekatsu and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?opponent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Toyotomi Hideyoshi""@en .
  
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .

  ?event dbo:place dbr:Japan ;
         dbp:name ?war .

  OPTIONAL { 
    ?event dbo:opponent ?opponent .
  }
}
ORDER BY ?war
LIMIT 10
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
737,43,train,"Give me the child of Archduchess Margarete Sophie of Austria and child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Archduchess Margarete Sophie of Austria and her child
  ?margareteSophie a dbo:Person ;
                  foaf:name ""Margarete Sophie, Archduchess of Austria"" ;
                  dbp:spouse ?husband .
  
  ?husband dbp:child ?firstChild .

  # Alexander of Württemberg and his descendants
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbp:child ?secondChild .

  ?secondChild dbp:child ?thirdChild .
  ?thirdChild dbp:child ?fourthChild .

  # Predecessor relationship to Carl, Duke of Württemberg
  ?predecessor a dbo:Person ;
               foaf:name ""Carl, Duke of Württemberg"" ;
               dbo:predecessor ?child .

  FILTER (?firstChild = ?fourthChild)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
119,6,train,Give me the entity in Poland and war of Alexander Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?location WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Alexander Suvorov""@en .
  
  ?war dbo:participatedIn ?person ;
       dbo:place dbr:Poland .

  OPTIONAL { 
    ?war dbp:location ?location .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
816,20,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?person a dbo:Actor ;
          dbo:profession dbo:Photographer ;
          dbo:film dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg .
  
  OPTIONAL { 
    ?person dbp:parents ?parent . 
    ?parent foaf:name ?parentName .
  }
}
LIMIT 10
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,57,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?birthName WHERE {
  # Uncle Murda's band members
  ?uncleMurda a dbo:MusicalArtist ;
              foaf:name ""Uncle Murda"" .
  
  ?bandMember dbo:memberOfBand ?uncleMurda .

  # Musical artist from Florida with birth name
  ?artist a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida ;
          dbp:birthName ?birthName .

  # Region and state related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:location dbr:Puerto_Rico ;
         dbo:recipient ?person .
  
  ?person dbo:nativeCountry dbr:United_States ;
          foaf:name ?bandMember .

  # Ensure the person is the same across all conditions
  FILTER (?bandMember = ?artist && ?bandMember = ?person)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the war of Alexander Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  dbr:Aleksandr_Suvorov a dbo:MilitaryPerson .
  ?event dbo:agent dbr:Aleksandr_Suvorov ;
         a dbo:MilitaryConflict .
  BIND(?event AS ?war)
}
ORDER BY ?war
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,28,0,0.0,0
531,52,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?miguelOffice ?commanderOffice ?tenantResidence WHERE {
  # Office of Miguel Maura
  ?miguel a dbo:Person ;
          foaf:name ""Miguel Maura"" ;
          dbo:office ?miguelOffice .

  # Office of the Commander in the Central African Republic Civil War
  ?commander a dbo:Person ;
             dbo:role ?commanderRole .
  ?conflict a dbo:Conflict ;
            dbo:place dbr:Central_African_Republic_Civil_War ;
            dbo:participant ?commander .
  FILTER(CONTAINS(LCASE(?commanderRole), ""commander""))

  # Tenant of the Residence of the Leader in 2003 Madrid City Council Election
  ?leader a dbo:Person ;
          dbo:office ?leaderOffice .
  ?election a dbo:Election ;
            dbo:date ?date ;
            dbo:place dbr:Madrid_City_Council_Election_2003 .
  FILTER(YEAR(?date) = 2003)
  ?residence a dbo:Residence ;
             dbo:tenant ?tenantResidence ;
             dbo:owner ?leader .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
905,11,train,"Give me the spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Find his father
  ?father dbo:child ?philip .

  # Retrieve the spouse of that father
  ?father dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
412,3,train,Who is the leader of National Party of Greece?,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  dbr:National_Party_of_Greece dbo:leader ?person .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
270,8,train,"Give me the predecessor of Ada Watson and person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor ?decedent WHERE {
  # Find Ada Watson's predecessor
  ?ada a dbo:Person ;
       foaf:name ""Ada Watson"" .
  
  OPTIONAL { 
    ?role dbo:successor ?succeededBy ;
          dbo:predecessor ?predecessor .
    FILTER(?succeededBy = ?ada)
  }
  
  # Find Mark Tournier's birthplace
  ?mark a dbo:Person ;
        foaf:name ""Mark Tournier"" .
  ?mark dbo:birthPlace ?birthPlace .

  # Ensure the birth place is a settlement
  ?birthPlace a dbo:Settlement .

  # Find decedent at this birth place
  ?decedent a dbo:Person ;
            dbo:deathPlace ?deathPlace .
  FILTER(?deathPlace = ?birthPlace)
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
119,9,train,Give me the tenant of Spain and office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  dbr:Alberto_Núñez_Feijóo a dbo:Politician .
  OPTIONAL { dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?position . }
  OPTIONAL { ?position dbp:title ?office . }
}
```",2,2,3,1,2,3,3,71,0,621671,1,0.0,0.0,0
492,4,train,Give me the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film foaf:name ""Color Me Dead""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
293,1,train,Give me the spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Roger_Pryor (dbo:spouse|foaf:partner) ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
353,61,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Constance of Burgundy and her spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Spouse's child
  ?spouse dbo:child ?child .

  # Child's child (the person we are interested in)
  ?child dbo:child ?childOfChild .

  # Reference royalty and office holder related to William I
  ?reference a dbo:Royalty ;
             dbo:officeHolder true ;
             dbo:relatedTo dbr:William_I_of_Aquitaine .
  
  # Reference's child
  ?reference dbo:child ?referenceChild .

  # The person we are interested in is the father of the reference's child
  ?childOfChild dbo:parent ?referenceChild .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
687,50,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:sportManagerTeam ?team .
  
  OPTIONAL { ?person dbo:managerOf ?managedTeam . }
  
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?person .

}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
140,11,train,"Give me the party member of Republican Party (United States) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Check if the person is a member of the Republican Party
  ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) .

  # Find wars associated with George Pickett
  ?pickettEvent dbo:agent dbr:George_Pickett ;
                a dbo:MilitaryConflict .
  
  # Check if the person was a commander in those wars
  ?person dbo:commanderOf ?pickettEvent .
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
816,36,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Find the actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?person .
  
  # Step 2: Find the spouse of Mariclare Costello
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 3: Determine the child of that spouse
  ?spouse dbo:child ?child .

  # Step 4: Identify the parent of that child (which should be the actor)
  ?child dbo:parent ?actor .
  
  FILTER (?person = ?actor) # Ensure the person is both the actor and the parent
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
706,12,train,Give me the birthplace of Ebrahim Alkazi and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Ebrahim_Alkazi dbo:birthPlace ?birthPlace .
}

SELECT ?birthPlace WHERE {
  dbr:Utpal_Dutt dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
78,19,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?associatedArtist WHERE {
  # Find Lemmy Kilmister and his associated musical artist
  VALUES (?birthName) { ""Stuart Mcbeath Tosh"" }
  ?lemmy a dbo:MusicalArtist .
  ?lemmy dbp:birthName ?birthName .
  OPTIONAL { ?lemmy dbo:associatedBand dbr:Motörhead . }
  
  # Find Billy Lyall and his associated musical artist
  VALUES (?lyallBirthName) { ""Billy Lyall"" }
  ?billy a dbo:MusicalArtist .
  ?billy dbp:birthName ?lyallBirthName .
  OPTIONAL { ?billy dbo:associatedBand dbr:The_Alvin_Parsons_Project . }

  # Return the associated artists
  {
    SELECT DISTINCT ?person WHERE {
      ?lemmy dbo:associatedBand ?band .
      ?band dbo:member ?person .
    }
  } UNION {
    SELECT DISTINCT ?person WHERE {
      ?billy dbo:associatedBand ?band .
      ?band dbo:member ?person .
    }
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
293,15,train,Give me the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation = ""20.1168""^^xsd:float) .
  
  ?landmark dbo:locatedInCountry ?country .

  OPTIONAL { 
    ?country dbp:rulingParty ?rulingParty .
  }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
198,29,train,"Give me the entity in Charleston, South Carolina and force of the awardee of Gillmore Medal and war of Amasa Tracy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  
  # Connection to Charleston, South Carolina
  ?person dbo:birthPlace dbr:Charleston,_South_Carolina .

  # Gillmore Medal awardee
  ?award dbo:recipient ?person ;
         dbp:name ""Gillmore Medal"" .
  
  # War involvement with Amasa Tracy
  ?war dbo:participant ?person ;
       dbo:participatedInWar dbr:American_Civil_War ; # Assuming the war is American Civil War
       dbo:commander ?tracy .
  ?tracy foaf:name ""Amasa Tracy"" .

  # Get the name of the person
  ?person foaf:name ?name .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
386,5,train,Give me the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Golden Sword for Bravery""@en .
  ?recipient dbo:recipientOf ?award .
  ?recipient foaf:name ?awardee .
}
ORDER BY ?awardee
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
39,14,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Robert Lamar Thompson"" .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
769,12,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in Ye Jia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?manager a dbo:SoccerManager ;
           dbo:teamManaged dbr:Hong_Kong_C_Team .
  
  ?manager a dbo:SportsManager .

  ?yeJia a dbo:Team ;
         dbo:member ?player .

  ?yeJia dbp:name ""Ye Jia""@en .

  FILTER(?manager = ?player)
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
225,3,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?timeZone a dbo:TimeZone .
  ?timeZone dbo:name ""Japan Standard Time"" .
  ?timeZone dbo:country dbr:Japan .
  ?timeZone dbo:region ?region .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,55,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shadowProfessionalName ?wayneProfessionalName ?concepcionProfessionalName WHERE {
  # The Shadow
  ?person1 a dbo:MusicalArtist .
  ?person1 foaf:name ""The Shadow"" .
  ?person1 foaf:name ?shadowProfessionalName .

  # Robert Lamar Thompson (Lil Wayne)
  ?person2 a dbo:MusicalArtist .
  ?person2 dbp:birthName ""Robert Lamar Thompson""@en .
  ?person2 foaf:name ?wayneProfessionalName .

  # Sam Concepcion
  ?person3 a dbo:MusicalArtist .
  ?person3 foaf:name ""Sam Concepcion"" .
  ?person3 foaf:name ?concepcionProfessionalName .
}
```",6,7,7,2,3,3,3,71,0,0,4,0,0.0,0
756,39,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  ?person a dbo:SportsManager .
  ?person dbp:birthday ""1968-08-26""^^xsd:date .
  ?person dbo:nationality dbr:Germany_West .

  ?teamSeason a dbo:SoccerClubSeason ;
              dbo:manager ?person .

  ?person foaf:name ?managerName .
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
782,34,train,Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickCurranArtist ?kimWilsonBand ?realName WHERE {
  # Nick Curran's associated musical artist
  OPTIONAL { 
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranArtist .
  }
  
  # Kim Wilson's band and its real name
  dbr:Kim_Wilson dbo:band ?kimWilsonBand .
  ?kimWilsonBand dbp:realName ?realName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
628,0,train,Give me the band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Uncle Murda"" .
  OPTIONAL { 
    ?collaboration dbo:artist dbr:Uncle_Murda ;
                   dbo:member ?bandMember .
  }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
103,55,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of Shatrughan Sinha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Paul McGann"" .
  
  # Check for involvement in the TV adaptation of ""Withnail and I""
  ?film dbo:title ""Withnail and I (TV series)"" ;
        dbo:starring ?person .

  # Richard E. Grant's involvement
  ?film dbo:starring dbr:Richard_E._Grant .
  
  OPTIONAL {
    # Check for any connection to The Shadow, though indirect
    ?shadowCharacter dbo:name ""The Shadow"" ;
                    dbo:portrayedBy ?actor .
    ?actor foaf:name ""Alec Newman"" .
  }
}",6,7,7,2,3,3,3,71,0,0,13,0,0.0,0
492,9,train,Give me the death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Sal_Mineo 
    dbr:Carolyn_Jones 
  }
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
595,34,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Hillary Clinton's book
  dbr:Hillary_Clinton dbo:author dbr:Book_Title .

  # Step 2: Find an author who is a politician and office holder
  ?author a dbo:Author ;
          dbo:officeHolderOf ?office ;
          dbo:spouse ?spouse .

  # Ensure the author wrote a book that is related to Hillary Clinton's work
  ?book a dbo:Book ;
        dbo:author ?author .
  
  # Step 3: Link the book to the Third Taiwan Strait Crisis
  ?book dbo:subject dbr:Third_Taiwan_Strait_Crisis .

}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,13,train,Give me the force of the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?force WHERE {
  ?person dbo:award dbr:Gillmore_Medal .
  OPTIONAL { ?person dbo:fieldOfActivity ?field . }
  OPTIONAL { ?person dbo:profession ?profession . }
  OPTIONAL { ?person dbp:force ?force . }
}
ORDER BY ?person
LIMIT 10
```",2,2,3,2,1,3,3,71,0,1,5,0.0,0.0,0
293,27,train,Give me the person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentBirthName WHERE {
  # Identify Tisha Sterling's resource in DBpedia
  dbr:Tisha_Sterling a dbo:Person .
  
  # Find her parents
  OPTIONAL { 
    dbr:Tisha_Sterling dbo:childOf ?parent .
    
    # Retrieve the birth name of each parent
    ?parent dbp:birthName ?parentBirthName .
  }
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
859,0,train,Give me the band member of Human Remains (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band foaf:name ""Human Remains"" .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
668,28,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?stevieWonder ?stonebwoy WHERE {
  # Stevie Wonder's details
  dbr:Stevie_Wonder a dbo:MusicalArtist ;
                    foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .

  # Stonebwoy's details
  dbr:Stonebwoy a dbo:MusicalArtist ;
                foaf:name ""Elorm Kabu Amenyah""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,57,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Jason Priestley"" .
  OPTIONAL { 
    ?album dbo:artist dbr:T.I. ;
           dbo:track ?song .
    ?song dbo:lyricist ?person .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
628,22,train,"Give me the band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Find Uncle Murda's band members
  ?uncleMurda a dbo:MusicalArtist ;
              foaf:name ""Uncle Murda"" .
  
  ?member dbo:memberOf ?uncleMurda ;
          foaf:name ?bandMember .

  # Identify the region associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?region dbo:wikiPageRedirects dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  
  # Ensure the region is an American state and settlement
  ?region a dbo:State ;
          a dbo:Settlement .

  # Find band members native to this region
  ?member dbo:nationality dbr:United_States_of_America ;
          dbo:birthPlace ?region .
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
472,5,train,Who is the mayor of Duchy of Schleswig?,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor WHERE {
  OPTIONAL { 
    ?region a dbo:AdministrativeRegion .
    ?region dbo:officialName ""Duchy of Schleswig""@en .
    ?region dbo:headOfGovernment ?mayor .
  }
  
  UNION
  
  OPTIONAL {
    ?city dbo:partOf dbr:Duchy_of_Schleswig .
    ?city dbo:mayor ?mayor .
  }

  FILTER (lang(?mayor) = ""en"")
}
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
159,26,train,Give me the reference to the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?writer WHERE {
  ?work dbo:composer dbr:George_Ducas .
  OPTIONAL { 
    ?work dbo:composer ?writer .
    FILTER(?writer != dbr:George_Ducas)
  }
}
LIMIT 10
```",3,3,4,3,1,3,3,71,0,0,98450,0,0.0,0
159,5,train,Give me the work of George Ducas.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  dbr:George_Ducas a dbo:MusicalArtist .
  ?album dbo:artist dbr:George_Ducas ;
         dbo:title ?work .
}
ORDER BY ?work
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,6,train,"Give me the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residenceCountry WHERE {
  dbr:Álvaro_Quirós dbo:residence ?residence .
  ?residence a dbo:Place ;
             dbo:country ?residenceCountry .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
943,52,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow and father of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Find the commander in the Siege of Mukha
  ?commander a dbo:Person ;
             dbo:occupation dbo:Commander ;
             dbo:placeOfBirth dbr:Mukha .

  # Step 2: Identify the alter ego of The Shadow
  ?shadowAlterEgo dbp:alterEgo ""Lamont Cranston""^^xsd:string .
  
  # Step 3: Find royalty related to both the commander and The Shadow's alter ego
  ?royalty dbo:spouseOrPartner ?commander ;
           dbo:spouseOrPartner ?shadowAlterEgo .

  # Step 4: Identify the child of this royalty who is a parent, specifically the father of Baeda Maryam I
  ?child dbo:parent ?royalty ;
         dbo:child dbr:Baeda_Maryam_I .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,59,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Identify John Cleese by his birth name
  ?cleese a dbo:Actor ;
          dbp:birthName ""Richard Grant Esterhuysen"" .

  # Find movies that are also television shows
  ?movie dbo:type dbr:TelevisionFilm ;
         dbo:starring ?cleese .

  # Identify the politician involved in ""Ab Kya Hoga""
  ?politician a dbo:Politician ;
              dbp:profession dbr:Actor ;
              dbo:worksFor dbr:Ab_Kya_Hoga .

  # Find actors of these movies
  ?movie dbo:starring ?actor .
}
```",6,8,7,3,2,3,3,71,0,0,28,0,0.0,0
347,2,train,"Give me the child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
609,24,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?birthPlace WHERE {
  # Query for Cece Bell's birthplace
  { 
    dbr:Cecil_Alice_Bell a dbo:Writer .
    dbr:Cecil_Alice_Bell dbo:birthPlace ?birthPlace .
    BIND(""Cece Bell"" AS ?personName)
  }
  
  UNION
  
  # Query for governors of Virginia who are politicians
  {
    ?governor a dbo:Politician ;
              dbo:governmentRole dbr:Governor_of_Virginia ;
              dbp:birthPlace ?birthPlace .
    ?governor foaf:name ?personName .
  }
}
ORDER BY ?personName
LIMIT 10
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
905,0,train,Give me the spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Monarch .
  ?person foaf:name ""Charles II of Naples""@en .
  OPTIONAL { ?person dbp:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
78,17,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  
  # Association with Wizards of Waverly Place (soundtrack)
  ?work dbr:Wizards_of_Waverly_Place_(soundtrack) ;
        dbo:composer ?person .

  # Band member of The Alan Parsons Project
  ?bandMember dbr:The_Alan_Parsons_Project ;
              dbo:member ?person .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
347,7,train,"Give me the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childName WHERE {
  dbr:Maria_Anna_of_Bavary dbo:spouse ?parent .
  ?parent dbo:child ?child .
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"")) }
  ?child foaf:name ?childName .
}
ORDER BY ?childName
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
871,17,train,"Who is the child, that is a politician, of the alumnus of Eton College?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  ?parent a dbo:Person .
  ?parent dbo:almaMater dbr:Eton_College .

  ?child dbo:parent ?parent ;
         a dbo:Politician .

  OPTIONAL { ?child foaf:name ?childName . }
}
ORDER BY ?childName
LIMIT 10
```",2,3,3,2,1,3,3,71,0,10,7,0.0,0.0,0
782,57,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?reference WHERE {
  # Identify Nicholas Michael Curran
  ?curran a dbo:MusicalArtist ;
          dbp:birthday ""1945-03-30""^^xsd:date ;
          foaf:name ""Nicholas Michael Curran""@en .

  # Find associated musical artists of Nicholas Michael Curran
  ?association dbo:associatedBand dbr:The_Fabulous_Thunderbirds ;
               dbo:musicalArtist ?curran .
  
  # Identify band members of The Fabulous Thunderbirds
  ?bandMember dbo:memberOf dbr:The_Fabulous_Thunderbirds ;
              a dbo:MusicalArtist .

  # Link the band member to Nicholas Michael Curran through association
  ?association dbo:musicalArtist ?bandMember .
  
  # Get references for these band members
  ?bandMember dbo:wikiPageWikiLink ?reference .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
288,7,train,"Give me the theme of Dikhawa and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?theme WHERE {
  ?settlement a dbo:Settlement .
  ?settlement dbo:country dbr:Pakistan .
  ?settlement rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""heart of pakistan"") || 
          CONTAINS(LCASE(?label), ""paris of the east"") ||
          CONTAINS(LCASE(?label), ""city of gardens"") ||
          CONTAINS(LCASE(?label), ""city of literature""))
  
  OPTIONAL { ?settlement dbo:theme ?theme . }
}
ORDER BY ?settlement
LIMIT 1
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
756,2,train,Give me the manager of 2020–21 SBV Vitesse season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerClub .
  ?team dbp:season2020_21 dbr:SBV_Vitesse_season_2020–21 .
  ?team dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
531,16,train,"Give me the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Identify Manuel Pinto da Costa as a person involved in a military conflict
  dbr:Manuel_Pinto_da_Costa dbo:occupation [
    a dbo:MilitaryConflict ;
    dbo:participant ?person .
  ] .

  # Find the commander who is an office holder and politician
  ?commander a dbo:Commander ;
             dbo:officeHolder true ;
             dbo:politician true ;
             dbo:militaryConflict ?conflict .

  # Ensure the conflict involves Manuel Pinto da Costa
  ?conflict dbo:participant dbr:Manuel_Pinto_da_Costa .
}
```",2,6,3,2,1,3,3,71,0,0,179,0,0.0,0
531,42,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Politician .
  ?person dbo:party dbr:People's Party (Spain) .  # Assuming the Conservative Republican Party is linked to this
  ?person dbo:leaderOf dbr:People's Party (Spain) .

  ?person dbo:residence ?residence1, ?residence2 .
  
  ?residence1 rdfs:label ""Residence of Alberto Ruiz-Gallardón""@en ;
              dbo:resident ?person .
  ?residence2 rdfs:label ""Residence of Mariano Rajoy""@en ;
              dbo:resident ?person .

  ?person dbo:officeHeld ?office .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,12,train,"Give me the parent of Princess Sara bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find Princess Sara bint Faisal and her parent
  OPTIONAL {
    ?sara a dbo:Person ;
          foaf:name ""Princess Sara bint Faisal""@en .
    ?sara dbo:childOf ?parent .
  }
  
  # Find Prince Faisal bin Hussein's child who is royalty and their parent
  OPTIONAL {
    ?faisalChild a dbo:Person ;
                 dbo:royalty true ;
                 dbo:childOf dbr:Prince_Faisal_bin_Hussein .
    ?faisalChild dbo:parent ?parent .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,10,train,Give me the death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?deathPlace WHERE {
  ?work a dbo:Film .
  ?work foaf:name ""Color Me Dead"" .
  ?work dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  OPTIONAL { 
    ?actor dbp:deathPlace ?deathPlace .
  }
}
ORDER BY ?actorName
LIMIT 10
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
119,8,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  dbr:Dawid_Olejniczak dbo:residence ?location .
  ?location a dbo:Place ;
            dbo:country ?country .
}
```",2,3,3,2,1,3,2,20,0,0,108,0,0.0,0
225,8,train,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:honoraryTitle ?award .
  FILTER(CONTAINS(LCASE(str(?award)), ""anita borg institute women of vision awards""))
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
943,54,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  # Find Lamont Cranston and his alter ego
  ?person a dbo:FictionalCharacter .
  ?person dbp:name ""Lamont Cranston"" .
  ?person dbp:alias ?alias .
  FILTER(CONTAINS(?alias, ""The Shadow"")) .

  # Find Zara Yaqob's parentage
  ?zaraYaqob a dbo:Person ;
             dbo:fatherOf dbr:Baeda_Maryam_I ;
             dbo:mother dbr:Yeshaq_I_mother .

  # Connect the alter ego to the lineage
  BIND(?alias AS ?alterEgo)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,55,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Leader of the Conservative Republican Party (Spain)
  ?person dbo:partyLeaderOf dbr:Conservative_Party_(Spain) .
  
  # Tenant of Alberto Ruiz-Gallardón's residence
  ?residence dbp:tenant ?person .
  ?residence dbp:owner dbr:Alberto_Ruiz-Gallardón .

  # Office holder and politician in the Central African Republic Civil War
  ?officeHolder dbo:office ?office .
  ?officeHolder a dbo:Politician ;
                dbo:politicalAffiliation dbr:Conservative_Party_(Spain) .
  
  ?conflict dbo:participant ?officeHolder .
  ?conflict rdfs:label ""Central_African_Republic_Civil_War""@en .

  # Ensure the person is the same across all conditions
  FILTER (?person = ?officeHolder)
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
905,53,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary and his children
  dbr:Béla_IV_of_Hungary dbo:spouse ?parent1 .
  ?parent1 dbo:child ?child .

  # Child's child (Béla IV's grandchild) who is royalty
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .

  # Grandchild as parent of Charles Martel of Anjou
  ?grandchild dbo:parent dbr:Charles_Martel_of_Anjou .

  # Philip, Despot of Romania's parent who is royalty
  dbr:Philip_Despot_of_Romania dbo:parent ?philipParent .
  ?philipParent a dbo:Monarch .

  # Spouse of the father of Philip's parent (grandchild's spouse)
  ?philipParent dbo:spouse ?spouse .
  ?spouse dbo:child ?grandchild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
119,38,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find Álvaro Quirós and his place of residence
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  
  OPTIONAL { 
    ?person dbp:residence ?residence . 
    ?residence dbo:country ?country .
  }
  
  # Find members of the Spanish Socialist Workers' Party in administrative roles
  ?member a dbo:Person ;
          dbo:memberOf dbr:Spanish_Socialist_Workers'_Party ;
          dbo:position ?position .
  
  FILTER (CONTAINS(LCASE(?position), ""administration"") || CONTAINS(LCASE(?position), ""minister""))
  
  OPTIONAL {
    ?member dbp:countryOfCitizenship ?citizenCountry .
    FILTER (?citizenCountry = dbr:Spain)
  }
  
  # Match the country of residence with the country of citizenship
  VALUES ?matchedCountry { ?country }
}
```",4,6,5,2,2,3,3,71,0,0,23,0,0.0,0
103,12,train,Give me the professional in  and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Actor .
}
LIMIT 10
```",2,2,3,1,2,3,3,71,0,10,4210,0.0,0.0,0
293,46,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find the landmark at the given elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""20.116800000000001347""^^xsd:float .
  
  # Identify the ruling party of this landmark's location
  ?location dbo:isPartOf ?country .
  ?country dbo:government ?government .
  ?government dbo:rulingParty ?party .

  # Find an actor who is a member of this party
  ?actor a dbo:Actor ;
         dbo:film dbr:_1,000_Dollars_a_Minute ;
         dbp:memberOfPoliticalParty ?party .

  # Get the spouse of this actor
  ?actor foaf:mbox ?email .
  ?actor dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
78,4,train,"Give me the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?soundtrack a dbo:Soundtrack .
  ?soundtrack dbp:title ""Wizards of Waverly Place (soundtrack)""@en .
  
  ?soundtrack dbo:composer ?person .
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .

  BIND(?person AS ?writer)
}
```",1,3,2,1,1,2,3,28,0,0,13,0,0.0,0
782,1,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Kim Wilson"" .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
249,8,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of Jamshedpur.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfBirthplace ?nativeOfJamshedpur WHERE {
  # Find Shobhna Samarth's birthplace which is a country
  dbr:Shobhna_Samarth dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) && datatype(?birthPlace) = xsd:string)
  
  # Get the native of this birthplace
  ?person1 dbo:nationality ?nativeOfBirthplace .
  ?person1 dbo:birthPlace ?birthPlace .

  # Find natives of Jamshedpur
  ?person2 dbo:birthPlace dbr:Jamshedpur .
  ?person2 dbo:nationality ?nativeOfJamshedpur .
}
```",3,4,4,2,2,2,2,9,0,0,22,0,0.0,0
361,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Florida .
  ?person dbo:occupation ?profession .
}
ORDER BY ?profession
LIMIT 10
```",1,1,2,1,1,2,3,28,0,6,39640,0.0,0.0,0
103,40,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Identify John Cleese by his birth name and profession
  ?person a dbo:Actor ;
          dbp:birthName ""Richard Grant Esterhuysen"" ;
          foaf:name ""John Cleese"" .

  # Find movies or TV shows he acted in that are also television shows
  ?work dbo:starring ?person ;
        a (dbo:Film|dbo:TelevisionShow) .
  
  # Ensure the work is classified as a television show
  ?work dbo:type dbr:Television_show .

  # Retrieve other actors involved in these works
  ?work dbo:starring ?actor .
}
```",5,6,6,3,3,3,3,71,0,0,9,0,0.0,0
159,60,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac as a commander in the Battle of Vienna
  ?pac a dbo:Person ;
       foaf:name ""Michał Kazimierz Pac""@en ;
       dbo:officeHolderOf ?battle .

  # The Battle of Vienna
  ?battle dbr:Battle_of_Vienna .

  # Find the successor
  ?successor dbo:succeededBy ?pac .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
782,18,train,Give me the band of Kim Wilson and associated musical artist of Nick Curran and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?kimBand ?nickArtist WHERE {
  # Kim Wilson's band
  ?kimPerson a dbo:MusicalArtist ;
             foaf:name ""Kim Wilson"" .
  OPTIONAL { 
    ?kimPerson dbo:band dbr:The_Fabulous_Thunderbirds .
    ?kimPerson dbo:band ?kimBand .
  }
  
  # Nick Curran's associated musical artist
  ?nickPerson a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" .
  OPTIONAL {
    ?nickPerson dbo:associatedMusicalArtist ?nickArtist .
  }

  # Reference to The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:Band .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
78,12,train,Give me the associated musical artist of Stuart Tosh and band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  VALUES ?person { 
    dbr:Stuart_Tosh 
    dbr:Billy_Lyall
  }
  
  ?person dbo:associatedMusicalArtist ?artist .
  OPTIONAL { ?artist dbo:bandMemberOf dbr:The_Alan_Parsons_Project . }
}
```",3,3,4,1,3,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
943,53,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?parentOfCommander ?fatherOfParent ?naod WHERE {
  # Step 1: Find the commander in Siege of Mukha who is royalty
  ?commander dbo:memberOf dbr:Siege_of_Mukha .
  ?commander a dbo:Monarch .

  # Step 2: Find the parent (father) of this commander who is also royalty
  ?parentOfCommander dbo:child ?commander .
  ?parentOfCommander a dbo:Monarch .

  # Step 3: Determine Na'od, child of the parent found in step 2
  ?naod dbp:father ?parentOfCommander .
  ?naod rdfs:label ""Na'od""@en .

  # Find the father of this parent (grandfather of Na'od)
  ?fatherOfParent dbo:child ?parentOfCommander .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,0,train,Give me the band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band foaf:name ""Mudvayne"" .
  ?band dbo:musicalArtist ?member .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
119,2,train,"Give me the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find Maria I of Portugal
  ?maria a dbo:Person ;
         foaf:name ""Maria I of Portugal""@en .

  # Find military conflicts associated with her reign
  ?conflict dbo:participatedIn ?maria ;
            a dbo:MilitaryConflict .

  # Find television shows related to the same conflict
  ?show dbo:subject ?conflict ;
        a dbo:TelevisionShow .

  # Return the name of the force (military conflict) that links both
  ?force rdfs:label ?forceLabel .
  FILTER(LANG(?forceLabel) = ""en"")
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
353,51,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # William I of Sicily and his spouse Constance of Burgundy
  dbr:William_I_of_Sicily dbo:spouse ?constance .
  
  # Children of Constance of Burgundy
  ?child dbp:parent dbr:Constance_of_Burgundy ;
         a dbo:Person .

  # Grandchildren of Constance (children of her children)
  ?grandChild dbp:parent ?child ;
              a dbo:Person .

  # Identify the royalty among these grandchildren
  ?royalty a dbo:Royalty ;
           dbp:parent ?grandChild .

  # Find the father of this royal child
  ?royalty dbp:father ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
737,3,train,"Give me the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  OPTIONAL { ?spouse a dbo:Monarch . }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
628,45,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as Ackquille Jean Pollard and band member of Uncle Murda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeRegion WHERE {
  # Identify the band member Ackquille Jean Pollard (Uncle Murda)
  ?person a dbo:Person ;
          foaf:name ""Ackquille Jean Pollard"" ;
          dbp:nativeName ""Uncle Murda"" .
  
  # Ensure this person is from New York and part of a band
  ?band a dbo:Band ;
        dbo:member ?person ;
        dbo:location dbr:New_York_(state) .

  # Identify the award associated with the band
  ?award a dbo:Award ;
         dbo:recipient ?band .
  
  # Find the native region of the award, which is an American state and settlement
  ?nativeRegion dbo:country dbr:United_States_of_America ;
                a dbo:Settlement , dbo:State ;
                dbo:awardsReceived ?award .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
293,24,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Jayne Mansfield"" .
  ?person dbp:birthName ""Harriette Arlene Lake"" .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,57,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?calderMilitaryForce ?bayneWar WHERE {
  # Find the military force associated with Robert Calder's event
  ?event a dbo:SocietalEvent ;
         dbo:agent dbr:Robert_Calder .
  OPTIONAL { ?event dbo:militaryForce ?calderMilitaryForce . }

  # Find the war (military conflict) involving William Bayne during the French campaign in Egypt and Syria
  ?war a dbo:MilitaryConflict, dbo:Event ;
       dbo:place dbr:French_campaign_in_Egypt_and_Syria .
  OPTIONAL { ?war dbo:militaryForce ?bayneWar . }
  
  # Link William Bayne to the war
  ?person dbr:William_Bayne ;
          dbo:commanderOf ?war .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,57,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Identify actors who are also soccer players and athletes
  ?actor a dbo:Actor ;
         dbo:sport dbr:Soccer ;
         dbo:athleteType dbr:Athlete .

  # Ensure the actor is in the film directed by Manuel Huerga
  ?film dbo:starring ?actor .
  
  # Find connection to Juan Carlos Molina (footballer)
  ?juanCarlosMolina a dbo:FootballPlayer ;
                   dbo:playerInTeam ?team .
  ?actor dbo:playedWith ?juanCarlosMolina .

  # Identify the person born on 1979-11-03 who is both a soccer player and manager
  ?person a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbp:birthday ""1979-11-03""^^xsd:date .
  
  # Ensure this person is associated with the same team
  ?team dbo:member ?person .

  # The actor we are looking for should be connected to all these conditions
  ?actor = ?player .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
628,28,train,"Give me the person born as Ackquille Jean Pollard and native of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Ackquille Jean Pollard"" .
  ?person dbo:birthPlace dbr:Florida .

  OPTIONAL { 
    ?association dbo:associatedBandMember ?person .
    ?association dbo:associatedBand dbr:Bobby_Shmurda .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
628,43,train,"Give me the band member of Uncle Murda and native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  # Find band members of Uncle Murda
  ?bandMember dbo:memberOf dbr:Uncle_Murda .
  
  # Filter by those whose birth place is Florida
  ?bandMember dbo:birthPlace dbr:Florida .

  # Retrieve their birth names
  OPTIONAL { ?bandMember dbp:birthName ?birthName . }
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,20,train,Give me the actor of Rustlers' Rhapsody and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .

  VALUES ?movie { 
    dbr:Rustlers'_Rhapsody
  }

  OPTIONAL {
    ?actor dbp:alias ""The Shadow""@en .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
723,8,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  dbr:Cavalera_Conspiracy a dbo:Band .
  ?member dbo:memberOf dbr:Cavalera_Conspiracy .
  ?member foaf:name ?bandMember .
}
```",2,3,3,2,1,3,2,20,0,0,89,0,0.0,0
80,20,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find actors of the movie ""Shelby Oaks""
  OPTIONAL {
    ?movie a dbo:Film .
    ?movie dbp:title ""Shelby Oaks"" .
    ?movie dbo:starring ?actor .
  }
  
  # Find artists associated with the album of the song ""What You Know"" by T.I.
  OPTIONAL {
    ?song a dbo:Songs .
    ?song dbp:title ""What You Know"" .
    ?song dbo:artist dbr:T.I. .
    ?album dbo:song ?song .
    ?album dbo:performer ?artist .
    BIND(?artist AS ?actor)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,2,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?alias WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  OPTIONAL { ?person foaf:name ?alias . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,57,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?tvShow a dbo:TelevisionSeries .
  ?tvShow dbo:genre dbr:SocietalEvent .

  ?person dbo:role ?role .
  ?person foaf:name ""Jean Baptist, Comte d'Arco"" .
  ?person dbo:worksFor ?tvShow .

  ?commander dbo:succeededBy ?yuriiKhmelnytsky .
  ?yuriiKhmelnytsky foaf:name ""Yurii Khmelnytsky"" .

  ?writer dbo:work dbr:George_Ducas_Works .
  ?writer dbo:reference ?tvShow .

  FILTER(?role = ""Commander"")
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
412,8,train,Give me the war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?war WHERE {
  # Find the National Party of Greece
  ?party a dbo:PoliticalParty ;
         rdfs:label ""National Party (Greece)""@en .

  # Find leaders of the party
  ?leader dbo:memberOf ?party ;
          foaf:name ?name .

  # Find wars associated with these leaders
  OPTIONAL { 
    ?leader dbo:spouseOrPartner ?partner .
    ?partner dbo:spouseOrPartner ?warLeader .
    ?warLeader dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""war"") || CONTAINS(LCASE(?occupation), ""military""))
    ?warLeader dbo:associatedWith ?war .
  }
  
  OPTIONAL {
    ?leader dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""war"") || CONTAINS(LCASE(?occupation), ""military""))
    ?leader dbo:associatedWith ?war .
  }

}
ORDER BY ?name
LIMIT 10
```",2,2,3,2,1,2,3,28,0,0,13,0,0.0,0
871,39,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .

  # Step 2 and 3: Find children who are politicians
  ?child a dbo:Politician .
  
  # Step 4: Filter those politicians who attended Eton College
  ?child dbp:almaMater dbr:Eton_College .

  # Step 5: Retrieve the parent (father) of such a child
  ?parent dbo:spouse ?spouse .
  ?child dbo:parent ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
58,1,train,Give me the producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:12_Strong dbo:producer ?producer .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
87,4,train,Who is the awardee of List of awards and nominations received by Janusz Kamiński?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  dbr:Janusz_Kamiński a dbo:Person .
  OPTIONAL { 
    dbr:Janusz_Kamiński dbo:award ?award .
  }
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
737,41,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Duke Philipp of Württemberg and his child
  ?philipp a dbo:Person ;
           foaf:name ""Philipp, Duke of Württemberg""@en .
  ?child1 dbo:parent ?philipp ;
          a dbo:Person .

  # The grandchild of Duke Philipp (child of the child)
  ?grandchild dbo:parent ?child1 ;
              a dbo:Person .

  # Philipp Albrecht, Duke of Württemberg and his child
  ?albrecht a dbo:Person ;
           foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .
  ?child2 dbo:parent ?albrecht ;
          a dbo:Person .

  # Archduchess Margarete Sophie of Austria and her child
  ?margarete a dbo:Person ;
             foaf:name ""Margarete Sophie, Archduchess of Austria""@en .
  ?child3 dbo:parent ?margarete ;
          a dbo:Person .

  # The predecessor (parent) of the grandchild
  ?predecessor dbo:parent ?grandchild ;
               a dbo:Person .

  # This predecessor should be the child of both Philipp Albrecht and Margarete Sophie
  FILTER (?predecessor = ?child2 && ?predecessor = ?child3)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
203,52,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Find the military conflict involving ""The Triple X's""
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:participatingMilitaryForce dbr:The_Triple_Xs .

  # Find the Battle of Cape Finisterre (1805) and its commander
  ?battle dbr:Battle_of_Cape_Finisterre_(1805) ;
         dbo:commander ?finisterreCommander .
  
  # Find William Bayne's military conflict and its commander
  ?bayneConflict a dbo:MilitaryConflict ;
                 dbo:participatingMilitaryForce dbr:Royal_Navy_officer_William_Bayne .
  ?bayneConflict dbo:commander ?bayneCommander .

  # Unify the commanders from both conflicts
  VALUES ?commander { ?finisterreCommander ?bayneCommander }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,34,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athleteName WHERE {
  # Find Marty Pollio's birthday
  ?marty a dbo:Athlete ;
         foaf:name ""Marty Pollio"" ;
         dbp:birthday ?birthday .

  # Find athletes with the same birthday as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbp:birthday ?sameBirthday .
  
  FILTER (?sameBirthday = ?birthday)

  # Ensure the athlete played on a team where Pablo Aimar also played
  ?team dbo:member ?athlete ;
        dbo:member dbr:Pablo_Aimar .

  # Return the name of such athletes
  ?athlete foaf:name ?athleteName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Who is the citizen, that is Spanish, of Spain?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Spanish .
  ?person dbo:birthPlace dbr:Spain .
}
ORDER BY ?person
LIMIT 10
```",1,2,2,1,1,3,3,71,0,1,1550,0.0,0.0,0
816,60,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Mariclare Costello and her spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello"" .
  
  ?spouse dbo:spouse ?mariclare ;
          dbo:child ?child .

  # The child's parent is either Mariclare or the spouse
  OPTIONAL { ?parent dbo:child ?child . FILTER (?parent = ?mariclare || ?parent = ?spouse) }

  # Person deceased in Los Angeles
  ?deceasedPerson dbo:deathPlace dbr:Los_Angeles ;
                  dbo:parent ?parent .

  # The person is associated with a movie
  ?movie dbo:actor ?actor ;
         dbo:workExample ?deceasedPerson .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,46,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find the award associated with Rodney Lees
  ?award dbo:recipient ?awardee .
  ?award dbo:associatedWith dbr:Rodney_Lees .

  # Step 2: Find the parent of the awardee
  ?awardee dbo:parent ?parentAwardee .

  UNION

  # Step 3: Identify children of Frederick Stanley, 16th Earl of Derby
  ?child dbp:father dbr:Fredrick_Stanley_16th_Earl_of_Derby ;
         dbo:parent ?parentChild .

  # Combine results to get distinct parents
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
361,8,train,Give me the professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  dbr:Frédéric_Bouraly a dbo:Person .
  OPTIONAL { dbr:Frédéric_Bouraly dbo:occupation ?profession . }
}
```",2,2,3,2,1,2,3,28,0,1,21580,0.0,0.0,0
80,35,train,Give me the actor of the movie with  and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?person .
  ?person a dbo:Actor .
  ?character dbo:alterEgo dbr:The_Shadow .
  ?character dbo:portrayedBy ?person .
  ?movie dbo:title ?title .
}
```",4,4,5,2,2,3,3,71,0,0,7802,0,0.0,0
398,6,train,Give me the figure known as Наши парни / Nashi parni and player in Aleksandr Filimonov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  OPTIONAL { 
    ?person foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""nashi parni"") || CONTAINS(LCASE(?name), ""наши парни""))
  }
  OPTIONAL {
    ?band dbp:member ?person .
    ?band foaf:name ?bandName .
    FILTER(CONTAINS(LCASE(?bandName), ""nashi parni"") || CONTAINS(LCASE(?bandName), ""наши парни""))
  }
  OPTIONAL {
    ?person dbo:associatedBand dbr:Aleksandr_Filimonov .
  }
}
ORDER BY ?name
LIMIT 10
```",2,2,3,1,2,3,2,20,0,10,1,0.0,0.0,0
609,32,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Query for the governor of Virginia
  { 
    ?governor a dbo:Politician ;
              dbo:stateOrProvinceServed dbr:Virginia ;
              dbo:officeHolderOf dbr:Governor_of_Virginia .
    OPTIONAL { ?governor dbp:birthPlace ?birthPlace . }
    BIND(?governor AS ?person)
  } UNION
  # Query for an awardee of Vince Gilligan's awards and nominations
  {
    ?awardee dbo:award dbr:List_of_awards_and_nominations_received_by_Vince_Gilligan ;
            dbp:birthPlace ?birthPlace .
    BIND(?awardee AS ?person)
  }
}
```",4,5,5,2,2,3,3,71,0,2,1,0.0,0.0,0
905,4,train,"Give me the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Philip_I,_Prince_of_Taranto dbo:parent ?person .
  ?person a dbo:Person .
  ?person foaf:name ?name .
  BIND(?person AS ?father)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
871,55,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find the awardee of Commander of the Royal Victorian Order
  ?awardee dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Find Frederick Stanley, 16th Earl of Derby's child who is a politician
  ?child dbp:parent dbr:Fredrick_Stanley_16th_Earl_of_Derby ;
         dbo:occupation dbo:Politician .

  # Identify the parent common to both the awardee and the politician
  ?awardee dbo:parent ?parent .
  ?child dbo:parent ?parent .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
595,43,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in Third Taiwan Strait Crisis
  ?event dbo:agent ?person ;
         dbo:subjectArea dbr:Third_Taiwan_Strait_Crisis .

  # Author of a written work that is also a book and a work
  ?work dbo:author ?person ;
        a dbo:Book .
  
  # Resident of Chappaqua, New York
  ?person dbo:residence dbr:Chappaqua,_New_York .

  # Spouse of Hillary Clinton
  ?person dbo:spouse dbr:Hillary_Clinton .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
347,0,train,Give me the commander in Thirty Years' War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:name ""Thirty Years' War"" .
  ?event dbo:participant ?commander .
  ?commander a dbo:MilitaryPerson .
}
```",1,1,2,1,1,3,3,71,0,0,42,0,0.0,0
203,13,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?militaryForce WHERE {
  # Find William Bayne as a Royal Navy officer
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne"" ;
         dbp:militaryBranch dbr:Royal_Navy .

  # Link him to military conflicts or wars
  ?bayne dbo:participatedIn ?war .
  
  # Ensure the war is both a military conflict and an event
  ?war a dbo:MilitaryConflict, dbo:Event .

  # Extract military forces involved in these wars
  ?war dbo:militaryForce ?militaryForce .
}
```",2,4,3,2,1,3,3,71,0,0,529,0,0.0,0
151,6,train,Give me the reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Charles Parsons"" .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:rank ?rank .
  OPTIONAL { ?person dbp:awards ?award . }
}
```",2,2,3,2,1,2,2,9,0,0,98450,0,0.0,0
399,0,train,Give me the band member of Emilia (Bulgarian singer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?emilia a dbo:MusicalArtist ;
          foaf:name ""Emilia"" ;
          dbo:nationality dbr:Bulgaria .
  
  OPTIONAL { 
    ?association dbo:member ?bandMember .
    ?association dbo:musicalArtist ?emilia .
    ?bandMember a dbo:MusicalArtist .
  }
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
905,9,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Find Charles Martel of Anjou and his parent
  ?charlesMartel a dbo:Person ;
                 foaf:name ""Charles Martel of Anjou""@en ;
                 dbo:childOf ?parent .

  # Find Charles II of Naples and his spouse
  ?charlesII a dbo:Person ;
             foaf:name ""Charles II of Naples""@en ;
             dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
39,3,train,Who is the producer of Coke Studio Philippines?,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
119,17,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź and war of Alexander Suvorov.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find an athlete native to Łódź and Polish
  ?athlete a dbo:Athlete .
  ?athlete dbo:nationality dbr:Poland .
  ?athlete dbo:birthPlace dbr:Łódź .

  # Find wars involving Alexander Suvorov
  ?suvorovWar dbo:participatedIn ?war .
  ?suvorovWar dbp:name ""Alexander Suvorov""@en .
  
  # Get the country involved in the war
  ?war dbo:location ?country .

  # Find the current residence of the athlete
  ?athlete dbo:residence ?entity .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
816,10,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .

  ?actor dbo:child dbr:Doon_Arbus .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,51,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyLeaderOffice ?commanderOffice WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura a dbo:Politician ;
               foaf:name ""Miguel Maura"" ;
               dbp:affiliation ?politicalParty .

  # Get the leader's office of that political party
  ?politicalParty dbo:leader ?partyLeader .
  ?partyLeader dbo:office ?partyLeaderOffice .

  # Find an office holder who was a commander in the Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:heldPosition ?warCommanderRole .
  ?warCommanderRole dbp:position ""Commander"" ;
                    dbo:relatedEvent dbr:Central_African_Republic_Civil_War_(2012–present) .

  # Get the office of that commander
  ?commander dbo:office ?commanderOffice .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
816,34,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?actor WHERE {
  # Find Doon Arbus and their parent(s)
  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus""@en .
  
  OPTIONAL { 
    ?doonArbus dbp:parents ?parent .
  }
  
  # Find the decedent who passed away in Los Angeles
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Los_Angeles_County,_California .

  # Find a movie associated with this decedent
  ?movie dbo:starring ?actor ;
         dbo:subject ?decedent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,53,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?birthPlace WHERE {
  # Vince Gilligan's award awardee
  {
    ?award a dbo:Award .
    ?award dbo:recipient dbr:Vince_Gilligan .
    ?awardee dbo:recipient ?award .
    ?awardee foaf:name ?personName .
    OPTIONAL { ?awardee dbp:birthPlace ?birthPlace . }
  }

  UNION

  # Cece Bell, author of ""El Deafo""
  {
    dbr:El_Deafo dbo:author dbr:Cece_Bell .
    dbr:Cece_Bell foaf:name ?personName .
    OPTIONAL { dbr:Cece_Bell dbp:birthPlace ?birthPlace . }
  }

  UNION

  # Glenn Youngkin
  {
    dbr:Glenn_Youngkin foaf:name ?personName .
    OPTIONAL { dbr:Glenn_Youngkin dbp:birthPlace ?birthPlace . }
  }
}
```",6,6,7,3,3,3,3,71,0,3,1,0.0,0.0,0
293,42,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Roger Pryor (actor)
  ?roger a dbo:Actor ;
         foaf:name ""Roger Pryor"" .

  # Step 2: Find his spouse
  ?roger dbp:spouse ?spouse .

  # Step 3: Ensure the spouse is a party member in Central, Louisiana
  ?partyMember a dbo:Politician ;
               dbo:officeLocation dbr:Central,_Louisiana ;
               foaf:name ?spouseName .
  
  FILTER(?spouse = ?partyMember)

  # Step 4: Ann Sothern's birth name
  ?annSothern a dbo:Actor ;
              dbp:birthName ?birthName .

  # Ensure the spouse was born with Ann Sothern's birth name
  ?spouse dbp:birthName ?birthName .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
143,7,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie ?actor WHERE {
  ?person a dbo:Person ;
          foaf:name ""Afeez Oyetoro""@en .
  
  ?film dbo:starring ?person ;
        a dbo:Film .

  OPTIONAL { 
    ?film dbo:starring ?actor .
  }
}
```",2,3,3,2,1,3,2,20,7,13,21,0.35,0.25,0.2916666666666667
531,35,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  # Identify Alberto Ruiz-Gallardón as a politician and leader of the Conservative Republican Party (Spain)
  ?person dbo:birthName ""Alberto Ruiz-Gallardón""@en .
  ?person dbo:party dbr:People's_Party_(Spain) . # Assuming People's Party is synonymous with Conservative Republican Party
  ?person dbo:officePosition dbr:Mayor_of_Madrid . # Example of a leadership position

  # Find the residence and office associated with him
  OPTIONAL { 
    ?residence dbo:tenant ?tenant .
    ?residence dbp:resident ?person .
  }
  
  OPTIONAL {
    ?office dbo:tenant ?tenant .
    ?office dbp:employee ?person .
  }

}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
668,15,train,Who is the person born as the birth name of $pacely?,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Pacely"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
609,45,train,"Give me the birth place of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Vince Gilligan
  { 
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan"" ;
            dbp:nationality dbr:United_States .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  }

  UNION

  # Author of El Deafo (Cece Bell)
  {
    ?author a dbo:Person ;
            foaf:name ""Cece Bell"" ;
            dbp:nationality dbr:United_States .
    OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
  }

  UNION

  # Glenn Youngkin
  {
    ?person a dbo:Person ;
            foaf:name ""Glenn Youngkin"" ;
            dbp:nationality dbr:United_States .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
140,2,train,Give me the military force of Pickett's Charge.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Picketts_Charge dbo:partOf dbr:Battle_of_Gettysburg .
  dbr:Battle_of_Gettysburg dbo:attacker ?militaryForce ;
                          dbo:defender ?otherMilitaryForce .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
585,16,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in Actress.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?award a dbo:Award .
  ?award dbo:country dbr:United_States_of_America .
  ?award dbo:settlement ?settlement .

  ?coro dbo:nativeOf ?award .
  ?coro dbp:name ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .

  ?actress a dbo:Actress .
  ?actress dbo:child ?award .
}
```",4,6,5,2,2,3,2,20,0,0,10,0,0.0,0
158,8,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find people who died at this location
  ?decedent dbo:deathPlace ?deathPlace .
  FILTER (?deathPlace = ?birthPlace)
}
```",2,3,3,2,1,2,3,28,906,0,0,1.0,1.0,1.0
347,41,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?commander a dbo:Person .
  
  # Commander involved in a war
  ?warEvent a dbo:MilitaryConflict ;
            dbo:participant ?commander .

  # Associated with a societal event and a television show
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:participant ?commander .
  ?tvShow a dbo:TelevisionSeries ;
          dbo:actor ?commander .

  # Linked to the 2nd Dragoon Regiment (France)
  ?dragoonRegiment dbr:2nd_Dragoon_Regiment_(France) ;
                  dbo:militaryUnitCommander ?commander .

  # Child of Ferdinand II, Holy Roman Emperor
  ?ferdinandII dbr:Ferdinand_II,_Holy_Roman_Emperor ;
               dbo:child ?commander .

  # Father to someone who is a child of Ferdinand III, Holy Roman Emperor
  ?ferdinandIII dbr:Ferdinand_III,_Holy_Roman_Emperor ;
                dbo:child ?grandChild .
  ?commander dbo:parentOf ?grandChild .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
742,15,train,Give me the birthplace of Reneta Kamberova and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Query for Reneta Kamberova's birthplace
  { 
    dbr:Reneta_Kamberova dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Query for an alumnus of Пловдивски университет „Паисий Хилендарски“ and their birthplace
  {
    ?alumnus dbp:almaMater dbr:Пловдивски_университет_„Паисий_Хилендарски“ .
    ?alumnus dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
246,10,train,"Give me the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # First level: Find children of Princess Muna al-Hussein who are royalty
  ?child a dbo:Royalty ;
         dbo:parent dbr:Princess_Muna_al-Hussein ;
         dbo:child ?secondChild .

  # Second level: Find children of the first child who are royalty
  ?secondChild a dbo:Royalty ;
               dbo:child ?grandchild .
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
513,2,train,Give me the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resource WHERE {
  ?resource foaf:name ""George Hamilton Cameron""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
595,14,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:SocietalEvent .
  ?event dbo:relatedDisease ?disease .
  ?disease a dbo:Disease .
  ?event dbo:associatedWith dbr:United_States_Navy .
  ?event dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,18,0,0.0,0
609,38,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorBirthPlace ?governorBirthPlace WHERE {
  # Query for the author of ""El Deafo""
  ?author dbo:work dbr:El_Deafo .
  ?author dbo:birthPlace ?authorBirthPlace .

  # Query for the governor who is a politician from Virginia
  ?governor a dbo:Politician ;
            dbo:governmentRole dbr:Governor_of_Virginia ;
            dbo:birthPlace ?governorBirthPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,14,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?resident ?birthPlace WHERE {
  # Define settlements in Eastern European Time zone
  VALUES ?timeZone { 
    dbr:Eastern_European_Time 
  }
  
  ?settlement dbo:timeZone ?timeZone .
  ?settlement a dbo:Settlement .

  # Find notable residents of these settlements
  ?resident dbo:birthPlace ?settlement .
  OPTIONAL { ?resident foaf:name ?name . }

  # Get the birthplace of these residents
  ?resident dbp:birthPlace ?birthPlace .
}
ORDER BY ?settlement ?name
LIMIT 10
```",3,4,4,3,1,3,2,20,1,18,141,0.05263157894736842,0.007042253521126761,0.012422360248447206
531,58,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeOfCommander ?tenantOfMadrid ?partyLeaderOffice WHERE {
  # Find the office of the commander in Central African Republic Civil War
  ?person dbo:occupation [ a dbo:MilitaryPerson ; 
                           dbo:role dbr:Central_African_Republic_Civil_War ] .
  ?person dbp:office ?officeOfCommander .

  # Find the tenant of Madrid
  ?person2 dbo:officeLocation dbr:Madrid .
  ?person2 dbp:office ?tenantOfMadrid .

  # Find the leader of a political party associated with Miguel Maura
  ?party a dbo:PoliticalParty ;
         dbo:leader ?leaderPerson .
  ?miguelMaura dbo:associatedWith ?party .
  ?leaderPerson dbp:office ?partyLeaderOffice .

  FILTER (?person = ?person2) # Assuming the same person holds all these roles
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,29,train,"Give me the team of Pablo Aimar and player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Pablo Aimar
  VALUES (?person) { 
    dbr:Pablo_Aimar 
    dbr:Juan_Carlos_Molina_(footballer)
    dbr:Kwame_Brathwaite
  }
  
  ?person dbo:playsFor ?team .
  
  OPTIONAL {
    # Check if the person is an actor in ""All or Nothing: Manchester City""
    FILTER (?person = dbr:Kwame_Brathwaite)
    ?person dbo:actorIn dbr:All_or_Nothing:_Manchester_City .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
782,41,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickCurranArtist ?fabulousThunderbirdsRealName ?claptonBand 
WHERE {
  # Nick Curran's associated musical artist
  OPTIONAL { 
    ?curran a dbo:MusicalArtist ;
            foaf:name ""Nick Curran"" .
    ?curran dbo:associatedBandOrMusicalArtist ?nickCurranArtist .
  }

  # Real name of The Fabulous Thunderbirds' lead singer
  OPTIONAL {
    ?th dbr:The_Fabulous_Thunderbirds ;
       dbo:leadMember ?singer .
    ?singer foaf:name ?fabulousThunderbirdsRealName .
  }
  
  # Eric Clapton's band
  OPTIONAL {
    ?clapton a dbo:MusicalArtist ;
             foaf:name ""Eric Clapton"" .
    ?clapton dbo:associatedBandOrMusicalArtist ?claptonBand .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
756,28,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Germany_Western .

  ?person dbo:managerOfTeam [
    dbo:team dbr:VfL_Bochum ;
    dbo:season ""2007–08""^^xsd:string
  ] .

  ?person dbo:managerOfTeam [
    dbo:team dbr:SBV_Vitesse ;
    dbo:season ""2020–21""^^xsd:string
  ] .
  
  ?person foaf:name ?managerName .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
158,19,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland and native of Russian Empire.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find people who died at this place
  ?decedent dbo:deathPlace ?deathPlace ;
            dbo:nationality dbr:Grand_Duchy_of_Finland, dbr:Russian_Empire .
  
  # Ensure the death place is the same as the birthplace of Sandro Bertaggia
  FILTER (?deathPlace = ?birthPlace)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
159,3,train,"Give me the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  dbr:Michał_Kazimierz_Pac a dbo:Person .
  OPTIONAL { 
    ?event dbo:agent dbr:Michał_Kazimierz_Pac ;
           a dbo:Event, dbo:MilitaryConflict .
    ?event dbp:forcesInvolved ?force .
  }
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
706,13,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:honoraryTitle dbr:Sangeet_Natak_Akademi_Fellowship .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
ORDER BY ?person
LIMIT 10
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
19,1,train,Give me the spouse of Carrie Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Carrie_Johnson dbo:spouse ?spouse .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
198,25,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  VALUES (?person ?place) { 
    (dbr:Henry_Clay_Lewis dbr:Sparta,_Alabama)
    (dbr:Quincy_Adams_Gillmore dbr:Boscawen,_New_Hampshire)
  }
  
  ?person dbo:birthPlace ?place .
  ?place a dbo:Settlement .
  ?place dbo:country dbr:United_States .

  OPTIONAL { 
    ?entity dbo:location ?place .
  }

  FILTER(?entity != ?place)
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
293,4,train,"Give me the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?location a dbo:PopulatedPlace .
  ?location dbo:country dbr:United_States .
  ?location rdfs:label ""Central, Louisiana""@en .
  OPTIONAL { 
    ?governance dbo:administrativeUnit ?location .
    ?governance dbp:rulingParty ?party .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
412,13,train,Give me the war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?athensEntity WHERE {
  ?leader a dbo:Politician ;
          dbp:party dbr:National_Party_of_Greece .
  
  ?leader dbo:memberOf ?partyLeaderRole .

  ?war dbo:participant ?leader ;
       dbo:location ?location .

  OPTIONAL { 
    ?location rdfs:label ""Athens""@en .
    ?athensEntity a dbo:Place ;
                  dbo:location ?location .
  }
}
ORDER BY ?war
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
859,16,train,"Give me the associated musical artist of the associated musical artist of James Plotkin and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find James Plotkin's associated musical artists
  ?plotkin a dbo:MusicalArtist ;
           foaf:name ""James Plotkin"" .
  
  ?artist dbo:associatedBand ?band ;
          dbo:member ?plotkin .

  # Step 2: Find band members of those associated musical artists
  ?bandMember dbo:member ?artist .

  # Step 3: Ensure the band is also a group and an organization
  ?band a dbo:MusicalGroup, dbo:Organization .

  # Step 4: Specifically focus on ""Burnt by the Sun""
  FILTER(?band = dbr:Burnt_by_the_Sun_(band))
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
816,14,train,Give me the parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  ?child dbo:parent ?parent .
  ?allan a dbo:Person ;
         foaf:name ""Allan Arbus""@en .
  ?allan dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
756,25,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Thomas Letsch as a manager
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en ;
          dbo:occupation dbo:SoccerManager .

  # Manager role for a soccer club season
  ?letsch dbo:managedTeam ?team .
  ?team a dbo:SoccerClub ;
        dbo:sport dbr:Soccer .

  # Soccer club season as a sports team season
  ?season a dbo:SportsSeason ;
          dbo:team ?team .

  # Manager's birthplace in West Germany
  ?manager a dbo:Person ;
           foaf:name ?managerName ;
           dbo:birthPlace dbr:West_Germany .

  # Linking manager to Thomas Letsch through the team
  ?manager dbo:managedTeam ?team .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
23,23,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?party WHERE {
  # Find Roy Leonardo Barreras Montealegre's party
  OPTIONAL {
    ?barreras a dbo:Politician ;
              foaf:name ""Roy Leonardo Barreras Montealegre"" .
    ?barreras dbp:affiliation ?party .
    BIND(""Roy Leonardo Barreras Montealegre"" AS ?personName)
  }
  
  # Find the father of Sofía Petro and his party
  OPTIONAL {
    ?sofia a dbo:Person ;
           foaf:name ""Sofía Petro"" .
    ?sofia dbp:father ?father .
    ?father a dbo:Politician ;
            dbp:affiliation ?party .
    BIND(""Father of Sofía Petro"" AS ?personName)
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
293,21,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Harriette Arlene Lake"" .

  ?person dbo:residence dbr:Central,_Louisiana .

  OPTIONAL { 
    ?partyMembership dbo:member ?person .
    ?partyMembership dbo:politicalParty ?party .
    ?party dbp:country ""United States"" .
    ?party dbp:isRulingParty true .
  }
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,6,train,"Give me the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""William Bayne"" .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:occupation dbr:Royal_Navy_officer .

  ?event dbo:type dbr:Military_conflict ;
         dbo:participant ?person .

  ?event rdfs:label ?war .
}
ORDER BY ?war
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
159,61,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tvShow ?commander WHERE {
  # Find a TV show related to the Battle of Vienna and societal events
  ?tvShow dbo:genre dbr:Military_drama .
  ?tvShow dbo:subject dbr:Battle_of_Vienna .
  ?tvShow dbo:subject dbr:Societal_event .

  # Find a commander associated with the Battle of Vienna
  ?commander dbo:associatedWithEvent dbr:Battle_of_Vienna .
  
  # Link to works by or references to George Ducas
  OPTIONAL { 
    ?tvShow dbp:writer ?writer .
    ?writer foaf:name ""George Ducas""^^xsd:string .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
19,6,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbp:birthName ""Caroline Louise Bevan Symonds""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",2,2,3,2,1,2,2,9,1,0,0,1.0,1.0,1.0
668,50,train,"Give me the person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Joey B's birth name
  ?joeyB a dbo:MusicalArtist .
  ?joeyB dbp:birthName ?birthName .

  # Find the writer associated with ""The Live Anthology""
  ?anthology dbr:The_Live_Anthology .
  ?anthology dbo:author ?writer .
  
  # Ensure the person is both a musical artist and a writer
  ?person a dbo:MusicalArtist ;
          dbp:birthName ?birthName ;
          dbo:profession dbr:Writer .

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
871,14,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  # Ensure the child is a politician
  ?child a dbo:Politician .

  # Find the father of this child
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
361,12,train,Give me the professional in  and actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Rustlers' Rhapsody""@en .
  FILTER (LANG(?movie) = 'en')
  
  ?actor a dbo:Actor .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
151,8,train,Give me the entity in Ottoman Empire and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInOttomanEmpire ?award WHERE {
  # Find Charles Parsons, the British Army officer
  ?charlesParsons a dbo:MilitaryPerson ;
                  foaf:name ""Charles Parsons"" ;
                  dbp:nationality dbr:United_Kingdom .

  # Find awards received by Charles Parsons
  ?charlesParsons dbo:honoraryTitle ?award .

  # Ensure the context involves the Ottoman Empire
  OPTIONAL {
    ?entityInOttomanEmpire dbo:place dbr:Ottoman_Empire ;
                           dbo:relatedTo ?charlesParsons .
  }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
557,32,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo ?producer WHERE {
  # Find the alter ego of ""The Shadow""
  ?shadowCharacter a dbo:FictionalCharacter ;
                  rdfs:label ""The Shadow""@en .
  
  OPTIONAL { 
    ?shadowCharacter dbo:creator ?creator .
    ?creator foaf:name ?alterEgo .
  }
  
  # Find Cora Sue Collins' claim to fame
  ?collins a dbo:Person ;
           dbp:claimToFame dbr:The_Shadow_(radio_series) .
  
  OPTIONAL {
    ?shadowSeries dbo:producer ?producer .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,2,train,Give me the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?university a dbo:University .
  ?university foaf:name ""Пловдивски университет „Паисий Хилендарски“""@bg .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
297,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:United_States .
}
LIMIT 10
```",1,1,2,1,1,2,2,9,1,9,63420,0.1,1.5767647939956798e-05,3.153032428938532e-05
143,5,train,Give me the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?commonName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbp:birthName ""Cynthia Ikponmwenosa Morgan""@en . }
  OPTIONAL { ?person foaf:name ?commonName . }
}
ORDER BY ?commonName
LIMIT 10
```",1,1,2,1,1,3,2,20,0,20,1,0.0,0.0,0
531,49,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Step 1: Find Miguel Maura's political party
  dbr:Miguel_Maura dbo:memberOfParty ?party .

  # Step 2: Identify the leader of this party
  ?leader dbo:positionHeld ?partyLeaderRole .
  ?partyLeaderRole dbp:title ""Leader""@en .
  ?partyLeaderRole dbo:positionHolder ?leader .

  # Step 3: Check if this leader is a tenant of Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardon dbo:residence ?residence .
  ?leader dbo:tenantOf ?residence .

  # Step 4: Retrieve the office held by this leader
  ?officeHolder dbo:positionHeld ?officeRole .
  ?officeRole dbo:positionHolder ?leader .
  ?officeRole dbp:title ?office .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
742,17,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of Ekaterina Zaharieva.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Ekaterina Zaharieva"" .
  ?person dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?region dbo:timeZone dbr:Eastern_European_Time .
    ?person dbo:residence ?region .
  }
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
103,11,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Richard_E._Grant .
  
  # Ensure the movie is also classified as a TV series
  ?movie a dbo:TelevisionSeries .

  # Find other actors in these movies
  ?movie dbo:starring ?actor .
  
  FILTER(?actor != dbr:Richard_E._Grant)
}
ORDER BY ?actor
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,53,0,0.0,0
87,12,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorParadise ?actorAlways ?spouseJanusz WHERE {
  # Actor from ""Paradise"" (2013 film)
  ?paradiseFilm a dbo:Film ;
                dbp:title ""Paradise""@en .
  ?paradiseFilm dbo:starring ?person1 .
  ?person1 foaf:name ?actorParadise .

  # Actor from ""Always"" (1989 film)
  ?alwaysFilm a dbo:Film ;
              dbp:title ""Always""@en .
  ?alwaysFilm dbo:starring ?person2 .
  ?person2 foaf:name ?actorAlways .

  # Spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseJanusz .
}
```",3,3,4,1,3,2,3,28,0,27,1,0.0,0.0,0
39,41,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?samProfession ?shadowAlterEgo ?bobBand WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # The Shadow's alter ego
  dbr:The_Shadow dbp:alterEgo ?shadowAlterEgo .

  # Bob Thompson (musician)'s band
  dbr:Bob_Thompson_(musician) dbo:band ?bobBand .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
198,54,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?recipient ?force ?war WHERE {
  # Find the award associated with Quincy Adams Gillmore in Charleston, SC
  ?award a dbo:Award ;
         dbo:awardee dbr:Quincy_Adams_Gillmore ;
         dbo:location dbr:Charleston,_South_Carolina .

  # Identify the recipient of this award who also received the Medal of Honor
  ?recipient dbo:receivedAward ?medalOfHonor .
  ?medalOfHonor a dbo:Medal_of_Honor ;
                 dbo:awardee ?recipient .

  # Get details about the force and war related to the Medal of Honor
  OPTIONAL { ?recipient dbo:militaryForce ?force . }
  OPTIONAL { ?medalOfHonor dbo:war ?war . }

}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
816,3,train,Give me the person decedent at Los Angeles.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Los_Angeles .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,10,1,2873,0.9090909090909091,0.00346860908775581,0.006910850034554251
468,16,train,"Give me the reference to the real name of Peter IV of Aragon and child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?birthName WHERE {
  # Identify Peter IV of Aragon
  ?peterIV a dbo:Monarch ;
           dbp:country dbr:Aragon ;
           dbp:name ""Peter IV of Aragon""@en .
  
  # Find his children who are royalty
  ?peterIV dbo:child ?child .
  ?child a dbo:Monarch .

  # Get the birth name of the child
  OPTIONAL { ?child dbp:birthName ?birthName . }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
347,20,train,"Give me the commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person a dbo:Person .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  
  ?father a dbo:Person .
  ?father dbo:child ?child .
  ?commander a dbo:Commander ;
             dbo:spouse ?father .

  FILTER(CONTAINS(LCASE(?personLabel), ""thirty years' war""))
}
ORDER BY ?commander
LIMIT 1
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
943,42,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?yeshaq1 a dbo:Monarch ;
           dbo:spouse ?mother ;
           dbo:child ?zaraYaqob .
  
  ?zaraYaqob a dbo:Monarch ;
             rdfs:label ""Zara Yaqob""@en .

  ?amdaseyon1 a dbo:Monarch ;
              dbo:child ?yeshaq1 .

  ?naod a dbo:Monarch ;
        dbo:parent ?yeshaq2 .
  
  ?yeshaq2 a dbo:Monarch ;
           dbo:parent ?zaraYaqob .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
80,0,train,Give me the actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?work a dbo:Film .
  ?work foaf:name ""Shelby Oaks"" .
  ?work dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
80,45,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Actor .
  ?person dbo:film dbr:ATL_(film) .
  ?person dbo:televisionSeries dbr:Shelby_Oaks .
  OPTIONAL { ?person foaf:name ""T.I.""@en . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
353,26,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?reference a dbo:Monarch ;
             dbo:spouseOrPartner ?parent .
  ?child dbo:parent ?parent ;
         a dbo:Monarch .
  ?parent dbo:spouseOrPartner ?father .
}
WHERE {
  ?reference dbp:relatedTo dbr:William_I_of_Germany .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
782,0,train,Give me the reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resource WHERE {
  ?resource a dbo:MusicalArtist .
  ?resource foaf:name ""The Fabulous Thunderbirds"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,49,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  ?ship a dbo:Ship ;
        dbp:name ""USS Arcadia (ID-1605)"" ;
        dbo:owner ?owner .

  # Find the author of An Invitation to the White House who is a politician and office holder
  ?book a dbo:Book ;
        dbp:title ""An Invitation to the White House"" ;
        dbo:author ?author .
  
  ?author a dbo:Politician, dbo:OfficeHolder ;
          dbo:spouse ?spouse .

  # Find a disease that is also a societal event and its commander in war
  ?disease a dbo:Disease, dbo:SocietalEvent ;
           dbo:commanderInWar ?commander .
  
  # Link the owner of USS Arcadia to the spouse of the author
  ?owner foaf:name ?spouseName .

  FILTER(?spouse = ?owner)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,3,train,"Give me the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  ?person foaf:name ?alumnus .
}
ORDER BY ?alumnus
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
628,42,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?artist a dbo:MusicalArtist .
  ?association dbo:associatedBandOrMusicalArtist ?artist .
  ?association dbo:member ?person .
  
  ?person dbo:birthPlace dbr:Puerto_Rico .

  ?bobbyShmurda dbp:associatedBandOrMusicalArtist ?association .
  FILTER(?bobbyShmurda = dbr:Bobby_Shmurda) .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
293,2,train,Give me the person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?alias WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Harriette Arlene Lake"" .
  OPTIONAL { ?person foaf:name ?alias . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
737,25,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg ;
                 a dbo:Person .

  # Archduke Charles Louis of Austria's grandchild (through his child)
  ?archdukeChild dbo:parent dbr:Archduke_Charles_Louis_of_Austria ;
                 a dbo:Person .
  
  ?grandchild dbo:parent ?archdukeChild ;
              a dbo:Person .

  # The person who is both the child of Albrecht and grandchild of Archduke
  FILTER (?albrechtChild = ?grandchild)

  # Ensure the individual belongs to royalty
  ?grandchild dbo:royalty dbr:Royal_House .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
399,5,train,Give me the band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Emilia Yancheva Valeva"" .
  
  # Find bands or groups the person is part of
  ?group dbo:member ?person .
  
  # Retrieve band members
  ?group dbo:member ?bandMember .
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
225,1,train,Give me the birthplace of Chieko Asakawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
595,11,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?author a dbo:Writer ;
          dbo:work dbr:An_Invitation_to_the_White_House ;
          dbo:occupation [a dbo:Politician, dbo:OfficeHolder] .
  OPTIONAL { ?author dbp:spouse ?spouse . }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
293,43,train,"Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person foaf:name ""Harriette Arlene Lake"" .
  ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) .

  ?actor a dbo:Actor ;
         dbo:spouse ?person .

  ?film dbo:producer dbr:Nat_Levine ;
        dbo:starring ?actor .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,5,train,Give me the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Eugène_Cattin a dbo:Person .
  OPTIONAL { dbr:Eugène_Cattin dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
89,32,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Myat Hpone Pyo's father who is royalty
  ?myatHponePyo dbo:parent ?father .
  ?father a dbo:Monarch .

  # Ensure this father is also the parent of Min Hla Htut
  ?minHlaHtut dbo:parent ?father .

  # Find the spouse of this father
  ?father dbo:spouse ?spouse .
}
```",4,5,5,2,2,3,3,71,0,28,1,0.0,0.0,0
103,50,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Actor .
  ?person dbo:profession dbr:Politician .
  ?person foaf:name ""Rajpal Yadav""@en .

  OPTIONAL { 
    ?work dbo:title ""Ab Kya Hoga""@en ;
          dbo:actor ?person .
  }

  OPTIONAL {
    ?shadowWork dbo:title ""The Shadow""@en ;
                dbo:character dbr:Lamont_Cranston ;
                dbo:actor ?person .
  }
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
198,53,train,"Give me the force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?award ?entity WHERE {
  # Quincy Adams Gillmore's military rank
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore"" ;
            dbo:militaryRank ?rank .
  BIND(str(?rank) AS ?force)

  # Award associated with the United States Congress
  ?award a dbo:Award ;
         dbp:awardingBody dbr:United_States_Congress .

  # Entity in the birthplace of Henry Clay Lewis
  ?lewis a dbo:Person ;
         foaf:name ""Henry Clay Lewis"" ;
         dbo:birthPlace ?settlement .
  ?entity dbo:location ?settlement .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,35,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Roger III, Duke of Apulia and his parent
  ?rogerIII a dbo:Duke ;
            dbo:parent ?parentOfRoger .

  # Find Alfonso VI and his child
  ?alfonsoVI a dbo:Monarch ;
             dbo:child ?childOfAlfonso .

  # Find the grandchild of Alfonso VI (child of his child)
  ?grandchild dbo:parent ?childOfAlfonso .
  
  # Match the parent of Roger III with the grandchild of Alfonso VI
  FILTER (?parentOfRoger = ?grandchild)
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
246,13,train,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent ?childParent WHERE {
  # Step 1: Identify Princess Aisha bint Faisal and her parents
  dbr:Princess_Aisha_bint_Faisal dbo:parent ?parent .

  # Step 2: Check if the parent is royalty
  ?parent a dbo:Monarch .

  # Step 3: Find children of that royal parent
  ?parent dbo:child ?child .

  # Step 4: Identify parents of those children
  ?child dbo:parent ?childParent .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
871,26,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:childOf ?parent .

  # Step 2: Find his parents
  OPTIONAL { ?parent dbp:spouse ?stepParent . }

  # Step 3: Determine their children (Edward's siblings)
  ?parent dbo:child ?sibling .
  
  # Step 4: Identify the parents of those children (grandparents of Edward)
  ?sibling dbo:childOf ?grandparent .

  # Filter for politicians and office holders
  FILTER EXISTS { 
    ?grandparent a dbo:Politician ;
                dbo:officeHolder ?office .
  }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
687,15,train,"Give me the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athleteName WHERE {
  # Find Marty Pollio's birthday
  VALUES (?marty) { dbr:Marty_Pollio }
  
  ?marty dbo:birthday ?birthday .
  
  # Find athletes with the same birthday as Marty Pollio
  ?person a dbo:Athlete ;
          dbp:birthday ?sameBirthday .

  FILTER (YEAR(?birthday) = YEAR(?sameBirthday) && MONTH(?birthday) = MONTH(?sameBirthday) && DAY(?birthday) = DAY(?sameBirthday))
  
  # Return the names of these athletes
  ?person foaf:name ?athleteName .
}
ORDER BY ?athleteName
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
159,13,train,Give me the reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?song a dbo:Songs .
  ?song dbp:title ""Always the Love Songs"" .
  ?song dbo:lyricist ?writer .
}
```",2,2,3,2,1,3,3,71,0,0,98450,0,0.0,0
871,47,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .

  # Step 2: Find his children
  ?child dbo:parent ?edward .
  
  # Step 3: Check if any child is an awardee of the Commander of the Royal Victorian Order
  OPTIONAL { 
    ?child dbp:honours ""Commander of the Royal Victorian Order""@en .
  }

  # Step 4: Ensure Edward Stanley is a politician and office holder
  ?edward dbo:occupation [a dbo:Politician] ;
          dbo:officeHolder true .

  # Step 5: Return Edward Stanley as the parent
  BIND(?edward AS ?parent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,50,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office1 ?office2 WHERE {
  # Find Manuel Pinto da Costa's office in a military conflict
  ?person dbr:Manuel_Pinto_da_Costa .
  ?person dbo:occupation [a dbo:OfficeHolder ; dbo:positionHeld ?office1] .
  ?office1 dbo:field dbr:Military_conflict .

  # Find the leadership position of the Conservative Republican Party (Spain)
  ?party dbr:Conservative_Republican_Party_(Spain) .
  ?leader dbo:memberOfParty ?party ;
          dbo:positionHeld ?office2 .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
513,9,train,Give me the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  dbr:George_Hamilton_Cameron a dbo:Person .
  OPTIONAL { dbr:George_Hamilton_Cameron dbo:honoraryAward ?award . }
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
557,5,train,Give me the actor of Johnny Doughboy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?role a dbo:Role .
  ?role dbp:name ""Johnny Doughboy"" .
  ?film dbo:starring ?role .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
119,4,train,Who is the leader of 2009 Galician regional election?,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?election a dbo:Election .
  ?election dbo:date ""2009-05-22""^^xsd:date ; # The date of the Galician regional election
            dbo:electedOffice dbr:President_of_Galicia ;
            dbo:winner ?party .
  
  ?party dbo:leader ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
595,28,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:President_of_the_United_States ;
          dbo:author dbr:An_Invitation_to_the_White_House ;
          dbo:author dbr:Back_to_Work_(book) .
  ?person dbo:commanderInThirdTaiwanStraitCrisis true .
  ?person dbp:spouse ?spouse .
  
  FILTER(?person = dbr:Jimmy_Carter)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
595,56,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Author ;
          dbo:officeHolderOf ?office ;
          dbo:work ?invitation ;
          dbo:work ?backToWork .
  
  ?invitation rdfs:label ""An Invitation to the White House""@en .
  ?backToWork rdfs:label ""Back to Work (book)""@en .

  ?person dbo:commanderIn ?war .
  ?war a dbo:Disease, dbo:SocietalEvent .

  ?ship dbo:owner ?person ;
        rdfs:label ""USS Arcadia (ID-1605)""@en .

  OPTIONAL { ?person dbp:spouse ?spouse . }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
39,57,train,"Give me the professional in Singer and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fictionalCharacter ?alterEgo ?singer ?band WHERE {
  # The fictional character created by Walter B. Gibson
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character rdf:type dbo:FictionalCharacter .
  ?character dbp:name ?fictionalCharacter .

  # The alter ego of the fictional character
  ?character dbo:alterEgo ?alterEgoEntity .
  ?alterEgoEntity foaf:name ?alterEgo .

  # The professional in Singer for Robert Lamar Thompson (Bobby Vee)
  ?singer a dbo:MusicalArtist ;
          dbp:birthName ""Robert Lamar Thompson""^^xsd:string ;
          foaf:name ?singerName .

  # The band associated with Bobby Vee
  ?band a dbo:Band ;
        dbo:member ?singer .
}
```",6,9,7,3,3,3,3,71,0,0,3,0,0.0,0
203,1,train,Give me the military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?participant WHERE {
  dbr:Battle_of_Fort_Royal dbo:participatingMilitaryUnit ?participant .
}
```

This query selects the military units or participants involved in the Battle of Fort Royal by querying DBpedia's structured data.",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
905,23,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  # Step 2: Determine his parent (mother or father)
  ?parent dbo:child ?philip .

  # Step 3: Find that parent's father (grandparent)
  ?grandparent dbo:child ?parent .

  # Step 4: Check if this grandparent is royalty
  ?grandparent a dbo:Monarch ;
               dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
737,49,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalty WHERE {
  # Archduchess Margarete Sophie of Austria's parent
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Philipp Albrecht, Duke of Württemberg's child
  dbr:Philipp_Albrecht_Duke_of_Württemberg dbo:child ?child .

  # Predecessor of the child
  ?predecessor dbo:succeededBy ?child .
  
  # The royalty that is a ""child of the child""
  ?royalty dbo:parent ?child .

  # Ensure the person is royalty
  ?royalty a dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,47,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of Sam Concepcion.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:wikiPageRedirects dbr:The_Shadow .
  ?character dbo:profession ?profession .
  FILTER(?profession IN (dbo:Actor, dbo:Singer))
  OPTIONAL { ?character dbp:alterEgo ?alterEgo . }
}
```",5,7,6,3,2,3,3,71,0,0,39640,0,0.0,0
668,37,train,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person foaf:name ""Stevie Wonder"" .
  ?person dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person dbo:profession dbr:Writer ;
          dbo:profession dbr:MusicalArtist .
  OPTIONAL { 
    ?album dbo:artist ?person .
    ?album foaf:name ""The Live Anthology"" .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
531,19,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find Alberto Ruiz-Gallardón's residence
  ?alberto a dbo:Person ;
           foaf:name ""Alberto Ruiz-Gallardón""@en .
  OPTIONAL { ?alberto dbo:residence ?residence . }
  
  # Find Mariano Rajoy's office
  ?mariano a dbo:Person ;
           foaf:name ""Mariano Rajoy""@en .
  OPTIONAL { ?mariano dbo:office ?office . }

  # Check if the same person is associated with both residence and office
  FILTER (?residence = ?office)
  
  # Return the person who matches both criteria
  BIND(?alberto AS ?person)
  UNION
  BIND(?mariano AS ?person)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
59,8,train,"Give me the native of Bristol and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?club a dbo:SoccerClub ;
        dbo:sportLocation dbr:Bristol ;
        dbo:manager ?manager .
  
  ?person foaf:name ""Jamie McCunnie"" .
  ?manager foaf:member ?person .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
38,16,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?work WHERE {
  dbr:Joe_Biden dbo:author ?work .
  
  ?work a dbo:CreativeWork ;
        a dbo:Book ;
        dbo:genre/dbo:subClassOf* dbo:WrittenWork .

  OPTIONAL { 
    ?work dbp:nationality ""American""^^xsd:string .
  }
}
```",4,10,5,2,2,3,2,20,0,0,1,0,0.0,0
59,3,train,"Give me the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?person foaf:name ""Jamie McCunnie""@en .
  ?person dbo:sportsTeam ?sportsClub .
  ?sportsClub a dbo:SoccerClub .
  
  OPTIONAL { 
    ?sportsClub dbo:member ?player .
    ?player a dbo:Person .
  }
}
```",1,3,2,1,1,2,2,9,0,0,12,0,0.0,0
769,1,train,Give me the player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?team a dbo:SoccerClub .
  ?team foaf:name ""Lai Sun Cheung""@en .
  ?team dbo:member ?player .
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
347,54,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ferdinand II's child who was a commander
  ?child dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?child dbo:occupation dbr:Military_commander .

  # Societal event and television show connection (abstract, not directly queryable)
  OPTIONAL { 
    ?event dbo:relatedEvent ?societalEvent .
    ?tvShow dbo:subject ?person .
  }

  # Family lineage of Archduke Charles Joseph
  ?parent dbo:child dbr:Archduke_Charles_Joseph_of_Austria .
  ?grandChild dbo:parent ?parent .
  ?grandChild dbo:father ?person .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,3,train,Give me the award of Rodney Lees.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Rodney Lee"" .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,19,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?georgeDucas ?successor WHERE {
  # Find George Ducas as a commander in the Russo-Polish War
  ?georgeDucas dbo:wikiPageRedirects dbr:George_Ducas .
  ?georgeDucas dbo:occupation dbr:Military_commander .
  ?georgeDucas dbo:participatedIn dbr:Russo-Polish_War_(1654–1667) .

  # Find the successor
  ?successor dbo:wikiPageRedirects ?redirectedSuccessor .
  ?successor dbo:occupation dbr:Military_commander .
  ?successor dbo:participatedIn dbr:Russo-Polish_War_(1654–1667) .

  # Ensure the successor is distinct from George Ducas
  FILTER(?georgeDucas != ?successor)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
609,37,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ceceBirthPlace ?governorName ?paulusBirthRegion WHERE {
  # Find Cece Bell's birth place
  ?ceceBell a dbo:Writer ;
            dbp:birthPlace ?ceceBirthPlace .

  # Find the governor of Cece Bell's birth place
  ?governor a dbo:Politician ;
           dbo:governmentRole dbr:Governor_of_?ceceBirthPlace ;
           foaf:name ?governorName .

  # Find Paulus Powell's birth place as a region and administrative region
  ?paulusPowell a dbo:Person ;
                dbp:birthPlace ?paulusBirthPlace .
  
  ?paulusBirthPlace a dbo:Region, dbo:AdministrativeRegion .

  FILTER(?ceceBirthPlace = ?paulusBirthPlace)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
609,36,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorBirthPlace ?gilliganBirthPlace WHERE {
  # Find Cece Bell's birth place
  ?person a dbo:Writer ;
          foaf:name ""Cece Bell"" ;
          dbo:nationality dbr:United_States .
  OPTIONAL { ?person dbo:birthPlace ?authorBirthPlace . }

  # Find Vince Gilligan's birth place
  ?gilligan a dbo:Writer ;
            foaf:name ""Vince Gilligan"" .
  OPTIONAL { ?gilligan dbo:birthPlace ?gilliganBirthPlace . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
23,10,train,Give me the entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?person dbo:nationality dbr:Colombia .
  ?person foaf:name ""Daniel Elahi Galán"" .
  
  OPTIONAL { 
    ?entity dbo:country dbr:Colombia .
  }
}
```",2,2,3,2,1,2,3,28,0,0,2141,0,0.0,0
687,39,train,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find Sergio Agüero's team
  ?aguero a dbo:SoccerPlayer ;
          foaf:name ""Sergio Agüero"" .
  
  OPTIONAL { 
    ?aguero dbo:team dbr:Manchester_City_F.C. ; # Assuming Manchester City as an example
            dbp:birthday ?aguedobday .
  }
  
  # Find Marcelo Sarmiento's birthday
  ?sarmiento a dbo:SoccerPlayer ;
             foaf:name ""Marcelo Sarmiento"" ;
             dbp:birthday ?sarmientodobday .

  # Find player who is both a soccer player and manager, born on the same day as Marcelo Sarmiento
  ?player a dbo:SoccerPlayer , dbo:SportsManager ;
          dbp:birthday ?birthday .
  
  FILTER (?birthday = ?sarmientodobday)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
39,38,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Robert Lamar Thompson"" .
  
  OPTIONAL { 
    ?person foaf:name ?professionalName .
    FILTER(CONTAINS(?professionalName, ""The Shadow""))
  }
  
  OPTIONAL {
    ?person dbo:band ?band .
  }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
595,2,train,Give me the commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:name ""Third Taiwan Strait Crisis"" .
  ?event dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
782,9,train,Give me the reference to The Fabulous Thunderbirds and band of Kim Wilson.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?member WHERE {
  # Identify The Fabulous Thunderbirds band
  ?band a dbo:Band ;
        foaf:name ""The Fabulous Thunderbirds""@en .
  
  # Find members of the band
  ?band dbo:bandMember ?member .

  # Filter for Kim Wilson as a member
  ?member foaf:name ""Kim Wilson""@en .
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
384,5,train,"Give me the party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successorParty WHERE {
  # Find Patrice Martin-Lalande's resource
  ?person a dbo:Politician ;
          foaf:name ""Patrice Martin-Lalande""@en .
  
  # Identify his successor
  ?role dbo:member ?person ;
        dbo:member ?successor .

  # Ensure the successor is French and a politician
  ?successor a dbo:Politician ;
             dbp:nationality dbr:French_people ;
             foaf:name ?name .

  # Get the party of the successor
  OPTIONAL { ?successor dbo:party ?party . }
  BIND(IF(BOUND(?party), STR(?party), ""Unknown"") AS ?successorParty)
}
```",2,4,3,2,1,2,2,9,0,0,6,0,0.0,0
609,12,train,Give me the birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  { 
    dbr:Cecile_Bell a dbo:Writer .
    dbr:Cecile_Bell dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    dbr:Glenn_Youngkin a dbo:Politician .
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
  }
}",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
353,58,train,"Give me the child of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Roger II of Sicily and his child
  dbr:Roger_II_of_Sicily a dbo:Monarch ;
    dbo:child ?child1 .

  # Constance of Burgundy's spouse and their child (Roger II)
  dbr:Constance_of_Burgundy dbo:spouse ?spouse ;
    dbo:child ?roger2 .
  
  FILTER(?roger2 = dbr:Roger_II_of_Sicily)

  # Roger II's grandchild
  ?child1 dbo:child ?grandChild .

  # William I of Sicily and his child
  dbr:William_I_of_Sicily a dbo:Monarch ;
    dbo:child ?child2 .

  # The individual we are looking for is the father of William I's child
  ?individual dbo:child ?child2 .
  
  # Ensure the individual is royalty
  ?individual a dbo:Royalty .

  # Ensure all conditions match
  FILTER(?grandChild = ?individual)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
905,29,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mother WHERE {
  ?andrew a dbo:Person ;
          dbo:father dbr:Stephen_V_of_Hungary ;
          dbo:mother ?mother .
  ?stephen a dbo:Person ;
           dbo:child ?andrew .
  ?charlesI a dbo:Person ;
            dbo:father ?andrew .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
687,2,train,Give me the team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:FootballPlayer .
  ?person foaf:name ""Pablo Aimar"" .
  ?person dbo:nationality dbr:Argentina .
  ?person dbo:memberOfTeam ?team .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,0,train,Give me the actor of Dispatches from Elsewhere.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Dispatches_from_Elsewhere dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,5,0,1,1.0,0.8333333333333334,0.9090909090909091
119,4,train,"Who is the native, that is Polish and an athlete, of Łódź?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete .
  ?person dbo:birthPlace dbr:Łódź .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbp:nationality dbr:Poland . }
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,3,2,20,0,20,4,0.0,0.0,0
756,6,train,"Give me the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  dbr:Theodor_Heuss dbo:nationality ?nationality .
  ?nationality dbo:country ?country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,25,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person foaf:name ""Ackquille Jean Pollard"" .
  ?person dbo:birthName ""Ackquille Jean Pollard"" .
  ?person dbo:birthPlace ?birthPlace .
  
  FILTER (
    ?birthPlace IN (dbr:Coro, dbr:Puerto_Rico) ||
    ?birthPlace = dbr:Puerto_Rico
  )
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
905,58,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Charles II of Naples and his spouse
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .
  
  # Child of the spouse (grandchild of Charles II)
  ?child dbo:parent ?spouse ;
         a dbo:Royal .

  # Predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  # Child of the predecessor
  ?predecessorChild dbo:childOf ?predecessor .
  
  # Parent (grandparent) of this child, ensuring they are royalty
  ?predecessorParent dbo:parent ?predecessorChild ;
                    a dbo:Royal .

  # Charles I of Hungary and his father
  dbr:Charles_I_of_Hungary dbo:father ?charlesIFather .
  
  # Connect the grandchild to Charles I's lineage
  ?child = ?charlesIFather .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
756,49,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person a dbo:SportsManager .
  ?person dbo:birthday ""1968-08-26""^^xsd:date .

  ?teamSeason a dbo:SportsTeamSeason ;
              dbo:sport dbr:Soccer ;
              dbo:season ""2007–08 VfL Bochum season"" .

  ?player a dbo:SportsClub, dbo:Organization, dbo:SoccerClub .
  ?player dbo:memberOfTeam ?teamSeason .

  ?manager a dbo:SportsManager .
  ?manager dbp:managedTeam ?teamSeason .

  FILTER (?person = ?manager)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
595,20,train,"Give me the spouse of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?book WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Bill Clinton"" .
  ?person dbo:spouse ?spouse .
  
  ?spouse foaf:name ""Hillary Clinton"" .
  ?work dbo:author ?spouse ;
        a dbo:Book .
        
  ?work dbp:title ?book .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
23,16,train,Give me the party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royParty ?fatherParty WHERE {
  # Roy Barreras
  dbr:Roy_Barreras a dbo:Person .
  OPTIONAL { dbr:Roy_Barreras dbo:partyAffiliation ?royParty . }

  # Sofía Petro and her father
  dbr:Sofía_Petro a dbo:Person ;
                 dbp:father ?father .

  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,1,train,Give me the birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Smita_Patil dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
531,44,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderOffice ?commanderOffice WHERE {
  # Leader of the Conservative Republican Party (Spain)
  ?person a dbo:Politician ;
          dbo:partyMembership dbr:Conservative_Party_(Spain) .
  
  # Office held in Madrid
  ?office dbo:location dbr:Madrid ;
          dbo:holder ?person .
  BIND(dbp:title AS ?leaderOffice)

  OPTIONAL {
    # Commander role in the Central African Republic Civil War
    ?commanderRole a dbo:MilitaryCommand ;
                   dbo:place dbr:Central_African_Republic_Civil_War .
    
    ?commanderPerson a dbo:Politician ;
                     dbo:militaryCommand ?commanderRole .
    
    ?commanderOffice dbo:holder ?commanderPerson .
    BIND(dbp:title AS ?commanderOffice)
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
159,23,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac as a politician and office holder
  dbr:Mikołaj_Kazimierz_Pac a dbo:Politician ;
                           dbo:officeHolderOf ?office .

  # His role in a military conflict
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?michałPacRole .
  
  # Michał Kazimierz Pac's involvement in the conflict
  ?michałPacRole dbp:person dbr:Mikołaj_Kazimierz_Pac .

  # Find his successor
  ?conflict dbo:successorOfCommander ?successorRole .
  ?successorRole dbp:person ?successor .
}
```",3,7,4,3,1,3,3,71,0,0,3,0,0.0,0
943,32,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# There is no valid SPARQL query for this question as there is no direct connection between Lamont Cranston and Dawit II in DBpedia.
```",4,5,5,2,2,3,3,71,0,0,3,0,0.0,0
246,9,train,"Give me the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Princess_Aisha_bint_Faisal dbo:parent ?parent .

  ?parent a dbo:Monarch ;
          dbo:spouse|dbo:child ?royalParent .

  ?royalParent dbo:child ?child .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
39,59,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?characterName ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:wikiPageDisambiguates ?comicsResource .
  ?comicsResource rdf:type dbo:ComicBook .

  OPTIONAL { 
    ?character dbp:alterEgo ?alterEgo .
  }

  ?producer a dbo:MusicProducer ;
            dbo:worksFor dbr:Coke_Studio_Philippines .
  
  FILTER regex(?alterEgo, ""detective|playboy"", ""i"")
}
ORDER BY ?characterName
LIMIT 1
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
628,55,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  VALUES (?bobby) { dbr:Bobby_Shmurda }
  ?bobby dbo:birthName ""Bobby Ray Simmons Jr."" .

  ?bandMember dbo:associatedBandMemberOf ?bobby .
  ?bandMember a dbo:MusicalArtist .

  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award dbr:Premio_Nacional_de_Música_de_Puerto_Rico .
  ?region a dbo:Region ;
          dbo:stateOrProvince dbr:Puerto_Rico ;
          dbo:settlement dbr:San_Juan,_Puerto_Rico .

  ?person dbp:birthPlace ?region .
  ?person dbo:birthName ""Bobby Ray Simmons Jr."" .
  
  ?person a dbo:MusicalArtist .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
353,20,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Roger II of Sicily and his children
  dbr:Roger_II_of_Sicily dbo:child ?child .
  
  # The child must also be a parent to a royalty child of William I of Sicily
  ?child dbo:parentOf ?royaltyChild .
  ?royaltyChild dbo:parent dbr:William_I_of_Sicily .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
78,13,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  {
    ?person a dbo:MusicalArtist .
    ?person dbp:birthName ""Stuart Mcbeath Tosh"" .
    ?person dbo:associatedBandOrMusicalArtist ?associatedArtist .
  }
  UNION
  {
    ?person a dbo:MusicalArtist .
    ?person dbp:birthName ""Billy Lyall"" .
    ?person dbo:associatedBandOrMusicalArtist ?associatedArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
756,19,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Identify VfL Bochum as a sports club and soccer club
  dbr:VfL_Bochum dbo:type dbo:SportsClub ;
                 dbo:sport dbr:Soccer .

  # Find the manager during the 2007–08 season
  ?season dbp:team dbr:VfL_Bochum ;
          dbp:year ""2007""^^xsd:gYear .
  
  ?manager dbo:position dbr:Manager ;
           dbo:managedTeam ?season .

  # Filter by nationality (native to West Germany)
  ?manager dbo:nationality dbr:West_Germany .

  # Get the manager's name
  ?manager foaf:name ?managerName .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
905,47,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfFather WHERE {
  # Maria of Bytom's spouse
  ?mariaSpouse a dbo:Person ;
               dbp:spouse dbr:Maria_of_Bytom .

  # Father of Philip I, Prince of Taranto
  ?philipFather a dbo:Person ;
                dbp:child dbr:Philip_I,_Prince_of_Taranto .

  # Shared spouse between Maria's spouse and Philip's father
  ?sharedSpouse a dbo:Person ;
                dbp:spouse ?mariaSpouse ;
                dbp:spouse ?philipFather .

  # Father of the shared spouse
  ?fatherOfSharedSpouse a dbo:Person ;
                        dbp:child ?sharedSpouse .

  # Parent (mother or father) of this father
  ?parentOfFather a dbo:Person ;
                  dbp:child ?fatherOfSharedSpouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
80,1,train,Give me the actor of ATL (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  dbr:ATL a dbo:Film .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
628,18,train,Give me the native of Florida and person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  ?person foaf:name ""Ackquille Jean Pollard"" .
  ?band dbo:member ?person .
  ?band dbp:name ""Uncle Murda"" .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,48,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find Marty Pollio's birthday
  VALUES ?martyBirthday { 
    ?marty . 
  }
  
  ?marty a dbo:Athlete ;
         foaf:name ""Marty Pollio"" .
  
  OPTIONAL { ?marty dbp:birthday ?martyBirthday . }

  # Find the athlete who shares Marty's birthday
  ?athlete a dbo:Athlete ;
           dbp:birthday ?martyBirthday .

  # Find the soccer player/manager born on 1979-11-03
  ?soccerPerson a dbo:SoccerPlayer, dbo:SportsManager ;
                dbp:birthday ""1979-11-03""^^xsd:date .
  
  # Get the team of this soccer player/manager
  OPTIONAL { 
    ?soccerPerson dbo:team ?team .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
158,22,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthCountry .
  
  # Ensure the birthplace is a country
  ?birthCountry a dbo:Country .

  # Find people who died at this birthplace
  ?decedent dbo:deathPlace ?deathPlace .
  FILTER (?deathPlace = ?birthCountry)

  # Find individuals native to the administration of Alexander II, Grand Duke of Finland
  ?decedent dbo:nationality dbr:Grand_Duchy_of_Finland ;
            dbo:era dbr:Aleksandr_II,_Tsar_of_Russia .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
159,1,train,Give me the reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  ?person foaf:name ""George Ducas"" .
  OPTIONAL { ?person dbo:wikiPageRedirects ?redirect . }
  BIND(URI(CONCAT(""http://dbpedia.org/resource/"", STR(?person))) AS ?reference)
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
769,2,train,Give me the birthday of Tony Hollings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthday WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Tony Hollings"" .
  OPTIONAL { ?person dbp:birthday ?birthday . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
347,46,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:SocietalEvent ;
         a dbo:Event ;
         a dbo:TelevisionShow .

  ?war dbo:commander ?commander ;
       dbo:conflict [dbo:participatingMilitaryForce dbr:Algerian_War] .

  ?child dbp:father ?commander ;
         dbp:mother ?mother .

  ?emperor a dbo:Person ;
           foaf:name ""Ferdinand III, Holy Roman Emperor"" .
  
  ?emperor dbp:child ?child .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,57,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfCharlesII WHERE {
  # Charles II of Naples and his spouse
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .
  
  # Parent of the father (maternal grandmother) of Charles II's spouse
  ?spouseOfCharlesII dbo:father ?fatherOfSpouse .
  ?motherOfFather dbp:child ?fatherOfSpouse .
  
  # Spouse of Maria of Bytom and their parent
  dbr:Maria_of_Bytom dbo:spouse ?spouseOfMaria .
  ?parentOfSpouse dbp:child ?spouseOfMaria .

  # Child of the child (grandchild) of Béla IV of Hungary
  dbr:Béla_IV_of_Hungary dbo:child ?childOfBelaIV .
  ?grandchild dbp:child ?childOfBelaIV .

  # Linking all together
  FILTER(?motherOfFather = ?parentOfSpouse)
  FILTER(?spouseOfMaria = ?grandchild)

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
38,14,train,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?author WHERE {
  ?commander a dbo:OfficeHolder .
  ?commander dbo:office dbo:Commander .
  ?commander dbo:heldByPosition dbr:Korean_War .

  OPTIONAL { 
    ?work dbo:author ?author .
    ?work a dbo:WrittenWork .
    ?commander dbp:writtenWorks ?work .
  }
}
```",3,6,4,3,1,3,2,20,0,0,24,0,0.0,0
80,48,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find the author of ""Smartbomb""
  ?author a dbo:Writer ;
          dbo:work ?smartbombBook .
  
  # Identify the book ""Smartbomb""
  ?smartbombBook rdfs:label ""Smartbomb""@en .

  # Find The Shadow's alter ego
  ?shadowAlterEgo a dbo:FictionalCharacter ;
                  dbp:alterEgo dbr:The_Shadow .

  # Find a movie that involves both the author and the alter ego
  ?movie dbo:starring ?author ;
         dbo:starring ?actor .
  
  FILTER(?actor != ?author) # Ensure we get an actor different from the author

}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
198,7,train,Give me the person deceased on 1850-08-05.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
859,15,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Find the musical artist associated with Phantomsmasher
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Phantomsmasher"" .

  # Identify bands that are groups and organizations
  ?band a dbo:Band, dbo:Organization, dbo:Group ;
        dbo:member ?person .

  # Find the reference to Burnt by the Sun as a group
  ?reference a dbo:Group ;
             foaf:name ""Burnt by the Sun"" .

  # Link the band with the reference
  ?band dbp:reference ?reference .

  # Ensure the person is a member of the identified band
  ?person dbo:memberOf ?band .
  
  # Return the band members
  ?person foaf:name ?bandMember .
}
```",4,8,5,3,2,3,2,20,0,0,5,0,0.0,0
39,56,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Bob Thompson"" .
  OPTIONAL { ?person dbp:birthName ""Bob Thompson""@en . }
  ?person dbo:associatedBand ?band .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
941,11,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of Prince Augustus William of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Duke Anthony Ulrich of Brunswick and his spouse
  ?duke a dbo:Person ;
        foaf:name ""Anthony Ulrich, Duke of Brunswick-Wolfenbüttel""@en ;
        dbo:spouse ?spouse .
  
  ?spouse a dbo:Person ;
          dbp:title dbr:Princess_of_Prussia ;
          foaf:name ""Sophia Charlotte of Hanover""@en .

  # Their children
  ?duke dbo:child ?child .
  OPTIONAL { ?spouse dbo:child ?child . }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
472,6,train,Give me the administration of Christian IX of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration ?territory WHERE {
  dbr:Christian_IX_of_Denmark a dbo:Monarch .
  OPTIONAL { 
    ?administration dbo:monarch dbr:Christian_IX_of_Denmark ;
                    dbo:administrativeRegion ?territory .
    FILTER EXISTS { ?territory dbp:capital dbr:Copenhagen }
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
472,13,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Christian IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory WHERE {
  # Hans Christian Andersen's death place
  dbr:Hans_Christian_Andersen dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Territories administered from this place
  ?administration dbo:administers ?territory ;
                  dbo:location ?deathPlace .

  # Administration under Christian IX of Denmark
  ?christianIX dbo:position dbr:King_of_Denmark ;
               dbo:monarchOf dbr:Denmark .
  
  OPTIONAL { 
    ?administration dbo:startDate ?start ;
                    dbo:endDate ?end .
    
    FILTER (?start <= ""1912-01-01""^^xsd:date && (BOUND(?end) => ?end >= ""1848-11-15""^^xsd:date))
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,2,train,"Give me the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club WHERE {
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Denis Kolodin""@en .
  ?player dbo:playsFor ?club .
  ?club a dbo:SoccerClub .
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
398,13,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?player a dbo:SoccerPlayer .
  ?player foaf:name ""Denis Kolodin"" .
  ?player dbo:nationality ?nationality .
  ?club a dbo:SoccerClub .
  ?club dbo:member ?player .
  OPTIONAL { ?player dbp:nickname ?nickname . }
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
140,6,train,Give me the commander in Pickett's Charge and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf dbr:Picketts_Charge .
  OPTIONAL { ?person dbo:partyMember dbr:Republican_Party_(United_States) . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
737,19,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find children of Philipp Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Ensure the child is also a child of Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Find predecessors for each child
  ?position dbp:title ?title .
  ?position dbo:successor ?child .
  ?position dbo:predecessor ?predecessor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,15,train,Who is the awardee of the award of Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardName ?awardee WHERE {
  ?person a dbo:Person ;
          foaf:name ""Vince Gilligan""@en .
  
  ?award dbo:recipient ?person ;
         a dbo:Award .

  OPTIONAL { ?award rdfs:label ?awardName . FILTER (lang(?awardName) = 'en') }
  OPTIONAL { ?award dbo:winner ?awardee . 
             ?awardee foaf:name ?awardeeName .
             FILTER (lang(?awardeeName) = 'en')
           }
}
ORDER BY ?awardName
LIMIT 10
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resource ?property ?value WHERE {
  ?resource ?property ?value .
  FILTER(?property != rdf:type) # Exclude type properties to focus on references
}
LIMIT 10
```

This query selects resources and their associated properties and values, excluding the `rdf:type` property to avoid returning types rather than references. You can replace `?resource` with a specific resource URI if you have one in mind.",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
412,14,train,"Give me the war of Napoleon Zervas and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?entityInDeathPlace WHERE {
  # Find wars involving Napoleon Bonaparte
  ?war a dbo:MilitaryConflict ;
      dbo:participatedIn [
        dbo:agent dbr:Napoleon_Bonaparte
      ] .
  
  # Find Antonios Varthalitis' death place and related entity
  dbr:Athens dbo:placeOfBirth ?personDeathPlaceEntity .
  
  # Ensure the death place is a settlement
  ?personDeathPlaceEntity a dbo:Settlement .

  # Link the war to the entity in the death place
  ?war dbo:location ?entityInDeathPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
159,9,train,Give me the successor of Yurii Khmelnytsky and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?ducasReference WHERE {
  # Find Yurii Khmelnytsky's successor
  ?yuriikhmelnytsky a dbo:Person ;
                   foaf:name ""Yurii Khmelnytsky""@en .
  
  OPTIONAL { 
    ?yuriikhmelnytsky dbo:succeededBy ?successor .
  }
  
  # Reference to George Ducas
  ?ducas a dbo:Person ;
         foaf:name ""George Ducas""@en .

  OPTIONAL {
    ?ducasReference dbo:relatedTo ?ducas .
  }

  FILTER (?successor != dbr:Yurii_Khmelnytsky)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,21,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Miguel Maura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenant WHERE {
  # Find Alberto Ruiz-Gallardón's residence
  ?person1 dbr:Alberto_Ruiz-Gallardón .
  OPTIONAL { ?person1 dbo:residence ?residence . }
  
  # Find Miguel Maura's office
  ?person2 dbr:Miguel_Maura .
  OPTIONAL { ?person2 dbo:office ?office . }

  # Check if the same person is associated with both places
  FILTER (?residence = ?office)
  BIND(?person1 AS ?tenant) 
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,31,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?residence WHERE {
  # Find Mariano Rajoy as an office holder
  ?person a dbo:OfficeHolder ;
          foaf:name ""Mariano Rajoy""@en .
  
  # Identify his role in the 2003 Madrid City Council election
  ?role dbo:startDate ?start ;
        dbo:endDate ?end ;
        dbo:office ?office ;
        dbo:holder ?person .
        
  FILTER (?start <= ""2003-01-01""^^xsd:date && ?end >= ""2003-12-31""^^xsd:date)
  
  # Find the residence associated with this office
  OPTIONAL { 
    ?office dbp:residence ?residence .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
414,6,train,Give me the show of Royal Swedish Academy of Sciences and award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Max Born""@en .
  OPTIONAL { 
    ?nobelAward dbo:recipient ?person ;
                dbo:prize dbr:Nobel_Prize_in_Physics ;
                dbo:year ?year .
    ?nobelAward dbp:awardedBy dbr:Royal_Swedish_Academy_of_Sciences .
    BIND(""Nobel Prize in Physics"" AS ?show)
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
80,47,train,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify a song by T.I. that is also a musical work
  ?song dbo:artist dbr:T.I. ;
        a dbo:Songs .

  # Step 2: Find an album associated with this song
  ?album dbo:song ?song ;
         a dbo:Album .

  # Step 3: Identify movies related to the album (if any)
  OPTIONAL { 
    ?movie dbo:actor ?actor .
    ?movie dbp:relatedWork ?album .
  }

  # Filter for actors in movies
  FILTER EXISTS { ?movie dbo:actor ?actor }
}
```",5,7,6,3,2,3,3,71,0,0,10,0,0.0,0
159,42,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor WHERE {
  ?commander a dbo:Politician ;
             dbo:officeHolder true ;
             dbo:memberOf ?war .
  
  ?war dbo:name ""Russo-Polish War (1654–1667)""@en .

  OPTIONAL { ?commander dbp:succeededBy ?successor . }

  FILTER EXISTS {
    ?reference dbr:George_Ducas ;
               dbo:relatedTo ?commander .
  }
  
  FILTER EXISTS {
    ?event dbr:Jean_Baptist_Comte_d'Arco ;
           dbo:relatedEvent ?war .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
203,48,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military conflict involving ""The Triple X's""
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:participatingMilitaryUnit dbr:The_Triple_Xs .

  # Find the military conflict involving Robert Calder
  ?calderEvent a dbo:Event ;
               dbo:agent dbr:Robert_Calder ;
               dbo:relatedEvent ?conflict .

  # Identify the commander of the conflict
  ?conflict dbo:commander ?commander .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
392,2,train,Give me the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?description WHERE {
  ?entity rdfs:label ""Der Blau""@en .
  OPTIONAL { ?entity dbo:abstract ?description . FILTER (lang(?description) = 'en') }
}
LIMIT 10
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
633,12,train,Give me the spouse of Renée of Bourbon and parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?renée dbo:spouse ?spouse .
  FILTER (str(?renée) = ""Renée_of_Bourbon"")
  
  ?parent dbo:child ?fatherOfDorothea .
  ?fatherOfDorothea dbp:name ""Nicholas_I,_Duke_of_Lorraine"" .
  
  ?spouse dbo:child ?parent .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,10,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderEgyptSyria ?forceCapeFinisterre WHERE {
  # French campaign in Egypt and Syria
  OPTIONAL {
    ?campaign dbo:commander ?commanderEgyptSyria .
    ?campaign rdf:type dbo:MilitaryConflict .
    ?campaign dbp:name ""French campaign in Egypt and Syria"" .
  }
  
  # Battle of Cape Finisterre (1805)
  OPTIONAL {
    ?battle dbo:militaryForce ?forceCapeFinisterre .
    ?battle rdf:type dbo:MilitaryEngagement .
    ?battle dbp:name ""Battle of Cape Finisterre (1805)"" .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,3,train,Give me the person born as Richard Grant Esterhuysen.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Richard Grant Esterhuysen"" .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
58,17,train,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Identify Ian Gregson as a poet
  ?ianGregson a dbo:Poet ;
              foaf:name ""Ian Gregson"" .

  # Find his spouse, Linda Bruckheimer
  ?ianGregson dbo:spouse ?lindaBruckheimer .
  ?lindaBruckheimer foaf:name ""Linda Bruckheimer"" .

  # Determine movies related to both individuals
  ?movie dbo:award ?award ;
         dbo:producer ?producer .

  OPTIONAL { 
    ?movie dbo:actor ?ianGregson .
    ?movie dbo:actor ?lindaBruckheimer .
  }

  # Filter for awards associated with Ian Gregson
  ?award dbo:recipient ?ianGregson .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
412,19,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?konstantinosWars ?leaderWars ?athensEntity WHERE {
  # Konstantinos Ventiris and his wars
  OPTIONAL {
    dbr:Konstantinos_Ventiris dbo:participatedInWar ?konstantinosWars .
  }

  # Leader of the National Party of Greece and their wars
  OPTIONAL {
    ?leader a dbo:Politician ;
            dbp:party dbr:National_Party_of_Greece ;
            dbo:participatedInWar ?leaderWars .
  }

  # Entity in Athens
  OPTIONAL {
    ?athensEntity a dbo:Person ; 
                  dbo:residence dbr:Athens .
  }
}
```",4,4,5,2,3,2,3,28,0,23,1,0.0,0.0,0
89,28,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Saw Shwe Khet's spouse
  ?sawShweKhet a dbo:Person ;
               dbp:spouse ?spouse .

  # Find Min Hla Htut of Pyakaung's parent
  ?minHlaHtut a dbo:Person ;
              dbp:parent ?parent .

  # Ensure the spouse is also a child of Min Hla Htut's parent
  ?spouse dbo:childOf ?parent .

  # Find Myat Hpone Pyo's predecessor
  ?myatHponePyo a dbo:Person ;
                dbo:predecessor ?predecessor .

  # Ensure the spouse is also the predecessor of Myat Hpone Pyo
  FILTER(?spouse = ?predecessor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,25,train,Give me the parent of the child of Allan Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?parent WHERE {
  # Find children of Allan Arbus and Amy Arbus
  ?allan a dbo:Person ;
         foaf:name ""Allan Arbus""@en .
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .

  ?child dbo:parent ?allan ;
         dbo:parent ?amy .

  # Find the parent of those children
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
353,17,train,"Who is the child of the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Constance of Burgundy
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  
  # Find her spouse who is royalty
  ?spouse dbo:spouse ?constance ;
          a dbo:Monarch ;
          dbp:surname ?surname .

  # Determine the children of that spouse
  ?child dbo:parent ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
782,2,train,Give me the associated musical artist of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Nick Curran"" .
  OPTIONAL { 
    ?association dbo:associatedBandOrMusicalGroup ?band .
    ?band dbo:member ?associatedArtist .
  }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
38,13,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:OfficeHolder ;
          a dbo:Politician .
  
  ?position dbo:officeHolder ?person ;
            dbo:officeName dbr:Commander_in_the_North_Carolina_Air_National_Guard .

  ?work dbo:author ?author ;
        a dbo:Book ;
        a dbo:WrittenWork ;
        dbo:country dbr:United_States .
}
```",3,9,4,3,1,3,2,20,0,0,1,0,0.0,0
943,44,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of Dawit I.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Monarch .
  ?person dbo:country dbr:Ethiopia .
  ?person dbp:spouse ?spouse .
  ?spouse dbp:child ?child1 .
  ?child1 dbp:child ?child2 .
  FILTER(?child2 = dbr:Dawit_I)
  OPTIONAL { ?person foaf:name ""Zara Yaqob""@en . }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
468,8,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Peter_IV_of_Aragon dbo:spouse ?spouse .
  ?parent a dbo:Person ;
          dbo:spouse ?spouse ;
          dbo:child ?child .
  
  OPTIONAL { ?child dbo:title ?title . }
  
  FILTER EXISTS { ?child dbo:title ?title } # Ensures the child has a title, indicating royalty
}
ORDER BY ?child
LIMIT 10
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
347,55,train,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?event WHERE {
  # Ferdinand II is the father of Cecilia Renata and Ferdinand III
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:spouse ?mother .
  
  # Cecilia Renata's details
  ?ceciliaRenata dbo:parent ?father ;
                a dbo:Person ;
                foaf:name ""Cecilia Renata of Austria""@en .

  # Ferdinand III's details
  ?ferdinandIII dbo:parent ?father ;
                a dbo:Person ;
                foaf:name ""Ferdinand_III,_Holy_Roman_Emperor""@en .
  
  # Find the child who is a commander in the war
  ?commander dbo:parent ?ferdinandIII ;
             dbo:occupation dbr:Military_commander .

  # Societal events, events, and television shows related to the 2nd Dragoon Regiment (France)
  ?event dbo:relatedWork ?tvShow .
  ?tvShow a dbo:TelevisionSeries .
  ?tvShow dbo:subject dbr:2nd_Dragoon_Regiment_(France) .

  # Linking the child to the event
  ?child dbo:occupation ?commander ;
         dbo:relatedEvent ?event .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
595,1,train,Give me the author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  dbr:Back_to_Work_(book) dbo:author ?person .
  OPTIONAL { ?person foaf:name ?name . }
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,25,train,Give me the birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  { 
    # Query for Cece Bell, author of El Deafo
    dbr:Cecily_Ann_Bell a dbo:Writer .
    dbr:Cecily_Ann_Bell dbo:birthPlace ?birthPlace .
    BIND(dbr:Cecily_Ann_Bell AS ?person)
  }
  
  UNION
  
  { 
    # Query for Glenn Youngkin
    dbr:Glenn_Youngkin a dbo:Person .
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
    BIND(dbr:Glenn_Youngkin AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
687,22,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerName ?team WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:managerTeam ?team .
  ?person foaf:name ?playerName .

  OPTIONAL { 
    ?person dbo:playedFor ?team .
  }

  # Find connection to Juan Carlos Molina
  ?molina a dbo:SoccerPlayer ;
          foaf:name ""Juan Carlos Molina"" .
  
  FILTER EXISTS {
    ?molina dbo:playedWith ?person .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
384,6,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Bruno Daniel Marie Paul Retailleau"" .
  OPTIONAL { ?person dbo:officeHolderOf ?office . }
  OPTIONAL { ?person dbp:politicalParty ?party . }
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
531,4,train,Give me the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
119,25,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Spanish_Nation .
  ?person dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .

  # Find individuals who have been Prime Ministers of Spain
  ?person dbo:positionHeld dbr:Prime_Minister_of_Spain .

  OPTIONAL { 
    ?person foaf:name ?name . 
  }
}
ORDER BY ?leader
LIMIT 10
```",3,4,4,2,2,3,3,71,0,0,23,0,0.0,0
609,21,train,Give me the birth place of Cece Bell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Cece Bell's birth place
SELECT ?birthPlace WHERE {
  dbr:Cecil_Alice_Bell a dbo:Writer .
  dbr:Cecil_Alice_Bell dbo:birthPlace ?birthPlace .
}

UNION

# Query for the birth places of awardees related to Vince Gilligan
SELECT DISTINCT ?awardeeBirthPlace WHERE {
  ?award dbo:recipient ?person .
  ?person foaf:name ""Vince Gilligan""@en .
  ?person dbo:birthPlace ?awardeeBirthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,43,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fabulousThunderbirds ?nickCurran ?bandMember WHERE {
  # Reference to The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
    dbo:member ?bandMember .

  # Nick Curran as an associated musical artist
  dbr:Nick_Curran a dbo:MusicalArtist .

  # Find band members of The Fabulous Thunderbirds who are also musicians
  ?bandMember a dbo:MusicalArtist .

  # Person born on March 30, 1945
  ?person a dbo:Person ;
    dbp:birthday ""1945-03-30""^^xsd:date ;
    dbo:member ?bandMember .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
557,36,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor of ""High Society Blues""
  ?actor a dbo:Actor ;
         dbo:film dbr:High_Society_Blues .

  # Find movies they have acted in
  ?movie dbo:starring ?actor .
  
  # Retrieve producers of those movies
  ?movie dbo:producer ?producer .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,16,train,"Give me the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Saw Shwe Khet and their children who are royalty
  ?sawShweKhet a dbo:Monarch ;
               dbp:child ?child .
  
  FILTER EXISTS { ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en }
  FILTER EXISTS { ?child a dbo:Monarch }

  # Find the father of that child who is also royalty
  ?child dbp:father ?father .
  FILTER EXISTS { ?father a dbo:Monarch }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
816,47,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find movies featuring Herschel Bernardi
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Herschel_Bernardi .

  # Identify actors in those movies
  ?movie dbo:starring ?actor .

  # Get Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .

  # Find professionals with the same profession as Eugène Cattin
  ?professional a dbo:Person .
  ?professional dbo:profession ?eugeneProfession .

  # Identify parents of those professionals
  ?parent dbo:child ?professional .

  # Check if any actor is also a parent of such a professional
  FILTER (?actor = ?parent)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
68,13,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?dorothea a dbo:Person ;
            dbo:parent ?isabella .
  ?isabella a dbo:Person ;
            dbo:parent ?maximilianI .
  ?maximilianI dbo:spouse ?motherOfIsabella ;
              foaf:name ""Maximilian I, Holy Roman Emperor"" .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
782,11,train,Give me the reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalArtist .
  OPTIONAL { dbr:The_Fabulous_Thunderbirds dbp:birthName ?birthName . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
668,55,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?person a dbo:MusicalArtist .
  
  # Rod Argent's profession is musician
  ?rodArgent dbo:profession dbr:Musician .

  # Joey B's birth name
  ?joeyB dbp:birthName ""Joseph Benjamin Adu Boaitey""^^xsd:string .
  
  # Stonebwoy's association
  ?stonebwoy a dbo:MusicalArtist ;
             foaf:name ""Stonebwoy""@en .

  # Find the professional with Joey B's birth name and associated with Stonebwoy
  ?professional dbp:birthName ?joeyBBirthName .
  FILTER(?joeyBBirthName = ""Joseph Benjamin Adu Boaitey""^^xsd:string)
  
  OPTIONAL { ?association dbo:associatedMusicalArtist ?stonebwoy . }
  ?professional dbo:profession ?rodArgentProfession .
  FILTER(?rodArgentProfession = dbr:Musician)

}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
816,38,train,Give me the parent of the child of Allan Arbus and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?child dbo:parent dbr:Allan_Arbus .
  ?spouse dbo:spouse ?child .
  ?spouse a dbo:Photographer .
  ?spouse dbo:parent ?parent .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
246,14,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Princess Muna al-Hussein
  dbr:Princess_Muna_al-Hussein dbo:child ?child .

  # Step 2: Find her children who are royalty
  ?child a dbo:Monarch ;
        dbp:title ?title .
  
  # Step 3: Determine the parents of those children
  ?child dbo:parent ?parent .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
295,3,train,"Give me the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  dbr:Apache_Indian a dbo:MusicalArtist .
  ?work dbo:artist dbr:Apache_Indian ;
        a dbo:MusicalWork .
}
ORDER BY ?work
LIMIT 10
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
557,50,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor of Johnny Doughboy and its producer
  ?work1 a dbo:Film ;
         dbp:title ""Johnny Doughboy"" ;
         dbo:starring ?actor ;
         dbo:director ?producer .

  # Find works that are movies produced by Janet Gaynor
  ?work2 a dbo:Film ;
         dbo:directedBy ?producer ;
         dbo:starring dbr:Janet_Gaynor .
  
  FILTER(?work1 != ?work2)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
103,56,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?show a dbo:TelevisionSeries ;
        dbo:starring dbr:Richard_E._Grant ;
        dbo:basedOn dbr:The_Shadow_(comics) .
  
  ?character dbo:alterEgo dbr:The_Shadow_(video_game) .

  ?actor a dbo:Actor ;
         dbo:profession dbp:Actor ;
         dbo:starringIn ?show .
}
```",6,8,7,3,3,3,3,71,0,0,9,0,0.0,0
414,4,train,Give me the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  dbr:Nobel_Prize_in_Physics a dbo:Award .
  OPTIONAL { dbr:Nobel_Prize_in_Physics dbp:reference ?reference . }
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,58,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?juanCarlosTeam ?actorName ?actorTeam ?marceloTeam WHERE {
  # Juan Carlos Molina's team
  ?molina a dbo:SoccerPlayer ;
          dbp:team ?juanCarlosTeam .
  FILTER(STR(?molina) = ""Juan_Carlos_Molina_(footballer)"")

  # Actor in ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  ?actor dbr:All_or_Nothing:_Manchester_City ;
         foaf:name ?actorName ;
         dbo:profession dbr:SoccerPlayer, dbr:Athlete .
  OPTIONAL { ?actor dbp:team ?actorTeam . }

  # Person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  ?sarmiento dbo:birthday ?birthday ;
            foaf:name ""Marcelo Sarmiento"" .
  ?person dbo:birthday ?birthday ;
          dbo:profession dbr:SoccerPlayer, dbr:SoccerManager .
  OPTIONAL { ?person dbp:team ?marceloTeam . }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
203,44,train,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?militaryForce ?calderEvent ?bayneConflict WHERE {
  # French campaign in Egypt and Syria
  ?campaign a dbo:MilitaryCampaign ;
            dbo:commander ?commander ;
            dbo:militaryForce ?militaryForce .
  
  FILTER(?campaign = dbr:French_campaign_in_Egypt_and_Syria)

  # Events involving Robert Calder
  ?calderEvent a dbo:SocietalEvent, dbo:Event ;
               dbo:agent dbr:Robert_Calder .

  # Military conflict involving William Bayne
  ?bayneConflict a dbo:MilitaryConflict, dbo:Event ;
                 dbo:agent dbr:William_Bayne_(Royal_Navy_officer) .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
859,6,train,Give me the associated musical artist of Phantomsmasher and band member of Human Remains (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  OPTIONAL { 
    ?bandMemberRelation dbo:member ?person .
    ?bandMemberRelation dbo:band dbr:Human_Remains_(band) .
  }
  OPTIONAL { 
    ?albumRelation dbo:artist ?person .
    ?albumRelation dbo:title ""Phantomsmasher"" .
  }
}
```",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
468,0,train,Give me the reference to Peter IV.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resource WHERE {
  ?resource rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""peter iv""))
}
ORDER BY ?resource
LIMIT 10
```",1,1,2,1,1,3,2,20,0,10,1,0.0,0.0,0
159,27,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderName WHERE {
  # Find the Battle of Vienna event
  dbr:Battle_of_Vienna a dbo:Event .

  # Identify commanders involved in the battle
  ?battleEvent dbo:agent ?commander .
  
  # Ensure the commander is depicted in a television show or societal event
  OPTIONAL { 
    ?mediaRepresentation dbo:subject ?battleEvent .
    ?mediaRepresentation a (dbo:TelevisionShow | dbo:SocietalEvent) .
  }

  # Retrieve the name of the commander
  ?commander foaf:name ?commanderName .
}
```",3,5,4,3,1,3,3,71,0,0,40,0,0.0,0
628,12,train,Give me the native of Florida and person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  ?person dbp:birthName ""Ackquille Jean Pollard"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,51,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Maria Anna of Bavaria and Ferdinand III, Holy Roman Emperor
  ?mariaAnna a dbo:Person ;
             dbp:spouse dbr:Ferdinand_III,_Holy_Roman_Emperor ;
             dbp:birthYear ""1574""^^xsd:gYear .

  # Their child who is royalty
  ?child dbp:parent ?mariaAnna ;
         dbp:parent dbr:Ferdinand_III,_Holy_Roman_Emperor ;
         a dbo:RoyalFamilyMember .

  # The father of this royal child (Ferdinand III)
  ?father dbp:spouse ?mother ;
          dbp:child ?child .
  
  # The child of the father
  ?childOfChild dbp:parent ?father .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,11,train,Give me the professional in the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/Sam_Concepcion>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  dbr:Sam_Concepcion dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,45131,0,0.0,0
119,37,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantOfSantiago ?residenceCountry WHERE {
  # Find the tenant of Santiago de Compostela (likely the Archbishop)
  ?santiago a dbo:Archdiocese ;
            dbo:archbishop ?archbishop .
  
  OPTIONAL { ?archbishop foaf:name ?tenantOfSantiago . }
  
  # Find the residence country for Spanish citizens
  ?person dbo:nationality dbr:Spain ;
          dbo:residenceCountry ?residenceCountry .
  
  FILTER(?residenceCountry = dbr:Spain)
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
361,14,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  ?person a dbo:Agent .
  OPTIONAL { 
    ?person dbo:alias dbr:The_Shadow . 
  }
  OPTIONAL { 
    ?person dbo:profession dbr:Actor . 
  }
  ?person foaf:name ?professionalName .
}
```",3,3,4,2,2,2,3,28,0,387414,4210,0.0,0.0,0
297,6,train,Give me the institution in the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Brian Kemp"" .
  ?position dbo:agent ?person ;
            dbo:organization ?institution .
}
```",2,2,3,2,1,2,2,9,0,0,941,0,0.0,0
246,7,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Prince_Faisal_bin_Hussein a dbo:Person .
  OPTIONAL { 
    dbr:Prince_Faisal_bin_Hussein dbo:childOf ?parent .
    ?parent a dbo:Royalty .
  }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
737,18,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  ?person dbo:predecessor dbr:Claude_Frederick_Carl,_Duke_of_Württemberg .
  ?person dbo:childOf dbr:Albrecht,_Duke_of_Württemberg .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
143,13,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring ?person .
  ?person foaf:name ?actorName .
  
  OPTIONAL { 
    ?movie dbo:reference dbr:Skepta .
  }
}
ORDER BY ?actorName
LIMIT 10
```",3,4,4,3,1,3,2,20,0,0,28,0,0.0,0
905,12,train,Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?stephenV a dbo:Person ;
            foaf:name ""Stephen V of Hungary""@en ;
            dbo:spouse ?spouse .
  
  ?child dbo:parent ?stephenV ;
         dbo:parent ?spouse .

  ?charlesMartel a dbo:Person ;
                 foaf:name ""Charles Martel of Anjou""@en ;
                 dbo:parent ?child .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,52,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Actor in ""All or Nothing: Manchester City""
  ?actor dbo:spouseOrPartner ?person .
  ?series dbo:starring ?actor .
  ?series rdfs:label ""All or Nothing: Manchester City""@en .

  # Soccer player and athlete
  ?person a dbo:SoccerPlayer ;
          a dbo:Athlete .

  # Team of Pablo Aimar (Valencia CF)
  ?pabloAimar dbo:team dbr:Valencia_CF .
  ?person dbo:team ?team .
  FILTER (?team = ?pabloAimar)

  # Person born on Marty Pollio's birthday
  ?martyPollio dbp:birthday ?birthday .
  ?person dbp:birthday ?sameBirthday .
  FILTER (?sameBirthday = ?birthday)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
628,10,train,Give me the native of Florida and band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicGroup .
  ?person dbp:bandMember ?member .
  ?member dbo:nationality dbr:United_States_of_America ;
          dbo:birthPlace dbr:Florida .
  FILTER(CONTAINS(LCASE(?member), ""uncle murda""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,23,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Step 1: Identify Roger II of Sicily
  dbr:Roger_II_of_Sicily a dbo:Person ;
    dbo:child ?child .

  # Step 2: For each child, find their parents (including Roger II)
  ?child dbo:parent ?parent .

  # Step 3: From these parents, find other children
  ?parent dbo:child ?childOfChild .

  # Step 4: Filter those who are royalty
  ?childOfChild a dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
39,49,train,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  # Find Sam Concepcion's profession
  VALUES (?sam) { dbr:Sam_Concepcion }
  ?sam dbo:profession ?profession .

  # Find a musical artist with the birth name ""Bob Thompson""
  ?artist a dbo:MusicalArtist .
  ?artist dbp:birthName ""Bob Thompson""^^xsd:string .
  
  # Get the band associated with this person
  OPTIONAL { ?artist dbo:band ?band . }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
103,48,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Basil Rathbone"" .
  ?person dbp:birthName ""Richard Grant Esterhuysen"" .
  OPTIONAL { ?alterEgo dbo:portrayedBy ?person . }
  FILTER EXISTS { ?alterEgo rdfs:label ""The Shadow""@en }
  OPTIONAL { ?movie dbo:starring ?person . }
  FILTER EXISTS { ?tvShow dbo:basedOn ?movie . }
}
LIMIT 1",5,6,6,3,2,3,3,71,0,0,13,0,0.0,0
78,1,train,Give me the associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person foaf:name ""Billy Lyall"" .
  ?related dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:MusicalArtist .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
871,32,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # Step 2: Find his children's children (grandchildren)
  ?child dbo:child ?grandchild .

  # Step 3: Check if any grandchild is a parent of an awardee
  ?grandchild dbo:parent ?parent .
  ?parent dbo:award dbr:Commander_of_the_Royal_Victorian_Order .

}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
375,9,train,"Give me the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?artist a dbo:Artist ;
          dbo:deathDate ""2020-06-18""^^xsd:date ;
          dbo:musicalArtist true .
  
  ?work dbo:starring ?artist ;
        a dbo:Film ;
        dbo:televisionShow true .

  BIND(?work AS ?movie)
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
59,6,train,"Give me the manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find Jamie McCunnie's player resource
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Jamie McCunnie""@en .
  
  # Ensure the club is both a sports club and a soccer club
  ?club dbo:member ?player ;
        a dbo:SportsClub, dbo:SoccerClub .

  # Find the manager of that club
  ?club dbp:manager ?manager .
}
```",2,4,3,2,1,2,2,9,0,0,7,0,0.0,0
513,13,train,Give me the entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Hamilton Cameron""@en .
  OPTIONAL { 
    ?person dbo:honoraryTitle ?title . 
  }
  ?award dbo:recipient ?person ;
         a dbo:Award .
}
```",3,3,4,3,1,3,2,20,0,0,87241,0,0.0,0
687,5,train,"Give me the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film WHERE {
  ?film a dbo:Film .
  ?film dbo:director dbr:Manuel_Huerga .
}
ORDER BY ?film
LIMIT 10
```",1,2,2,1,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
119,34,train,"Give me the tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant ?office WHERE {
  # Find Santiago de Compostela's tenant
  ?santiago a dbo:City ;
            dbo:location ?tenant .

  # Find Anxo Quintana's office and role in an event
  ?quintana a dbo:Person ;
            foaf:name ""Anxo Quintana"" ;
            dbp:office ?office .
  
  OPTIONAL {
    ?event dbo:agent ?quintana ;
           dbo:place dbr:Santiago_de_Compostela .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
633,2,train,"Give me the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Antoine,_Duke_of_Lorraine dbo:spouse ?spouse .
  ?parent (dbo:spouse|dbo:child) ?child .
  FILTER(?parent = dbr:Antoine,_Duke_of_Lorraine || ?parent = ?spouse)
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
628,11,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?bobbyShmurda a dbo:MusicalArtist ;
                foaf:name ""Bobby Shmurda""@en .
  
  ?group dbo:member ?bobbyShmurda ;
         dbo:member ?bandMember .

  FILTER(?bandMember != ?bobbyShmurda)
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
609,43,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Find birthplaces of Paulus Powell, Vince Gilligan, and Cece Bell
  VALUES ?personName { ""Paulus Powell"" ""Vince Gilligan"" ""Cece Bell"" }
  
  ?person dbo:birthName ?personName .
  ?person dbp:birthPlace ?birthPlace .

  # Ensure the birthplace is a region and an administrative region
  ?birthPlace a dbo:Region ;
              a dbo:AdministrativeRegion .

  # Find the governor of each identified region
  ?governor dbo:governmentRole dbr:Governor ;
           dbo:officeHolderOf ?birthPlace .
  
  # Get the birthplace of the governor
  ?governor dbp:birthPlace ?governorBirthPlace .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
414,8,train,Give me the award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?award WHERE {
  ?person a dbo:NobelPrizeWinner .
  ?person dbo:field dbr:Physics .
  ?person dbo:honoredFor ?award .
}
ORDER BY ?person
LIMIT 10
```",2,2,3,2,1,3,2,20,0,0,87,0,0.0,0
737,34,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Archduchess Helena of Austria's spouse
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  
  # Step 2: Determine their children
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Step 3: Find which of those children are also royalties
  ?child a dbo:Royalty .
  
  # Step 4: Identify the predecessor of that child
  ?predecessor dbo:successor ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
249,7,train,"Give me the native of India and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?notableWork WHERE {
  dbr:Jamsetji_Tata a dbo:Person .
  OPTIONAL { 
    ?tata dbo:nationality dbr:India .
    ?tata dbo:birthPlace ?birthPlace .
  }
  OPTIONAL {
    ?tata dbo:notableWorks ?work .
    ?work dbp:country dbr:India .
    BIND(?work AS ?notableWork)
  }
}
```",3,4,4,2,2,2,2,9,0,1851,21,0.0,0.0,0
871,8,train,"Who is the child, that is a politician, of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
687,32,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athleteName ?soccerPlayerActorName WHERE {
  # Find the athlete born on 1955-02-22
  ?athlete a dbo:Athlete ;
           dbo:birthDate ""1955-02-22""^^xsd:date ;
           foaf:name ?athleteName .

  # Find the soccer player who is also an actor in ""All or Nothing: Manchester City""
  ?soccerPlayerActor a dbo:SoccerPlayer, dbo:Actor ;
                     dbp:role dbr:All_or_Nothing:_Manchester_City ;
                     foaf:name ?soccerPlayerActorName .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
78,3,train,"Give me the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Stuart McBeath Tosh"" .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
347,24,train,"Give me the child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
  
  ?child dbo:parentOf ?grandChild .
  ?grandChild dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emeror .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
585,1,train,Give me the child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Linda_Miller dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:children ?child . }
  FILTER(?child != dbr:Linda_Miller)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,58,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalInSinger ?alterEgoOfTheShadow ?band ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Bob Thompson"" .
  ?person dbp:birthName ?birthName .

  # Check if he is a singer
  ?person dbo:profession dbr:Singer .

  # Find any connection to The Shadow alter ego
  OPTIONAL { 
    ?relatedPerson foaf:name ""The Shadow"" .
    ?person dbo:alias ?relatedPerson .
  }
  
  # Identify band association
  OPTIONAL {
    ?band a dbo:Band .
    ?band dbo:member ?person .
    BIND(?band AS ?alterEgoOfTheShadow)
  }

  FILTER (?birthName = ""Bob Thompson"")
}
```",6,7,7,3,3,3,3,71,0,0,3,0,0.0,0
119,52,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Anxo Quintana and his office
  dbr:Anxo_Quintana a dbo:Person .
  ?quintanaOffice dbo:positionHeldBy dbr:Anxo_Quintana ;
                 dbp:title ?office .

  # Álvaro Quirós and Santiago de Compostela
  dbr:Álvaro_Quirós a dbo:Person .
  ?santiagoResidence dbo:resident dbr:Álvaro_Quirós ;
                     dbo:location dbr:Santiago_de_Compostela .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,39,train,"Give me the spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Saw Shwe Khet's spouse
  ?sawShweKhet a dbo:Person ;
               dbp:spouse ?spouse .

  # Find the child of Saw Shwe Khet's spouse
  ?spouse dbp:child ?child .

  # Find the predecessor of this child in a royal context
  ?predecessor dbo:successor ?child .
  
  # Ensure the predecessor is royalty and related to Saw Min Phyu
  ?predecessor a dbo:Monarch ;
               dbo:reignOver ?place .
  ?sawMinPhyu a dbo:Person ;
              dbp:spouse ?relatedSpouse .
  ?relatedSpouse dbo:monarch ?predecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
585,3,train,"Give me the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  # Resource for Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:awardsReceived ?award .
  
  # Filter by award type
  ?award a dbo:Award .

  # Ensure the award is American
  ?award dbo:country dbr:United_States .

  # Ensure it's also associated with a settlement
  ?award dbo:settlement ?settlement .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
119,43,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantCountry WHERE {
  # Identify Alberto Núñez Feijóo
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en ;
          dbo:nationality dbr:Spain ;
          dbo:birthPlace dbr:Spain .

  # Link to Santiago de Compostela
  ?person dbo:residence dbr:Santiago_de_Compostela .

  # Office position
  ?officePosition a dbo:Office ;
                  dbo:holder ?person ;
                  dbp:name ?officeName .
  
  FILTER(?officeName = ""President of the Xunta of Galicia""@en)

  # Determine his residence country (tenant)
  ?person dbo:residence ?residence .
  ?residence dbo:country ?tenantCountry .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,45,train,"Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?juanCarlosTeam ?sergioAgüeroTeam ?personName ?team WHERE {
  # Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina dbo:playsFor ?juanCarlosTeam .

  # Sergio Agüero's team
  dbr:Sergio_Agüero dbo:playsFor ?sergioAgüeroTeam .

  # Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbp:birthday ?marceloSarmientoBirthday .

  # Person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate = ?marceloSarmientoBirthday)
  ?person dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .

  # Team of the person born on Marcelo Sarmiento's birthday
  ?person dbo:playsFor ?team .
  
  # Return the name of this person
  ?person foaf:name ?personName .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
293,39,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  {
    SELECT ?birthName WHERE {
      dbr:Tisha_Sterling dbo:parent ?parent .
      OPTIONAL { ?parent dbp:birthName ?birthName . }
    }
  }
  dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbp:birthName ?birthName . }
  FILTER(?birthName = ?birthName)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
687,13,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?series a dbo:TelevisionSeries .
  ?series dbp:title ""All or Nothing: Manchester City"" .

  ?episode dbo:partOf ?series .
  ?episode dbo:starring ?actor .

  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete ;
         dbo:profession dbr:Actor .
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
68,15,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?catherine a dbo:Person ;
             foaf:name ""Catherine of Austria, Queen of Portugal""@en ;
             dbo:spouse ?husband .
  
  ?catherine dbo:child ?child .
  ?child dbo:parent dbr:Dorothea_of_Denmark_Electress_Palatine .

  ?catherine dbo:father ?father .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
80,22,train,Give me the actor of Shelby Oaks and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?person a dbo:Actor .
  OPTIONAL { 
    ?film dbo:starring ?person .
    ?film dbp:title ""Shelby Oaks"" .
  }
  OPTIONAL {
    ?character dbo:portrayedBy ?person .
    ?character dbp:name ""The Shadow"" .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,49,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Constance of Burgundy's spouse who is royalty
  ?spouse a dbo:Monarch ;
          dbo:spouse dbr:Constance_of_Burgundy .

  # Their child
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:Constance_of_Burgundy .

  # The grandchild (child of the above child)
  ?grandchild dbo:parent ?child .

  # Roger III, Duke of Apulia's parent
  ?rogerParent dbo:child dbr:Roger_III,_Duke_of_Apulia .

  # Ensure the grandchild is also a child of this parent
  ?grandchild dbo:parent ?rogerParent .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
347,30,train,"Give me the child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:spouse ?mother .
  ?mother dbo:child ?child .
}
LIMIT 1
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
628,54,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person dbp:birthday ?birthday . }
  ?person foaf:name ?name .
  ?person dbp:birthName ?birthName .

  # Find band members of Bobby Shmurda
  ?bobbyShmurda a dbo:MusicalArtist ;
                foaf:name ""Bobby Shmurda""@en .
  
  ?bandMembership dbo:member ?person ;
                  dbo:group ?bobbyShmurda .
}
ORDER BY ?name
LIMIT 10
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,39,train,Give me the actor of ATL (film) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?alterEgo WHERE {
  # Actor from ATL (film)
  ?atlFilm dbo:title ""ATL"" .
  ?atlFilm dbo:starring ?actor .
  
  # Professional with an alter ego from The Golden Master series
  ?goldenMasterSeries dbo:title ""The Golden Girls"" .
  ?goldenMasterSeries dbo:starring ?alterEgo .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
737,39,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Find the parent of Archduchess Margarete Sophie of Austria and Albrecht, Duke of Württemberg
  ?parent dbo:spouse ?margareteSophie .
  ?parent dbo:spouse ?albrechtDuke .

  ?margareteSophie a dbo:Person ;
                  dbp:child ?archduchessChild1 .
  
  ?albrechtDuke a dbo:Person ;
                dbp:child ?archduchessChild2 .

  FILTER(?archduchessChild1 != ?archduchessChild2) # Ensure they are different children

  # Find the grandchildren of this parent
  OPTIONAL { ?archduchessChild1 dbo:child ?grandchild . }
  OPTIONAL { ?archduchessChild2 dbo:child ?grandchild . }

  # Filter to ensure grandchild is royalty
  ?grandchild a dbo:Royalty .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
531,5,train,"Give me the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?conflict WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Manuel Pinto da Costa"" .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse . 
    ?spouse foaf:name ?spouseName .
  }
  
  ?person dbo:memberOf|dbo:leaderOf ?organization .
  ?organization dbo:member ?conflict .
  ?conflict a dbo:MilitaryConflict ;
            dbo:wikiPageRedirects ?redirect .

  FILTER NOT EXISTS { 
    ?conflict dbo:wikiPageRedirects ?redirect .
  }
  
  OPTIONAL {
    ?conflict dbo:socialEvent ?event .
    ?event a dbo:SocietalEvent .
  }
}
ORDER BY ?conflict
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
595,22,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person dbo:positionHeld dbr:United_States_Navy_Commander_in_Chief .
  OPTIONAL { ?event dbo:relatedEvent ?societalEvent . }
  OPTIONAL { ?disease dbo:relatedDisease ?illness . }
  FILTER EXISTS {
    ?event dbo:subject ?person .
    ?societalEvent a dbo:SocietalEvent .
    ?illness a dbo:Disease .
  }
}
LIMIT 1
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,47,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?greatGrandchild WHERE {
  # Alexander of Württemberg and his lineage
  dbr:Alexander_of_W%C3%BCrttemberg dbo:spouse ?spouse .
  ?spouse dbo:child ?child1 .
  ?child1 dbo:child ?grandChild .
  ?grandChild dbo:child ?greatGrandchild .

  # Philipp Albrecht, Duke of Württemberg and his child
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippChild .

  # Predecessor in lineage (assuming direct parent-child relationship)
  ?parent dbo:child ?philippChild .
  ?parent dbo:child ?predecessor .

  FILTER(?greatGrandchild = ?predecessor)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,26,train,Give me the parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  dbr:Eugène_Cattin a dbo:Person .
  OPTIONAL { dbr:Eugène_Cattin dbo:spouse ?spouse . }
  OPTIONAL { dbr:Eugène_Cattin dbo:child ?child . }
  OPTIONAL { ?parent dbo:child dbr:Eugène_Cattin . }
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
143,3,train,"Give me the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?castMember dbo:actor ?person .
  ?person foaf:name ""Afeez Oyetoro""@en .
  FILTER(CONTAINS(LCASE(?person), LCASE(""afeez oyetoro"")))
}
LIMIT 10
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
905,48,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania"" ;
          dbp:parent ?parent .

  # Ensure the parent is royalty
  ?parent a dbo:Royalty .

  # Find the father of this parent
  ?parent dbp:father ?grandfather .

  # Identify Béla IV of Hungary and his child (the parent)
  ?belaIV a dbo:Person ;
          foaf:name ""Béla IV of Hungary"" .
  ?child a dbo:Royalty ;
         dbp:parent ?belaIV ;
         dbp:parent ?parent .

  # Find the spouse of the grandfather
  ?grandfather dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,24,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office WHERE {
  # Part 1: Commander in Central African Republic Civil War
  {
    ?person a dbo:Politician .
    ?person dbo:office ?office .
    ?conflict dbo:participant ?person .
    ?conflict rdfs:label ""Central African Republic Civil War""@en .
  }
  
  UNION
  
  # Part 2: Office of Miguel Maura
  {
    dbr:Miguel_Maura dbo:office ?office .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,23,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Archduchess Helena of Austria
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .

  # Step 2: Find the children of her spouse
  ?child dbo:parent ?spouse .
  
  # Step 3: Determine the predecessors of those children
  ?child dbo:predecessor ?predecessor .
}
```",3,4,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
905,52,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?spouse WHERE {
  # Stephen V of Hungary
  ?stephenV a dbo:Monarch ;
            dbp:country dbr:Hungary ;
            dbp:name ""Stephen V of Hungary""@en .

  # Child of Stephen V (also his parent)
  ?child dbo:parent ?stephenV ;
         a dbo:Person .

  # Charles I of Hungary
  ?charlesI a dbo:Monarch ;
            dbp:country dbr:Hungary ;
            dbp:name ""Charles I of Hungary""@en .

  # Parent (mother) of Charles I
  ?parentCharlesI dbo:child ?charlesI ;
                  a dbo:Person .

  # Philip, Despot of Romania
  ?philip a dbo:Monarch ;
          dbp:country dbr:Romania ;
          dbp:name ""Philip, Despot of Romania""@en .

  # Parent's spouse of Philip
  ?parentPhil dbp:child ?philip ;
              a dbo:Person .
  
  ?spouse a dbo:Spouse ;
          dbo:spouse ?stephenV ;
          dbo:spouse ?parentCharlesI ;
          dbo:spouse ?parentPhil .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
68,23,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Joanna of Castile (child of Philip I)
  ?joanna a dbo:Person ;
          dbp:parent dbr:Ferdinand_II_of_Aragon ;
          dbp:parent dbr:Philip_I_of_Castile .

  # Charles V, Holy Roman Emperor (child of Joanna)
  ?charles a dbo:Person ;
           dbp:parent ?joanna .

  # Dorothea of Denmark, Electress Palatine
  ?dorothea a dbo:Person ;
            dbp:parent dbr:Christian_II_of_Denmark .

  # Christian II of Denmark (father of Dorothea)
  ?christian a dbo:Person ;
             dbp:parent ?johnI .

  # John I of Denmark (grandfather of Dorothea)
  ?johnI a dbo:Person .

  # Ferdinand II of Aragon (father of Joanna)
  ?father dbr:Ferdinand_II_of_Aragon .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
263,3,train,"Give me the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region ?country WHERE {
  dbr:William_Gayner dbo:birthPlace ?place .
  OPTIONAL { ?place a dbo:Region . BIND(?place AS ?region) }
  OPTIONAL { ?place a dbo:Country . BIND(?place AS ?country) }
}
```",1,3,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
103,39,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgoName ?comicsProfession ?actorProfession WHERE {
  # The Shadow as a comics character
  dbr:The_Shadow dbo:wikiPageDisambiguates ?shadowResource .
  
  # Alter ego of The Shadow in the comics
  ?shadowResource dbo:profession ?comicsProfession .
  ?shadowResource foaf:name ?alterEgoName .

  # Actor who played The Shadow
  OPTIONAL {
    ?actor dbr:The_Shadow dbp:portrayedBy ?actorResource .
    ?actorResource dbo:occupation ?actorProfession .
  }
}
```",4,5,5,3,2,3,3,71,0,0,4210,0,0.0,0
225,12,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInJapan ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Japanese .
  ?person dbo:honoraryTitle ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""anita borg institute women of vision awards"")) .

  OPTIONAL { 
    ?person dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country dbr:Japan .
    BIND(?birthPlace AS ?entityInJapan)
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
295,16,train,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of Victor Saville.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  # Find Victor Saville's birthplace
  dbr:Victor_Saville dbo:nationality ?nationality .
  ?person dbo:nationality ?nationality ;
          dbo:birthPlace ?birthPlace .

  # Find a writer of a musical work who is native to Victor Saville's birthplace
  ?work dbo:composer ?writer ;
        a dbo:MusicalWork .
  
  FILTER(?writer != dbr:Apache_Indian) # Ensure the writer is not Apache Indian

  # Ensure the writer is from the same birthplace as Victor Saville
  ?writer dbo:birthPlace ?birthPlace .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
263,10,train,Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbp:birthName ""Hon. Mary Frances Bowes-Lyon""@en .
  ?person dbo:parent ?parent .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
203,18,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?campaign ?battle1 ?forces1 ?battle2 ?forces2 WHERE {
  # Napoleon Bonaparte and the French campaign in Egypt and Syria
  VALUES (?commander ?campaign) { (dbr:Napoleon_Bonaparte dbr:French_campaign_in_Egypt_and_Syria) }
  
  # Battle of Fort Royal
  ?battle1 a dbo:MilitaryConflict ;
           dbp:name ""Battle of Fort Royal"" ;
           dbo:participatingMilitaryUnit ?forces1 .

  # Battle of Cape Finisterre (1805)
  ?battle2 a dbo:MilitaryConflict ;
           dbp:name ""Battle of Cape Finisterre (1805)"" ;
           dbo:commander dbr:John_Jervis,_1st_Earl_of_St_Vincent ;
           dbo:participatingMilitaryUnit ?forces2 .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,39,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello"" .
  
  ?spouse dbo:spouseOf ?mariclare .

  # Step 2: Find the children of this spouse
  ?child dbo:parent ?spouse ;
         dbo:parent ?otherParent .

  # Step 3: Determine the parents of these children
  ?parent dbo:parent ?child .

  # Step 4: Ensure one of these parents is also a parent of Amy Arbus
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus"" .
  
  ?parent dbo:parent ?amyArbus .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,2,train,Give me the commander in Great Turkish War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:name ""Great Turkish War"" .
  ?event dbo:participatingCommander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
103,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?realName WHERE {
  dbr:The_Shadow dbo:creator ?creator .
  OPTIONAL { ?creator foaf:name ?realName . }
}
```",2,2,3,2,1,3,3,71,0,1,39640,0.0,0.0,0
737,56,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Albrecht, Duke of Württemberg and his child
  ?albrecht a dbo:Person ;
           foaf:name ""Albrecht, Duke of Württemberg"" ;
           dbo:child ?child1 .

  # Philipp Albrecht, Duke of Württemberg and his grandchild
  ?philippAlbrecht a dbo:Person ;
                  foaf:name ""Philipp Albrecht, Duke of Württemberg"" ;
                  dbo:child ?child2 .
  ?child2 dbo:child ?grandChild .

  # Archduchess Margarete Sophie of Austria and her grandchild
  ?margareteSophie a dbo:Person ;
                   foaf:name ""Archduchess Margarete Sophie of Austria"" ;
                   dbo:parent ?parent .
  ?parent dbo:child ?child3 .
  ?child3 dbo:child ?grandChild2 .

  # The person we are looking for
  ?person a dbo:Royalty ;
          dbo:child ?child1 ;  # Child of Albrecht
          ?pred ?grandChild .  # Predecessor to the grandchild of Philipp Albrecht

  FILTER(?person != ?grandChild)  # Ensure it's not the same person
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,17,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SportsManager .
  ?person dbo:birthday ""1968-08-26""^^xsd:date .
  ?person dbo:worksForTeam ?team .
  FILTER (?team a (dbo:SoccerClubSeason || dbo:SportsSeason || dbo:SportsTeamSeason))
}
```",2,6,3,2,1,3,3,71,0,0,5,0,0.0,0
412,18,train,Give me the war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v0 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?award ?war WHERE {
  ?person a dbo:AwardRecipient .
  ?person dbo:awarded ?award .
  ?award dbo:dateReceived ""1930""^^xsd:gYear .
  OPTIONAL { ?person dbo:placeOfBirth dbr:Athens . }
  OPTIONAL { ?person dbo:associatedWith ?entity .
             ?entity rdfs:label ?warLabel .
             FILTER (CONTAINS(LCASE(?warLabel), ""war"")) }
}
ORDER BY ?award
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
353,6,train,"Who is the child, that is a royalty, of William I of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Monarch ;
          dbo:spouseOrPartner ?spouse .
  OPTIONAL { ?person dbo:parent ?parent . }
  OPTIONAL { ?spouse dbo:parent ?parent . }
  
  FILTER(?parent = dbr:William_I_of_Sicily)
  
  ?child dbo:parent ?parent ;
         a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,22,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie ?producer WHERE {
  ?person a dbo:FilmActor ;
          foaf:name ""Janet Gaynor""@en .
  
  ?film dbo:starring ?person ;
        a dbo:Film .

  OPTIONAL { 
    ?film dbo:director ?director .
    ?director dbp:profession ?producer .
  }

  FILTER (lang(?movie) = 'en')
}
LIMIT 10
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,36,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in Thirty Years' War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria"" ;
             dbp:birthYear ""1574""^^xsd:gYear ;
             dbo:child ?child .

  ?child a dbo:Royalty ;
         dbo:commanderInWar dbr:Thirty_Years_War .

  ?child dbo:father ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
263,5,train,"Give me the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?relation dbo:parent ?person ;
            dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
769,7,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Athlete .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation [ 
    a dbo:SportsManager ;
    dbo:sport dbr:Soccer
  ] .
  ?person dbp:birthday ""1981-12-01""^^xsd:date .
}
```",2,6,3,2,1,3,2,20,0,0,6,0,0.0,0
203,27,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person a dbo:AwardRecipient ;
          dbp:awardTitle ""Knight Commander of the Order of the Bath"" .
  
  ?event dbo:participant ?person ;
         a dbo:SocietalEvent, dbo:MilitaryEvent .

  ?event dbo:militaryForce ?militaryForce .
}",3,5,4,3,1,3,3,71,0,0,4831,0,0.0,0
628,27,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace WHERE {
  ?band a dbo:Band .
  ?band dbo:location dbr:New_York_(state) .

  ?award dbo:recipient ?band .
  ?award dbo:place dbr:?AwardRegion .
  
  ?awardRegion a dbo:State ;
               dbo:country dbr:United_States_of_America ;
               dbo:settlement ?settlement .

  OPTIONAL { ?award dbp:name ?awardName . }
  
  ?nativePlace dbo:nativeOf ?awardRegion .
}
```",3,8,4,3,1,3,3,71,0,0,8569,0,0.0,0
159,40,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Find Michał Kazimierz Pac as a commander in the Great Turkish War
  ?person1 a dbo:Politician ;
           dbo:officeHolderOf ?office ;
           dbo:commanderInMilitaryConflict dbr:Great_Turkish_War .

  # Ensure he is referenced or connected to George Ducas
  OPTIONAL { ?person1 dbp:referenceTo dbr:George_Ducas . }

  # Find his successor in command during the Great Turkish War
  ?successor a dbo:Politician ;
             dbo:commanderInMilitaryConflict dbr:Great_Turkish_War .

  # Ensure the successor comes after Michał Kazimierz Pac
  FILTER(?person1 != ?successor)
}
ORDER BY ?successor
LIMIT 10
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,56,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ackquille Jean Pollard's birth name
  VALUES (?birthName) { ""Ackquille Jean Pollard"" }
  
  # Person who is a musical artist and has the specified birth name
  ?person dbo:birthName ?birthName .
  ?person a dbo:MusicalArtist .

  # Association with Bobby Shmurda as a band member
  ?association dbo:band dbr:Bobby_Shmurda .
  ?association dbo:member ?person .

  # Person is native of New York (state)
  ?person dbo:nativePlace dbr:New_York_(state) .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
756,38,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Thomas Letsch as a manager of a soccer club
  ?letsch a dbo:SoccerManager ;
          dbp:managedTeam ?team .

  # The team is part of a sports season
  ?season a dbo:SportsSeason ;
          dbo:sport dbr:Soccer ;
          dbo:participant ?team .

  # Find the manager of that team during the same or related season
  ?manager a dbo:SoccerManager ;
           dbp:managedTeam ?team ;
           dbp:managementStartYear ?startYear .
  
  # Theodor Heuss's native country is Germany
  dbr:Theodor_Heuss dbo:nationality dbr:Germany .

  FILTER (?letsch != ?manager) # Ensure we find a different manager than Thomas Letsch
}
```",4,8,5,2,2,3,3,71,0,0,3,0,0.0,0
203,61,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?militaryForce ?societalEvent ?awardee WHERE {
  # Step 1: Find wars associated with William Bayne
  ?bayne dbo:occupation dbr:Military_person .
  ?bayne foaf:name ""William Bayne"" .

  # Step 2: Identify military forces involved in those wars
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryForce ?militaryForce .

  # Link William Bayne to the war
  ?bayne dbo:participatedIn ?war .

  # Step 3: Find societal events related to these military forces
  ?societalEvent a dbo:SocietalEvent ;
      dbo:relatedMilitaryForce ?militaryForce .

  # Step 4: Identify awardees of the Knight Commander of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  # Link societal events to these awardees
  ?societalEvent dbo:relatedPerson ?awardee .
}
```",6,10,7,3,2,3,3,71,0,0,24,0,0.0,0
87,20,train,Give me the actor of Always (1989 film) and actor of Paradise (2013 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alwaysActor ?paradiseActor ?januszSpouse WHERE {
  # Actor from ""Always (1989 film)""
  dbr:Always_(film)_1989 dbo:starring ?alwaysActor .

  # Actor from ""Paradise (2013 film)""
  dbr:Paradise_(2013_film) dbo:starring ?paradiseActor .

  # Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbp:spouse ?januszSpouse .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
871,4,train,Who is the awardee of Commander of the Royal Victorian Order?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { 
    ?person foaf:name ?name .
  }
  ?award dbo:recipient ?person ;
         rdfs:label ""Commander of the Royal Victorian Order""@en .
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
871,38,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # Find children who are politicians
  ?child a dbo:Politician .
  
  # Retrieve the parents of those political children
  OPTIONAL { ?parent dbo:child ?child . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,11,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Audrey_Hepburn .
  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Audrey_Hepburn)
}
ORDER BY ?actor
LIMIT 10
```",2,4,3,2,1,2,3,28,7,3,55,0.7,0.11290322580645161,0.19444444444444445
816,54,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  # Doon Arbus's parent
  OPTIONAL { 
    ?doonArbus a dbo:Person ;
               foaf:name ""Doon Arbus"" .
    ?doonArbus dbo:childOf ?parent1 .
    ?parent1 foaf:name ?parentName .
  }

  # Herschel Bernardi's movie
  OPTIONAL {
    ?herbersonBernardi a dbo:Actor ;
                       foaf:name ""Herschel Bernardi"" .
    ?herbersonBernardi dbo:actedIn ?movie .
  }
  
  # Eugène Cattin's profession and parent
  OPTIONAL {
    ?eugeneCattin a dbo:Person ;
                  foaf:name ""Eugène Cattin"" .
    ?eugeneCattin dbo:profession ?profession .
    ?eugeneCattin dbo:childOf ?parent2 .
    ?parent2 foaf:name ?parentName .
  }
  
  # Filter to find common parent
  FILTER(?parent1 = ?parent2)
}
ORDER BY ?parentName
LIMIT 10
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,52,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Roger II of Sicily's child who is royalty
  ?rogerChild dbo:parent dbr:Roger_II_of_Sicily .
  ?rogerChild a dbo:Monarch .

  # William I of Sicily and Elvira of Castile's child who is royalty
  ?tancred dbo:parent dbr:William_I_of_Sicily ;
           dbo:parent dbr:Elvira_of_Castile ;
           a dbo:Monarch .

  # The parent of Tancred (William I) and his child who is royalty
  ?williamChild dbo:parent ?tancred .
  ?williamChild a dbo:Monarch .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
782,48,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artistName ?bandName WHERE {
  # Find Nick Jonas and his associated musical artist
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Nicholas Michael Curran"" .
  OPTIONAL { ?person foaf:name ?nickJonasName . }
  
  # Find Kim Wilson's band
  ?kimWilson a dbo:MusicalArtist .
  ?kimWilson foaf:name ""Kim Wilson"" .
  ?band a dbo:Band ;
        dbo:member ?kimWilson .
  OPTIONAL { ?band foaf:name ?bandName . }

  # Return the names of Nick Jonas and Kim Wilson's band
  BIND(?nickJonasName AS ?artistName)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
103,32,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?movie WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:occupation ?profession .

  # Movie that is also a television show featuring both actors
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Shatrughan_Sinha ;
         dbo:starring dbr:Richard_E._Grant .
  ?movie dbo:type dbr:Television_show .

}
```",4,5,5,2,2,3,3,71,0,0,28,0,0.0,0
782,61,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthday ""1945-03-30""^^xsd:date .

  # Find artists associated with Nick Curran
  ?nickCurran a dbo:MusicalArtist ;
              dbp:birthName ""Nick Curran"" .
  ?association dbo:associatedMusicalArtist ?person .

  OPTIONAL {
    ?bandMember dbo:memberOfBand ?band .
    ?bandMember dbo:memberOf ?person .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
472,3,train,"Give me the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .
  FILTER (isLiteral(?deathPlace) && regex(str(?deathPlace), ""Settlement"", ""i""))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
687,26,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film dbo:director dbr:Manuel_Huerga .
  
  ?film dbo:starring ?actor .
  
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

}
```",3,6,4,3,1,3,3,71,0,0,7,0,0.0,0
756,51,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Theodor Heuss and his country of administration
  dbr:Theodor_Heuss dbo:country dbr:Germany .
  
  # Sports manager born on 1968-08-26
  ?manager a dbo:SportsManager ;
          dbp:birthday ""1968-08-26""^^xsd:date .

  # Team managed by the sports manager
  ?teamSeason dbo:managedBy ?manager ;
              a dbo:SoccerClubSeason, dbo:SportsTeamSeason .
  
  # Find the native country of the team's administration
  ?teamSeason dbo:administeredBy ?administration .
  ?administration dbo:native dbr:Germany . # Assuming Germany as an example

  # Linking back to Theodor Heuss' country
  ?nativeCountry dbp:countryName ""Germany"" .
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
531,25,train,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Find Mariano Rajoy and his office
  OPTIONAL {
    dbr:Mariano_Rajoy a dbo:Politician .
    dbr:Mariano_Rajoy dbo:positionHeld ?marianoOffice .
    ?marianoOffice rdfs:label ?office .
    FILTER (lang(?office) = ""en"")
  }
  
  # Find the leader of the Conservative Republican Party (Spain)
  OPTIONAL {
    dbr:People's_Party_(Spain) a dbo:PoliticalParty ;
      dbo:leader ?partyLeader .
    ?partyLeader a dbo:Politician ;
      dbo:positionHeld ?partyLeaderOffice .
    ?partyLeaderOffice rdfs:label ?office .
    FILTER (lang(?office) = ""en"")
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
347,8,train,Give me the father of Cecilia Renata of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Cecilia_Renata_of_Austria dbo:parent ?person .
  ?person a dbo:Person .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""father""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,33,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?force WHERE {
  VALUES ?awardNames { ""Gillmore"" ""Tracy"" }
  
  ?person dbo:awardedBy ?award .
  ?award rdfs:label ?awardName .
  FILTER(CONTAINS(LCASE(?awardName), LCASE(?awardNames)))
  
  OPTIONAL { 
    ?person dbo:militaryForce ?force .
  }
}
ORDER BY ?person
LIMIT 10
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
80,3,train,Give me the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""Smartbomb""@en .
  OPTIONAL { ?book dbo:author ?author . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
816,46,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring ?person .
  ?person dbo:deathPlace dbr:Los_Angeles_County,_California .

  ?parent a dbo:Person ;
          dbo:child ?photographer ;
          dbo:spouseOrPartner ?person .

  ?photographer a dbo:Photographer .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
263,8,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region ?country WHERE {
  dbr:William_Gayner dbo:birthPlace ?place .
  OPTIONAL { ?place dbo:administrativeRegion ?region . }
  OPTIONAL { ?place dbo:country ?country . }
}
```",2,4,3,2,1,2,3,28,0,1,935,0.0,0.0,0
769,9,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Tony Hollings' birthdate
  dbr:Tony_Hollings dbo:birthday ?hollingsBirthday .

  # Find a person who is an athlete, soccer player, sports manager, and soccer manager
  ?person a dbo:Athlete ;
          dbo:sport dbr:Soccer ;
          dbo:occupation [a dbo:SportsManager, dbo:SoccerManager] .
  
  # Match the birthdate with Tony Hollings' birthdate
  ?person dbo:birthday ?birthday .

  FILTER (?birthday = ?hollingsBirthday)
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
609,5,train,"Give me the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Paulus_Powell dbo:birthPlace ?birthPlace .
  FILTER (?birthPlace a dbo:Region && ?birthPlace a dbo:AdministrativeRegion)
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
198,52,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardName ?war WHERE {
  ?award a dbo:Award .
  ?award dbo:awardingBody dbr:United_States_Congress .
  
  ?person dbo:recipientOf ?award .
  ?person dbo:birthPlace ?location .
  FILTER (CONTAINS(LCASE(STR(?location)), ""charleston, south carolina""))
  
  ?person dbo:recipientOf dbr:Gillmore_Medal .

  OPTIONAL { ?award dbp:relatedEvent ?war }
}
ORDER BY ?awardName
LIMIT 10
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,37,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile"" .
  
  ?elvira dbo:child ?child .
  ?child a dbo:Royalty .

  OPTIONAL { 
    ?child dbp:spouse ?spouse .
    ?child dbo:child ?grandChild .
    ?grandChild a dbo:Royalty ;
               dbo:father ?reference .
    ?reference dbo:officeHolder ?office .
    ?office dbr:William_I .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
311,12,train,Give me the associated musical artist of Filthy Friends and band member of the writer of No Alternative.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?band a dbo:MusicalBand .
  ?band dbp:name ""Filthy Friends"" .
  ?member dbo:memberOf ?band ;
          foaf:name ?artist .
  
  OPTIONAL {
    ?album dbo:creator dbr:Paul_Westerberg .
    ?album dbo:title ""No Alternative"" .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
103,38,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName WHERE {
  dbr:The_Shadow a dbo:FictionalCharacter .
  OPTIONAL { dbr:The_Shadow dbp:alias ?alias . }
  OPTIONAL { ?alias foaf:name ?professionalName . }
}

SELECT ?profession WHERE {
  dbr:Shatrughan_Sinha a dbo:Person .
  OPTIONAL { dbr:Shatrughan_Sinha dbo:occupation ?occupation . }
  OPTIONAL { ?occupation foaf:name ?profession . }
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
198,49,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date .
  ?person dbo:honorsReceived dbr:Medal_of_Honor .

  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .

  ?birthPlace dbp:wikiPageRedirects ?birthPlaceEntity .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
375,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Japan .
}
LIMIT 10
```",1,1,2,1,1,2,3,28,0,10,104,0.0,0.0,0
311,7,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Identify the members of R.E.M.
  ?member dbo:bandMember dbr:R.E.M. .
  
  # Find associated artists for each member
  ?member dbo:associatedMusicalArtist ?associatedArtist .
}
ORDER BY ?associatedArtist
LIMIT 10
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
782,50,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Nick Curran"" .
  ?person dbp:birthName ""Nicholas Michael Curran"" .
  ?person dbp:birthday ""1945-03-30""^^xsd:date .

  OPTIONAL { 
    ?bandMember a dbo:Band ;
                dbo:member ?person .
    ?bandMember foaf:name ?band .
  }

  OPTIONAL {
    ?associatedArtist a dbo:MusicalArtist ;
                      dbo:collaboration ?person .
    ?associatedArtist foaf:name ?artistName .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
816,40,train,"Give me the parent of Amy Arbus and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentAmy ?parentDoon ?actor ?movie WHERE {
  # Find parents of Amy Arbus
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .
  ?parentAmy dbo:child ?amyArbus .

  # Find parents of Doon Arbus
  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus""@en .
  ?parentDoon dbo:child ?doonArbus .

  # Find movies with actors and decedents from Los Angeles
  ?movie a dbo:Film ;
         dbo:starring ?actor .
  
  ?decedent dbo:deathPlace dbr:Los_Angeles_County,_California ;
            dbo:causeOfDeath ?cause .
  
  ?actor dbo:actedIn ?movie .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
37,8,train,"Give me the birthplace of Bob Crewe and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for Bob Crewe's birthplace
SELECT ?birthPlace WHERE {
  dbr:Bob_Crewe a dbo:MusicalArtist .
  dbr:Bob_Crewe dbo:birthPlace ?birthPlace .
}

UNION

# Query for Ethan Iverson's works and their associated birthplaces
SELECT DISTINCT ?workBirthPlace WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Ethan Iverson""@en .

  ?work dbo:composer ?artist ;
        dbo:placeCreated ?workBirthPlace .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
203,33,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?war a dbo:MilitaryConflict .
  ?war dbo:participatingMilitaryUnit ?militaryForce .
  
  OPTIONAL { 
    ?war dbo:reference dbr:William_Bayne . 
  }
  
  OPTIONAL { 
    ?commander dbp:commanderOf ?war .
    ?commander dbo:memberOf ?force .
    FILTER(CONTAINS(LCASE(?force), ""french campaign in egypt and syria""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
293,47,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the ruling party in Central, Louisiana
  ?location a dbo:PopulatedPlace ;
            dbo:country dbr:United_States ;
            rdfs:label ""Central, Louisiana""@en .
  
  ?governmentOrganization dbo:governs ?location ;
                          dbo:member ?partyMember .

  # Find Nat Levine's films and their actors
  ?film dbo:producer dbr:Nat_Levine ;
        dbo:actor ?actor .

  # Find the spouse of the actor
  OPTIONAL { ?actor dbp:spouse ?spouse . }
  
  # Link the party member to the spouse
  ?partyMember foaf:name ?name .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
595,46,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify works authored by Hillary Clinton
  ?work dbo:author dbr:Hillary_Clinton .
  
  # Step 2: Find authors of those works who are politicians and office holders
  ?work dbo:author ?author .
  ?author a dbo:Politician ;
          dbo:officeHolder ?office .

  # Step 3: Determine if any of these authors have a spouse
  OPTIONAL { ?author dbp:spouse ?spouse . }
  
  FILTER(?author != dbr:Hillary_Clinton) # Exclude Hillary Clinton herself

  # Additional filter to ensure the author is also an author of works by Bill Clinton
  ?billWork dbo:author dbr:Bill_Clinton .
  ?billWork dbo:author ?sameAuthor .
  FILTER(?sameAuthor = ?author)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
628,30,train,"Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person foaf:name ""Ackquille Jean Pollard"" .
  ?person dbo:birthName ""Ackquille Jean Pollard"" .

  # Check for band membership
  ?bandMember a dbo:Band ;
              dbo:member ?person .
  ?bandMember foaf:name ""Uncle Murda"" .

  # Check for native region association
  ?region a dbo:Award ;
          dbo:location dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
          dbo:country dbr:United_States .

  ?person dbo:nativePlace ?region .
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
203,14,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?event a dbo:Event ;
         dbo:agent dbr:Robert_Calder ;
         rdf:type dbo:SocietalEvent .
  
  OPTIONAL { 
    ?event dbo:militaryForce ?militaryForce .
  }
}
```",2,4,3,2,1,3,3,71,0,0,34,0,0.0,0
595,55,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbr:Bill_Clinton .
  ?person dbo:spouse ?spouse .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
158,24,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Person native to Russia (Nicholas II's administration)
  ?person dbo:nationality dbr:Russia .
  
  # Person native to Finland (Alexander II, Grand Duke of Finland's administration)
  ?person dbo:nationality dbr:Finland .
}
```",4,5,5,2,2,2,3,28,0,2,126,0.0,0.0,0
119,14,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residenceCountry WHERE {
  ?person a dbo:Athlete .
  ?person dbo:nationality dbr:Poland .
  ?person dbo:birthPlace dbr:Łódź .
  OPTIONAL { ?person dbo:residence ?residence . }
  ?residence dbp:countryName ?residenceCountry .
}
```",3,6,4,3,1,3,2,20,0,0,108,0,0.0,0
668,25,train,Give me the person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Joey B"" .
  ?person dbp:birthName ?birthName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,38,train,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Duke Philipp of Württemberg's child
  ?parent1 dbo:spouse ?dukePhilipp .
  ?dukePhilipp a dbo:Duke ;
               foaf:name ""Duke Philipp of Württemberg""@en .

  # Child of Duke Philipp (child)
  ?parent1 dbo:child ?child1 .

  # Grandchild of Duke Philipp
  ?child1 dbo:child ?grandchild1 .
  
  # Archduke Charles Louis of Austria's child
  ?parent2 dbo:spouse ?archdukeCharlesLouis .
  ?archdukeCharlesLouis a dbo:Archduke ;
                        foaf:name ""Archduke Charles Louis of Austria""@en .

  # Child of Archduke Charles Louis (child)
  ?parent2 dbo:child ?child2 .

  # Grandchild of Archduke Charles Louis
  ?child2 dbo:child ?grandchild2 .
  
  # Check if the grandchild is royalty
  FILTER (?grandchild1 = ?grandchild2) .
  FILTER EXISTS { ?grandchild1 a dbo:RoyalFamilyMember } .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
347,16,train,Give me the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?archduke a dbo:Person ;
            foaf:name ""Charles Joseph, Archduke of Austria"" ;
            dbo:parent ?parent .

  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,57,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby's child who is a politician
  ?child1 dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .
  ?child1 a dbo:Politician .

  # Edward Stanley, 17th Earl of Derby's parent who was a politician and an office holder
  ?parent2 dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?parent2 a dbo:Politician .
  ?parent2 dbo:officeHolder ?office .

  # Victor Stanley's parent
  ?child3 dbo:parent ?parent2 .
  ?child3 rdfs:label ""Victor Stanley (Royal Navy officer)""@en .

  # The father of the child who is a politician and also the parent of Edward Stanley, 17th Earl of Derby
  ?father dbo:child ?child1 .
  ?father dbo:child ?parent2 .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
392,4,train,Give me the member of 1. FC Magdeburg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?reference WHERE {
  ?team a dbo:SoccerClub .
  ?team dbp:name ""1. FC Magdeburg"" .

  ?member dbo:playsFor ?team .
  ?member foaf:name ?player .

  OPTIONAL { 
    ?member dbr:wikiPageWikiLink ?reference .
  }
}
LIMIT 10
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
293,33,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Find actors in those films
  ?film dbo:starring ?actor .

  # Check if the actor is a member of the Republican Party
  ?actor dbo:partyMemberOf dbr:Republican_Party_(United_States) .

  # Retrieve spouse information
  OPTIONAL { ?actor dbp:spouse ?spouse . }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
198,30,train,"Give me the force of Quincy Adams Gillmore and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?gillmoreForce ?tracyWar ?entityInLewisBirthplace WHERE {
  # Quincy Adams Gillmore's military rank
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore"" ;
            dbo:militaryRank ?gillmoreForce .

  # Amasa Tracy's war involvement
  ?tracy a dbo:MilitaryPerson ;
         foaf:name ""Amasa Tracy"" ;
         dbo:participatedInWar ?war .
  ?war dbo:name ?tracyWar .

  # Henry Clay Lewis' birthplace and related entity
  ?lewis a dbo:Writer ;  # Assuming he is categorized as a writer, adjust if needed
         foaf:name ""Henry Clay Lewis"" ;
         dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:United_States .

  ?entityInLewisBirthplace a dbo:Thing ;  # Adjust the class as necessary
                           dbo:location ?birthPlace .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
198,32,train,Give me the force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?force WHERE {
  ?person dbo:award dbr:Gillmore_Medal .
  ?person dbo:award dbr:Medal_of_Honor .
  OPTIONAL { ?person dbo:militaryService ?service . }
  OPTIONAL { ?service dbo:member ?force . }
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
943,17,train,"Who is the father, that is a royalty and an office holder, of the child of Baeda Maryam I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Baeda Maryam I and his child
  ?baedaMaryamI a dbo:Monarch ;
                dbp:child ?child .

  # Identify the father of this child who is royalty and an office holder
  ?child dbo:parent ?father .
  ?father a dbo:Monarch ;  # Ensures the person is royalty
          dbo:officeHolder ?office .  # Ensures the person holds an official position

  FILTER (?baedaMaryamI = dbr:Baeda_Maryam_I)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,18,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of $pacely.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  OPTIONAL { ?person foaf:name ?professionalName . }
  OPTIONAL { 
    ?association dbo:associatedBand dbr:$pacely ;
                 dbo:member ?person .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
769,17,train,"Give me the player in Ye Jia and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInYeJia ?managerOfHongKongC WHERE {
  # Find the player associated with Ye Jia
  ?yeJia a dbo:SoccerPlayer ;
         foaf:name ""Ye Jia"" .
  
  ?team a dbo:SoccerTeam ;
        dbo:member ?playerInYeJia ;
        dbp:player ?yeJia .

  # Find the manager of Hong Kong Club (Hong Kong C)
  ?hongKongClub a dbo:SoccerClub, dbo:SportsOrganization ;
                foaf:name ""Hong Kong Club"" .
  
  ?manager a dbo:SportsManager, dbo:SoccerManager ;
           dbp:managedTeam ?hongKongClub .

}
```",4,10,5,3,2,3,2,20,0,0,2,0,0.0,0
557,46,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  # Find the work associated with Cora Sue Collins
  ?work dbo:creator dbr:Cora_Sue_Collins .
  
  # Find the producer of that work
  ?work dbo:producer ?producer .

  # Find the fictional character created by Kent Allard
  ?character dbo:creator dbr:Kent_Allard_print .

  # Find the professional name or alter ego of that character
  ?character dbp:alterEgo ?professionalName .
  
  # Link the producer to the professional name
  ?producer foaf:name ?professionalName .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
687,24,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:workFeaturedIn dbr:All_or_Nothing:_Manchester_City .

  ?actor dbo:sport dbr:Soccer .
  ?actor a dbo:Athlete .

  ?team dbo:member ?actor .
  ?team dbo:member dbr:Pablo_Aimar .

  BIND(?actor AS ?player)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
398,14,train,Give me the player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?work dbo:author dbr:Aleksandr_Filimonov .
  ?work dbo:actor ?player .
}
```",3,3,4,3,1,3,2,20,0,0,17,0,0.0,0
140,15,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:eventDescription ""Pickett's Charge"" .
  ?event dbo:participatedInMilitaryForce ?militaryForce .

  ?person dbo:role ?role .
  ?person dbo:memberOfParty dbr:Republican_Party_(United_States) .
  ?person dbo:commanderOf ?militaryForce .

  FILTER(?role = ""Commander"")
}
```",4,5,5,3,2,3,2,20,0,0,4,0,0.0,0
557,19,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerName ?shadowProfessional WHERE {
  # Find the producer of ""The Adventures of Tom Sawyer"" (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
  ?producer foaf:name ?producerName .

  # Find the professional associated with The Shadow
  dbr:The_Shadow dbo:profession ?shadowProfessional .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,48,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Gwynplaine as a fictional character from ""The Man Who Laughs""
  dbr:The_Man_Who_Laughs dbo:character dbr:Gwynplaine .
  
  # Janet Gaynor's claim to fame
  dbr:Janet_Gaynor dbo:film dbr:The_Man_Who_Laughs .

  # Find the professional or alter ego associated with Gwynplaine
  ?professional dbo:alterEgo dbr:Gwynplaine .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
595,44,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person dbr:Bill_Clinton .
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person dbo:commanderInWar dbr:Gulf_War .
  ?person dbo:memberOf dbr:United_States_Navy .
  ?work dbo:author ?person ;
        a dbo:Book .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
198,1,train,Give me the force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  dbr:Quincy_Adam_S._Gillmore a dbo:MilitaryPerson .
  OPTIONAL { dbr:Quincy_Adam_S._Gillmore dbo:militaryRank ?rank . }
  OPTIONAL { dbr:Quincy_Adam_S._Gillmore dbp:force ?force . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
557,53,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Find producers of Janet Gaynor's movies
  ?movie dbo:starring dbr:Janet_Gaynor .
  ?movie dbo:producer ?producer .

  UNION

  # Find producer of ""The Adventures of Tom Sawyer"" (1938 film)
  ?tomSawyerMovie dbr:The_Adventures_of_Tom_Sawyer_(1938_film) .
  ?tomSawyerMovie dbo:producer ?producer .

  UNION

  # Find a connection to Kent Allard through a fictional character
  ?fictionalCharacter dbo:alterEgo ?realPerson .
  ?realPerson foaf:name ""Kent Allard"" .
  ?realPerson dbo:profession ?profession .
  ?profession dbo:agent ?producer .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
609,23,train,Give me the birth place of the awardee of the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeName ?birthPlace WHERE {
  # Vince Gilligan's award
  ?award a dbo:Award .
  ?award dbo:recipient dbr:Vince_Gilligan .

  # Find other awardees of the same award
  ?otherAward a dbo:Award ;
              rdfs:label ?awardLabel .
  FILTER(?awardLabel = ?awardLabel) # Ensure it's the same award

  ?otherAwardee dbo:recipient ?person .
  ?person foaf:name ?awardeeName .

  OPTIONAL { 
    ?person dbo:birthPlace ?birthPlace .
  }
}
ORDER BY ?awardeeName
LIMIT 10
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
782,37,train,"Give me the associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?bandMemberBand WHERE {
  # Find Nick Curran and his associated musical artist
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" .
  
  OPTIONAL { 
    ?nickCurran dbp:associatedActs ?associatedArtist .
  }
  
  # Find band members born on March 30, 1945
  ?bandMember a dbo:MusicalArtist ;
              dbo:birthDate ""1945-03-30""^^xsd:date ;
              dbo:memberOfBand ?band .

  OPTIONAL {
    ?band dbp:name ?bandName .
  }
  
  # Link band members to bands
  ?bandMember dbo:memberOfBand ?band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,33,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?child WHERE {
  # Find ""The Shadow"" as the alter ego of Lamont Cranston
  ?person dbo:alias dbr:The_Shadow .
  ?person foaf:name ""Lamont Cranston""@en .

  # Find Yekuno Amlak as a child of Dawit I
  ?child dbo:parent dbr:Dawit_I .
  ?child foaf:name ""Yekuno Amlak""@en .

  BIND(?person AS ?alterEgo)
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
687,14,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person dbo:birthday ""1979-11-03""^^xsd:date .
  
  OPTIONAL { 
    ?person dbo:currentTeam ?team .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
941,2,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
  UNION
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
859,11,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?bandMember WHERE {
  # Find Phantomsmasher as a musical artist
  ?phantomsmasher a dbo:MusicalArtist ;
                  foaf:name ""Phantomsmasher""@en .
  
  # Identify associated musical artists with Phantomsmasher
  ?association dbo:artist ?associatedArtist .
  ?association dbo:relatedArtist ?phantomsmasher .

  # Find band members of the associated artist who are part of Burnt by the Sun (band)
  ?member dbo:memberOf ?burntByTheSun ;
          foaf:name ?bandMember .
  
  ?burntByTheSun a dbo:Band, dbo:MusicalGroup, dbo:Organization ;
                 foaf:name ""Burnt by the Sun (band)""@en .

  # Ensure the band member is associated with the musical artist
  ?member dbo:associatedBand ?associatedArtist .
}
```",3,6,4,2,2,3,2,20,0,0,5,0,0.0,0
756,52,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Theodor Heuss's country of administration
  dbr:Theodor_Heuss dbo:nationality dbr:Germany .
  
  # Manager of VfL Bochum (2006–07)
  ?bochumSeason a dbo:SoccerLeagueSeason ;
                dbp:club dbr:VfL_Bochum ;
                dbp:season ""2006–07""^^xsd:string ;
                dbp:manager ?bochumManager .
  
  # Manager of SBV Vitesse (2020–21)
  ?vitesseSeason a dbo:SoccerLeagueSeason ;
                 dbp:club dbr:SBV_Vitesse ;
                 dbp:season ""2020–21""^^xsd:string ;
                 dbp:manager ?vitesseManager .
  
  # Check if the manager of VfL Bochum (2006–07) is the same as SBV Vitesse (2020–21)
  FILTER (?bochumManager = ?vitesseManager)

  # Find the native country of this manager
  ?manager dbo:nationality ?native .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
706,16,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Sangeet Natak Akademi Fellowship awardee
  { 
    ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Actor of ""Akaler Shandhaney""
  {
    ?film dbp:title ""Akaler Shandhaney""@en .
    ?film dbo:actor ?person .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,2,3,2,20,2,9,0,0.18181818181818182,1.0,0.3076923076923077
203,32,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find wars involving William Bayne
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne"" ;
         dbo:militaryConflict ?war1 .

  # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
  ?regiment dbr:30th_(Cambridgeshire)_Regiment_of_Foot ;
            dbo:militaryConflict ?war2 .

  # Ensure both entities are involved in the same war
  FILTER (?war1 = ?war2)

  # Retrieve military forces associated with these wars
  ?war1 dbo:participatingMilitaryForce ?militaryForce .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
419,4,train,Give me the alma mater of Chennupati Jagadish and entity in Andhra Pradesh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Chennupati Jagadish"" .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
  FILTER EXISTS { ?almaMater dbo:location dbr:Andhra_Pradesh }
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
103,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:aliasName ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
270,2,train,"Who is the person born, that is a politician, as Ada Jane Low?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbp:birthName ""Ada Jane Low"" .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
687,54,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?athlete a dbo:Athlete .
  ?athlete dbo:birthday ""1955-02-22""^^xsd:date .

  ?actor a dbo:Actor ;
         dbo:profession dbr:Soccer_player ;
         dbo:profession dbr:Athlete .

  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .

  ?team dbo:member ?athlete ;
        dbo:member dbr:Pablo_Aimar .

  ?athlete foaf:name ?player .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
557,54,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?film1 a dbo:Film .
  ?film1 dbp:title ""Angels with Dirty Faces"" .
  ?film1 dbo:director dbr:Michael_Curtiz .
  ?film1 dbo:producer ?producer .

  ?film2 a dbo:Film .
  ?film2 dbp:title ""A Star Is Born (1937 film)"" .
  ?film2 dbo:producer ?producer .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
19,2,train,Give me the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""John Boxer"" .
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
609,7,train,"Give me the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  ?book a dbo:Book .
  ?book dbp:title ""El Deafo""@en .
  OPTIONAL { ?book dbo:author ?person . }
  ?person dbo:nationality dbr:United_States .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
213,16,train,"Give me the country of the work of Lao She and birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v3 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?workCountry ?childBirthPlace WHERE {
  # Part 1: Country of the work of Lao She
  ?work dbo:author dbr:Lao_She .
  OPTIONAL { ?work dbo:country ?workCountry . }

  # Part 2: Birth place of the child politician of Chiang Ching-kuo
  ?child dbo:parent dbr:Chiang_Ching-kuo ;
         a dbo:Politician .
  OPTIONAL { ?child dbo:birthPlace ?childBirthPlace . }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
246,16,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?parent WHERE {
  # Prince Faisal bin Hussein's children who are royalty
  ?child dbo:parent dbr:Faisal_bin_Hussein .
  ?child a dbo:Royalty .

  # Find the parent of each child (who is also royalty)
  ?child dbo:parent ?parent .
  ?parent a dbo:Royalty .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
345,6,train,Give me the region of the time zone of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?japan a dbo:Country .
  ?japan dbp:name ""Japan"" .
  ?japan dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",2,2,3,2,1,2,2,9,0,0,2255,0,0.0,0
687,61,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Identify actors in these films who are also soccer players and athletes
  ?actor a dbo:Actor ;
         dbo:actedIn ?film ;
         dbo:sport dbr:Soccer ;
         dbo:occupation dbr:Athlete .

  # Find the person born on Marcelo Sarmiento's birthday
  ?person dbp:birthday ?birthday .
  FILTER (?birthday = (SELECT ?bday WHERE {
    ?sarmiento a dbo:SoccerPlayer, dbo:SoccerManager ;
               dbp:birthday ?bday .
    ?sarmiento foaf:name ""Marcelo Sarmiento""@en
  }))

  # Determine the team of this person
  ?person dbo:team ?team .

  # The player we are looking for is an actor in the film and a member of the team
  ?actor dbo:memberOfTeam ?team .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
293,38,train,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  # Ann Sothern's birth name and resource
  dbr:Ann_Sothern dbo:birthName ""Anne Sothern"" .
  
  # Spouse relationship
  dbr:Ann_Sothern dbo:spouse ?spouse .

  # Lee Bowman's role in ""1,000 Dollars a Minute""
  ?spouse foaf:name ?spouseName .
  OPTIONAL { ?spouse dbo:roleInFilm dbr:_1000_Dollars_a_Minute . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
353,10,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile, Queen of Sicily""@en .
  
  ?roger a dbo:Person ;
         foaf:name ""Roger II of Sicily""@en .

  ?elvira dbo:spouse ?roger .
  
  ?child dbo:parent ?elvira .
  ?child dbo:parent ?roger .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
103,60,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # The Shadow as a video game character
  ?shadowVideoGame a dbo:VideoGame ;
                   dbo:character dbr:The_Shadow .

  # Comics character associated with The Shadow's alter ego
  ?comicsCharacter dbo:alterEgoOf ?shadowVideoGame .
  
  # Movie that is also a television show featuring this comics character
  ?movie a dbo:Film ;
         dbo:starring ?actor ;
         dbo:basedOn dbr:The_Shadow .

  # Actor who played the role and was born as Richard Grant Esterhuysen
  ?actor dbp:birthday ?birthday .
  ?actor foaf:name ?name .
  ?actor dbp:birthName ""Richard Grant Esterhuysen""^^xsd:string .

  # Linking professional to the actor
  ?professional dbo:profession ?actor .
}
```",6,8,7,3,2,3,3,71,0,0,13,0,0.0,0
557,21,train,Give me the professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?film a dbo:Film .
  ?film dbo:title ""A Star Is Born (1937 film)""@en .
  ?film dbo:producer ?person .

  OPTIONAL { 
    ?alias dbo:alterEgo dbr:The_Shadow .
    ?alias dbo:associatedWith ?person .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,29,train,"Give me the child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Roger II of Sicily and Elvira of Castile's child
  ?person dbo:spouse ?elvira .
  ?elvira foaf:name ""Elvira of Castile"" .
  ?person dbo:child ?child .

  # The same person is also a parent of William I of Sicily
  ?child dbo:parent dbr:William_I_of_Sicily .

  # Ensure the child is royalty
  ?child a dbo:Monarch .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,4,train,"Give me the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?timeZone a dbo:TimeZone .
  ?timeZone dbp:name ""Eastern European Time"" .
  ?timeZone dbo:location ?region .
  ?region a dbo:Settlement .
}
```",1,2,2,1,1,3,2,20,0,0,20665,0,0.0,0
198,60,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?award a dbo:Award .
  ?award dbo:awardingBody dbr:United_States_Congress .

  ?person dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace ?settlement ;
          dbo:deceased true .

  ?award dbo:recipient ?person .

  ?person dbo:participatedInWar ?war .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
347,31,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:allegiance dbr:French_Army ; # Assuming the commander was part of the French Army
             dbo:role ""Commander"" ;
             dbo:spouse ?eleonore .

  ?event dbo:relatedEvent ?societalEvent ;
         dbo:subject ?commander .
  ?societalEvent a dbo:SocietalEvent .

  ?tvShow dbo:starring ?commander .
  ?tvShow a dbo:TelevisionShow .

  ?eleonore dbp:father ?commander ;
            rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
633,11,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Identify Francis I, Duke of Lorraine
  dbr:Francis_I,_Duke_of_Lorraine dbo:child ?person .
  
  # Find the parent of Francis I, Duke of Lorraine
  ?person dbo:parent ?parent .

  # Ensure the spouse is royalty and noble
  ?parent dbo:spouse ?spouse .
  ?spouse a dbo:Monarch ;
          a dbo:Noble .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
386,7,train,Give me the war of Alexander Lvovich Davydov and entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?davydov a dbo:Person ;
           foaf:name ""Alexander Lvovich Davydov"" ;
           dbo:nationality dbr:Russian_Empire .
  
  OPTIONAL { 
    ?davydov dbo:militaryConflict ?war .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
943,7,train,Who is the child of Baeda Maryam I?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person dbp:father dbr:Baeda_Maryam_I .
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
23,15,train,"Give me the party of Gustavo Petro and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?party WHERE {
  VALUES (?personName) { (""Gustavo Petro"" ""Roy Leonardo Barreras Montealegre"") }
  
  ?person foaf:name ?personName .
  OPTIONAL { 
    ?person dbo:politicalParty ?party . 
  }
}
ORDER BY ?personName
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
905,16,train,"Give me the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Identify Maria of Bytom
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  # Step 2: Find her spouse
  ?maria dbp:spouse ?spouse .

  # Step 3: Determine the father of that spouse and ensure he is royalty
  ?spouse dbo:father ?father .
  ?father a dbo:Monarch ; # Assuming Monarch as a class for royalty
          foaf:name ?name .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
38,8,train,"Give me the author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  dbr:Joe_Biden dbo:author ?person .
  ?person a dbo:Writer .
  ?work dbo:author ?person ;
        a dbo:CreativeWork, dbo:WrittenWork .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,8,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Iliza_Shlesinger .
  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Iliza_Shlesinger)
}
ORDER BY ?actor
LIMIT 10
```",2,4,3,2,1,2,3,28,1,9,6,0.1,0.14285714285714285,0.11764705882352941
412,23,train,Give me the war of the awardee of 30 and war of the leader of National Party of Greece.,"SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardRecipientWar ?partyLeaderWar WHERE {
  # Find the individual who received an award at age 30
  ?person dbo:ageAtEvent ""30"" ;
          dbo:awardsReceived ?award .
  
  OPTIONAL { 
    ?award dbo:relatedTo ?war .
    BIND(?war AS ?awardRecipientWar)
  }
  
  # Find the leader of the National Party of Greece
  ?leader a dbo:Politician ;
          dbo:partyLeader dbr:National_Party_of_Greece ;
          dbo:relatedTo ?war .
  BIND(?war AS ?partyLeaderWar)
}
```",4,4,5,2,2,2,3,28,0,0,11,0,0.0,0
943,40,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?child ?parent WHERE {
  # Find the commander involved in the Siege of Mukha
  ?commander a dbo:Monarch ;
             dbo:spouseOrPartner ?spouse ;
             dbo:child ?child .
  
  # Ensure the commander is royalty and involved in the Siege of Mukha
  ?siege dbo:participant ?commander ;
         rdfs:label ""Siege of Mukha""@en .

  # Find Baeda Maryam I as a child of this commander
  ?child dbp:name ""Baeda Maryam I""@en .
  
  # Get the parent (father) of the commander
  ?parent dbo:child ?commander .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
347,26,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .

  ?child dbo:parent ?parent .
  
  ?child dbo:father ?father .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
871,13,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?parent WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  ?person a dbo:Person ;
          foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .
  
  # Find his children
  ?person dbo:child ?child .

  # For each child, find their parent (which should be Frederick Stanley)
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,25,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?georgeDucasReference ?jeanBaptistCommander WHERE {
  # Find George Ducas as a reference in a television show
  ?tvShow dbo:genre dbr:Sitcom .
  ?tvShow dbo:character ?character .
  ?character foaf:name ""George Ducas"" .
  ?tvShow dbp:reference ?georgeDucasReference .

  # Find Jean Baptist, Comte d'Arco as a commander in a war
  ?war dbo:commander ?jeanBaptist .
  ?jeanBaptist foaf:name ""Jean Baptist, Comte d'Arco"" .
  ?war dbo:socialEvent ?societalEvent .

  # Ensure the war is considered a societal event
  ?societalEvent rdf:type dbo:SocietalEvent .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
392,0,train,Give me the member of 1. FC Magdeburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?team a dbo:SoccerClub .
  ?team foaf:name ""1. FC Magdeburg""@en .
  ?player dbo:playsFor ?team .
  ?player foaf:name ?member .
}
```",1,1,2,1,1,2,2,9,0,0,616,0,0.0,0
198,0,train,Give me the war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Amasa Tracy"" .
  ?person dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war .
}
```",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
353,31,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent WHERE {
  # Identify Roger II of Sicily
  ?rogerII a dbo:Person ;
           foaf:name ""Roger II of Sicily""@en .

  # Find William I of Sicily, who is the child of Roger II and parent of William II
  ?williamI dbo:childOf ?rogerII ;
           dbo:parentOf ?williamII .
  
  # Identify William II of Sicily
  ?williamII foaf:name ""William II of Sicily""@en .

  # The query asks for the child of William I (who is also a parent)
  ?williamI dbo:child ?childOfParent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
557,35,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Find movies Janet Gaynor acted in
  ?movie dbo:starring dbr:Janet_Gaynor .
  
  # Find works related to ""The Shadow""
  OPTIONAL { 
    ?work dbo:character dbr:The_Shadow .
    ?movie dbp:basedOn ?work .
  }
  
  # Get the producer of these movies
  ?movie dbo:producer ?producer .
}
```",4,6,5,2,2,3,3,71,1,10,0,0.09090909090909091,1.0,0.16666666666666669
258,11,train,Give me the alma mater of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?foundingDate WHERE {
  # Retrieve the alma mater of Eleonora Menicucci
  OPTIONAL {
    dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .
  }
  
  # Retrieve the founding date of Federal University of Paraíba
  OPTIONAL {
    dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
  }
}
```",3,3,4,2,2,3,2,20,1,3,0,0.25,1.0,0.4
513,16,train,Give me the entity in the award of George H. Cameron and residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardEntity ?residence WHERE {
  # Find George H. Cameron's awards
  ?georgeHCM a dbo:Person ;
             foaf:name ""George H. Cameron"" ;
             dbo:honoraryAward ?award .
  
  ?award dbo:recipient ?georgeHCM ;
         dbp:entity ?awardEntity .

  # Find the leader of the Ulster Unionist Party and their residence
  ?leader a dbo:Person ;
          foaf:name ?nameLeader ;
          dbo:memberOf dbr:Ulster_Unionist_Party ;
          dbo:residence ?residence .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
859,13,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?artist a dbo:Band ;
          dbo:genre/dbo:subClassOf* dbo:MusicalArtist ;
          dbo:member ?bandMember .
  
  ?reference dbo:workExample dbr:Burnt_by_the_Sun ;
             dbo:associatedMusicalArtist ?artist .

  FILTER EXISTS { ?bandMember a dbo:Person }
}
```",3,7,4,3,1,3,2,20,0,0,18,0,0.0,0
80,25,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Alec Baldwin"" .
  OPTIONAL { 
    ?character dbo:portrayedBy ?person ;
               rdfs:label ""The Shadow""@en .
  }
  OPTIONAL {
    ?film dbo:starring ?person ;
          rdfs:label ""ATL""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
143,8,train,Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Cynthia Ikponmwenosa Morgan"" .
  ?person foaf:name ?artist .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
353,25,train,Give me the child of the child of Alfonso VI of León and Castile and father of William II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Alfonso VI of León and Castile
  ?alfonso a dbo:Person ;
           foaf:name ""Alfonso VI of León and Castile""@en .
  
  # His child who is also the parent of William II of Sicily
  ?alfonsoChild dbo:childOf ?alfonso ;
                dbo:parentOf dbr:William_II_of_Sicily .

  # The grandchild (child of the above person)
  ?childOfChild dbo:childOf ?alfonsoChild .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,14,train,Give me the child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Alfonso VI of León and Castile
  dbr:Alfonso_VI_of_Le%C3%B3n_and_Castile dbo:spouse ?spouse .
  
  # His children
  ?child dbo:parent dbr:Alfonso_VI_of_Le%C3%B3n_and_Castile ;
         dbo:parent ?spouse .

  # The grandchildren (children of his children)
  ?grandchild dbo:parent ?child .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
943,35,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?yeshaqI a dbo:Monarch ;
           dbo:spouse ?mother .
  ?dawitII a dbo:Monarch ;
           dbo:parent ?yeshaqI ;
           dbo:parent ?mother .
  ?zaraYaqob a dbo:Monarch ;
             dbo:parent ?yeshaqI ;
             dbo:parent ?mother .
  FILTER(?zaraYaqob != ?dawitII)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
513,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:United_Kingdom .
}
LIMIT 10
```",1,1,2,1,1,3,2,20,1,9,42998,0.1,2.3256354798948812e-05,4.65018949522193e-05
140,0,train,Give me the commander in Pickett's Charge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:name ""Pickett's Charge""@en .
  ?event dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
347,3,train,Give me the military force of Algerian War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  VALUES ?event { dbr:Algerian_War }
  
  ?event dbo:participatingMilitaryUnit ?militaryForce .
}
```

This query selects military forces that participated in the Algerian War. It uses DBpedia's ontology to find entities related to participating military units.",1,1,2,1,1,3,3,71,0,0,119,0,0.0,0
414,17,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show ?award WHERE {
  ?prize a dbo:NobelPrizeInPhysics .
  ?prize dbo:awardingBody dbr:Royal_Swedish_Academy_of_Sciences .
  OPTIONAL { ?prize dbo:ceremony ?show . }
  OPTIONAL { ?prize dbo:recipient ?recipient . }
  OPTIONAL { ?recipient dbo:honoredFor ?award . }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
816,45,train,Give me the parent of the child of the spouse of Mariclare Costello and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?spouse a dbo:Spouse ;
          dbo:spouse ?mariclare .

  # Find the child of that spouse
  ?child dbo:parent ?spouse ;
         dbo:parent ?otherParent .

  # Identify Amy Arbus and her parents
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .
  
  ?amyArbus dbo:parent ?parent .

  # Find the actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?actor a dbo:Actor ;
         dbo:film dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg .

  # Combine relationships
  FILTER(?child = ?amyArbus)
  FILTER(?parent = ?otherParent)
  FILTER(?spouse = ?actor)

}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
472,8,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administeredTerritory WHERE {
  dbr:Hans_Christian_Andersen dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Settlement .
  ?deathPlace dbo:country ?country .
  OPTIONAL { ?country rdfs:label ?administeredTerritory . FILTER (lang(?administeredTerritory) = ""en"") }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
609,9,train,Give me the birth place of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Glenn_Youngkin 
  }
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
246,15,train,"Give me the parent of Prince Omar bin Faisal and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfPrinceOmar ?grandParentOfPrincessAisha ?childOfGrandParent ?parentOfChild WHERE {
  # Find the parent of Prince Omar bin Faisal
  ?person dbr:Prince_Omar_bin_Faisal dbo:spouseOrPartner ?parentOfPrinceOmar .
  
  # Find Princess Aisha bint Faisal's grandparent (parent of her parent)
  ?princessAishaParent a dbo:Person ;
                      dbp:child dbr:Princess_Aisha_bint_Faisal ;
                      dbo:spouseOrPartner ?grandParentOfPrincessAisha .
  
  # Find the child of Princess Aisha bint Faisal's grandparent
  ?grandParentOfPrincessAisha dbo:spouseOrPartner ?childOfGrandParent .

  # Find the parent of that child (i.e., the great-grandparent of Princess Aisha)
  ?childOfGrandParent dbo:spouseOrPartner ?parentOfChild .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
756,24,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry ?managerName WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality dbr:Germany .
  
  # Manager of the 2020–21 SBV Vitesse season
  OPTIONAL {
    dbr:SBV_Vitesse dbp:seasons [
      a dbo:SportsTeamSeason ;
      dbp:manager ?manager .
    ] .
    
    ?manager foaf:name ?managerName .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
293,44,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States) and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:birthName ""Ann Sothern"" .
  ?actor dbo:memberOfParty dbr:Republican_Party_(United_States) .
  ?actor dbo:film dbr:_1,000_Dollars_a_Minute .
  ?actor dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
723,6,train,Give me the band member of Stone Sour and band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:bandMemberOf dbr:Stone_Sour .
  ?person dbo:bandMemberOf dbr:Mudvayne .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
23,17,train,Give me the entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Daniel Elahi Galán's country of origin
  ?galan a dbo:Person ;
         dbo:nationality dbr:Colombia .
  
  # Gustavo Petro's political party
  ?petro a dbo:Politician ;
         dbo:partyAffiliation ?party .

  FILTER (?party = dbr:Colombian_People's_Party)

  # Find entities related to both conditions
  OPTIONAL { ?entity dbo:nationality dbr:Colombia . }
  OPTIONAL { ?entity dbo:partyAffiliation ?party . }

  FILTER (?party = dbr:Colombian_People's_Party)
}
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
39,51,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Bob Thompson"" .
  OPTIONAL { ?person dbp:alias ""The Shadow"" . }
  ?person dbo:memberOfBand ?band .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
737,4,train,"Give me the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Philipp_Albrecht,_Duke_of_Württemberg dbo:spouse ?spouse .
  OPTIONAL { dbr:Philipp_Albrecht,_Duke_of_Württemberg dbo:child ?child . }
  UNION
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
198,28,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?entityInCharleston ?war WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Quincy Adams Gillmore"" .
  
  OPTIONAL { ?person dbo:militaryRank ?force . }
  OPTIONAL { 
    ?person dbo:placeOfBirth dbr:Charleston,_South_Carolina .
    ?entityInCharleston dbo:location dbr:Charleston,_South_Carolina .
    ?person dbo:associatedWith ?entityInCharleston .
  }
  
  OPTIONAL {
    ?person dbo:award ""Medal of Honor"" .
    ?war dbo:conflict ?medalOfHonorWar .
    ?person dbo:participatedIn ?medalOfHonorWar .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
293,7,train,Give me the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbr:Tisha_Sterling .
  OPTIONAL { 
    ?relation dbo:child ?person ;
              dbo:parent ?parent .
  }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,55,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Cora Sue Collins' works and their producers
  {
    ?work dbo:starring dbr:Cora_Sue_Collins .
    ?work dbo:producer ?producer .
  }
  
  UNION
  
  # Janet Gaynor's works (movies) and their producers
  {
    ?movie a dbo:Film ;
           dbo:starring dbr:Janet_Gaynor .
    ?movie dbo:producer ?producer .
  }

  UNION

  # The Shadow as a professional entity, likely in entertainment
  {
    ?entity dbp:profession ""Actor""@en ; # Assuming The Shadow is an actor or similar role
           dbo:work ?shadowWork .
    ?shadowWork dbo:producer ?producer .
    FILTER(?entity = dbr:The_Shadow)
  }
}
```",6,9,7,2,3,3,3,71,1,14,0,0.06666666666666667,1.0,0.125
198,42,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?gillmoreForce ?lewisBirthplace ?medalOfHonorWar WHERE {
  # Quincy Adams Gillmore's military rank
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore"" ;
            dbp:militaryRank ?gillmoreForce .

  # Henry Clay Lewis' birthplace
  ?lewis a dbo:Person ;
         foaf:name ""Henry Clay Lewis"" ;
         dbo:birthPlace ?birthPlace .
  
  FILTER (dbo:isPartOf(?birthPlace, dbr:United_States) && 
          dbo:type(?birthPlace, dbo:Settlement)) .

  BIND(?birthPlace AS ?lewisBirthplace)

  # Medal of Honor awardee's war
  ?medalAwardee a dbo:MilitaryPerson ;
                dbp:award ""Medal of Honor"" .
  
  ?medalAwardee dbo:servedIn ?war .
  BIND(?war AS ?medalOfHonorWar)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
103,29,train,Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of Shatrughan Sinha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  ?show dbo:title ""Dispatches from Elsewhere""@en .
  ?show dbo:starring ?actor .
  
  # Ensure the actor is also a politician
  ?actor dbo:occupation dbr:Politician .

  # Check if Shatrughan Sinha has these professions
  dbr:Shatrughan_Sinha dbo:occupation dbr:Actor ;
                       dbo:occupation dbr:Politician .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
23,3,train,"Who is the person born, that is a politician, as Roy Leonardo Barreras Montealegre?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbp:birthName ""Roy Leonardo Barreras Montealegre"" .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
293,12,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Harriette Arlene Lake"" .
  ?marriage dbo:spouse1 ?person ;
            dbo:spouse2 dbr:Roger_Pryor_(actor) .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,24,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor ?spouse WHERE {
  # Myat Hpone Pyo's resource
  dbr:Myat_Hpone_Pyo a dbo:Person .

  # His father, who is royalty
  OPTIONAL { 
    ?father dbo:child dbr:Myat_Hpone_Pyo .
    ?father a dbo:Monarch .
  }

  # Spouse of his father
  OPTIONAL {
    ?spouse dbo:spouse ?father .
  }
  
  # Predecessor of Myat Hpone Pyo in any role or title
  OPTIONAL {
    ?role dbr:Myat_Hpone_Pyo dbo:successor ?predecessor .
  }

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,20,train,Give me the successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?writer WHERE {
  # Find the successor of Yurii Khmelnytsky
  OPTIONAL {
    dbr:Yurii_Khmelnytskyy dbo:successor ?successor .
  }
  
  # Find the writer of ""Always the Love Songs""
  OPTIONAL {
    dbr:""Always_the_Love_Songs"" dbo:writer ?writer .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
198,14,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity WHERE {
  dbr:Henry_Clay_Lewis a dbo:Person .
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
  OPTIONAL { ?birthPlace dbp:name ?birthPlaceEntity . }
}
```",2,4,3,2,1,3,3,71,0,0,12,0,0.0,0
609,52,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?birthPlace WHERE {
  # Vince Gilligan's award awardee
  OPTIONAL {
    ?award a dbo:Award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:creator dbr:Vince_Gilligan .
    ?awardee foaf:name ?personName .
    ?awardee dbo:birthPlace ?birthPlace .
  }
  
  # Cece Bell
  OPTIONAL {
    dbr:Cecil_C._""Cece""_Bell dbo:birthPlace ?birthPlace .
    BIND(""Cece Bell"" AS ?personName)
  }

  # Governor of Virginia who is a politician
  OPTIONAL {
    ?governor a dbo:Politician ;
              dbo:governmentRole dbr:Governor_of_Virginia ;
              foaf:name ?personName .
    ?governor dbo:birthPlace ?birthPlace .
  }
}
ORDER BY ?personName
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
347,23,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:SocietalEvent ;
         dbo:wikiPageRedirects dbr:Algerian_War .
  
  OPTIONAL { ?event dbo:depicts dbr:Algerian_War_Television_Show . }
  
  ?event dbo:participatedInMilitaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commander .
}
```",3,6,4,3,1,3,3,71,0,0,124,0,0.0,0
871,61,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Edward Stanley, 17th Earl of Derby's children who are politicians
  ?child1 dbo:parent dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?child1 a dbo:Politician .

  # Alumnus of Eton College whose child is a politician
  ?alumnus dbp:almaMater dbr:Eton_College .
  ?child2 dbo:parent ?alumnus .
  ?child2 a dbo:Politician .

  # Parent of the child who is a politician and an office holder
  ?officeHolder dbo:parent ?child2 ;
                a dbo:OfficeHolder .

  # Find the parent of this office holder
  ?parent dbo:parent ?officeHolder .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
706,2,train,Give me the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fellowship WHERE {
  ?fellowship a dbo:Award .
  ?fellowship dbp:name ""Sangeet Natak Akademi Fellowship""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
158,2,train,Give me the native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  FILTER (
    ?place IN (dbr:Moscow, dbr:Saint_Petersburg, dbr:Kiev, dbr:Leningrad_Oblast, dbr:Siberia, dbr:Ukraine, dbr:Belarus, dbr:Poland, dbr:Finland) 
  )
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,3,28,1,13,5474,0.07142857142857142,0.00018264840182648402,0.0003643650938240117
295,1,train,Give me the native of Birmingham.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Birmingham .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,10,2,1521,0.8333333333333334,0.006531678641410843,0.012961762799740765
531,41,train,"Give me the office of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeHolder ?office WHERE {
  # Find Miguel Maura's office
  ?miguelMaura a dbo:OfficeHolder ;
               dbo:office ?miguelOffice .
  
  # Find Alberto Ruiz-Gallardón's residence and his office as commander
  ?albertoRuiz dbp:residence ?tenancyResidence ;
               dbo:office ?commanderOffice .

  # Ensure the person is an office holder and a politician involved in the Central African Republic Civil War
  ?person a dbo:OfficeHolder, dbo:Politician ;
          dbo:memberOf dbr:Central_African_Republic_Civil_War .
  
  # Link the offices of interest to the same person
  FILTER (?office IN(?miguelOffice, ?commanderOffice))
  
  # Return the office holder and their respective office
  BIND(?person AS ?officeHolder)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
288,3,train,Give me the show with Anumta Qureshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Anumta Qureshi"" .
  ?castMember dbo:actor ?person .
  ?castMember dbo:work ?show .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
595,36,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person dbr:USS_Arcadia_(ID-1605)/dbo:owner .
  ?billClinton dbo:spouse dbr:Hillary_Clinton .
  ?disease a dbo:Disease ;
           rdfs:label ""HIV/AIDS""@en .
  ?societalEvent a dbo:SocietalEvent ;
                 rdfs:label ""Gulf War""@en .
  ?gulfWar dbo:commanderInChief ?commander .
  FILTER(CONTAINS(LCASE(?disease), ""hiv/aids"") && CONTAINS(LCASE(?societalEvent), ""gulf war""))
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
628,17,train,"Give me the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?band a dbo:Band .
  ?band dbo:birthPlace dbr:New_York_(state) .

  ?award a dbo:Award .
  ?region a dbo:State ;
          dbo:country dbr:United_States_of_America ;
          dbo:settlementType dbp:Settlement .
  
  ?award dbo:location ?region .
  ?band dbo:awardsReceived ?award .
}
LIMIT 10
```",2,7,3,2,1,3,3,71,0,0,3,0,0.0,0
412,16,train,Give me the war of the awardee of 30 and war of Napoleon Zervas.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?award ?war WHERE {
  ?person dbo:award ?award .
  ?award dbo:dateReceived ""1930""^^xsd:gYear .

  OPTIONAL { 
    ?person dbo:spouse ?spouse . 
    ?spouse dbo:spouse ?zervas .
    ?zervas rdfs:label ""Napoleon Zervas""@en .
  }
  
  OPTIONAL {
    ?person dbo:participatedInWar ?war .
    ?war dbo:participant ?zervas .
    ?zervas rdfs:label ""Napoleon Zervas""@en .
  }
}
ORDER BY ?award
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,11,0,0.0,0
628,61,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  # Find musical artists born in Florida
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  
  # Get the birth name of these artists
  ?person dbp:birthName ?birthName .

  # Find awards related to New York State
  ?award dbo:location dbr:New_York_(state) .
  ?award a dbo:Award .

  # Find bands from New York State that have won this award
  ?band a dbo:Band ;
       dbo:originPlace dbr:New_York_(state) ;
       dbo:hasWonAward ?award .

  # Link the person to the band as an awardee
  ?person dbo:memberOf ?band .
}
ORDER BY ?birthName
LIMIT 10
```",6,12,7,3,2,3,3,71,0,0,59,0,0.0,0
859,12,train,Give me the associated musical artist of the associated musical artist of James Plotkin and band member of Human Remains (band).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person dbo:associatedMusicalArtist dbr:James_Plotkin .
  ?person dbo:memberOfBand dbr:Human_Remains_(band) .
  ?person foaf:name ?artist .
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
375,19,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Yamaza Enjirō's birthplace
  OPTIONAL { 
    dbr:Yamaza_Enjirō dbo:birthPlace ?yBirthPlace .
    ?yBirthPlace rdfs:label ?entity .
    FILTER (lang(?entity) = 'en')
  }
  
  # Toyotomi Hidenaga's wars
  OPTIONAL {
    dbr:Toyotomi_Hidenaga dbo:participatedInWar ?tWar .
    ?tWar dbo:location ?tWarLocation .
    ?tWarLocation rdfs:label ?entity .
    FILTER (lang(?entity) = 'en')
  }
  
  # Hashiba Hidekatsu's wars
  OPTIONAL {
    dbr:Hashiba_Hidekatsu dbo:participatedInWar ?hWar .
    ?hWar dbo:location ?hWarLocation .
    ?hWarLocation rdfs:label ?entity .
    FILTER (lang(?entity) = 'en')
  }
}
```",4,4,5,2,3,2,3,28,0,2,2,0.0,0.0,0
203,31,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the military conflict involving ""The Triple X's""
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:participatingMilitaryUnit ?unit1 .
  ?unit1 rdfs:label ""The Triple X's""@en .

  # Find the Battle of Fort Royal
  ?battle dbr:Battle_of_Fort_Royal .
  
  # Ensure both are part of the same conflict
  ?conflict dbo:participatingMilitaryUnit ?unit2 .
  ?unit2 rdfs:label ""Battle of Fort Royal""@en .

  # Find the commander associated with this military conflict
  ?commander a dbo:MilitaryPerson ;
             dbo:commanded ?conflict .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,56,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in Sergio Agüero and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find Marcelo Sarmiento's birthday
  VALUES (?marceloSarmientoBirthday) {
    { SELECT ?birthday WHERE { 
        dbr:Marcelo_Sarmiento dbo:birthday ?birthday .
      }
    }
  }

  # Find soccer players who are also managers born on that date
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?birthday ;
          dbo:managerOf ?team .

  FILTER (?birthday = ?marceloSarmientoBirthday)

  # Ensure they have played for Sergio Agüero and another athlete born on 1955-02-22
  ?player1 dbp:playedFor dbr:Sergio_Agüero .
  ?person dbp:playedWith ?player1 .

  VALUES (?athleteBirthday) {
    { SELECT ?birthday WHERE { 
        ?athlete dbo:birthday ""1955-02-22""^^xsd:date ;
                 a dbo:Athlete .
      }
    }
  }

  ?player2 dbp:birthDate ?athleteBirthday .
  ?person dbp:playedWith ?player2 .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,9,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?monarch ?startYear ?endYear WHERE {
  VALUES ?monarch { 
    dbr:Christian_IX_of_Denmark 
    dbr:Olaf_I_of_Denmark
  }
  
  OPTIONAL { ?monarch dbo:reignStart ?startYear . }
  OPTIONAL { ?monarch dbo:reignEnd ?endYear . }
}
ORDER BY ?monarch
```",2,2,3,1,2,2,3,28,0,2,1,0.0,0.0,0
140,9,train,"Give me the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  dbr:Pickett's_Charge dbo:partOf ?event .
  ?event a dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit ?militaryForce .
  OPTIONAL { ?militaryForce dbo:partOf ?war . }
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
816,29,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Photographer .
  ?person a dbo:Actor .
  ?person dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg"" .
  ?person dbp:child dbr:Doon_Arbus .

  ?person foaf:parent ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,19,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Herschel_Bernardi .
  ?movie dbo:starring ?actor .

  ?person dbo:child dbr:Amy_Arbus .
  ?person foaf:name ?name .
  ?actor foaf:name ?actorName .
  FILTER(?actor = ?person)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
68,14,train,"Give me the father of Isabella of Austria and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Isabella of Austria
  dbr:Isabella_of_Austria dbo:parent ?father .
  
  # Father is a royalty
  ?father a dbo:Monarch .

  # Father was involved in the Siege of Padua as a commander
  OPTIONAL { 
    ?siege dbo:eventParticipant ?person .
    ?person dbp:title ""Commander""@en .
    ?siege dbr:Siege_of_Padua .
    FILTER(?person = ?father)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
198,35,train,"Give me the war of the awardee of Medal of Honor and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Find Henry Clay Lewis and his birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
             dbp:country dbr:United_States_of_America .

  # Find Medal of Honor awardees from this birthplace
  ?awardee dbo:birthPlace ?birthPlace ;
          dbo:honoredFor ?medalOfHonor .
  
  # Get the war associated with the Medal of Honor
  ?medalOfHonor dbo:war ?war .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
246,17,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of Princess Sara bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Princess Muna al-Hussein and her children
  ?munna a dbo:Person ;
         foaf:name ""Princess Muna al-Hussein""@en .
  
  ?child1 dbo:spouse ?munna ;
          dbo:child ?royaltyChild1 .

  # Princess Sara bint Faisal and her parent
  ?sara a dbo:Person ;
        foaf:name ""Princess Sara bint Faisal""@en .
  
  ?parent dbo:child ?sara, ?royaltyChild1 .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
668,40,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalMusician WHERE {
  # For Tupac Shakur
  VALUES (?person1) { dbr:Tupac_Shakur }
  
  # For Stevie Wonder
  VALUES (?person2) { dbr:Stevie_Wonder }

  # Find associated professional musicians for Tupac Shakur
  ?association1 dbo:associatedMusicalArtist ?person1 .
  ?association1 a dbo:ProfessionalMusician .

  UNION

  # Find associated professional musicians for Stevie Wonder
  ?association2 dbo:associatedMusicalArtist ?person2 .
  ?association2 a dbo:ProfessionalMusician .

  {
    SELECT DISTINCT ?professionalMusician WHERE { 
      ?association1 dbp:name ?professionalMusician .
    }
  }

  UNION

  {
    SELECT DISTINCT ?professionalMusician WHERE { 
      ?association2 dbp:name ?professionalMusician .
    }
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
87,5,train,"Give me the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?person a dbo:Film ;
          dbo:starring dbr:Audrey_Hepburn .
  BIND(?person AS ?movie)
}
ORDER BY ?movie
LIMIT 10
```",1,3,2,1,1,2,3,28,8,2,7,0.8,0.5333333333333333,0.64
293,56,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1 & 2: Find Tisha Sterling's parent and their birth name
  ?tishaSterling dbo:parent ?parent .
  ?parent foaf:name ?name .
  ?parent dbp:birthName ?birthName .

  # Step 3: Find Roger Pryor (actor)'s spouse
  ?rogerPryor dbo:spouse ?spouse .
  
  # Check if the birth name of Tisha Sterling's parent matches Roger Pryor's spouse
  FILTER (?birthName = ?spouse)

  # Step 5: Identify the ruling party in Central, Louisiana
  dbr:Central,_Louisiana dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .

  # Step 6: Find a member of that ruling party who matches the criteria
  ?partyMember dbo:memberOf ?rulingParty ;
              foaf:name ?name .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
557,51,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Cora Sue Collins' notable work
  ?work1 dbo:composer dbr:Cora_Sue_Collins .
  
  # Actor in ""High Society Blues""
  ?movie a dbo:Film ;
         dbo:title ""High Society Blues"" ;
         dbo:starring ?actor .

  # Notable work of the actor from ""High Society Blues""
  ?work2 dbo:actor ?actor ;
         dbo:producer ?producer .

  # Producer of Cora Sue Collins' notable work
  ?work1 dbo:producer ?producer .
  
  OPTIONAL { 
    ?work2 a dbo:Film .  # Ensure it's a film if needed for specificity
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,50,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify the film produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Step 2: Find an actor associated with that film
  ?film dbo:starring ?actor .

  # Step 3: Determine Ann Sothern's birth name
  dbr:Ann_Sothern dbp:birthName ?annSothernBirthName .

  # Step 4: Find a person born as Ann Sothern's birth name
  ?person dbp:birthName ?annSothernBirthName .
  
  # Step 5: Retrieve the spouse of the actor identified in step 2
  ?actor dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,1,68,0,0.014492753623188406,1.0,0.02857142857142857
595,19,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolder true .
  ?person foaf:name ""Paul Ryan""@en .
  ?person dbo:author dbr:Back_to_Work_(book) .
  ?person dbo:work dbr:An_Invitation_to_the_White_House .
  ?person dbp:spouse ?spouse .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
80,60,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find the TV series ""The Golden Master""
  ?series a dbo:TelevisionSeries ;
          rdfs:label ""The Golden Master""@en .

  # Identify characters or professionals with alter egos in this series
  ?character dbo:partOf ?series ;
             dbp:alterEgo ?professional .

  # Find the book ""Smartbomb"" and its author
  ?book a dbo:Book ;
        rdfs:label ""Smartbomb""@en .
  
  ?author dbo:author ?book .

  # Identify a movie associated with this author
  ?movie dbo:starring ?author .
}
```",6,6,7,3,2,3,3,71,0,0,7802,0,0.0,0
871,24,train,"Give me the father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Arthur Stanley's father
  OPTIONAL { 
    dbr:Arthur_Stanley_(politician) dbo:parent ?arthurParent .
    ?arthurParent foaf:name ?arthurFatherName .
    BIND(?arthurParent AS ?father)
  }
  
  # Frederick Stanley, 16th Earl of Derby's parent
  OPTIONAL {
    dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:parent ?frederickParent .
    ?frederickParent foaf:name ?frederickFatherName .
    
    # Check if the same person is a parent to both
    FILTER(?father = ?frederickParent)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,17,train,"Give me the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Saw Min Phyu
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .

  # Find the spouse of Saw Min Phyu
  ?spouse dbo:spouseOf ?sawMinPhyu ;
          a dbo:Person .

  # Check if the spouse is royalty
  OPTIONAL { ?spouse dbo:title ?title .
             FILTER(CONTAINS(LCASE(?title), ""royalty"")) }

  # Find children of the spouse
  ?child dbo:parent ?spouse ;
         a dbo:Person .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
941,10,train,"Who is the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Antoinette, Princess of Brunswick-Wolfenbüttel""@en ;
            dbp:child ?child .

  ?child a dbo:Royalty .

  ?child dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
39,25,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Robert Lamar Thompson""@en .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
103,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Florida .
  ?person dbo:occupation ?profession .
}
ORDER BY ?profession
LIMIT 10
```",1,1,2,1,1,3,3,71,0,6,39640,0.0,0.0,0
68,5,train,"Who is the child, that is a royalty, of Philip I of Castile?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  dbr:Philip_I_of_Castile dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child a dbo:Monarch ;
         foaf:name ?childName .
}
ORDER BY ?childName
LIMIT 10
```",1,2,2,1,1,2,3,28,0,0,5,0,0.0,0
412,17,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Antonios Varthalitis
  ?varthalitis a dbo:Person ;
               dbp:deathPlace ?deathPlaceVarthalitis .
  
  # Konstantinos Ventiris
  ?ventiris a dbo:Person ;
            dbp:deathPlace ?deathPlaceVentiris .

  # Check if the death places are settlements
  OPTIONAL { ?deathPlaceVarthalitis a dbo:Settlement . }
  OPTIONAL { ?deathPlaceVentiris a dbo:Settlement . }

  # Find entities related to wars involving Konstantinos Ventiris
  OPTIONAL {
    ?ventiris dbp:associatedWithWar ?war .
    ?war a dbo:MilitaryConflict .
  }

  # Return the entity if it is a settlement or related to a war
  FILTER (?deathPlaceVarthalitis = ?entity || ?deathPlaceVentiris = ?entity || ?war = ?entity)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,41,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Actor in ""All or Nothing: Manchester City""
  ?actor dbo:starringIn dbr:All_or_Nothing:_Manchester_City .
  
  # Soccer player and athlete
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

  # Team of Pablo Aimar (Manchester City FC)
  ?actor dbo:team dbr:Manchester_City_FC .

  # Person born on 1955-02-22
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date ;
           a dbo:Athlete .
  
  # Ensure the actor and athlete are the same person
  FILTER (?actor = ?athlete)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
531,43,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeHolder WHERE {
  ?officeHolder a dbo:OfficeHolder .
  ?officeHolder dbo:officeLocation dbr:Madrid .
  ?officeHolder dbo:positionTitle ?title .
  ?officeHolder dbo:politicalParty ?party .

  ?conflict a dbo:MilitaryConflict ;
           dbo:participant ?officeHolder, dbr:Manuel_Pinto_da_Costa, dbr:Miguel_Maura .

  FILTER(?title != """" && ?party != """")
}
ORDER BY ?officeHolder
LIMIT 10
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
78,16,train,Give me the associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonBandMember WHERE {
  # Find Stuart Tosh's associated musical artist
  ?stuartToshArtist a dbo:MusicalArtist ;
                   dbo:musicalArtist ?stuartTosh .
  ?stuartTosh foaf:name ""Stuart Tosh"" .

  # Find David Paton's associated musical artist
  ?davidPatonArtist a dbo:MusicalArtist ;
                    dbo:musicalArtist ?davidPaton .
  ?davidPaton foaf:name ""David Paton"" .

  # Find band members of Stuart Tosh's artist
  ?stuartToshArtist dbo:bandMember ?commonBandMember .

  # Find band members of David Paton's artist
  ?davidPatonArtist dbo:bandMember ?commonBandMember .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
23,6,train,Give me the entity in Colombia and party of Roy Barreras.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Roy Barreras"" .
  ?person dbo:nationality dbr:Colombia .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
263,17,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  ?patrick a dbo:Person ;
           foaf:name ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  
  # Find Hon. Mary Frances Bowes-Lyon
  ?mary a dbo:Person ;
        foaf:name ""Hon. Mary Frances Bowes-Lyon""@en .

  # Identify the parent relationship for both individuals
  ?patrick dbo:parent ?parent .
  ?mary dbo:parent ?parent .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,44,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Nicholas Michael Curran"" .
  ?person foaf:name ?name .

  # Association with The Fabulous Thunderbirds
  ?band dbr:The_Fabulous_Thunderbirds ;
        dbo:member ?person .

  # Connection to Eric Clapton
  ?claptonBand dbo:member ?person ;
               dbp:member ?ericClapton .
  ?ericClapton foaf:name ""Eric Clapton"" .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,1,train,"Give me the parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:childOf ?parent .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,16,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01 and player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Athlete .
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .
  ?person a dbo:SoccerManager .
  ?person dbo:birthday ""1981-12-01""^^xsd:date .

  ?managerRole dbo:managedTeam dbr:Hong_Kong_C_Team .
  ?managerRole dbo:manager ?person .
}
```",4,10,5,2,2,3,2,20,0,0,2,0,0.0,0
119,49,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  ?election dbo:winner ?party ;
            dbo:electionDate ?date ;
            dbo:region dbr:Galicia .

  FILTER(YEAR(?date) = 2009)

  ?administration dbo:headOfGovernment ?leader ;
                  dbo:politicalParty ?party ;
                  dbo:startDate ?start ;
                  dbo:endDate ?end .

  FILTER((?start <= ?date && (?end >= ?date || NOT EXISTS { ?administration dbo:endDate ?end })))
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
398,5,train,Who is the writer of The First Glove?,SELECT ?result WHERE { <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book dbp:title ""The First Glove""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,24,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battleMilitaryForce ?warMilitaryForce WHERE {
  # Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryConflicts ?battle .
  ?battle dbo:participatingMilitaryUnit ?battleMilitaryForce .

  # War associated with William Bayne
  dbr:William_Bayne_(Royal_Navy_officer) dbo:associatedWithWar ?war .
  ?war dbo:militaryConflicts ?warEvent .
  ?war dbo:participatingMilitaryUnit ?warMilitaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
103,13,train,Give me the professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  # Identify Shatrughan Sinha and his profession
  dbr:Shatrughan_Sinha a dbo:Actor .
  
  # Find other individuals with the same profession
  ?person a dbo:Actor .
  ?person foaf:name ?name .

  FILTER(?person != dbr:Shatrughan_Sinha) # Exclude Shatrughan Sinha himself

} ORDER BY ?name LIMIT 10
```",2,2,3,2,1,3,3,71,0,0,58032,0,0.0,0
706,11,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Query for an awardee of the Sangeet Natak Akademi Fellowship
  { 
    ?person dbo:honoraryTitle dbr:Sangeet_Natak_Akademi_Fellowship .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Query for Smita Patil
  {
    ?person a dbo:Actor ;
            foaf:name ""Smita Patil""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
687,27,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team WHERE {
  # Get Marcelo Sarmiento's birthdate
  VALUES ?marceloSarmientoBirthday { 
    (dbr:Marcelo_Sarmiento dbo:birthday ""1975-10-23""^^xsd:date) 
  }
  
  # Find individuals who are both soccer players and managers
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbo:birthday ?birthday .

  # Match their birthdate with Marcelo Sarmiento's
  FILTER (?birthday = ?marceloSarmientoBirthday)

  # Retrieve the team(s) associated with these individuals
  ?teamMembership dbo:player ?person .
  ?teamMembership dbo:team ?team .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
375,5,train,"Give me the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?name WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:London .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,3,2,20,0,10,657,0.0,0.0,0
782,24,train,Give me the associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  dbr:Nick_Curran dbo:associatedMusicalArtist ?person .
  ?person foaf:name ?associatedArtist .
}

SELECT ?bandMember ?band WHERE {
  ?person dbo:memberOfBand ?band .
  ?band dbo:leadArtist dbr:Eric_Clapton .
  ?person foaf:name ?bandMember .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
23,24,train,Give me the party of the father of Sofía Petro and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherParty ?entityInCountry WHERE {
  # Part 1: Sofía Petro's Father's Party
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro""@en .
  
  OPTIONAL { 
    ?sofia dbp:father ?father .
    ?father dbo:partyAffiliation ?fatherParty .
  }
  
  # Part 2: Entity in Daniel Elahi Galán's Country
  ?daniel a dbo:Person ;
          foaf:name ""Daniel Elahi Galán""@en .
  
  OPTIONAL {
    ?daniel dbo:nationality ?country .
    ?entityInCountry a dbo:Place ;
                     dbo:location ?country .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
87,22,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find movies featuring Iliza Shlesinger
  ?movie dbo:starring dbr:Iliza_Shlesinger .
  
  # Ensure the movie is a film and work
  ?movie a dbo:Film ;
         a dbo:Work .

  # Identify Janusz Kamiński's spouse
  ?janusz dbp:spouse ?spouse .

  # Check if the spouse is involved in the same movie
  OPTIONAL { ?movie dbo:starring ?spouse . }

  # Find actors of the movie
  ?movie dbo:starring ?actor .
}
```",4,6,5,2,2,2,3,28,0,3,1,0.0,0.0,0
203,38,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?militaryForce WHERE {
  # Find wars associated with William Bayne (Royal Navy officer)
  ?bayneEvent a dbo:Event ;
              dbo:agent dbr:William_Bayne_(Royal_Navy_officer) .
  
  OPTIONAL { 
    ?bayneEvent dbo:partOf ?war .
    ?war a dbo:MilitaryConflict ;
         dbo:militaryForce ?militaryForce1 .
  }
  
  # Find events associated with Robert Calder
  ?calderEvent a dbo:Event ;
               dbo:agent dbr:Robert_Calder .
  
  OPTIONAL { 
    ?calderEvent dbo:partOf ?war2 .
    ?war2 a dbo:MilitaryConflict ;
          dbo:militaryForce ?militaryForce2 .
  }
  
  # Return the military forces involved
  {
    SELECT DISTINCT ?militaryForce WHERE {
      VALUES ?militaryForce { ?militaryForce1 ?militaryForce2 }
    }
  }
}
```",4,8,5,2,2,3,3,71,0,0,5,0,0.0,0
412,7,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?person { 
    dbr:Konstantinos_Ventiris 
    dbr:Napoleon_Zervas 
  }
  
  ?person dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war .
}
```",2,2,3,1,2,2,3,28,0,0,9,0,0.0,0
871,35,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:honoursReceived dbr:Commander_of_the_Royal_Victorian_Order .
  
  ?child dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby ;
         a dbo:Politician .

  ?person dbo:child ?child .

  OPTIONAL { ?person dbo:parent ?parent . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,47,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:genre dbr:Television_series .

  ?castMember dbo:characterIn ?movie .
  ?castMember dbo:actor ?actor .

  ?richardGrant dbo:characterIn ?movie .
  ?richardGrant dbo:actor dbr:Richard_E._Grant .

  OPTIONAL { 
    ?actor dbo:profession dbr:Politician .
  }

  FILTER EXISTS {
    ?politician dbo:profession dbr:Politician .
    ?politician dbp:name ""Ab Kya Hoga""@en .
  }
}
```",5,7,6,3,2,3,3,71,0,0,28,0,0.0,0
472,24,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?administration WHERE {
  # Query for Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  { 
    ?person a dbo:Person .
    ?person foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
    OPTIONAL { ?person dbo:positionHeld ?role . }
    OPTIONAL { ?role dbp:administration ?administration . }
    BIND(""Prince Christian"" AS ?personName)
  }

  UNION

  # Query for the mayor of Duchy of Schleswig
  {
    ?mayor a dbo:Mayor .
    ?mayor dbo:administrativeArea dbr:Duchy_of_Schleswig .
    OPTIONAL { ?mayor dbo:positionHeld ?role . }
    OPTIONAL { ?role dbp:administration ?administration . }
    BIND(""Mayor of Duchy of Schleswig"" AS ?personName)
  }

}
ORDER BY ?personName
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
347,37,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?charlesJoseph a dbo:Person ;
                 dbo:parent dbr:Archduke_Leopold_II_of_Austria .
  ?leopoldII a dbo:Person ;
             dbo:child ?charlesJoseph ;
             dbo:parent ?francisI .
  ?francisI a dbo:Person ;
            dbp:name ""Francis I"" .
  ?ferdinandII a dbo:Person ;
               dbp:name ""Ferdinand II, Holy Roman Emperor"" ;
               dbo:child dbr:Maria_Theresa .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
68,0,train,Give me the father of Isabella of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Isabella_of_Austria dbo:parent ?person .
  ?person a dbo:Person .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""emperor"") || CONTAINS(LCASE(?name), ""king"")) # Assuming the father is likely an emperor or king
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
258,16,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira and establishment of the founding date of Federal University of Paraíba.","SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?foundingDate WHERE {
  # Find Eleonora Menicucci de Oliveira's alma mater
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en .
  OPTIONAL { 
    ?person dbp:almaMater ?university .
    ?university rdfs:label ?almaMater .
    FILTER(LANG(?almaMater) = 'en')
  }

  # Find the founding date of Federal University of Paraíba
  dbr:Federal_University_of_Para%C3%ADba dbo:foundingDate ?foundingDate ;
                                         rdfs:label ?universityLabel .
  FILTER(LANG(?universityLabel) = 'en')
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
249,4,train,Give me the native of Jamshedpur and native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  
  # Check if the person is native to Jamshedpur
  ?person dbo:birthPlace dbr:Jamshedpur .

  # Check if the person is also considered native to India
  ?person dbo:nationality dbr:India .
}
ORDER BY ?name
LIMIT 10
```",2,2,3,1,2,2,2,9,5,9,16,0.35714285714285715,0.23809523809523808,0.2857142857142857
399,8,train,Give me the band member of Emilia (Bulgarian singer) and professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Emilia, Bulgarian singer
  dbr:Emilia_(Bulgarian_singer) dbo:member ?bandMember .
  
  # Ensure the band member is a musical artist
  ?bandMember a dbo:MusicalArtist .

  # Check if they are involved in a profession similar to Jamie T (singer-songwriter)
  OPTIONAL { ?bandMember dbp:profession dbr:Singer-songwriter . }
}
```",3,3,4,2,2,2,2,9,0,0,4,0,0.0,0
198,12,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?entity WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Quincy Adams Gillmore"" .
  
  OPTIONAL { 
    ?person dbo:militaryForce ?force .
  }
  
  OPTIONAL {
    ?event dbo:location dbr:Charleston,_South_Carolina .
    ?event dbo:agent ?person .
    ?event dbp:entity ?entity .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
859,8,train,Give me the associated musical artist of the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find artists associated with James Plotkin
  ?plotkin a dbo:MusicalArtist ;
           foaf:name ""James Plotkin"" .
  
  ?collab1 dbo:associatedBandOrMusicalArtist ?plotkin ;
           dbo:associatedBandOrMusicalArtist ?artist1 .

  # Find artists associated with those artists (second level)
  ?collab2 dbo:associatedBandOrMusicalArtist ?artist1 ;
           dbo:associatedBandOrMusicalArtist ?associatedArtist .
  
  FILTER(?associatedArtist != ?plotkin) # Exclude James Plotkin himself
}
ORDER BY ?associatedArtist
LIMIT 10
```",2,2,3,2,1,3,2,20,0,0,13,0,0.0,0
687,35,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team WHERE {
  # Soccer player and manager born on November 3, 1979
  ?person1 a dbo:SoccerPlayer ;
           dbo:birthDate ""1979-11-03""^^xsd:date ;
           dbo:managerTeam ?team .

  # Athlete born on February 22, 1955
  ?person2 a dbo:Athlete ;
           dbo:birthDate ""1955-02-22""^^xsd:date ;
           dbo:playedFor ?team .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
687,6,train,"Give me the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:Athlete .
  ?person dbo:spouseOrPartner ?movie .
  ?movie rdfs:label ""All or Nothing: Manchester City""@en .
  FILTER (lang(?movie) = 'en')
  ?person foaf:name ?actor .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
871,15,train,Who is the awardee of the award of Rodney Lees?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Rodney Lees"" .
  ?award dbo:recipient ?person ;
         dbo:winner ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
557,6,train,"Give me the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Cora Sue Collins"" .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  ?person dbo:work ?work .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
353,0,train,Give me the child of Roger II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Roger_II_of_Sicily dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
  UNION
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
468,12,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to Peter IV.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childLabel WHERE {
  # Identify Peter IV of Aragon
  dbr:Peter_IV_of_Aragon dbo:spouse ?mother .
  
  # Find his children who are royalty
  ?parent a dbo:Person ;
          dbo:spouse ?mother ;
          dbp:children ?child .

  FILTER(?parent = dbr:Peter_IV_of_Aragon)

  OPTIONAL { ?child dbo:positionTitle ?title . }
  FILTER( EXISTS { ?child dbo:positionTitle ?title } )

  # Get labels for the children
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
ORDER BY ?childLabel
LIMIT 10
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
58,6,train,Give me the spouse of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer""@en .
  
  ?linda dbo:spouse ?spouse .

  ?movie dbo:title ""12 Strong""@en ;
         dbo:producer ?spouse .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,8,train,"Give me the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Béla_IV_of_Hungary dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  OPTIONAL { ?child dbo:royaltyTitle ?title . }
}
```",1,2,2,1,1,3,3,71,2,5,1,0.2857142857142857,0.6666666666666666,0.4
609,30,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?name { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,56,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalName WHERE {
  ?person a dbo:Actor .
  
  # Check if the person acted in ""ATL""
  ?atlFilm dbo:starring ?person .
  FILTER (str(?atlFilm) = str(dbr:ATL_(film)))

  # Check if the person is part of ""The Golden Master"" series
  ?goldenMasterSeries dbo:starring ?person .
  FILTER (str(?goldenMasterSeries) = str(dbr:The_Golden_Master_series))

  # Retrieve professional name
  OPTIONAL { ?person dbp:professionName ?professionalName . }
}
ORDER BY ?professionalName
LIMIT 10
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
288,4,train,Give me the theme of Dikhawa and native of Lahore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?theme ?nativeName WHERE {
  # Find the theme of Dikhawa
  dbr:Dikhawa dbo:theme ?theme .

  # Find a person native to Lahore who is related to Dikhawa
  ?person dbo:birthPlace dbr:Lahore .
  OPTIONAL { ?person foaf:name ?nativeName . }
  
  # Assuming there's some relation between the person and Dikhawa, e.g., creator or performer
  ?relation ?subject ?object .
  FILTER (?subject = dbr:Dikhawa && ?object = ?person)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
225,15,train,Give me the entity in the region of the time zone in Kiyosu and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find Kiyosu and its time zone
  ?kiyosu a dbo:PopulatedPlace ;
          foaf:name ""Kiyosu"" ;
          dbo:timeZone ?timezone .

  # Find the region of this time zone
  ?region dbo:timeZone ?timezone .
  
  # Find Chieko Asakawa's birthplace
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .

  # Match the entity with both conditions
  ?entity a dbo:AdministrativeRegion ;
          dbo:contains ?kiyosu ;
          dbo:contains ?birthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
203,22,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?event a dbo:Event .
  ?event dbo:place dbr:French_campaign_in_Egypt_and_Syria .
  ?event dbo:agent ?person .
  ?person foaf:name ""Robert Calder"" .
  ?person dbo:role dbp:Commander .
  OPTIONAL { ?event dbo:militaryForce ?militaryForce . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
412,15,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?konstantinosWar ?leaderWar WHERE {
  # Konstantinos Ventiris and his wars
  dbr:Konstantinos_Ventiris dbo:militaryService [
    a dbo:MilitaryConflict ;
    rdfs:label ?konstantinosWar .
  ] .

  # Leader of the National Party of Greece and their wars
  OPTIONAL {
    ?leader dbp:party dbr:National_Party_of_Greece ;
            dbo:militaryService [
      a dbo:MilitaryConflict ;
      rdfs:label ?leaderWar .
    ] .
  }
}
```",3,3,4,2,2,2,3,28,0,0,9,0,0.0,0
78,7,train,Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?person dbo:musicGroup dbr:The_Alan_Parsons_Project .
  
  OPTIONAL { 
    ?stuartTosh dbp:associatedBandMember ?person .
    FILTER(?stuartTosh = dbr:Stuart_Tosh)
  }
  
  ?person foaf:name ?bandMember .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
347,18,train,"Give me the commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?commander a dbo:Person .
  
  # Ferdinand II, Holy Roman Emperor as parent
  ?parent a dbo:Person ;
          foaf:name ""Ferdinand II, Holy Roman Emperor""@en ;
          dbo:child ?commander .

  # Eleonore of Austria, Queen of Poland as child
  ?commander dbo:spouse dbr:Eleonore_of_Austria_(1618–1675) .
  
  # Commander in the Thirty Years' War
  ?commander dbo:occupation ""Commander""@en ;
            dbo:participatedIn dbr:Thirty_Years'_War .

}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
23,19,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of Gustavo Petro and entity in Colombia.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party WHERE {
  VALUES ?name { 
    dbr:Roy_Leonardo_Barreras_Montealegre 
    dbr:Gustavo_Petro
  }
  
  ?person dbo:birthName ?name .
  ?person dbo:nationality dbr:Colombia .
  OPTIONAL { ?person dbp:party ?party . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
203,30,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Battle of Fort Royal and its commander in the French campaign in Egypt and Syria
SELECT ?militaryForce ?commander WHERE {
  ?battle a dbo:MilitaryConflict ;
          dbo:participatingMilitaryUnit ?militaryForce ;
          dbo:commander ?commander .
  
  FILTER(?battle IN (dbr:Battle_of_Fort_Royal, dbr:French_campaign_in_Egypt_and_Syria))
}
```

```sparql
# Query for the military force associated with an event involving Robert Calder
SELECT ?militaryForce WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit ?militaryForce .
  
  ?event dbo:commander dbr:Robert_Calder .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
905,27,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Find Stephen V of Hungary's predecessor
  ?predecessor a dbo:Monarch ;
               dbo:successor dbr:Stephen_V_of_Hungary .

  # Find the children (children) of the predecessor
  ?child dbo:parent ?predecessor ;
         a dbo:Person .

  # Find the grandchildren (children of the child)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Filter for those who are royalty
  ?grandchild a dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
311,14,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Identify the album ""Sappy""
  dbr:Sappy a dbo:Album ;
            dbo:work dbr:Sappy .

  # Find the writer(s) of the album
  ?album dbo:composer ?writer .
  
  # Check if these writers are members of any band
  ?bandMember dbo:member ?band .
  ?band dbo:album ?album .
}
```",3,6,4,3,1,3,2,20,0,0,123,0,0.0,0
37,7,train,"Give me the birthplace of Scott LaFaro and birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Scott_LaFaro a dbo:MusicalArtist .
  dbr:Scott_LaFaro dbo:birthPlace ?birthPlace .
}

SELECT ?birthPlace WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:album dbr:The_Miseducation_of_Lauryn_Hill .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
731,17,train,"Give me the force of William Tennant (Royal Navy officer) and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?conflict WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""William Tennant"" .
  
  OPTIONAL { 
    ?person dbo:force dbr:Royal_Navy . 
  }
  
  ?event dbo:commander ?person ;
         a dbo:SocietalEvent, dbo:MilitaryConflict .

  FILTER EXISTS {
    ?event dbp:relatedTo dbr:Sinking_of_Prince_of_Wales_and_Repulse .
  }

  BIND(?event AS ?war)
  OPTIONAL { 
    ?conflict dbo:partOf ?war ;
              a dbo:MilitaryConflict .
  }
}
ORDER BY ?war
LIMIT 10
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
609,2,train,Give me the birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Cece_Bell a dbo:Person .
  OPTIONAL { dbr:Cece_Bell dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
595,48,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Hillary Clinton's book
  dbr:Hillary_Clinton dbo:author dbr:Living_History .
  
  # Step 2: Find an author who is a politician and office holder
  ?person dbo:author dbr:Living_History ;
          a dbo:Politician, dbo:OfficeHolder .

  # Step 3: Check if this person has been a commander in a war involving the US Navy
  ?war dbo:commander ?person ;
       dbo:participatingOrganisation dbr:United_States_Navy .
  
  # Get the spouse of this person
  ?person dbp:spouse ?spouse .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
361,6,train,Give me the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?otherProfession WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ?actorName .
  
  # Find another profession
  ?person dbo:occupation ?otherOccupation .
  FILTER NOT EXISTS { 
    ?person dbo:occupation dbr:Actor .
  }
  
  # Get the label for the other occupation
  ?otherOccupation rdfs:label ?otherProfession .
  FILTER (LANG(?otherProfession) = 'en')
}
ORDER BY ?actorName
LIMIT 10
```",2,2,3,1,2,2,3,28,0,12,4210,0.0,0.0,0
628,58,train,"Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Uncle Murda's band members
  ?uncleMurda a dbo:MusicalArtist ;
              foaf:name ""Uncle Murda"" .
  
  ?member dbo:memberOf ?uncleMurda ;
          foaf:name ?bandMember .

  # Bobby Shmurda's birth name
  ?bobbyShmurda a dbo:MusicalArtist ;
                foaf:name ""Bobby Shmurda"" .
  ?bobbyShmurda dbp:birthName ?birthName .

  FILTER(?bandMember = ?birthName)

  # Award related to New York
  ?award a dbo:Award ;
         dbo:recipient ?awardeeBand ;
         dbo:location dbr:New_York_(state) .
  
  ?awardeeBand a dbo:MusicalArtist ;
               foaf:name ?bandMember .

  FILTER(?bandMember = ?birthName)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
198,23,train,"Give me the war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?award a dbo:Award .
  ?award dbo:awardingBody dbr:United_States_Congress .
  ?recipient dbo:receivedAward ?award .
  ?recipient dbo:occupation ?occupation .
  OPTIONAL { ?recipient dbp:honoredFor ?honoredFor . }
  ?war dbo:relatedEvent ?event .
  ?event dbo:location ?location .
  FILTER(?location = dbr:United_States)
  ?war dbo:name ?warName .
}
ORDER BY ?war
LIMIT 10
```",3,4,4,3,1,3,3,71,0,0,611,0,0.0,0
203,42,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find commanders of the 30th (Cambridgeshire) Regiment of Foot in military conflicts
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:participatingMilitaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .

  OPTIONAL { 
    ?conflict dbo:commander ?commander . 
  }

  # Find commanders involved in the Battle of Fort Royal
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Fort Royal""@en .
  
  OPTIONAL {
    ?battle dbo:commander ?commander .
  }
  
  # Find events related to Robert Calder and their commanders
  ?event a dbo:Event ;
         dbo:agent dbr:Robert_Calder .

  OPTIONAL {
    ?event dbo:commander ?commander .
  }

}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
19,3,train,Give me the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?currentName ?description WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Caroline Louise Bevan Symonds"" .
  OPTIONAL { ?person foaf:name ?currentName . }
  OPTIONAL { ?person dbo:description ?description . FILTER (lang(?description) = 'en') }
}
ORDER BY ?currentName
LIMIT 10
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
595,52,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?work WHERE {
  # Find the commander in the Third Taiwan Strait Crisis
  ?event a dbo:MilitaryConflict ;
         dbo:participatingCommanders ?commander .

  FILTER regex(?event, ""Third Taiwan Strait Crisis"", ""i"")

  # Find works authored by Bill Clinton and Hillary Clinton's spouse
  ?work dbo:author dbr:Bill_Clinton ;
        dbo:author dbr:Hillary_Clinton .

  # Ensure the work is a book and written work
  FILTER (?work rdf:type dbo:Book && ?work rdf:type dbo:WrittenWork)

  # Find Hillary Clinton's spouse who is a politician and office holder
  ?spouse dbp:spouse dbr:Bill_Clinton ;
          rdf:type dbo:Politician, dbo:OfficeHolder .

  # Ensure the work has an author who is Hillary Clinton's spouse
  ?work dbo:author ?spouse .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
737,7,train,Give me the parent of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:childOf ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
293,8,train,Give me the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Ann Sothern"" .
  ?person dbp:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
557,43,train,"Give me the professional in  and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?role WHERE {
  VALUES (?person) { dbr:Fredric_March }
  
  ?film dbo:starring ?person .
  ?film dbo:title ""A Star Is Born (1937 film)""@en .

  OPTIONAL {
    ?film dbp:producer ?person .
  }

  ?work dbo:starring ?person ;
        a dbo:Film .

  ?role dbo:actor ?person ;
        dbo:film ?work .

  FILTER(?work != ?film)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
39,26,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:wikiPageRedirects ?comicsCharacter .
  ?comicsCharacter a dbo:ComicsCharacter .
  OPTIONAL { ?comicsCharacter dbp:profession ?professional . }
}
```",3,5,4,3,1,3,3,71,0,0,39640,0,0.0,0
609,31,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?individual { 
    dbr:Vince_Gilligan 
    dbr:Glenn_Youngkin
  }
  
  ?person dbo:award ?award .
  FILTER(?person IN (?individual))
  
  OPTIONAL { ?person dbp:birthPlace ?birthPlace . }
}
```",4,4,5,3,2,3,3,71,0,2,1,0.0,0.0,0
263,14,train,Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  # Resource for Mary Frances Bowes-Lyon
  dbr:Mary_Frances_Bowes-Lyon dbo:parent ?parent .

  # Check if the parent is a native of Middlesex
  ?parent dbo:birthPlace dbr:Middlesex .

  # Get the name of the parent
  ?parent foaf:name ?parentName .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,51,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  # William Bayne and his award
  dbr:William_Bayne_(Royal_Navy_officer) dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  # The award is related to a societal event
  dbr:Knight_Commander_of_the_Order_of_the_Bath dbo:type ?societalEvent .
  ?societalEvent rdf:type dbo:SocietalEvent .

  # This societal event is also considered a military force in some context
  ?societalEvent dbo:militaryForce ?militaryForce .

  # William Bayne's involvement in a war
  dbr:William_Bayne_(Royal_Navy_officer) dbo:participatedIn ?war .
  ?war rdf:type dbo:MilitaryConflict ;
       dbo:eventType dbo:MilitaryConflict .
}
```",5,9,6,3,2,3,3,71,0,0,24,0,0.0,0
270,4,train,Give me the person decedent at Melbourne and predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Ada Watson
  ?ada a dbo:Person ;
       foaf:name ""Ada Watson""@en .

  # Find predecessors of Ada Watson (assuming some relationship, e.g., mentor)
  ?predecessor dbo:mentorOf ?ada .
  
  # Filter for those who died in Melbourne
  ?decedent dbo:deathPlace dbr:Melbourne ;
           dbo:mentorOf ?ada . # Assuming the predecessor is also a decedent

}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
633,10,train,"Give me the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Identify Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine dbo:spouse ?spouse .
  
  # Find children of Francis I, Duke of Lorraine
  ?child dbo:parent dbr:François_Ier,_Duke_of_Lorraine ;
         a dbo:Person .

  # Ensure the child is royalty
  ?child dbo:positionHeld ?royaltyPosition .
  
  # Identify the father of this royal child
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,49,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athleteTeam WHERE {
  # Find the athlete born on 1955-02-22
  ?athlete a dbo:Athlete .
  ?athlete dbp:birthday ""1955-02-22""^^xsd:date .

  # Find Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbp:birthday ?sarmientoBirthday .

  # Find the soccer player and manager with the same birthday as Marcelo Sarmiento
  ?soccerPerson a dbo:SoccerPlayer, dbo:SoccerManager .
  ?soccerPerson dbp:birthday ?sarmientoBirthday .

  # Get the team of the athlete
  ?athleteTeam dbo:teamMember ?athlete .

  # Get the team of the soccer player and manager
  ?soccerTeam dbo:teamMember ?soccerPerson .

  # Ensure both individuals are on the same team
  FILTER (?athleteTeam = ?soccerTeam)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
347,10,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childName WHERE {
  # Identify Ferdinand II, Holy Roman Emperor
  ?ferdinand a dbo:Person ;
             foaf:name ""Ferdinand II"" ;
             dbp:surname ""Holy Roman Emperor"" .

  # Find his children
  ?ferdinand dbo:child ?child .
  
  # Check if the child was a commander in the Thirty Years' War
  ?child dbo:occupation dbr:Commander_in_the_Thirty_Years_War ;
         foaf:name ?childName .
}
ORDER BY ?childName
LIMIT 10
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,20,train,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Monarch .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Mary of Burgundy"" .
  
  ?person dbo:child ?catherine .
  ?catherine foaf:name ""Catherine of Austria, Queen of Portugal""@en .
  
  ?person dbo:child ?isabella .
  ?isabella foaf:name ""Isabella of Austria""@en .

  OPTIONAL { 
    ?person dbo:participatedInMilitaryOperation ?siege .
    ?siege dbp:name ""Siege of Padua"" .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
119,18,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela and tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  dbr:Alberto_Núñez_Feijóo 
    dbo:office ?office ;
    dbo:residence dbr:Santiago_de_Compostela, dbr:Spain .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
198,44,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Henry Clay Lewis's birthplace
  ?henry a dbo:Person ;
         foaf:name ""Henry Clay Lewis"" ;
         dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:United_States_of_America .

  # Gillmore Medal awardee
  ?gillmoreAward a dbo:Award ;
                 dbp:name ""Gillmore Medal"" ;
                 dbo:recipient ?awardee .

  # Amasa Tracy's war
  ?amasa a dbo:MilitaryPerson ;
         foaf:name ""Amasa Tracy"" ;
         dbo:servedIn ?war .

  # Combine information to find the entity
  FILTER(?birthPlace = ?entity)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
203,39,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?person dbo:militaryConflict dbr:Battle_of_Fort_Royal .

  ?event dbo:agent ?person ;
         a dbo:Event, dbo:SocietalEvent .

}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
628,52,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  VALUES (?bobbyShmurda) { dbr:Bobby_Shmurda }
  ?bobbyShmurda dbo:birthName ?bobbyBirthName .

  ?bandMember dbo:memberOfBand ?bobbyShmurda .
  
  ?person dbo:memberOfGroup dbr:GS9 .
  ?person a dbo:MusicalArtist .

  ?person dbo:birthPlace dbr:Florida .

  FILTER (?bandMember = ?person)

  OPTIONAL { ?person dbp:birthName ?birthName }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
80,29,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Find the album of ""What You Know"" by T.I.
  ?song a dbo:Songs .
  ?song dbp:title ""What You Know"" .
  ?song dbo:artist dbr:T.I. .

  # Get the album associated with this song
  ?album dbo:song ?song .
  
  # Find artists of that album
  ?album dbo:artist ?artist .

  OPTIONAL {
    # Check if the artist is also an actor in ""Shelby Oaks""
    ?actor a dbo:Actor ;
           dbp:name ?name ;
           dbo:actedIn dbr:Shelby_Oaks .
    
    FILTER (?artist = ?actor)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
531,28,train,Give me the office of Miguel Maura and office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  VALUES ?person { 
    dbr:Miguel_Maura 
    dbr:Mariano_Rajoy 
    (SELECT ?tenant WHERE {
      ?residence dbo:resident ?tenant .
      ?residence foaf:name ""Residence of Alberto Ruiz-Gallardón""@en .
    })
  }
  
  OPTIONAL { ?person dbo:office ?office . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,46,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Athlete born on Marty Pollio's birthday
SELECT ?athlete WHERE {
  ?martyPollio a dbo:Person ;
               foaf:name ""Marty Pollio"" .
  ?martyPollio dbp:birthday ?birthday .

  ?athlete a dbo:Athlete ;
           dbp:birthday ?birthday .
}

# Part 2: Actor who is a soccer player and an athlete in ""All or Nothing: Manchester City""
SELECT ?actor WHERE {
  ?show dbr:All_or_Nothing:_Manchester_City .
  ?show dbo:castMember ?actor .

  ?actor a dbo:Actor ;
         dbo:sport dbr:Soccer ;
         dbo:occupation dbo:Athlete .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
531,6,train,"Give me the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolderOf ?office .
  ?person dbo:spouseOrPartner ?partner .
  ?conflict dbo:participant ?person .
  ?conflict rdfs:label ""Central African Republic Civil War""@en .

  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,179,0,0.0,0
706,10,train,"Who is the actor of the movie, that is a movie and Indian, with Dipankar De?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:country dbr:India .
  ?movie dbo:starring ?person1, ?person2 .
  
  FILTER(?person1 = dbr:Dipankar_De || ?person2 = dbr:Dipankar_De)
  
  OPTIONAL { 
    ?actor a dbo:Actor ;
           dbo:starring ?movie .
  }
}
```",2,4,3,2,1,3,2,20,0,0,17,0,0.0,0
87,21,train,"Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Actor of ""Paradise"" (2013 film)
  ?film dbo:title ""Paradise""@en .
  ?film dbo:starring ?person .
  
  # Spouse of Janusz Kamiński
  ?janusz dbp:spouse ?sandra .
  ?sandra foaf:name ""Sandra Bullock"" .
  ?sandra dbo:spouse ?actor .

  # Actor who worked with Audrey Hepburn
  ?hepburnFilm dbo:title ?title .
  ?hepburnFilm dbo:starring ?person, ?actor .
  ?hepburnFilm dbo:starring dbr:Audrey_Hepburn .

  FILTER(?film = dbr:Paradise_(2013_film))
  FILTER(?janusz = dbr:Janusz_Kamiński)
  FILTER(?hepburnFilm != dbr:Paradise_(2013_film)) # Ensure it's a different film
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
87,15,train,"Give me the actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Always_(film) dbo:starring ?actor .
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?movie ?actor WHERE {
  ?movie dbo:starring dbr:Iliza_Shlesinger .
  ?movie dbo:starring ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
353,41,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Elvira of Castile's child
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile"" ;
          dbo:spouse ?husband .
  
  ?child dbo:parent ?elvira .

  # Father of William I of Sicily's child who is royalty
  ?williamI a dbo:Person ;
            foaf:name ""William I of Sicily"" ;
            dbo:child ?royaltyChild .
  
  ?father dbo:spouse ?mother ;
          dbo:parent ?royaltyChild .

  # Parent of Roger III, Duke of Apulia
  ?rogerIII a dbo:Person ;
            foaf:name ""Roger III, Duke of Apulia"" ;
            dbo:parent ?parentOfRogerIII .
  
  FILTER (?child = ?father && ?father = ?parentOfRogerIII)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,23,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find landmarks with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation = 20.1168)

  # Get the location of the landmark
  ?landmark dbo:location ?location .

  # Determine the country or city from the location
  ?location dbo:country ?country .

  # Find the ruling party in that country
  ?rulingParty a dbo:PoliticalParty ;
               dbp:country ?country ;
               dbo:headOfGovernment ?partyLeader .

  # Get a member of this ruling party
  ?partyMember dbo:memberOf ?rulingParty .
}
```",3,3,4,3,1,3,3,71,0,0,21514,0,0.0,0
668,16,train,"Give me the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?profession WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:work ?work .
  ?work rdfs:label ""The Live Anthology""@en .
  
  OPTIONAL { 
    ?person dbo:occupation ?occupation .
    FILTER(?occupation IN (dbo:Writer, dbo:Singer))
  }
  
  BIND(CONCAT(""Professional: "", STR(?occupation)) AS ?profession)
}
ORDER BY ?person
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,23,0,0.0,0
782,7,train,Give me the persona of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?persona WHERE {
  dbr:Nick_Curran a dbo:MusicalArtist .
  OPTIONAL { dbr:Nick_Curran dbo:genre ?genre . }
  OPTIONAL { dbr:Nick_Curran dbo:style ?style . }
  OPTIONAL { dbr:Nick_Curran dbp:influences ?influences . }
  OPTIONAL { dbr:Nick_Curran dbp:instrument ?instrument . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
293,3,train,Give me the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbp:elevation ?elevation .
  FILTER (?elevation = ""20.116800000000001347""^^xsd:float)
}
```",1,1,2,1,1,3,3,71,0,0,192,0,0.0,0
557,1,train,Give me the producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) a dbo:Film .
  OPTIONAL { 
    dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer . 
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,36,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?entity WHERE {
  # Find Amasa Tracy
  ?tracy a dbo:Person ;
         foaf:name ""Amasa Tracy"" ;
         dbp:dateOfDeath ""1850-08-05""^^xsd:date .

  # Get his birthplace, which should be a settlement and American
  ?tracy dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Find wars involving Amasa Tracy
  ?war dbo:participant ?tracy .
  
  # Get entities related to the birthplace
  ?entity dbo:location ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
943,43,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  # Find Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Find Dawit I and his child Baeda Maryam I
  dbr:Dawit_I dbo:child dbr:Baeda_Maryam_I .
  
  # Return the reference to The Shadow
  ?alterEgo rdfs:label ""The Shadow""@en .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
492,22,train,Give me the death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?deathPlace WHERE {
  # Find actors in ""Color Me Dead""
  { 
    ?film a dbo:Film .
    ?film dbp:title ""Color Me Dead"" .
    ?film dbo:starring ?actor1 .
    ?actor1 foaf:name ?actorName .
    OPTIONAL { ?actor1 dbo:deathPlace ?deathPlace . }
  } UNION
  # Find actors in ""The Sky Ranger"" (1928)
  {
    ?film a dbo:Film .
    ?film dbp:title ""The Sky Ranger"" .
    ?film dbo:year ""1928""^^xsd:gYear .
    ?film dbo:starring ?actor2 .
    ?actor2 foaf:name ?actorName .
    OPTIONAL { ?actor2 dbo:deathPlace ?deathPlace . }
  }
}
ORDER BY ?actorName
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
80,55,train,Give me the professional in the alter ego of The Shadow and actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # The Shadow alter ego
  ?shadowCharacter dbo:alterEgoOf dbr:The_Shadow .
  ?shadowCharacter dbo:portrayedBy ?person .

  # Actor of a movie
  ?movie dbo:starring ?person .
  
  # Album of ""What You Know"" by T.I.
  OPTIONAL { 
    ?album dbp:title ""Urban Legend (T.I. album)""@en .
    ?album dbo:performer ?person .
  }
}
```",6,6,7,2,3,3,3,71,0,0,4,0,0.0,0
782,22,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Nicholas Michael Curran"" .
  ?person foaf:name ?name .
  ?band dbo:member ?person .
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
472,19,train,"Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?christianIXAdmin ?olafIAdmin ?deathPlace WHERE {
  # Administration of Christian IX of Denmark
  ?christianIX dbo:monarchOf dbr:Denmark .
  ?christianIX dbo:beginTime ?christianIXStart ;
              dbo:endTime ?christianIXEnd .

  # Administration of Olaf I of Denmark
  ?olafI dbo:monarchOf dbr:Denmark .
  ?olafI dbo:beginTime ?olafIStart ;
         dbo:endTime ?olafIEnd .

  # Death place of Christian Ditlev Ammentorp Hansen
  ?hansen a dbo:Person ;
          dbp:deathPlace ?deathPlace .
  FILTER (isLiteral(?deathPlace) && datatype(?deathPlace) = xsd:string)

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
668,12,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  OPTIONAL { ?person foaf:name ?name . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
270,0,train,Give me the predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?person foaf:name ""Ada Watson"" .
  OPTIONAL { 
    ?position a dbo:Position ;
              dbo:successor ?person ;
              dbo:predecessor ?predecessor .
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,15,train,"Give me the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Los_Angeles .
  ?work dbo:agent ?person ;
        a dbo:Film .
  ?work rdfs:label ?movie .
}
ORDER BY ?movie
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,6475,0,0.0,0
412,4,train,"Give me the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Antonios Varthalitis""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  FILTER (isLiteral(?deathPlace) && datatype(?deathPlace) = xsd:string)
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
311,16,train,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Michael Stipe is associated with R.E.M.
  dbr:Michael_Stipe dbo:memberOf dbr:R.E.M. .

  # Find band members of R.E.M.
  ?member dbo:memberOf dbr:R.E.M. .
  
  # Find artists associated with these band members
  ?associatedArtist dbo:collaboratedWith ?member .
  
  # Ensure the artist is also associated with R.E.M.
  ?artist dbo:collaboratedWith dbr:R.E.M. .

  # Filter to ensure the artist is distinct and relevant
  FILTER(?associatedArtist = ?artist)
}
LIMIT 10
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
737,53,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Archduke Charles Louis of Austria and his children
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?child1 .
  
  # Child of the child (grandchild) who is a royalty
  ?child1 dbo:child ?childOfChild .
  ?childOfChild a dbo:Royalty .

  # Archduchess Helena of Austria and her spouse
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouseHelena .
  
  # Child of the spouse of Archduchess Helena
  ?spouseHelena dbo:child ?childSpouse .

  # Predecessor relationship (assuming temporal or hierarchical)
  ?predecessor dbo:successor ?childSpouse .

  # Albrecht, Duke of Württemberg and his child
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?childAlbrecht .

  # The childOfChild must be the predecessor of the childSpouse
  FILTER (?childOfChild = ?predecessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,29,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?militaryForce WHERE {
  # French campaign in Egypt and Syria
  ?campaign a dbo:MilitaryConflict ;
            dbo:commander ?commander ;
            dbo:militaryConflictsInvolved ?conflict .

  FILTER(?campaign = dbr:French_campaign_in_Egypt_and_Syria)

  # Military conflict related to William Bayne
  ?bayneEvent a dbo:MilitaryConflict ;
              dbo:person ?baynePerson .
  
  ?baynePerson foaf:name ""William Bayne""^^xsd:string .

  # Battle of Cape Finisterre (1805)
  ?battle dbr:Battle_of_Cape_Finisterre_1805 ;
         dbo:militaryConflictsInvolved ?conflict .

  OPTIONAL { ?campaign dbo:militaryForce ?militaryForce . }
  OPTIONAL { ?bayneEvent dbo:militaryForce ?militaryForce . }
  OPTIONAL { ?battle dbo:militaryForce ?militaryForce . }

}
ORDER BY ?commander
LIMIT 10
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
159,44,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor ?writer WHERE {
  # Find Jean Baptist, Comte d'Arco and his commander in war
  ?person dbo:birthName ""Jean Baptist, Comte d'Arco""@en .
  OPTIONAL { ?person dbo:commandedBy ?commander . }
  
  # Identify Yurii Khmelnytsky's successor
  ?khmelnytsky dbo:successor ?successor .
  FILTER(?khmelnytsky = dbr:Yuri_Khmelnytsky)

  # Find the writer of ""Always the Love Songs""
  ?book dbo:title ""Always the Love Songs""@en ;
        dbo:author ?writer .

  # Ensure the person is related to a television show and societal event
  OPTIONAL { ?person dbo:wikiPageRedirects ?tvShow . }
  OPTIONAL { ?person dbo:wikiPageDisambiguates ?event . }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
80,44,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorShelbyOaks ?actorWhatYouKnowAlbum ?shadowAlterEgo WHERE {
  # Actor of Shelby Oaks
  ?work dbo:title ""Shelby Oaks""@en .
  ?work dbo:starring ?actorShelbyOaks .

  # Actor associated with the album of What You Know (T.I. song)
  ?album dbp:title ""Urban Legend""@en ;
         dbo:track ?song .
  ?song dbp:title ""What You Know""@en ;
        dbo:artist dbr:T.I._(rapper) .
  OPTIONAL { ?album dbo:starring ?actorWhatYouKnowAlbum . }

  # Professional in the alter ego of The Shadow
  ?character dbo:name ""The Shadow""@en .
  ?character dbo:alterEgo ?shadowAlterEgo .
  ?shadowAlterEgo a dbo:Person ;
                  dbo:profession ?profession .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
353,24,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Identify William I of Sicily and Elvira of Castile, Queen of Sicily
  ?williamI a dbo:Monarch ;
            dbo:spouse ?elvira ;
            dbo:child ?child .
  
  ?elvira a dbo:Queen ;
          rdfs:label ""Elvira of Castile"" ;
          dbo:spouse ?williamI .

  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Find the father of the child, which should be William I of Sicily
  ?child dbo:father ?father .
  
  FILTER (str(?williamI) = ""William_I_of_Sicily"" && str(?elvira) = ""Elvira_of_Castile"")
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
270,6,train,"Give me the person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Mark Tournier's birthplace
  dbr:Mark_Tournier dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  ?birthPlace a dbo:Settlement .

  # Find people who died at this location
  ?person dbo:deathPlace ?deathPlace .
  FILTER (?deathPlace = ?birthPlace) .
  
  # Return the decedent's name
  ?person foaf:name ?decedent .
}
```",2,3,3,2,1,2,2,9,0,848,809,0.0,0.0,0
353,7,train,"Who is the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  OPTIONAL { ?spouse a dbo:Monarch . }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
353,46,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William I of Sicily and his children
  dbr:William_I_of_Sicily dbo:child ?child .
  
  # Roger II of Sicily and his descendants
  dbr:Roger_II_of_Sicily dbo:child ?descendant .

  # Find common individuals who are both children of William I and descendants of Roger II
  FILTER (?child = ?descendant)

  # Get the father of this individual
  ?child dbo:father ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,14,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?war a dbo:War .
  ?war dbo:participatedIn ?event .
  ?event rdf:type dbo:SocietalEvent .
  ?event dbo:depiction dbr:TelevisionShow .

  ?person dbp:name ""Jean Baptist, Comte d'Arco""@en .
  ?person dbo:role ?role .
  FILTER(?role = dbo:Commander) .

  ?war dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,40,0,0.0,0
609,13,train,"Give me the birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Politician .
  ?person dbo:governmentRole ?role .
  ?role dbo:officeHolder ?holder .
  ?holder dbo:stateOrTerritory dbr:Virginia .
  OPTIONAL { ?person dbp:birthPlace ?birthPlace . }
}
ORDER BY ?birthPlace
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,16,train,"Give me the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga .

  # The person must be an actor in the film
  ?film dbo:starring ?person .
  
  # The person is also a soccer player and an athlete
  ?person a dbo:SoccerPlayer, dbo:Athlete .

  BIND(?person AS ?actor)
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
756,22,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Thomas Letsch"" .

  ?management dbo:agent ?person ;
              dbo:team dbr:VfL_Bochum ;
              dbo:position dbp:Manager .

  OPTIONAL { 
    ?management dbo:startYear ?startYear .
    ?management dbo:endYear ?endYear .
  }

  ?management dbo:manager ?manager .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
159,29,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find a person who wrote ""Always the Love Songs""
  ?person dbo:work dbr:Always_the_Love_Songs .
  
  # Find a person who was a commander in the Great Turkish War
  ?person dbo:commanderInWar dbr:Great_Turkish_War .

  # Find a person who succeeded Yurii Khmelnytsky
  ?successor dbp:succeededBy dbr:Yurii_Khmelnytsky .
  ?successor dbo:successorOf ?person .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
859,10,train,"Give me the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?associatedArtist WHERE {
  ?band a dbo:Band .
  ?band foaf:name ""Khlyst"" .
  
  ?band dbo:member ?member .
  ?member a dbo:MusicalArtist .

  OPTIONAL { 
    ?member dbp:associatedActs ?associatedArtist .
    ?associatedArtist a dbo:MusicalArtist .
  }
}
ORDER BY ?member
LIMIT 10
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
687,33,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonPlayer WHERE {
  # Juan Carlos Molina as a footballer
  ?molina a dbo:FootballPlayer ;
          foaf:name ""Juan Carlos Molina"" .

  # Actor who is also a soccer player and athlete in a film by Manuel Huerga
  ?actor a dbo:Actor ;
         dbo:profession dbr:Soccer_player ;
         dbo:profession dbr:Athlete ;
         dbo:film dbr:Film_by_Manuel_Huerga .

  # Find commonality or connection
  OPTIONAL { ?molina dbp:commonPlayerWith ?commonPlayer . }
  OPTIONAL { ?actor dbp:commonPlayerWith ?commonPlayer . }

  FILTER(?commonPlayer != NULL)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
103,26,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?person a dbo:Actor .
  ?person dbo:profession dbo:Politician .
  ?film dbo:starring ?person .
  ?film rdfs:label ""Ab Kya Hoga""@en .
  FILTER (LANG(?film) = 'en')
}
```",3,4,4,3,1,3,3,71,0,0,58032,0,0.0,0
756,23,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Identify the club and its season
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 dbo:sportLeague dbr:Bundesliga_2 .

  # Find the successor season (2007–08)
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:successor ?successorSeason .
  
  # Ensure the successor is a sports team season
  ?successorSeason a dbo:SportsTeamSeason ;
                   dbo:sportLeague dbr:Bundesliga_2 .

  # Find the manager of the club during this season
  ?successorSeason dbo:manager ?manager .
}
```",3,9,4,3,1,3,3,71,0,0,1,0,0.0,0
38,10,train,"Give me the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person a dbo:OfficeHolder .
  ?person dbo:office ?office .
  ?office dbo:heldBy ?commander .
  ?commander dbo:occupation dbo:MilitaryPerson .
  ?conflict dbr:Korean_War .
  ?commander dbo:participatedIn ?conflict .

  OPTIONAL { 
    ?work a dbo:CreativeWork ;
          dbo:creator ?commander .
  }
}
ORDER BY ?work
LIMIT 10
```",2,5,3,2,1,3,2,20,0,0,52,0,0.0,0
609,34,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?individual { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell
  }
  
  ?person dbo:award ?award .
  FILTER(?person IN (?individual))
  
  OPTIONAL { ?person dbp:birthPlace ?birthPlace . }
}
```",4,4,5,3,2,3,3,71,0,2,1,0.0,0.0,0
119,15,train,"Give me the entity in Poland and war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInPoland ?war WHERE {
  # Find Maria I of Portugal
  dbr:Maria_I_of_Portugal dbo:commander ?commander .
  
  # The commander is related to a television show and a military conflict
  ?commander dbo:type [ 
    a dbo:Class ;
    owl:sameAs ?tvShowType, ?militaryConflictType
  ] .

  # Find the entity in Poland associated with this commander
  ?commander dbo:placeOfBirth dbr:Poland .
  
  # Find the war related to this commander
  ?commander dbo:participatedInMilitaryConflicts ?war .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
386,15,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Elena_Žalinkevičaitė-Petrauskienė 
    dbr:Alexander_Lvovich_Davydov
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,3,2,0.0,0.0,0
628,8,train,"Give me the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?coro a dbo:MusicalGroup ;
        foaf:name ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  
  ?coro dbo:awardsReceived ?award .

  OPTIONAL { 
    ?award dbo:country dbr:United_States ; # American
           a dbo:Region ;
           a dbo:State ;
           a dbo:Settlement .
  }
}
```",1,5,2,1,1,3,3,71,0,0,3,0,0.0,0
78,6,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  { 
    dbr:Stuart_Tosh dbo:memberOf ?band .
    ?band dbo:member ?person .
    ?person foaf:name ?associatedArtist .
  }
  UNION
  {
    dbr:Billy_Lyall dbo:memberOf ?band .
    ?band dbo:member ?person .
    ?person foaf:name ?associatedArtist .
  }
}",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
89,46,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Minye Kyawswa's child
  ?child1 dbo:parent dbr:Minye_Kyawswa .
  
  # Child of Minye Kyawswa's child (i.e., grandchild)
  ?grandchild dbo:parent ?child1 .

  # Myat Hpone Pyo is one of these grandchildren
  ?myathponepyo dbp:name ""Myat Hpone Pyo""@en .
  FILTER(?myathponepyo = ?grandchild)

  # Myat Hpone Pyo's father
  ?father dbo:parent ?myathponepyo .

  # Check if the father is a royalty
  ?father a dbo:Royalty .

  # Find the spouse of this royal father
  ?spouse dbo:spouse ?father .
}
```",5,6,6,3,2,3,3,71,0,2,1,0.0,0.0,0
769,6,train,Give me the player in Ye Jia and player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?yeJiaPlayer ?laiSunCheungPlayer WHERE {
  OPTIONAL {
    ?yeJia a dbo:Person .
    ?yeJia foaf:name ""Ye Jia"" .
    ?yeJia dbo:memberOf ?team1 .
    ?team1 dbo:member ?yeJiaPlayer .
  }
  
  OPTIONAL {
    ?laiSunCheung a dbo:Person .
    ?laiSunCheung foaf:name ""Lai Sun Cheung"" .
    ?laiSunCheung dbo:memberOf ?team2 .
    ?team2 dbo:member ?laiSunCheungPlayer .
  }
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
293,22,train,Give me the party member of Republican Party (United States) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:birthName ""Anne Sothern""@en . }
  OPTIONAL { ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,27,train,"Give me the birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer .
  ?person dbp:nationality dbr:United_States .
  ?person foaf:name ""Cece Bell"" .
  ?person dbo:work dbr:El_Deafo .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
353,11,train,"Give me the child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Roger III, Duke of Apulia
  ?roger a dbo:Person ;
         foaf:name ""Roger III, Duke of Apulia""@en .
  
  # Find his parent(s)
  ?parent dbo:spouse ?roger ;
          dbo:child ?roger .

  # Determine the children of those parents (excluding Roger himself)
  ?parent dbo:child ?child .
  FILTER(?child != ?roger)
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
89,60,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .

  # Step 2: Find the spouse of Saw Min Phyu
  ?spouse dbo:spouseOf ?sawMinPhyu ;
          dbo:spouseOf ?sawMinPhyuInverse .

  # Step 3: Identify the child of this spouse who is a royalty
  ?royalChild dbo:childOf ?spouse ;
              a dbo:Royalty .

  # Step 4: Find the parent of this royal child
  ?parent dbo:parentOf ?royalChild .

  # Step 5: Identify the child of this parent
  ?finalChild dbo:childOf ?parent .

  # Step 6: Find the predecessor of this final child
  ?predecessor dbo:predecessorOf ?finalChild .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,6,train,Give me the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person dbp:name ""Philipp of Württemberg"" .
  ?relation dbo:parent ?person ;
            dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
859,7,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  dbr:Burnt_by_the_Sun (dbo:bandMember|dbo:groupMember) ?member .
  ?member a dbo:MusicalArtist .
  FILTER EXISTS { ?member dbo:type [a dbo:Band] }
  FILTER EXISTS { ?member dbo:type [a dbo:Group] }
  FILTER EXISTS { ?member dbo:type [a dbo:Organization] }
}
```",2,5,3,2,1,3,2,20,0,0,18,0,0.0,0
668,46,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbp:birthName ""Pacely"" .

  ?associatedPerson a dbo:MusicalArtist ;
                   dbo:profession dbr:Musician ;
                   dbo:associatedBand ?band .

  ?band dbo:member ?person .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
386,16,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?war WHERE {
  ?awardee a dbo:MilitaryPerson .
  ?awardee dbo:nationality dbr:Russian_Empire .
  ?awardee dbo:honoraryTitle dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:participatedInWar ?war .
}
ORDER BY ?awardee
LIMIT 10
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
353,47,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Identify ""the reference""
  ?reference a dbo:Monarch ;
             dbo:spouseOrPartner* ?williamI .
  
  # Step 2: Find the child of this reference who is royalty
  ?child dbo:parent ?reference ;
         a dbo:Monarch .

  # Step 3: Determine the parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRogerIII .

  # Step 4: Identify the father of the child found in step 2
  ?child dbo:father ?father .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,13,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Identify Charles I of Hungary
  ?charlesI a dbo:Monarch ;
            dbp:country dbr:Hungary ;
            foaf:name ""Charles I of Hungary""@en .
  
  # Find his father (paternal parent)
  ?charlesI dbo:parent ?father .

  # Ensure the father is also royalty
  ?father a dbo:Monarch .

  # Identify the father's parent (grandfather)
  ?father dbo:parent ?grandfather .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,46,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Query for the governor of Virginia
  {
    ?governor a dbo:Politician ;
              dbo:stateOrProvince dbr:Virginia ;
              dbo:positionTitle ""Governor"" .
    OPTIONAL { ?governor dbp:birthPlace ?birthPlace . }
    BIND(?governor AS ?person)
  }

  UNION

  # Query for an awardee associated with Vince Gilligan
  {
    ?awardee a dbo:Award ;
             dbo:recipient ?recipient .
    ?recipient dbo:award ?vinceGilliganAward .
    FILTER(CONTAINS(LCASE(?vinceGilliganAward), ""vince gilligan""))
    OPTIONAL { ?awardee dbp:birthPlace ?birthPlace . }
    BIND(?awardee AS ?person)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,11,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict .
  
  # Link the war to the 2nd Dragoon Regiment (France)
  ?regiment dbo:participatedIn ?war ;
            rdfs:label ""2nd Dragoon Regiment (France)""@en .

  # Identify the commander of the regiment
  ?commander dbo:commanded ?regiment .
  
  # Ensure the war is also a societal event, an event, and linked to a television show
  ?societalEvent dbo:relatedTo ?war ;
                a dbo:SocietalEvent .
  ?event dbo:relatedTo ?war ;
         a dbo:Event .
  ?tvShow dbo:basedOn ?war ;
          a dbo:TelevisionSeries .

}
```",2,5,3,2,1,3,3,71,0,0,42,0,0.0,0
756,10,train,Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vitesseManager ?bochumManager WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  OPTIONAL {
    ?vitesseTeam a dbo:SoccerClub .
    ?vitesseTeam dbp:season ""2020–21"" .
    ?vitesseTeam dbo:manager ?vitesseManager .
  }
  
  # Manager of VfL Bochum
  OPTIONAL {
    ?bochumTeam a dbo:SoccerClub .
    ?bochumTeam rdfs:label ""VfL Bochum""@en .
    ?bochumTeam dbo:manager ?bochumManager .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
89,40,train,Give me the predecessor of Myat Hpone Pyo and spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Myat Hpone Pyo's predecessor
  ?myatHponePyo a dbo:Person ;
                dbo:predecessor ?predecessor .
  
  # Saw Shwe Khet's spouse
  ?sawShweKhet a dbo:Person ;
               dbo:spouse ?individual .

  # Minye Kyawswa's grandchild
  ?minyeKyawswa a dbo:Person ;
                dbo:child ?child1 .
  ?child1 dbo:child ?grandChild .
  ?grandChild dbo:parent ?individual .

  FILTER (?predecessor = ?sawShweKhet)
}
```",5,5,6,3,3,3,3,71,1,1307,0,0.0007645259938837921,1.0,0.0015278838808250573
871,22,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby and Victor Stanley (Royal Navy officer)
  ?person1 a dbo:Person ;
           dbp:spouse ?spouse .
  ?spouse a dbo:Person ;
          dbp:spouse ?person1 .

  FILTER(?person1 = dbr:Fredrick_Stanley_16th_Earl_of_Derby &&
         ?spouse = dbr:Victor_Stanley_(Royal_Navy_officer))

  # Their child who is a politician
  ?child dbo:parent ?person1 ;
         dbo:parent ?spouse .
  ?child a dbo:Politician .

  # Find the father of that child
  ?father dbp:child ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
