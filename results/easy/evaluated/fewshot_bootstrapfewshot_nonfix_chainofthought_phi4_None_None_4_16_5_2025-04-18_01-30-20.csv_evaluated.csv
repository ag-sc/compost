id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
158,28,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . }","```sparql
SELECT ?result WHERE {
  # Native of the administration of Alexander II, Grand Duke of Finland
  ?admin <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> .
  ?result <http://dbpedia.org/property/nationality> ?admin .

  # Person decedent at the birthplace of Sandro Bertaggia
  <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?birthCountry .
  ?result <http://dbpedia.org/property/deathPlace> ?birthCountry .

  # Native of the administration, that is a country, of Nicholas II of Russia
  ?admin2 <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/Nicholas_II_of_Russia> .
  ?result <http://dbpedia.org/property/nationality> ?admin2 .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
668,67,test,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  # Find a person born as the birth name of an artist from Central Region, Ghana
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?nativeArtist <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Ghana> ;
                <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Central_Region,_Ghana> ;
                <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Ensure the person is a professional in the same profession as a writer who is also a musical artist of ""The Live Anthology""
  ?writer <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Writing> ;
          <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/The_Live_Anthology> .
  ?person <http://dbpedia.org/ontology/profession> ?writerProfession .

  # Ensure the person is associated as a musical artist with $pacely
  ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/$pacely> ;
          <http://dbpedia.org/ontology/profession> ?artistProfession .
  
  FILTER(?writerProfession = ?artistProfession)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,28,test,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon and professional in the profession of Frédéric Bouraly.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?result <http://dbpedia.org/property/profession> ?v1 .
  FILTER(?v1 = ?alterEgo) .

  # Actor of the album that is a film and work of Lasso the Moon
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work100000001> . # Assuming these are the classes for film and work
  ?album <http://dbpedia.org/resource/Lasso_the_Moon> .
  ?result <http://dbpedia.org/ontology/starring> ?album .

  # Professional in the profession of Frédéric Bouraly
  <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric_Bouraly> <http://dbpedia.org/property/profession> ?bouralyProf .
  ?result <http://dbpedia.org/property/profession> ?v2 .
  FILTER(?v2 = ?bouralyProf) .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
595,69,test,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?owner .

  # Step 2: Find a war that is both a disease and a societal event
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""war"") && CONTAINS(LCASE(?label), ""impact"")) .

  # Step 3: Identify works authored by Bill Clinton
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Clinton> .
  ?work <http://www.w3.org/2002/07/owl#sameAs> ?writtenWork .
  FILTER(CONTAINS(LCASE(?writtenWork), ""book"")) .

  # Step 4: Confirm Hillary Clinton's spouse as a politician and office holder
  <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is the property for holding an office

  # Step 5: Determine the commander associated with the identified war
  ?war <http://dbpedia.org/property/commander> ?commander .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
595,70,test,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the author of ""An Invitation to the White House"" who is a politician and office holder.
  ?author <http://purl.org/dc/terms/title> ""An Invitation to the White House""@en .
  ?author <http://dbpedia.org/ontology/occupation> ?v1 .
  FILTER EXISTS { ?v1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> } # Assuming Q82955 is ""politician""
  FILTER EXISTS { ?v1 <http://www.wikidata.org/entity/P39> ?office . } # Office holder

  # Step 2: Find the spouse of this author.
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Determine the war associated with USS Arcadia (ID-1605) as both a disease and societal event, and identify its commander.
  ?war <http://dbpedia.org/property/conflict> ?v2 .
  FILTER EXISTS { ?v2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11173> } # Assuming Q11173 is ""disease""
  FILTER EXISTS { ?v2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11070> } # Assuming Q11070 is ""societal event""

  ?commander <http://dbpedia.org/ontology/warCommanded> ?war .
  
  # Step 4: Identify the owner of USS Arcadia (ID-1605).
  <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/property/owner> ?owner .

  # Step 5: Locate the work authored by this owner that is classified as a written work, book, and work.
  ?work <http://purl.org/dc/terms/title> ?v3 .
  FILTER EXISTS { ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q571> } # Assuming Q571 is ""written work""
  FILTER EXISTS { ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q571> } # Assuming Q571 is ""book""
  FILTER EXISTS { ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q571> } # Assuming Q571 is ""work""

  ?owner <http://dbpedia.org/ontology/author> ?work .

  # Step 6: Find the resident of Chappaqua, New York who is both a politician and office holder.
  ?resident <http://www.wikidata.org/entity/P19> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  FILTER EXISTS { ?resident <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> } # Assuming Q82955 is ""politician""
  FILTER EXISTS { ?resident <http://www.wikidata.org/entity/P39> ?office . } # Office holder

  # Connect the commander to the owner.
  ?commander = ?owner .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
353,69,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Constance of Burgundy's spouse who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find their child
  ?child1 <http://dbpedia.org/ontology/parent> ?spouse .

  # Step 3: Find the grandchild of that spouse (royalty)
  ?grandchild <http://dbpedia.org/ontology/parent> ?child1 .
  
  # Step 4: Identify William I of Sicily's child who is royalty
  ?williamChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Wilhelm_I._von_Sizilien> .
  ?williamChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 5: Determine the father of this royal child
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?mother <http://dbpedia.org/ontology/parent> ?williamChild .

  # Step 6: Find Roger II of Sicily's child who is royalty
  ?rogerChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II._von_Sizilien> .
  ?rogerChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 7: Identify the parent of that royal child
  ?parent <http://dbpedia.org/ontology/parent> ?rogerChild .

  # Step 8: Combine conditions to find the common entity
  FILTER (?grandchild = ?father && ?father = ?parent)
  BIND(?grandchild AS ?result)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
706,20,test,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?actorBirthplace ?fellowshipAwardeeBirthplace WHERE {
  # Part 1: Birthplace of an actor from a movie that is Indian and features Dipankar De
  ?movie <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/India> . # Assuming the actor is Indian
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dipankar_De> .
  ?actor <http://dbpedia.org/ontology/birthPlace> ?actorBirthplace .

  # Part 2: Birthplace of an awardee related to Sangeet Natak Akademi Fellowship
  ?fellowshipAwardee <http://dbpedia.org/property/awards> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Sangeet Natak Akademi Fellowship""@en .
  ?fellowshipAwardee <http://dbpedia.org/ontology/birthPlace> ?fellowshipAwardeeBirthplace .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
414,19,test,"Give me the award of the awardee of the reference to Nobel Prize in Physics and show of the host, that is an educational institution, of Nobel Prize in Physics.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v4 <http://dbpedia.org/property/awards> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?award ?show WHERE {
  # Find awardees of the Nobel Prize in Physics and their awards
  ?awardee dbo:award <http://dbpedia.org/resource/Nobel_Prize_in_Physics> .
  ?awardee dbo:award ?award .

  # Find shows related to the Nobel Prize in Physics hosted by educational institutions
  ?show dbo:hostedBy ?host .
  ?host dbo:type dbr:Educational_Institution .
  ?show dbo:subject <http://dbpedia.org/resource/Nobel_Prize_in_Physics> .
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
38,20,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?result WHERE {
  # Author of a written work related to Korean Conflict Commander
  ?work1 <http://dbpedia.org/ontology/author> ?result .
  ?work1 <http://www.w3.org/2002/07/owl#sameAs> ?koreanConflictWork .
  ?koreanConflictWork <http://dbpedia.org/property/type> ""written work"" .
  
  # Commander in Korean Conflict
  ?commander1 <http://dbpedia.org/ontology/officeHolder> ?result .
  ?commander1 <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Korean_War> .

  # Author of an American Book related to North Carolina Air National Guard Commander
  ?work2 <http://dbpedia.org/ontology/author> ?result .
  ?work2 <http://www.w3.org/2002/07/owl#sameAs> ?americanBook .
  ?americanBook <http://dbpedia.org/property/type> ""book"" .
  ?americanBook <http://www.wikidata.org/entity/P17> <http://www.wikidata.org/entity/Q30> . # Q30 is the identifier for the United States

  # Commander and Politician in North Carolina Air National Guard
  ?commander2 <http://dbpedia.org/ontology/officeHolder> ?result .
  ?commander2 <http://dbpedia.org/property/unit> <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> .
  ?commander2 <http://dbpedia.org/ontology/politician> ?politicianRole .
}
```",6,15,7,3,2,3,2,20,0,0,1,0,0.0,0
414,20,test,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss and award of the awardee of the reference to Nobel Prize in Physics.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/property/awards> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . }","```sparql
SELECT ?show WHERE {
  # Find Rainer Weiss's Nobel Prize in Physics
  <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/ontology/nobelPrize> ?nobelAward .
  
  # Identify co-recipients or related awardees
  OPTIONAL { 
    ?awardee <http://www.wikidata.org/entity/P166> ?nobelAward .
  }
  
  # Find hosts of shows who are associated with an educational institution
  ?host <http://dbpedia.org/ontology/presenter> ?show .
  ?host <http://dbpedia.org/property/almaMater> ?institution .
  
  # Ensure the host is linked to Rainer Weiss's award
  OPTIONAL { 
    ?awardee <http://www.wikidata.org/entity/P108> ?host . # Assuming P108 represents ""award recipient""
  }
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
140,19,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  # Find John McDermott's death place and ensure it is a settlement
  <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?settlement .

  # Find ruling political parties that are organizations in the death place
  ?party <http://dbpedia.org/ontology/member> ?result ;
         <http://dbpedia.org/ontology/location> ?deathPlace ;
         <http://www.w3.org/2002/07/owl#sameAs> ?rulingParty .
  
  # Ensure the party is a political organization
  ?party <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/PoliticalOrganization108069068> .

  # Find wars involving George Pickett where the person was a commander
  ?war <http://dbpedia.org/ontology/commander> ?result ;
       <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/George_Pickett> .
  
  # Ensure the war is classified as a societal event
  ?war <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
347,68,test,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Cecilia Renata's father
  ?father <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> .
  
  # Step 2: Find the child of Cecilia Renata's father (Cecilia Renata or her sibling)
  ?child <http://dbpedia.org/ontology/birthParent> ?father .

  # Step 3: Identify Archduke Charles Joseph's parent
  ?parent <http://dbpedia.org/ontology/offspring> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .
  
  # Step 4: Find the child of this parent (could be Archduke Charles Joseph or his sibling)
  ?child2 <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 5: Determine a common father between these two children
  FILTER (?child = ?child2) .
  
  # Step 6: Identify the commander in the Algerian War who is also part of societal events and television shows
  ?result <http://dbpedia.org/ontology/commander> ?militaryForce .
  ?militaryForce <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Algerian_War> .
  
  OPTIONAL {
    ?societalEvent <http://www.w3.org/2000/01/rdf-schema#label> ""Societal Event"" .
    ?result <http://dbpedia.org/ontology/participant> ?societalEvent .
  }
  
  OPTIONAL {
    ?event <http://www.w3.org/2000/01/rdf-schema#label> ""Event"" .
    ?result <http://dbpedia.org/ontology/participant> ?event .
  }

  OPTIONAL {
    ?tvShow <http://dbpedia.org/ontology/show> ""Television Show"" .
    ?result <http://dbpedia.org/ontology/starredIn> ?tvShow .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
347,67,test,"Give me the commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?result WHERE {
  # Commander in Thirty Years' War
  ?result <http://dbpedia.org/ontology/commander> ?war .
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ""Thirty Years' War""@en .

  # Child of the father of the child that is royalty of Maria Anna of Bavaria (born 1574)
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> .
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
    ?father <http://dbpedia.org/ontology/spouse> ?mother .
    ?mother <http://dbpedia.org/ontology/birthChild> ?child .
    ?result <http://dbpedia.org/ontology/birthParent> ?father .
  }

  # Father of the child of the parent of Archduke Charles Joseph of Austria
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .
    ?child2 <http://dbpedia.org/ontology/birthParent> ?parent .
    ?result <http://dbpedia.org/ontology/birthParent> ?child2 .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,69,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Maria Anna's royal child
  ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""

  # Step 2: Father of that royal child
  ?father <http://dbpedia.org/ontology/father> ?child .

  # Step 3: Commander in a war related to Algerian War
  OPTIONAL {
    ?result <http://dbpedia.org/property/commanderInWar> ?war .
    ?war <http://dbpedia.org/ontology/event> ?event .
    FILTER(?event = <http://dbpedia.org/resource/Algerian_War>)
  }

  # Step 4: Father of Ferdinand III's child
  OPTIONAL {
    ?childFerdinand <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .
    ?father <http://dbpedia.org/ontology/father> ?childFerdinand .
  }

  # Combine conditions
  FILTER(?result = ?father)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
941,19,test,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the child of Duke Anthony Ulrich's parent who is royalty
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?result <http://dbpedia.org/ontology/parent> ?parent .

  # Step 2: Identify the spouse of the spouse of a royal child of Princess Antoinette
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> .
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    ?spouse1 <http://dbpedia.org/ontology/spouse> ?child .
    ?result <http://dbpedia.org/ontology/spouse> ?spouse1 .
  }
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
513,19,test,"Give me the entity in the award of George H. Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/ontology/leader> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/receipient> <http://dbpedia.org/resource/George_H._Cameron> .
  ?party <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://dbpedia.org/ontology/residence> ?result .
  
  ?result <http://www.w3.org/2002/07/owl#Thing> ?v1 . # Assuming this property indicates an organization
  ?result <http://dbpedia.org/ontology/politicalParty> ?v2 .

  OPTIONAL {
    ?party <http://dbpedia.org/property/member> <http://dbpedia.org/resource/George_Savage_(politician)> .
  }
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
103,68,test,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  # Actor of a movie that is also a television show
  ?movie <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Movie> .
  ?movie <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Television_show> .
  
  # Co-starred with Richard E. Grant
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?movie <http://dbpedia.org/ontology/starring> ?result .

  # Professional involvement with The Shadow's alter ego
  OPTIONAL {
    ?shadowAlterEgo <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/profession> ?v1 .
  }

  # Professionally related to an actor who is a politician from Ab Kya Hoga
  OPTIONAL {
    ?abKyaHoga <http://dbpedia.org/resource/Ab_Kya_Hoga> .
    ?abKyaHoga <http://dbpedia.org/ontology/starring> ?actorPolitician .
    ?actorPolitician <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Politician> .
    ?result <http://dbpedia.org/property/profession> ?v2 .
    FILTER(?v1 = ?v2)
  }
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
905,67,test,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Step 1 & 2: Spouse of Maria of Bytom and their royal father
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  ?father <http://dbpedia.org/ontology/parent> ?spouse .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  
  # Step 3: Parent of the royal father
  ?result <http://dbpedia.org/ontology/parent> ?father .

  # Step 4 & 5: Spouse of Charles II of Naples and their royal child
  ?spouse2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
  ?child <http://dbpedia.org/ontology/parent> ?spouse2 .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  
  # Step 6: Parent of the royal child
  ?result2 <http://dbpedia.org/ontology/parent> ?child .

  # Ensure both conditions are met by the same individual
  FILTER (?result = ?result2)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,27,test,"Give me the actor of Paradise (2013 film) and actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
SELECT ?actor WHERE {
  # Actor in ""Paradise"" (2013)
  <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?actor .

  # Actor in a film that is both a work and features Audrey Hepburn
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Audrey_Hepburn> .
  ?actor <http://dbpedia.org/ontology/starring> ?film .

  # Spouse of an awardee from Janusz Kamiński's list
  ?awardRecipient <http://dbpedia.org/property/nominee> <http://dbpedia.org/resource/Janusz_Kamiński> .
  ?awardRecipient <http://dbpedia.org/ontology/spouse> ?actor .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
203,71,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
SELECT ?militaryForce WHERE {
  ?awardee <http://dbpedia.org/ontology/title> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  
  ?war <http://dbpedia.org/property/commanderInWar> ?awardee ;
       a <http://dbpedia.org/ontology/MilitaryConflict> .

  ?militaryForce1 <http://dbpedia.org/property/militaryForceOfWar> ?war .

  ?tripleX <http://dbpedia.org/resource/The_Triple_X's> .
  
  ?war2 <http://dbpedia.org/property/commanderInWar> ?tripleX ;
        a <http://dbpedia.org/ontology/MilitaryConflict> .

  ?militaryForce2 <http://dbpedia.org/property/militaryForceOfWar> ?war2 .

  ?bayne <http://dbpedia.org/resource/William_Bayne> .
  
  ?reference <http://dbpedia.org/ontology/reference> ?bayne ;
             <http://dbpedia.org/property/militaryConflictReference> ?war2 .

  FILTER(?militaryForce1 = ?militaryForce2)
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
198,68,test,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
SELECT ?result WHERE {
  # Part 1: Birthplace of Henry Clay Lewis that is a settlement in America
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""us"") || CONTAINS(LCASE(?settlementLabel), ""america"")) .

  # Part 2: Force of the awardee of Quincy Adams Gillmore's award
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/receivedAward> ?award .
  ?award <http://dbpedia.org/property/awardedTo> ?gillmore .
  ?gillmore <http://dbpedia.org/ontology/militaryService> ?force .

  # Part 3: War of the awardee of an award show by United States Congress
  ?congressAward <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/United_States_Congress> .
  ?congressAward <http://dbpedia.org/property/awardedTo> ?recipient .
  ?recipient <http://dbpedia.org/ontology/militaryService> ?war .

  # Combine results
  BIND(?birthPlace AS ?result)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
628,68,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify GS9 member who is an artist and a musical artist
  ?gs9Member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  ?gs9Member <http://www.w3.org/2000/01/rdf-schema#label> ?artistLabel .
  FILTER(CONTAINS(LCASE(?artistLabel), ""artist"") && CONTAINS(LCASE(?artistLabel), ""musical artist"")) .

  # Step 2: Find associated musical artist
  ?gs9Member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .

  # Step 3: Determine band member of this associated musical artist
  ?bandMember <http://dbpedia.org/ontology/bandMember> ?associatedArtist .
  
  # Step 4: Identify person born in Florida who is a musical artist
  ?person <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Florida> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?personLabel .
  FILTER(CONTAINS(LCASE(?personLabel), ""musical artist"")) .

  # Step 5: Native of an award region associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awardRegion> ?region .
  ?region <http://www.w3.org/2000/01/rdf-schema#label> ?regionLabel .
  FILTER(CONTAINS(LCASE(?regionLabel), ""american"") && CONTAINS(LCASE(?regionLabel), ""state"") && CONTAINS(LCASE(?regionLabel), ""settlement"")) .

  # Final result: Band member of the associated musical artist
  BIND(?bandMember AS ?result)
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
225,20,test,"Give me the entity in the region of the time zone in Kiyosu and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
SELECT ?entity WHERE {
  # Find Kiyosu's time zone and its region
  <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://dbpedia.org/property/country> ?region .

  # Identify awardees of the Anita Borg Institute Women of Vision Awards
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> .
  
  # Find their birthplaces and ensure they are Japanese
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?awardee <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q36> . # Q36 is the identifier for Japan

  # Ensure there's a reference to a television show
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> ?televisionShow .
    ?televisionShow rdf:type <http://dbpedia.org/class/yago/YAGO2GeoCoordinates1000000010> . # Assuming this class represents TV shows
  }

  # Ensure the entity is in the region of Kiyosu's time zone and matches other criteria
  FILTER(?birthplace = ?region)
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
905,69,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
SELECT ?result WHERE {
  # Predecessor of Stephen V of Hungary
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Child (Royalty) of the predecessor
  ?child1 <http://dbpedia.org/ontology/parent> ?predecessor .
  ?child1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  
  # Grandchild of the predecessor
  ?grandchild <http://dbpedia.org/ontology/parent> ?child1 .
  
  # Father (Royalty) of Charles I of Hungary
  ?father_charles <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_I_of_Hungary> .
  ?father_charles <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  
  # Parent of the father of Charles I
  ?parent_father_charles <http://dbpedia.org/ontology/parent> ?father_charles .
  
  # Parent (Royalty) of Philip, Despot of Romania
  ?parent_philip <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philip_Despot_of_Romania> .
  ?parent_philip <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  
  # Father of the parent of Philip
  ?father_parent_philip <http://dbpedia.org/ontology/parent> ?parent_philip .
  
  # Spouse of the father of the parent of Philip
  ?result <http://dbpedia.org/ontology/spouse> ?father_parent_philip .
  
  FILTER (?grandchild = ?parent_father_charles && ?grandchild = ?result)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
609,68,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT DISTINCT ?birthPlace WHERE {
  # Part 1: Birth place of the governor of Paulus Powell's birth region
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?region .
  ?region a <http://dbpedia.org/class/yago/AdministrativeRegion108069068> . # Assuming this class represents regions and administrative regions

  OPTIONAL {
    ?region <http://dbpedia.org/property/governor> ?governor .
    ?governor a <http://dbpedia.org/ontology/Politician> .
    ?governor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  # Part 2: Birth place of the author of El Deafo
  OPTIONAL {
    <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?author .
    ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  # Part 3: Birth place of the awardee of Vince Gilligan's award
  OPTIONAL {
    <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/award> ?award .
    ?otherAwardee <http://dbpedia.org/property/award> ?award .
    ?otherAwardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
293,69,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v7 . }","```sparql
SELECT ?result WHERE {
  # Condition 1: Party member of the ruling party in a landmark at elevation 20.1168
  ?landmark <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?location <http://dbpedia.org/ontology/location> ?landmark .
  ?party <http://dbpedia.org/property/rulingParty> ?location .
  ?result <http://dbpedia.org/ontology/memberOf> ?party .

  # Condition 2: Spouse of the actor of ""1,000 Dollars a Minute""
  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    FILTER (str(?movie) = ""1,000_Dollars_a_Minute"")
    ?actor <http://dbpedia.org/ontology/spouse> ?result .
  }

  # Condition 3: Person born as the birth name of the parent of Tisha Sterling
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> .
    ?parent <http://dbpedia.org/property/birthName> ?birthName .
    ?result <http://dbpedia.org/property/birthName> ?birthName .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
39,67,test,"Give me the professional in Singer and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Singer> .
  
  OPTIONAL { 
    ?band <http://dbpedia.org/property/member> ?person .
    ?person <http://dbpedia.org/ontology/birthName> ""Bob Thompson"" .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musical_artist> .
  }
  
  OPTIONAL {
    ?creation <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
    ?creation <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q482980> . # Assuming Q482980 is the identifier for ""fictional character""
    ?creation <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 is the identifier for ""comics character""
    ?alterEgo <http://dbpedia.org/property/alterEgo> ?creation .
    ?result <http://dbpedia.org/ontology/profession> ?alterEgo .
  }
}
```",7,10,8,3,3,3,3,71,0,0,3,0,0.0,0
293,67,test,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify films produced by Nat Levine and find actors in those films
  ?film <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .

  # Step 2: Find the spouse of these actors
  ?actor <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Check if this person was born as the birth name of Tisha Sterling's parent
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/birthName> ?birthName .
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> .
    ?spouse <http://dbpedia.org/property/birthName> ?birthName .
  }

  # Step 4: Verify association with the Republican Party
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/politicalAffiliation> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
  }
}
```",7,8,8,3,3,3,3,71,1,68,0,0.014492753623188406,1.0,0.02857142857142857
756,71,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v8 <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v8 <http://dbpedia.org/ontology/manager> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Identify the leader of West Germany
  ?leader <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/West_Germany> .
  
  # Step 2: Find the administration's country
  ?country <http://dbpedia.org/ontology/administration> ?leader .

  # Step 3: Locate a person born on 1968-08-26 who is a sports manager
  ?person <http://dbpedia.org/property/birthDate> ""1968-08-26""^^xsd:date .
  ?person <http://dbpedia.org/ontology/sportsManager> true .

  # Step 4: Identify the soccer club season managed by this sports manager
  ?clubSeason <http://dbpedia.org/ontology/team> ?team ;
               <http://dbpedia.org/ontology/manager> ?person .
  
  # Step 5: Determine the successor of the 2006–07 VfL Bochum season
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?successorSeason .

  # Step 6: Find a player managed by someone involved with both the soccer club and the successor season
  ?player <http://dbpedia.org/ontology/team> ?team ;
          <http://dbpedia.org/ontology/team> ?successorTeam .
  
  # Step 7: Identify the manager of this player
  ?manager <http://dbpedia.org/ontology/manager> ?player .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
737,70,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify parent of Archduchess Margarete Sophie of Austria
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .

  # Step 2: Find child of this parent who is royalty
  ?royaltyChild <http://dbpedia.org/ontology/parent> ?parent .
  ?royaltyChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 3: Identify child of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrechtChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .

  # Step 4: Find predecessor of this child
  ?predecessor <http://dbpedia.org/ontology/successor> ?philippAlbrechtChild .

  # Step 5: Identify the lineage from Alexander of Württemberg (1804-1881)
  ?grandchild1 <http://dbpedia.org/ontology/parent> ?alexander .
  ?grandchild2 <http://dbpedia.org/ontology/parent> ?grandchild1 .
  ?grandchild3 <http://dbpedia.org/ontology/parent> ?grandchild2 .
  ?alexander rdfs:label ""Alexander of Württemberg""@en .

  # Step 6: Find the child that matches all conditions
  ?result = ?royaltyChild ;
           = ?predecessor ;
           = ?grandchild3 .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
782,71,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v7 . }","```sparql
SELECT ?band ?personaAssociatedArtist ?realNameBand WHERE {
  # Part 1: Find the band of a musical artist born on 1945-03-30
  ?artist <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^xsd:date .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?artist <http://dbpedia.org/ontology/member> ?band .

  # Part 2: Find associated musical artist of Nick Curran's persona
  OPTIONAL {
    <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/property/persona> ?persona .
    ?persona <http://dbpedia.org/property/associatedMusicalArtist> ?personaAssociatedArtist .
  }

  # Part 3: Find the real name reference for Kim Wilson's band
  OPTIONAL {
    ?kimWilsonBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kim_Wilson> .
    ?kimWilsonBand <http://dbpedia.org/ontology/reference> ?realNameBand .
  }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
609,67,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
SELECT DISTINCT ?governorBirthPlace ?authorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Part 1: Birth place of Paulus Powell's governor
  ?paulusPowell <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?region .
  ?region a <http://dbpedia.org/class/yago/AdministrativeRegion108069068> . # Assuming this class represents administrative regions
  ?governor <http://dbpedia.org/ontology/governor> ?birthPlace .
  ?governor a <http://dbpedia.org/ontology/Politician> .
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .

  # Part 2: Birth place of the author of El Deafo
  ?elDeafo <http://dbpedia.org/ontology/author> ?author .
  ?author <http://www.w3.org/2000/01/rdf-schema#label> ""Cece Bell""@en . # Assuming Cece Bell is the author
  ?author <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
  ?author <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .

  # Part 3: Birth place of Vince Gilligan
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?vinceGilliganBirthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,70,test,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Find the person born as Nick Curran who is a musical artist
  ?person <http://dbpedia.org/ontology/birthDate> ?birth .
  FILTER (YEAR(?birth) = 1945 && MONTH(?birth) = 3 && DAY(?birth) = 30)
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Nick Curran""@en .
  ?person <http://dbpedia.org/ontology/musicalArtist> ?musicalArtist .

  # Find associated musical artists
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
  }

  # Check band membership and reference to The Fabulous Thunderbirds
  OPTIONAL {
    ?bandMember <http://dbpedia.org/ontology/birthDate> ?birth .
    FILTER (YEAR(?birth) = 1945 && MONTH(?birth) = 3 && DAY(?birth) = 30)
    ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?band <http://www.w3.org/2000/01/rdf-schema#label> ""The Fabulous Thunderbirds""@en .
    ?bandMember <http://dbpedia.org/ontology/musicalArtist> ?musicalArtist .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
246,20,test,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find children of Princess Muna al-Hussein who are royalty
  ?childMuna <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Princess_Muna_al-Hussein> .
  ?childMuna <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Step 2: Find parent of these royal children
  ?parent1 <http://dbpedia.org/ontology/birthChild> ?childMuna .
  
  # Step 3: Find parents of Princess Aisha bint Faisal who are royalty
  ?parentAisha <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> .
  ?parentAisha <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Step 4: Find children of these royal parents who are royalty
  ?childParentAisha <http://dbpedia.org/ontology/birthParent> ?parentAisha .
  ?childParentAisha <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Step 5: Find parent of these royal children
  ?result <http://dbpedia.org/ontology/birthChild> ?childParentAisha .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
816,68,test,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find children of Allan Arbus and their parents
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Allan_Arbus> .
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .

  # Step 2: Check if the parent acted in a movie classified as a work
  ?movie <http://dbpedia.org/ontology/starring> ?parent .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie104930069> .

  # Step 3: Identify a decedent at Los Angeles
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles,_California> .
  
  # Link the actor to the decedent
  ?parent <http://dbpedia.org/property/spouse> ?decedent .

  # Step 4: Ensure the decedent's parent is linked to a professional associated with Eugène Cattin
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> .
  ?decedentParent <http://dbpedia.org/ontology/birthChild> ?decedent .
  ?decedentParent <http://dbpedia.org/ontology/birthParent> ?professional .
  
  BIND(?parent AS ?result)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
609,69,test,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v7 . }","```sparql
SELECT ?birthPlaceGovernor ?birthPlaceAuthor ?birthPlaceAwardee WHERE {
  # Governor of Virginia who is a politician
  ?governor <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Virginia> .
  ?governor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  ?governor <http://dbpedia.org/ontology/birthPlace> ?birthPlaceGovernor .

  # Author of El Deafo who is American
  ?author <http://dbpedia.org/property/book> <http://dbpedia.org/resource/El_Deafo> .
  ?author <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q30> . # Assuming Q30 is the identifier for ""American""
  ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlaceAuthor .

  # Awardee of an award by Vince Gilligan
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  ?award <http://dbpedia.org/property/giver> <http://dbpedia.org/resource/Vince_Gilligan> .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlaceAwardee .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
816,67,test,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find spouses of Mariclare Costello
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
  
  # Step 2: Identify children of these spouses
  ?child <http://dbpedia.org/ontology/parent> ?spouse .

  # Step 3: Find parents of these children (could be the spouse or another parent)
  ?result <http://dbpedia.org/ontology/parent> ?child .
  
  # Step 4: Identify professionals in Eugène Cattin's profession
  ?eugeneProfession <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> .
  ?professional <http://dbpedia.org/ontology/profession> ?eugeneProfession .

  # Step 5: Find actors of the specified film
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Ensure the result is a parent of both the child and professional actor
  FILTER(?result = ?professional || ?result = ?actor)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
398,20,test,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in the writer of the work of Aleksandr Filimonov.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?result WHERE {
  # Find the soccer club associated with Denis Kolodin
  ?club <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Denis_Kolodin> .
  
  # Identify players in that club with nicknames
  ?player <http://dbpedia.org/property/team> ?club ;
          <http://dbpedia.org/ontology/nickname> ?result .

  OPTIONAL {
    # Find works by Aleksandr Filimonov and their writers
    ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Aleksandr_Filimonov> .
    ?writer <http://dbpedia.org/ontology/writtenWork> ?work .

    # Identify players connected to these writers
    ?player2 <http://dbpedia.org/property/team> ?writerTeam ;
             <http://dbpedia.org/ontology/nickname> ?result .
  }
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
143,19,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  # Find Cynthia Morgan's birth name
  <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?birthName .

  # Identify associated musical artists with Cynthia Morgan
  ?artist <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/Cynthia_Morgan> .
  
  # Find movies featuring Afeez Oyetoro and actors in those movies
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> .
  ?movie <http://dbpedia.org/ontology/starring> ?result .

  # Ensure the actor's birth name matches Cynthia Morgan's birth name
  ?result <http://dbpedia.org/property/birthName> ?birthName .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
412,28,test,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30 and war of the leader of National Party of Greece.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
SELECT ?entity WHERE {
  # Find the death place of Antonios Varthalitis
  <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  
  # Ensure it is a settlement
  ?deathPlace <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Settlement> .

  # Find wars associated with an awardee related to ""30""
  ?awardee <http://dbpedia.org/ontology/receivedAward> ?award .
  FILTER regex(str(?award), ""30"", ""i"") .
  ?war <http://dbpedia.org/property/warOf> ?awardee .

  # Find wars associated with the leader of National Party of Greece
  ?leader <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/National_Party_of_Greece> .
  ?warLeader <http://dbpedia.org/property/warOf> ?leader .

  # Ensure both conditions are met for the same entity (i.e., war)
  FILTER (?war = ?warLeader)

  # Return the settlement as the result
  BIND(?deathPlace AS ?entity)
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
80,71,test,"Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/album> ?v5 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of ""The Golden Master""
  <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?result <http://dbpedia.org/ontology/profession> ?v1 .
  FILTER(?v1 = ?alterEgo)

  # Actor of a movie with the author of ""Smartbomb""
  OPTIONAL {
    <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/ontology/author> ?author .
    ?movie <http://dbpedia.org/ontology/starring> ?result .
    ?movie <http://dbpedia.org/ontology/subject> ?author .
  }

  # Actor in an album of a song and musical work by T.I.
  OPTIONAL {
    ?song <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/T.I.> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork100000001> .
    ?album <http://purl.org/dc/terms/subject> ?song .
    ?album <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",9,11,10,3,3,3,3,71,0,0,4,0,0.0,0
103,70,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow (video game) comics character
  <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?alterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/ComicBookCharacters100000001> .

  # Actor of a movie that is a television show with Richard E. Grant
  OPTIONAL {
    ?tvShow <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
    ?tvShow <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movies100000244> . # Assuming Movies100000244 is the class for television shows
    ?result <http://dbpedia.org/ontology/starring> ?tvShow .
  }

  # Professional in the profession of an actor who is a politician from ""Ab Kya Hoga""
  OPTIONAL {
    <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/property/profession> ?profession .
    FILTER(?profession = <http://dbpedia.org/resource/Politician>) # Assuming Politician is the correct resource
    ?result <http://dbpedia.org/property/profession> ?profession .
  }
}
```",8,11,9,3,3,3,3,71,0,0,13,0,0.0,0
731,20,test,"Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?force WHERE {
  ?awardee <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Edmund_Hakewill-Smith> .
  ?awardee <http://dbpedia.org/property/militaryForce> ?force .

  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/reference> ?event .
    ?event <http://dbpedia.org/ontology/societalEvent> true .
    ?event <http://dbpedia.org/ontology/militaryConflict> true .
    ?event <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> .
  }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
384,9,test,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?partyRetailleau ?partySuccessor WHERE {
  # Party of Bruno Daniel Marie Paul Retailleau
  ?person1 <http://dbpedia.org/ontology/birthName> ""Bruno Daniel Marie Paul Retailleau"" .
  ?person1 <http://www.wikidata.org/entity/P39> ?office . # Office holder
  ?person1 <http://dbpedia.org/ontology/politicalParty> ?partyRetailleau .
  
  # Party of the successor of Patrice Martin-Lalande
  ?person2 <http://dbpedia.org/ontology/successor> ?successor .
  FILTER(?person2 = <http://dbpedia.org/resource/Patrice_Martin-Lalande>)
  ?successor <http://www.wikidata.org/entity/P39> ?office . # Politician
  ?successor <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q142> . # French nationality
  ?successor <http://dbpedia.org/ontology/politicalParty> ?partySuccessor .
}
```",4,8,5,2,2,2,2,9,0,0,1,0,0.0,0
293,71,test,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v8 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Identify Tisha Sterling's parent
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> .
  
  # Step 2: Get the birth name of the parent
  ?parent <http://dbpedia.org/property/birthName> ?birthName .

  # Step 3: Identify Nat Levine's film product and its actor
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Nat_Levine> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .

  # Step 4: Find the spouse connection
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/spouse> ?actor .

  # Step 5: Identify landmark and ruling party
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#elevation> ""20.1168""^^xsd:float .
  ?party <http://dbpedia.org/ontology/rulingParty> ?landmark .
  
  # Step 6: Find party member
  ?person <http://dbpedia.org/property/memberOfPoliticalParty> ?party .
}
```

Note: This query assumes the existence of certain properties and relationships in DBpedia, which may not be directly available or require additional context. Adjustments might be necessary based on actual data availability.",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
943,69,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the commander in Siege of Mukha who is royalty
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the parent of this commander who is royalty
  ?parent <http://dbpedia.org/ontology/child> ?commander .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Determine the child of this royal parent
  ?child <http://dbpedia.org/ontology/parent> ?parent .

  # Step 4: Identify Baeda Maryam I's child
  ?baedaChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .

  # Step 5: Find commonality between the two children
  FILTER (?child = ?baedaChild)

  # Step 6: Trace back to father of the father who is royalty and an office holder
  ?father1 <http://dbpedia.org/ontology/parent> ?child .
  ?grandFather <http://dbpedia.org/ontology/parent> ?father1 .
  ?grandFather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?grandFather <http://dbpedia.org/property/officeHolder> ?v1 .

  # Step 7: Reference to The Shadow's alter ego
  OPTIONAL {
    ?alterEgo <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
    ?grandFather <http://dbpedia.org/ontology/reference> ?alterEgo .
  }

  # Result is the grand father who meets all conditions
  BIND(?grandFather AS ?result)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
633,20,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the child of Francis I, Duke of Lorraine who is royalty
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty

  # Step 2: Find the father of this royal child
  ?father <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Identify the parent (grandparent) of this father
  ?grandparent <http://dbpedia.org/ontology/parent> ?father .

  # Step 4: Check if this grandparent is royalty and a noble
  ?grandparent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?grandparent <http://dbpedia.org/ontology/nobleTitle> ?nobleTitle .

  # Step 5: Find the spouse of this grandparent
  ?spouse <http://dbpedia.org/ontology/spouse> ?grandparent .

  # Additional condition: Ensure the child is also a child of Antoine, Duke of Lorraine and royalty
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
492,27,test,Give me the death place of Reed Howes and death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
SELECT ?deathPlaceReedHowes ?deathPlaceColorMeDead ?deathPlaceAladdin1958 WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceReedHowes .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/ontology/starring> ?actorColorMeDead .
    ?actorColorMeDead <http://dbpedia.org/ontology/deathPlace> ?deathPlaceColorMeDead .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/ontology/starring> ?actorAladdin1958 .
    ?actorAladdin1958 <http://dbpedia.org/ontology/deathPlace> ?deathPlaceAladdin1958 .
  }
}
```",5,5,6,2,3,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
89,71,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v8 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the royal child of Saw Shwe Khet
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the father of this royal child
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?child <http://dbpedia.org/ontology/birthParent> ?father .

  # Step 3: Identify the spouse of this father, who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""

  OPTIONAL {
    # Step 4: Determine the predecessor of the child of this royal spouse
    ?childOfSpouse <http://dbpedia.org/ontology/successor> ?result .
    ?spouse <http://dbpedia.org/ontology/birthParent> ?childOfSpouse .
  }

  OPTIONAL {
    # Step 5: Find the child of Saw Min Phyu who is royalty and their spouse's child
    ?royalChildMinPhyu <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Saw_Min_Phyu> .
    ?royalChildMinPhyu <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
    
    ?spouseOfRoyalChild <http://dbpedia.org/ontology/spouse> ?royalChildMinPhyu .
    ?childOfSpouse2 <http://dbpedia.org/ontology/birthParent> ?spouseOfRoyalChild .
  }

  OPTIONAL {
    # Step 6: Identify the parent of Minye Kyawswa's child
    ?minyeKyawswaChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Minye_Kyawswa> .
    
    ?parentOfMinyeKyawswaChild <http://dbpedia.org/ontology/birthParent> ?minyeKyawswaChild .
  }

  OPTIONAL {
    # Step 7: Find the child of this identified parent
    ?finalResult <http://dbpedia.org/ontology/birthParent> ?parentOfMinyeKyawswaChild .
  }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
769,19,test,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
SELECT ?player WHERE {
  ?manager <http://dbpedia.org/ontology/occupation> [
    a dbo:SportsManager ;
    a dbo:SoccerManager .
  ] .
  
  ?reference a dbo:SportsClub ;
             a dbo:SportsTeam ;
             a dbo:SoccerClub ;
             rdfs:label ""Hong Kong C""@en .

  ?manager <http://dbpedia.org/ontology/team> ?reference .

  ?player <http://dbpedia.org/ontology/playerFor> ?team .
  ?team <http://dbpedia.org/ontology/teamManager> ?manager .

  ?person a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager ;
          dbo:birthDate ""1981-12-01""^^xsd:date ;
          owl:sameAs ?player .
}
```",5,15,6,3,2,3,2,20,0,0,2,0,0.0,0
531,71,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v8 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?officeLeader ?party ?commanderOffice ?conflict ?tenantResidence WHERE {
  
  # Office of the leader of Miguel Maura's party
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/politicalParty> ?party .
  ?party <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://dbpedia.org/ontology/office> ?officeLeader .

  # Office of the commander in Manuel Pinto da Costa's force
  <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> <http://dbpedia.org/ontology/militaryConflict> ?conflict .
  ?conflict <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/office> ?commanderOffice .

  # Tenant of the residence of the leader from the 2003 Madrid City Council election
  <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/ontology/electedOfficial> ?leaderElected .
  ?leaderElected <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://dbpedia.org/ontology/tenant> ?tenantResidence .

}
```",9,16,10,3,3,3,3,71,0,0,1,0,0.0,0
609,71,test,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v8 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT DISTINCT ?birthPlaceAuthor ?birthPlaceAwardee ?birthPlaceGovernor WHERE {
  # Part 1: Birth place of the author of El Deafo who is American
  OPTIONAL {
    <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
    ?author <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q30> . # Q30 is the identifier for ""United States""
    ?author <http://dbpedia.org/property/birthPlace> ?birthPlaceAuthor .
  }

  # Part 2: Birth place of the awardee of an award by Vince Gilligan
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?award <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Vince_Gilligan> .
    ?awardee <http://dbpedia.org/property/birthPlace> ?birthPlaceAwardee .
  }

  # Part 3: Birth place of the governor of Paulus Powell's birth region
  OPTIONAL {
    <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?region .
    ?region a <http://www.wikidata.org/entity/Q2220681> . # Q2220681 is the identifier for ""administrative region""
    ?governor <http://dbpedia.org/property/governs> ?region .
    ?governor a <http://dbpedia.org/ontology/politician> .
    ?governor <http://dbpedia.org/property/birthPlace> ?birthPlaceGovernor .
  }
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
943,68,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find alter ego of Lamont Cranston
  <http://dbpedia.org/resource/Lamont_Cranston> <http://dbpedia.org/property/alterEgo> ?alterEgo .

  # Step 2: Identify father of the father (royalty and office holder) of Na'od
  ?naodFather <http://dbpedia.org/ontology/father> ?naod .
  ?grandfather <http://dbpedia.org/ontology/father> ?naodFather .
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  OPTIONAL { 
    ?grandfather <http://dbpedia.org/property/officeHolder> ?office .
  }

  # Step 3: Find child of the parent (royalty) of the commander in Siege of Mukha
  ?commander <http://dbpedia.org/resource/Siege_of_Mukha> ?siegeEvent .
  ?commanderParent <http://dbpedia.org/ontology/father> ?commander .
  ?commanderParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?child <http://dbpedia.org/ontology/father> ?commanderParent .

  # Combine results to find the final entity
  FILTER(?alterEgo = ?result)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,70,test,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify movies Herschel Bernardi starred in
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
  
  # Step 2: Find other actors in those movies
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  # Step 3: Ensure the movie is a work
  ?movie rdf:type <http://dbpedia.org/class/yago/Movie100000001>.

  # Step 4: Parental relationship with Mariclare Costello's spouse's child
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  ?actor <http://dbpedia.org/ontology/parent> ?child .

  # Step 5: Parental relationship with a professional in Eugène Cattin's profession
  <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/property/profession> ?profession .
  ?professional <http://dbpedia.org/property/profession> ?profession .
  ?actor <http://dbpedia.org/ontology/parent> ?professional .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
905,71,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Philip's royal parent
  ?philipParent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
  ?philipParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""

  # Step 2: Find the spouse of Philip's royal parent
  ?spouse <http://dbpedia.org/ontology/spouse> ?philipParent .

  # Step 3: Identify Maria of Bytom's spouse and their royal father
  ?mariaSpouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  ?mariaRoyalFather <http://dbpedia.org/ontology/birthPlace> ?mariaSpouse .
  ?mariaRoyalFather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 4: Find the child of Maria's royal father
  ?child <http://dbpedia.org/ontology/birthPlace> ?mariaRoyalFather .

  # Step 5: Identify Stephen V's predecessor and their royal child
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  ?royalChild <http://dbpedia.org/ontology/birthPlace> ?predecessor .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 6: Find the parent of this royal child
  ?parent <http://dbpedia.org/ontology/birthPlace> ?royalChild .

  # Step 7: Identify the spouse of this parent
  ?result <http://dbpedia.org/ontology/spouse> ?parent .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
595,67,test,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?author WHERE {
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
  ?person <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?person <http://dbpedia.org/ontology/politicalPartyMember> ?party .
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  
  OPTIONAL {
    ?war <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Disease> ;
         <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Societal_event> .
    ?person <http://dbpedia.org/ontology/commander> ?war .
  }
  
  OPTIONAL {
    ?ship <http://dbpedia.org/ontology/owner> ?owner .
    ?owner <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Person> ;
           <http://dbpedia.org/property/name> ""William J. Rapp"" .
  }
  
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Book> ;
        <http://dbpedia.org/property/title> ?title .
  
  FILTER(?person = ?owner) # Ensuring the person is connected to all conditions
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
943,67,test,"Give me the child of Dawit I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
SELECT ?result WHERE {
  # Child of Dawit I
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Dawit_I> .
  
  # Reference to the alter ego of Lamont Cranston (The Shadow)
  OPTIONAL { 
    ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Lamont_Cranston> .
    ?child <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
  }
  
  # Father of a father who is royalty and an office holder
  ?son <http://dbpedia.org/ontology/father> ?result .
  ?son <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  OPTIONAL { 
    ?son <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is the property for holding an office
  }
  
  # Child of Baeda Maryam I
  ?child2 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  
  FILTER (?child = ?result && ?child2 = ?result)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,27,test,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  # Child of a commander who is royalty in Siege of Padua
  ?parent <http://dbpedia.org/ontology/father> ?result .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  OPTIONAL { 
    ?event <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Siege_of_Padua> .
    ?parent <http://dbpedia.org/ontology/participant> ?event .
  }
  
  # Father of Isabella of Austria
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Isabella_of_Austria> .

  # Father of a royal child of Philip I of Castile
  ?child <http://dbpedia.org/ontology/father> ?result .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Philip_I_of_Castile> .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
871,68,test,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?father WHERE {
  # Step 1: Identify the politician child of Frederick Stanley, 16th Earl of Derby
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?child <http://dbpedia.org/property/politician> true .

  # Step 2: Identify the parent of Rodney Lees' awardee
  ?awardee <http://dbpedia.org/ontology/birthParent> ?parent .
  ?award <http://dbpedia.org/ontology/receiver> ?awardee .
  ?award <http://dbpedia.org/property/recipient> ""Rodney Lees"" .

  # Step 3: Identify the politician and office holder child of Edward Stanley, 17th Earl of Derby
  ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  ?child2 <http://dbpedia.org/property/politician> true .
  ?child2 <http://dbpedia.org/property/officeHolder> true .

  # Step 4: Find the common parent
  ?father <http://dbpedia.org/ontology/birthParent> ?child .
  ?father <http://dbpedia.org/ontology/birthParent> ?parent .
  ?father <http://dbpedia.org/ontology/birthParent> ?child2 .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
633,19,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?parent <http://dbpedia.org/ontology/father> ?father .
  
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> ?parent .
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?spouse <http://www.wikidata.org/entity/P21> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""noble""
  }
  
  FILTER(?result = ?parent || ?result = ?spouse)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
756,67,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . }","```sparql
SELECT ?manager WHERE {
  # Step 1: Find the leader of West Germany (Chancellor)
  ?leader <http://dbpedia.org/ontology/chiefExecutive> <http://dbpedia.org/resource/West_Germany> .
  
  # Step 2: Identify the person born on 1968-08-26 who is a sports manager
  ?person <http://www.w3.org/2000/01/rdf-schema#birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Sports_manager> .

  # Step 3: Check if this person was a manager for VfL Bochum
  ?person <http://dbpedia.org/property/teamManager> <http://dbpedia.org/resource/VfL_Bochum> .
  
  # Step 4: Identify the team they managed that fits the criteria of being a sports season and a sports team season
  ?team <http://dbpedia.org/ontology/sportsTeamSeason> ?season .
  ?season <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  
  # Linking manager to the team
  ?manager <http://dbpedia.org/property/teamManager> ?team .

  FILTER (?person = ?manager)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
213,20,test,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v5 <http://dbpedia.org/ontology/country> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?birthPlace WHERE {
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> .
  ?child <http://dbpedia.org/ontology/parent> ?decedent ;
         <http://dbpedia.org/property/politician> true .
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  OPTIONAL {
    ?huJieqing <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/property/writer> true ;
            <http://dbpedia.org/ontology/workCountry> ?workCountry .
  }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
203,67,test,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Commander in the French Campaign in Egypt and Syria
  ?campaign <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> .
  ?campaign <http://dbpedia.org/ontology/commander> ?result .

  # Military force of an event that is both a societal event and another type
  ?event <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Societal_event> .
  ?campaign <http://dbpedia.org/ontology/event> ?event .

  # Awardee of Knight Commander of the Order of the Bath
  ?result <http://dbpedia.org/property/honors> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .

  # Military force involved in a war that is both a military conflict and an event
  ?war <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Military_conflict> .
  ?war <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Event> .
  ?result <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/property/involvement> ?war .

  # Reference to William Bayne
  OPTIONAL { 
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/William_Bayne> .
    ?result <http://dbpedia.org/ontology/referencedBy> ?reference .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
871,69,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Parent of the awardee associated with Rodney Lees
  ?awardee <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/recipient> ?person .
  ?person <http://dbpedia.org/ontology/parent> ?result .

  # Father of a politician's child whose parent is an alumnus of Eton College
  ?politician <http://dbpedia.org/ontology/politician> true .
  ?politician <http://dbpedia.org/ontology/parent> ?child .
  ?alumnus <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Eton_College> .
  ?alumnus <http://dbpedia.org/ontology/parent> ?politician .
  ?result <http://dbpedia.org/ontology/father> ?child .

  # Parent of Frederick Stanley, 16th Earl of Derby's child
  ?frederickChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?result <http://dbpedia.org/ontology/parent> ?frederickChild .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
943,71,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Baeda Maryam I's child
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  
  # Step 2: Identify the parent who is royalty
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 3: Locate the commander in Siege of Mukha who is royalty
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 4: Determine the child of this commander's royal parent
  ?commanderParent <http://dbpedia.org/ontology/child> ?commander .
  ?commanderParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 5: Identify the father of the father
  ?grandparent <http://dbpedia.org/ontology/birthChild> ?commanderParent .
  ?grandparent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  ?grandparent <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is an office holder
  
  # Additional: Reference to Lamont Cranston
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Lamont_Cranston> .
    ?alterEgo <http://dbpedia.org/ontology/allegedAlterEgo> ?reference .
  }
  
  # Final result
  BIND(?grandparent AS ?result)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
80,67,test,"Give me the actor of Shelby Oaks and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v6 . },"```sparql
SELECT ?result WHERE {
  # Actor of Shelby Oaks
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .

  # Actor of an album related to a song by T.I.
  ?song <http://dbpedia.org/ontology/songArtist> <http://dbpedia.org/resource/T.I.> .
  ?song <http://dbpedia.org/ontology/workType> <http://dbpedia.org/resource/Musical_work> .
  ?album <http://dbpedia.org/ontology/track> ?song .
  ?result <http://dbpedia.org/ontology/starring> ?album .

  # Professional involvement in the alter ego of The Golden Master
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,69,test,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Spouse of the father (royalty) of Myat Hpone Pyo
  ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?result <http://dbpedia.org/ontology/spouse> ?father .

  # Predecessor of the child of the spouse (royalty) of Saw Min Phyu
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?child <http://dbpedia.org/ontology/parent> ?spouse .
    ?result <http://dbpedia.org/ontology/successor> ?child .
  }

  # Child of the parent of the child of Minye Kyawswa
  OPTIONAL {
    ?grandchild <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .
    ?result <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
668,69,test,"Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Determine Rod Argent's profession
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?profession .

  # Find the person born as Pacely and their associated musical artist
  ?pacely <http://dbpedia.org/ontology/birthName> ""Pacely"" .
  ?pacely <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .

  # Find the native of Central Region, Ghana by birth name and their associated musical artist
  ?ghanaian <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> .
  ?ghanaian <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Central_Region,_Ghana> .
  ?ghanaian <http://dbpedia.org/ontology/birthName> ?birthName .
  ?ghanaian <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .

  # Find the professional who matches Rod Argent's profession and is associated with both artists
  ?result <http://dbpedia.org/property/occupation> ?profession .
  ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
  ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
151,9,test,Give me the entity in the birthplace of Burhan Belge and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?entity WHERE {
  # Find the birthplace of Burhan Belge
  <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Look for entities associated with that birthplace
  ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> ?birthPlace .

  # Find references to awards received by Charles Parsons (British Army officer)
  OPTIONAL {
    <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/receivedAward> ?award .
    
    # Check if the entity is related to this award
    ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> ?award .
  }
}
```",4,4,5,2,2,2,2,9,0,0,3,0,0.0,0
23,28,test,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Country of Daniel Elahi Galán
  <http://dbpedia.org/resource/Daniel_El%C3%A1i_Gal%C3%A1n> <http://dbpedia.org/ontology/nationality> ?country .
  
  # Party of Roy Leonardo Barreras Montealegre
  <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> <http://dbpedia.org/property/politicalParty> ?party1 .

  # Father of Sofía Petro and his party
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Sof%C3%ADa_Petro> .
    ?father <http://dbpedia.org/property/politicalParty> ?party2 .
    
    # Ensure the entity is in the same country and has a matching party
    ?result <http://dbpedia.org/ontology/nationality> ?country .
    ?result <http://dbpedia.org/property/politicalParty> ?party1 .
    FILTER(?party1 = ?party2)
  }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
412,27,test,"Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in the death place, that is a settlement, of Antonios Varthalitis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
SELECT ?result WHERE {
  # War involving Napoleon Zervas
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Napoleon_Zervas> .
  
  # Awardee of an award (assuming the property for awards is correct)
  ?awardee <http://dbpedia.org/property/award> ?award .
  FILTER(?award = ""30"") # Assuming '30' refers to a specific award identifier
  ?war1 <http://dbpedia.org/ontology/participant> ?awardee .

  # Death place of Antonios Varthalitis is a settlement
  <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .

  # Entity that satisfies all conditions
  FILTER(?war = ?war1)
  BIND(?war AS ?result)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
742,19,test,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Plovdiv_University_Paisii_Hilendarski>.
  
  ?region <http://www.w3.org/2006/time#during> [
    a <http://www.w3.org/2006/time#DateTimeInterval>;
    <http://www.w3.org/2006/time#hasTimeZone> <http://dbpedia.org/resource/Eastern_European_Time>
  ].
  
  ?region <http://dbpedia.org/ontology/resident> ?person .
  ?person <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
756,68,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v5 . ?v4 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
SELECT ?manager WHERE {
  # Step 1: Find successor of 2006–07 VfL Bochum season
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?successorSeason .
  
  # Step 2: Find manager of the successor season
  ?successorSeason <http://dbpedia.org/property/teamManager> ?manager .

  # Step 3: Identify Thomas Letsch's team
  ?letschTeam <http://dbpedia.org/ontology/teamManager> <http://dbpedia.org/resource/Thomas_Letsch> .
  
  # Step 4: Determine the administration country of West Germany's leader
  <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/administrationCountry> ?country .

  # Step 5: Find a native from this country who is also the manager identified in step 2
  ?manager <http://dbpedia.org/ontology/nationality> ?nationality .
  FILTER (?nationality = ?country)
}
```",8,18,9,3,3,3,3,71,0,0,1,0,0.0,0
89,68,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v7 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the child of Saw Shwe Khet who is royalty
  ?child <http://dbpedia.org/ontology/familyName> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the father of this royal child
  ?father <http://dbpedia.org/ontology/parent> ?child .
  
  # Step 3: Determine if this father is royalty and find his spouse
  OPTIONAL { 
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?spouse <http://dbpedia.org/ontology/spouse> ?father .
  }

  # Step 4: Identify the parent of Minye Kyawswa's child
  ?minyeChild <http://dbpedia.org/ontology/familyName> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?parent <http://dbpedia.org/ontology/parent> ?minyeChild .

  # Step 5: Find a predecessor of Saw Shwe Khet's child
  OPTIONAL { 
    ?predecessor <http://dbpedia.org/ontology/successor> ?child .
  }

  # Step 6: Ensure the spouse is also a child of this parent and precedes the child of Saw Shwe Khet
  FILTER (?spouse = ?parent && EXISTS { ?predecessor <http://dbpedia.org/ontology/successor> ?child })
  
  BIND(?spouse AS ?result)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
399,9,test,Give me the band member of the person born as Emilia Yancheva Valeva and professional in the profession of Jamie T.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Find Emilia Yancheva Valeva by her birth name and identify any band memberships
  ?emilia <http://dbpedia.org/ontology/birthName> ""Emilia Yancheva Valeva"" .
  ?bandMember <http://dbpedia.org/ontology/member> ?emilia .

  # Determine Jamie T's profession
  <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/profession> ?profession .

  # Find individuals who are both band members and have the same profession as Jamie T
  ?bandMember <http://dbpedia.org/property/profession> ?profession .
  
  BIND(?bandMember AS ?result)
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
38,19,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?result WHERE {
  # Part 1: Author of a work related to Korean conflict
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?author <http://purl.org/dc/terms/creator> ?work .
  ?officeHolder <http://dbpedia.org/property/officeHolder> <http://dbpedia.org/resource/Korean_Conflict_Commander> .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?author = ?officeHolder .

  # Part 2: Author of an American book related to Joe Biden
  ?book <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?book <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> .
  ?book <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Joe_Biden> .
  ?book <http://dbpedia.org/property/countryOfOrigin> <http://dbpedia.org/resource/United_States> .
  ?author2 <http://purl.org/dc/terms/creator> ?book .
  ?author2 = ?author .

}
```",5,12,6,3,2,3,2,20,0,0,1,0,0.0,0
293,68,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?partyMember WHERE {
  # Step 1: Identify the landmark at the given elevation
  ?landmark <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^xsd:float .
  
  # Step 2: Find the ruling party of this location
  ?landmark <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/rulingParty> ?party .

  # Step 3: Identify the actor of a film produced by Nat Levine
  ?film <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Nat_Levine> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .

  # Step 4: Determine the spouse of this actor
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/spouse> ?spouse .
  }

  # Step 5: Find a person born with the birth name of Ann Sothern
  ?person <http://dbpedia.org/property/birthName> ""Ann Sothern"" .

  # Step 6: Combine these elements to find a party member
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/memberOf> ?party .
    ?partyMember <http://dbpedia.org/ontology/memberOf> ?party .
  }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
737,69,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify parent of Archduchess Margarete Sophie of Austria
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .

  # Step 2: Find a child who is royalty from the identified parent
  ?royaltyChild <http://dbpedia.org/ontology/parent> ?parent .
  ?royaltyChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 3: Identify the child of Duke Philipp of Württemberg
  ?dukeChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .

  # Step 4: Find a predecessor among the children of Duke Philipp's child
  ?predecessor <http://dbpedia.org/ontology/successor> ?dukeChild .

  # Step 5: Identify spouse and their royal child for Archduchess Helena of Austria
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?royalSpouseChild <http://dbpedia.org/ontology/parent> ?spouse .
  ?royalSpouseChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 6: Combine conditions to find the result
  ?result = ?royaltyChild .
  ?result = ?predecessor .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,28,test,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?war WHERE {
  # Child of Toyotomi Hideyoshi involved in a war
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Toyotomi_Hideyoshi> .
  ?child <http://dbpedia.org/ontology/foughtIn> ?war .

  # Entity related to the birthplace of Yamaza Enjirō
  <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
  
  # Person born as Koichirō involved in a war
  ?person <http://dbpedia.org/ontology/birthName> ""Koichirō""^^<http://www.w3.org/2001/XMLSchema#string> .
  ?person <http://dbpedia.org/ontology/foughtIn> ?war .

  # Ensure the same war satisfies all conditions
}
```",6,6,7,2,3,2,3,28,0,0,2,0,0.0,0
668,68,test,"Give me the associated musical artist of the person born as the birth name of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of Joey B.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Find associated musical artist of $pacely
  ?pacely <http://dbpedia.org/ontology/birthName> ""Pacely"" .
  ?pacely <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .

  # Ensure the result is a professional in the same field as The Live Anthology's writer
  OPTIONAL {
    <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?writer .
    ?writer <http://www.wikidata.org/entity/P106> ?profession . # Assuming P106 is the property for occupation
    ?result <http://www.wikidata.org/entity/P106> ?profession .
  }

  # Ensure the result was born as Joey B
  ?result <http://dbpedia.org/ontology/birthName> ""Joey B"" .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
353,67,test,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?father WHERE {
  # Step 1: Find Constance of Burgundy's royal spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""

  # Step 2: Find their child
  ?child1 <http://dbpedia.org/ontology/parent> ?spouse .

  # Step 3: Find Roger II of Sicily's child
  ?child2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .

  # Step 4: Ensure the child is royalty (commonality)
  ?child1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
  ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 5: Find a reference related to William I who is royalty and an office holder
  ?reference <http://dbpedia.org/ontology/parent> ?child1 .
  ?reference <http://dbpedia.org/ontology/parent> ?child2 .
  ?reference <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?reference <http://dbpedia.org/property/officeHolder> ?office .

  # Step 6: Find the child of this reference
  ?child3 <http://dbpedia.org/ontology/parent> ?reference .

  # Step 7: Determine the father of this child
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?child3 <http://dbpedia.org/ontology/parent> ?father .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
295,20,test,"Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify the producer of ""Storm in a Teacup""
  <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?producer .
  
  # Step 2: Find the birth place of this producer
  ?producer <http://dbpedia.org/property/birthPlace> ?birthPlace .

  # Step 3: Identify natives of that birth place
  ?native <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ?placeLabel .
  FILTER(?placeLabel = ?birthPlace)

  # Step 4: Identify the writer of a musical work related to ""the true self""
  OPTIONAL {
    ?musicalWork <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> . # Assuming Q33999 is the identifier for ""artist""
    
    # Step 5: Ensure this writer is related to Steven Kapur as ""true self""
    ?kapur <http://dbpedia.org/ontology/alias> ""Steven Kapur"" .
    ?kapur <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> . # Assuming Q33999 is the identifier for ""artist""
    
    FILTER(?writer = ?kapur)
  }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
213,19,test,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v4 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
SELECT ?birthPlace ?country WHERE {
  # Find child of Chiang Ching-kuo who is a politician and get their birth place
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> .
  ?child <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Politician> .

  # Find spouse of Hu Jieqing who is a writer and get the country of their work
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> .
    ?spouse <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Writer> .
    ?work <http://dbpedia.org/ontology/creator> ?spouse .
    ?work <http://dbpedia.org/ontology/country> ?country .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
687,70,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find films directed by Manuel Huerga
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  
  # Step 2: Identify actors who are also soccer players and athletes in those films
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (
    (CONTAINS(LCASE(?v1), ""soccer player"") && CONTAINS(LCASE(?v1), ""athlete""))
  )
  
  # Step 3: Find teams associated with Marcelo Sarmiento
  <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/property/team> ?team .
  
  # Step 4: Identify players in the team of someone born on 1955-02-22 who is an athlete
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?athlete .
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^xsd:date .
  ?team <http://dbpedia.org/property/player> ?player .
  
  # Combine conditions to find the player in question
  FILTER (?actor = ?result)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
103,71,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?result WHERE {
  # Part 1: Professional in the alter ego of The Shadow (video game) comics character
  <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?profession <http://dbpedia.org/property/profession> ?alterEgo .

  # Part 2: Professional in the profession of an actor who is also a politician from Ab Kya Hoga
  OPTIONAL {
    <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/property/profession> ?professionActor .
    FILTER EXISTS { ?actor <http://dbpedia.org/ontology/politician> [] }
  }

  # Part 3: Actor of a movie that is a television show with Richard Grant
  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/starring> ?result .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Grant> .
    FILTER EXISTS { ?movie <http://dbpedia.org/ontology/tvSeries> [] }
  }

  # Combine results
  VALUES ?result { ?profession ?professionActor }
}
```",9,12,10,3,3,3,3,71,0,0,13,0,0.0,0
68,28,test,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Dorothea's grandparent
  ?dorotheaParent <http://dbpedia.org/ontology/father> ?grandfather .
  ?dorotheaParent <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> .

  # Step 2: Identify the commander in Siege of Padua who is royalty
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Padua> .
  
  # Step 3: Identify the child of this commander
  ?child <http://dbpedia.org/ontology/father> ?commander .

  # Step 4: Find Philip I's royal child and their father
  ?philipChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  ?philipChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip_I_of_Castile> .
  
  # Step 5: Find the person who satisfies all conditions
  ?result = ?grandfather .
  ?result = ?child .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
198,71,test,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v7 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v8 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
SELECT ?war ?force ?entity WHERE {
  # Part 1: Awardee of the show awarded by United States Congress
  ?award <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/United_States_Congress> .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .

  # Part 2: Force of the awardee of Quincy Adams Gillmore's award
  ?gillmoreAward <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
  ?gillmoreAward <http://dbpedia.org/ontology/recipient> ?gillmoreAwardee .
  ?gillmoreAwardee <http://dbpedia.org/property/militaryForce> ?force .

  # Part 3: Entity in the birthplace of a person deceased on 1850-08-05
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?death .
  ?death <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace <http://www.w3.org/2002/07/owl#sameAs> ?entity .
  FILTER EXISTS { ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
871,67,test,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Victor Stanley's parent
  ?victor <http://dbpedia.org/ontology/birthName> ""Victor Stanley"" .
  ?victor <http://dbpedia.org/property/profession> ""Royal Navy officer"" .
  ?parent <http://dbpedia.org/ontology/child> ?victor .

  # Step 2: Find a politician child who is an alumnus of Eton College
  ?politicianChild <http://dbpedia.org/ontology/politician> true .
  ?politicianChild <http://dbpedia.org/property/alumnusOf> <http://dbpedia.org/resource/Eton_College> .

  # Step 3: Find the parent of this politician child
  ?parent2 <http://dbpedia.org/ontology/child> ?politicianChild .
  
  # Ensure this parent is a politician and an office holder
  ?parent2 <http://dbpedia.org/ontology/politician> true .
  ?parent2 <http://dbpedia.org/ontology/officelHolder> true .

  # Step 4: Find Edward Stanley, 17th Earl of Derby's parent who matches these criteria
  ?edward <http://dbpedia.org/ontology/birthName> ""Edward Stanley"" .
  ?edward <http://dbpedia.org/property/title> ""17th Earl of Derby"" .
  ?parent3 <http://dbpedia.org/ontology/child> ?edward .

  # Ensure this parent is the same as the one found in Step 3
  FILTER (?parent2 = ?parent3)
  
  BIND(?parent AS ?result) # Bind the final result to the parent of Victor Stanley
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
158,27,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?result WHERE {
  # Native of the administration of Alexander II, Grand Duke of Finland
  ?admin1 <http://dbpedia.org/ontology/administeredBy> <http://dbpedia.org/resource/Alexander_II_of_Russia> .
  ?admin1 <http://www.w3.org/2000/01/rdf-schema#label> ""Grand Duchy of Finland""@en .

  # Person decedent at Switzerland
  ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> .
  
  # Native of the administration, that is a country, of Nicholas II of Russia
  ?admin2 <http://dbpedia.org/ontology/administeredBy> <http://dbpedia.org/resource/Nicholas_II_of_Russia> .
  ?admin2 <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
  FILTER (LANG(?countryLabel) = ""en"" && EXISTS { ?countryLabel <http://www.w3.org/2004/02/skos/core#prefLabel> ?country . })
  
  # Native of both administrations
  ?result <http://dbpedia.org/ontology/birthPlace> ?admin1 .
  ?result <http://dbpedia.org/ontology/birthPlace> ?admin2 .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,69,test,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/ontology/writer> ?writer .
  
  OPTIONAL {
    ?war <http://www.w3.org/2002/07/owl#Thing> <http://dbpedia.org/ontology/tvShow> ;
         <http://dbpedia.org/ontology/societalEvent> ?societalEvent .
    
    ?commander <http://dbpedia.org/ontology/commander> ?war .
    ?successor <http://dbpedia.org/ontology/successor> ?commander .
    
    FILTER EXISTS { 
      ?commander (<http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955>) ; # Assuming Q82955 is ""politician""
                  (<http://www.wikidata.org/entity/P39> ?office) . # Office holder
    }
    
    FILTER EXISTS { 
      ?war <http://dbpedia.org/ontology/event> ?event ;
           <http://dbpedia.org/ontology/militaryConflict> ?conflict .
      
      ?militaryForce <http://dbpedia.org/ontology/militaryForce> ?battleOfVienna .
      ?battleOfVienna <http://dbpedia.org/ontology/battle> ""Battle of Vienna"" .
    }
    
    FILTER EXISTS { 
      ?paciCommander <http://dbpedia.org/ontology/commander> ?militaryForce ;
                     (<http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955>) ; # Assuming Q82955 is ""politician""
                     (<http://www.wikidata.org/entity/P39> ?office) .
      
      FILTER (?paciCommander = <http://dbpedia.org/resource/Micha%C5%82_Kazimierz_Pac>)
    }
  }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,70,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  ?result <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q29> . # Q29 is the identifier for Spain
  ?result <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  
  OPTIONAL {
    ?election <http://dbpedia.org/ontology/electionDate> ""2009-05-22""^^xsd:date .
    ?result <http://dbpedia.org/property/office> ?office .
    ?office <http://dbpedia.org/ontology/election> ?election .
  }
  
  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
    ?result <http://dbpedia.org/property/administration> ?administration .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
353,68,test,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the grandchild of Alfonso VI
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .

  # Step 2: Find the child of a parent who is royalty of Roger II
  ?royaltyChild <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?grandchild .
  ?royaltyParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?royaltyParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  
  # Step 3: Find the father of a child who is royalty and office holder to William I
  ?officeHolder <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?officeHolder <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/William_I> .
  ?officeHolder <http://dbpedia.org/ontology/parent> ?child .

  # Combine conditions
  FILTER (?grandchild = ?royaltyChild)
  ?result <http://dbpedia.org/ontology/father> ?royaltyChild .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
246,19,test,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Condition 1: Parent of a royal child of Prince Faisal bin Hussein
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .

  UNION

  # Condition 2: Parent of a royal grandchild of Princess Muna al-Hussein
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Princess_Muna_al-Hussein> .
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?parent <http://dbpedia.org/ontology/birthChild> ?grandchild .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
531,68,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commanderOffice ?militaryConflict ?leaderResidence ?partyLeaderOffice WHERE {
  # Step 1: Identify Manuel Pinto da Costa's commander role in a military conflict
  ?person <http://dbpedia.org/ontology/name> ""Manuel Pinto da Costa"" .
  ?person <http://dbpedia.org/ontology/officeHolder> ?commanderOffice .
  ?commanderOffice <http://dbpedia.org/property/politician> true .
  ?militaryConflict <http://dbpedia.org/ontology/militaryConflict> true .
  ?commanderOffice <http://dbpedia.org/ontology/involvement> ?militaryConflict .

  # Step 2: Identify the leader of the 2003 Madrid City Council election and their residence
  ?electionEvent <http://dbpedia.org/property/electionYear> ""2003"" .
  ?electionEvent <http://dbpedia.org/ontology/cityCouncilElection> true .
  ?leader <http://dbpedia.org/ontology/wonElection> ?electionEvent .
  ?leader <http://dbpedia.org/ontology/residence> ?leaderResidence .

  # Step 3: Identify the office of the leader of the Conservative Republican Party (Spain)
  ?partyLeader <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
  ?partyLeader <http://dbpedia.org/property/politician> true .
  ?partyLeader <http://dbpedia.org/ontology/officeHolder> ?partyLeaderOffice .

  # Step 4: Find the tenant of the leader's residence
  ?tenant <http://dbpedia.org/ontology/residence> ?leaderResidence .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,71,test,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v4 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Bob Thompson"" .
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  
  OPTIONAL { 
    ?creation <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
    ?creation <http://www.w3.org/2002/07/owl#sameAs> ?fictionalCharacter .
    ?fictionalCharacter a <http://dbpedia.org/class/yago/FictionalCharacters100000001> .
    ?fictionalCharacter a <http://dbpedia.org/class/yago/ComicsCharacters1000000> .
    ?creation <http://dbpedia.org/property/alterEgo> ?v2 .
    ?person <http://dbpedia.org/property/occupation> ?v2 .
  }
  
  OPTIONAL {
    ?producer <http://dbpedia.org/ontology/profession> ?v3 .
    ?producer <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> .
    ?person <http://dbpedia.org/property/occupation> ?v3 .
  }
}
```",9,12,10,3,3,3,3,71,0,0,4,0,0.0,0
687,71,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?actor WHERE {
  # Part 1: Actor of a film by Manuel Huerga who is also a soccer player and athlete
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/profession> ?v1 .
  FILTER (
    EXISTS { ?v1 <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q9310> } && # Soccer player
    EXISTS { ?v1 <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> }  # Athlete
  )

  # Part 2: Player associated with Marty Pollio's birthdate
  OPTIONAL {
    <http://dbpedia.org/resource/Marty_Polio> <http://dbpedia.org/property/birthDate> ?birthdate .
    ?person <http://dbpedia.org/property/birthDate> ?birthdate .
    ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> . # Athlete
  }

  # Part 3: Team associated with Marcelo Sarmiento's birthdate
  OPTIONAL {
    <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/property/birthDate> ?birthdate2 .
    ?person2 <http://dbpedia.org/property/birthDate> ?birthdate2 .
    ?person2 <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q9310> . # Soccer player
    ?person2 <http://www.wikidata.org/entity/P39> ?team . # Soccer manager
  }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
531,70,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . },"```sparql
SELECT ?officeOfCommander ?force ?tenant ?leaderOffice ?party WHERE {
  # Step 1: Find the office of commander for Manuel Pinto da Costa in a military conflict
  ?officeOfCommander <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
  ?officeOfCommander <http://www.w3.org/2000/01/rdf-schema#label> ""commander""@en .
  ?force <http://dbpedia.org/ontology/militaryConflict> ?officeOfCommander .
  ?force <http://dbpedia.org/ontology/societalEvent> ?officeOfCommander .

  # Step 2: Find the tenant of Alberto Ruiz-Gallardón's residence
  ?residence <http://dbpedia.org/ontology/resident> ?tenant .
  ?residence <http://dbpedia.org/resource/Antonio_Ruiz-Gallardón> .

  # Step 3: Identify the office of leader related to Miguel Maura's party
  ?leaderOffice <http://dbpedia.org/ontology/officeHolder> ?tenant .
  ?leaderOffice <http://www.w3.org/2000/01/rdf-schema#label> ""leader""@en .
  ?party <http://dbpedia.org/ontology/politicalPartyLeader> ?tenant .
  ?party <http://dbpedia.org/resource/Miguel_Maura> .

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
723,20,test,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/producer> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify the producer of ""Nothing to Gein""
  ?producer <http://dbpedia.org/ontology/produced> <http://dbpedia.org/resource/Nothing_to_Gein> .
  
  # Ensure the producer is an organization or group
  ?producer a <http://dbpedia.org/class/yago/Organisation100000001> ;
            a <http://dbpedia.org/class/yago/MusicalGroup1000000> .

  # Step 2: Find a band member of this producer
  ?bandMember <http://dbpedia.org/ontology/member> ?producer .
  
  # Step 3: Check if the band member has an associated musical artist that is both an organization and a band
  OPTIONAL { 
    ?artist <http://dbpedia.org/ontology/associatedBandMember> ?bandMember .
    ?artist a <http://dbpedia.org/class/yago/Organisation100000001> ;
            a <http://dbpedia.org/class/yago/MusicalGroup1000000> .
  }
  
  # Step 4: Verify if this band member is also part of Nate Newton's associated musical artist
  ?nateArtist <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nate_Newton_(musician)> .
  ?bandMember <http://dbpedia.org/ontology/member> ?nateArtist .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
203,68,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the war associated with ""The Triple X's""
  ?war <http://dbpedia.org/ontology/event> ?tripleXEvent .
  ?tripleXEvent <http://www.w3.org/2000/01/rdf-schema#label> ""The Triple X's"" .

  # Step 2: Find the commander of that war
  ?commander <http://dbpedia.org/ontology/commander> ?war .

  # Step 3: Link Robert Calder to his societal event and military force
  ?calderEvent <http://dbpedia.org/ontology/event> ?societalEvent .
  ?societalEvent <http://www.w3.org/2000/01/rdf-schema#label> ""Robert Calder"" .
  ?militaryForce1 <http://dbpedia.org/property/militaryForce> ?calderEvent .

  # Step 4: Link William Bayne to his military conflict and military force
  ?bayneWar <http://dbpedia.org/ontology/event> ?militaryConflict .
  ?militaryConflict <http://www.w3.org/2000/01/rdf-schema#label> ""William Bayne"" .
  ?militaryForce2 <http://dbpedia.org/property/militaryForce> ?bayneWar .

  # Step 5: Find commonality
  FILTER(?militaryForce1 = ?militaryForce2)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,71,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v8 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Find individuals who are citizens of Spain and reside in a country
  ?person <http://dbpedia.org/ontology/country> ?country .
  ?person <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q29> . # Q29 is the identifier for Spain

  # Find connection to Anxo Quintana's leadership role
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Anxo_Quintana> .
    ?person <http://dbpedia.org/property/memberOf> ?event .
  }

  # Find connection to the Spanish Socialist Workers' Party (PSOE)
  OPTIONAL {
    ?psoeEvent <http://dbpedia.org/ontology/organization> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
    ?person <http://dbpedia.org/property/memberOf> ?psoeEvent .
  }

  # Ensure the person is a tenant of both the country and PSOE
  BIND(?person AS ?result)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
468,20,test,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon and child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/parent> ?child .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
  }
  
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Martin_of_Aragon> .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
103,69,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow (video game) series
  <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/property/profession> ?result .

  # Actor of a movie that is also a television show, featuring Richard Grant Esterhuysen
  ?movie <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Movie> .
  ?movie <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Television_show> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Grant> .

  # Professional in the same profession as Shatrughan Sinha
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/profession> ?profession .
  FILTER (?result = ?profession)
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
782,68,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
SELECT ?band1 ?artist2 ?realNameRef WHERE {
  # Find the musical artist born on 1945-03-30
  ?person1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^xsd:date .
  ?person1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""MusicalArtist""
  
  # Find their band
  ?band1 <http://dbpedia.org/ontology/member> ?person1 .
  
  # Find Nicholas Michael Curran and associated musical artists
  ?person2 rdfs:label ""Nicholas Michael Curran""@en .
  ?person2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""MusicalArtist""
  
  OPTIONAL {
    ?artist2 <http://dbpedia.org/ontology/associatedBandMember> ?person2 .
  }
  
  # Find Kim Wilson's band and real name reference
  ?kimWilson rdfs:label ""Kim Wilson""@en .
  ?kimWilson <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""MusicalArtist""
  
  ?kimWilsonBand <http://dbpedia.org/ontology/member> ?kimWilson .
  
  OPTIONAL {
    ?kimWilsonBand <http://dbpedia.org/property/realName> ?realNameRef .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,20,test,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for , and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/postalCode> "","" . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
SELECT ?parent WHERE {
  ?deceased <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^xsd:date .
  ?deceased <http://www.wikidata.org/entity/P106> ?artistRole1 .
  ?deceased <http://www.wikidata.org/entity/P106> ?musicianRole .

  FILTER(?artistRole1 = <http://www.wikidata.org/entity/Q33999> || ?artistRole1 = <http://www.wikidata.org/entity/Q1028181>) # Artist roles
  FILTER(?musicianRole = <http://www.wikidata.org/entity/Q215627> || ?musicianRole = <http://www.wikidata.org/entity/Q225819>) # Musical artist roles

  OPTIONAL {
    ?work <http://dbpedia.org/ontology/work> ?deceased .
    ?work <http://dbpedia.org/ontology/type> ?type1 .
    ?work <http://dbpedia.org/ontology/type> ?type2 .

    FILTER(?type1 = <http://dbpedia.org/resource/Movie> && ?type2 = <http://dbpedia.org/resource/Television_show>)
    
    ?author <http://dbpedia.org/ontology/creator> ?work .
    ?author <http://www.wikidata.org/entity/P19> ?location .

    ?location <http://www.wikidata.org/entity/P17> <http://www.wikidata.org/entity/Q145> . # England
    ?location <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q515> . # Settlement

    ?native <http://dbpedia.org/ontology/nationality> ?location .
    ?native <http://www.wikidata.org/entity/P106> ?artistRole2 .
    ?native <http://www.wikidata.org/entity/P106> ?musicianRole2 .

    FILTER(?artistRole2 = <http://www.wikidata.org/entity/Q33999> || ?artistRole2 = <http://www.wikidata.org/entity/Q1028181>)
    FILTER(?musicianRole2 = <http://www.wikidata.org/entity/Q215627> || ?musicianRole2 = <http://www.wikidata.org/entity/Q225819>)

    ?native <http://dbpedia.org/ontology/birthPlace> ?location .
    ?parent <http://dbpedia.org/ontology/child> ?native .
  }
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
58,19,test,Give me the spouse of the person born as Linda Sue Cobb and producer of the movie with the award of Ian Gregson (poet).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?spouse WHERE {
  # Find Linda Sue Cobb's resource
  ?linda <http://www.w3.org/2000/01/rdf-schema#label> ""Linda Sue Cobb""@en .
  
  # Identify her spouse
  ?linda <http://dbpedia.org/ontology/spouse> ?spouse .

  # Find movies with awards related to Ian Gregson
  ?movie <http://dbpedia.org/property/award> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Award associated with Ian Gregson""@en .

  # Check if the spouse was a producer of such movies
  ?spouse <http://dbpedia.org/ontology/producer> ?movie .
}
```

Note: The query assumes that there is an identifiable award linked to Ian Gregson and that DBpedia has structured data for these relationships. Adjustments may be needed based on actual available data in DBpedia.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
756,70,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . }","```sparql
SELECT ?manager WHERE {
  # Step 1: Identify the leader of West Germany
  ?leader <http://dbpedia.org/ontology/chiefExecutive> <http://dbpedia.org/resource/West_Germany> .
  
  # Step 2: Determine the administration's country
  ?country <http://dbpedia.org/ontology/administrativeUnit> ?leader .

  # Step 3: Find the native person born on 1968-08-26 who is a sports manager
  ?person <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^xsd:date .
  ?person <http://dbpedia.org/ontology/nationality> ?country .
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q193018> . # Assuming Q193018 is the identifier for ""sports manager""

  # Step 4: Identify the player managed in 2007–08 VfL Bochum season
  ?player <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/VfL_Bochum> .
  ?player <http://dbpedia.org/property/manager> ?person .
  ?season <http://dbpedia.org/ontology/sportsTeamSeason> <http://dbpedia.org/resource/VfL_Bochum> .
  ?season <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?season <http://dbpedia.org/property/year> ""2007–08"" .

  # Step 5: Determine the manager of the team
  ?team <http://dbpedia.org/ontology/teamSeason> ?season .
  ?manager <http://dbpedia.org/property/manager> ?team .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
859,20,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find a member of Khlyst who is also a musical artist
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Khlyst_(band)> .
  ?member <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?associatedArtist1 .

  # Step 2: Find the associated musical artist of this member
  ?associatedArtist1 <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?associatedArtist2 .
  
  # Step 3: Identify a reference group related to ""Burnt by the Sun""
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Burnt_by_the_Sun_(film)> .

  # Step 4: Find an associated band of this reference group
  ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?associatedBand .
  
  # Ensure the associated band is a band, group, and organization
  ?associatedBand <http://dbpedia.org/ontology/band> [] .
  ?associatedBand <http://dbpedia.org/ontology/group> [] .
  ?associatedBand <http://dbpedia.org/ontology/organization> [] .

  # Step 5: Determine the band member of this associated band
  ?bandMember <http://dbpedia.org/ontology/bandMember> ?associatedBand .
  
  # Return the final result as a band member of the associated band
  BIND(?bandMember AS ?result)
}
```",6,11,7,3,2,3,2,20,0,0,5,0,0.0,0
628,69,test,"Give me the person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?person WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Identify the award and region in New York State
  ?award <http://dbpedia.org/property/location> ?region .
  ?region a <http://dbpedia.org/class/yago/RegionsInNewYorkState108069068> ;
          a <http://dbpedia.org/class/yago/AmericanSettlements1000000010> .

  # Step 3: Find the band from New York State that won this award
  ?band <http://dbpedia.org/ontology/location> ?region .
  ?band <http://dbpedia.org/property/award> ?award .

  # Step 4: Identify associated musical artist and GS9 member
  ?artist <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?gs9Member a <http://dbpedia.org/class/yago/MusicalArtists1000000010> ;
             a <http://dbpedia.org/class/yago/Artists1000000010> ;
             <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/GS9> .
  ?gs9Member <http://dbpedia.org/property/birthName> ?birthName .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
687,67,test,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?team1 ?person ?team2 WHERE {
  # Part 1: Player in Juan Carlos Molina (footballer)
  <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?team1 .

  # Part 2: Team of the person born on Marcelo Sarmiento's birthday
  ?person <http://dbpedia.org/property/birthDate> ?birthDate .
  FILTER (?birthDate = <http://dbpedia.org/resource/Marcelo_Sarmiento#birthDate>)
  
  ?person <http://www.wikidata.org/entity/P39> <http://www.wikidata.org/entity/Q50668> . # Soccer player
  OPTIONAL { 
    ?person <http://www.wikidata.org/entity/P39> <http://www.wikidata.org/entity/Q11173> . # Soccer manager
  }
  
  ?person <http://dbpedia.org/ontology/team> ?team2 .

  # Part 3: Player in the actor of Manuel Huerga's film
  OPTIONAL {
    ?film <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Manuel_Huerga> .
    ?actor <http://dbpedia.org/ontology/starring> ?film .
    
    ?actor <http://www.wikidata.org/entity/P39> <http://www.wikidata.org/entity/Q50668> . # Soccer player
    OPTIONAL { 
      ?actor <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q7396> . # Athlete
    }
    
    ?actor <http://dbpedia.org/ontology/team> ?team2 .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
628,70,test,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find associated musical artist of Bobby Shmurda
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedBand> ?artist .
  
  # Step 2: Find band member of the associated musical artist
  ?artist <http://dbpedia.org/ontology/member> ?bandMember .

  # Step 3: Identify person born as birth name of native musical artist from Florida
  ?nativeArtist <http://dbpedia.org/property/birthName> ?birthName .
  ?nativeArtist <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?nativeArtist <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Florida> .

  # Step 4: Identify award related to a region, state, or settlement in America
  ?award <http://dbpedia.org/ontology/location> ?location .
  FILTER (
    ?location IN (<http://dbpedia.org/resource/New_York_(state)>, 
                  <http://dbpedia.org/resource/United_States>)
  )

  # Step 5: Find the awardee band from New York
  ?award <http://dbpedia.org/property/awardee> ?band .
  ?band <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/New_York_(state)> .

  # Ensure all conditions are met for a single entity
  FILTER (?birthName = ?nativeArtist)
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
198,69,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?entity WHERE {
  # Step 1: Identify the person deceased on 1850-08-05
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  
  # Step 2: Find their birthplace, ensuring it is a settlement and American
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?country .
  ?country rdfs:label ""United States""@en .
  ?birthPlace a <http://dbpedia.org/class/yago/Settlements100000007> .

  # Step 3: Identify the awardee of the Gillmore Medal
  ?gillmoreAwardee <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Gillmore_Medal> .
  
  # Step 4: Determine the force related to the Gillmore Medal awardee
  ?gillmoreAwardee <http://dbpedia.org/property/militaryForce> ?force .

  # Step 5: Find the war associated with the awardee of a show that is an award from the United States Congress
  ?congressAward <http://dbpedia.org/ontology/receivesAward> ?awardRecipient .
  ?congressAward rdfs:label ""United States Congress""@en .
  ?awardRecipient <http://dbpedia.org/property/war> ?war .

  # Step 6: Combine these elements
  FILTER(?person = ?gillmoreAwardee) 
  FILTER(?entity = ?birthPlace)
}
```

This query attempts to retrieve the entity related to the birthplace of a person who died on August 5, 1850, and connects it with other historical details involving awards and military forces. Note that some assumptions are made due to potential gaps in DBpedia's data coverage for specific historical records.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
731,19,test,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse and force of the awardee of Commander of the Order of the British Empire.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  ?commander <http://dbpedia.org/ontology/commanded> ?force .
  ?event <http://dbpedia.org/ontology/involvesMilitaryConflict> ?commander .
  ?event <http://dbpedia.org/ontology/type> ?type1, ?type2 .
  
  FILTER(?type1 = <http://dbpedia.org/resource/Societal_event> && ?type2 = <http://dbpedia.org/resource/Military_conflict>)
  FILTER(STRSTARTS(LCASE(?event), ""sinking of prince of wales and repulse""))

  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> .
    ?awardee <http://dbpedia.org/property/force> ?force .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
816,71,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify person decedent at Los Angeles
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> .
  
  # Step 2: Find the parent of the child of the spouse of Mariclare Costello
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  ?parent <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Identify the professional in the profession of Eugène Cattin
  ?professional <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> .
  
  # Step 4: Find the parent of this professional
  ?parentProfessional <http://dbpedia.org/ontology/parent> ?professional .

  # Ensure the decedent, parent from step 2, and parent from step 4 are the same entity
  FILTER (?decedent = ?parent && ?decedent = ?parentProfessional)

  # Step 5: Find an actor of a movie that is a work
  ?actor <http://dbpedia.org/ontology/starring> ?movie .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie104069976> .

  # Ensure the actor matches all conditions
  FILTER (?actor = ?decedent)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
159,67,test,"Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?result WHERE {
  ?work <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/George_Ducas> .
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .
  
  ?war <http://dbpedia.org/property/relatedEvent> <http://dbpedia.org/resource/Battle_of_Vienna> ;
       <http://dbpedia.org/ontology/show> ?show ;
       <http://dbpedia.org/ontology/event> ?event .

  ?result <http://dbpedia.org/ontology/commander> ?war .
  
  FILTER(?work = ?successor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
941,20,test,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v4 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify children of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> .
  
  # Step 2: Find the parent who is royalty for these children
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 3: Determine the spouse of this royal parent
  ?spouse1 <http://dbpedia.org/ontology/spouse> ?parent .

  # Step 4: Identify the child of Princess Antoinette who is royalty
  ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antoinette_of_Brunswick-Wolfenbüttel> .
  ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 5: Find the spouse of this royal child
  ?spouse2 <http://dbpedia.org/ontology/spouse> ?child2 .

  # Step 6: Find the child of the parent (from step 2) that matches the spouse from step 5
  ?result <http://dbpedia.org/ontology/birthParent> ?parent .
  FILTER (?spouse1 = ?spouse2)
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
119,19,test,"Give me the war of the commander in French Revolutionary Wars and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
SELECT ?war ?entity WHERE {
  # Find commanders in French Revolutionary Wars
  ?commander <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> .
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  
  FILTER regex(str(?war), ""French Revolutionary Wars"", ""i"")

  # Find Polish athletes from Łódź
  ?athlete <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Poland> ;
           <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Lodz> .

  # Determine their country of residence
  ?athlete <http://dbpedia.org/ontology/residence> ?residenceCountry .
  
  # Find entities associated with that country
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?residenceCountry .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
628,71,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Step 1: GS9 Member who is an artist and a musical artist
  ?gs9Member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  ?gs9Member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist100000001> .
  ?gs9Member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist100000045> .

  # Step 2: Associated Musical Artist
  ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?gs9Member .
  
  # Step 3: Band Member of the associated musical artist
  ?result <http://dbpedia.org/ontology/member> ?associatedArtist .

  OPTIONAL {
    # Step 4: Award that is a region, American, state, and settlement in New York (state)
    ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/AmericanState100000001> .
    ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlement100000001> .
    ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Region100000001> .
    ?award <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/New_York_(state)> .

    # Step 5: Awardee band
    ?awardeeBand <http://dbpedia.org/property/recipient> ?award .
    ?awardeeBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Band100000001> .

    # Step 6: Native person's birth name
    ?nativePerson <http://dbpedia.org/ontology/birthName> ?birthName .
    ?nativePerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist100000001> .
    ?nativePerson <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
    ?nativePerson <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Florida> .

    # Linking the awardee band to the native person
    ?awardeeBand <http://dbpedia.org/property/member> ?nativePerson .
  }
}
```",9,18,10,3,3,3,3,71,0,0,1,0,0.0,0
140,20,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Find John McDermott's death place and ensure it is a settlement
  <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Settlement> .

  # Find ruling political parties that are organizations in the death place
  ?party <http://dbpedia.org/ontology/member> ?result ;
         <http://dbpedia.org/ontology/location> ?deathPlace ;
         <http://dbpedia.org/ontology/type> ?type .
  FILTER(?type = <http://dbpedia.org/resource/Ruling_party> && 
          ?type = <http://dbpedia.org/resource/Organization>) .

  # Find wars related to Pickett's Charge and ensure the individual was a commander
  ?war <http://dbpedia.org/property/war> ?pickettsCharge .
  ?pickettsCharge <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Pickett's_Charge> .
  ?result <http://dbpedia.org/ontology/commander> ?war .
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
347,71,test,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  # Identify the war that is a societal event, an event, and a television show
  ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Societal_events> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Events> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Television_shows> .

  # Find the commander in this war who was part of the military force involved in the Algerian War
  ?result <http://dbpedia.org/property/commander> ?war .
  ?result <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/Algerian_War> .

  # Identify the child of the father of Maria Anna of Bavaria's royal child
  ?mariaAnna <http://dbpedia.org/property/birthDate> ""1574-01-01""^^xsd:date .
  ?royalChild <http://dbpedia.org/ontology/father> ?fatherOfRoyalChild .
  ?fatherOfRoyalChild <http://dbpedia.org/ontology/mother> ?mariaAnna .
  ?childOfFather <http://dbpedia.org/ontology/father> ?fatherOfRoyalChild .

  # Find the parent of Archduke Charles Joseph and identify their child
  ?archdukeCharlesJoseph <http://dbpedia.org/ontology/parent> ?parentOfArchduke .
  ?parentOfArchduke <http://dbpedia.org/ontology/child> ?childOfParent .

  # Combine these elements to find a commander who fits all criteria
  FILTER(?result = ?childOfFather && ?result = ?childOfParent)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
203,69,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify ""The Triple X's"" force or figure
  ?tripleX <http://dbpedia.org/ontology/militaryConflict> ?war1 .
  
  # Step 2: Find the commander of this war
  ?war1 <http://dbpedia.org/property/commander> ?commander .

  # Step 3: Identify the awardee of Knight Commander of the Order of the Bath
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  
  # Step 4: Find the force associated with this awardee
  ?force <http://dbpedia.org/property/militaryForce> ?awardee .

  # Step 5: Determine the war involving this force
  ?force <http://dbpedia.org/ontology/militaryConflict> ?war2 .
  
  # Step 6: Identify the commander of this second war
  ?war2 <http://dbpedia.org/property/commander> ?commander2 .

  # Step 7: Link to William Bayne (Royal Navy officer)
  ?bayne <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .
  ?bayne <http://dbpedia.org/ontology/militaryConflict> ?war3 .
  
  FILTER(?commander = ?commander2 && ?war3 = ?war2)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
737,67,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Child of the child (royalty) of parent of Archduchess Margarete Sophie of Austria
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Margarete_Sophie_of_Austria> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?parent .
  ?greatGrandchild <http://dbpedia.org/ontology/parent> ?grandchild .
  ?greatGrandChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""

  # Step 2: Predecessor of Carl, Duke of Württemberg
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .

  # Step 3: Child of the child of the child of Alexander of Württemberg (1804-1881)
  ?childOfAlexander <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)> .
  ?grandChildOfAlexander <http://dbpedia.org/ontology/parent> ?childOfAlexander .
  ?greatGrandChildOfAlexander <http://dbpedia.org/ontology/parent> ?grandChildOfAlexander .

  # Combine conditions
  FILTER (?result = ?greatGrandChild && ?result = ?predecessor && ?result = ?greatGrandChildOfAlexander)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
87,28,test,"Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?result WHERE {
  # Identify awardee from Janusz Kamiński's awards list
  ?awardee <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kami%C5%84ski> .
  
  # Find spouse of the awardee
  ?spouse <http://dbpedia.org/ontology/spouse> ?awardee .

  # Actor in a movie with Audrey Hepburn that is both a work and a film
  ?movie1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Audrey_Hepburn> .
  ?movie1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CreativeWork100000001> . # Assuming CreativeWork is the class for works
  ?movie1 <http://dbpedia.org/ontology/film> ?film1 .
  ?result <http://dbpedia.org/ontology/starring> ?movie1 .

  # Actor in a movie with Iliza Shlesinger that is both a work and a film
  ?movie2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> .
  ?movie2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CreativeWork100000001> . # Assuming CreativeWork is the class for works
  ?movie2 <http://dbpedia.org/ontology/film> ?film2 .
  ?result <http://dbpedia.org/ontology/starring> ?movie2 .

  FILTER (?spouse = ?result)
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
905,70,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Predecessor of Stephen V of Hungary
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Step 2: Child of the predecessor that is royalty
  ?child <http://dbpedia.org/ontology/family> ?predecessor .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 3: Parent of the father that is royalty
  ?father <http://dbpedia.org/ontology/family> ?child .
  ?grandparent <http://dbpedia.org/ontology/family> ?father .
  ?grandparent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 4: Spouse of Maria of Bytom
  ?spouseOfMaria <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  
  # Step 5: Father of Philip I, Prince of Taranto
  ?fatherOfPhilip <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
  
  # Step 6: Spouse of the father of Philip I
  ?spouseOfFather <http://dbpedia.org/ontology/spouse> ?fatherOfPhilip .
  
  # Final Connection: Child of the royal grandparent and spouse of the father's spouse
  ?result <http://dbpedia.org/ontology/family> ?grandparent .
  ?result <http://dbpedia.org/ontology/spouse> ?spouseOfFather .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
311,19,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M. and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find associated musical artist of R.E.M.
  <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/musicalArtist> ?associatedArtist .
  
  # Find writer(s) of the album Sappy
  OPTIONAL { 
    <http://dbpedia.org/resource/Sappy_(album)> <http://dbpedia.org/property/writer> ?writer .
    
    # Check if associated artist is a band member of the writer
    ?associatedArtist <http://dbpedia.org/ontology/member> ?band .
    ?band <http://dbpedia.org/ontology/member> ?writer .
  }
  
  # Ensure result is an artist
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
  
  FILTER(?associatedArtist = ?result)
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
80,69,test,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Golden Master
  <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
  ?result <http://dbpedia.org/property/profession> ?v1 .

  # Actor of the album of What You Know (T.I. song)
  OPTIONAL {
    <http://dbpedia.org/resource/What_You_Know_(song)> <http://dbpedia.org/ontology/inAlbum> ?album .
    ?result <http://dbpedia.org/ontology/starring> ?album .
  }

  # Actor of the movie with the author of Smartbomb
  OPTIONAL {
    <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?author .
    ?movie <http://dbpedia.org/property/author> ?author .
    ?result <http://dbpedia.org/ontology/starring> ?movie .
  }
}
```",8,8,9,3,3,3,3,71,0,0,4,0,0.0,0
159,68,test,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Part 1: Commander in a war (TV show & societal event) of Jean Baptist, Comte d'Arco
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Television_shows> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Societal_events> .
  ?war <http://dbpedia.org/ontology/commander> ?commander1 .
  ?commander1 <http://dbpedia.org/property/name> ""Jean Baptist, Comte d'Arco"" .

  # Part 2: Successor of commander (politician & office holder) in a force (event & military conflict) of Michał Kazimierz Pac
  ?force <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Military_conflicts> .
  ?force <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Events> .
  ?commander2 <http://dbpedia.org/ontology/commander> ?force .
  ?commander2 <http://dbpedia.org/property/politicalRole> ""politician"" .
  ?commander2 <http://dbpedia.org/property/officeHolder> ""true"" .
  ?commander2 <http://dbpedia.org/property/successor> ?successorCommander .
  ?force <http://dbpedia.org/ontology/commander> ""Michał Kazimierz Pac"" .

  # Part 3: Reference to the writer of the work of George Ducas
  ?work <http://dbpedia.org/ontology/author> ?writer .
  ?work <http://dbpedia.org/property/creator> ""George Ducas"" .

  # Combine results
  FILTER(?commander1 = ?successorCommander)
  BIND(?writer AS ?result)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,69,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of the administration, that is an event, of Anxo Quintana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v7 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Tenant of the administration that is Spanish and related to PSOE
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/residenceCountry> ?country .
    ?country <http://dbpedia.org/ontology/inhabitant> <http://dbpedia.org/resource/Álvaro_Quirós> .
  }
  
  # Office of the leader of an administration that is an event involving Anxo Quintana
  OPTIONAL {
    ?event <http://dbpedia.org/property/leader> ?result .
    ?event <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Anxo_Quintana> .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
782,69,test,"Give me the reference to the real name of the band of Kim Wilson and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
SELECT ?realName ?bandMember ?associatedArtist WHERE {
  # Real name of the band associated with Kim Wilson
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kim_Wilson> .
  OPTIONAL { 
    ?band <http://dbpedia.org/property/birthName> ?realName .
  }

  # Band member of Eric Clapton
  ?claptonBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Eric_Clapton> .
  ?claptonBand ?p ?bandMember .

  # Associated musical artist of Nick Curran
  ?nickCurran <http://www.w3.org/2000/01/rdf-schema#label> ""Nick Curran"" .
  OPTIONAL {
    ?nickCurran <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
  }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
361,27,test,"Give me the professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?result WHERE {
  # Professional in Actor
  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .

  # Actor of the Album (Film and Work) of Lasso the Moon
  OPTIONAL { 
    ?film <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/Lasso_the_Moon> .
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> . # Assuming Film is a subclass of yago:Film
    ?film <http://dbpedia.org/ontology/starring> ?result .
  }

  # Professional in the Alter Ego of The Shadow
  OPTIONAL { 
    ?alterEgo <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
    ?result <http://dbpedia.org/ontology/profession> ?alterEgo .
  }
}
```",5,7,6,2,3,2,3,28,0,15,2,0.0,0.0,0
39,69,test,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Find the producer of Coke Studio Philippines and their profession
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://dbpedia.org/property/profession> ?profession .

  # Find the band associated with Bob Thompson (musician) as his birth name
  OPTIONAL {
    <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/birthName> ""Bob Thompson"" .
    ?band <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Bob_Thompson_(musician)> .
  }

  # Find the alter ego of The Shadow
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  }
  
  # Match the professional with all criteria
  ?result <http://dbpedia.org/property/profession> ?profession .
  ?result <http://dbpedia.org/property/member> ?band .
  ?result <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}
```",8,9,9,3,3,3,3,71,0,0,4,0,0.0,0
23,27,test,Give me the entity in the country of Daniel Elahi Galán and party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Daniel Elahi Galán's country
  <http://dbpedia.org/resource/Daniel_El%C3%A1i_Gal%C3%A1n> <http://dbpedia.org/ontology/nationality> ?country .
  
  # Roy Barreras' party
  <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/property/politicalParty> ?party .

  # Sofía Petro's father and his party
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sof%C3%ADa_Petro> .
    ?father <http://dbpedia.org/property/politicalParty> ?party2 .
  }

  # Entity satisfying all conditions
  ?result <http://dbpedia.org/ontology/nationality> ?country .
  ?result <http://dbpedia.org/property/politicalParty> ?party .
  OPTIONAL { 
    ?result <http://dbpedia.org/property/politicalParty> ?party2 .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,68,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://dbpedia.org/property/father> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Philip, Despot of Romania's parent who is royalty
  ?parent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the father of that parent
  ?grandfather <http://dbpedia.org/ontology/spouse> ?parent .
  
  # Step 3: Determine the spouse of this grandparent
  ?spouse <http://dbpedia.org/ontology/spouse> ?grandfather .

  OPTIONAL {
    # Step 4: Identify Béla IV of Hungary's child who is royalty
    ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

    # Step 5: Find the parent of that child
    ?parent2 <http://dbpedia.org/ontology/birthPlace> ?child .

    # Step 6: Determine the father of this parent who is royalty
    ?grandfather2 <http://dbpedia.org/ontology/spouse> ?parent2 .
    
    OPTIONAL {
      # Step 7: Identify Maria of Bytom's spouse
      ?mariaSpouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .

      # Step 8: Find the parent of that spouse who is royalty
      ?royalParent <http://dbpedia.org/ontology/birthPlace> ?mariaSpouse .
      ?royalParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

      # Final condition: Match the spouse from step 3 with the royal parent from step 8
      FILTER(?spouse = ?royalParent)
    }
  }

  # Ensure the result is consistent across all conditions
  BIND(?spouse AS ?result)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
595,71,test,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Hillary Clinton's book
  ?book <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> .
  ?book a <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this class includes books

  # Step 2: Find the spouse of Hillary Clinton
  OPTIONAL {
    <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse a <http://dbpedia.org/class/yago/Politician100000001> . # Assuming this class includes politicians
    ?spouse <http://dbpedia.org/ontology/officeHolder> ?office .
  }

  # Step 3: Identify USS Arcadia (ID-1605) owner's war involvement
  OPTIONAL {
    ?owner <http://dbpedia.org/property/owns> <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> .
    ?war a <http://dbpedia.org/class/yago/Disease100000001> . # Assuming this class includes societal events/diseases
    ?owner <http://dbpedia.org/ontology/commanderInWar> ?war .
  }

  # Step 4: Find the author related to the societal event
  OPTIONAL {
    ?author <http://dbpedia.org/ontology/author> ?work .
    ?work a <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this class includes books
    ?war a <http://dbpedia.org/class/yago/Disease100000001> . # Assuming this class includes societal events/diseases
    ?author <http://dbpedia.org/ontology/warCommander> ?war .
  }

  # Step 5: Locate the resident of Chappaqua, New York
  OPTIONAL {
    ?resident <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
    ?resident a <http://dbpedia.org/class/yago/Politician100000001> . # Assuming this class includes politicians
    ?resident <http://dbpedia.org/ontology/officeHolder> ?office .
  }
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
609,70,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?governorBirthPlace ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Part 1: Birth place of the governor of Paulus Powell's birth region
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?region .
  ?region a <http://dbpedia.org/class/yago/AdministrativeRegion108069068> . # Assuming this class represents regions and administrative regions

  OPTIONAL {
    ?region <http://dbpedia.org/property/governor> ?governor .
    ?governor a <http://dbpedia.org/ontology/Politician> .
    ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
  }

  # Part 2: Birth place of the awardee related to Vince Gilligan
  OPTIONAL {
    <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/nominatedFor> ?award .
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .
  }

  # Part 3: Birth place of the American author referencing El Deafo
  OPTIONAL {
    <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/reference> ?reference .
    ?reference <http://dbpedia.org/ontology/author> ?author .
    ?author a <http://dbpedia.org/class/yago/USCitizen106237> . # Assuming this class represents American citizens
    ?author <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
89,70,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of the spouse (a royalty) of Saw Min Phyu
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?child <http://dbpedia.org/ontology/parent> ?spouse .

  # Step 2: Find the predecessor of this child
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  # Step 3: Identify the parent of Min Hla Htut from Pyakaung
  ?minHlaHtut <http://dbpedia.org/resource/Min_Hla_Htut> .
  ?parent <http://dbpedia.org/ontology/parent> ?minHlaHtut .

  # Step 4: Determine the spouse of the father (a royalty) of a royal child of Saw Shwe Khet
  ?royalChild <http://dbpedia.org/ontology/familyName> ""Saw Shwe Khet"" .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?father <http://dbpedia.org/ontology/parent> ?royalChild .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?spouse2 <http://dbpedia.org/ontology/spouse> ?father .

  # Step 5: Find the common entity
  FILTER (?predecessor = ?child && ?child = ?parent && ?spouse2 = ?result)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
263,27,test,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
SELECT ?result WHERE {
  # Find parent of Hon. Mary Frances Bowes-Lyon
  ?person <http://dbpedia.org/ontology/birthName> ""Hon. Mary Frances Bowes-Lyon""@en .
  ?parent <http://dbpedia.org/ontology/child> ?person .

  # Find parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?claudelord <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> .
  ?child <http://dbpedia.org/ontology/parent> ?claudelord .
  ?parent2 <http://dbpedia.org/ontology/child> ?child .

  # Ensure the parent is native to Middlesex
  FILTER EXISTS { 
    ?result <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Middlesex> .
  }

  # Combine conditions to find a common parent
  VALUES (?parent) { ?parent2 }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
557,69,test,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?professional WHERE {
  # Step 1: Identify Kent Allard (print) as a fictional character
  ?kentAllard <http://dbpedia.org/ontology/fictionalCharacter> ?fictionalCharacter .
  
  # Step 2: Find the alter ego of this reference
  OPTIONAL { 
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo .
    
    # Step 3: Identify professional in the alter ego
    ?professional <http://dbpedia.org/ontology/profession> ?alterEgo .
  }
  
  # Step 4: Find actor of High Society Blues
  ?highSocietyBlues <http://dbpedia.org/ontology/starring> ?actor .
  
  # Step 5: Identify producer of the claim to fame (movie and work)
  OPTIONAL { 
    ?claimToFame <http://dbpedia.org/ontology/producer> ?producer .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie104930069> . # Assuming this class represents movies
    ?claimToFame <http://dbpedia.org/ontology/work> ?work .
  }
  
  # Step 6: Identify producer of the claim to fame (work) for Cora Sue Collins
  OPTIONAL { 
    ?coraSueCollinsWork <http://dbpedia.org/ontology/producer> ?sameProducer .
    ?coraSueCollinsWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CulturalOrArtisticProduction> . # Assuming this class represents works
  }
  
  FILTER (?producer = ?sameProducer)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
769,20,test,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?athlete WHERE {
  # Step 1: Get Tony Hollings' birthdate
  <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Step 2: Find athlete born on that date who is a soccer player and sports manager
  ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?athlete <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Athlete> .
  ?athlete <http://dbpedia.org/property/profession> ?profession .
  FILTER (
    (CONTAINS(LCASE(?profession), ""soccer player"") && CONTAINS(LCASE(?profession), ""sports manager""))
  )

  # Step 3: Identify the manager of Hong Kong C
  <http://dbpedia.org/resource/Hong_Kong_C> <http://dbpedia.org/ontology/manager> ?manager .

  # Step 4: Find players managed by this manager who are also athletes fitting criteria from step 2
  ?player <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Hong_Kong_C> .
  ?player <http://dbpedia.org/ontology/coach> ?manager .
}
```",6,16,7,3,2,3,2,20,0,0,2,0,0.0,0
859,19,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Member of Khlyst who is a musical artist
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Khlyst_(band)> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069365> .

  # Step 2: Associated musical artist of this member
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist1 .
  
  # Step 3 & 4: Burnt by the Sun as a band and group, find associated musical artist
  ?burntByTheSun <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> .
  ?burntByTheSun <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup108069365> .
  ?burntByTheSun <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist2 .

  # Step 5: Band member of the associated musical artist from Burnt by the Sun
  ?associatedArtist2 <http://dbpedia.org/ontology/member> ?result .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
557,68,test,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?result WHERE {
  # Find actor of Johnny Doughboy
  <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Professional involved with alter ego related to Kent Allard (print)
  ?fictionalCharacter <http://dbpedia.org/property/reference> ""Kent Allard (print)""@en .
  ?alterEgo <http://dbpedia.org/property/alterEgo> ?fictionalCharacter .
  ?professional <http://dbpedia.org/ontology/profession> ?alterEgo .

  # Producer of the claim to fame for the actor
  ?actorClaimToFame <http://dbpedia.org/ontology/work> ?actor .
  ?producer1 <http://dbpedia.org/ontology/producer> ?actorClaimToFame .

  # Producer of the claim to fame for Janet Gaynor
  ?janetGaynorWork <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/Janet_Gaynor> .
  ?producer2 <http://dbpedia.org/ontology/producer> ?janetGaynorWork .

  # Ensure the producer is the same for both claims to fame
  FILTER (?producer1 = ?result && ?producer2 = ?result)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
203,70,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify the Awardee of Knight Commander of the Order of the Bath
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .

  # Step 2: Find the military force in a war where this awardee served as a commander
  ?war <http://dbpedia.org/ontology/militaryConflict> ?militaryForce .
  ?war <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?referenceToWilliamBayne .
  
  # Step 3: Ensure the war is both a military conflict and an event
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069834> ;
       rdf:type <http://dbpedia.org/ontology/Event> .

  # Step 4: Find the commander of this war who is also linked to William Bayne
  ?awardee <http://dbpedia.org/property/commander> ?war .
  
  # Step 5: Identify the military force in a war involving the 30th (Cambridgeshire) Regiment of Foot
  ?anotherWar <http://dbpedia.org/ontology/militaryConflict> ?militaryForce2 .
  ?anotherWar rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069834> ;
              rdf:type <http://dbpedia.org/ontology/Event> .

  # Step 6: Find the commander of this war
  ?commander <http://dbpedia.org/property/commander> ?anotherWar .
  
  # Step 7: Ensure the regiment is involved in this war
  ?anotherWar <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> .

  # Final step: Match military forces from both parts of the query
  FILTER(?militaryForce = ?militaryForce2)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,70,test,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
SELECT ?result WHERE {
  # Professional in the profession of Sam Concepcion
  ?profession <http://dbpedia.org/ontology/name> ""Sam Concepcion"" .
  ?result <http://dbpedia.org/ontology/profession> ?profession .

  # Band of the person born as Bob Thompson (musician)
  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ""Bob Thompson"" .
    ?person <http://dbpedia.org/ontology/musicalArtist> [] .
    ?band <http://dbpedia.org/ontology/member> ?person .
    ?result <http://dbpedia.org/ontology/member> ?band .
  }

  # Professional in the alter ego of a fictional character created by Walter B. Gibson
  OPTIONAL {
    ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
    ?character <http://www.w3.org/2002/07/owl#sameAs> ?fictionalCharacter .
    ?fictionalCharacter a <http://dbpedia.org/class/yago/FictionalCharacters100000001> . # Assuming this class represents fictional characters
    ?alterEgo <http://dbpedia.org/ontology/alterEgo> ?character .
    ?result <http://dbpedia.org/ontology/profession> ?alterEgo .
  }
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
737,68,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria and child of the child of the child of Alexander of Württemberg (1804-1881).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Predecessor of the child of the spouse (royalty) of Archduchess Helena of Austria
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  # Child of the child (royalty) of Archduke Charles Louis of Austria
  ?grandchild <http://dbpedia.org/ontology/parent> ?child2 .
  ?child2 <http://dbpedia.org/ontology/parent> ?royalChild .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?royalChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .

  # Child of the child of the child of Alexander of Württemberg (1804-1881)
  ?greatGrandchild <http://dbpedia.org/ontology/parent> ?grandChild2 .
  ?grandChild2 <http://dbpedia.org/ontology/parent> ?child3 .
  ?child3 <http://dbpedia.org/ontology/parent> ?child4 .
  ?child4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)> .

  # The result must satisfy all conditions
  FILTER (?predecessor = ?result && ?grandchild = ?result && ?greatGrandchild = ?result)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
557,70,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?producer WHERE {
  # Actor of ""High Society Blues""
  ?actor1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/High_Society_Blues> .
  
  # Claim to fame (movie/work) of the actor of ""High Society Blues""
  ?work1 <http://dbpedia.org/property/claimToFame> ?actor1 .
  ?work1 a <http://dbpedia.org/ontology/Film> ; 
         <http://dbpedia.org/ontology/producer> ?producer .

  # Professional in the alter ego of ""The Shadow""
  ?alterEgo <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  ?professional <http://dbpedia.org/property/occupation> ?alterEgo .
  
  # Actor of ""Johnny Doughboy""
  ?actor2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Johnny_Doughboy> .

  # Claim to fame (work) of the actor of ""Johnny Doughboy""
  ?work2 <http://dbpedia.org/property/claimToFame> ?actor2 .
  ?work2 a <http://dbpedia.org/ontology/CreativeWork> ; 
         <http://dbpedia.org/ontology/producer> ?producer .

  # Ensure the same producer is involved in all conditions
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
386,27,test,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> .
  ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Russian_Empire> ;
          <http://dbpedia.org/ontology/involvement> ?war .
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/receivedAward> ?award25 .
    FILTER (str(?award25) = ""25"")
    ?award25 <http://dbpedia.org/property/war> ?war .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
103,67,test,"Give me the actor of Dispatches from Elsewhere and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . },"```sparql
SELECT ?actor WHERE {
  # Actor of Dispatches from Elsewhere
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Professional in the same profession as a politician involved with Ab Kya Hoga
  OPTIONAL { 
    ?politician <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Ab_Kya_Hoga> .
    ?politician <http://dbpedia.org/ontology/profession> ?profession .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
  }
  
  # Professional in the alter ego of The Shadow (video game) series, which is a comics character
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?alterEgo <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""comics character""
    ?actor <http://dbpedia.org/ontology/profession> ?alterEgo .
  }
}
```",7,9,8,3,3,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
628,67,test,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida and band member of Uncle Murda.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
SELECT ?native ?person WHERE {
  # Step 1: Find a band from New York that has won an award
  ?band <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> .
  ?band <http://dbpedia.org/ontology/award> ?award .

  # Step 2: Identify the native region of the awardee
  ?award <http://dbpedia.org/ontology/nativeRegion> ?native .
  ?native <http://www.w3.org/2000/01/rdf-schema#label> ?regionLabel .
  FILTER (CONTAINS(LCASE(?regionLabel), ""american"") && CONTAINS(LCASE(?regionLabel), ""state"") && CONTAINS(LCASE(?regionLabel), ""settlement""))

  # Step 3: Find a person born in Florida who is a musical artist
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER (CONTAINS(LCASE(?birthName), LCASE(?regionLabel)))

  # Step 4: Ensure this person is a band member of Uncle Murda
  ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Uncle_Murda> .

}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,68,test,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v7 <http://dbpedia.org/property/author> ?v0 . ?v5 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?commander WHERE {
  # Step 1: Find the resident of Chappaqua, New York who is a politician and office holder
  ?resident <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?resident <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?resident <http://www.wikidata.org/entity/P39> ?office .

  # Step 2: Find works authored by this resident
  ?work <http://dbpedia.org/ontology/author> ?resident .
  ?work a <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Book or written work

  # Step 3: Identify the author of those works
  ?author <http://dbpedia.org/ontology/authored> ?work .

  # Step 4: Check if this author has a spouse who is a politician and office holder
  OPTIONAL {
    ?author <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
    ?spouse <http://www.wikidata.org/entity/P39> ?office2 .
  }

  # Step 5: Locate a commander in the war that is both a disease and societal event related to the US Navy
  ?war a <http://dbpedia.org/class/yago/Disease100000001> . # Disease
  ?war a <http://dbpedia.org/class/yago/SocietalEvent100000001> . # Societal Event
  ?commander <http://dbpedia.org/ontology/commandedMilitaryUnit> ?unit .
  ?unit <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States_Navy> .

  FILTER(?resident = <http://dbpedia.org/resource/Hillary_Clinton>) # Assuming Hillary Clinton is the resident
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
89,67,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify child of Saw Shwe Khet who is royalty
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 2: Find the father of this royal child
  ?father <http://dbpedia.org/ontology/parent> ?child .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Identify the spouse of this father
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .

  # Step 4: Ensure the individual is a child of Saw Min Hla
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .
  
  # Linking result to spouse from step 3
  FILTER(?spouse = ?result)

  # Step 5: Predecessor condition
  OPTIONAL {
    ?spousePhyu <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
    ?childSpouse <http://dbpedia.org/ontology/parent> ?spousePhyu .
    ?result <http://dbpedia.org/ontology/successor> ?childSpouse .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
293,70,test,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify party member in Central, Louisiana
  ?person <http://dbpedia.org/ontology/memberOf> ?party .
  ?party <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Central,_Louisiana> .

  # Step 2: Find spouse of an actor from Nat Levine's films
  ?film <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> .
  ?actor <http://dbpedia.org/ontology/starring> ?film .
  ?person <http://dbpedia.org/property/spouse> ?actor .

  # Step 3: Match birth name of Tisha Sterling's parent
  ?parent <http://dbpedia.org/ontology/birthName> ?birthName .
  ?tisha <http://dbpedia.org/resource/Tisha_Sterling> <http://dbpedia.org/ontology/parent> ?parent .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
80,70,test,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?result WHERE {
  # Actor of a movie featuring T.I.
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  ?movie <http://dbpedia.org/property/contributor> <http://dbpedia.org/resource/T.I.> .

  # Actor or contributor to an album related to a song by T.I.
  OPTIONAL {
    ?album <http://dbpedia.org/property/contributor> ?result .
    ?song <http://dbpedia.org/ontology/lyricist> <http://dbpedia.org/resource/T.I.> .
    ?album <http://dbpedia.org/ontology/song> ?song .
  }

  # Professional involvement with ""The Golden Master"" alter ego
  OPTIONAL {
    ?result <http://dbpedia.org/property/occupation> ?v1 .
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
  }
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
143,20,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Cynthia Morgan's birth name
  <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?birthName .
  
  # Step 2: Find associated musical artists of Cynthia Morgan
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?birthName .

  # Step 3: Identify actor in a show/movie with Afeez Oyetoro
  OPTIONAL {
    ?show <http://dbpedia.org/ontology/starring> ?result .
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> .
    ?show <http://www.w3.org/2002/07/owl#sameAs> ?movie . # Assuming sameAs links shows to movies
  }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
258,20,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?almaMater ?foundingDate WHERE {
  # Alma Mater for Eleonora Menicucci
  <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/politician> ?x .
  ?x <http://dbpedia.org/ontology/birthName> ""Eleonora Menicucci"" .
  ?x <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Alma Mater for Luiza Erundina
  <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/politician> ?y .
  ?y <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Ensure alma mater is a university, organization, and educational institution
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/University108069068> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation4650672> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalInstitution108069068> .

  # Get the founding date of the alma mater
  ?almaMater <http://dbpedia.org/property/foundingDate> ?foundingDate .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
78,27,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the writer of Wizards of Waverly Place (soundtrack)
  ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> .
  
  # Step 2: Ensure they are a musical artist and an artist
  ?writer <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (CONTAINS(LCASE(?v1), ""musical artist"") && CONTAINS(LCASE(?v1), ""artist""))
  
  # Step 3: Check association with Stuart Tosh
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stuart_Tosh> .
  
  # Step 4: Verify band membership related to David Paton's associated artists
  ?bandMember <http://dbpedia.org/ontology/bandMember> ?result .
  ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/David_Paton> .
  
  # Ensure the writer is the same as the band member
  FILTER (?writer = ?bandMember)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
258,19,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?almaMater ?foundingDate WHERE {
  # Alma Mater of Eleonora Menicucci
  <http://dbpedia.org/resource/Eleonora_Menicucci> 
    <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
    <http://dbpedia.org/property/almaMater> ?almaMater .

  # Establishment Date of Federal University of Paraíba
  <http://dbpedia.org/resource/Federal_University_of_Para%C3%ADba> 
    <http://dbpedia.org/ontology/foundingDate> ?foundingDate .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
78,28,test,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Stuart Mcbeath Tosh as a musical artist
  ?stuart <http://www.w3.org/2000/01/rdf-schema#label> ""Stuart Mcbeath Tosh""@en .
  ?stuart <http://dbpedia.org/ontology/birthName> ""Stuart Mcbeath Tosh"" .
  ?stuart <http://dbpedia.org/ontology/occupation> ?v1 .

  # Step 2: Find associated musical artist of Stuart
  ?associatedArtist <http://dbpedia.org/property/associatedBandMember> ?stuart .
  
  # Step 3: Identify David Paton's associated musical artist and find common link
  ?davidPaton <http://www.w3.org/2000/01/rdf-schema#label> ""David Paton""@en .
  ?davidAssociatedArtist <http://dbpedia.org/property/associatedBandMember> ?davidPaton .

  # Step 4: Find writer of Wizards of Waverly Place soundtrack
  ?soundtrackWriter <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> .
  ?soundtrackWriter <http://dbpedia.org/ontology/occupation> ?v2 .

  # Find associated musical artist of the soundtrack writer
  ?associatedSoundtrackArtist <http://dbpedia.org/property/associatedBandMember> ?soundtrackWriter .

  # Final condition: The result should be common in all associations
  FILTER (?result = ?associatedArtist && ?result = ?davidAssociatedArtist && ?result = ?associatedSoundtrackArtist)
}
```",6,9,7,2,3,2,3,28,0,0,2,0,0.0,0
345,9,test,"Give me the reference to the name of Mitaka, Tokyo and region of the time zone of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v3 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
SELECT ?mitakaUri ?region WHERE {
  ?mitakaUri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Tokyo> .
  ?mitakaUri rdfs:label ""Mitaka""@en .

  OPTIONAL {
    ?timeZone <http://www.w3.org/2006/time#during> ?region .
    ?timeZone <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
  }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
353,70,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Constance of Burgundy's spouse who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find their child who is royalty
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Determine the father of this child
  ?father <http://dbpedia.org/ontology/birthChild> ?child .

  # Step 4: Identify reference to William I and find the child who is royalty and an office holder
  ?reference <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?reference <http://dbpedia.org/ontology/officeHolder> ?office .
  ?child2 <http://dbpedia.org/ontology/birthParent> ?reference .
  ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 5: Find Roger III, Duke of Apulia's parent
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .

  # Step 6: Combine conditions to find the final result
  ?result <http://dbpedia.org/ontology/birthParent> ?parent .
  FILTER (?result = ?father && ?result = ?child2)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
492,28,test,Give me the death place of the actor of Aladdin (1958 film) and death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?actor ?film ?deathPlace WHERE {
  {
    <http://dbpedia.org/resource/Aladdin_(1958_film)> dbo:starring ?actor .
    ?actor dbo:deathPlace ?deathPlace .
    BIND(""Aladdin (1958 film)"" AS ?film)
  }
  UNION
  {
    <http://dbpedia.org/resource/Color_Me_Dead> dbo:starring ?actor .
    ?actor dbo:deathPlace ?deathPlace .
    BIND(""Color Me Dead"" AS ?film)
  }
  UNION
  {
    <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> dbo:starring ?actor .
    ?actor dbo:deathPlace ?deathPlace .
    BIND(""The Sky Ranger (1928 film)"" AS ?film)
  }
}
```",6,6,7,2,3,2,3,28,1,19,0,0.05,1.0,0.09523809523809523
737,71,test,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v7 . ?v8 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Alexander of Württemberg's great-great-grandchild
  ?grandparent <http://dbpedia.org/ontology/birthName> ""Alexander of Württemberg (1804-1881)"" .
  ?parent1 <http://dbpedia.org/ontology/parent> ?grandparent .
  ?child1 <http://dbpedia.org/ontology/parent> ?parent1 .
  ?parent2 <http://dbpedia.org/ontology/parent> ?child1 .
  ?child2 <http://dbpedia.org/ontology/parent> ?parent2 .

  # Step 2: Archduchess Margarete Sophie of Austria's grandchild
  ?grandparentSophie <http://dbpedia.org/ontology/birthName> ""Archduchess Margarete Sophie of Austria"" .
  ?parentSophie <http://dbpedia.org/ontology/parent> ?grandparentSophie .
  ?grandchildSophie <http://dbpedia.org/ontology/parent> ?parentSophie .

  # Step 3: Ensure both are royalty
  ?result IN (?child2, ?grandchildSophie) .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 4: Predecessor of Archduchess Helena's spouse's child
  OPTIONAL {
    ?spouseHelena <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
    ?childSpouse <http://dbpedia.org/ontology/parent> ?spouseHelena .
    ?result <http://dbpedia.org/ontology/successor> ?childSpouse .
  }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
375,27,test,Give me the war of the child of Toyotomi Hideyoshi and war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Wars involving Toyotomi Hideyoshi's children
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Toyotomi_Hideyoshi> .
  ?child <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?child <http://dbpedia.org/ontology/war> ?war .

  # Wars involving the person born as Koichirō
  ?person <http://dbpedia.org/property/birthName> ""Koichirō"" .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?person <http://dbpedia.org/ontology/war> ?war .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
19,9,test,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in the birth name of John Boxer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Find spouse of Caroline Louise Bevan Symonds
  <http://dbpedia.org/resource/Caroline_Louise_Bevan_Symonds> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Check if this spouse has a professional connection with John Boxer's birth name
  ?result <http://dbpedia.org/property/profession> ?v1 .
  <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?birthName .
  
  FILTER(?spouse = ?result)
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
198,70,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find person deceased on 1850-08-05
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  
  # Step 2: Identify Quincy Adams Gillmore's award and its awardee
  ?award <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
  ?award <http://dbpedia.org/ontology/recipient> ?otherAwardee .

  # Step 3: Determine the war related to the Medal of Honor awardee
  ?medalOfHonorAward <http://dbpedia.org/property/awardee> ?otherAwardee .
  ?medalOfHonorAward <http://dbpedia.org/ontology/war> ?war .

  # Step 4: Locate the birthplace settlement that is American
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace a <http://dbpedia.org/class/yago/SettlementsInTheUnitedStatesOfAmerica> .
  
  BIND(?birthPlace AS ?result)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
270,9,test,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at the birth place, that is a settlement, of Mark Tournier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Jane_Low> .
  ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  
  OPTIONAL {
    <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER (isBlank(?birthPlace) || (<http://www.w3.org/2002/07/owl#sameAs> ?birthPlace <http://dbpedia.org/ontology/Settlement>) )
    ?result <http://dbpedia.org/ontology/deathPlace> ?birthPlace .
  }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
742,20,test,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/property/residence> ?v4 . }","```sparql
SELECT ?birthplace WHERE {
  # Find a region in Eastern European Time
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> .
  
  # Find residents of this region and their birthplaces
  ?resident <http://dbpedia.org/ontology/residence> ?region .
  ?resident <http://dbpedia.org/ontology/birthPlace> ?birthplace .

  # Find alumni of Пловдивски университет „Паисий Хилендарски“ and their birthplaces
  ?alumnus <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Пловдивски_университет_„Паисий_Хилендарски“> .
  ?alumnus <http://dbpedia.org/ontology/birthPlace> ?birthplace .

}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
687,69,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
SELECT ?person WHERE {
  # Find person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  ?marceloSarmiento <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person1 <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  # Ensure the person is both a soccer player and manager
  ?person1 <http://dbpedia.org/property/profession> ?profession1 .
  FILTER (CONTAINS(LCASE(?profession1), ""soccer player"") && CONTAINS(LCASE(?profession1), ""manager""))
  
  # Find athlete born on Marty Pollio's birthday
  ?martyPollio <http://dbpedia.org/ontology/birthDate> ?birthDate2 .
  ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate2 .

  # Check if the person played for this athlete's team
  OPTIONAL {
    ?person1 <http://dbpedia.org/ontology/team> ?team .
    ?athlete <http://dbpedia.org/ontology/team> ?team .
  }

  # Find actor who is a soccer player and athlete in ""All or Nothing: Manchester City""
  ?actor <http://dbpedia.org/property/profession> ?profession2 .
  FILTER (CONTAINS(LCASE(?profession2), ""soccer player"") && CONTAINS(LCASE(?profession2), ""athlete""))
  
  # Ensure the actor is from ""All or Nothing: Manchester City""
  ?actor <http://dbpedia.org/ontology/appearsIn> <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> .

  # Check if the person played for this actor's team
  OPTIONAL {
    ?person1 <http://dbpedia.org/ontology/team> ?team2 .
    ?actor <http://dbpedia.org/ontology/team> ?team2 .
  }

  BIND(?person1 AS ?person)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
668,71,test,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v8 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
SELECT ?result WHERE {
  # Person born as the birth name of $pacely
  ?person1 <http://dbpedia.org/ontology/birthName> ""Pacely"" .
  
  # Person born as the birth name of a native artist from Central Region, Ghana
  ?person2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> ;
           <http://dbpedia.org/property/nationality> ""Ghanaian"" .
  
  # Professional in the profession of the writer of The Live Anthology
  ?writer <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/The_Live_Anthology> ;
          <http://dbpedia.org/ontology/profession> ?profession .
  
  ?result <http://dbpedia.org/ontology/profession> ?profession .

  # Associated musical artist
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
159,70,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/show> ?tvShow .
  ?war <http://dbpedia.org/property/event> ?societalEvent .
  
  ?commander <http://dbpedia.org/ontology/commandedMilitaryForce> ?battleOfViennaForce .
  ?battleOfViennaForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> .

  ?commander <http://dbpedia.org/property/referenceToWork> ?ducasWork .
  ?ducasWork <http://dbpedia.org/property/writtenBy> <http://dbpedia.org/resource/George_Ducas> .

  ?successor <http://dbpedia.org/ontology/successor> ?commander .
  ?successor <http://dbpedia.org/ontology/politician> true .
  ?successor <http://dbpedia.org/ontology/officeHolder> true .
  
  ?russianPolishWar <http://dbpedia.org/property/conflict> ?successor .
  ?russianPolishWar <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
513,20,test,"Give me the entity in the award of the reference to George Hamilton Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/leader> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/residence> ?result . }","```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/receipient> <http://dbpedia.org/resource/George_Hamilton_Cameron> .
  ?partyLeader <http://dbpedia.org/property/residence> ?residence .
  ?party <http://dbpedia.org/ontology/politicalParty> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation100000000> .
  ?result <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/George_Savage_(politician)> .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
347,70,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify Maria Anna of Bavaria's royal child
  ?maria <http://dbpedia.org/property/birthYear> ""1574"" .
  ?maria <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q5> . # Assuming Q5 is the identifier for ""human""
  ?child <http://dbpedia.org/ontology/parent> ?maria .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find this child's father
  ?father <http://dbpedia.org/ontology/spouse> ?maria .
  ?child <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Identify Archduke Charles Joseph of Austria's parent
  ?archduke <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .
  ?parent <http://dbpedia.org/ontology/child> ?archduke .

  # Step 4: Find the child of this parent who is a commander in relevant events
  OPTIONAL {
    ?event <http://dbpedia.org/property/type> ""war"" .
    ?event <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q1180376>, <http://www.wikidata.org/entity/Q11424>, <http://www.wikidata.org/entity/Q2343759> . # Assuming these are identifiers for societal event, general event, and television show
    ?event <http://dbpedia.org/property/involvesMilitaryUnit> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
    ?commander <http://dbpedia.org/ontology/commander> ?event .
    ?commander <http://dbpedia.org/ontology/father> ?parent .
  }

  # Final result
  BIND(?father AS ?result)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,69,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find person decedent at Los Angeles
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> .
  
  # Step 2: Identify Mariclare Costello's spouse and their child, then the parent of that child
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  ?person2 <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Identify the professional in Photographer
  ?photographer <http://dbpedia.org/property/occupation> ""Photographer"" .
  ?person3 <http://dbpedia.org/ontology/parent> ?photographer .

  # Combine conditions: The person from step 1 should be both ?person2 and ?person3
  FILTER (?person = ?person2 && ?person = ?person3)

  # Step 4: Find the actor of a movie that is a work involving this person
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER CONTAINS(LCASE(?label), ""work"") # Assuming the label contains ""work""
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
871,70,test,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Edward Stanley's child
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  
  # Step 2: Find the parent of that child who is a politician and office holder
  ?spouse <http://dbpedia.org/ontology/spouse> ?child .
  ?spouse <http://dbpedia.org/property/politician> true .
  ?spouse <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 3: Find the awardee of Commander of the Royal Victorian Order
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
    ?spouse <http://dbpedia.org/ontology/birthParent> ?awardee .
  }

  # Step 4: Find the father of a politician who is an alumnus of Eton College
  OPTIONAL {
    ?politician <http://dbpedia.org/property/politician> true .
    ?alumnus <http://dbpedia.org/property/alumnusOf> <http://dbpedia.org/resource/Eton_College> .
    ?politician <http://dbpedia.org/ontology/birthParent> ?alumnus .
    ?spouse <http://dbpedia.org/ontology/birthParent> ?politician .
  }

  # Result is the parent meeting all conditions
  BIND(?spouse AS ?result)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
472,27,test,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . }","```sparql
SELECT ?person ?administration WHERE {
  # Administration of Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?person <http://dbpedia.org/ontology/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/administration> ?administration .
  }

  # Administration of the Mayor of Duchy of Schleswig and territory administered from Copenhagen
  ?mayor <http://dbpedia.org/ontology/mayorFor> <http://dbpedia.org/resource/Duchy_of_Schleswig> .
  OPTIONAL {
    ?territory <http://dbpedia.org/property/administeredFrom> <http://dbpedia.org/resource/Copenhagen> .
    ?mayor <http://dbpedia.org/ontology/administers> ?territory .
    ?mayor <http://dbpedia.org/property/administration> ?administration .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
295,19,test,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of the producer of Storm in a Teacup (film).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?writer WHERE {
  # Find the producer of ""Storm in a Teacup""
  <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/property/producer> ?producer .
  
  # Determine the birthplace of this producer
  ?producer <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Find musical works by Apache Indian and their writers
  ?musicalWork <http://dbpedia.org/ontology/writtenBy> ?writer ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  
  # Ensure Apache Indian is associated with the musical work
  ?musicalWork <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Apache_Indian> .

  # Check if the writer is native to the birthplace of the producer
  ?writer <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
687,68,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v5 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?person ?team WHERE {
  # Step 1: Find person born on 1979-11-03 who is both a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:soccerPlayer true .
  ?person dbo:soccerManager true .

  # Step 2: Identify the team of this person
  ?person dbo:team ?team .

  # Step 3: Find an actor who is a soccer player and athlete, associated with a film by Manuel Huerga
  ?actor dbo:birthDate ?martyBirthDate .
  ?film dbo:director <http://dbpedia.org/resource/Manuel_Huerga> .
  ?film dbo:work true .
  ?film dbo:starring ?actor .
  ?actor dbo:soccerPlayer true .
  ?actor dbo:athlete true .

  # Step 4: Ensure the actor is also a player for the same team
  ?actor dbo:team ?team .

  # Get Marty Pollio's birth date
  <http://dbpedia.org/resource/Marty_Polio> dbo:birthDate ?martyBirthDate .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
59,9,test,"Give me the native of the residence of David Luckman and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find David Luckman's residence and its native place
  <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://dbpedia.org/property/nationality> ?nativePlace .

  # Step 2: Find Jamie McCunnie's team and ensure it is a sports club and soccer club
  <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?team .
  ?team <http://www.w3.org/2000/01/rdf-schema#label> ""sports club""@en .
  ?team <http://dbpedia.org/ontology/sportsTeam> ?soccerClub .

  # Step 3: Find the manager of this team
  ?soccerClub <http://dbpedia.org/ontology/coach> ?result .

  # Ensure the result is native to David Luckman's residence
  ?result <http://dbpedia.org/property/nationality> ?nativePlace .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
263,28,test,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?result WHERE {
  # Find children of Claude Bowes-Lyon
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> .
  
  # Identify their parents
  ?result <http://dbpedia.org/ontology/child> ?child .

  # Ensure the parent is native to a region and country of William Gayner's birthplace
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?regionLabel .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
  ?result <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Ensure the parent is also a parent of Hon. Mary Frances Bowes-Lyon
  ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Hon._Mary_Frances_Bowes-Lyon> .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
557,67,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
SELECT ?producer WHERE {
  # Find the actor of ""High Society Blues""
  <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor1 .
  
  # Find a work that is a claim to fame for this actor and its producer
  ?work1 <http://dbpedia.org/property/claimToFame> ?actor1 ;
         <http://dbpedia.org/ontology/work> ?workType1 .
  FILTER(?workType1 IN (<http://dbpedia.org/resource/Movie>, <http://dbpedia.org/resource/Work>))
  
  ?work1 <http://dbpedia.org/ontology/producer> ?producer .

  # Find the actor of ""Johnny Doughboy""
  <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor2 .
  
  # Find a work that is a claim to fame for this second actor and its producer
  ?work2 <http://dbpedia.org/property/claimToFame> ?actor2 ;
         <http://dbpedia.org/ontology/work> ?workType2 .
  FILTER(?workType2 IN (<http://dbpedia.org/resource/Work>))
  
  ?work2 <http://dbpedia.org/ontology/producer> ?producer .

  # Optional: Check for any professional involvement
  OPTIONAL {
    ?actor1 <http://dbpedia.org/property/profession> ?profession .
    ?actor2 <http://dbpedia.org/property/profession> ?profession .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
668,70,test,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify the writer of ""The Live Anthology""
  <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/ontology/writer> ?writer .
  
  # Step 2: Find a professional in the same profession as the writer
  ?result <http://dbpedia.org/property/profession> ?profession .
  FILTER (?profession = ""Writer"")
  
  # Step 3: Ensure this person is also a musical artist
  ?result <http://dbpedia.org/ontology/musicalArtist> ?v1 .

  # Step 4: Find an artist from Central Region, Ghana with the same birth name
  ?artist <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> .
  ?artist <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> .
  ?artist <http://dbpedia.org/ontology/birthName> ?birthName .

  # Ensure the result has the same birth name
  ?result <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 5: Check association with Elorm Kabu Amenyah
  OPTIONAL {
    ?elorm <http://dbpedia.org/resource/Elorm_Kabu_Amenyah> .
    ?elorm <http://dbpedia.org/property/associatedMusicalArtist> ?result .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,19,test,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . }","```sparql
SELECT ?author WHERE {
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Vera_Lynn> .
  ?movie rdf:type <http://dbpedia.org/class/yago/Film4896> . # Assuming Film is a subclass of yago:Film4896
  ?movie rdf:type <http://dbpedia.org/class/yago/TelevisionShow1089> . # Assuming TelevisionShow is a subclass of yago:TelevisionShow1089
  
  OPTIONAL { 
    ?movie <http://purl.org/dc/terms/creator> ?author .
  }
  
  OPTIONAL {
    ?artist rdf:type <http://dbpedia.org/class/yago/MusicalArtist1000> . # Assuming MusicalArtist is a subclass of yago:MusicalArtist1000
    ?artist rdf:type <http://dbpedia.org/class/yago/Artist1001> . # Assuming Artist is a subclass of yago:Artist1001
    ?location <http://dbpedia.org/ontology/nationality> ?artist .
    ?location rdf:type <http://dbpedia.org/class/yago/Settlement1002> . # Assuming Settlement is a subclass of yago:Settlement1002
    ?location <http://www.w3.org/2006/vcard/ns#country-name> ""England""^^<http://www.w3.org/2001/XMLSchema#string> .
    
    OPTIONAL {
      ?artist <http://dbpedia.org/ontology/birthPlace> ?location .
    }
    
    OPTIONAL {
      ?parent <http://dbpedia.org/ontology/parent> ?artist .
    }
  }
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
557,71,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v7 <http://dbpedia.org/ontology/knownFor> ?v8 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT DISTINCT ?producer WHERE {
  # Actor of High Society Blues
  ?actor1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/High_Society_Blues> .
  
  # Producer of their claim to fame (a movie and a work)
  ?movie1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 is ""film""
  ?actor1 <http://dbpedia.org/property/producer> ?producer .
  ?movie1 <http://dbpedia.org/resource/claim_to_fame> ?producer .

  # Actor of Johnny Doughboy
  ?actor2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Johnny_Doughboy> .
  
  # Producer of their claim to fame (a work)
  ?work1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q13442814> . # Assuming Q13442814 is ""work""
  ?actor2 <http://dbpedia.org/property/producer> ?producer .
  ?work1 <http://dbpedia.org/resource/claim_to_fame> ?producer .

  # Professional in the alter ego of a fictional character referencing Kent Allard
  ?character <http://dbpedia.org/ontology/fictionalCharacter> ?fictionalCharacter .
  ?fictionalCharacter <http://dbpedia.org/property/reference> ""Kent_Allard"" .
  ?alterEgo <http://dbpedia.org/ontology/alterEgo> ?fictionalCharacter .
  ?professional <http://dbpedia.org/property/professionalIn> ?alterEgo .

  # Ensure the producer is common across all conditions
  FILTER (?producer = ?actor1 && ?producer = ?actor2 && ?producer = ?professional)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
756,69,test,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v7 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?native WHERE {
  # Theodor Heuss's administration country
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
  
  # Soccer club season and sports team season
  ?team <http://dbpedia.org/ontology/team> ?season .
  ?season a <http://dbpedia.org/class/yago/SoccerClubSeason108069834> ;
          a <http://dbpedia.org/class/yago/SportsTeamSeason108069835> .

  # Sports manager born on 1968-08-26
  ?manager <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?manager a <http://dbpedia.org/class/yago/SportsManager108069836> .
  ?manager <http://dbpedia.org/ontology/teamManaged> ?team .

  # Player managed by the above manager in successor of 2006–07 VfL Bochum season
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> .
  ?player <http://dbpedia.org/ontology/teamManagedBy> ?manager ;
          a <http://dbpedia.org/class/yago/SportsClub108069837>, 
             <http://dbpedia.org/class/yago/Organization108069838>, 
             <http://dbpedia.org/class/yago/SoccerClub108069839> .
  ?player <http://dbpedia.org/ontology/team> ?successor .

  # Native of the administration country
  ?native <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel ;
          <http://dbpedia.org/ontology/nationality> ?administration .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
723,19,test,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician) and band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Nate Newton's associated musical artists that are bands and organizations
  <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/member> ?band .
  ?band a <http://dbpedia.org/ontology/MusicalArtist> ;
        a <http://www.w3.org/2002/07/owl#Thing> ; # Assuming 'organisation' is represented as a subclass of Thing
        <http://dbpedia.org/property/isPartOf> ?org .

  # Step 2: Find band members of these bands
  ?bandMember <http://dbpedia.org/ontology/member> ?band .
  
  # Step 3: Identify producers of ""Nothing to Gein"" that are organizations and groups
  OPTIONAL {
    <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/property/producer> ?producer .
    ?producer a <http://www.w3.org/2002/07/owl#Thing> ; # Assuming 'organisation' is represented as a subclass of Thing
              a <http://dbpedia.org/ontology/MusicalArtist> ;
    
    # Step 4: Find band members of these producers
    ?bandMemberProducer <http://dbpedia.org/ontology/member> ?producer .
  }
  
  # Ensure the same person is found in both contexts
  FILTER (?bandMember = ?bandMemberProducer)
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
585,20,test,"Give me the child of the professional in the profession of Shirley Stoler and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v5 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Shirley Stoler's profession
  <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/profession> ?profession .

  # Step 2: Identify children of individuals with that profession
  ?parent <http://dbpedia.org/ontology/profession> ?profession .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 3: Find awards associated with New York (state)
  ?award <http://dbpedia.org/property/location> <http://dbpedia.org/resource/New_York_(state)> .
  
  # Step 4: Ensure the native place is American and a settlement
  ?nativePlace <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
  ?nativePlace <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?nativePlace <http://dbpedia.org/ontology/settlement> ?settlement .

  # Combine conditions
  FILTER(?child = ?nativePlace)
}
```",6,8,7,3,2,3,2,20,0,0,10,0,0.0,0
159,71,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
SELECT ?result WHERE {
  ?tvShow <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TvShow108069068> .
  ?tvShow <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .
  
  ?tvShow <http://dbpedia.org/property/war> ?war .
  
  ?battleOfVienna <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Battle_of_Vienna> .
  ?militaryForce <http://dbpedia.org/ontology/militaryConflict> ?battleOfVienna .
  
  ?commander1 <http://dbpedia.org/ontology/successor> ?result .
  ?result <http://www.wikidata.org/entity/P39> ?officeHolderRole . # Assuming P39 is office holder
  ?conflict <http://dbpedia.org/ontology/militaryConflict> ?event .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts108069068> .
  
  ?result <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Micha%C5%82_Kazimierz_Pac> .
  
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/writtenBy> <http://dbpedia.org/resource/George_Ducas> .
    ?reference <http://dbpedia.org/property/reference> ?work .
  }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
585,19,test,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in the profession of Shirley Stoler.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/nationality> ?person .
  FILTER(CONTAINS(LCASE(?award), ""american"") && CONTAINS(LCASE(?award), ""settlement""))
  
  OPTIONAL { 
    ?coro <http://dbpedia.org/property/origin> ?award .
    FILTER(STRSTARTS(STR(?coro), ""http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico""))
  }
  
  ?shirley <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(STRSTARTS(STR(?shirley), ""http://dbpedia.org/resource/Shirley_Stoler""))

  ?result <http://dbpedia.org/property/professionalChildOf> ?profession .
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
198,67,test,"Give me the war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?result WHERE {
  # War of Amasa Tracy
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/war> ?war .

  # Force of the awardee of Quincy Adams Gillmore's award
  ?award <http://dbpedia.org/property/awardee> ?recipient .
  ?recipient <http://dbpedia.org/ontology/militaryForce> ?force .

  # Entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/P_Category:Deceased_in_1850> .
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace a <http://dbpedia.org/class/yago/SettlementsInAmerica> .

  # Ensure the entity matches all criteria
  FILTER (?result = ?war || ?result = ?force || ?result = ?birthplace)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
706,19,test,"Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Part 1: Birthplace of Awardee of Sangeet Natak Akademi Fellowship
SELECT ?awardee ?birthPlace WHERE {
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> ""Sangeet Natak Akademi Fellowship"" .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

# Part 2: Birthplace of Actor in an Indian Movie with Dipankar De
SELECT ?actor ?birthPlace WHERE {
  ?movie <http://dbpedia.org/property/nationality> ""Indian"" ;
         <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dipankar_De> .
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
398,19,test,Give me the figure known as the nickname of Russia national football team and player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?result WHERE {
  ?team <http://dbpedia.org/ontology/nickName> ?nickname .
  ?nickname rdfs:label ""Russia national football team""@en .

  ?work <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Aleksandr_Filimonov> .
  ?work <http://dbpedia.org/ontology/player> ?result .
  
  FILTER(?team = ?result) # Ensuring the same entity is both a nickname and player
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
943,70,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the alter ego of Lamont Cranston
  <http://dbpedia.org/resource/Lamont_Cranston> <http://dbpedia.org/ontology/allegedAlterEgo> ?alterEgo .

  # Step 2: Identify a child of a royal parent of Yeshaq I
  ?royalParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
  ?royalParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/parent> ?royalParent .

  # Step 3: Find a father of an office holder's father who is also royalty
  ?officeHolderFather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?officeHolderFather <http://dbpedia.org/property/officeHolder> ?office .
  ?fatherOfOfficeHolder <http://dbpedia.org/ontology/father> ?officeHolderFather .

  # Step 4: Ensure this father is also a parent of Baeda Maryam I's child
  ?childOfBaedaMaryamI <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  ?fatherOfOfficeHolder <http://dbpedia.org/ontology/father> ?childOfBaedaMaryamI .

  # Final condition: The result must be the alter ego found in Step 1
  FILTER (?alterEgo = ?result)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
119,67,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/administration> ?admin .
  ?admin <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish""@en .
  
  OPTIONAL { 
    ?psoe <http://dbpedia.org/property/referenceTo> ?admin .
    ?psoe <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish Socialist Workers' Party""@en .
  }
  
  ?result <http://dbpedia.org/ontology/country> ?country .
  ?country <http://www.w3.org/2000/01/rdf-schema#label> ""Spain""@en .
  ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spanish_people> .

  OPTIONAL {
    ?feijoo <http://dbpedia.org/property/office> ?office .
    ?feijoo <http://www.w3.org/2000/01/rdf-schema#label> ""Alberto Núñez Feijóo""@en .
    ?result <http://dbpedia.org/ontology/colleague> ?feijoo .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
468,19,test,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon and reference to the real name of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?martin <http://dbpedia.org/ontology/father> ?father .
  FILTER(?martin = <http://dbpedia.org/resource/Martin_of_Aragon>) .

  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  ?father <http://dbpedia.org/ontology/child> ?child .

  OPTIONAL {
    ?peterIV <http://dbpedia.org/property/realName> ?realName .
    FILTER(?peterIV = <http://dbpedia.org/resource/Peter_IV_of_Aragon>)
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
119,20,test,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?war WHERE {
  ?force <http://dbpedia.org/ontology/show> ?show .
  ?force <http://dbpedia.org/ontology/militaryConflict> ?conflict .
  
  ?commander <http://dbpedia.org/property/commander> ?force .
  ?war <http://dbpedia.org/ontology/warOf> <http://dbpedia.org/resource/Maria_I_of_Portugal> .
  ?commander <http://dbpedia.org/property/commanderInWar> ?war .

  <http://dbpedia.org/resource/Łódź> <http://dbpedia.org/ontology/nativePlace> ?athlete .
  ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/PolishAthletes> .

  ?athlete <http://dbpedia.org/ontology/residence> ?country .
  
  ?entity <http://www.w3.org/2000/01/rdf-schema#location> ?country .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
472,28,test,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/property/leader> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
SELECT ?territory WHERE {
  # Find death place of Christian Ditlev Ammentorp Hansen and ensure it is a settlement
  <http://dbpedia.org/resource/Christian_Ditlev_Ammenborg> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Settlement"" .

  # Territory administered from the death place
  ?territory <http://dbpedia.org/property/administeredFrom> ?deathPlace .

  # Administration of the mayor of Duchy of Schleswig
  ?mayor <http://dbpedia.org/ontology/mayorFor> <http://dbpedia.org/resource/Duchy_of_Schleswig> .
  ?territory <http://dbpedia.org/property/administeredBy> ?mayor .

  # Administration of the person born as Prince Christian
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Royalty> .
  ?person <http://dbpedia.org/ontology/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
  ?territory <http://dbpedia.org/property/administeredBy> ?person .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
531,67,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?leaderOffice ?party ?tenant ?commanderOffice ?force WHERE {
  # Leader of the party of Miguel Maura
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/politicalParty> ?party .
  ?leader <http://dbpedia.org/ontology/politicalParty> ?party ;
          <http://dbpedia.org/ontology/officeHolder> ?leaderOffice .
  
  # Tenant of Madrid
  ?tenant <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Madrid> .

  # Commander in the force of Manuel Pinto da Costa
  ?force <http://dbpedia.org/ontology/militaryConflict> ;
         <http://dbpedia.org/ontology/societalEvent> .
  <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> <http://dbpedia.org/property/involvement> ?force .
  ?commander <http://dbpedia.org/ontology/officeHolder> ?commanderOffice ;
             <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
225,19,test,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT DISTINCT ?entity WHERE {
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> .
  
  ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?region .
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> .

  OPTIONAL {
    ?tvShow <http://dbpedia.org/ontology/references> ?entity .
    ?tvShow a <http://dbpedia.org/ontology/TelevisionSeries> .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
58,20,test,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  ?movie <http://dbpedia.org/ontology/award> ?award .
  ?award <http://www.wikidata.org/entity/P921> <http://dbpedia.org/resource/Ian_Gregson> . # Assuming P921 is the property for ""recipient""
  
  ?movie <http://dbpedia.org/ontology/producer> ?result .

  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ""Linda Bruckheimer"" .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
    FILTER(?spouse = ?result)
  }
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
39,68,test,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
SELECT ?result WHERE {
  # Person born as Robert Lamar Thompson who is a musical artist
  ?person <http://dbpedia.org/ontology/birthName> ""Robert Lamar Thompson"" .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musical_artist> .

  # Professional in the alter ego of a creation by Walter B. Gibson
  ?creation <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?creation <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q482980> . # Fictional character
  ?creation <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> .   # Comics character
  ?alterEgo <http://dbpedia.org/property/alterEgo> ?creation .
  ?person <http://dbpedia.org/ontology/profession> ?alterEgo .

  # Professional in the profession of the producer of Coke Studio Philippines
  ?producer <http://dbpedia.org/ontology/jobTitle> ""Producer"" .
  ?producer <http://dbpedia.org/property/show> <http://dbpedia.org/resource/Coke_Studio_Philippines> .
  ?producerProfession <http://dbpedia.org/ontology/profession> ?producer .
  ?person <http://dbpedia.org/ontology/profession> ?producerProfession .
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
782,67,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Part 1: Band of the band member born on 1945-03-30
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^xsd:date .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?member <http://dbpedia.org/property/memberOf> ?band .
  ?member <http://dbpedia.org/ontology/person> ?person .
}

UNION

# Part 2: Associated musical artist with The Fabulous Thunderbirds as Nick Curran's persona
SELECT ?associatedArtist WHERE {
  ?nickCurran <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?nickCurran <http://dbpedia.org/property/persona> ""Nick Curran"" .
  
  OPTIONAL {
    ?associatedArtist <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
    ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
311,20,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/property/writer> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the producer of ""Lotus"" that is an organization, band, or group
  <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?producer .
  FILTER (
    (<http://www.w3.org/2000/01/rdf-schema#Class> ?producer <http://dbpedia.org/class/yago/Organisation100000001>)
    || (<http://www.w3.org/2000/01/rdf-schema#Class> ?producer <http://dbpedia.org/class/yago/Band115769489>)
    || (<http://www.w3.org/2000/01/rdf-schema#Class> ?producer <http://dbpedia.org/class/yago/MusicalGroup100000001>)
  )

  # Step 2: Find an associated musical artist of the producer
  ?producer <http://dbpedia.org/property/associatedMusicalArtist> ?artist1 .
  FILTER EXISTS { ?artist1 <http://www.w3.org/2000/01/rdf-schema#label> ?label . }

  # Step 2.5: Find another associated musical artist of the first artist
  ?artist1 <http://dbpedia.org/property/associatedMusicalArtist> ?result .
  
  # Step 3: Identify the writer of the album ""Sappy""
  <http://dbpedia.org/resource/Sappy_(album)> <http://dbpedia.org/ontology/writer> ?writer .

  # Ensure ""Sappy"" is a musical work, work, and album
  FILTER EXISTS { 
    (<http://www.w3.org/2000/01/rdf-schema#Class> <http://dbpedia.org/resource/Sappy_(album)> <http://dbpedia.org/class/yago/MusicalWork100000001>)
    && (<http://www.w3.org/2000/01/rdf-schema#Class> <http://dbpedia.org/resource/Sappy_(album)> <http://dbpedia.org/class/yago/Work100000001>)
    && (<http://www.w3.org/2000/01/rdf-schema#Class> <http://dbpedia.org/resource/Sappy_(album)> <http://dbpedia.org/class/yago/MusicAlbum100000001>)
  }

  # Step 4: Check if the writer is a band member of the result artist
  ?writer <http://dbpedia.org/ontology/bandMember> ?result .
}
```",6,13,7,3,2,3,2,20,0,0,1,0,0.0,0
386,28,test,Give me the war of the awardee of Golden Sword for Bravery and war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war1 ?war2 ?entity WHERE {
  ?awardee1 <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> .
  ?awardee1 <http://dbpedia.org/property/war> ?war1 .

  ?awardee2 <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Award_25> . # Assuming Award_25 is the correct resource
  ?awardee2 <http://dbpedia.org/property/war> ?war2 .

  <http://dbpedia.org/resource/Elena_%C5%BDalinkevi%C4%8Dait%C4%97-Petrauskien%C4%97> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?entity <http://dbpedia.org/ontology/inception> ?birthPlace .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
80,68,test,"Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow
  ?alterEgo <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  ?result <http://dbpedia.org/property/profession> ?alterEgo .

  # Actor of the movie with the author of Smartbomb (book)
  <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/ontology/author> ?author .
  ?movie <http://dbpedia.org/ontology/starring> ?author .
  ?movie <http://dbpedia.org/ontology/starring> ?result .

  # Actor of the album of the work that is a song and musical work by T.I.
  ?song <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/T.I.> ;
        <http://www.w3.org/2002/07/owl#sameAs> ?musicalWork .
  ?album <http://purl.org/dc/terms/subject> ?song .
  ?album <http://dbpedia.org/ontology/starring> ?result .
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
871,71,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Rodney Lees' award
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?awardee <http://dbpedia.org/property/name> ""Rodney Lees"" .

  # Step 2: Find the parent of the awardee
  ?parent <http://dbpedia.org/ontology/child> ?awardee .

  # Step 3: Identify a politician child of an Eton College alumnus
  ?alumnus <http://dbpedia.org/property/alumnusOf> <http://dbpedia.org/resource/Eton_College> .
  ?politicianChild <http://dbpedia.org/ontology/parent> ?alumnus .
  ?politicianChild <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""

  # Step 4: Parent of politician and office holder child of Edward Stanley, 17th Earl of Derby
  ?officeHolderChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  ?officeHolderChild <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?officeHolderChild <http://www.wikidata.org/entity/P39> ?office . # Office holder

  # Find the parent of this office holder child
  ?parent2 <http://dbpedia.org/ontology/child> ?officeHolderChild .

  # Final result: Parent of awardee and father of politician child
  FILTER (?parent = ?parent2)
  BIND(?parent AS ?result)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
531,69,test,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v7 . },"```sparql
SELECT ?result WHERE {
  # Condition 1: Tenant of the residence of the leader (office holder) of the 2003 Madrid City Council election
  ?leader <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/2003_Madrid_City_Council_election> .
  ?residence <http://dbpedia.org/property/residence> ?leader .
  ?result <http://dbpedia.org/property/tenant> ?residence .

  # Condition 2: Office of the commander (office holder and politician) in the Central African Republic Civil War
  ?commander <http://dbpedia.org/ontology/officeHolder> ?office1 .
  ?commander <http://dbpedia.org/property/politician> true .
  ?office1 <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Central_African_Republic_Civil_War> .

  # Condition 3: Office of the leader (politician) of the party (political party) of Miguel Maura
  ?party <http://dbpedia.org/ontology/politicalPartyMember> <http://dbpedia.org/resource/Miguel_Maura> .
  ?leader2 <http://dbpedia.org/property/politician> true .
  ?leader2 <http://dbpedia.org/ontology/officeHolder> ?office2 .
  ?party <http://dbpedia.org/ontology/partyLeader> ?leader2 .

  # Ensure the same person satisfies all conditions
  FILTER (?result = ?commander && ?result = ?leader2)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
353,71,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?finalChild WHERE {
  # Step 1: Spouse of Constance of Burgundy who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Child of this spouse (who is royalty)
  ?child1 <http://dbpedia.org/ontology/parent> ?spouse .
  ?child1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Father of this child (royalty)
  ?father <http://dbpedia.org/ontology/parent> ?child1 .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 4: Reference to William I who is royalty and an office holder
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Wilhelm_I,_German_Emperor> .
  ?reference <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?reference <http://www.wikidata.org/entity/P39> ?office . # Office holder

  # Step 5: Child of this reference (royalty)
  ?child2 <http://dbpedia.org/ontology/parent> ?reference .
  ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 6: Parent of the child (royalty) of Roger II of Sicily
  ?grandChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?grandChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
  ?parent <http://dbpedia.org/ontology/parent> ?grandChild .

  # Step 7: Final Child
  ?finalChild <http://dbpedia.org/ontology/parent> ?parent .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
119,68,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Tenant of the residence, that is a country (Spain)
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  ?result <http://dbpedia.org/ontology/residence> ?residence .

  # Citizen of Spain
  ?result <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Spain> .

  # Office of the leader of an event related to Anxo Quintana
  ?event <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Anxo_Quintana> .
  ?result <http://dbpedia.org/ontology/officeHolder> ?event .

  # Tenant of the administration in PSOE
  ?psoeAdministration <http://dbpedia.org/ontology/member> ?result .
  ?psoeAdministration <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 is ""Spanish Socialist Workers' Party""
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
668,63,val,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find $pacely's birth name and their associated musical artist
  ?pacely <http://dbpedia.org/ontology/birthName> ""Pacely"" .
  ?pacely <http://dbpedia.org/property/associatedMusicalArtist> ?result .

  # Find Joey B's birth name and their associated musical artist
  ?joeyb <http://dbpedia.org/ontology/birthName> ""Joey B"" .
  ?joeyb <http://dbpedia.org/property/associatedMusicalArtist> ?result .

  # Ensure the person is professionally linked to Rod Argent
  ?result <http://dbpedia.org/property/profession> ?v1 .
  ?rodargent <http://dbpedia.org/resource/Rod_Argent> .
  ?rodargent <http://dbpedia.org/property/profession> ?v2 .
  FILTER(?v1 = ?v2)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
628,63,val,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?native WHERE {
  # Step 1: Identify the award linked to a region, American, state, and settlement
  ?award <http://dbpedia.org/ontology/location> ?location .
  ?location rdf:type/rdfs:subClassOf* <http://dbpedia.org/class/yago/RegionInAmerica>.
  ?location rdf:type/rdfs:subClassOf* <http://dbpedia.org/class/yago/StateInAmerica>.
  ?location rdf:type/rdfs:subClassOf* <http://dbpedia.org/class/yago/Settlement>.

  # Step 2: Find the native of this award
  ?native <http://dbpedia.org/ontology/nationality> ?award .

  # Step 3: Identify Bobby Shmurda's birth name
  ?bobbyShmurda <http://dbpedia.org/property/birthName> ""Bobby Shmurda"" .
  
  # Step 4: Find the band member of a musical artist associated with GS9
  ?artist rdf:type <http://dbpedia.org/class/yago/MusicalArtist115069068> ;
          <http://dbpedia.org/ontology/memberOfBand> ?bandMember .

  ?gs9Member rdf:type/rdfs:subClassOf* <http://dbpedia.org/class/yago/MusicalArtist115069068> ;
             <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  
  # Step 5: Combine these elements
  ?native = ?bobbyShmurda .
  ?bandMember = ?gs9Member .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
103,65,val,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?result WHERE {
  # Actor of Ab Kya Hoga who is also a politician
  <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/politicalParty> ?v1 .

  # Actor in a movie that is a television show with Richard E. Grant
  OPTIONAL {
    ?tvShow <http://dbpedia.org/ontology/starring> ?result .
    ?tvShow <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
    ?tvShow <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> . # Assuming this class represents television shows
  }

  # Professional involvement with The Shadow alter ego
  OPTIONAL {
    ?result <http://dbpedia.org/property/occupation> ?v2 .
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?v2 .
  }
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
585,18,val,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state) and child of the professional in Actress.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?award WHERE {
  ?award <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?award <http://dbpedia.org/property/settlement> ?settlement .
  FILTER EXISTS { ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ?label . FILTER regex(?label, ""American"", ""i"") }
  
  ?awardee <http://dbpedia.org/ontology/receipient> ?award .
  ?awardee <http://dbpedia.org/property/stateOrProvince> <http://dbpedia.org/resource/New_York_(state)> .

  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress> .
    ?awardee <http://dbpedia.org/ontology/birthParent> ?parent .
  }
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
412,25,val,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris and war of the leader of National Party of Greece.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/place> ?v4 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?entity WHERE {
  ?varthalitis <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace a <http://dbpedia.org/class/yago/Settlement108069068> . # Assuming this class represents settlements

  ?ventiris <http://dbpedia.org/property/war> ?war1 .

  ?nationalPartyLeader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/National_Party_of_Greece> .
  ?nationalPartyLeader <http://dbpedia.org/property/war> ?war2 .

  FILTER (?deathPlace = ?entity) .
  OPTIONAL { ?entity <http://dbpedia.org/property/war> ?war1 . }
  OPTIONAL { ?entity <http://dbpedia.org/property/war> ?war2 . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
198,66,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  
  ?birthplace <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q515> . # Settlement
  ?birthplace <http://www.wikidata.org/entity/P17> <http://www.wikidata.org/entity/Q30> . # America

  OPTIONAL {
    ?medalOfHonorAwardee <http://dbpedia.org/property/war> ?war .
  }

  OPTIONAL {
    ?gillmoreMedalAwardee <http://dbpedia.org/ontology/militaryForce> ?force .
  }
  
  FILTER(?result = ?birthplace || ?result = ?war || ?result = ?force)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,64,val,Give me the spouse of Roger Pryor (actor) and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of the parent of Tisha Sterling.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Find the spouse of Roger Pryor (actor)
  ?rogerPryor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?rogerPryor <http://xmlns.com/foaf/0.1/name> ""Roger Pryor"" .
  ?rogerPryor <http://dbpedia.org/ontology/spouse> ?result .

  # Find the ruling party in a landmark at elevation 20.116800000000001347
  ?landmark <http://www.geonames.org/ontology#elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?party <http://dbpedia.org/property/rulingParty> ?landmark .

  # Find a person born as the birth name of the parent of Tisha Sterling
  ?tishaSterling <http://xmlns.com/foaf/0.1/name> ""Tisha Sterling"" .
  ?parent <http://dbpedia.org/ontology/child> ?tishaSterling .
  ?parent <http://dbpedia.org/property/birthName> ?birthName .
  ?result <http://dbpedia.org/property/birthName> ?birthName .

  # Ensure the same person satisfies all conditions
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
78,25,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.","SELECT ?result WHERE { <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  # Find the person associated with Stuart Mcbeath Tosh
  ?person <http://dbpedia.org/ontology/birthName> ""Stuart Mcbeath Tosh"" .
  ?associatedArtist <http://dbpedia.org/property/associatedBandMember> ?person .

  # Ensure this artist is also linked to Wizards of Waverly Place (soundtrack)
  OPTIONAL {
    ?wizardsSoundtrack <http://dbpedia.org/ontology/writer> ?associatedArtist ;
                       <http://dbpedia.org/ontology/artist> ?associatedArtist .
    FILTER(STRSTARTS(STR(?wizardsSoundtrack), ""http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)""))
  }

  # Check if this artist is a band member of The Alan Parsons Project
  OPTIONAL {
    <http://dbpedia.org/resource/The_Alan_Parsons_Project> <http://dbpedia.org/ontology/member> ?associatedArtist .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
37,9,val,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?birthPlace1, ?birthPlace2 WHERE {
  # Birthplace of the writer/artist of ""The Miseducation of Lauryn Hill""
  <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://purl.org/dc/terms/creator> ?writer .
  ?writer a <http://dbpedia.org/class/yago/Writers100000001> ; # Assuming this class represents writers
         a <http://dbpedia.org/class/yago/Artists100000001> . # Assuming this class represents artists
  ?writer <http://dbpedia.org/ontology/birthPlace> ?birthPlace1 .

  # Birthplace of the work/artist/musical artist of Ethan Iverson
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Ethan_Iverson> .
  ?work a <http://dbpedia.org/class/yago/MusicalArtists100000001> ; # Assuming this class represents musical artists
        a <http://dbpedia.org/class/yago/Artists100000001> . # Assuming this class represents artists
  ?work <http://dbpedia.org/ontology/birthPlace> ?birthPlace2 .
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
103,64,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?movie <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Television_films> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .

  OPTIONAL {
    ?shadowGame <http://dbpedia.org/property/alterEgo> ?alterEgo .
    FILTER(?shadowGame = <http://dbpedia.org/resource/The_Shadow_(video_game)>)
  }

  ?actor <http://dbpedia.org/ontology/starring> ?movie .
  ?actor <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(?v1 IN (<http://dbpedia.org/resource/Actor>, <http://dbpedia.org/resource/The_Shadow_(comics)>)).
}
```",7,9,8,3,3,3,3,71,0,0,9,0,0.0,0
472,25,val,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v4 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
SELECT ?territory WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen and associated territory administration
  <http://dbpedia.org/resource/Christian_Ditlev_Ammenborg> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://dbpedia.org/property/settlement> true .
  OPTIONAL { 
    ?territory1 <http://dbpedia.org/ontology/administeredFrom> ?deathPlace .
  }

  # Find territories administered by Olaf I of Denmark
  <http://dbpedia.org/resource/Olaf_I_of_Denmark> <http://dbpedia.org/property/administration> ?territory2 .

  # Find territories associated with Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  <http://dbpedia.org/resource/Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://dbpedia.org/property/settlement> true .
  OPTIONAL { 
    ?territory3 <http://dbpedia.org/ontology/administeredFrom> ?birthPlace .
  }

  # Combine results to find common territories
  FILTER(?territory1 = ?territory2 && ?territory2 = ?territory3)
  BIND(?territory1 AS ?territory)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
557,62,val,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
SELECT ?producer WHERE {
  # Producer of A Star Is Born (1937 film)
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?producer .

  # Actor of Johnny Doughboy and their claim to fame
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Johnny_Doughboy> .
  ?actor <http://dbpedia.org/property/famousFor> ?claimToFame .
  
  # Producer of the actor's claim to fame
  ?claimToFame <http://dbpedia.org/ontology/producer> ?producer .

  # Professional in alter ego of fictional character related to Kent Allard
  OPTIONAL {
    ?fictionalCharacter <http://dbpedia.org/property/reference> ""Kent Allard (print)"" .
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?producer <http://dbpedia.org/ontology/profession> ?alterEgo .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,66,val,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?leaderOffice ?commanderOffice ?tenant WHERE {
  # Office of the leader of Miguel Maura's party
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/politicalParty> ?party .
  ?partyLeader <http://dbpedia.org/ontology/memberOf> ?party ;
               <http://dbpedia.org/property/office> ?leaderOffice .
  
  # Office of the commander in Central African Republic Civil War
  ?commander <http://dbpedia.org/ontology/occupation> ?v1 ;
             <http://dbpedia.org/property/office> ?commanderOffice .
  FILTER(CONTAINS(?v1, ""politician"") && CONTAINS(?v1, ""office holder""))
  ?commander <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Central_African_Republic_Civil_War> .

  # Tenant of the residence of Alberto Ruiz-Gallardón
  <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/ontology/residence> ?residence .
  ?tenant <http://dbpedia.org/ontology/livesIn> ?residence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
756,64,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
SELECT ?manager WHERE {
  # Step 1: Identify the manager born on 1968-08-26 from West Germany
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality <http://dbpedia.org/resource/West_Germany> ;
          dbo:occupation <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Find the player managed by this person, associated with a soccer club
  ?player dbo:manager ?person ;
          dbo:team ?soccerClub .
  
  # Ensure the team is a sports club and organization
  ?soccerClub rdf:type <http://dbpedia.org/ontology/SportsClub> , <http://dbpedia.org/ontology/Organisation> .

  # Step 3: Determine the successor of the 2006–07 VfL Bochum season
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> dbo:succ ?successorSeason .
  
  # Ensure the successor is a football league season, sports team season, and sports season
  ?successorSeason rdf:type <http://dbpedia.org/ontology/FootballLeagueSeason> , 
                    <http://dbpedia.org/ontology/SportsTeamSeason> ,
                    <http://dbpedia.org/ontology/SportsSeason> .

  # Step 4: Find the manager of this successor team
  ?successorSeason dbo:manager ?manager .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
557,66,val,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?result <http://dbpedia.org/ontology/profession> ?alterEgo .

  # Producer of Cora Sue Collins' claim to fame (work)
  <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/property/claimToFame> ?collinsWork .
  ?result <http://dbpedia.org/ontology/producer> ?collinsWork .

  # Producer of the actor's claim to fame (movie and work) from High Society Blues
  {
    SELECT ?actor WHERE {
      <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
    }
  } 
  ?actor <http://dbpedia.org/property/claimToFame> ?movieWork .
  FILTER ( <http://dbpedia.org/ontology/Movie> IN (<http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?movieWork) )
  ?result <http://dbpedia.org/ontology/producer> ?movieWork .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
361,26,val,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in  and professional in the profession of Frédéric Bouraly.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/occupation> ?v1 .
    <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric_Bouraly> <http://dbpedia.org/property/profession> ?v2 .
    FILTER(?v1 = ?v2)
  }
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
203,63,val,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
SELECT ?result WHERE {
  # Find the war associated with The Triple X's and its commander
  ?war <http://dbpedia.org/ontology/conflict> <http://dbpedia.org/resource/The_Triple_Xs> .
  ?war <http://dbpedia.org/ontology/commander> ?result .

  OPTIONAL { 
    # Find the military force associated with William Bayne and link it to a war
    ?bayneWar <http://dbpedia.org/property/militaryForce> ?force1 .
    ?bayneWar <http://dbpedia.org/ontology/conflict> <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .
    
    # Find the military force associated with Robert Calder and link it to an event
    ?calderEvent <http://dbpedia.org/property/militaryForce> ?force2 .
    ?calderEvent <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Robert_Calder> .
    
    # Ensure the forces are related or identical for consistency
    FILTER(?force1 = ?force2)
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
297,9,val,"Give me the entity in the birth place, that is a country, of Little Hat Jones and institution in the administration of Brian Kemp.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Get the birthplace of Little Hat Jones and ensure it's a country
  <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?country .

  # Step 2: Find institutions related to Brian Kemp's administration
  OPTIONAL {
    <http://dbpedia.org/resource/Brian_Kemp> <http://dbpedia.org/property/administration> ?institution .
    
    # Step 3: Ensure the institution is in the same country as Little Hat Jones' birthplace
    ?institution <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2002/07/owl#sameAs> ?country .

    # Resulting entity that satisfies both conditions
    BIND(?institution AS ?result)
  }
}
```",4,5,5,2,2,2,2,9,0,0,346,0,0.0,0
78,26,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?commonMember WHERE {
  # Find Stuart Mcbeath Tosh's associated musical artist
  ?stuart <http://www.w3.org/2000/01/rdf-schema#label> ""Stuart Mcbeath Tosh""@en .
  ?stuart <http://dbpedia.org/ontology/birthName> ""Stuart Mcbeath Tosh"" .
  ?stuart <http://dbpedia.org/property/associatedBand> ?band1 .

  # Find David Paton's associated musical artist and its members
  ?david <http://www.w3.org/2000/01/rdf-schema#label> ""David Paton""@en .
  ?david <http://dbpedia.org/property/associatedBand> ?band2 .
  ?member1 <http://dbpedia.org/ontology/member> ?band2 .

  # Find Billy Lyall's associated musical artist and its members
  ?billy <http://www.w3.org/2000/01/rdf-schema#label> ""Billy Lyall""@en .
  ?billy <http://dbpedia.org/property/associatedBand> ?band3 .
  ?member2 <http://dbpedia.org/ontology/member> ?band3 .

  # Find common band member
  FILTER (?member1 = ?commonMember && ?member2 = ?commonMember)
  ?commonMember <http://dbpedia.org/ontology/member> ?band1 .
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
119,18,val,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
SELECT ?war WHERE {
  # Find Maria I of Portugal's military force that is a TV show and conflict
  ?force <http://dbpedia.org/property/ruler> <http://dbpedia.org/resource/Maria_I_of_Portugal> .
  ?force <http://www.w3.org/2002/07/owl#sameAs> ?tvShow .
  ?force <http://dbpedia.org/ontology/militaryConflict> ?war .
  
  # Ensure the force is both a TV show and military conflict
  ?tvShow rdf:type <http://dbpedia.org/class/yago/YAGO3-12-TVShow108069068> .
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflicts1000000010> .

  # Find Dawid Olejniczak's residence country
  <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?country .
  
  # Ensure the war is connected to this country
  ?war <http://dbpedia.org/ontology/location> ?country .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
905,65,val,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Child of the child (royalty) of Béla IV of Hungary
  ?childOfBelaIV <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  ?grandChild <http://dbpedia.org/ontology/father> ?childOfBelaIV .
  ?grandChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Spouse of the father of Philip I, Prince of Taranto
  ?fatherOfPhilipI <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
  ?spouseOfFather <http://dbpedia.org/ontology/spouse> ?fatherOfPhilipI .

  # Step 3: Parent of the father (royalty) of the spouse of Maria of Bytom
  ?spouseMariaBytom <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  ?fatherSpouseMaria <http://dbpedia.org/ontology/father> ?spouseMariaBytom .
  ?fatherSpouseMaria <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?parentOfFather <http://dbpedia.org/ontology/father> ?fatherSpouseMaria .

  # Final condition: The result must satisfy all conditions
  FILTER (?grandChild = ?spouseOfFather && ?spouseOfFather = ?result && ?result = ?parentOfFather)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,66,val,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
SELECT ?result WHERE {
  # Predecessor of the child of the spouse (royalty) of Saw Min Phyu
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  # Child of the parent of Min Hla Htut of Pyakaung
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> .
  ?result <http://dbpedia.org/ontology/parent> ?parent .

  # Spouse of the father (royalty) of Myat Hpone Pyo
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }

  FILTER (?predecessor = ?result)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
288,9,val,"Give me the theme of the show with Anumta Qureshi and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v1 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . ?v3 <http://dbpedia.org/ontology/openingTheme> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?show ?theme WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> .
  ?show <http://dbpedia.org/property/theme> ?theme .

  OPTIONAL { 
    ?london <http://www.w3.org/2000/01/rdf-schema#label> ""Lahore""@en .
    ?london <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan> .
    ?london <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/City108069627> . # Assuming this class represents settlements
  }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
68,25,val,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Dorothea's parent
  ?dorotheaParent <http://dbpedia.org/ontology/name> ""Dorothea of Denmark, Electress Palatine"" .
  ?dorotheaParent <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Dorothea's grandparent
  ?result <http://dbpedia.org/ontology/child> ?dorotheaParent .

  # Commander in the Siege of Padua who is royalty
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commandedEvent> <http://dbpedia.org/resource/Siege_of_Padua> .
    ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/child> ?commander .
  }

  # Father of Catherine of Austria, Queen of Portugal
  ?catherineParent <http://dbpedia.org/ontology/name> ""Catherine of Austria, Queen of Portugal"" .
  ?catherineParent <http://dbpedia.org/ontology/birthPlace> ?birthPlace2 .

  ?result <http://dbpedia.org/ontology/child> ?catherineParent .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
737,66,val,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Child of the child of Duke Philipp of Württemberg
  ?philipp <http://dbpedia.org/ontology/parent> ?child1 .
  FILTER(STRSTARTS(LCASE(?philipp), ""duke philipp of württemberg""))
  
  ?child1 <http://dbpedia.org/ontology/parent> ?grandchild1 .

  # Step 2: Predecessor of the child of Philipp Albrecht, Duke of Württemberg
  ?albrecht <http://dbpedia.org/ontology/parent> ?child2 .
  FILTER(STRSTARTS(LCASE(?albrecht), ""philipp albrecht, duke of württemberg""))
  
  ?predecessor <http://dbpedia.org/ontology/successor> ?child2 .

  # Step 3: Child of the child that is royalty of the parent of Archduchess Margarete Sophie of Austria
  ?margareteSophie <http://dbpedia.org/ontology/parent> ?parent .
  FILTER(STRSTARTS(LCASE(?margareteSophie), ""archduchess margarete sophie of austria""))
  
  ?royaltyParent <http://dbpedia.org/ontology/parent> ?parent .
  ?royaltyParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?royaltyChild <http://dbpedia.org/ontology/parent> ?royaltyParent .
  ?grandchild2 <http://dbpedia.org/ontology/parent> ?royaltyChild .

  # Final condition: The result must satisfy all conditions
  FILTER(?result = ?grandchild1 && ?result = ?predecessor && ?result = ?grandchild2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
158,26,val,"Give me the native of Grand Duchy of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Native of Grand Duchy of Finland
  ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> .

  # Person decedent at the birthplace of Sandro Bertaggia (which is a country)
  ?birthPlace <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sandro_Bertaggia> .
  FILTER(STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?country } )
  ?result <http://dbpedia.org/ontology/deathPlace> ?birthPlace .

  # Native of the administration of Nicholas II of Russia
  ?adminCountry <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/Nicholas_II_of_Russia> .
  FILTER(STRSTARTS(STR(?adminCountry), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?adminCountry <http://www.w3.org/2002/07/owl#sameAs> ?country } )
  ?result <http://dbpedia.org/ontology/nationality> ?adminCountry .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
468,18,val,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
# Query for child of the father (royalty) of Peter IV of Aragon
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?father <http://dbpedia.org/ontology/child> ?result .
}

# Query for reference to real name of child (royalty) of Alfonso IV of Aragon
SELECT ?realName WHERE {
  <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  OPTIONAL { 
    ?child <http://dbpedia.org/property/realName> ?realName .
  }
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
353,65,val,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Alfonso VI's children
  ?childAlfonso <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  
  # Step 2: From these, find their children (grandchildren of Alfonso VI)
  ?grandchild <http://dbpedia.org/ontology/parent> ?childAlfonso .

  # Step 3: Check if this grandchild is a father to someone who is royalty
  ?royaltyChild <http://dbpedia.org/ontology/father> ?grandchild .
  ?royaltyChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 4: Identify a reference entity that is royalty and an office holder related to William I
  ?reference <http://dbpedia.org/ontology/officeHolder> ?office .
  ?reference <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/William_I> .

  # Step 5: Ensure this person is a child of Roger III's parent
  ?parentRogerIII <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?parentRogerIII .

  # Bind the result to the grandchild who meets all conditions
  BIND(?grandchild AS ?result)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,63,val,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    ?alterEgo <http://dbpedia.org/property/profession> ?result .
  }

  # Band of Robert Lamar Thompson (assuming he is a musical artist)
  OPTIONAL {
    <http://dbpedia.org/resource/Robert_Lamar_Thompson> <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?band <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Robert_Lamar_Thompson> .
    ?result <http://dbpedia.org/property/band> ?band .
  }

  # Professional in the profession of the producer of Coke Studio Philippines
  OPTIONAL {
    <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
    ?producer <http://dbpedia.org/property/profession> ?profession .
    ?result <http://dbpedia.org/property/profession> ?profession .
  }
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
782,66,val,"Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?band ?realName ?associatedArtist WHERE {
  # Band of Eric Clapton's band member
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Eric_Clapton> .
  ?member <http://dbpedia.org/property/band> ?band .

  # Reference to the real name of The Fabulous Thunderbirds
  OPTIONAL {
    ?thunderbird <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
    ?thunderbird <http://www.wikidata.org/entity/P735> ?realName . # Assuming P735 is the property for real name
  }

  # Associated musical artist of Nick Curran's persona
  OPTIONAL {
    ?curran <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Nick_Curran> .
    ?curran <http://www.wikidata.org/entity/P735> ?personaName . # Assuming P735 is the property for birth name or persona
    ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?curran .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
119,63,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  # Office of the leader of an event associated with Anxo Quintana
  ?office <http://dbpedia.org/ontology/holder> <http://dbpedia.org/resource/Anxo_Quintana> .
  ?office <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Event> .

  # Tenant of the administration related to Spanish Socialist Workers' Party
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  ?result <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Spain> .

  # Tenant of the residence (country) associated with Álvaro Quirós
  OPTIONAL {
    ?residence <http://dbpedia.org/ontology/resident> ?result .
    ?residence <http://dbpedia.org/property/country> ?country .
    ?country <http://dbpedia.org/ontology/inhabitant> <http://dbpedia.org/resource/Álvaro_Quirós> .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
38,18,val,"Give me the author of the work, that is a written work and a work, of Joe Biden and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?author WHERE {
  # Joe Biden's works that are written work and work
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108069067> .
  ?author rdfs:label ""Joe Biden""@en .

  # Commander in North Carolina Air National Guard who is a politician and office holder
  ?commander <http://dbpedia.org/ontology/officeHolder> ?office .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/OfficeHolder108069067> .

  # Book authored by the commander
  ?book <http://dbpedia.org/ontology/author> ?author .
  ?book <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?book <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book108069067> .
  ?book <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .

  # Ensure the same author is found in both conditions
}
```",5,13,6,3,2,3,2,20,0,0,1,0,0.0,0
412,26,val,Give me the entity in Athens and war of the leader of National Party of Greece and war of the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Leader of the National Party of Greece involved in a war
  ?leader <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/National_Party_of_Greece> .
  ?leader <http://dbpedia.org/ontology/war> ?war1 .

  # Awardee with number 30 involved in a war
  ?awardee <http://dbpedia.org/property/awardNumber> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> .
  ?awardee <http://dbpedia.org/ontology/war> ?war2 .

  # Entity located in Athens involved in both wars
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Athens> .
  FILTER (?war1 = ?war2)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,65,val,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify children of Saw Shwe Khet who are royalty
  ?child <http://dbpedia.org/ontology/familyName> ""Saw Shwe Khet"" .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find father of this royal child
  ?father <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Ensure father is royalty and find his spouse
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .

  # Step 4: Identify parent of Min Hla Htut of Pyakaung
  ?parent <http://dbpedia.org/ontology/familyName> ""Min Hla Htut"" .
  ?parent <http://dbpedia.org/property/placeOfBirth> ""Pyakaung"" .

  # Step 5: Ensure the spouse is a child of this parent and predecessor to Saw Shwe Khet's child
  ?spouse <http://dbpedia.org/ontology/familyName> ?parent .
  OPTIONAL { 
    ?predecessor <http://dbpedia.org/ontology/successor> ?child .
    FILTER(?spouse = ?predecessor)
  }
  
  BIND(?spouse AS ?result)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,25,val,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
  
  <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/profession> ?v2 .
  ?result <http://dbpedia.org/property/profession> ?v2 .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
159,66,val,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
SELECT ?writer WHERE {
  # Writer of ""Always the Love Songs""
  <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/ontology/writer> ?writer .

  OPTIONAL {
    # Commander in a war that is both a television show and societal event
    ?war <http://dbpedia.org/ontology/tvShow> true .
    ?war <http://dbpedia.org/ontology/societalEvent> true .
    ?war <http://dbpedia.org/ontology/commander> ?commander .

    # Military force of Battle of Vienna
    <http://dbpedia.org/resource/Battle_of_Vienna> <http://dbpedia.org/property/militaryForce> ?militaryForce .

    # Successor of a commander in the Russo-Polish War who was a politician and office holder
    ?war2 <http://dbpedia.org/ontology/war> <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> .
    ?commander2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Politician
    ?commander2 <http://dbpedia.org/ontology/officer> true .
    ?commander2 <http://dbpedia.org/ontology/successor> ?successor .

    FILTER(?writer = ?commander && ?militaryForce = ?commander2)
  }
}
```",7,11,8,3,3,3,3,71,0,2,1,0.0,0.0,0
119,62,val,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . },"```sparql
SELECT ?result WHERE {
  # Tenant of Santiago de Compostela
  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Santiago_de_Compostela> .
  
  # Tenant of the residence in a country (Spain)
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  
  # Country related to Spanish citizens
  OPTIONAL {
    ?citizen <http://www.wikidata.org/entity/P27> <http://dbpedia.org/resource/Spain> .
    FILTER(?citizen = ?result)
  }
  
  # Office of the leader in an event associated with Anxo Quintana
  OPTIONAL {
    ?event <http://dbpedia.org/property/leader> ?result .
    ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Anxo_Quintana> .
  }
}
```",7,10,8,3,3,3,3,71,0,1,1,0.0,0.0,0
89,62,val,"Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . },"```sparql
SELECT ?result WHERE {
  # Predecessor of Myat Hpone Pyo
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .

  # Child of the parent of Minye Kyawswa's child
  ?minyeKyawswaChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?result <http://dbpedia.org/ontology/parent> ?minyeKyawswaChild .

  # Spouse of the father who is royalty of Saw Shwe Khet's royal child
  OPTIONAL {
    ?sawShweKhetRoyalChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
    ?sawShweKhetRoyalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    ?father <http://dbpedia.org/ontology/parent> ?sawShweKhetRoyalChild .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,64,val,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Author of ""Back to Work (book)""
  <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/ontology/author> ?author .

  # Step 2: Commander in a war that is both a disease and societal event
  OPTIONAL {
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11173> . # Assuming Q11173 represents ""disease""
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11070> . # Assuming Q11070 represents ""societal event""
    ?author <http://dbpedia.org/property/commander> ?war .
  }

  # Step 3: Owner of USS Arcadia (ID-1605)
  OPTIONAL {
    <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?owner .
  }

  # Step 4: Spouse of the author who is a politician and office holder
  OPTIONAL {
    ?author <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.wikidata.org/entity/P39> ?office . # Office holder
  }

  # Step 5: Author of a work by Hillary Clinton that is both a book and written work
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> .
    ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q571> . # Assuming Q571 represents ""book""
    ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 represents ""written work""
  }

  # Final result
  BIND(?author AS ?result)
}
```",7,13,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
353,64,val,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  # Constance of Burgundy's royal spouse and their lineage
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child1 <http://dbpedia.org/ontology/parent> ?spouse .
  ?grandchild1 <http://dbpedia.org/ontology/parent> ?child1 .

  # Roger II of Sicily's royal child and their parent
  ?rogerChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?rogerChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?parentOfRogerChild <http://dbpedia.org/ontology/parent> ?rogerChild .

  # William II of Sicily's father
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_II_of_Sicily> .
  
  # Ensure the same person satisfies all conditions
  FILTER (?grandchild1 = ?parentOfRogerChild)
  FILTER (?grandchild1 = ?result)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
419,9,val,"Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entity WHERE {
  # Find the birthplace of Yandamuri Veerendranath
  <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Identify awardees of Australian Laureate Fellowship and their alma mater
  ?awardee <http://dbpedia.org/property/receivedAward> <http://dbpedia.org/resource/Australian_Laureate_Fellowship> .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Ensure the entity is Australian and a scientist
  ?entity <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q30> . # Q30 represents Australia
  ?entity <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Scientist> .

  # Ensure the entity is in both birthplace and alma mater locations
  ?entity <http://dbpedia.org/property/location> ?birthPlace .
  ?entity <http://dbpedia.org/property/location> ?almaMater .
}
```",4,6,5,2,2,2,2,9,0,0,2,0,0.0,0
492,25,val,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?salMineoDeathPlace ?skyRangerActorDeathPlace ?colorMeDeadActorDeathPlace WHERE {
  # Death place of Sal Mineo
  <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?salMineoDeathPlace .

  # Actor(s) of ""The Sky Ranger"" (1928 film)
  OPTIONAL {
    <http://dbpedia.org/resource/The_Sky_Ranger_(film)> <http://dbpedia.org/ontology/starring> ?skyRangerActor .
    ?skyRangerActor <http://dbpedia.org/ontology/deathPlace> ?skyRangerActorDeathPlace .
  }

  # Actor(s) of ""Color Me Dead""
  OPTIONAL {
    <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/ontology/starring> ?colorMeDeadActor .
    ?colorMeDeadActor <http://dbpedia.org/ontology/deathPlace> ?colorMeDeadActorDeathPlace .
  }
}
```",5,5,6,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
816,62,val,"Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Parent of Doon Arbus
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Doon_Arbus> .

  # Parent of the professional in the profession of Eugène Cattin
  <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/ontology/profession> ?profession .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?parent2 <http://dbpedia.org/ontology/child> ?person .

  # Actor of a movie, that is a work, with the person decedent at Los Angeles
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> .
  ?decedent <http://dbpedia.org/ontology/starring> ?movie .
  ?actor <http://dbpedia.org/ontology/starring> ?movie .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> ?work .

  # Find common parent
  FILTER (?parent = ?parent2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,66,val,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/politician> true .
  ?alumnus <http://dbpedia.org/ontology/alumnus> <http://dbpedia.org/resource/Eton_College> .
  ?alumnus <http://dbpedia.org/ontology/parent> ?child .

  ?awardee <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  ?child <http://dbpedia.org/ontology/parent> ?awardee .

  ?derbyChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?child <http://dbpedia.org/ontology/parent> ?derbyChild .

  ?father <http://dbpedia.org/ontology/father> ?child .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
941,18,val,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Duchess Luise's spouse
  <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/spouse> ?spouseLuise .
  
  # Step 2: Find the spouse of that spouse
  ?spouseLuise <http://dbpedia.org/ontology/spouse> ?result .

  # Step 3: Ensure result is a child of someone who is royalty and related to Ferdinand Albert II
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/child> ?result .
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
    
    # Step 4: Ensure the parent is related to Ferdinand Albert II
    ?relatedParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> .
    FILTER(?parent = ?relatedParent)
  }
}
```",5,6,6,3,2,3,2,20,1,0,0,1.0,1.0,1.0
943,64,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify the commander in Siege of Mukha who is royalty
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find their parent who is royalty
  ?parent <http://dbpedia.org/ontology/child> ?commander .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Determine the child of this royal parent
  ?child <http://dbpedia.org/ontology/parent> ?parent .

  # Step 4: Identify the father of the child's father who is royalty and an office holder
  ?grandfather <http://dbpedia.org/ontology/spouse> ?child .
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?grandfather <http://www.wikidata.org/entity/P106> ?officeHolderRole . # Assuming P106 is the identifier for ""occupation""

  # Step 5: Find the child of Baeda Maryam I
  ?baedaChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .

  # Step 6: Reference to (assuming linking back to a common entity)
  FILTER(?result = ?grandfather || ?result = ?child || ?result = ?baedaChild)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
816,65,val,"Give me the parent of the child of Allan Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v6 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Parent of the child of Allan Arbus
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Allan_Arbus> .
  ?result <http://dbpedia.org/ontology/parent> ?child .

  # Parent of the professional in the profession of Eugène Cattin
  ?eugeneCattin <http://dbpedia.org/property/profession> ?profession .
  ?professional <http://dbpedia.org/property/profession> ?profession .
  ?result <http://dbpedia.org/ontology/parent> ?professional .

  # Actor of a movie with Herschel Bernardi
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
  ?movie <http://dbpedia.org/ontology/starring> ?result .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,65,val,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?author <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/An_Invitation_to_the_White_House> .
  ?author <http://dbpedia.org/property/politicalParty> ?party .
  
  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q134428> . # Assuming Q134428 is ""disease""
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11070> . # Assuming Q11070 is ""societal event""
    ?commander <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/United_States_Navy> .
  }
  
  OPTIONAL {
    ?resident <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
    ?resident <http://dbpedia.org/property/politicalParty> ?party2 .
    ?work <http://dbpedia.org/ontology/author> ?author2 .
    ?author2 <http://dbpedia.org/ontology/residence> ?resident .
  }
  
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
557,65,val,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  # Producer of Janet Gaynor's claim to fame
  ?movie <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Janet_Gaynor> .
  ?movie <http://dbpedia.org/ontology/producers> ?result .

  # Professional in The Shadow's alter ego
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?result <http://dbpedia.org/property/occupation> ?alterEgo .
  }

  # Producer of Johnny Doughboy's claim to fame
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Johnny_Doughboy> .
    ?work <http://dbpedia.org/ontology/successor> ?actor .
    ?work <http://dbpedia.org/ontology/producers> ?result .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
492,26,val,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?actor1 ?deathPlace1 ?actor2 ?deathPlace2 ?actor3 ?deathPlace3 WHERE {
  # Actor from ""The Sky Ranger"" (1928 film)
  <http://dbpedia.org/resource/The_Sky_Ranger_(film)> <http://dbpedia.org/ontology/starring> ?actor1 .
  OPTIONAL { ?actor1 <http://dbpedia.org/property/deathPlace> ?deathPlace1 . }

  # Death place of Carolyn Jones
  <http://dbpedia.org/resource/Caryn_Jones> <http://dbpedia.org/property/deathPlace> ?deathPlace2 .

  # Actor from ""Aladdin"" (1958 film)
  <http://dbpedia.org/resource/Aladdin_(film)> <http://dbpedia.org/ontology/starring> ?actor3 .
  OPTIONAL { ?actor3 <http://dbpedia.org/property/deathPlace> ?deathPlace3 . }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,64,val,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find predecessor of Stephen V of Hungary
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Step 2: Find child of the predecessor who is royalty
  ?child <http://dbpedia.org/ontology/parent> ?predecessor .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 3: Find Philip's parent who is royalty
  ?philipParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philip_Despot_of_Romania> .
  ?philipParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 4: Find the father of Philip's parent
  ?father <http://dbpedia.org/ontology/parent> ?philipParent .

  # Step 5: Find spouse of this father
  ?result <http://dbpedia.org/ontology/spouse> ?father .

  # Step 6: Ensure the result is a parent of Charles Martel of Anjou
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,66,val,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?author ?spouse WHERE {
  # Step 1: Find works by Bill Clinton that are books and written works
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?author rdfs:label ""Bill Clinton""@en .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this class represents books
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork1000000> .

  # Step 2: Find the spouse who is a politician and office holder
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 represents holding an office

  # Step 3: Identify commander in war related to disease and societal event, linked to USS Arcadia
  OPTIONAL {
    ?warCommander <http://dbpedia.org/property/warCommander> ?spouse .
    ?war <http://dbpedia.org/ontology/commander> ?warCommander .
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 represents war
    ?societalEvent <http://dbpedia.org/property/societalEvent> ?war .
    ?disease <http://dbpedia.org/ontology/disease> ?war .
    ?owner <http://dbpedia.org/ontology/ownedBy> <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> .
  }
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
472,26,val,"Give me the administration of Christian IX of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Administration of Christian IX of Denmark
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/administration> ?admin1 .
  
  # Death place of Christian Ditlev Ammentorp Hansen as a settlement
  <http://dbpedia.org/resource/Christian_Ditlev_Ammenborg_Hansen> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .

  # Territory administered from the death place
  ?admin1 <http://dbpedia.org/property/administeredFrom> ?settlement .

  # Administration of the mayor of Duchy of Schleswig
  ?mayor <http://dbpedia.org/ontology/mayorFor> <http://dbpedia.org/resource/Duchy_of_Schleswig> .
  ?admin2 <http://dbpedia.org/ontology/administration> ?mayor .

  # Find common administration
  FILTER (?admin1 = ?result && ?admin2 = ?result)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
905,62,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  # Part 1: Spouse of the father of the parent (royalty) of Philip, Despot of Romania
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?father <http://dbpedia.org/ontology/child> ?parent .
  ?spouse1 <http://dbpedia.org/ontology/spouse> ?father .

  # Part 2: Parent of the father (royalty) of Maria of Bytom's spouse
  ?mariaSpouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  ?parent2 <http://dbpedia.org/ontology/child> ?mariaSpouse .
  ?parent2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?father2 <http://dbpedia.org/ontology/child> ?parent2 .

  # Part 3: Child of Stephen V of Hungary
  ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  FILTER (?spouse1 = ?father2)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
557,63,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of Kent Allard (print)
  ?fictionalCharacter <http://dbpedia.org/property/fictionalCharacter> ""Kent Allard"" .
  ?fictionalCharacter <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?result <http://dbpedia.org/property/profession> ?v1 .
  
  # Producer of Cora Sue Collins' claim to fame
  ?work <http://dbpedia.org/ontology/claimToFame> ""Cora Sue Collins"" .
  ?work <http://dbpedia.org/ontology/producer> ?result .

  # Producer of Janet Gaynor's movie claim to fame
  ?movie <http://dbpedia.org/ontology/workType> ""Movie"" ;
         <http://dbpedia.org/ontology/claimToFame> ""Janet Gaynor"" .
  ?movie <http://dbpedia.org/ontology/producer> ?result .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
769,18,val,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
SELECT ?player WHERE {
  # Manager of Hong Kong C Team who is a sports manager and soccer manager
  ?manager <http://dbpedia.org/ontology/teamManager> <http://dbpedia.org/resource/Hong_Kong_C_Team> .
  ?manager <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""sports manager"") && CONTAINS(LCASE(?v1), ""soccer manager"")) .

  # Player associated with this manager
  ?player <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Hong_Kong_C_Team> .
  
  # Person born on Tony Hollings' birthday with specified occupations
  ?person <http://www.w3.org/2000/01/rdf-schema#birthDate> ?birthday .
  FILTER(?birthday = <http://dbpedia.org/resource/Tony_Hollings#birthDate>) .

  ?person <http://dbpedia.org/property/occupation> ?v2 .
  FILTER(CONTAINS(LCASE(?v2), ""athlete"") && CONTAINS(LCASE(?v2), ""soccer player"") &&
         CONTAINS(LCASE(?v2), ""sports manager"") && CONTAINS(LCASE(?v2), ""soccer manager"")) .

  # Player associated with this person
  ?player <http://dbpedia.org/ontology/teamMember> ?person .
}
```",5,11,6,3,2,3,2,20,0,0,2,0,0.0,0
39,64,val,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  # Find the producer of Coke Studio Philippines
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
  
  # Identify Bob Thompson's birth name and associated band
  ?musician <http://www.w3.org/2000/01/rdf-schema#label> ""Bob Thompson (musician)""@en ;
            <http://dbpedia.org/property/birthName> ?birthName ;
            <http://dbpedia.org/property/band> ?band .
  
  # Ensure the professional is in the same field as both producer and musician
  ?result <http://dbpedia.org/ontology/profession> ?v1 .
  FILTER(?producer = ?result || ?band = ?result)
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
905,63,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Philip, Despot of Romania's parent who is royalty
  ?parent <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the spouse of this parent's father
  ?father <http://dbpedia.org/ontology/family> ?parent .
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .

  # Step 3: Identify Béla IV of Hungary's child who is royalty
  ?child <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 4: Find the parent of this child's father, who is royalty
  ?father2 <http://dbpedia.org/ontology/family> ?child .
  ?parent2 <http://dbpedia.org/ontology/family> ?father2 .
  ?parent2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 5: Combine conditions to find the overlapping entity
  FILTER (?spouse = ?result && ?parent2 = ?result)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
414,18,val,"Give me the award of the awardee of Nobel Prize in Physics and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award WHERE {
  ?person <http://dbpedia.org/ontology/nobelPrize> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> .
  ?award <http://dbpedia.org/property/awardee> ?person .
  ?show <http://dbpedia.org/property/host> ?host .
  ?show <http://dbpedia.org/ontology/show> ?award .
  ?host <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/resource/Educational_institution> .
  
  FILTER(?person = <http://dbpedia.org/resource/Rainer_Weiss>)
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
198,63,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
SELECT ?entity WHERE {
  # Birthplace of Henry Clay Lewis that is an American settlement
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""us"") || CONTAINS(LCASE(?settlementLabel), ""america""))
  
  # War associated with the awardee of a show related to United States Congress
  OPTIONAL {
    ?awardShow <http://dbpedia.org/ontology/awardee> ?awardee .
    ?awardShow <http://www.w3.org/2000/01/rdf-schema#label> ""United_States_Congress"" .
    ?awardee <http://dbpedia.org/property/war> ?war .
  }
  
  # Force associated with the awardee of Gillmore Medal
  OPTIONAL {
    ?gillmoreMedalAwardee <http://dbpedia.org/ontology/recipient> ?force .
    ?gillmoreMedalAwardee <http://www.w3.org/2000/01/rdf-schema#label> ""Gillmore_Medal"" .
  }
  
  # Ensure the entity matches all conditions
  FILTER (?birthPlace = ?entity && ?war = ?entity && ?force = ?entity)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
159,62,val,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/event> ""Great Turkish War"" .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  
  ?commander <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://dbpedia.org/property/politicalParty> ?party .
  ?successor <http://dbpedia.org/ontology/officeHolder> ?office .

  ?conflict <http://dbpedia.org/ontology/event> ""military conflict"" ;
            <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> .
  
  OPTIONAL {
    ?reference <http://dbpedia.org/property/writer> ?writer .
    ?writer <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/George_Ducas> .
    FILTER(?successor = ?reference)
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
513,18,val,Give me the residence of the leader of Ulster Unionist Party and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v3 <http://dbpedia.org/ontology/residence> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?residence ?awardEntity WHERE {
  # Find the leader of Ulster Unionist Party and their residence
  ?leader <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Ulster_Unionist_Party> .
  ?leader <http://dbpedia.org/property/residence> ?residence .

  # Find awards related to George Hamilton Cameron and associated entities
  ?award <http://dbpedia.org/ontology/receipient> <http://dbpedia.org/resource/George_Hamilton_Cameron> .
  ?award <http://dbpedia.org/ontology/entity> ?awardEntity .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
39,65,val,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
SELECT ?result WHERE {
  # Determine Sam Concepcion's profession
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/ontology/profession> ?profession .

  # Find individuals with the same profession as Sam Concepcion
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  
  # Identify Kid Rock's band
  OPTIONAL {
    <http://dbpedia.org/resource/Kid_Rock> <http://dbpedia.org/property/band> ?band .
    ?person <http://dbpedia.org/property/memberOfBand> ?band .
  }
  
  # Find fictional characters created by Walter B. Gibson with an alter ego
  OPTIONAL {
    ?character <http://www.wikidata.org/entity/P50> <http://dbpedia.org/resource/Walter_B._Gibson> . # Assuming P50 is ""creator""
    ?character <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    ?person <http://dbpedia.org/property/profession> ?alterEgo .
  }
}
```",7,10,8,3,3,3,3,71,0,0,4,0,0.0,0
353,66,val,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Roger III's parent
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  
  # Step 2: Find the child of this parent (Roger III's sibling or cousin)
  ?result <http://dbpedia.org/ontology/parent> ?parent .

  # Step 3: Identify Constance of Burgundy's royal spouse and their descendants
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  
  ?child1 <http://dbpedia.org/ontology/parent> ?spouse .
  ?grandchild <http://dbpedia.org/ontology/parent> ?child1 .

  # Step 4: Ensure the result is also a parent of William I's royal child
  ?williamChild <http://dbpedia.org/ontology/parent> ?result .
  ?williamChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  
  FILTER(?grandchild = ?result) # Ensure the person matches both conditions
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
119,66,val,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . }","```sparql
SELECT ?result WHERE {
  # Tenant of an administration related to PSOE
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  
  # Office of the leader in the 2009 Galician regional election
  ?result <http://dbpedia.org/property/electionRole> <http://dbpedia.org/resource/2009_Galician_regional_election> .

  # Tenant of a residence that is a country, linked to Álvaro Quirós
  OPTIONAL {
    ?country <http://dbpedia.org/ontology/country> ?result .
    ?country <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Álvaro_Quirós> .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
943,66,val,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?childOfYeshaqParent ?fatherOfChild ?bamedaMaryamChild WHERE {
  # Step 1: Find Yeshaq I's parent who is a royalty
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 2: Find the child of this royal parent
  ?childOfYeshaqParent <http://dbpedia.org/ontology/parent> ?parent .

  # Step 3: Determine the father of this child who is a royalty and an office holder
  ?fatherOfChild <http://dbpedia.org/ontology/parent> ?childOfYeshaqParent .
  ?fatherOfChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?fatherOfChild <http://www.wikidata.org/entity/P39> ?office . # Office holder

  # Step 4: Identify Baeda Maryam I's child
  ?bamedaMaryamChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .

  # Step 5: Reference to The Shadow's alter ego (assuming a property for alter ego)
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,62,val,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find fictional and comics characters created by Walter B. Gibson
  ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?character <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q169501> . # Fictional character
  ?character <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Comics character

  # Step 2: Find the alter ego of such a creation
  ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
  
  # Step 3: Identify the producer of Coke Studio Philippines
  ?producer <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Coke_Studio_Philippines> .

  # Step 4: Identify Bob Thompson's band
  ?band <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Bob_Thompson_(musician)> .
  
  # Step 5: Find a professional involved in both roles
  ?result <http://dbpedia.org/ontology/profession> ?alterEgo .
  ?result <http://dbpedia.org/ontology/profession> ?producer .
  ?result <http://dbpedia.org/ontology/profession> ?band .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
293,66,val,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Find the ruling party member in Central, Louisiana
  ?partyMember <http://dbpedia.org/ontology/memberOf> ?rulingParty .
  ?rulingParty <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Central,_Louisiana> .

  # Identify Tisha Sterling's parent and their birth name
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> .
  ?parent <http://dbpedia.org/property/birthName> ?birthName .

  # Find a person with the same birth name as Tisha Sterling's parent
  ?result <http://dbpedia.org/property/birthName> ?birthName .

  # Identify the actor of ""1,000 Dollars a Minute"" and their spouse
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/1000_Dollars_a_Minute> .
    ?actor <http://dbpedia.org/ontology/spouse> ?result .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
80,65,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with  and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Find songs by T.I. that are both Song and MusicalWork
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Song100000001> .
  ?song <http://dbpedia.org/ontology/musicalWork> ?musicalWork .
  ?musicalWork <http://www.w3.org/2000/01/rdf-schema#label> ""T.I.""@en .
  
  # Find albums associated with these songs
  ?album <http://dbpedia.org/property/song> ?song .
  ?result <http://dbpedia.org/ontology/starring> ?album .

  # Check if the individual acted in a movie
  OPTIONAL { 
    ?movie <http://dbpedia.org/ontology/starring> ?result .
  }

  # Professional involvement with The Shadow alter ego
  OPTIONAL {
    ?shadowAlterEgo <http://dbpedia.org/property/alterEgo> ""The Shadow""@en .
    ?result <http://dbpedia.org/property/occupation> ?shadowAlterEgo .
  }
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
119,65,val,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  ?result <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/office> ?office .
    FILTER(?office = <http://dbpedia.org/resource/2009_Galician_regional_election>)
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
756,65,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  # Manager of Thomas Letsch's team during a soccer club season
  ?team <http://dbpedia.org/ontology/team> :Thomas_Letsch .
  ?team <http://dbpedia.org/property/manager> ?result .

  # Manager in the 2007–08 VfL Bochum season
  OPTIONAL {
    :VfL_Bochum_2007-08_season <http://dbpedia.org/ontology/team> ?player .
    ?player <http://dbpedia.org/property/manager> ?result .
  }

  # Native of the administration country of West Germany
  :West_Germany <http://dbpedia.org/ontology/administeredBy> ?country .
  ?result <http://dbpedia.org/ontology/nationality> ?country .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
159,63,val,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
SELECT ?commander ?successor WHERE {
  # Commander in a war that is both a television show and societal event
  ?war <http://dbpedia.org/ontology/war> ?event .
  ?event rdf:type <http://dbpedia.org/class/yago/YAGO2GeoPoliticalEntity0000018375> ; # Television Show
         rdf:type <http://dbpedia.org/class/yago/YAGO_SocietalEvent0000000021> . # Societal Event
  
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  
  # Successor who is a politician and office holder
  ?successor <http://dbpedia.org/ontology/successor> ?commander .
  ?successor <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (?v1 IN (<http://dbpedia.org/resource/Politician>, <http://dbpedia.org/resource/Office_holder>)).
  
  # Force involving Michał Kazimierz Pac
  ?force <http://dbpedia.org/ontology/event> ?event2 .
  ?event2 rdf:type <http://dbpedia.org/class/yago/YAGO_MilitaryConflict0000018375> ; # Military Conflict
          rdf:type <http://dbpedia.org/class/yago/YAGO_Event0000000021> . # Event
  
  ?commander <http://dbpedia.org/ontology/commander> ?force .
  ?force <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Micha%C5%82_Kazimierz_Pac> .

  # Reference to the writer of ""Always the Love Songs""
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/Always_the_Love_Songs> .
    ?commander <http://dbpedia.org/property/reference> ?writer .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
737,65,val,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> .
  
  ?grandChild1 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> .
  ?greatGrandChild1 <http://dbpedia.org/ontology/father> ?grandChild1 .
  ?target <http://dbpedia.org/ontology/father> ?greatGrandChild1 .

  ?grandChild2 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?target <http://dbpedia.org/ontology/father> ?grandChild2 .

  ?target <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  ?predecessor <http://dbpedia.org/ontology/successor> ?target .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,64,val,"Give me the birth place of Glenn Youngkin and birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlaceGlennYoungkin ?birthPlaceAwardee ?birthPlaceAuthor WHERE {
  # Birthplace of Glenn Youngkin
  <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceGlennYoungkin .

  # Awardee associated with Vince Gilligan's award
  OPTIONAL {
    ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Vince_Gilligan> .
    ?otherRecipient <http://dbpedia.org/property/recipient> ?award .
    ?otherRecipient <http://dbpedia.org/ontology/birthPlace> ?birthPlaceAwardee .
  }

  # American author referenced in ""El Deafo""
  OPTIONAL {
    ?reference <http://dbpedia.org/resource/El_Deafo> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?authorResource .
    ?authorResource <http://dbpedia.org/ontology/birthPlace> ?birthPlaceAuthor .
    ?authorResource <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,65,val,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify the child of Frederick Stanley who is a politician
  ?child <http://dbpedia.org/ontology/father> ?result .
  ?child <http://dbpedia.org/property/politician> true .

  # Step 2: Ensure this person (result) is also a parent to an awardee of the Commander of the Royal Victorian Order
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/father> ?result .
    ?awardee <http://dbpedia.org/property/order> <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  }

  # Step 3: Ensure this person (result) is also a parent to the child of Edward Stanley who is both a politician and an office holder
  OPTIONAL {
    ?child2 <http://dbpedia.org/ontology/father> ?result .
    ?child2 <http://dbpedia.org/property/politician> true .
    ?child2 <http://dbpedia.org/property/officeHolder> true .

    # Ensure the child2 is also a child of Edward Stanley
    ?child2 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,63,val,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?result WHERE {
  # Find the profession of Shatrughan Sinha
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/ontology/profession> ?profession .
  
  # Identify individuals with the same profession
  ?result <http://dbpedia.org/ontology/profession> ?profession .

  # Find works that are both films and television shows featuring Richard E. Grant
  ?work <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E_Grant> .
  ?work <http://dbpedia.org/ontology/starring> ?result .
  
  # Ensure the work is classified as both a film and a television show
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie0000015> . # Assuming this class represents films
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow0000015> . # Assuming this class represents TV shows

  # Check for professional involvement with The Shadow's alter ego
  OPTIONAL {
    ?result <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  }
}
```",7,8,8,3,3,3,3,71,0,0,13,0,0.0,0
80,63,val,Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/property/profession> ?profession .

  # Actor of the movie with the author of Smartbomb (book)
  <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/ontology/bookAuthor> ?author .
  ?movie <http://dbpedia.org/ontology/writer> ?author .
  ?movie <http://dbpedia.org/ontology/starring> ?result .

  # Actor of the album of What You Know (T.I. song)
  OPTIONAL {
    <http://dbpedia.org/resource/What_You_Know_(song)> <http://dbpedia.org/ontology/album> ?album .
    ?album <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
706,18,val,Give me the birthplace of the actor of Akaler Shandhaney and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?actorBirthplace ?fellowshipAwardeeBirthplace WHERE {
  # Find actor of Akaler Shandhaney and their birthplace
  <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/birthPlace> ?actorBirthplace .

  # Find awardee of Sangeet Natak Akademi Fellowship and their birthplace
  ?fellowshipAwardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> .
  ?fellowshipAwardee <http://dbpedia.org/property/birthPlace> ?fellowshipAwardeeBirthplace .
}
```",5,5,6,3,2,3,2,20,2,8,0,0.2,1.0,0.33333333333333337
198,65,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor and force of the awardee of the award of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
SELECT ?entity WHERE {
  # Henry Clay Lewis' birthplace that is a settlement in America
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""us"") || CONTAINS(LCASE(?settlementLabel), ""america"")) .

  # War of the awardee of Medal of Honor
  ?medalAwardee <http://dbpedia.org/ontology/honoredFor> ?award .
  FILTER (?award = <http://dbpedia.org/resource/Medal_of_Honor>) .
  ?medalAwardee <http://dbpedia.org/property/war> ?war .

  # Force of the awardee of Quincy Adams Gillmore's award
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/honoredFor> ?gillmoreAward .
  ?force <http://dbpedia.org/property/awardedTo> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .

  # Entity that satisfies all conditions
  FILTER (?birthPlace = ?entity || ?war = ?entity || ?force = ?entity)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,26,val,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . }","```sparql
SELECT ?result WHERE {
  # Child of Maximilian I, Holy Roman Emperor
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> .
  
  # Father of the parent of Dorothea of Denmark, Electress Palatine
  ?parent <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> .
  ?result <http://dbpedia.org/ontology/father> ?parent .

  # Father of a child who is royalty of Philip I of Castile
  OPTIONAL {
    ?child2 <http://dbpedia.org/ontology/father> ?result .
    ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
    ?child2 <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Philip_I_of_Castile> .
  }
  
  FILTER (?result = ?child)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
687,62,val,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
SELECT ?result WHERE {
  # Part 1: Person born on Marty Pollio's birthday who is an athlete
  <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate ;
          <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""athlete""))

  # Part 2: Player in the actor of a film directed by Manuel Huerga, who is also a soccer player and an athlete
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  ?actor <http://dbpedia.org/ontology/starring> ?film ;
         <http://dbpedia.org/property/occupation> ?v2 .
  FILTER(CONTAINS(LCASE(?v2), ""soccer player"") && CONTAINS(LCASE(?v2), ""athlete""))

  # Part 3: Team associated with Pablo Aimar
  ?team <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Pablo_Aimar> .

  # Combine conditions to find the result
  FILTER(?person = ?actor && EXISTS { ?actor <http://dbpedia.org/ontology/teamMember> ?team })
  
  BIND(?person AS ?result)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
531,62,val,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commanderOffice WHERE {
  ?commander a <http://dbpedia.org/ontology/Politician> ;
             <http://dbpedia.org/ontology/officeHolder> true ;
             <http://dbpedia.org/ontology/commanderOf> ?force .
  
  ?force a <http://dbpedia.org/ontology/MilitaryConflict> , <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .

  OPTIONAL {
    ?leader a <http://dbpedia.org/ontology/OfficeHolder> ;
            <http://dbpedia.org/property/electedDuring> <http://dbpedia.org/resource/2003_Madrid_City_Council_election> .
    
    ?residence <http://dbpedia.org/ontology/tenant> ?tenant ;
               <http://dbpedia.org/ontology/resident> ?leader .

    ?miguelOffice a <http://dbpedia.org/ontology/Office> ;
                  <http://dbpedia.org/property/heldBy> <http://dbpedia.org/resource/Miguel_Maura> .
    
    ?tenant <http://dbpedia.org/ontology/officeHolder> ?miguelOffice .
  }
  
  ?commander <http://dbpedia.org/ontology/office> ?commanderOffice .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
347,66,val,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Maria Anna of Bavaria's royal child
  ?child <http://dbpedia.org/ontology/father> ?father .
  <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""

  # Step 2: Identify the father of this child
  ?father <http://dbpedia.org/ontology/father> ?result .

  # Step 3: Find commander in a war that is also a societal event, television show, and general event involving the 2nd Dragoon Regiment (France)
  OPTIONAL {
    ?war <http://dbpedia.org/property/involves> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q1180374> . # Assuming Q1180374 is ""societal event""
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 is ""television show""
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q221225> . # Assuming Q221225 is ""event""
    ?result <http://dbpedia.org/ontology/commander> ?war .
  }

  # Step 4: Ensure this commander is also the father of Ferdinand III's child
  OPTIONAL {
    ?childFerdinand <http://dbpedia.org/ontology/father> ?result .
    <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/parent> ?childFerdinand .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
58,18,val,Give me the producer of the movie with  and spouse of the person born as the birth name of Linda Bruckheimer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find movies associated with Linda Bruckheimer
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Linda_Bruckheimer> .
  
  # Step 2: Identify the producer of these movies
  ?movie <http://dbpedia.org/property/producer> ?result .

  OPTIONAL {
    # Step 3: Find people with birth name Linda Bruckheimer and their spouses
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Linda Bruckheimer""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Linda Bruckheimer"" .
    ?spouse <http://dbpedia.org/ontology/spouse> ?person .
    
    # Ensure the producer is also a spouse
    FILTER(?result = ?spouse)
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
198,64,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  
  ?gillmore <http://dbpedia.org/property/militaryService> ?force .
  FILTER(?gillmore = <http://dbpedia.org/resource/Quincy_Adams_Gillmore>) .

  ?award <http://dbpedia.org/ontology/awardee> ?person .
  ?award <http://dbpedia.org/ontology/organizer> <http://dbpedia.org/resource/United_States_Congress> .
  
  ?war <http://dbpedia.org/property/warOfAwards> ?award .

  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  FILTER(STRSTARTS(STR(?settlement), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> }).
  
  BIND(?birthplace AS ?result)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,66,val,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow (video game) comics character
  <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/alterEgo> ?v1 .
  ?result <http://dbpedia.org/property/profession> ?v1 .

  # Professional in the profession of Shatrughan Sinha
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/profession> ?profession .
  ?result <http://dbpedia.org/property/profession> ?profession .

  # Actor of a movie that is a television show with Richard E. Grant
  OPTIONAL {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
    ?movie <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Television_films> .
    ?movie <http://dbpedia.org/ontology/starring> ?result .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  }
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
628,65,val,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify musical artist native to Florida
  ?artist <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?artist <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069365> .

  # Step 2: Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?award <http://dbpedia.org/ontology/type> ?type .
  FILTER (?type IN (<http://dbpedia.org/class/yago/AmericanStates100000001>, 
                   <http://dbpedia.org/class/yago/SettlementsInAmerica1000000>, 
                   <http://dbpedia.org/class/yago/RegionsOfTheUnitedStates1000000>)) .

  # Step 3: Identify band member of Bobby Shmurda's associated musical artist
  ?bobbyArtist <http://dbpedia.org/ontology/associatedBandMember> ?bandMember .
  ?bobbyArtist <http://www.w3.org/2000/01/rdf-schema#label> ""Bobby Shmurda"" .

  # Step 4: Combine conditions to find the person
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person = ?artist .
  ?person = ?bandMember .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
80,66,val,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Actor of an album associated with ""What You Know"" by T.I.
  <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/inAlbum> ?album .
  ?album <http://dbpedia.org/ontology/starring> ?result .

  # Professional involvement with The Golden Master's alter ego
  OPTIONAL {
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
295,18,val,"Give me the native of the birth place of Victor Saville and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?native ?writer WHERE {
  # Step 1: Find Victor Saville's birth place
  <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Identify a native of the birth place
  ?native <http://dbpedia.org/property/nativeOf> ?birthPlace .

  # Step 3: Find Steven Kapur's true self as an artist
  <http://dbpedia.org/resource/Steven_Kapur> <http://www.wikidata.org/entity/P106> ?artist .
  
  # Step 4: Identify a musical work by the artist
  ?musicalWork <http://dbpedia.org/ontology/work> ?artist ;
               <http://purl.org/dc/terms/type> <http://dbpedia.org/resource/Musical_work> .

  # Step 5: Find the writer of the musical work
  ?musicalWork <http://dbpedia.org/ontology/writer> ?writer .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
258,18,val,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?university ?foundingDate WHERE {
  # Alma mater of Luiza Erundina
  <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?university .
  
  # Alma mater of Eleonora Menicucci de Oliveira
  <http://dbpedia.org/resource/Eleonora_Menicucci_de_Oliveira> <http://dbpedia.org/ontology/almaMater> ?university .

  # University characteristics
  ?university <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q3914> . # Q3914 is the identifier for ""university""
  
  OPTIONAL {
    ?university <http://dbpedia.org/ontology/foundingDate> ?foundingDate .
  }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
737,63,val,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
SELECT ?result WHERE {
  # Child of the child of Duke Philipp of Württemberg
  ?grandchild1 <http://dbpedia.org/ontology/parent> ?child1 .
  ?child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .

  # Child of the child, that is a royalty, of Archduke Charles Louis
  ?grandchild2 <http://dbpedia.org/ontology/parent> ?child2 .
  ?child2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?grandchild2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Predecessor of the child of the spouse, that is a royalty, of Archduchess Helena
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
    ?royalChild <http://dbpedia.org/ontology/parent> ?spouse .
    ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
    ?result <http://dbpedia.org/ontology/successor> ?royalChild .
  }

  # Ensure the result matches both grandchild conditions
  FILTER (?grandchild1 = ?grandchild2 && ?grandchild1 = ?result)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,64,val,"Give me the child of the parent of the child of Minye Kyawswa and spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Child of the parent of the child of Minye Kyawswa
  ?childMinyeKyawswa <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?grandParent ?childMinyeKyawswa <http://dbpedia.org/ontology/parent> .
  ?result ?grandParent <http://dbpedia.org/ontology/parent> .

  # Step 2: Spouse of Saw Shwe Khet
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .

  # Step 3: Predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu
  OPTIONAL {
    ?spouseSawMinPhyu <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phu> .
    ?childSpouse ?spouseSawMinPhyu <http://dbpedia.org/ontology/parent> .
    ?childSpouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/successor> ?childSpouse .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,64,val,"Give me the father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Eleonore of Austria's father
  <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find wars that are societal events, general events, and television shows
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ""Algerian War""@en .
  ?war <http://dbpedia.org/ontology/type> ?type1 .
  ?war <http://dbpedia.org/ontology/type> ?type2 .
  
  FILTER (?type1 = <http://dbpedia.org/resource/Societal_event>)
  FILTER (?type2 = <http://dbpedia.org/resource/Event>)
  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/show> ?tvShow .
  }

  # Step 3: Identify commanders in the Algerian War
  ?commander <http://dbpedia.org/ontology/militaryCommanderOf> ?war .

  # Step 4: Ensure commander is also a child of Eleonore's father
  ?result <http://dbpedia.org/ontology/father> ?father .
  
  # Step 5: Identify Maria Anna of Bavaria's royal parentage and their children
  <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> <http://dbpedia.org/ontology/father> ?royalFather .
  ?child <http://dbpedia.org/ontology/father> ?royalFather .
  
  # Ensure the commander is also a child of Maria Anna's royal parent
  FILTER (?result = ?child)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,62,val,"Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?associatedArtist ?realNameBand ?bandMemberBand WHERE {
  # Associated musical artist of Nick Curran
  <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  # Reference to the real name of the band of Kim Wilson
  OPTIONAL { 
    <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/property/band> ?band .
    ?band <http://dbpedia.org/ontology/realName> ?realNameBand .
  }

  # Band of the band member born on 1945-03-30
  OPTIONAL {
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?wikidataPerson .
    ?wikidataPerson <http://www.wikidata.org/entity/P569> ""1945-03-30""^^xsd:date .
    ?person <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^xsd:date .
    ?person <http://dbpedia.org/ontology/band> ?bandMemberBand .
  }
}
```",7,8,8,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
816,63,val,"Give me the parent of the professional in Photographer and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Find photographers
  ?photographer dbo:occupation ""Photographer"" .
  
  # Find parent of Allan Arbus's child
  ?child dbo:parent <http://dbpedia.org/resource/Allan_Arbus> .
  ?parent dbo:child ?child .

  # Actor in a movie that is a work
  ?movie rdf:type dbo:Film .
  ?actor dbo:starring ?movie .

  # Person decedent at Los Angeles
  ?decedent dbo:deathPlace <http://dbpedia.org/resource/Los_Angeles> .

  # Combine conditions to find the person meeting all criteria
  FILTER (?photographer = ?parent && ?parent = ?actor && ?actor = ?decedent)
  
  BIND(?parent AS ?result)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,63,val,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify children of Frederick Stanley, 16th Earl of Derby
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  
  # Step 2: Ensure the person is also a father (implied by gender or explicit property)
  ?result <http://dbpedia.org/ontology/spouse> ?child .
  FILTER EXISTS { ?result <http://www.w3.org/2000/01/rdf-schema#label> ""male""@en } # Assuming male label implies fatherhood
  
  # Step 3: Check if the person is a politician
  ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Politician> .
  
  # Step 4: Find parent of awardee of Rodney Lees' award
  OPTIONAL {
    ?awardRecipient <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Rodney_Lees> .
    ?result <http://dbpedia.org/ontology/birthParent> ?awardRecipient .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,62,val,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Darryl Paa Kwesi Bannerman-Martin
  ?darryl <http://dbpedia.org/ontology/birthName> ""Darryl Paa Kwesi Bannerman-Martin"" .
  
  # Step 2 & 3: Find the writer of The Live Anthology who is a musical artist
  ?anthology <http://dbpedia.org/property/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(CONTAINS(?profession, ""Writer"") && EXISTS { ?writer <http://dbpedia.org/ontology/musicalArtist> [] }).
  
  # Step 4: Ensure the person is a professional in the same profession and a musical artist
  ?darryl <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?profession = ?writerProfession) .
  ?darryl <http://dbpedia.org/ontology/musicalArtist> [] .

  # Step 5: Find $pacely's birth name and associated musical artist
  ?pacely <http://dbpedia.org/ontology/birthName> ""Pacely"" . # Assuming ""Pacely"" is the birth name for $pacely
  ?darryl <http://dbpedia.org/ontology/associatedBand> ?band .
  ?band <http://dbpedia.org/ontology/member> ?pacely .

  BIND(?darryl AS ?result)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,62,val,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
SELECT ?author WHERE {
  # Find the author who is a resident of Chappaqua, NY, and a politician/office holder
  ?work <http://dbpedia.org/ontology/creator> ?author .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this is a class for written works
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Book> .
  
  ?author <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?author <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is the property for holding an office
  ?author <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""

  # Find spouse who authored Hillary Clinton's work and was a commander in Third Taiwan Strait Crisis
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> ?author .
    ?clintonWork <http://dbpedia.org/ontology/creator> ?spouse .
    ?clintonWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Book> .
    ?clintonWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this is a class for written works
    ?spouse <http://www.wikidata.org/entity/P39> ?office2 .
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Politician

    ?spouse <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
  }
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
943,63,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandfather ?child WHERE {
  ?naodFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Na'od> .
  ?grandfather <http://dbpedia.org/ontology/father> ?naodFather .
  
  # Grandfather is a royalty and an office holder
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?grandfather <http://dbpedia.org/ontology/officeHolder> ?v1 .

  # Commander in Siege of Mukha and their parent who is a royalty
  <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/property/commander> ?commander .
  ?parent <http://dbpedia.org/ontology/father> ?commander .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Child of this parent
  ?child <http://dbpedia.org/ontology/father> ?parent .

  # Reference to The Shadow alter ego
  ?child <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/The_Shadow> .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
39,66,val,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Bob Thompson"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  OPTIONAL { 
    ?person <http://dbpedia.org/property/profession> ?v1 .
    <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/profession> ?v1 .
  }

  OPTIONAL {
    ?person <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  }
  
  ?result <http://dbpedia.org/ontology/memberOfBand> ?person .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
23,25,val,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Roy Leonardo Barreras Montealegre"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  ?galan <http://dbpedia.org/resource/Daniel_Elahi_Galán> ;
         <http://dbpedia.org/ontology/nationality> ?country .
  
  ?person <http://dbpedia.org/ontology/nationality> ?country .

  ?petro <http://dbpedia.org/resource/Gustavo_Petro> ;
         <http://dbpedia.org/property/politicalParty> ?party .

  ?person <http://dbpedia.org/property/politicalParty> ?party .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,64,val,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  # Reference to George Ducas
  ?georgeDucas <http://www.w3.org/2000/01/rdf-schema#label> ""George Ducas"" .
  
  OPTIONAL {
    # Successor of the commander in a military conflict that is also an event
    ?commander <http://dbpedia.org/ontology/politician> true ;
               <http://dbpedia.org/ontology/officeHolder> true ;
               <http://dbpedia.org/ontology/successor> ?result .
    
    ?conflict <http://dbpedia.org/ontology/event> true ;
              <http://dbpedia.org/ontology/militaryConflict> true ;
              <http://dbpedia.org/ontology/commander> ?commander .
  }
  
  OPTIONAL {
    # Commander in a war that is both a television show and societal event
    ?war <http://dbpedia.org/ontology/tvSeries> true ;
         <http://dbpedia.org/ontology/societalEvent> true ;
         <http://dbpedia.org/ontology/commander> ?result .
    
    ?battleOfVienna <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?war <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
  
  # Linking all parts together
  ?georgeDucas ?p ?result .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
375,18,val,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?parent WHERE {
  ?deceased <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^xsd:date .
  ?deceased <http://www.wikidata.org/entity/P106> ?occupation1 .
  FILTER (
    EXISTS { ?occupation1 <http://www.wikidata.org/entity/Skos:broader> <http://www.wikidata.org/entity/Q33999> } || # Artist
    EXISTS { ?occupation1 <http://www.wikidata.org/entity/Skos:broader> <http://www.wikidata.org/entity/Q215380> } # Musical artist
  )
  
  ?deceased <http://dbpedia.org/ontology/wrote> ?work .
  ?work <http://purl.org/dc/terms/type> ?type1, ?type2 .
  FILTER (
    EXISTS { ?type1 <http://www.w3.org/2004/02/skos/core#broader*> <http://dbpedia.org/resource/Movie> } &&
    EXISTS { ?type2 <http://www.w3.org/2004/02/skos/core#broader*> <http://dbpedia.org/resource/Television_show> }
  )
  
  ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .
  ?native <http://www.wikidata.org/entity/P106> ?occupation2 .
  FILTER (
    EXISTS { ?occupation2 <http://www.wikidata.org/entity/Skos:broader> <http://www.wikidata.org/entity/Q33999> } || # Artist
    EXISTS { ?occupation2 <http://www.wikidata.org/entity/Skos:broader> <http://www.wikidata.org/entity/Q215380> } # Musical artist
  )
  
  ?native <http://dbpedia.org/ontology/wrote> ?work .
  
  ?native <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
246,18,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Condition 1: Parent of a royal child of Princess Aisha bint Faisal
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .

  # Condition 2: Parent of a royal child of Prince Faisal bin Hussein
  ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> .
  ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?parent <http://dbpedia.org/ontology/birthChild> ?child2 .

}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
103,62,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v3 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Richard E. Grant
  ?richardEGrant <http://dbpedia.org/ontology/birthName> ""Richard Grant Esterhuysen"" .
  
  # Step 2: Find a television show featuring Richard E. Grant
  ?tvShow <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> .
  ?tvShow <http://dbpedia.org/ontology/starring> ?richardEGrant .

  # Step 3: Find actors of this television show
  ?tvShow <http://dbpedia.org/ontology/starring> ?actor .

  # Step 4: Identify the actor from ""Ab Kya Hoga"" who is also a politician
  ?abKyaHogaActor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Ab_Kya_Hoga> .
  ?abKyaHogaActor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  
  # Step 5: Find professionals sharing the same occupation
  ?actor <http://dbpedia.org/property/profession> ?profession .
  ?abKyaHogaActor <http://dbpedia.org/property/profession> ?sameProfession .
  FILTER(?profession = ?sameProfession)
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
557,64,val,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?producer WHERE {
  # Producer of The Adventures of Tom Sawyer (1938 film)
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?producer .

  # Actor of High Society Blues
  OPTIONAL { 
    <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
    
    # Professional in the alter ego of a reference to Kent Allard (print)
    OPTIONAL {
      ?reference <http://dbpedia.org/property/fictionalCharacter> ""Kent Allard"" .
      ?alterEgo <http://dbpedia.org/property/alterEgo> ?reference .
      ?actor <http://dbpedia.org/ontology/profession> ?alterEgo .
    }
    
    # Claim to fame of the actor
    OPTIONAL {
      ?claimToFame <http://dbpedia.org/ontology/filmography> ?actor .
      ?producer <http://dbpedia.org/ontology/producer> ?claimToFame .
    }
  }
}
```",7,10,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
782,65,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  # Find Nicholas Michael Curran who is a musical artist
  ?person <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Find associated musical artist
  OPTIONAL { 
    ?person <http://dbpedia.org/property/associatedBand> ?result .
  }

  # Find person born on 1945-03-30 who is a musical artist and their band membership
  ?otherPerson <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?otherPerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  OPTIONAL { 
    ?otherPerson <http://dbpedia.org/ontology/memberOf> ?band .
  }

  # Reference to the real name of The Fabulous Thunderbirds
  OPTIONAL {
    <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://dbpedia.org/property/realName> ?realName .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,26,val,"Give me the spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Find spouse of Janusz Kamiński
  <http://dbpedia.org/resource/Janusz_Kami%C5%84ski> <http://dbpedia.org/ontology/spouse> ?actor .

  # Actor in a movie with Audrey Hepburn that is both a work and a film
  ?movie1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Audrey_Hepburn> .
  ?movie1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film4896> . # Assuming Film is a subclass of work
  ?movie1 <http://dbpedia.org/ontology/starring> ?actor .

  # Actor in a movie with Iliza Shlesinger that is both a work and a film
  ?movie2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> .
  ?movie2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film4896> . # Assuming Film is a subclass of work
  ?movie2 <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,9,6,2,3,2,3,28,0,0,1,0,0.0,0
225,18,val,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards and entity in the region of the time zone in Kiyosu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japanese_people> .
  ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Assuming Kiyosu is in the Japan Standard Time zone
  ?timeZone <http://www.w3.org/2006/time#during> ?region .
  ?region <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
  FILTER(?timeZone = <http://dbpedia.org/resource/Japan_Standard_Time>) .

  # Ensure the birthplace is in a region associated with this time zone
  ?birthPlace <http://www.w3.org/2006/time#during> ?region .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,62,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?commander <http://dbpedia.org/ontology/commanderInBattle> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?commander <http://dbpedia.org/ontology/father> ?parent .

  ?result <http://dbpedia.org/ontology/parent> ?parent .
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .

  OPTIONAL {
    ?reference <http://dbpedia.org/property/reference> ?alterEgo .
    ?alterEgo <http://dbpedia.org/ontology/alternateName> ""Lamont Cranston"" .
    ?result <http://dbpedia.org/property/reference> ?reference .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
756,63,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . },"```sparql
SELECT ?manager WHERE {
  # Step 1: Identify the successor of the 2006–07 VfL Bochum season
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?successorSeason .
  
  # Step 2: Find the player's manager in the successor season
  ?player <http://dbpedia.org/ontology/team> ?club .
  ?club a <http://dbpedia.org/class/yago/SportsClub108069068> ;
        a <http://dbpedia.org/class/yago/Organisation108069068> ;
        a <http://dbpedia.org/class/yago/SoccerClub108069068> .
  
  ?successorSeason <http://dbpedia.org/ontology/player> ?player .
  ?player <http://dbpedia.org/ontology/teamManager> ?manager .

  # Step 3: Identify the administration country of Theodor Heuss
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/property/nationality> ?country .

  # Step 4: Find the manager of Thomas Letsch's team who is native to that country
  ?letschTeam <http://dbpedia.org/ontology/teamManager> ?manager .
  ?letschTeam a <http://dbpedia.org/class/yago/SoccerClub108069068> ;
              a <http://dbpedia.org/class/yago/SportsSeason108069068> ;
              a <http://dbpedia.org/class/yago/SportsTeamSeason108069068> .

  ?manager <http://dbpedia.org/property/nationality> ?country .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
816,64,val,"Give me the parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
SELECT ?result WHERE {
  # Parent of Amy Arbus
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> .
  
  # Spouse and child of Mariclare Costello
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
  ?child <http://dbpedia.org/ontology/parent> ?spouse .

  # Actor in a movie that is a work with a decedent at Los Angeles
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> ?work .
  ?decedent <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Los_Angeles> .
  ?actor <http://dbpedia.org/ontology/deceased> ?decedent .

  # Combine conditions
  FILTER (?parent = ?result && ?child = ?result)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
687,64,val,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?team1 ?person2 ?athlete WHERE {
  # Part 1: Teams Sergio Agüero has played for
  <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> <http://dbpedia.org/ontology/team> ?team1 .

  # Part 2: Person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  ?person2 <http://dbpedia.org/property/birthDate> ?birthDateSarmiento .
  FILTER (?birthDateSarmiento = <http://dbpedia.org/resource/Marcelo_Sarmiento#birthDate>)
  
  # Ensure the person is both a soccer player and manager
  ?person2 <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?person2 <http://dbpedia.org/property/profession> ""soccer manager"" .

  # Find team of this person
  ?person2 <http://dbpedia.org/ontology/team> ?team2 .

  # Part 3: Athlete born on Marty Pollio's birthday
  ?athlete <http://dbpedia.org/property/birthDate> ?birthDatePollio .
  FILTER (?birthDatePollio = <http://dbpedia.org/resource/Marty_Pollo#birthDate>)
  
  # Ensure the person is an athlete
  ?athlete <http://dbpedia.org/ontology/sport> ?sport .

}
```

Note: The query assumes that DBpedia has structured data for these individuals and their professions, which may require adjustments based on actual available properties. Additionally, specific identifiers like `<http://dbpedia.org/resource/Marcelo_Sarmiento#birthDate>` are placeholders and should be replaced with the correct resource paths if they exist in DBpedia.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
737,64,val,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Child of Albrecht, Duke of Württemberg
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .
  
  # Step 2: Child of the child that is royalty
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 3: Parent of Archduchess Margarete Sophie of Austria
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
    
    # Step 4: Predecessor of the child of the spouse that is royalty
    OPTIONAL {
      ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
      ?childOfSpouse <http://dbpedia.org/ontology/birthParent> ?spouse .
      ?childOfSpouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
      
      ?predecessor <http://dbpedia.org/ontology/successor> ?childOfSpouse .
    }
  }

  # Final condition: The result must satisfy all the above conditions
  FILTER (?result = ?child && ?result = ?grandchild && ?result = ?parent && ?result = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,63,val,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?commanderOffice ?leaderOffice ?tenant WHERE {
  # Part 1: Office of the Commander in Central African Republic Civil War
  ?person <http://dbpedia.org/ontology/office> ?commanderOffice .
  FILTER(CONTAINS(LCASE(STR(?commanderOffice)), ""central african republic civil war"")).
  ?person <http://dbpedia.org/property/politician> true .
  
  # Part 2: Office of the Leader of Conservative Republican Party (Spain)
  OPTIONAL {
    ?leader <http://dbpedia.org/ontology/office> ?leaderOffice .
    FILTER(CONTAINS(LCASE(STR(?leaderOffice)), ""conservative republican party spain"")).
    ?leader <http://dbpedia.org/property/politician> true .
  }
  
  # Part 3: Tenant of the Residence of the Leader in 2003 Madrid City Council Election
  OPTIONAL {
    ?electionLeader <http://dbpedia.org/ontology/office> ?office .
    FILTER(CONTAINS(LCASE(STR(?office)), ""madrid city council election 2003"")).
    ?electionLeader <http://dbpedia.org/property/politician> true .
    
    ?residence <http://dbpedia.org/ontology/residence> ?leaderResidence .
    ?tenant <http://dbpedia.org/ontology/inhabitant> ?leaderResidence .
    FILTER(?electionLeader = ?tenant).
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
668,66,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
SELECT ?result WHERE {
  # Find the person born as Elorm Kabu Amenyah
  ?elon <http://dbpedia.org/ontology/birthName> ""Elorm Kabu Amenyah"" .
  
  # Identify associated musical artist of Elorm Kabu Amenyah
  ?elon <http://dbpedia.org/property/musicalArtist> ?result .

  # Find a native artist from Central Region, Ghana and their birth name
  ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> .
  ?native <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Central_Region,_Ghana> .
  ?native <http://dbpedia.org/ontology/birthName> ?birthName .

  # Find a person born with the same birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .

  # Ensure this person is a professional in the profession of Rod Argent
  ?rod <http://dbpedia.org/ontology/profession> ?profession .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
398,18,val,"Give me the player in the writer of The First Glove and figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/ontology/writer> ?writer .
  
  ?player <http://dbpedia.org/property/player> ?writer .
  ?player <http://dbpedia.org/property/nickname> ?nickname .

  OPTIONAL { 
    ?club <http://dbpedia.org/ontology/team> ?player .
    ?denis <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?club .
  }
  
  BIND(?nickname AS ?result)
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
668,65,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Find associated musical artists of Elorm Kabu Amenyah (Stonebwoy)
  <http://dbpedia.org/resource/Elorm_Kabu_Amenyah> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .

  # Ensure the person is born as the birth name of Joey B
  ?person <http://dbpedia.org/ontology/birthName> <http://dbpedia.org/resource/Joe_Brown_(musician)> .
  
  # Check if this person has a profession related to writing and is also a musical artist for The Live Anthology
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Writing> .
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/The_Live_Anthology> .
    FILTER(?person = ?writer)
  }
  
  # Ensure the result matches all criteria
  FILTER(?result = ?person)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
386,26,val,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  # War of the awardee of Golden Sword for Bravery
  ?awardee <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> .
  ?awardee <http://dbpedia.org/property/war> ?war .

  # War of Karl Gustav von Baggovut
  OPTIONAL { 
    <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/property/war> ?baggovutWar .
    FILTER(?war = ?baggovutWar)
  }

  # Entity in the birth place of Elena Žalinkevičaitė-Petrauskienė
  OPTIONAL {
    <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
    FILTER(?war = ?entity)
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
80,62,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book) and professional in .","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Find a song by T.I.
  ?song <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/T.I._(rapper)> .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork108069068> . # Assuming this is the class for ""Song""
  
  # Find the album of the song
  ?song <http://dbpedia.org/property/album> ?album .
  
  # Identify the author of Smartbomb (book)
  ?smartbombBook <http://purl.org/dc/terms/creator> ?author .
  FILTER(?smartbombBook = <http://dbpedia.org/resource/Smartbomb_(book)>)
  
  # Find movies written by this author
  ?movie <http://dbpedia.org/ontology/writer> ?author .
  
  # Find actors in those movies
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  
  # Attempt to find a professional connection related to T.I.
  OPTIONAL {
    ?actor <http://dbpedia.org/property/occupation> ?v1 .
    FILTER(?v1 = ""Musician"" || ?v1 = ""Rapper"") # Assuming we are looking for connections in music
  }
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
203,62,val,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?battleForce ?warForce ?commander WHERE {
  # Military force of Battle of Cape Finisterre (1805)
  <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/ontology/militaryForce> ?battleForce .

  # War related to William Bayne
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
      <http://dbpedia.org/ontology/event> ?event .
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/William_Bayne> .
  ?reference <http://dbpedia.org/ontology/references> ?war .
  ?war <http://dbpedia.org/ontology/militaryForce> ?warForce .

  # Commander in the war associated with The Triple X's
  ?figure a <http://dbpedia.org/ontology/Figure> ;
          <http://dbpedia.org/property/knowAs> ""The Triple X's"" .
  ?reference2 <http://dbpedia.org/property/reference> ?figure .
  ?reference2 <http://dbpedia.org/ontology/references> ?war2 .
  ?war2 a <http://dbpedia.org/ontology/MilitaryConflict> ;
        <http://dbpedia.org/ontology/event> ?event2 .
  ?war2 <http://dbpedia.org/property/commander> ?commander .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
89,63,val,"Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Step 1: Predecessor of child of Saw Shwe Khet
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  # Step 2: Child of parent of child of Minye Kyawswa
  ?grandchild <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?result <http://dbpedia.org/ontology/child> ?grandchild .

  # Step 3: Spouse of the royal father of Myat Hpone Pyo
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }

  FILTER (?predecessor = ?result)
}
```",7,8,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
140,18,val,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/event> ?societalEvent .
  ?societalEvent rdfs:label ""Pickett's Charge""@en .
  
  ?commander <http://dbpedia.org/ontology/commander> ?event .
  ?commander rdfs:label ?result .

  OPTIONAL {
    ?party <http://www.wikidata.org/entity/P102> ?rulingParty .
    ?rulingParty rdfs:label ""Westport, Connecticut""@en .
    
    ?party rdf:type <http://dbpedia.org/ontology/Organisation> .
    ?party rdf:type <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 is the identifier for ""political party""
    
    ?commander <http://dbpedia.org/property/memberOf> ?party .
  }
}
```",5,8,6,3,2,3,2,20,0,0,4,0,0.0,0
353,62,val,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find children who are royalty of Roger II of Sicily
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find parent of these children
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Identify references that are royalty and office holders related to William I
  OPTIONAL {
    ?reference <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
    ?reference <http://dbpedia.org/ontology/officeHolder> ?office .
    ?office <http://dbpedia.org/property/heldBy> <http://dbpedia.org/resource/William_I> .

    # Find children who are royalty of these references
    ?childRef <http://dbpedia.org/ontology/parent> ?reference .
    ?childRef <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty

    # Step 4: Find parent of Elvira of Castile
    ?elviraParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .

    # Final condition to find the result
    FILTER (?parent = ?elviraParent)
    BIND(?childRef AS ?result)
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
293,62,val,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  # Find films produced by Nat Levine
  ?film <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Nat_Levine> .
  
  # Identify actors of these films
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  
  # Determine the spouse of these actors
  ?actor <http://dbpedia.org/property/spouse> ?spouse .

  # Find landmarks at elevation 20.1168 and their ruling party members
  ?landmark <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?rulingParty .
  ?rulingParty <http://dbpedia.org/ontology/member> ?partyMember .
  
  # Ensure the spouse is a member of this ruling party
  FILTER(?spouse = ?partyMember)

  # Find individuals born as Harriette Arlene Lake
  ?person <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""^^<http://www.w3.org/2001/XMLSchema#string> .
  
  # Ensure the spouse is this person
  FILTER(?spouse = ?person)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,66,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Identify the player associated with VfL Bochum in the 2007–08 season
  ?player <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/VfL_Bochum> .
  ?player <http://dbpedia.org/property/sportClubSeason> <http://dbpedia.org/resource/2007%E2%80%9308_VfL_Bochum_season> .

  # Step 2: Find the manager of this player
  ?manager <http://dbpedia.org/ontology/manages> ?player .
  
  # Step 3: Determine Theodor Heuss's native country
  <http://dbpedia.org/resource/Theodor_Heuss> <http://www.wikidata.org/entity/P27> ?country .

  # Step 4: Identify a sports manager born on 1968-08-26
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:1968_births> .
  ?person <http://www.wikidata.org/entity/P569> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Sports_managers> .

  # Step 5: Find the team managed by this sports manager during a soccer club season
  ?team <http://dbpedia.org/ontology/teamManager> ?person .
  ?team <http://dbpedia.org/property/sportClubSeason> ?season .
  
  FILTER (?country = <http://dbpedia.org/resource/Germany>) # Assuming Theodor Heuss's country is Germany

}
```

This query attempts to follow the logical steps outlined, but due to potential gaps in DBpedia data for specific historical sports management details, it may require adjustments or additional context.",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
293,65,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?person WHERE {
  # Find Ann Sothern's birth name
  <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Identify films produced by Nat Levine and find actors in those films
  ?film <http://dbpedia.org/property/product> <http://dbpedia.org/resource/Nat_Levine> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .

  # Find the spouse of the actor
  ?person <http://dbpedia.org/ontology/spouse> ?actor .

  # Check if the person is a member of the ruling party in Central, Louisiana
  OPTIONAL {
    ?party <http://dbpedia.org/property/rulingPartyIn> <http://dbpedia.org/resource/Central,_Louisiana> .
    ?person <http://dbpedia.org/ontology/politicalAffiliation> ?party .
  }

  # Ensure the person was born with Ann Sothern's birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,64,val,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Find $pacely's birth name and their associated musical artist
  ?pacely <http://dbpedia.org/ontology/birthName> ""Pacely"" .
  ?pacely <http://dbpedia.org/ontology/musicArtist> ?artist .

  # Find the native artist from Central Region, Ghana by birth name
  ?native <http://dbpedia.org/ontology/birthName> ?birthName .
  ?native <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Central_Region,_Ghana> .
  ?native <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> . # Assuming Q33999 is ""artist""
  
  # Ensure the person is a musician
  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musician> .

  # Link the associated musical artist with both conditions
  FILTER (?artist = ?result)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,62,val,"Give me the father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Father of Arthur Stanley (politician)
  ?arthur <http://dbpedia.org/ontology/father> ?result .
  FILTER(STRSTARTS(LCASE(?arthur), ""http://dbpedia.org/resource/arthur_stanley_(politician)""))

  # Parent of the awardee of Rodney Lees' award
  OPTIONAL {
    ?awardRecipient <http://dbpedia.org/ontology/receiver> ?award .
    ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Rodney_Lees> .
    ?result <http://dbpedia.org/ontology/parent> ?awardRecipient .
  }

  # Parent of the child of the parent (politician and office holder) of Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    ?edwardParent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/E._Stanley,_17th_Earl_of_Derby> .
    FILTER(STRSTARTS(LCASE(?edwardParent), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?edwardParent <http://dbpedia.org/property/politician> true } &&
           EXISTS { ?edwardParent <http://dbpedia.org/property/officeHolder> true })
    ?child <http://dbpedia.org/ontology/parent> ?edwardParent .
    ?result <http://dbpedia.org/ontology/parent> ?child .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
392,9,val,Give me the member of the figure known as Der Blau and reference to the designer of Aston Martin AMR1.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
SELECT ?member ?designerReference WHERE {
  # Find members associated with ""Der Blau""
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Der Blau""@en .
  ?member <http://dbpedia.org/ontology/member> ?entity .

  # Find the designer of Aston Martin AMR1
  <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?designer .

  # Retrieve references related to the designer
  ?designer <http://www.w3.org/2002/07/owl#sameAs> ?designerReference .
}
```",4,4,5,2,2,2,2,9,0,0,6,0,0.0,0
628,66,val,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Get Bobby Shmurda's birth name
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find a person who is both a band member and musical artist associated with Bobby Shmurda
  ?result <http://dbpedia.org/property/bandMember> ?bshmurdaBand .
  ?result <http://dbpedia.org/ontology/musicalArtist> ?musicalArtist .
  ?bshmurdaBand <http://dbpedia.org/ontology/member> ?result .
  
  # Step 3: Find an award linked to a region that is also a state and settlement
  ?award <http://dbpedia.org/property/location> ?region .
  ?region <http://www.w3.org/2002/07/owl#sameAs> ?state .
  ?state rdf:type <http://dbpedia.org/class/yago/StatesAndProvincesInAmerica> .
  ?state rdf:type <http://dbpedia.org/class/yago/PopulatedPlacesInNewYorkState> .

  # Step 4: Identify the awardee from New York State
  ?award <http://dbpedia.org/ontology/awardee> ?band .
  ?band <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/New_York_(state)> .
  
  # Ensure all conditions are met for the same person
  FILTER(?result = ?birthName)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
687,63,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Person born on 1979-11-03 who is a soccer player and manager
  ?person <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^xsd:date .
  ?person <http://dbpedia.org/property/occupation> ?occupation .
  
  FILTER (
    (CONTAINS(LCASE(?occupation), ""soccer player"") && CONTAINS(LCASE(?occupation), ""soccer manager""))
  )
  
  # Step 2: Player in the person born on Marty Pollio's birthday
  ?marty <http://dbpedia.org/ontology/birthDate> ?birthday .
  ?player1 <http://dbpedia.org/property/team> ?person .

  # Step 3: Player in the actor from ""All or Nothing: Manchester City""
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> .
  FILTER (
    CONTAINS(LCASE(?actor), ""soccer player"") && CONTAINS(LCASE(?actor), ""athlete"")
  )
  
  ?player2 <http://dbpedia.org/property/team> ?actor .

  # Final result: Team of the person meeting all criteria
  ?result <http://dbpedia.org/ontology/team> ?person .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
687,66,val,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?player WHERE {
  # Actor of ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (CONTAINS(LCASE(?v1), ""soccer player"") && CONTAINS(LCASE(?v1), ""athlete""))

  # Person born on 1955-02-22 who is an athlete
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Births_on_February_22> .
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^xsd:date .
  ?person <http://dbpedia.org/property/occupation> ?v2 .
  FILTER (CONTAINS(LCASE(?v2), ""athlete""))

  # Player connection to the person born on 1955-02-22
  ?player <http://dbpedia.org/ontology/team> ?team .
  ?person <http://dbpedia.org/property/player> ?player .

  # Person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  ?sarmientoBirthDate <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Birth_date_of_Marcelo_Sarmiento> .
  ?soccerManager <http://dbpedia.org/ontology/birthDate> ?sarmientoBirthDate .
  FILTER (CONTAINS(LCASE(?soccerManager), ""soccer player"") && CONTAINS(LCASE(?soccerManager), ""soccer manager""))
  
  # Team of the soccer player and manager
  ?soccerManager <http://dbpedia.org/ontology/team> ?team .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
731,18,val,Give me the war of the commander in Sinking of Prince of Wales and Repulse and force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
# Part 1: War of the commander in Sinking of Prince of Wales and Repulse
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/war> ?war .
}

# Part 2: Force of the awardee of the award of Edmund Hakewill-Smith
SELECT DISTINCT ?force WHERE {
  <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/award> ?award .
  ?otherAwardee <http://dbpedia.org/property/award> ?award .
  ?otherAwardee <http://dbpedia.org/ontology/memberOf> ?force .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
628,62,val,"Give me the native of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify a native of Florida who is also a musical artist
  ?native <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> .
  ?native <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musical_artist> .

  # Step 2: Find a band member associated with the musical artist identified in step 1
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?artist .
  ?artist <http://www.w3.org/2000/01/rdf-schema#label> ?nativeLabel .

  # Step 3: Identify a member of GS9 who is both an artist and a musical artist
  ?gs9Member <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/GS9> .
  ?gs9Member <http://dbpedia.org/property/occupation> ?artistOccupation1, ?artistOccupation2 .
  FILTER(?artistOccupation1 = <http://dbpedia.org/resource/Artist> && ?artistOccupation2 = <http://dbpedia.org/resource/Musical_artist>) .

  # Step 4: Find a person born with the same birth name as the native from step 1
  ?person <http://dbpedia.org/ontology/birthName> ?nativeBirthName .
  ?native <http://dbpedia.org/ontology/birthName> ?nativeBirthName .

  # Step 5: Ensure this person is also a musical artist
  ?person <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musical_artist> .

  BIND(?person AS ?result)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
159,65,val,"Give me the reference to the writer of the work of George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?writer WHERE {
  # Step 1: Find writer of works by George Ducas
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/George_Ducas> .
  ?work <http://dbpedia.org/ontology/writer> ?writer .

  # Step 2: Identify commander in a war that is also a television show and societal event involving Jean Baptist, Comte d'Arco
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Jean_Baptist_Comte_d'Arco> .
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?tvShow .
    ?tvShow a <http://dbpedia.org/class/yago/TelevisionShow108069068> .
    ?war a <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  }

  # Step 3: Find successor of commander in the Russo-Polish War who was a politician or office holder
  OPTIONAL {
    ?russianPolishWar <http://dbpedia.org/ontology/commander> ?commander .
    ?russianPolishWar <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> .
    ?successor <http://dbpedia.org/ontology/successor> ?commander .
    ?successor a <http://dbpedia.org/class/yago/Politician108069068> ;
              a <http://dbpedia.org/class/yago/OfficeHolder108069068> .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
375,26,val,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  # Find child of Toyotomi Hideyoshi
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Toyotomi_Hideyoshi> .
  
  # Find entity in the birthplace of Yamaza Enjirō
  <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/property/placeOfBirth> ?birthPlace .
  ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> ?birthPlace .

  # Find war involving Toyotomi Hidenaga
  ?war <http://dbpedia.org/ontology/war> ?hidenagaEntity .
  ?hidenagaEntity <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Toyotomi_Hidenaga> .

  # Combine conditions to find the war
  ?child <http://dbpedia.org/ontology/war> ?war .
  ?entity <http://dbpedia.org/ontology/war> ?war .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
198,62,val,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/awards> ?v4 . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Identify award given by U.S. Congress and its awardee
  ?award <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/United_States_Congress> .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .

  # Step 2: Check if the awardee is associated with an entity in Charleston, SC
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
  ?awardee <http://dbpedia.org/ontology/associatedWith> ?entity .

  # Step 3: Find Quincy Adams Gillmore's awards and the forces involved
  ?gillmoreAward <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
  ?gillmoreAward <http://dbpedia.org/ontology/relatedToWar> ?war .

  # Ensure the awardee from Step 1 is part of the force in the war identified in Step 3
  ?force <http://dbpedia.org/ontology/member> ?awardee .
  ?war <http://dbpedia.org/ontology/foughtBy> ?force .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
213,18,val,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of Lao She.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
SELECT ?birthPlace WHERE {
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?parent <http://dbpedia.org/ontology/decedent> ?child .
  ?parent <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Taipei> .
  ?child <http://dbpedia.org/property/politicalParty> ?party .

  OPTIONAL {
    ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Lao_She> .
    ?work <http://dbpedia.org/ontology/country> ?country .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
737,62,val,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Find a great-great-grandchild of Alexander of Württemberg
  ?greatGrandChild <http://dbpedia.org/ontology/parent> ?grandChild .
  ?grandChild <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> .

  # Ensure this person is also a child of Archduchess Margarete Sophie
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  
  # Link the great-great-grandchild to the result
  FILTER(?greatGrandChild = ?result)

  # Find the spouse of Archduchess Helena who is royalty and their child
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?childOfSpouse <http://dbpedia.org/ontology/parent> ?spouse .

  # Find the predecessor of this child
  ?predecessor <http://dbpedia.org/ontology/successor> ?childOfSpouse .
  
  # Ensure the result is the predecessor
  FILTER(?result = ?predecessor)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,66,val,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?governorBirthPlace ?authorBirthPlace ?awardeeBirthPlace WHERE {
  # Governor of Virginia
  ?governor <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Virginia> .
  ?governor <http://dbpedia.org/property/birthPlace> ?governorBirthPlace .

  # Author of El Deafo who is American
  ?author <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/El_Deafo> .
  ?author <http://www.w3.org/2000/01/rdf-schema#label> ""American""@en .
  ?author <http://dbpedia.org/property/birthPlace> ?authorBirthPlace .

  # Awardee related to Vince Gilligan's awards
  ?awardList <http://dbpedia.org/ontology/nomineeOrAwardee> ?awardee .
  ?awardee <http://dbpedia.org/property/birthPlace> ?awardeeBirthPlace .
  FILTER EXISTS { 
    ?awardList <http://www.w3.org/2000/01/rdf-schema#label> ""Vince Gilligan""@en .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
871,64,val,"Give me the parent of Edward Stanley, 17th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Parent of Edward Stanley, 17th Earl of Derby
  ?parent <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  
  # Parent of the awardee of Rodney Lees' award
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  ?parent2 <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> ?awardee .
  FILTER(?award = <http://dbpedia.org/resource/Award_of_Rodney_Lees>) # Assuming this is the correct URI for Rodney Lees' award

  # Father of a politician who is an alumnus of Eton College
  ?politician <http://dbpedia.org/ontology/politician> true .
  ?politician <http://dbpedia.org/property/alumnusOf> <http://dbpedia.org/resource/Eton_College> .
  ?child <http://dbpedia.org/ontology/father> ?result .
  FILTER(?child = ?politician)

  # Ensure all conditions point to the same individual
  FILTER(?parent = ?parent2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
203,65,val,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/militaryConflict> ?v1 .
  ?war <http://dbpedia.org/property/event> ?v2 .
  
  ?regiment <http://dbpedia.org/ontology/involvement> ?war .
  FILTER(?regiment = <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot>) .

  ?result <http://dbpedia.org/ontology/commander> ?war .

  OPTIONAL {
    ?bayneReference <http://dbpedia.org/property/militaryConflict> ?war .
    FILTER(?bayneReference = <http://dbpedia.org/resource/William_Bayne>) .
  }

  OPTIONAL {
    ?calderEvent <http://dbpedia.org/ontology/involvement> ?force .
    ?force <http://dbpedia.org/ontology/event> ?v3 .
    FILTER(?calderEvent = <http://dbpedia.org/resource/Robert_Calder>) .
    FILTER(?force = ?war) .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,63,val,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v6 <http://dbpedia.org/property/author> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Hillary Clinton's book
  ?book <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> .
  
  # Step 2: Find Bill Clinton as a politician and office holder
  ?billClinton <http://dbpedia.org/ontology/politician> true .
  ?billClinton <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 3: Determine the spouse of Bill Clinton
  ?billClinton <http://dbpedia.org/property/spouse> ?spouse .

  # Step 4: Identify a societal event involving the U.S. Navy
  ?event <http://dbpedia.org/ontology/type> ?type .
  FILTER (?type IN (<http://dbpedia.org/resource/Disease>, <http://dbpedia.org/resource/Societal_event>)).
  ?event <http://dbpedia.org/property/commander> ?commander .

  # Step 5: Find the commander as Bill Clinton
  ?commander = ?billClinton .

  # Step 6: Confirm Bill Clinton's authorship of works
  ?work <http://dbpedia.org/ontology/author> ?billClinton .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
782,64,val,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?bandName ?associatedArtist WHERE {
  # Find the band associated with Kim Wilson
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kim_Wilson> .
  ?band <http://dbpedia.org/ontology/name> ?bandName .

  # Find Nick Curran's birth details and persona
  ?curran <http://www.w3.org/2000/01/rdf-schema#label> ""Nick Curran""@en .
  ?curran <http://dbpedia.org/property/birthPlace> ?birthPlace .
  
  OPTIONAL {
    # Find associated musical artist with Nick Curran's persona
    ?persona <http://www.w3.org/2000/01/rdf-schema#label> ""Nick Curran""@en .
    ?persona <http://dbpedia.org/ontology/member> ?band .
    
    # Link to any associated musical artists
    ?associatedArtist <http://dbpedia.org/ontology/member> ?band .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
263,25,val,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Find William Gayner's birthplace that is a region and a country
  <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  # Ensure the birthplace is both a region and a country
  FILTER(?region != ?country)

  # Find someone native to this place
  ?result <http://dbpedia.org/ontology/nationality> ?birthPlace .
  
  # Check if they are a parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> .
  }

  # Check if they are a parent of Hon. Mary Frances Bowes-Lyon
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Hon._Mary_Frances_Bowes-Lyon> .
  }
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
353,63,val,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find children of William I who are royalty, then their father
  ?child_william <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Wilhelm_I._von_Sizilien> .
  ?child_william <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?father_william <http://dbpedia.org/ontology/parent> ?child_william .

  # Step 2: Find grandchildren of Alfonso VI
  ?grandchild_alfonso <http://dbpedia.org/ontology/parent> ?child_alfonso .
  ?child_alfonso <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_VI._von_León> .

  # Step 3: Find children of Roger II who are royalty, their parents, and those parents' children
  ?child_roger <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II._von_Sizilien> .
  ?child_roger <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?parent_child_roger <http://dbpedia.org/ontology/parent> ?child_roger .
  ?grandchild_parent_roger <http://dbpedia.org/ontology/parent> ?parent_child_roger .

  # Combine conditions to find the person who satisfies all criteria
  FILTER (?result = ?father_william && ?result = ?grandchild_alfonso && ?result = ?grandchild_parent_roger)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
723,18,val,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?v2 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Find the associated musical artist of Cavalera Conspiracy
  <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  
  # Identify band members of this associated musical artist
  ?member <http://dbpedia.org/ontology/member> ?artist .

  # Find the producer of Nothing to Gein, which is an organization and a group
  OPTIONAL {
    <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/property/producer> ?producer .
    
    FILTER ( 
      (<http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?producer <http://dbpedia.org/class/yago/Organisation100000001>) &&
      (<http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?producer <http://dbpedia.org/class/yago/MusicalGroup1000000>)
    )
    
    # Identify band members of this producer
    ?member <http://dbpedia.org/ontology/member> ?producer .
  }
  
  BIND(?member AS ?result)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
609,62,val,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Cece Bell.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Part 1: Birth place of Vince Gilligan's awardee
SELECT ?awardeeBirthPlace WHERE {
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?award .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .
}

# Part 2: Birth place of the governor related to Paulus Powell
SELECT ?governorBirthPlace WHERE {
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?region .
  ?region a <http://dbpedia.org/class/yago/YagoRegion108069848> . # Assuming this class represents regions and administrative regions
  ?governor <http://dbpedia.org/property/governs> ?region .
  ?governor a <http://dbpedia.org/ontology/Politician> .
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
}

# Part 3: Birth place of Cece Bell
SELECT ?ceceBellBirthPlace WHERE {
  <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?ceceBellBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
23,26,val,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Condition 1: Party of Roy Leonardo Barreras Montealegre in Colombia
  <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> <http://dbpedia.org/ontology/politicalAffiliation> ?party .
  ?party <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Colombia> .

  # Condition 2: Party of the Father of Sofía Petro
  OPTIONAL {
    <http://dbpedia.org/resource/Sof%C3%ADa_Petro> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/politicalAffiliation> ?party .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
203,66,val,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?result WHERE {
  # Part 1: Military Force of William Bayne's War
  ?bayneWar <http://dbpedia.org/ontology/militaryConflict> ?conflict .
  ?bayneWar <http://dbpedia.org/property/memberOfMilitaryForce> ?force1 .

  # Part 2: Commander in the 30th Regiment's War
  ?regimentWar <http://dbpedia.org/ontology/militaryConflict> ?conflict2 .
  ?regimentWar <http://dbpedia.org/property/commander> ?commander .
  ?regimentWar <http://dbpedia.org/property/memberOfMilitaryForce> ?force2 .

  # Part 3: Military Force of Awardee's Force
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  ?event <http://dbpedia.org/property/event> ?societalEvent .
  ?event <http://dbpedia.org/property/memberOfMilitaryForce> ?force3 .
  ?force3 <http://dbpedia.org/ontology/militaryConflict> ?conflict3 .

  # Combine results
  FILTER(?force1 = ?result || ?force2 = ?result || ?force3 = ?result)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
87,25,val,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?actor WHERE {
  # Actor of a film with Iliza Shlesinger that is both a work and a film
  ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> .
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> . # Assuming this class represents films
  ?film <http://www.w3.org/2002/07/owl#sameAs> ?work .
  
  # Actor of ""Always"" (1989 film)
  <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?actor .

  # Spouse of an awardee from Janusz Kamiński's list
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/Janusz_Kami%C5%84ski> .
    ?award <http://dbpedia.org/ontology/awardWinner> ?awardee .
    ?actor <http://dbpedia.org/ontology/spouse> ?awardee .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
347,63,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Cecilia Renata of Austria's father
  ?cecilia <http://dbpedia.org/ontology/father> ?fatherCecilia .

  # Step 2: Identify children of Ferdinand III, Holy Roman Emperor
  ?childFerdinand <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .
  
  # Step 3: Find a commander in a war
  ?commander <http://dbpedia.org/property/commander> ?war .

  # Step 4: Link to societal events and television shows related to the Algerian War
  ?event <http://dbpedia.org/ontology/event> ?algerianWar .
  ?tvShow <http://dbpedia.org/ontology/show> ?algerianWar .

  # Combine conditions
  FILTER (?fatherCecilia = ?childFerdinand)
  FILTER (?commander = ?result)
  FILTER (?event = ?tvShow)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
249,9,val,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Find Shobhna Samarth's birthplace that is a country
  <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  # Find individuals native to this country
  ?result <http://dbpedia.org/property/nationality> ?country .

  # Identify Jamsetji Tata's works that are Indian
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jamsetji_Tata> .
  ?work <http://www.wikidata.org/entity/P17> <http://www.wikidata.org/entity/Q668> . # Assuming Q668 is the identifier for India

  # Find individuals native to these works
  OPTIONAL {
    ?result <http://dbpedia.org/property/nationality> ?indianWork .
    FILTER(?indianWork = ?work)
  }
}
```",4,6,5,2,2,2,2,9,0,0,22,0,0.0,0
687,65,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^xsd:date .
  ?person <http://dbpedia.org/property/profession> ?v1 .
  FILTER(CONTAINS(?v1, ""soccer player"") && CONTAINS(?v1, ""manager"")) .

  # Athlete born on 1955-02-22
  ?athlete <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^xsd:date .
  ?athlete <http://dbpedia.org/property/profession> ""athlete"" .

  # Ensure the person played with or alongside this athlete
  OPTIONAL { 
    ?team <http://dbpedia.org/ontology/member> ?person .
    ?team <http://dbpedia.org/ontology/member> ?athlete .
  }

  # Films by Manuel Huerga and actors who are soccer players and athletes
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  ?actor <http://dbpedia.org/ontology/starring> ?film .
  ?actor <http://dbpedia.org/property/profession> ?v2 .
  FILTER(CONTAINS(?v2, ""soccer player"") && CONTAINS(?v2, ""athlete"")) .

  # Ensure the person played with or alongside this actor
  OPTIONAL { 
    ?team1 <http://dbpedia.org/ontology/member> ?person .
    ?team1 <http://dbpedia.org/ontology/member> ?actor .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
609,65,val,"Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Part 1: Birthplace of Vince Gilligan's Awardee
SELECT ?awardeeBirthPlace WHERE {
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Vince_Gilligan> .
  ?award <http://dbpedia.org/ontology/receiver> ?awardee .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .
}

# Part 2: Birthplace of Governor Related to Paulus Powell
SELECT ?governorBirthPlace WHERE {
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?region .
  ?region a <http://dbpedia.org/class/yago/AdministrativeRegion108069068> . # Assuming this class represents regions and administrative regions
  ?governor <http://dbpedia.org/property/governor> ?region .
  ?governor a <http://dbpedia.org/ontology/Politician> .
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
}

# Part 3: Birthplace of El Deafo's Author
SELECT ?authorBirthPlace WHERE {
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?author .
  ?author <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
375,25,val,Give me the war of Hashiba Hidekatsu and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  # War associated with Hashiba Hidekatsu
  <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/war> ?war .

  # Entity in the birthplace of Yamaza Enjirō
  OPTIONAL { 
    <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
    ?war <http://dbpedia.org/ontology/entity> ?entity .
  }

  # War of the person born as Koichirō
  OPTIONAL { 
    ?person <http://dbpedia.org/property/birthName> ""Koichirō"" .
    ?person <http://dbpedia.org/ontology/war> ?war .
  }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
119,64,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
SELECT ?office WHERE {
  ?event <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> .
  ?event <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/AdministrativeEvent108069068> . # Assuming this class represents an event
  ?event <http://dbpedia.org/property/office> ?office .

  OPTIONAL {
    ?office <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  }

  OPTIONAL {
    ?office <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,63,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?person WHERE {
  # Find Ann Sothern's birth name
  <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?birthName .

  # Find individuals born with that name
  ?individual <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  
  # Identify the actor of ""1,000 Dollars a Minute"" and their spouse
  OPTIONAL {
    <http://dbpedia.org/resource/1000_Dollars_a_Minute> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/spouse> ?spouse .
    FILTER(?spouse = ?individual)
  }
  
  # Find the landmark at the given elevation
  OPTIONAL {
    ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat .
    ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long .
    FILTER(?lat = 20.116800000000001347)
    
    # Determine the ruling party associated with that landmark
    ?landmark <http://dbpedia.org/ontology/country> ?country .
    ?party <http://dbpedia.org/property/rulingParty> ?country .
    ?individual <http://dbpedia.org/ontology/memberOf> ?party .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
311,18,val,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the writer of ""No Alternative""
  ?noAlternative <http://dbpedia.org/ontology/writer> ?writer .
  
  # Step 2: Find band members associated with this writer
  ?bandMember <http://dbpedia.org/property/memberOf> ?writer .

  # Step 3: Identify associated musical artists of the band member
  ?associatedArtist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
  
  # Step 4: Find producers of ""Lotus (R.E.M. song)"" that are organizations, bands, and groups
  ?lotusSong <http://dbpedia.org/property/producer> ?producer .
  FILTER(STRSTARTS(STR(?lotusSong), ""http://dbpedia.org/resource/Lotus_(R.E.M._song)""))
  
  # Ensure the producer is an organization, band, and group
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069976> .
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalBand115557465> .
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicGroup108069976> .

  # Step 5: Identify associated musical artists of the producer
  ?associatedArtist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?producer .
  
  # Return the final result which is an artist associated with both entities
  FILTER(STRSTARTS(STR(?associatedArtist1), ""http://dbpedia.org/resource/"") && STRSTARTS(STR(?associatedArtist2), ""http://dbpedia.org/resource/""))
  BIND(CONCAT(STR(?associatedArtist1), "" and "", STR(?associatedArtist2)) AS ?result)
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
609,63,val,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
SELECT ?authorBirthPlace ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Birthplace of the author of ""El Deafo""
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/property/birthPlace> ?authorBirthPlace .

  # Birthplace of the governor of Virginia who is a politician
  ?governor <http://dbpedia.org/ontology/governorOf> <http://dbpedia.org/resource/Virginia> .
  ?governor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Q82955 is the identifier for ""politician""
  ?governor <http://dbpedia.org/property/birthPlace> ?governorBirthPlace .

  # Birthplace of the awardee associated with Vince Gilligan
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?award <http://dbpedia.org/ontology/relatedTo> <http://dbpedia.org/resource/Vince_Gilligan> .
    ?awardee <http://dbpedia.org/property/birthPlace> ?awardeeBirthPlace .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
943,65,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Identify Na'od's father and then his father (Na'od's grandfather)
  ?naodFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Na'od> .
  ?grandfather <http://dbpedia.org/ontology/father> ?naodFather .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  OPTIONAL { 
    ?grandfather <http://dbpedia.org/ontology/officeHolder> ?office .
  }

  # Verify the grandfather is a child of someone who is royalty, connected to Yeshaq I
  ?parent <http://dbpedia.org/ontology/father> ?grandfather .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  ?yeshaqI <http://dbpedia.org/ontology/father> ?parent .

  # Find any reference or connection to Lamont Cranston's alter ego
  OPTIONAL {
    ?reference <http://dbpedia.org/property/reference> ?alterEgo .
    ?alterEgo <http://dbpedia.org/resource/Lamont_Cranston_(radio,_film_and_television)> .
    ?result <http://dbpedia.org/ontology/references> ?reference .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
905,66,val,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Parent of the father, that is a royalty, of Charles I of Hungary
  ?charlesFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_I_of_Hungary> .
  ?charlesGrandparent <http://dbpedia.org/ontology/father> ?charlesFather .
  ?charlesGrandparent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Spouse of the father of Philip I, Prince of Taranto
  ?philipFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
  ?spouse <http://dbpedia.org/ontology/spouse> ?philipFather .

  # Child of the child, that is a royalty, of the predecessor of Stephen V of Hungary
  ?stephenPredecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  ?royalChild <http://dbpedia.org/ontology/father> ?stephenPredecessor .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?result <http://dbpedia.org/ontology/father> ?royalChild .

  FILTER (?charlesGrandparent = ?spouse && ?spouse = ?result)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,65,val,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
SELECT ?leaderOffice ?tenant ?commanderOffice WHERE {
  # Leader of Conservative Republican Party (Spain)
  ?person <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
  ?person <http://dbpedia.org/ontology/officeHolder> ?leaderRole .
  ?leaderRole <http://dbpedia.org/property/title> ?leaderOffice .

  # Tenant of the residence of Alberto Ruiz-Gallardón
  OPTIONAL {
    ?residence <http://dbpedia.org/ontology/resident> ?tenant .
    ?residence <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> .
  }

  # Commander in a military conflict involving Manuel Pinto da Costa
  OPTIONAL {
    ?conflict <http://dbpedia.org/property/involves> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
    ?person2 <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    ?person2 <http://dbpedia.org/ontology/commander> ?commanderRole .
    ?commanderRole <http://dbpedia.org/property/title> ?commanderOffice .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
158,25,val,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Find Sandro Bertaggia's birthplace
  <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Identify decedents at that birthplace
  ?result <http://dbpedia.org/ontology/deathPlace> ?birthPlace .

  # Find natives of the administration of Alexander II, Grand Duke of Finland
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> <http://dbpedia.org/property/administration> ?administration .
    ?result <http://dbpedia.org/ontology/nationality> ?adminNative .
    ?adminNative <http://dbpedia.org/ontology/country> ?administration .
  }

  # Ensure the person is a native of Russian Empire
  ?result <http://dbpedia.org/ontology/nationality> ?russianEmpireNative .
  ?russianEmpireNative <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russian_Empire> .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
628,64,val,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify Ackquille Jean Pollard as a member of GS9
  ?ackquille <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?ackquille <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard"" .
  ?ackquille <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .

  # Step 2: Find the associated musical artist of GS9 member
  ?gs9Member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  ?gs9Member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  # Step 3: Determine band members of this associated musical artist
  ?associatedArtist <http://dbpedia.org/property/member> ?gs9Member .
  ?bandMember <http://dbpedia.org/ontology/bandMember> ?associatedArtist .

  # Step 4: Identify award related to New York State
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  ?award <http://dbpedia.org/property/location> <http://dbpedia.org/resource/New_York_(state)> .

  # Step 5: Find the awardee band
  ?awardeeBand <http://dbpedia.org/ontology/recipient> ?award .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
386,25,val,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?result WHERE {
  # War of the awardee of ""Order No. 25"" or similar award
  ?person <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Order_No._25> .
  ?person <http://dbpedia.org/ontology/war> ?result .

  # Entity in the birthplace of Elena Žalinkevičaitė-Petrauskienė
  OPTIONAL {
    <http://dbpedia.org/resource/Elena_%C5%BDalinkevi%C4%8Dait%C4%97-Petrauskien%C4%97> <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?result <http://www.w3.org/2000/01/rdf-schema#label> ?birthPlaceLabel .
  }

  # War of Alexander Lvovich Davydov
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/war> ?result .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
756,62,val,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. },"```sparql
SELECT ?native WHERE {
  # Step 1: Identify the leader of West Germany
  ?leader <http://dbpedia.org/property/country> ?country .
  FILTER(?country = <http://dbpedia.org/resource/West_Germany>) .

  # Step 2: Find manager of 2020–21 SBV Vitesse season
  ?manager1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/SBV_Vitesse> .
  ?manager1 <http://dbpedia.org/property/season> ""2020-21""^^xsd:string .

  # Step 3: Find manager of the player in successor of 2006–07 VfL Bochum season
  ?vflBochumSeason <http://dbpedia.org/ontology/successor> ?successor .
  FILTER(?vflBochumSeason = <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season>) .

  ?player <http://dbpedia.org/property/team> ?vflBochumSeason .
  ?manager2 <http://dbpedia.org/ontology/player> ?player .
  ?manager2 <http://dbpedia.org/ontology/team> ?successorTeam .
  
  # Step 4: Ensure the manager is the same person
  FILTER(?manager1 = ?manager2) .

  # Step 5: Find native of this administration (country)
  ?leader <http://dbpedia.org/property/nationality> ?native .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
742,18,val,Give me the birthplace of the resident of Sofia and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . }","```sparql
SELECT ?birthplace WHERE {
  # Find birthplace of residents of Sofia
  ?person <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Sofia> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .

  UNION

  # Find birthplace of alumni of Пловдивски университет „Паисий Хилендарски“
  ?alumnus <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Пловдивски_университет_„Паисий_Хилендарски“> .
  ?alumnus <http://dbpedia.org/ontology/birthPlace> ?birthplace .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
203,64,val,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Step 1: Military force of Battle of Fort Royal
  <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/ontology/militaryConflict> ?battle .
  ?battle <http://dbpedia.org/property/militaryForce> ?militaryForce1 .

  # Step 2: Awardee of Knight Commander of the Order of the Bath
  ?awardee <http://dbpedia.org/property/orderOfBath> ""Knight Commander""^^<http://www.w3.org/2001/XMLSchema#string> .
  
  # Step 3: Event and Societal Event of the Awardee
  ?event <http://dbpedia.org/ontology/event> ?awardee ;
         <http://dbpedia.org/property/societalEvent> ?true .

  # Step 4: Military Conflict and Event of The Triple X's
  ?figure <http://dbpedia.org/property/knowAs> ""The Triple X's"" .
  ?conflict <http://dbpedia.org/ontology/militaryConflict> ?figure ;
            <http://dbpedia.org/property/event> ?true .

  # Step 5: Commander in the War
  ?commander <http://dbpedia.org/property/commanderInWar> ?conflict .
  
  # Step 6: Military Force of the Commander
  ?commander <http://dbpedia.org/ontology/militaryForce> ?militaryForce2 .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
143,18,val,"Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
SELECT ?result WHERE {
  # Find associated musical artist of Cynthia Ikponmwenosa Morgan (Tiwa Savage)
  <http://dbpedia.org/resource/Tiwa_Savage> <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan"" .
  ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tiwa_Savage> .

  # Find actor in a show that is a movie with Afeez Oyetoro
  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/starring> ?result .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie104930069> . # Assuming this class represents movies
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
80,64,val,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Golden Master
  <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
  
  # Actor of a movie with the author of Smartbomb (book)
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Smartbomb_(book)> .

  # Actor of ATL (film)
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result .
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
816,66,val,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer and parent of the child of the spouse of Mariclare Costello.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?movie <http://dbpedia.org/property/starring> ?actor .
  ?movie <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .

  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/parent> ?actor .
    ?professional <http://dbpedia.org/ontology/parent> ?parent .
    ?professional <http://dbpedia.org/property/profession> ""Photographer""@en .
  }

  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
    ?child <http://dbpedia.org/ontology/parent> ?spouse .
    ?parent2 <http://dbpedia.org/ontology/parent> ?child .
    FILTER(?actor = ?parent || ?actor = ?parent2)
  }
}
```",7,8,8,3,3,3,3,71,0,45,1,0.0,0.0,0
347,62,val,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?result WHERE {
  # Commander in a war that is both a societal event and a television show
  ?war <http://dbpedia.org/ontology/event> _:event1 .
  ?war <http://dbpedia.org/property/isTVShow> true .
  
  # Commander involved with the Algerian War
  ?result <http://dbpedia.org/property/militaryForce> <http://dbpedia.org/resource/Algerian_War> .

  # Child of Ferdinand II, Holy Roman Emperor
  ?result <http://dbpedia.org/ontology/child> _:child1 .
  _:child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .

  # Father of the child of Archduke Charles Joseph's parent
  ?archdukeParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .
  ?result <http://dbpedia.org/ontology/parent> ?archdukeChild .
  ?archdukeChild <http://dbpedia.org/ontology/parent> ?archdukeParent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,63,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?person <http://dbpedia.org/property/musicalArtist> ?result .

  OPTIONAL { 
    ?claptonBandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?band <http://dbpedia.org/ontology/member> ""Eric Clapton"" .
    ?result <http://dbpedia.org/ontology/band> ?band .
  }

  OPTIONAL {
    ?kimWilsonBand <http://dbpedia.org/ontology/band> ?realNameReference .
    ?kimWilsonBand <http://dbpedia.org/ontology/member> ""Kim Wilson"" .
    ?result <http://dbpedia.org/ontology/reference> ?realNameReference .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
859,18,val,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun and associated musical artist of the associated musical artist of James Plotkin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find the reference (group) associated with ""Burnt by the Sun""
  ?burntBySunGroup <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Burnt_by_the_Sun> .
  
  # Ensure it's a band, group, and organization
  ?burntBySunGroup <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalBand108069068> ;
                   <http://www.w3.org/2000/01/rdf-schema#label> ?groupLabel .
  
  # Step 2: Find associated musical artist of James Plotkin
  ?plotkinArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/James_Plotkin> .
  
  # Find the associated musical artist of this artist
  ?secondLevelArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?plotkinArtist .

  # Step 3: Ensure the second level artist is a band, group, and organization
  ?secondLevelArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalBand108069068> ;
                     <http://www.w3.org/2000/01/rdf-schema#label> ?bandLabel .

  # Ensure the second level artist is associated with the group from step 1
  ?secondLevelArtist <http://dbpedia.org/ontology/member> ?burntBySunGroup .
  
  # Find band members of this second level artist
  ?secondLevelArtist <http://dbpedia.org/ontology/member> ?bandMember .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
531,64,val,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Office held by Mariano Rajoy
  ?office <http://dbpedia.org/ontology/holder> <http://dbpedia.org/resource/Mariano_Rajoy> .
  
  # Leader of a political party that is also a politician
  ?leader <http://dbpedia.org/ontology/memberOfParty> ?party .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .

  # Political party of Miguel Maura
  ?miguelParty <http://dbpedia.org/ontology/memberOfParty> <http://dbpedia.org/resource/Miguel_Maura> .
  
  # Tenant of the residence related to the 2003 Madrid City Council election leader
  OPTIONAL {
    ?residence <http://dbpedia.org/property/tenant> ?result .
    ?electionLeader <http://dbpedia.org/ontology/electedAs> ?office2 .
    ?office2 <http://dbpedia.org/ontology/election> <http://dbpedia.org/resource/Madrid_City_Council_election,_2003> .
  }
  
  # Linking the leader's office to the party of Miguel Maura
  FILTER(?party = ?miguelParty)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
263,26,val,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?result WHERE {
  # Find children of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> .
  
  # Find parents of these children
  ?child <http://dbpedia.org/ontology/parent> ?result .

  # Check if the same person is a parent of Mary Elphinstone, Lady Elphinstone
  OPTIONAL { 
    <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> <http://dbpedia.org/ontology/parent> ?result .
  }

  # Determine William Gayner's birthplace and ensure it is both a region and a country
  <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  FILTER (
    ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Category:Regions_of_the_United_Kingdom> &&
    ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Category:Countries>
  )
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
347,65,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the father of Cecilia Renata of Austria
  ?father <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> .
  
  # Step 2: Find the child of this father
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/father> ?father .
    
    # Step 3: Identify the parent of Archduke Charles Joseph of Austria
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .
    
    # Step 4: Find the child of this parent
    OPTIONAL { 
      ?grandchild <http://dbpedia.org/ontology/father> ?parent .
      
      # Step 5: Determine the father of the grandchild
      ?result <http://dbpedia.org/ontology/spouse> ?grandchild .
      
      # Step 6: Identify commander in a war related to societal event and television show involving 2nd Dragoon Regiment (France)
      OPTIONAL { 
        ?war <http://dbpedia.org/property/commander> ?result .
        ?war <http://www.w3.org/2000/01/rdf-schema#label> ?v1 .
        FILTER(CONTAINS(LCASE(?v1), ""societal event"") && CONTAINS(LCASE(?v1), ""television show""))
        
        # Link to 2nd Dragoon Regiment (France)
        OPTIONAL { 
          ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
        }
      }
    }
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
633,18,val,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of the father of Dorothea of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Antoine's children who are royalty
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the parent of this royal child who is both royalty and noble
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""noble""

  # Step 3: Find Dorothea of Lorraine's father
  ?dorotheaFather <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Dorothea_of_Lorraine> .

  # Step 4: Identify the parent (spouse) of this father
  ?parentOfFather <http://dbpedia.org/ontology/birthChild> ?dorotheaFather .
  
  # The spouse we are looking for is the same as the parent identified in step 2
  FILTER (?parent = ?parentOfFather)
  BIND(?parent AS ?spouse)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
557,8,train,"Give me the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Janet_Gaynor> dbo:claimToFame ?result .
  ?result rdf:type <http://dbpedia.org/class/yago/YagoWoRK0000010Movie> . # Assuming this is the class for movies
  OPTIONAL { 
    ?result rdf:type <http://www.w3.org/2002/07/owl#Thing> . # Ensures it's a work (generic)
  }
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
23,18,train,Give me the party of the father of Sofía Petro and entity in Colombia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?party, ?entity WHERE {
  # Find the political party of Sofía Petro's father
  <http://dbpedia.org/resource/Sof%C3%ADa_Petro> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/property/politicalParty> ?party .

  # Find an entity in Colombia
  ?entity <http://www.w3.org/2004/02/skos/core#subject> <http://dbpedia.org/resource/Colombia> .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,45,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Nick Curran"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  OPTIONAL { 
    ?reference <http://dbpedia.org/ontology/reference> ?person .
    ?reference <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
  }
  
  ?band <http://dbpedia.org/property/bandMember> <http://dbpedia.org/resource/Kim_Wilson> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  
  FILTER(?person = ?result)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,9,train,Give me the professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/occupation> ?v1 .
}
```",2,2,3,1,2,2,3,28,3,2,0,0.6,1.0,0.7499999999999999
668,42,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?result WHERE {
  # Find Elorm Kabu Amenyah (Joey B) and his associated musical artist
  <http://dbpedia.org/resource/Joe_B> <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah"" .
  <http://dbpedia.org/resource/Joe_B> <http://dbpedia.org/ontology/musicArtist> ?result .

  # Find another person with the birth name Elorm Kabu Amenyah who is a professional musician
  ?person <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah"" .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musician> .
  
  # Ensure the associated musical artist is the same for both
  ?person <http://dbpedia.org/ontology/musicArtist> ?result .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
87,3,train,"Give me the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a owl:Thing .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> .
}
```",1,3,2,1,1,2,3,28,1,6,0,0.14285714285714285,1.0,0.25
628,23,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?gs9member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  ?gs9member <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  
  ?artist a <http://dbpedia.org/ontology/MusicalArtist> .
  ?artist <http://dbpedia.org/ontology/bandMember> ?result .
}
```",3,6,4,3,1,3,3,71,0,0,10,0,0.0,0
782,39,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
SELECT ?result WHERE {
  # Person born as the persona of Nick Curran and is a musical artist
  ?persona <http://www.w3.org/2000/01/rdf-schema#label> ""Nick Curran""@en .
  ?persona <http://dbpedia.org/ontology/birthName> ?personBorn .
  ?personBorn <http://purl.org/dc/terms/type> <http://dbpedia.org/resource/Musical_artist> .

  # Band associated with Kim Wilson
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kim_Wilson> .
  
  # Associated musical artist that fits both criteria
  ?result = ?personBorn .
  ?result = ?band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,35,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Spain> .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/officeHolder> ?office .
    ?office <http://dbpedia.org/ontology/election> <http://dbpedia.org/resource/Galician_regional_election,_2009> .
  }
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
80,52,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Actor of the album of ""What You Know""
  <http://dbpedia.org/resource/Urban_Phone_(album)> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL { 
    # Professional in a certain field (assuming occupation)
    ?result <http://dbpedia.org/property/occupation> ?v1 .
    
    # Actor of a movie with the author of ""Smartbomb""
    <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?author .
    ?movie <http://dbpedia.org/ontology/bookAuthor> ?author .
    ?movie <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
89,29,train,"Give me the predecessor of Myat Hpone Pyo and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .

  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }
}
```",4,5,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
39,44,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Robert Lamar Thompson""@en .
  ?person <http://dbpedia.org/ontology/musicalArtist> [] .
  ?person <http://dbpedia.org/property/band> ?band .

  ?person <http://dbpedia.org/property/profession> ?profession1 .
  ?profession1 rdfs:label ""Singer""@en .

  OPTIONAL {
    ?shadowAlterEgo <http://dbpedia.org/ontology/alterEgo> ?profession2 .
    ?person <http://dbpedia.org/property/profession> ?profession2 .
    ?shadowAlterEgo rdfs:label ""The Shadow""@en .
  }

  BIND(?band AS ?result)
}
```",5,6,6,2,3,3,3,71,0,0,3,0,0.0,0
628,16,train,"Give me the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,59,0,0.0,0
687,36,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?result WHERE {
  # Find teams associated with Juan Carlos Molina
  <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?team .
  
  # Identify individuals born on Marcelo Sarmiento's birthday
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Marcelo_Sarmiento> ;
          <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  # Check if the person is associated with a team and has relevant occupations
  ?person <http://dbpedia.org/ontology/team> ?team ;
          <http://dbpedia.org/property/occupation> ?occupation1, ?occupation2 .

  FILTER (?occupation1 = ""soccer player"" && ?occupation2 = ""soccer manager"")
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
293,52,train,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
SELECT ?result WHERE {
  # Find the landmark with the specified elevation
  ?landmark <http://dbpedia.org/property/elevation> ?elevation .
  FILTER(?elevation = 20.1168) .

  # Determine the ruling party in the location of this landmark
  ?location <http://dbpedia.org/ontology/location> ?landmark .
  ?location <http://dbpedia.org/property/rulingParty> ?party .

  # Find a member of that ruling party
  ?result <http://dbpedia.org/ontology/memberOf> ?party .

  # Identify the actor of ""1,000 Dollars a Minute""
  <http://dbpedia.org/resource/1000_Dollars_a_Minute> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Find the spouse of this actor
  ?result <http://dbpedia.org/ontology/spouse> ?actor .

  # Ensure the person was born as Harriette Arlene Lake
  ?result <http://dbpedia.org/ontology/birthName> ""Harriette Arlene Lake"" .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
585,9,train,"Give me the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
SELECT ?award WHERE {
  ?award <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
  OPTIONAL { 
    ?award <http://dbpedia.org/property/location> ?settlement .
  }
  ?recipient <http://dbpedia.org/ontology/receiver> ?award .
  ?recipient <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/New_York_(state)> .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
816,37,train,Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Find Doon Arbus's parents
  <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/family> ?parent .

  # Get Eugène Cattin's profession
  <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/property/profession> ?profession .

  # Find individuals with the same profession as Eugène Cattin and their parents
  ?individual <http://dbpedia.org/property/profession> ?profession .
  ?individual <http://dbpedia.org/ontology/family> ?parent .
  
  FILTER(?parent = ?parent) # Ensure it's the same parent for both conditions
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
39,40,train,Give me the professional in  and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . }","```sparql
SELECT ?bandMember ?producerProfession WHERE {
  # Find band members associated with Bob Thompson (musician)
  OPTIONAL { 
    <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/member> ?bandMember .
  }
  
  # Identify the producer of Coke Studio Philippines and their profession
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/property/producer> ?producer .
  ?producer <http://dbpedia.org/property/profession> ?producerProfession .
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
80,36,train,Give me the actor of Shelby Oaks and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?actor .
  OPTIONAL { 
    ?actor <http://dbpedia.org/property/occupation> ?v1 .
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
  }
}
```",4,4,5,3,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
782,8,train,"Give me the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
816,7,train,Give me the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
941,7,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
737,11,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . }","```sparql
SELECT ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
737,14,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
  
  OPTIONAL { 
    ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
}
```",2,3,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
347,4,train,"Give me the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> dbo:participatedIn ?war .
  
  ?war a dbo:SocietalEvent ;
       a dbo:Event .

  OPTIONAL { 
    ?tvShow dbo:subject ?war .
    ?tvShow a dbo:TelevisionSeries .
  }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
38,11,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of Promise Me, Dad.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
SELECT ?author WHERE {
  ?work <http://dbpedia.org/ontology/author> ?author .
  
  # Ensure the work is associated with Joe Biden
  ?work <http://dbpedia.org/property/subject> <http://dbpedia.org/resource/Joe_Biden> .

  # Check if the work is a book, written work, and American
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book106557786> .
  ?work <http://purl.org/dc/terms/country> ""United States"" .

  # Ensure the author also wrote ""Promise Me, Dad""
  OPTIONAL {
    <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/ontology/author> ?author .
  }
}
```",3,7,4,2,2,3,2,20,0,0,1,0,0.0,0
756,29,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  # Find the country associated with Theodor Heuss's administration
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/ontology/nationality> ?country .
  
  # Identify people native to that country
  ?person <http://dbpedia.org/property/nativeCountry> ?country .

  # Check if the person managed 2020–21 SBV Vitesse season
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2020%E2%80%9321_SBV_Vitesse_season> .
  }

  # Check if the same person also managed VfL Bochum
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/VfL_Bochum> .
  }
  
  BIND(?person AS ?result)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
492,11,train,Give me the death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?actor ?deathPlace WHERE {
  <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/ontology/starring> ?actor .
  OPTIONAL { 
    ?actor <http://dbpedia.org/property/deathPlace> ?deathPlace .
  }
}
```",2,2,3,2,1,2,3,28,0,8,4,0.0,0.0,0
557,14,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?movie ?producer WHERE {
  <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/starring> ?movie .
  ?movie a dbo:Film .
  
  OPTIONAL { 
    ?movie <http://dbpedia.org/ontology/producer> ?producer .
  }
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
668,53,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?person1 <http://dbpedia.org/ontology/birthName> ""pacely"" .
  ?person2 <http://dbpedia.org/ontology/birthName> ""Joey B"" .
  
  ?person1 <http://dbpedia.org/ontology/musicArtist> ?result .
  ?person2 <http://dbpedia.org/ontology/musicArtist> ?result .

  ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
143,6,train,Give me the actor of The Campus Queen and associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Musician> .
    ?association <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Cynthia_Morgan> .
    ?association <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAssociation> .
    ?association <http://dbpedia.org/property/participant> ?result .
  }
}
```",2,2,3,1,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
472,18,train,Give me the administration of the mayor of Duchy of Schleswig and administration of Christian IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?mayorAdministration ?christianIXAdministration WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/ontology/mayor> ?mayor .
    ?mayor <http://dbpedia.org/ontology/administration> ?mayorAdministration .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/administration> ?christianIXAdministration .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,15,train,"Give me the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/MilitaryConflict> [] .
  ?result rdf:type <http://www.w3.org/2002/07/owl#Thing> . # Assuming this is a broad classification for events

  OPTIONAL { 
    ?result <http://dbpedia.org/property/associatedFigure> <http://dbpedia.org/resource/The_Triple_X_s> .
  }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
19,7,train,Give me the spouse of Carrie Johnson and professional in the birth name of John Boxer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carrie_Johnson> <http://dbpedia.org/ontology/spouse> ?result .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?birthName .
    ?result <http://dbpedia.org/property/occupation> ?birthName .
  }
}
```",3,3,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
386,24,train,Give me the war of the awardee of 25 and war of the awardee of Golden Sword for Bravery.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . }","```sparql
SELECT DISTINCT ?war25 ?warGoldenSword WHERE {
  # Find the war associated with the ""25"" award
  ?entity <http://dbpedia.org/property/awarded> <http://dbpedia.org/resource/Award_25> .
  ?entity <http://dbpedia.org/ontology/war> ?war25 .

  # Find the war associated with the ""Golden Sword for Bravery""
  ?entity2 <http://dbpedia.org/property/awarded> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> .
  ?entity2 <http://dbpedia.org/ontology/war> ?warGoldenSword .
}
```

Note: The exact resource identifiers for ""Award_25"" and ""Golden Sword for Bravery"" should be verified in DBpedia, as they might have specific URIs or require more precise property paths.",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
557,25,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?producer WHERE {
  # Producers for The Adventures of Tom Sawyer (1938)
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?producer .

  # Janet Gaynor's claim to fame as a movie
  OPTIONAL {
    ?movie <http://www.w3.org/2000/01/rdf-schema#label> ""Janet Gaynor""@en .
    ?movie <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Films_starring_Janet_Gaynor> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie104930069> . # Assuming this is a class for movies
    ?movie <http://dbpedia.org/ontology/producer> ?producer .
  }
}
```",3,5,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
386,14,train,Give me the entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russian_Empire> .
  ?result dbo:participatedIn ?war .
  ?result dbo:award ?award .
  FILTER (str(?award) = ""25"") # Assuming the award is represented as a string or number
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,2,train,Give me the father of Baeda Maryam I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,22,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?vinceGilliganBirthPlace ?ceceBellBirthPlace WHERE {
  <http://dbpedia.org/resource/Vince_Gilligan> dbo:birthPlace ?vinceGilliganBirthPlace .
  
  OPTIONAL {
    <http://dbpedia.org/resource/El_Deafo> dbo:author ?ceceBell .
    ?ceceBell dbo:birthPlace ?ceceBellBirthPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
557,7,train,Give me the actor of High Society Blues.,SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
347,29,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
SELECT ?result WHERE {
  # Find children of Ferdinand II
  <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result .
  
  # Ensure the individual was a commander in the Thirty Years' War
  ?result <http://dbpedia.org/property/commanderInWar> <http://dbpedia.org/resource/Thirty_Years'_War> .

  # Check if they are parents to someone who is a child of Ferdinand III
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/parent> ?result .
    <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?child .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,58,train,"Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  # Gillmore Medal awardee's force
  ?gillmoreMedal <http://dbpedia.org/ontology/awardee> ?person .
  ?person <http://dbpedia.org/property/militaryService> ?force .

  # Amasa Tracy's war involvement
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/property/militaryService> ?war .

  # Deceased person's birthplace
  ?deceasedPerson <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/P1234> . # Assuming P1234 is the DBpedia resource for the deceased person
  ?deceasedPerson <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  ?deceasedPerson <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  ?settlement a <http://dbpedia.org/class/yago/Settlement108069068> . # Assuming this class represents settlements
  ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .

  # Combine conditions to find the entity
  FILTER(?force = ?war)
  BIND(?birthplace AS ?result)
}
```

Note: The query assumes certain DBpedia resources and classes, which may need adjustment based on actual data availability. Adjustments might be necessary for specific identifiers or class URIs.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
198,34,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . }","```sparql
SELECT ?war WHERE {
  ?award <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/United_States_Congress> .
  ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
  ?entity <http://dbpedia.org/ontology/receivesAward> ?award .
  ?war <http://dbpedia.org/ontology/warOf> ?entity .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
347,52,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Algerian_War> <http://dbpedia.org/ontology/event> ?event .
  <http://dbpedia.org/resource/Algerian_War> <http://dbpedia.org/ontology/societalEvent> ?societalEvent .
  <http://dbpedia.org/resource/Algerian_War> <http://dbpedia.org/ontology/televisionShow> ?tvShow .

  ?result <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Algerian_War> .
  
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .
  
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .
  ?result <http://dbpedia.org/ontology/father> ?child .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
159,54,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas and commander in Great Turkish War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
SELECT ?successor WHERE {
  ?commander <http://dbpedia.org/ontology/successor> ?successor .
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> .
  
  ?successor <http://dbpedia.org/ontology/politician> true .
  ?successor <http://dbpedia.org/property/officeHolder> true .

  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/writtenBy> <http://dbpedia.org/resource/George_Ducas> .
    ?reference <http://dbpedia.org/ontology/reference> ?successor .
  }

  ?successor <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Great_Turkish_War> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,16,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?force ?war WHERE {
  ?person <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> .
  ?person <http://dbpedia.org/property/militaryForce> ?force .

  OPTIONAL { 
    <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/event> ?war .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
103,45,train,"Give me the professional in Actor and actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?result .

  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/property/alterEgo> ?v1 .
    FILTER EXISTS { ?v1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> } # Assuming Q215627 is the identifier for ""comics character""
    ?result <http://dbpedia.org/property/profession> ?v1 .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
905,5,train,Give me the spouse of Maria of Bytom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,59,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  # Find the writer of ""The Live Anthology"" and their profession
  <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/profession> ?profession .

  # Find a professional in the same profession as the writer who is also a musical artist
  ?result <http://dbpedia.org/property/profession> ?profession .
  ?result <http://www.musical-artist.com/ontology/MusicalArtist> [] . # Assuming this property identifies musical artists

  # Find the birth name associated with ""$pacely""
  ?person <http://dbpedia.org/ontology/birthName> ""Pacely"" .

  # Identify a musical artist associated with this person
  OPTIONAL {
    ?result <http://www.musical-artist.com/ontology/associatedBand> ?person .
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
756,1,train,Give me the native of West Germany.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> .
}
```",1,1,2,1,1,3,3,71,5170,0,0,1.0,1.0,1.0
472,17,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of Olaf I of Denmark.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
SELECT ?person ?administration WHERE {
  {
    <http://dbpedia.org/resource/Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck> 
      <http://dbpedia.org/ontology/birthPlace> ?place .
    OPTIONAL { 
      <http://dbpedia.org/resource/Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck> 
        <http://dbpedia.org/property/positionHeld> ?administration .
    }
  } UNION {
    <http://dbpedia.org/resource/Olaf_I_of_Denmark> 
      <http://dbpedia.org/ontology/birthPlace> ?place .
    OPTIONAL { 
      <http://dbpedia.org/resource/Olaf_I_of_Denmark> 
        <http://dbpedia.org/property/positionHeld> ?administration .
    }
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,11,train,"Give me the player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?player WHERE {
  ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?player <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> .
}
```",2,3,3,2,1,3,3,71,0,10,18,0.0,0.0,0
943,60,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Commander in Siege of Mukha who is royalty
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Parent of this commander who is also royalty
  ?parent <http://dbpedia.org/ontology/child> ?commander .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # This parent must also be a father of another individual who is royalty and an office holder
  ?father <http://dbpedia.org/ontology/child> ?parent .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  OPTIONAL { 
    ?officeHolder <http://dbpedia.org/property/office> ?v1 . # Assuming office holding is indicated by a property like 'office'
    FILTER(?father = ?officeHolder)
  }
  
  # The child of this father must be a descendant of Baeda Maryam I
  ?child <http://dbpedia.org/ontology/parent> ?father .
  ?baedaMaryamI <http://dbpedia.org/resource/Baeda_Maryam_I> .
  ?descendant <http://dbpedia.org/ontology/ancestor> ?baedaMaryamI .
  FILTER(?child = ?descendant)
  
  # The result is the parent of the commander
  BIND(?parent AS ?result)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,31,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ackquille Jean Pollard"" .
  
  ?bandMember <http://dbpedia.org/property/memberOfBand> ?band .
  ?band <http://dbpedia.org/ontology/member> ?gs9Member .
  
  ?gs9Member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  ?gs9Member <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> . # Assuming Q33999 is the identifier for ""musician""
  
  OPTIONAL {
    ?associatedArtist <http://dbpedia.org/ontology/member> ?band .
    ?result <http://dbpedia.org/property/memberOfBand> ?associatedArtist .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
225,13,train,Give me the entity in the region of the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?entity <http://dbpedia.org/ontology/timeZone> ?timeZone .
  FILTER(?entity != <http://dbpedia.org/resource/Kiyosu>)
}
```",3,3,4,3,1,3,2,20,2080,174,6836,0.9228039041703638,0.23328847016599372,0.37242614145031333
816,31,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?movie ?actor WHERE {
  ?movie a dbo:Film .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Films> . # Ensures it's categorized as a film

  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/filmRole> ?role .

  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Amy_Arbus> .

  FILTER(?movie = ?film)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,34,train,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . },"```sparql
SELECT ?successor WHERE {
  ?commander <http://dbpedia.org/ontology/commander> ?force .
  ?force <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Great_Turkish_War> .
  
  ?commander <http://dbpedia.org/ontology/successor> ?successor .
  
  ?successor <http://dbpedia.org/property/politicalParty> ?party .
  ?successor <http://dbpedia.org/ontology/officeHolder> ?office .

  OPTIONAL {
    ?force <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Military_conflict_of_Michał_Kazimierz_Pac> .
  }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
492,15,train,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . },"```sparql
SELECT ?salMineoDeathPlace ?actor ?actorDeathPlace WHERE {
  # Get the death place of Sal Mineo
  <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?salMineoDeathPlace .

  # Get actors from ""The Sky Ranger"" (1928 film)
  <http://dbpedia.org/resource/The_Sky_Ranger_(film)> <http://dbpedia.org/property/starring> ?actor .
  
  # Get the death place of each actor
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,0,train,Give me the reference to Mitaka.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
SELECT ?property ?hasValue WHERE {
  ?entity rdfs:label ""Mitaka""@en .
  ?entity ?property ?hasValue .
}
```",1,1,2,1,1,2,2,9,1,21,0,0.045454545454545456,1.0,0.08695652173913045
492,24,train,Give me the death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?actor ?deathPlace WHERE {
  { 
    <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/ontology/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/property/deathPlace> ?deathPlace . }
  } UNION {
    <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/ontology/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/property/deathPlace> ?deathPlace . }
  }
}
```",4,4,5,2,2,2,3,28,0,11,1,0.0,0.0,0
293,41,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Harriette Arlene Lake""@en .
  
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/memberOf> ?party .
    ?party <http://dbpedia.org/property/location> ""Central, Louisiana"" .
    ?party <http://dbpedia.org/ontology/rulingParty> true .
  }
  
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/1_000_Dollars_a_Minute> .
    ?person <http://dbpedia.org/ontology/spouse> ?actor .
  }

  BIND(?person AS ?result)
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
706,0,train,Give me the birthplace of Ebrahim Alkazi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
557,20,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/famousFor> ?work .
  FILTER (rdf:type(?work, <http://dbpedia.org/class/yago/Work108069068>) || rdf:type(?work, <http://dbpedia.org/ontology/Work>)) # Assuming Work is a generic class for works
  ?work <http://dbpedia.org/property/producer> ?result .
  
  OPTIONAL {
    ?result <http://dbpedia.org/property/profession> ?v1 . # Placeholder for professional role
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,51,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . }","```sparql
SELECT ?entity WHERE {
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  
  ?birthplace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .

  ?awardee <http://dbpedia.org/property/awardedGillmoreMedal> true .
  ?force <http://dbpedia.org/ontology/memberOf> ?awardee .
  
  FILTER(?entity = ?birthplace || ?entity = ?force)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
68,1,train,"Give me the child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
398,3,train,Give me the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?nickname .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
585,10,train,Give me the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?profession .
  ?person <http://dbpedia.org/property/occupation> ?profession .
  FILTER(?person != <http://dbpedia.org/resource/Shirley_Stoler>)
}
```",2,2,3,2,1,3,2,20,19240,0,1,1.0,0.9999480276492906,0.9999740131493464
472,12,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/administration> ?result .
  <http://dbpedia.org/resource/Olaf_I_of_Denmark> <http://dbpedia.org/ontology/administration> ?result .
  ?result <http://dbpedia.org/property/administeredFrom> <http://dbpedia.org/resource/Copenhagen> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
905,22,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Find the spouse of Charles II of Naples
  <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Check if this spouse is a child of someone who is royalty and a child of Béla IV of Hungary
  ?spouse <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  
  # Ensure the parent is royalty
  OPTIONAL {
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  }
  
  BIND(?spouse AS ?result)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
595,30,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  # Find wars that are both diseases and societal events
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(?label, ""disease"") && CONTAINS(?label, ""societal event"")) .

  # Identify commanders in these wars
  ?result <http://dbpedia.org/ontology/commanderInWar> ?war .

  # Check if the person is the author of ""Back to Work""
  ?result <http://dbpedia.org/property/book> <http://dbpedia.org/resource/Back_to_Work_(book)> .

  # Verify that this person is married to Hillary Clinton
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
103,4,train,"Give me the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow1000000> .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
595,38,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?bookAuthor ?commander WHERE {
  ?book <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Clinton> .
  ?book <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?book <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book108069067> .
  
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Disease> .
    ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .
    ?commander <http://dbpedia.org/property/commandedBy> <http://dbpedia.org/resource/United_States_Navy> .
    ?commander <http://dbpedia.org/property/warCommander> ?war .
  }
  
  BIND(<http://dbpedia.org/resource/Bill_Clinton> AS ?bookAuthor)
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
737,59,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?greatGreatGrandchild WHERE {
  # Step 1: Find Alexander of Württemberg's great-great-grandchild
  ?grandparent <http://dbpedia.org/ontology/birth> ?alexander .
  FILTER(?alexander = <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)>)
  
  ?parent <http://dbpedia.org/ontology/parent> ?grandparent .
  ?child1 <http://dbpedia.org/ontology/parent> ?parent .

  ?grandchild <http://dbpedia.org/ontology/parent> ?child1 .
  ?greatGrandchild <http://dbpedia.org/ontology/parent> ?grandchild .

  ?greatGreatGrandchild <http://dbpedia.org/ontology/parent> ?greatGrandChild .

  # Step 2: Find Archduchess Helena's spouse and their child
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  FILTER EXISTS { ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> } # Assuming Q214424 is ""royalty""

  ?child2 <http://dbpedia.org/ontology/parent> ?spouse .

  # Step 3: Find the predecessor of Archduchess Helena's spouse's child
  ?predecessor <http://dbpedia.org/ontology/successor> ?child2 .
  
  FILTER(?greatGreatGrandchild = ?predecessor)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,33,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify parent(s) of Edward Stanley, 17th Earl of Derby
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .

  # Step 2: Find children of that parent who are politicians and officeholders
  ?result <http://dbpedia.org/ontology/parent> ?parent .
  ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician (Q82955 is a placeholder for the actual QID)
  ?result <http://www.wikidata.org/entity/P39> ?office . # Office holder

  # Step 3: Check if they are also parents of Victor Stanley
  ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,10,train,Give me the spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
  ?spouse <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  BIND(?spouse AS ?result)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,10,train,Who is the awardee of the reference to Nobel Prize in Physics?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Nobel_Prize_in_Physics> dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,31,0,0.0,0
414,1,train,Give me the award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Max_Born> dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
361,13,train,Give me the professional in the profession of Frédéric Bouraly and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric_Bouraly> <http://dbpedia.org/property/profession> ?profession .
  ?result <http://dbpedia.org/property/profession> ?profession .
  FILTER(?result != <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric_Bouraly>)
}
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
943,13,train,Give me the reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,3,98447,0.0,0.0,0
89,37,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?father <http://dbpedia.org/ontology/parent> ?child .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  ?spouse <http://dbpedia.org/ontology/spouse> ?father .
  ?spouse <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
557,29,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/property/claimToFame> ?work .
  ?result <http://dbpedia.org/property/profession> ?v1 .
  FILTER(?v1 = ""producer"") .

  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
23,7,train,Give me the party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?party WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/resource/Roy_Barreras> }
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
249,1,train,Give me the native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/India> .
  }
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/India> .
  }
}
```",1,1,2,1,1,2,2,9,6126,1042450,2851,0.0058422088623046875,0.6824106048791355,0.01158523497167518
353,2,train,"Give me the child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
816,11,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
SELECT ?movie ?actor WHERE {
  ?movie a dbo:Film ;
         owl:sameAs <http://dbpedia.org/resource/Category:Films> .
  
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  FILTER EXISTS { 
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
  }
}
```",2,3,3,2,1,3,3,71,0,0,67,0,0.0,0
737,54,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
SELECT ?result WHERE {
  # Condition 1: Child of Archduchess Margarete Sophie of Austria
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  
  # Condition 2: Predecessor of the child of Philipp Albrecht, Duke of Württemberg
  ?philippChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
  ?result <http://dbpedia.org/ontology/successor> ?philippChild .

  # Condition 3: Child of the child of the child of Alexander of Wütemberg (1804-1881)
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://dbpedia.org/ontology/birthParent> ?greatGrandparent .
  ?greatGrandparent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)> .

  # Combine conditions
  FILTER (?child = ?result && ?grandchild = ?philippChild)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
119,33,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/ontology/office> ?office .
  
  ?person <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q29> . # Q29 is the identifier for Spain
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  FILTER EXISTS { ?residence <http://www.w3.org/2000/01/rdf-schema#label> ""Spain""@en }
  
  ?office <http://dbpedia.org/property/holder> ?person .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
213,12,train,Give me the country of the work of Lao She and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?workCountry ?birthPlace WHERE {
  # Find the country of Lao She's work
  ?work <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> .
  OPTIONAL { 
    ?work <http://dbpedia.org/ontology/country> ?workCountry .
  }
  
  # Find Winston Chang's birthplace
  <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,3,4,2,2,3,2,20,1,3,0,0.25,1.0,0.4
731,4,train,"Give me the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/reference> ?result .
  
  # Ensure it is a societal event
  ?result <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Societal_events> .

  # Ensure it is a military conflict
  ?result <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
742,11,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of Reneta Kamberova.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
SELECT ?alumnusBirthplace ?renetaKamberovaBirthplace WHERE {
  # Find the birthplace of an alumnus of Plovdiv University ""Paisii Hilendarski""
  ?alumnus <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_Paisii_Hilendarski> .
  ?alumnus dbo:birthPlace ?alumnusBirthplace .

  # Find the birthplace of Reneta Kamberova
  <http://dbpedia.org/resource/Reneta_Kamberova> dbo:birthPlace ?renetaKamberovaBirthplace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
68,4,train,"Who is the commander, that is a royalty, in Siege of Padua?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
59,5,train,Give me the native of the residence of David Luckman.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?nativePlace WHERE {
  <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",2,2,3,2,1,2,2,9,0,0,971,0,0.0,0
347,42,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Find wars that are societal events and associated with television shows
  ?war <http://dbpedia.org/ontology/war> ?event .
  ?event <http://dbpedia.org/property/societalEvent> true .
  OPTIONAL { 
    ?event <http://dbpedia.org/ontology/show> ?show .
  }

  # Find commanders of the 2nd Dragoon Regiment in these wars
  ?commander <http://dbpedia.org/ontology/commanderOfMilitaryUnit> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
  ?commander <http://dbpedia.org/ontology/warCommander> ?war .

  # Find the father of Cecilia Renata of Austria
  ?father <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> .
  
  # Ensure the commander is a child of this father and parent of Eleonore of Austria
  ?commander <http://dbpedia.org/ontology/father> ?father .
  ?commander <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> .

}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
103,49,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
SELECT ?result WHERE {
  ?show <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Movie> .
  ?show <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Television_show> .
  ?show <http://dbpedia.org/ontology/starring> ?result .
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .

  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 is the identifier for ""comics character""
    ?alterEgo <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow_(video_game)> .
    ?result <http://dbpedia.org/property/occupation> ?alterEgo .
  }
}
```",5,7,6,3,2,3,3,71,0,0,13,0,0.0,0
103,9,train,Give me the actor of Dispatches from Elsewhere and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (CONTAINS(LCASE(?v1), ""actor""))
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
731,14,train,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
SELECT ?war ?commander WHERE {
  ?war rdf:type dbo:SocietalEvent .
  ?war rdf:type dbo:MilitaryConflict .
  
  OPTIONAL { 
    ?reference <http://dbpedia.org/ontology/reference> ?war .
    ?reference rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  }
  
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,5,4,3,1,3,2,20,5,50944,7,9.813735303931382e-05,0.4166666666666667,0.00019622848845195342
39,0,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/occupation> ?v .
  FILTER(CONTAINS(LCASE(?v), ""singer""))
}
```",1,1,2,1,1,3,3,71,0,0,10364,0,0.0,0
89,42,train,Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  # Find the parent of Min Hla Htut of Pyakaung
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> .
  
  # Identify their child (the person we are looking for)
  ?parent <http://dbpedia.org/ontology/child> ?result .

  # Ensure this person is a spouse of Saw Shwe Khet
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  
  # Find the children of Saw Shwe Khet
  ?sawChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .

  # Determine if our result is a predecessor of any of these children
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/successor> ?sawChild .
  }
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
668,54,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Find Elorm Kabu Amenyah's associated musical artist
  ?elorm <http://dbpedia.org/ontology/birthName> ""Elorm Kabu Amenyah"" .
  ?elorm <http://dbpedia.org/property/musicArtist> ?result .

  # Find the writer of The Live Anthology who is a musical artist
  ?anthologyWriter <http://dbpedia.org/ontology/writtenWork> <http://dbpedia.org/resource/The_Live_Anthology> .
  ?anthologyWriter <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q4835014> . # Assuming Q4835014 is ""writer""
  ?anthologyWriter <http://dbpedia.org/ontology/musicArtist> ?result .

  # Ensure the result is associated with Darryl Paa Kwesi Bannerman-Martin
  ?darryl <http://dbpedia.org/ontology/birthName> ""Darryl Paa Kwesi Bannerman-Martin"" .
  FILTER(?result = ?darryl)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,5,train,"Give me the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Politician> .
  ?result <http://dbpedia.org/ontology/officeHolder> ?office .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
943,47,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Find the alter ego of Lamont Cranston
  <http://dbpedia.org/resource/Lamont_Cranston> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  
  # Check if this alter ego has a parent who is royalty and also a parent of Yeshaq I
  OPTIONAL {
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
    ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
    ?alterEgo <http://dbpedia.org/ontology/parent> ?parent .
  }
  
  BIND(?alterEgo AS ?result)
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
706,7,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?awardee ?birthPlace WHERE {
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
782,55,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?person <http://dbpedia.org/ontology/musicalArtist> [] .
  
  OPTIONAL { 
    ?person <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
  }
  
  OPTIONAL {
    ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?band <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Eric_Clapton> .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  }
  
  BIND(?person AS ?result)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
198,59,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT ?force ?war WHERE {
  # Force of the awardee of the award of Quincy Adams Gillmore
  ?award <http://dbpedia.org/ontology/receiver> ?awardee .
  ?awardee <http://dbpedia.org/property/militaryForce> ?force .
  FILTER(?award = <http://dbpedia.org/resource/Award_of_Quincy_Adams_Gillmore>) .

  # War of the awardee of the show, that is an award, of United States Congress
  ?congressAward <http://dbpedia.org/ontology/receiver> ?congressAwardee .
  ?congressAwardee <http://dbpedia.org/property/war> ?war .
  FILTER(?congressAward = <http://dbpedia.org/resource/Award_show_of_United_States_Congress>) .
}
```

Note: The placeholders `<http://dbpedia.org/resource/Award_of_Quincy_Adams_Gillmore>` and `<http://dbpedia.org/resource/Award_show_of_United_States_Congress>` should be replaced with the actual DBpedia resource identifiers for these awards if they exist. If not, additional exploration of DBpedia might be necessary to find the correct resources or properties.",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
119,41,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find Álvaro Quirós's country of residence and its tenant
  <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/ontology/residence> ?country .
  ?country <http://dbpedia.org/ontology/inhabitant> ?result .

  # Find the office held by the leader in the 2009 Galician regional election
  OPTIONAL {
    ?election <http://dbpedia.org/property/electionYear> ""2009""^^xsd:integer ;
              <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Galicia_(Spain)> .
    ?leader <http://dbpedia.org/ontology/officesHeld> ?office .
    ?office <http://dbpedia.org/ontology/election> ?election .
  }

  # Check for tenancy in Santiago de Compostela
  OPTIONAL {
    <http://dbpedia.org/resource/Santiago_de_Compostela> <http://dbpedia.org/ontology/inhabitant> ?result .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,56,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce WHERE {
  ?person <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  
  ?conflict <http://dbpedia.org/property/commander> ?person ;
            a <http://dbpedia.org/ontology/MilitaryConflict> .

  ?regiment <http://dbpedia.org/ontology/militaryForce> ?militaryForce ;
             <http://dbpedia.org/ontology/participatedInMilitaryConflicts> ?conflict .
  
  <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
38,17,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
SELECT ?author WHERE {
  # Find the author of ""Promises to Keep""
  <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?author .

  # Find a commander in the Korean conflict and their authored works
  ?commander <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/officeName> ""Commander"" .
  ?office <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Korean_War> .

  # Ensure the commander authored a written work
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?work <http://dbpedia.org/ontology/author> ?commander .

  # Match the author of ""Promises to Keep"" with the commander's authored work
  FILTER (?author = ?commander)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
731,9,train,Who is the awardee of the award of Edmund Hakewill-Smith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/Edmund_Hakewill-Smith> .
  ?award <http://dbpedia.org/property/recipient> ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,3570,0,0.0,0
203,17,train,"Give me the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?force WHERE {
  ?person <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocialEvent108069068> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Event108069068> .
  
  ?person <http://dbpedia.org/ontology/associatedWith> ?force .
}
```",2,4,3,2,1,3,3,71,0,0,298,0,0.0,0
859,17,train,"Give me the band member of Human Remains (band) and associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find a member of Human Remains
  ?humanRemainMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Human_Remains_(band)> .
  
  # Step 2: Find a member of Khlyst and their associated musical artist
  ?khlystMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Khlyst> .
  ?associatedArtist1 <http://dbpedia.org/property/associatedMusicalArtist> ?khlystMember .
  
  # Step 3: Find an associated musical artist of the person found in step 2
  ?result <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist1 .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
258,3,train,Give me the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
SELECT ?foundingDate WHERE {
  <http://dbpedia.org/resource/Federal_University_of_Para%C3%ADba> <http://dbpedia.org/ontology/foundingDate> ?foundingDate .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,59,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the war involving William Bayne
  ?bayneWar <http://dbpedia.org/ontology/war> ?war .
  ?bayneWar rdfs:label ""William Bayne""@en .

  # Step 2: Identify military force in William Bayne's war
  ?war <http://dbpedia.org/property/militaryForce> ?militaryForce .

  # Step 3: Find the war involving The Triple X
  ?tripleXWar <http://dbpedia.org/ontology/war> ?sameWar .
  ?tripleXWar rdfs:label ""The Triple X""@en .

  # Ensure it's the same military force in both wars
  FILTER (?war = ?sameWar)

  # Step 4: Identify commander of the military force in The Triple X's war
  OPTIONAL {
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
386,13,train,Give me the war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?war ?entity WHERE {
  <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/foughtIn> ?war .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?birthPlace <http://dbpedia.org/ontology/notableFor> ?entity .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,5,train,"Give me the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
103,1,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person <http://dbpedia.org/property/occupation> ""Actor""@en .
}
```",1,1,2,1,1,3,3,71,21485,0,95,1.0,0.9955977757182577,0.997794032276791
871,11,train,Give me the parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
SELECT ?parent WHERE {
  ?awardee dbo:recipient <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  ?awardee dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
246,1,train,Give me the parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
SELECT ?parent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> <http://dbpedia.org/ontology/father> ?parent .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> <http://dbpedia.org/ontology/mother> ?parent .
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
468,4,train,Give me the parent of Martin of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Martin_of_Aragon> <http://dbpedia.org/ontology/father> ?parent .
} UNION {
  <http://dbpedia.org/resource/Martin_of_Aragon> <http://dbpedia.org/ontology/mother> ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
347,58,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Ferdinand III's child who was a commander in the Thirty Years' War
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .
  ?child <http://dbpedia.org/property/commanderInWar> ""Thirty Years' War"" .

  # Step 2: Find the father of Maria Anna of Bavaria (born 1574)
  ?maria <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> .
  ?maria <http://dbpedia.org/ontology/birthParent> ?father .

  # Step 3: Ensure the father is royalty
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 4: Match the commander child with Maria Anna's father
  ?child <http://dbpedia.org/ontology/birthParent> ?result .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
59,0,train,Give me the native of Bristol.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> .
}
```",1,1,2,1,1,2,2,9,971,0,0,1.0,1.0,1.0
119,48,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
SELECT ?result WHERE {
  ?administration <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  ?administration <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  
  ?result <http://dbpedia.org/ontology/member> ?administration .
  ?event <http://dbpedia.org/ontology/officeHolder> ?result .
  ?event <http://www.w3.org/2000/01/rdf-schema#label> ?v1 . # Assuming the event is labeled
  
  FILTER(CONTAINS(LCASE(?v1), ""anxo quintana""))
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
119,17,train,"Give me the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
SELECT ?administration WHERE {
  ?administration a dbo:Government .
  ?administration <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  ?administration <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
}
```",2,3,3,2,1,3,3,71,0,0,320,0,0.0,0
871,23,train,Give me the parent of the awardee of the award of Rodney Lees.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee ?parent WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?award <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Rodney_Lees> .
  OPTIONAL { 
    ?awardee <http://dbpedia.org/property/parent> ?parent .
  }
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
225,5,train,"Give me the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?awardee WHERE {
  ?awardee dbo:award <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> .
  ?awardee dbo:nationality <http://dbpedia.org/resource/Japan> .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
737,28,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
SELECT ?result ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .

  ?predecessor <http://dbpedia.org/ontology/successor> ?child .
  
  BIND(?child AS ?result)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
737,2,train,Give me the child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
609,8,train,Who is the author of El Deafo?,SELECT ?result WHERE { <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
203,60,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/war> ?event .
  ?event rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
  ?event rdf:type <http://dbpedia.org/class/yago/Event108069068> .

  ?figure rdfs:label ""The Triple X's""@en .
  ?force <http://dbpedia.org/ontology/militaryForce> ?figure .
  ?force rdf:type <http://dbpedia.org/class/yago/Event108069068> .
  ?force rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> .

  ?awardee <http://dbpedia.org/property/knightCommanderOfOrderOfBath> true .
  ?commander <http://dbpedia.org/ontology/warCommander> ?war .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
706,9,train,Who is the awardee of the reference to Sangeet Natak Akademi Fellowship?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
SELECT ?awardee WHERE {
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Sangeet Natak Akademi Fellowship""@en .
  ?award <http://dbpedia.org/ontology/receipient> ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
557,9,train,Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
943,25,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Na%27od> .
  ?grandfather <http://dbpedia.org/ontology/father> ?father .
  
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?grandfather <http://dbpedia.org/ontology/officeHolder> ?office .

  OPTIONAL { 
    ?reference <http://dbpedia.org/ontology/reference> ?grandfather .
    BIND(?reference AS ?result)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
158,10,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?nativePlace WHERE {
  <http://dbpedia.org/resource/Alexander_II_of_Russia> <http://dbpedia.org/ontology/title> ""Grand Duke of Finland""@en .
  OPTIONAL { 
    <http://dbpedia.org/resource/Alexander_II_of_Russia> <http://dbpedia.org/property/nativePlace> ?nativePlace .
  }
}
```",2,2,3,2,1,2,3,28,0,0,355,0,0.0,0
311,4,train,"Give me the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
SELECT ?album WHERE {
  ?album a dbo:Album .
  ?album a dbo:MusicalWork .
  ?album a dbo:Work .
  OPTIONAL { 
    ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Sappy> .
  }
}
```",1,4,2,1,1,3,2,20,4,161110,0,2.4827141030574624e-05,1.0,4.9653049317891236e-05
859,1,train,Give me the associated musical artist of Phantomsmasher.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/musicArtist> ?artist .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
816,27,train,Give me the parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  ?result <http://dbpedia.org/ontology/parent> ?child .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
737,13,train,Give me the child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?grandchild WHERE {
  ?parent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> .
  ?parent <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://dbpedia.org/ontology/parent> ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
295,5,train,Give me the birth place of Victor Saville.,SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Victor_Saville> dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
293,25,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result .
  ?result <http://dbpedia.org/property/birthName> ""Ann Sothern"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
258,1,train,Give me the alma mater of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
414,14,train,Give me the award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/nobelPrize> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> .
  ?person <http://dbpedia.org/property/awards> ?result .
}
```",3,3,4,3,1,3,2,20,0,0,87,0,0.0,0
39,60,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find the producer of Coke Studio Philippines and their profession
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://dbpedia.org/property/profession> ?profession .

  # Find Bob Thompson's birth name and band involvement as a musical artist
  OPTIONAL {
    <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q7889> . # Assuming Q7889 is the identifier for ""musical artist""
  }

  # Match the profession with band involvement
  FILTER(?profession = ?band)
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
609,1,train,Give me the birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
87,7,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Paradise_(2013_film)> dbo:starring ?actor .
  <http://dbpedia.org/resource/Always_(1989_film)> dbo:starring ?actor .
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
943,55,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Alter ego of The Shadow
  ?shadowAlterEgo <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  
  # Father of the father (royalty and office holder) of Na'od
  ?fatherOfNaodFather <http://dbpedia.org/ontology/father> ?result .
  ?fatherOfNaodFather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  OPTIONAL { 
    ?fatherOfNaodFather <http://dbpedia.org/ontology/officeHolder> ?office .
  }
  
  # Child of the parent (royalty) of Yeshaq I
  ?yeshaqParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
  ?yeshaqParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  
  # Combine conditions
  FILTER (?shadowAlterEgo = ?result)
  FILTER EXISTS { ?fatherOfNaodFather <http://dbpedia.org/ontology/father> ?naod }
  FILTER EXISTS { ?yeshaqParent <http://dbpedia.org/ontology/child> ?result }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
816,42,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  # Parent of Amy Arbus
  <http://dbpedia.org/resource/Amy_Arbus> <http://dbpedia.org/ontology/parent> ?result .

  # Parent of the child of Allan Arbus
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Allan_Arbus> .
  ?child <http://dbpedia.org/ontology/parent> ?result .

  # Actor in a movie with Herschel Bernardi
  ?movie <http://dbpedia.org/ontology/starring> ?result ;
         <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
}
```",5,6,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
871,50,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  # Edward Stanley, 17th Earl of Derby's parent
  <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/father> ?parent1 .
  
  # Child of Edward Stanley's parent
  ?child1 <http://dbpedia.org/ontology/father> ?parent1 .

  # Ensure the person is a politician and office holder
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q36180> . # Office Holder

  # Frederick Stanley, 16th Earl of Derby's parent
  <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/father> ?parent2 .

  # Child of Frederick Stanley's parent
  ?child2 <http://dbpedia.org/ontology/father> ?parent2 .

  # Ensure the person is also the father of this child
  ?result <http://dbpedia.org/ontology/father> ?child2 .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,23,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?event WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> .
}
```",3,4,4,3,1,3,3,71,0,3,34,0.0,0.0,0
347,45,train,"Give me the commander in Thirty Years' War and father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify the commander in Thirty Years' War
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Thirty_Years'_War> .
  
  # Step 2: Find Eleonore of Austria's father
  ?eleonoreFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> .

  # Step 3: Ensure the commander is also Eleonore's father
  FILTER (?commander = ?eleonoreFather)

  # Step 4: Find Maria Anna of Bavaria's father
  ?mariaAnnaFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> .

  # Step 5: Ensure the commander is a child of Maria Anna's father
  ?result <http://dbpedia.org/ontology/father> ?mariaAnnaFather .
  
  FILTER (?commander = ?result)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
293,17,train,Give me the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?parent ?birthName WHERE {
  <http://dbpedia.org/resource/Tisha_Sterling> <http://dbpedia.org/ontology/father> ?parent .
  UNION
  <http://dbpedia.org/resource/Tisha_Sterling> <http://dbpedia.org/ontology/mother> ?parent .
  
  ?parent <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
531,10,train,Give me the office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?office .
  OPTIONAL { 
    ?office <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Madrid> .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
375,1,train,Give me the parent of Kate Dimbleby.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Kate_Dimbleby> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
263,2,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?father ?mother WHERE {
  <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/father> ?father .
  OPTIONAL { 
    <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/mother> ?mother .
  }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,51,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
SELECT ?person WHERE {
  # Find Tisha Sterling's parent and their birth name
  ?parent <http://dbpedia.org/ontology/birthName> ?birthName .
  ?parent <http://dbpedia.org/ontology/spouse> ?person .

  # Ensure the person is a spouse of an actor in ""1,000 Dollars a Minute""
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/1000_Dollars_a_Minute> .
    ?actor <http://dbpedia.org/ontology/spouse> ?person .
  }

  # Ensure the parent is indeed Tisha Sterling's parent
  OPTIONAL {
    ?tisha <http://dbpedia.org/ontology/birthName> ""Tisha Sterling"" .
    ?tisha <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",5,5,6,3,2,3,3,71,1,22552,0,4.433999911320002e-05,1.0,8.867606632969761e-05
943,49,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
SELECT ?grandfather WHERE {
  # Step 1: Identify a child of Baeda Maryam I
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .

  # Step 2: Find the parent of Yeshaq I who is royalty
  ?royalParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
  ?royalParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 3: Find a common child
  ?child <http://dbpedia.org/ontology/father> ?royalParent .

  # Step 4: Identify the father of this child's father (grandfather)
  ?father <http://dbpedia.org/ontology/father> ?child .
  
  # Ensure grandfather is royalty and an office holder
  ?grandfather <http://dbpedia.org/ontology/father> ?father .
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  OPTIONAL { 
    ?grandfather <http://dbpedia.org/property/officeHolder> ?office . # Assuming office holder is represented by this property
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
89,53,train,Give me the child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Child of the parent of the child of Minye Kyawswa
  ?childMinyeKyawswa <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?grandParent ?childMinyeKyawswa <http://dbpedia.org/ontology/parent> .
  ?result ?grandParent <http://dbpedia.org/ontology/parent> .

  # Predecessor of the child of Saw Shwe Khet
  ?childSawShweKhet <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?result <http://dbpedia.org/ontology/successor> ?childSawShweKhet .

  # Spouse of Saw Shwe Khet
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
723,1,train,Give me the band member of Stone Sour.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Stone_Sour> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
159,56,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  # Reference to George Ducas
  ?georgeDucas <http://dbpedia.org/ontology/wikiPageRedirects> ?result .
  
  # Successor of a commander in Russo-Polish War (1654–1667)
  ?commander <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Russo-Polish_War_(1654%E2%80%931667)> ;
              <http://dbpedia.org/ontology/successor> ?successor .
  
  # Commander in a war that is both a television show and societal event
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ?labelWar ;
       <http://purl.org/dc/terms/category> ?category1, ?category2 .
  FILTER (?category1 = ""Television shows"" && ?category2 = ""Societal events"")
  ?commanderInWar <http://dbpedia.org/property/conflict> ?war .

  # Military force of Battle of Vienna
  ?battleOfVienna <http://dbpedia.org/ontology/battle> ?militaryForce .
  
  # Combine conditions to find the desired entity
  FILTER (?result = ?successor && ?commanderInWar = ?successor && ?militaryForce = ?georgeDucas)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
89,57,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?father <http://dbpedia.org/ontology/parent> ?child .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  ?spouse <http://dbpedia.org/ontology/spouse> ?father .

  ?predecessor <http://dbpedia.org/ontology/successor> ?spouse .
  ?predecessor <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,10,train,Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake"" .
  ?result <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
119,46,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Find event where Anxo Quintana is leader
  ?event <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> .
  
  # Ensure the event is related to an administration office
  ?event <http://dbpedia.org/ontology/event> ?result .

  # Find country where Álvaro Quirós is a tenant or resident
  OPTIONAL {
    ?country <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Álvaro_Quirós> .
    
    # Ensure the result matches both conditions
    FILTER(?result = ?country)
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
384,1,train,Give me the party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/property/politicalParty> ?party .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
246,2,train,"Give me the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
295,4,train,Who is the producer of Storm in a Teacup (film)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?producer .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
159,48,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?result WHERE {
  # Find wars that are television shows and societal events
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Television_shows> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Societal_events> .

  # Find commanders in these wars
  ?war <http://dbpedia.org/ontology/commander> ?result .

  OPTIONAL {
    # Identify the predecessor commander who was a politician and office holder
    ?predecessor <http://dbpedia.org/ontology/successor> ?result .
    ?predecessor <http://dbpedia.org/ontology/politicalParty> ?party .
    ?predecessor <http://dbpedia.org/property/officeHolder> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .

    # Ensure the force is an event and a military conflict
    ?force <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Events> .
    ?force <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Military_conflicts> .

    # Link the predecessor to this force
    ?predecessor <http://dbpedia.org/ontology/commanderOfForce> ?force .
  }
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
80,49,train,Give me the actor of the movie with  and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> """"@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
  }
}
```",5,5,6,3,2,3,3,71,7802,56316,0,0.1216818989987211,1.0,0.21696329254727473
756,40,train,"Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?manager WHERE {
  # Manager of SBV Vitesse for the 2020-21 season
  <http://dbpedia.org/resource/2020%E2%80%9321_SB_Vitesse_season> <http://dbpedia.org/ontology/teamManager> ?manager .
  
  # Native of West Germany
  ?manager <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/West_Germany> .

  # Manager of a player in the successor season to 2006-07 VfL Bochum
  OPTIONAL {
    ?club <http://dbpedia.org/ontology/sportsTeam> ?player .
    ?player <http://dbpedia.org/property/teamManager> ?manager .
    
    ?season1 <http://dbpedia.org/ontology/successor> ?season2 .
    ?season1 <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> .
    ?club <http://dbpedia.org/property/teamSeason> ?season2 .

    # Ensure the club is a sports club and soccer club
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsClub108069068> .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerClubs100000001> .
  }
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
943,19,train,"Give me the reference to  and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Yeshaq_I> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
668,35,train,Give me the person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joey B"" .
  ?result <http://dbpedia.org/property/musicalArtist> ?person .

  OPTIONAL { 
    ?elorm <http://www.wikidata.org/entity/P735> ""Elorm Kabu Amenyah""@en . # Assuming P735 is the property for stage name
    ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?elorm .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
361,10,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
SELECT ?alterEgo ?profession WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/property/occupation> ?profession .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
103,36,train,"Give me the actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .

  OPTIONAL { 
    ?shadowGame <http://dbpedia.org/ontology/comicsCharacter> ?comicsCharacter .
    ?comicsCharacter <http://dbpedia.org/property/alterEgo> ?v1 .
    FILTER(STRSTARTS(STR(?shadowGame), ""http://dbpedia.org/resource/The_Shadow_(video_game)""))
  }
}
```",4,5,5,3,2,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
345,5,train,"Give me the reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
SELECT ?mitaka ?reference WHERE {
  ?mitaka <http://www.w3.org/2000/01/rdf-schema#label> ""Mitaka""@en .
  ?mitaka <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Tokyo""@en .
  ?mitaka <http://xmlns.com/foaf/0.1/page> ?reference .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
295,14,train,Give me the native of the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?native <http://dbpedia.org/ontology/nativeOf> ?birthPlace .
}
```",3,3,4,3,1,3,2,20,0,0,4250,0,0.0,0
398,9,train,"Give me the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?club ?nickname WHERE {
  <http://dbpedia.org/resource/Denis_Kolodin> dbo:player ?club .
  ?club a dbo:SoccerClub .
  OPTIONAL { 
    ?club rdfs:label ?nickname .
  }
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
89,56,train,"Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  
  <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> <http://dbpedia.org/ontology/parent> ?parent .
  ?child <http://dbpedia.org/ontology/parent> ?parent .

  <http://dbpedia.org/resource/Saw_Min_Phyu> <http://dbpedia.org/ontology/spouse> ?royalSpouse .
  ?royalSpouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?childOfRoyal <http://dbpedia.org/ontology/parent> ?royalSpouse .

  ?predecessor <http://dbpedia.org/ontology/successor> ?childOfRoyal .
  
  FILTER (?result = ?spouse && ?result = ?child && ?result = ?predecessor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,9,train,Give me the native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> .
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/VfL_Bochum> .
  }
}
```",2,2,3,1,2,3,3,71,1,5169,0,0.00019342359767891682,1.0,0.0003867723844517502
293,26,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT DISTINCT ?spouse WHERE {
  ?film <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,62,7,0,0.8985507246376812,1.0,0.9465648854961832
89,50,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT DISTINCT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?father <http://dbpedia.org/ontology/parent> ?child .
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .

  ?spouse <http://dbpedia.org/ontology/successor> ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,4,train,Give me the party of Guillaume Peltier and party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?party WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Guillaume_Peltier> 
    <http://dbpedia.org/resource/Bruno_Retailleau>
  }
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
39,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
513,3,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/G._H._Cameron> <http://dbpedia.org/ontology/award> ?award .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
39,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/SpecificEntity> <http://dbpedia.org/property/occupation> ?profession .
}
```

Replace `SpecificEntity` with the actual resource identifier or name of interest.",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
419,8,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship and entity in Andhra Pradesh.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Australian_Laureate_Fellowship> .
  ?person <http://dbpedia.org/property/nationality> ""Australian"" .
  ?person <http://dbpedia.org/property/profession> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""scientist"")) .

  ?person <http://dbpedia.org/ontology/almaMater> ?result .

  OPTIONAL {
    ?person <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Andhra_Pradesh> .
  }
}
```",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
203,46,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Part 1: Military force of William Bayne's war
SELECT ?militaryForce WHERE {
  ?war <http://dbpedia.org/property/war> ?v1 .
  ?v1 <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .
  ?war <http://dbpedia.org/property/militaryForce> ?militaryForce .
}

# Part 2: Commander in The Triple X's war
SELECT ?commander WHERE {
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""The Triple X""@en .
  ?war <http://dbpedia.org/property/war> ?v1 .
  ?v1 <http://dbpedia.org/ontology/person> ?figure .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
158,16,train,"Give me the person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> .
  ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russia> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Person108639> .
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
943,21,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  ?parent <http://dbpedia.org/ontology/child> ?result .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
943,22,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  # Dawit I's child
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> .
  
  # Na'od's father
  ?naodFather <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Na'od> .

  # Dawit I's child is the grandfather of Na'od (i.e., father of Na'od's father)
  ?child <http://dbpedia.org/ontology/parent> ?naodFather .
  
  # Ensure the individual is royalty and an office holder
  ?result = ?child .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/officeHolder> ?office .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
159,36,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .
  ?war <http://dbpedia.org/ontology/show> ?tvShow .
  ?war <http://dbpedia.org/property/eventType> ""societal event"" .
  ?successor <http://dbpedia.org/ontology/commander> ?war .
  
  OPTIONAL {
    ?battle <http://dbpedia.org/ontology/battleOf> <http://dbpedia.org/resource/Battle_of_Vienna> .
    ?successor <http://dbpedia.org/ontology/militaryForce> ?battle .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
531,45,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy and tenant of Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?partyLeaderOffice ?marianoRajoyOffice ?tenant WHERE {
  # Find the political party of Miguel Maura and its leader
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/member> ?party .
  ?party <http://dbpedia.org/ontology/leader> ?leader .
  FILTER(?leader <http://www.wikidata.org/entity/Q215627>) # Assuming Q215627 is the identifier for ""politician""
  ?leader <http://dbpedia.org/ontology/officeHeld> ?partyLeaderOffice .

  # Find Mariano Rajoy's office
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/officeHeld> ?marianoRajoyOffice .

  # Find a tenant in Madrid
  ?tenant <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Madrid> .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
119,16,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of the commander in French Revolutionary Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/ontology/residence> ?country .
  
  OPTIONAL { 
    ?commander <http://dbpedia.org/property/war> <http://dbpedia.org/resource/French_Revolutionary_Wars> .
    ?commander <http://dbpedia.org/ontology/commander> ?result .
    
    FILTER(?country = <http://dbpedia.org/resource/Poland>) # Assuming Poland as Dawid Olejniczak's residence
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
89,12,train,Give me the spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/ontology/successor> ?result .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,16,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> .
  ?child <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Middlesex> .
  
  ?result <http://dbpedia.org/ontology/parent> ?child .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,4,train,"Who is the parent, that is a royalty, of Yeshaq I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,54,train,"Give me the person born as Harriette Arlene Lake and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Harriette Arlene Lake"" .
  
  OPTIONAL { 
    ?film <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Nat_Levine> .
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?person <http://dbpedia.org/ontology/spouse> ?actor .
  }
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/politicalAffiliation> ?party .
    FILTER(CONTAINS(?party, ""Central, Louisiana""))
  }

  FILTER(?person = ?result)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,7,train,"Give me the region of Japan Standard Time and reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?region ?reference WHERE {
  # Find the region associated with Japan Standard Time
  <http://dbpedia.org/resource/Japan_Standard_Time> dbo:timeZone ?timezone .
  ?timezone dbo:location ?region .

  # Find references to Mitaka in relation to Tokyo
  OPTIONAL { 
    ?mitaka dbo:wikiPageRedirects <http://dbpedia.org/resource/Mitaka,_Tokyo> .
    ?mitaka rdfs:label ""Mitaka""@en .
    ?mitaka dbo:wikiPageWikiLink ?tokyoEntity .
    ?tokyoEntity rdfs:label ?reference .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
414,15,train,"Give me the award of Max Born and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?show WHERE {
  # Find the award received by Max Born
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Max_Born> .
  
  # Identify the host of this award and check if they are linked to an educational institution
  ?award <http://dbpedia.org/property/host> ?host .
  ?host <http://www.wikidata.org/entity/P69> ?institution .
  
  # Find the award received by Rainer Weiss
  ?award2 <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Rainer_Weiss> .
  
  # Identify the host of this second award and find any show related to them
  ?award2 <http://dbpedia.org/property/host> ?host2 .
  ?show <http://dbpedia.org/ontology/showHost> ?host2 .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
756,44,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
SELECT ?result WHERE {
  # Manager of Thomas Letsch's team(s)
  ?letschTeam <http://dbpedia.org/ontology/team> ?team .
  ?letschTeam <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Thomas_Letsch> .
  
  # Manager of VfL Bochum
  ?bochumTeam <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/VfL_Bochum> .
  ?bochumTeam <http://dbpedia.org/property/manager> ?result .

  # Native of Germany (Theodor Heuss's administration)
  ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
361,5,train,"Give me the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?result . },"```sparql
SELECT ?album WHERE {
  ?album <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Lasso_the_Moon> .
  ?album a <http://dbpedia.org/ontology/Film> .
  ?album a <http://www.w3.org/2002/07/owl#Thing> . # Assuming this represents general works
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
198,55,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?entity WHERE {
  # Find Henry Clay Lewis's birthplace, ensuring it is a settlement in America
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""us"") || CONTAINS(LCASE(?settlementLabel), ""america"")) .

  # Find the force of the awardee of Gillmore Medal
  ?gillmoreAwardee <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Gillmore_Medal> .
  ?gillmoreAward <http://dbpedia.org/property/awardedByForce> ?force .

  # Find the war of the awardee of Medal of Honor
  ?medalOfHonorAwardee <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Medal_of_Honor> .
  ?medalOfHonorAward <http://dbpedia.org/property/awardedDuringWar> ?war .

  # Ensure the entity is common to all conditions
  FILTER (?birthPlace = ?entity && ?force = ?entity && ?war = ?entity)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,23,train,Give me the associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Pacely"" .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```

Note: The query assumes that the birth name is stored as ""Pacely"" in DBpedia. If ""$pacely"" is a placeholder or requires specific formatting, it should be adjusted accordingly.",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
119,26,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Spain> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""spanish"")) .

  ?person <http://dbpedia.org/property/residence> ?countryResidence .
  
  ?result <http://dbpedia.org/ontology/tenant> ?countryResidence .
}
```",3,5,4,3,1,3,3,71,0,0,1184,0,0.0,0
87,19,train,"Give me the spouse of Janusz Kamiński and actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?result WHERE {
  # Spouse of Janusz Kamiński
  <http://dbpedia.org/resource/Janusz_Kami%C5%84ski> <http://dbpedia.org/ontology/spouse> ?result .

  # Actor in Always (1989 film)
  <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result .

  # Actor in a movie that is both a work and a film with Iliza Shlesinger
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CreativeWork100000001> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> .
  ?movie <http://dbpedia.org/ontology/starring> ?result .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
80,26,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?song <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/T.I.> .
  ?song <http://www.w3.org/2002/07/owl#sameAs> ?musicalWork .
  ?song <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Song> .
  ?song <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Musical_work> .
  
  ?song <http://dbpedia.org/property/album> ?album .
  
  OPTIONAL {
    ?album <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
375,12,train,Give me the entity in Japan and war of Hashiba Hidekatsu and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?war .
  <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Japan> .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
628,39,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
SELECT ?person WHERE {
  # Step 1: Identify Ackquille Jean Pollard
  ?person <http://dbpedia.org/ontology/birthName> ""Ackquille Jean Pollard"" .
  
  # Step 2: Find awards related to New York (state) that are regions, states, and settlements
  ?award <http://dbpedia.org/property/location> ?location .
  ?location rdf:type/rdfs:subClassOf* <http://dbpedia.org/class/yago/RegionsInNewYorkState108069415> ;
            rdf:type/rdfs:subClassOf* <http://dbpedia.org/class/yago/AmericanStatesAndTerritories100000001> ;
            rdf:type/rdfs:subClassOf* <http://dbpedia.org/class/yago/Settlements10000000> .
  
  # Step 3: Ensure the awardee is a band
  ?award <http://dbpedia.org/ontology/recipient> ?band .
  ?band rdf:type <http://dbpedia.org/class/yago/MusicalBands1000000> .

  # Link person to award's location
  ?person <http://dbpedia.org/property/nationality> ""American"" .
  ?person <http://dbpedia.org/ontology/birthPlace> ?location .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,50,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify a musical artist from Florida
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?person <http://dbpedia.org/property/placeOfBirth> ?placeOfBirth .
  FILTER(CONTAINS(LCASE(?placeOfBirth), ""florida"")) .

  # Step 2: Ensure the person is a musical artist
  ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musician> .

  # Step 3: Find an award that matches the criteria (region, American, state, settlement)
  ?award <http://www.wikidata.org/entity/P31> ?instanceOf .
  FILTER(?instanceOf IN (<http://www.wikidata.org/entity/Q222068>, <http://www.wikidata.org/entity/Q515>, <http://www.wikidata.org/entity/Q486972>)).
  
  # Step 4: Ensure the award is associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award <http://dbpedia.org/ontology/nativeOf> <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Cat%C3%B3lica_de_Puerto_Rico> .

  # Step 5: Match the birth name of the person to the native of the award
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  ?award <http://dbpedia.org/ontology/nativeOf> ?nativePlace .
  FILTER(?birthName = ?nativePlace)
}
```",5,10,6,3,2,3,3,71,0,0,59,0,0.0,0
311,9,train,"Who is the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song)?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?producer .
  
  # Ensure the producer is an organization and a band/group
  ?producer <http://www.w3.org/2002/07/owl#sameAs> ?org .
  ?producer <http://www.w3.org/2002/07/owl#sameAs> ?bandGroup .
  FILTER EXISTS { ?org <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Organisation> }
  FILTER EXISTS { ?bandGroup <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Musical_group> }

  # Find associated musical artists
  ?producer <http://dbpedia.org/property/member> ?result .
  FILTER EXISTS { ?result <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Musical_artist> }
}
```",2,6,3,2,1,3,2,20,0,0,2,0,0.0,0
595,23,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT DISTINCT ?spouse WHERE {
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book110769069> . # Assuming this is the class for books
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108936465> . # Assuming this is the class for written works

  ?author <http://dbpedia.org/ontology/author> ?work .
  
  OPTIONAL {
    ?author <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Politician
    ?author <http://www.wikidata.org/entity/P39> ?office . # Office holder
  }
  
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,7,4,3,1,3,3,71,0,0,1,0,0.0,0
943,56,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  ?child <http://dbpedia.org/ontology/parent> ?yeshaqI .
  FILTER(?yeshaqI = <http://dbpedia.org/resource/Yeshaq_I>) .

  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  OPTIONAL { 
    ?officeHolderProperty ?value .
    FILTER(?officeHolderProperty = <http://dbpedia.org/property/officeHolder>) .
  }

  ?father <http://dbpedia.org/ontology/parent> ?child .
  ?grandFather <http://dbpedia.org/ontology/parent> ?father .

  ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?grandFather .
  BIND(?reference AS ?result)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
78,5,train,Give me the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/musicalArtist> ?artist .
}
```

This query assumes that the `<http://dbpedia.org/ontology/musicalArtist>` property is used to denote musical collaborations or associations. If this specific property does not exist, we might need to explore other properties like `<http://dbpedia.org/property/memberOf>` or similar.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
143,15,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro and associated musical artist of Cynthia Morgan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie5005> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Afeez_Oyetoro> .

  OPTIONAL {
    ?artist <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/Cynthia_Morgan> .
    FILTER(?actor = ?artist)
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
263,12,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> .
  ?result <http://dbpedia.org/property/nationality> ""Middlesex"" .

  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> .
  }
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
293,53,train,Give me the person born as the birth name of Ann Sothern and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Find person with birth name as Ann Sothern
  ?person <http://dbpedia.org/ontology/birthName> ""Ann Sothern"" .
  
  # Identify landmark at elevation 20.1168 and its ruling party
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#elevation> ""20.116800000000001347""^^xsd:float .
  ?country <http://dbpedia.org/ontology/contains> ?landmark .
  ?party <http://dbpedia.org/ontology/rulingParty> ?country .
  
  # Check if the person is a member of this party
  ?person <http://dbpedia.org/property/memberOf> ?party .

  # Find spouse of Roger Pryor (actor)
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Roger_Pryor_(actor)> .
  
  FILTER (?person = ?result) 
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
198,27,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace a <http://dbpedia.org/class/yago/Settlement108069627> . # Assuming this class represents settlements
  ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
  
  ?result <http://www.w3.org/2002/07/owl#sameAs> ?birthplace .
}
```",3,5,4,3,1,3,3,71,0,0,12,0,0.0,0
270,7,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at Melbourne.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . }","```sparql
SELECT ?predecessor WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ada Jane Low"" .
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Alexander_McCaffrey> . # Assuming Alexander McCaffrey is the person
  ?person <http://dbpedia.org/ontology/politicianOf> ?country .
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Melbourne> .

  ?successor <http://dbpedia.org/ontology/successor> ?person .
  ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
}
```

Note: The query assumes that the person born as Ada Jane Low is Alexander McCaffrey, which may need verification. Adjustments might be necessary based on actual DBpedia data.",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
737,44,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
SELECT ?result WHERE {
  # Find grandchild who is royalty of Archduke Charles Louis of Austria
  ?grandchild <http://dbpedia.org/ontology/father> ?parent .
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Check if they are predecessors of Carl, Duke of Württemberg
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .
    FILTER(?grandchild = ?result)
  }

  # Verify they are also grandchildren of Duke Philipp of Württemberg
  OPTIONAL {
    ?grandchild2 <http://dbpedia.org/ontology/father> ?parent2 .
    ?parent2 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
    FILTER(?grandchild = ?grandchild2)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
595,29,train,"Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/commanderInCrisis> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
  }
  
  OPTIONAL {
    ?book <http://dbpedia.org/ontology/author> ?result ;
          <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Books_by_Bill_Clinton> .
    FILTER EXISTS { 
      ?book <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Book104930069> . # Assuming this is the class for books
    }
  }
}
```",4,7,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
557,60,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?professional WHERE {
  # Step 1: Identify Kent Allard (print) as a fictional character
  ?kentAllard <http://dbpedia.org/ontology/fictionalCharacter> ?reference .
  
  # Step 2: Find the alter ego of this reference
  ?reference <http://dbpedia.org/property/alterEgo> ?alterEgo .

  # Step 3: Professional involvement with this alter ego
  ?professional <http://dbpedia.org/property/occupation> ?alterEgo .
  
  # Step 4: Actor of High Society Blues
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/High_Society_Blues> .

  # Step 5: Claim to fame (movie and work) for this actor
  ?claimToFame <http://dbpedia.org/ontology/film> ?actor .
  ?claimToFame a <http://dbpedia.org/ontology/Film> .
  ?claimToFame a <http://dbpedia.org/ontology/Work> .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
905,15,train,"Give me the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . }","```sparql
SELECT ?grandfather WHERE {
  ?parent <http://dbpedia.org/ontology/birthName> ""Philip, Despot of Romania"" .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?grandfather <http://dbpedia.org/ontology/birthName> ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
782,28,train,Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?realName ?nickCurranArtist ?kimWilsonBand WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://dbpedia.org/ontology/alias> ?realName .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/property/associatedBand> ?nickCurranArtist .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/band> ?kimWilsonBand .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
871,45,train,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Victor Stanley's parent
  ?victor <http://dbpedia.org/ontology/birthName> ""Victor Stanley"" .
  ?victor <http://dbpedia.org/ontology/parent> ?result .

  # The result must be a father of a politician child
  ?child <http://dbpedia.org/ontology/father> ?result .
  ?child <http://dbpedia.org/property/profession> ""politician"" .

  # Alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby
  ?result <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Eton_College> .
  ?edward <http://dbpedia.org/ontology/birthName> ""Edward Stanley, 17th Earl of Derby"" .
  ?edward <http://dbpedia.org/ontology/father> ?result .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,31,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Mukha> .
  
  ?result <http://dbpedia.org/ontology/commander> ?event .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL {
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
    ?result <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
419,5,train,Give me the entity in the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?entity <http://dbpedia.org/property/location> ?birthplace .
}
```",2,2,3,2,1,2,2,9,0,153,166,0.0,0.0,0
103,23,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?work <http://dbpedia.org/ontology/movie> [] .
  ?work <http://dbpedia.org/ontology/tvSeries> [] .
  
  ?work <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(?actor != <http://dbpedia.org/resource/Richard_E._Grant>)
}
```",3,4,4,3,1,3,3,71,0,0,53,0,0.0,0
816,41,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Find the parent of Doon Arbus
  <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result .

  # Ensure this person acted in a movie with Herschel Bernardi, and that movie is classified as a work
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CreativeWork108069415> .

  # Ensure this person is a parent of someone whose occupation is Photographer
  ?child <http://dbpedia.org/ontology/parent> ?result .
  ?child <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Photographer> .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,0,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
}
```",1,1,2,1,1,3,3,71,0,0,21486,0,0.0,0
198,19,train,Give me the war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
SELECT ?medalWar ?gillmoreForce WHERE {
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Medal_of_Honor> .
  ?awardee <http://dbpedia.org/property/war> ?medalWar .

  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/memberOf> ?gillmoreForce .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
585,14,train,Give me the child of the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?profession .
  
  ?person <http://dbpedia.org/property/occupation> ?profession .
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,2,20,935,0,0,1.0,1.0,1.0
353,54,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of the parent of Roger III, Duke of Apulia and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Child of Elvira of Castile, Queen of Sicily
  ?elvira <http://dbpedia.org/ontology/name> ""Elvira of Castile"" .
  ?elvira <http://dbpedia.org/ontology/spouse> ?husband .
  ?child <http://dbpedia.org/ontology/birthParent> ?elvira .

  # Child of the parent of Roger III, Duke of Apulia
  ?rogerIII <http://dbpedia.org/ontology/name> ""Roger III, Duke of Apulia"" .
  ?parent <http://dbpedia.org/ontology/birthChild> ?rogerIII .
  ?child2 <http://dbpedia.org/ontology/birthParent> ?parent .

  # Father of a child that is royalty
  ?result <http://dbpedia.org/ontology/spouse> ?mother .
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?result .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Reference to William I as both royalty and office holder
  ?williamI <http://dbpedia.org/ontology/name> ""William I"" .
  ?williamI <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?williamI <http://dbpedia.org/ontology/officeHolder> ?office .

  FILTER (?child = ?child2)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,22,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
SELECT ?territory WHERE {
  # Condition 1: Territory administered from death place of Christian Ditlev Ammentorp Hansen
  OPTIONAL {
    <http://dbpedia.org/resource/Christian_Ditlev_Ammenborg> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    ?territory <http://dbpedia.org/property/administeredFrom> ?settlement .
  }

  # Condition 2: Administration of Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
    ?person <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?territory <http://dbpedia.org/property/administeredBy> ?person .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
472,4,train,"Who is the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
119,61,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. }","```sparql
SELECT ?result WHERE {
  # Tenant of a Spanish Administration
  ?result <http://dbpedia.org/ontology/minister> ?administration .
  ?administration <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Spain> .

  # Reference to the Spanish Socialist Workers' Party (PSOE)
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  }

  # Tenant of a Residence in a Country and Citizen of Spain
  ?result <http://dbpedia.org/property/countryOfResidence> ?country .
  ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spanish_people> .
}
```",6,9,7,3,2,3,3,71,0,0,23,0,0.0,0
941,5,train,Who is the spouse of Duchess Luise of Brunswick-Wolfenbüttel?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
492,18,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?person ?name ?deathPlace WHERE {
  # Death place for Carolyn Jones
  OPTIONAL { 
    <http://dbpedia.org/resource/Carolyn_Jones> dbo:deathPlace ?deathPlace .
    BIND(""Carolyn Jones"" AS ?name)
    BIND(<http://dbpedia.org/resource/Carolyn_Jones> AS ?person)
  }
  
  # Death place for actors of Aladdin (1958 film)
  <http://dbpedia.org/resource/Aladdin_(1958_film)> dbo:starring ?actor .
  ?actor dbo:deathPlace ?deathPlace .
  BIND(""Actor of Aladdin (1958)"" AS ?name)
  BIND(?actor AS ?person)
}
```",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
297,8,train,Give me the institution in the administration of Brian Kemp and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Brian_Kemp> <http://dbpedia.org/ontology/administration> ?result .
  ?result <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/United_States> .
}
```",3,3,4,2,2,2,2,9,0,0,346,0,0.0,0
756,7,train,"Give me the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^xsd:date .
  ?person <http://dbpedia.org/property/occupation> ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""sports manager""))
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,10,train,Give me the child of Saw Min Hla and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
213,5,train,Give me the work of Lao She.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
SELECT ?work WHERE {
  ?work a dbo:CreativeWork .
  ?work dbo:author <http://dbpedia.org/resource/Lao_She> .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
531,54,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  # Office of Miguel Maura
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/office> ?miguelOffice .
  
  # Office of the Commander in a Military Conflict and Societal Event involving Manuel Pinto da Costa
  ?conflict <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict> ;
            <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .
  ?pintoOffice <http://dbpedia.org/ontology/office> ?commanderOffice .
  ?conflict <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .

  # Ensure the Office Holder is a Politician
  ?result <http://dbpedia.org/ontology/office> ?miguelOffice ;
          <http://dbpedia.org/ontology/office> ?commanderOffice .
  ?result <http://dbpedia.org/property/politician> true .

  # Tenant of the Residence of Alberto Ruiz-Gallardón
  <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/ontology/residence> ?residence .
  ?result <http://dbpedia.org/property/tenant> ?residence .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
943,26,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/Lamont_Cranston> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}
```",3,3,4,3,1,3,3,71,0,0,98447,0,0.0,0
492,7,train,Give me the death place of Reed Howes and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?person ?deathPlace WHERE {
  { 
    OPTIONAL { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?deathPlace . }
    BIND(<http://dbpedia.org/resource/Reed_Howes> AS ?person)
  } UNION {
    OPTIONAL { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?deathPlace . }
    BIND(<http://dbpedia.org/resource/Sal_Mineo> AS ?person)
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
119,42,train,"Give me the tenant of Spain and office of the leader of 2009 Galician regional election and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
SELECT ?result WHERE {
  # Tenant of Spain
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  
  # Office of the leader of the 2009 Galician regional election
  OPTIONAL { 
    ?election <http://dbpedia.org/property/electionDate> ""2009""^^xsd:dateTime ;
              <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Galicia_(Spain)> .
    ?result <http://dbpedia.org/ontology/officeHolder> ?election .
  }
  
  # Tenant of the administration, that is Spanish, of PSOE
  OPTIONAL {
    ?psoe <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Spain> ;
          <http://dbpedia.org/ontology/member> ?result .
  }
}
```",5,6,6,2,3,3,3,71,1,11843,0,8.443093549476529e-05,1.0,0.00016884761502743774
609,17,train,"Who is the author of the reference, that is American, to El Deafo?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/property/nationality> ""American""@en .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
347,17,train,"Give me the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
585,12,train,Give me the child of the professional in Actress and native of New York (state).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  ?actress <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Category:American_actresses> .
  ?actress <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/New_York_(state)> .
  ?actress <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,2,2,3,2,20,0,0,9,0,0.0,0
414,0,train,Give me the show of Royal Swedish Academy of Sciences.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
SELECT ?show WHERE {
  <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?show .
  ?show a <http://dbpedia.org/class/yago/YTShow100000001> . # YTShow is the class for TV shows
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
398,17,train,Give me the player in the writer of the work of Aleksandr Filimonov and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . ?v0 <http://dbpedia.org/property/writer> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Find works written by Aleksandr Filimonov
  ?work dbo:writer <http://dbpedia.org/resource/Aleksandr_Filimonov> .
  
  # Find a player in the work
  ?work dbo:player ?result .

  # Check if this person is known as Наши парни / Nashi parni
  OPTIONAL {
    ?result rdfs:label ""Наши парни""@ru ;
            rdfs:label ""Nashi parni""@en .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
39,19,train,Give me the professional in the profession of Sam Concepcion and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
# Part 1: Find professionals in the same field as Sam Concepcion
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?concepcionProfession .
  ?person <http://dbpedia.org/property/occupation> ?concepcionProfession .
  FILTER(?person != <http://dbpedia.org/resource/Sam_Concepcion>)
}

# Part 2: Find any professionals
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/property/occupation> ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
347,21,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .
  ?child <http://dbpedia.org/ontology/commander> ?war .
  
  OPTIONAL { 
    ?war <http://dbpedia.org/property/participatedIn> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
  }
  
  # Note: The requirement for the war being a societal event, an event, and a television show is not directly representable in DBpedia.
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
628,60,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify GS9 member who is an artist and a musical artist
  ?gs9Member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  ?gs9Member <http://www.w3.org/2002/07/owl#sameAs> ?artist .
  ?artist <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/MusicalArtist108069365> .

  # Step 2: Find associated musical artist
  ?gs9Member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  
  # Step 3: Identify band member of the associated musical artist
  ?bandMember <http://dbpedia.org/ontology/bandMember> ?associatedArtist .

  # Step 4: Locate an award that is a region, American, state, and settlement
  ?award <http://www.w3.org/2008/05/skos#broader> <http://dbpedia.org/resource/Category:Regions_of_the_United_States> .
  ?award <http://www.w3.org/2008/05/skos#broader> <http://dbpedia.org/resource/Category:American_states> .
  ?award <http://www.w3.org/2008/05/skos#broader> <http://dbpedia.org/resource/Category:Settlements_in_the_United_States> .

  # Step 5: Find a band that received this award
  ?band <http://dbpedia.org/ontology/receivedAward> ?award .
  
  # Step 6: Ensure the awardee band is native to New York (state)
  ?band <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/New_York_(state)> .

  BIND(?bandMember AS ?result)
}
```",6,14,7,3,2,3,3,71,0,0,1,0,0.0,0
557,26,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/claimToFame> ?work .
  ?work <http://dbpedia.org/ontology/producer> ?result .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
58,10,train,Give me the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?movie WHERE {
  ?award <http://dbpedia.org/property/receiver> <http://dbpedia.org/resource/Ian_Gregson_(poet)> .
  ?movie <http://dbpedia.org/ontology/wonAward> ?award .
}
```",2,2,3,2,1,3,2,20,0,0,39790,0,0.0,0
59,7,train,Give me the native of the residence of David Luckman and manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Find David Luckman's residence and his native place
  <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://dbpedia.org/property/nationality> ?nativePlace .

  # Find managers of Hartlepool United F.C.
  ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Hartlepool_United_F.C.> .

  # Ensure the manager is native to David Luckman's residence
  ?result <http://dbpedia.org/property/nationality> ?nativePlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
38,1,train,"Give me the author of Promise Me, Dad.","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . }","```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
386,12,train,Give me the war of Alexander Lvovich Davydov and war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/war> ?war .
  <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/war> ?war .
  
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russian_Empire> .
    ?war <http://dbpedia.org/ontology/participant> ?entity .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
398,4,train,Give me the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Aleksandr_Filimonov> dbo:creator ?work .
  ?work rdf:type dbo:Work .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
198,24,train,"Give me the force of the awardee of Gillmore Medal and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/awarded> <http://dbpedia.org/resource/Gillmore_Medal> .
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> ;
            <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
288,5,train,"Give me the native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
SELECT ?settlement ?figure WHERE {
  ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ""The Heart of Pakistan""@en .
  ?settlement <http://dbpedia.org/ontology/nickName> ""Paris of the East"" .
  ?settlement <http://dbpedia.org/ontology/nickName> ""City of Gardens"" .
  ?settlement <http://dbpedia.org/ontology/nickName> ""City of Literature"" .
  ?settlement <http://www.w3.org/2002/07/owl#sameAs> ?pakistanSettlement .
  ?pakistanSettlement <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (LANG(?label) = ""en"" && CONTAINS(LCASE(?label), ""pakistan""))
  
  ?figure <http://dbpedia.org/property/nativePlace> ?settlement .
}
```",2,4,3,2,1,2,2,9,0,0,881,0,0.0,0
89,3,train,Give me the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,2,3,0.0,0.0,0
871,21,train,Give me the father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Condition 1: Father of Arthur Stanley (politician)
  <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/ontology/father> ?result .

  # Condition 2: Parent of an awardee of Commander of the Royal Victorian Order
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
    ?awardee <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?result .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,39,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?commander WHERE {
  ?arcadia <http://dbpedia.org/ontology/owner> ?owner .
  ?book <http://dbpedia.org/property/author> ?author .
  
  ?war <http://dbpedia.org/ontology/disease> ?disease .
  ?war <http://dbpedia.org/ontology/societalEvent> ?event .
  
  ?arcadia <http://dbpedia.org/ontology/war> ?war .
  ?book <http://dbpedia.org/ontology/war> ?war .

  ?war <http://dbpedia.org/ontology/commander> ?commander .
  
  FILTER(?arcadia = <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)>)
  FILTER(?book = <http://dbpedia.org/resource/Back_to_Work_(book)>) 
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,Give me the war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?war WHERE {
  <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/father> ?child .
  ?child <http://dbpedia.org/property/war> ?war .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
198,16,train,Give me the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?awardee WHERE {
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/honoree> ?award .
  ?award <http://dbpedia.org/property/awards> ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
295,15,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur and native of Birmingham.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v1 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?writer WHERE {
  # Find Steven Kapur's true self (alter ego)
  <http://dbpedia.org/resource/Steven_Kapur> <http://dbpedia.org/ontology/alternativeName> ?trueSelf .
  
  # Ensure the true self is an artist
  ?trueSelf a <http://dbpedia.org/class/yago/MusicalArtist108069068> .

  # Identify a musical work by this artist
  ?trueSelf <http://dbpedia.org/ontology/work> ?musicalWork .
  
  # Find the writer of that musical work
  ?musicalWork <http://dbpedia.org/property/writer> ?writer .

  # Ensure the writer is native to Birmingham
  ?writer <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Birmingham> .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
399,6,train,Give me the professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?profession .
  ?person <http://dbpedia.org/property/occupation> ?profession .
  FILTER(?person != <http://dbpedia.org/resource/Jamie_T>)
}
```",2,2,3,2,1,2,2,9,44693,0,1,1.0,0.9999776256320759,0.9999888126908836
782,33,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://www.wikidata.org/entity/Q5> . # Person
  ?person <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q215627> . # Musical artist
  ?person <http://dbpedia.org/ontology/memberOf> ?band .

  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
    ?reference <http://www.w3.org/2002/07/owl#sameAs> ?person .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
68,3,train,"Who is the parent of Dorothea of Denmark, Electress Palatine?","SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> 
    <http://dbpedia.org/ontology/father> ?parent .
} UNION {
  <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> 
    <http://dbpedia.org/ontology/mother> ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
531,15,train,"Give me the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  ?person <http://dbpedia.org/ontology/electedAs> <http://dbpedia.org/resource/Madrid_City_Council_election,_2003> .
  ?person <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?source .
  FILTER(CONTAINS(LCASE(STR(?source)), ""leader"") || CONTAINS(LCASE(STR(?source)), ""office holder""))
  ?person <http://dbpedia.org/property/residence> ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
353,59,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of the parent of a royalty child of Roger II of Sicily
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/parent> ?grandChild .
  ?grandChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?grandChild <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> .

  # Step 2: Find the father of a royalty child related to an office holder to William I
  OPTIONAL {
    ?officeHolder <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
    ?officeHolder <http://dbpedia.org/ontology/officelink> <http://dbpedia.org/resource/William_I> .
    ?child2 <http://dbpedia.org/ontology/father> ?result .
    ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
    ?officeHolder <http://dbpedia.org/ontology/parent> ?child2 .
  }
  
  FILTER(?result = ?parent) # Ensure the same person is found in both conditions
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,49,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find associated musical artist of Bobby Shmurda
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .

  # Step 2: Check if this artist is a band member and the band is a musical artist
  ?artist <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://www.w3.org/2000/01/rdf-schema#label> ?bandLabel .

  # Step 3: Identify an award related to New York State that fits the criteria
  ?award <http://dbpedia.org/property/location> ?location .
  FILTER (
    ?location = <http://dbpedia.org/resource/New_York_(state)> &&
    (STRSTARTS(STR(?location), ""Region"") || STRSTARTS(STR(?location), ""Settlement"")) &&
    (STRSTARTS(STR(?location), ""American""))
  )

  # Step 4: Find bands that have received this award
  ?band <http://dbpedia.org/ontology/receivedAward> ?award .

  # Result is the band member who fits all criteria
  ?artist <http://dbpedia.org/ontology/memberOfBand> ?result .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
159,30,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to George Ducas.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?result WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> .
  
  ?result <http://dbpedia.org/ontology/warCommander> ?war .
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .

  OPTIONAL {
    ?reference <http://dbpedia.org/property/reference> ?result .
    ?reference <http://www.w3.org/2000/01/rdf-schema#label> ""George Ducas""@en .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
311,5,train,Who is the writer of No Alternative?,SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/ontology/writer> ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
297,4,train,Give me the institution in Georgia (U.S. state) and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
SELECT ?institution WHERE {
  ?institution <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Institutions_in_Georgia_(U.S._state)> .
  ?institution <http://dbpedia.org/ontology/location> ?location .
  FILTER EXISTS { 
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Georgia""@en .
  }
  OPTIONAL {
    ?institution <http://dbpedia.org/ontology/location> ?usLocation .
    FILTER EXISTS { 
      ?usLocation <http://www.w3.org/2000/01/rdf-schema#label> ""United States""@en .
    }
  }
}
```",2,2,3,1,2,2,2,9,0,0,346,0,0.0,0
80,11,train,Give me the actor of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# No valid query can be constructed due to missing information about the movie.
```",2,2,3,2,1,3,3,71,0,0,55786,0,0.0,0
531,12,train,Give me the office of Mariano Rajoy and office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?office WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/resource/Miguel_Maura> }
  ?person <http://dbpedia.org/property/office> ?office .
}
```",2,2,3,1,2,3,3,71,1,14,0,0.06666666666666667,1.0,0.125
38,12,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result .
  
  OPTIONAL { 
    ?work <http://dbpedia.org/property/author> ?result .
    ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q225377> . # Assuming Q225377 is the identifier for ""written work""
    FILTER(?work != <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)>)
  }
}
```",3,5,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
203,2,train,Give me the military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/ontology/foughtFor> ?force .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
80,28,train,Give me the actor of the movie with  and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?result WHERE {
  # Actor of a movie with ""and"" in its title or description (assuming generic context)
  ?movie <http://dbpedia.org/ontology/title> ?title .
  FILTER(CONTAINS(LCASE(?title), ""and"")) .
  ?movie <http://dbpedia.org/ontology/starring> ?result .

  # Professional involvement (generic placeholder for unspecified entity)
  ?result <http://dbpedia.org/property/occupation> ?v1 .

  # Actor of the film ATL
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result .
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
198,4,train,Give me the awardee of Medal of Honor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Medal_of_Honor> dbo:honoree ?awardee .
  ?awardee rdf:type dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,0,2190,0,0.0,0
89,59,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the child of Saw Shwe Khet who is royalty
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the father of this royal child
  ?father <http://dbpedia.org/ontology/birthChild> ?child .

  # Step 3: Determine if this father is royalty and find his spouse
  OPTIONAL { 
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Check if the father is royalty
    ?spouse <http://dbpedia.org/ontology/spouse> ?father .
  }

  # Step 4: Identify Minye Kyawswa's grandchild
  ?grandparent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://dbpedia.org/ontology/birthChild> ?grandparent .

  # Step 5: Match the spouse with the parent of Minye Kyawswa's grandchild
  FILTER(?spouse = ?parent)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,8,train,"Give me the parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?parent WHERE {
  ?artist <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist100007846> .
  
  OPTIONAL { 
    ?artist <http://dbpedia.org/ontology/father> ?parent .
  }
  UNION
  {
    ?artist <http://dbpedia.org/ontology/mother> ?parent .
  }
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
347,1,train,"Give me the father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""male""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,9,train,Give me the native of Russian Empire and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:nativePlace <http://dbpedia.org/resource/Russian_Empire> .
  ?person dbo:nativePlace <http://dbpedia.org/resource/Grand_Duchy_of_Finland> .
}
```",2,2,3,1,2,2,3,28,0,0,126,0,0.0,0
80,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow_(character)> <http://dbpedia.org/ontology/alternativeName> ?alterEgo .
  ?alterEgo <http://dbpedia.org/property/occupation> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
140,16,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut and commander in the war, that is a societal event, of George Pickett.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?result WHERE {
  # Find ruling political parties in Westport, Connecticut
  ?party <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Westport,_Connecticut> .
  ?party a <http://dbpedia.org/class/yago/PoliticalParty108069068> . # Assuming this class represents political parties
  ?party <http://dbpedia.org/ontology/member> ?result .

  OPTIONAL {
    # Find wars involving George Pickett and identify commanders
    ?war <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/George_Pickett> .
    ?war a <http://dbpedia.org/class/yago/SocietalEvent108069068> . # Assuming this class represents societal events like wars
    ?war <http://dbpedia.org/ontology/commander> ?result .
  }
}
```",4,7,5,2,2,3,2,20,0,0,4,0,0.0,0
668,24,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/profession> ?profession .
  
  <http://dbpedia.org/resource/Darryl_Paa_Kwesi_Bannerman-Martin> <http://www.w3.org/2000/01/rdf-schema#label> ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  ?result <http://dbpedia.org/property/profession> ?profession .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ""Darryl Paa Kwesi Bannerman-Martin""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
225,14,train,"Give me the birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/awards> ?v2 . }","```sparql
SELECT ?birthPlace WHERE {
  ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?awardee <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> .
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/reference> ?tvShow .
    FILTER EXISTS { ?tvShow a <http://dbpedia.org/ontology/TelevisionSeries> }
  }
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
203,21,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?commander WHERE {
  ?conflict <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> .
  ?conflict <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Assuming this is the class for military conflicts
  ?commander <http://dbpedia.org/property/commander> ?conflict .

  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/ontology/militaryForce> ?commander .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,22,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Allan_Arbus> .
    ?actor <http://dbpedia.org/ontology/parent> ?child .
  }
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
737,24,train,Give me the child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Condition for being a child of Archduchess Margarete Sophie of Austria
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/father> ?mother .
    ?mother <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  }
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/mother> ?mother .
    ?mother <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  }

  # Condition for being a grandchild of Duke Philipp of Württemberg
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/father> ?parent .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
    ?result <http://dbpedia.org/ontology/father> ?child .
  }
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/mother> ?parent .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
    ?result <http://dbpedia.org/ontology/mother> ?child .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
203,40,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  
  ?commander <http://dbpedia.org/property/commandedBy> ?war .
  ?commander <http://dbpedia.org/ontology/memberOfMilitaryForce> [
    <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> ;
    <http://dbpedia.org/resource/Battle_of_Fort_Royal>
  ] .

  OPTIONAL { 
    ?commander <http://dbpedia.org/property/knownAs> <http://dbpedia.org/resource/The_Triple_X's> .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
756,47,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify leader of West Germany
  ?leader <http://dbpedia.org/ontology/chiefExecutive> <http://dbpedia.org/resource/West_Germany> .
  
  # Step 2: Find manager of VfL Bochum in the 2007–08 season
  OPTIONAL {
    <http://dbpedia.org/resource/2007%E2%80%9308_VfL_Bochum_season> <http://dbpedia.org/ontology/coach> ?manager .
    FILTER(?leader = ?manager)
  }
  
  # Step 3: Determine native country of the leader/manager
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/NativeOfCountry108069068> .
  FILTER(?leader = ?result)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,33,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Ab_Kya_Hoga> .
  ?actor <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Politician> .
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dispatches_from_Elsewhere> .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
419,0,train,Give me the entity in Andhra Pradesh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Andhra_Pradesh> .
}
```",1,1,2,1,1,2,2,9,0,200,166,0.0,0.0,0
158,7,train,Give me the person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:deathPlace <http://dbpedia.org/resource/Switzerland> .
  ?person dbo:birthPlace <http://dbpedia.org/resource/Russian_Empire> .
}
```",2,2,3,1,2,2,3,28,36,0,0,1.0,1.0,1.0
375,24,train,Give me the war of the person born as Koichirō and war of the child of Toyotomi Hideyoshi.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?person ?war WHERE {
  # Part 1: War involving the person born as Koichirō
  ?person <http://dbpedia.org/ontology/birthName> ""Koichirō"" .
  ?person <http://dbpedia.org/ontology/war> ?war .

  UNION

  # Part 2: Wars involving children of Toyotomi Hideyoshi
  ?child <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Toyotomi_Hideyoshi> .
  ?child <http://dbpedia.org/ontology/war> ?war .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,53,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Ackquille Jean Pollard's association with GS9
  ?ackquille <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  
  # Step 2: Identify the musical artist associated with Ackquille
  ?artist <http://dbpedia.org/ontology/member> ?ackquille .
  FILTER (?artist <http://www.wikidata.org/entity/P31> (<http://www.wikidata.org/entity/Q215380> || <http://www.wikidata.org/entity/Q225373>)) # Musical artist or artist
  
  # Step 3: Find band members of this musical artist
  ?bandMember <http://dbpedia.org/ontology/member> ?artist .
  
  # Step 4: Identify the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> .
  FILTER (?award <http://www.wikidata.org/entity/P31> (<http://www.wikidata.org/entity/Q2220686> || <http://www.wikidata.org/entity/Q30> || <http://www.wikidata.org/entity/Q515>) && # Region, American, State
          ?award <http://www.wikidata.org/entity/P17> <http://www.wikidata.org/entity/Q30>) # Settlement
  
  # Step 5: Find the native of this award
  ?result <http://dbpedia.org/ontology/nativePlace> ?award .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
347,34,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .
  ?child <http://dbpedia.org/property/commander> ?war .
  
  FILTER(?war = <http://dbpedia.org/resource/Algerian_War>) .

  OPTIONAL {
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?tvSeries .
    ?event a <http://dbpedia.org/class/yago/SocietalEvent108069068> .
    ?tvSeries a <http://dbpedia.org/ontology/TvSeries> .

    ?militaryForce <http://dbpedia.org/property/militaryForce> ?war .
    ?event <http://dbpedia.org/ontology/relatedTo> ?militaryForce .
  }

  BIND(?child AS ?result)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
628,15,train,"Give me the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> . # Assuming this is the class for ""musical artist""
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist100001> . # Assuming this is the class for ""artist""
  
  OPTIONAL {
    ?member <http://dbpedia.org/property/associatedMusicalArtist> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> . # Ensuring the result is a musical artist
  }
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
103,37,train,"Give me the professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/ontology/politician> [] .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/profession> ?v1 .
  }
}
```",4,5,5,3,2,3,3,71,0,0,39640,0,0.0,0
943,27,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandfather WHERE {
  # Find the child of Baeda Maryam I
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  
  # Identify the father of this child
  ?child <http://dbpedia.org/ontology/father> ?father .

  # Find the grandfather (father's father)
  ?father <http://dbpedia.org/ontology/father> ?grandfather .

  # Ensure the grandfather is a royalty and an office holder
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  OPTIONAL { 
    ?grandfather <http://www.wikidata.org/entity/P39> ?office .
  }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
23,9,train,Give me the entity in Colombia and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/memberOfParty> ?party .
  ?party <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
353,45,train,"Give me the child of Roger II of Sicily and father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Roger II of Sicily's children who are also fathers of William II of Sicily
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/William_II_of_Sicily> .

  # Constance of Burgundy's spouse who is royalty
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    # Child of Constance's spouse
    ?child <http://dbpedia.org/ontology/parent> ?spouse .
    
    # Check if our result is a descendant of this child
    ?descendant <http://dbpedia.org/ontology/parent> ?child .
    FILTER(?result = ?descendant)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
198,3,train,"Give me the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/awardedBy> <http://dbpedia.org/resource/United_States_Congress> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Award100000001> .
  OPTIONAL { 
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow1000000> .
  }
}
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
723,15,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of Stone Sour.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?result WHERE {
  # Find producers of Nothing to Gein that are organizations or groups
  ?producer <http://dbpedia.org/ontology/member> ?member .
  ?producer <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Nothing_to_Gein> .
  
  # Ensure the producer is an organization or group
  ?producer a <http://dbpedia.org/class/yago/Organisation100000000> .

  # Find band members of Stone Sour
  <http://dbpedia.org/resource/Stone_Sour> <http://dbpedia.org/ontology/member> ?member .
  
  BIND(?member AS ?result)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
531,40,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find office holders from the 2003 Madrid City Council Election
  ?officeHolder <http://dbpedia.org/ontology/election> <http://dbpedia.org/resource/Madrid_City_Council_election,_2003> .
  
  # Check if they held offices related to Miguel Maura and Mariano Rajoy
  ?officeHolder <http://dbpedia.org/property/office> ?miguelMauraOffice .
  ?officeHolder <http://dbpedia.org/property/office> ?marianoRajoyOffice .
  
  # Ensure these offices are associated with Miguel Maura and Mariano Rajoy
  ?miguelMauraOffice <http://www.wikidata.org/entity/P39> <http://dbpedia.org/resource/Miguel_Maura> .
  ?marianoRajoyOffice <http://www.wikidata.org/entity/P39> <http://dbpedia.org/resource/Mariano_Rajoy> .

  # Find the residence of this office holder
  ?officeHolder <http://dbpedia.org/ontology/residence> ?residence .

  # Identify tenants of this residence
  ?tenant <http://dbpedia.org/ontology/residence> ?residence .
  
  BIND(?tenant AS ?result)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
119,55,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
SELECT ?result WHERE {
  # Leader in 2009 Galician Regional Election
  ?election <http://dbpedia.org/property/electionDate> ""2009""^^xsd:date .
  ?election <http://dbpedia.org/ontology/electedAs> ?office .
  ?office <http://dbpedia.org/ontology/holder> ?result .

  # Tenant of the Residence of Álvaro Quirós
  OPTIONAL {
    <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://dbpedia.org/ontology/country> ?country .
    ?result <http://dbpedia.org/ontology/livesIn> ?residence .
  }

  # Tenant of the Administration of Spanish Socialist Workers' Party
  OPTIONAL {
    ?party <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish Socialist Workers' Party""@en .
    ?result <http://dbpedia.org/ontology/member> ?party .
    FILTER (LANG(?party) = 'en')
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
386,19,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?entity WHERE {
  # Wars involving Karl Gustav von Baggovut
  <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/war> ?baggovutWar .
  
  # Wars involving Alexander Lvovich Davydov
  <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/war> ?davydovWar .

  # Find common war
  FILTER (?baggovutWar = ?davydovWar)
  BIND(?baggovutWar AS ?war)

  # Entity in the birthplace of Elena Žalinkevičaitė-Petrauskienė
  <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  
  # Find entities related to the birthplace
  ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> ?birthPlace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
213,6,train,Give me the country of Cat Country (novel) and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country ?birthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?country .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
68,19,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Child of Maximilian I, Holy Roman Emperor
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> .

  # Father of the parent (father) of Dorothea of Denmark, Electress Palatine
  ?parent <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> .
  ?result <http://dbpedia.org/ontology/father> ?parent .

  # Father of Catherine of Austria, Queen of Portugal
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,39,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Find Quincy Adams Gillmore's force
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/militaryService> ?force .
  
  # Identify the person who died on 1850-08-05
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Q1234567> . # Placeholder for actual DBpedia resource of the deceased person
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  
  # Find birthplace that is a settlement and American
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
  
  # Find entity related to the birthplace
  ?result <http://dbpedia.org/ontology/location> ?birthPlace .
}
```

Note: The placeholder `<http://dbpedia.org/resource/Q1234567>` should be replaced with the actual DBpedia resource identifier for the person who died on 1850-08-05. This query assumes that such a resource exists and is correctly linked in DBpedia.",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
468,6,train,Give me the reference to Peter IV and child of Alfonso IV of Aragon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> <http://dbpedia.org/ontology/child> ?result .
  ?result rdfs:label ""Peter IV""@en.
}
```

This query assumes that the label for Peter IV is stored in English. Adjustments may be needed if labels are stored differently or if additional filtering criteria are required.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
39,39,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/birthName> ?birthName .
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> a <http://dbpedia.org/class/yago/MusicalArtist108069068> .
  
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person a <http://dbpedia.org/class/yago/MusicalArtist108069068> .
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
782,32,train,Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?band ?realName WHERE {
  # Find bands associated with Eric Clapton's band members
  ?member <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Eric_Clapton> .
  ?member <http://dbpedia.org/ontology/member> ?band .

  # Find real name reference for The Fabulous Thunderbirds
  OPTIONAL {
    <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://dbpedia.org/ontology/alias> ?realName .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
943,50,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Find Lamont Cranston's alter ego
  <http://dbpedia.org/resource/Lamont_Cranston> <http://dbpedia.org/ontology/allegedAlterEgo> ?alterEgo .
  
  # Identify Na'od's father who is a royalty and an office holder
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Na'od> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL {
    ?officeHolder <http://dbpedia.org/ontology/officeHolder> ?father .
  }
  
  # Find the grandfather of Na'od
  ?grandfather <http://dbpedia.org/ontology/father> ?father .
  
  # Return the alter ego as the result
  FILTER (?alterEgo = ?result)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
263,21,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
SELECT ?result WHERE {
  # Parent of Mary Elphinstone, Lady Elphinstone
  ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> .
  
  # Native of Middlesex
  ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> .

  # Parent of a child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> .
  ?result <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,2,3,2,3,28,2,0,0,1.0,1.0,1.0
119,10,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office ?residence WHERE {
  <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/ontology/politicalOffice> ?office .
  
  OPTIONAL {
    <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/ontology/residence> ?residence .
    FILTER(CONTAINS(LCASE(STR(?residence)), ""santiago de compostela""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
531,17,train,"Give me the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/memberOf> ?party .
  ?party <http://dbpedia.org/ontology/partyLeader> ?leader .
  ?leader <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
140,17,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify commanders in Pickett's Charge
  ?charge <http://dbpedia.org/ontology/commander> ?result .
  FILTER(?charge = <http://dbpedia.org/resource/Picketts_Charge>) .

  # Step 2: Find the death place of John McDermott (American artist)
  <http://dbpedia.org/resource/John_McDermott_(artist)> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  
  # Ensure it is a settlement
  ?deathPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  FILTER(STRSTARTS(STR(?settlement), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?settlement <http://dbpedia.org/ontology/Settlement> [] } ) .

  # Step 3: Identify ruling political parties that are organizations at the death place
  ?party <http://www.w3.org/2002/07/owl#sameAs> ?rulingParty .
  FILTER(STRSTARTS(STR(?rulingParty), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?rulingParty <http://dbpedia.org/ontology/politicalParty> [] } &&
         EXISTS { ?rulingParty <http://www.w3.org/ns/org#Organization> [] } ) .

  # Step 4: Ensure the commander is a party member
  ?result <http://dbpedia.org/ontology/memberOf> ?party .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
737,36,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
  FILTER (?grandchild = ?result)
  
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,40,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify children of Elvira of Castile
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .
  
  # Step 2: Check if the child is also a father of William II of Sicily
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_II_of_Sicily> .

  # Step 3: Ensure the child is a descendant of a parent who is royalty and related to Roger II
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/birthChild> ?child .
    ?parent <http://dbpedia.org/ontology/spouse> ?spouse2 .
    ?spouse2 <http://dbpedia.org/ontology/birthParent> ?rogerChild .
    ?rogerChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
353,28,train,"Give me the father of William II of Sicily and child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Father of William II of Sicily
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Wilhelm_II._von_Sizilien> .
  
  # Child of the parent of Roger III, Duke of Apulia
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_III.,_Herzog_von_Apulien> .
  ?grandparent <http://dbpedia.org/ontology/parent> ?parent .
  ?result <http://dbpedia.org/ontology/parent> ?grandparent .

  # Child of Elvira of Castile, Queen of Sicily
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Elvira_von_Kastilien,_Königin_von_Sizilien> .
  
  FILTER (?father = ?result)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
361,16,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/profession> ""Actor"" .
}
```",3,5,4,2,2,2,3,28,0,0,4,0,0.0,0
89,8,train,Give me the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Saw_Shwe_Khet> <http://dbpedia.org/ontology/parent> ?child .
}
```

This query assumes the use of `<http://dbpedia.org/ontology/parent>` to find children. If DBpedia uses a different property for child relationships, that should be substituted accordingly.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,2,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Stephen_V_of_Hungary> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,2,5,0.0,0.0,0
258,5,train,"Who is the person born, that is a politician, as Eleonora Menicucci de Oliveira?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Eleonora Menicucci de Oliveira"" .
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""politician""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
668,51,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
SELECT ?person WHERE {
  # Find an artist from Central Region, Ghana
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> .
  ?person <http://dbpedia.org/ontology/placeOfBirth> ?place .
  ?place <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Central_Region,_Ghana> .
  ?person <http://dbpedia.org/ontology/profession> ?profession .

  # Match birth name with another individual's birth name
  ?native <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/property/birthName> ?birthName .

  # Ensure the profession matches Rod Argent's
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/ontology/profession> ?rodProfession .
  FILTER(?profession = ?rodProfession)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?alterEgo ?profession WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/property/occupation> ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
557,3,train,"Give me the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/fictionalCharacter> [] .
  OPTIONAL { 
    ?result <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Kent_Allard_(print)> .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,44,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?result WHERE {
  # Cora Sue Collins' claim to fame work
  <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/property/work> ?collinsWork .
  
  # Professionals in Cora Sue Collins' work
  ?collinsWork <http://dbpedia.org/ontology/profession> ?result .

  # Janet Gaynor's claim to fame movie (which is also a work)
  <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/property/work> ?gaynorMovie .
  
  # Ensure the work is a movie
  ?gaynorMovie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie104930069> .

  # Producers of Janet Gaynor's movie
  ?gaynorMovie <http://dbpedia.org/ontology/producer> ?result .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the reference to Spanish Socialist Workers' Party.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
SELECT ?property ?value WHERE {
  <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> ?property ?value .
}
```

This query will return all properties and their corresponding values for the Spanish Socialist Workers' Party, providing a comprehensive reference to its information in DBpedia.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,61,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?force ?entity WHERE {
  # Find the award received by Quincy Adams Gillmore
  ?award <http://dbpedia.org/ontology/receipient> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
  
  # Determine the force of the awardee
  ?award <http://dbpedia.org/property/militaryForce> ?force .

  # Identify a person who died on 1850-08-05
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  
  # Find the birthplace of this person and ensure it is an American settlement
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?entity .
  FILTER EXISTS { 
    ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> .
    ?entity <http://dbpedia.org/ontology/Settlement> ?settlement .
  }
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
756,50,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?manager WHERE {
  # Step 1: Identify teams managed by Thomas Letsch
  ?team <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Thomas_Letsch> .
  
  # Step 2: Ensure the team is part of a soccer club season, sports season, and sports team season
  ?team <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?team <http://dbpedia.org/ontology/type> ?type .
  FILTER (?type IN (<http://dbpedia.org/resource/Soccer_club_season>, <http://dbpedia.org/resource/Sports_season>, <http://dbpedia.org/resource/Sports_team_season>)).
  
  # Step 3: Find the leader of West Germany and their country
  ?leader <http://dbpedia.org/ontology/nationality> ?country .
  ?leader <http://dbpedia.org/ontology/chiefdom> <http://dbpedia.org/resource/West_Germany> .
  
  # Step 4: Identify a manager native to the leader's country
  ?manager <http://dbpedia.org/ontology/nativeCountry> ?country .
  ?manager <http://dbpedia.org/ontology/coach> ?team .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
119,31,train,"Give me the tenant of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?event WHERE {
  ?event <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Spain> .
  ?event <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Anxo_Quintana> .
  ?event a <http://dbpedia.org/ontology/Event> .
  
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/office> ?office .
    ?office <http://dbpedia.org/property/leader> ?leader .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
119,3,train,"Give me the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
SELECT ?administration WHERE {
  ?administration a dbo:Event .
  ?administration <http://dbpedia.org/ontology/associatedWith> <http://dbpedia.org/resource/Anxo_Quintana> .
  OPTIONAL { 
    ?administration <http://dbpedia.org/ontology/positionHeld> ?v1 .
  }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
905,34,train,"Give me the child of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
    ?grandfather <http://dbpedia.org/ontology/father> ?parent .
    ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?child <http://dbpedia.org/ontology/spouse> ?grandfather .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
742,9,train,Give me the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
SELECT ?alumnus WHERE {
  <http://dbpedia.org/resource/University_of_Plovdiv_Paisii_Hisarliiski> <http://dbpedia.org/ontology/alumni> ?alumnus .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
19,8,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Caroline Louise Bevan Symonds"" .
  ?person <http://dbpedia.org/ontology/spouse> ?result .
  OPTIONAL { 
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
89,58,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of Saw Min Hla.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Spouse of Saw Min Phyu who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Child of this royal spouse
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  
  # Predecessor of this child
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  # Myat Hpone Pyo's father who is royalty
  ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Spouse of this royal father
  ?result <http://dbpedia.org/ontology/spouse> ?father .

  # Ensure the person is also a child of Saw Min Hla
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,13,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?award ?force WHERE {
  <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/ontology/wonAward> ?award .
  
  OPTIONAL { 
    ?award <http://dbpedia.org/property/category> ?category .
    FILTER (lang(?category) = 'en') # Assuming ""force"" might be related to the award's category
  }
  
  OPTIONAL {
    ?award <http://www.wikidata.org/entity/P31> ?instanceOf .
    ?instanceOf <http://www.wikidata.org/entity/P279>* <http://www.wikidata.org/entity/Q1234567> . # Hypothetical QID for a prestigious award category
  }
}
```

Note: The query assumes that ""force"" might be related to the award's category or prestige, which is not directly available in DBpedia. Adjustments may be needed based on actual data availability and interpretation of ""force.""",3,3,4,3,1,3,2,20,0,0,734,0,0.0,0
89,2,train,Give me the predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
103,17,train,"Give me the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/videoGame> ?game .
  ?game <http://dbpedia.org/property/relatedSeries> ?series .
  ?series <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 is the identifier for ""comics character""
  ?series <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
557,38,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?producer WHERE {
  # Cora Sue Collins' claim to fame
  <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/claimToFame> ?collinsWork .
  ?collinsWork a <http://dbpedia.org/class/yago/Work108069068> . # Assuming Work is the class for works
  ?collinsWork <http://dbpedia.org/ontology/producer> ?producer .

  # Janet Gaynor's claim to fame (must be a movie)
  <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/claimToFame> ?gaynorMovie .
  ?gaynorMovie a <http://dbpedia.org/class/yago/Movie108069068> . # Assuming Movie is the class for movies
  ?gaynorMovie a <http://dbpedia.org/class/yago/Work108069068> . # Also classified as work
  ?gaynorMovie <http://dbpedia.org/ontology/producer> ?producer .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
263,1,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
80,23,train,Give me the actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Smartbomb_(book)> <http://purl.org/dc/terms/creator> ?author .
  
  OPTIONAL { 
    ?movie <http://dbpedia.org/ontology/screenwriter> ?author .
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",3,3,4,3,1,3,3,71,0,0,55786,0,0.0,0
103,15,train,"Give me the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow1000000> .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
39,37,train,"Give me the band of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
SELECT ?band ?professional WHERE {
  # Band of Bob Thompson (musician)
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/member> ?band .

  # Fictional and comics character created by Walter B. Gibson
  ?character <http://www.wikidata.org/entity/P50> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?character <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q146> . # Fictional character
  ?character <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Comics character

  # Alter ego of the character and professional involved
  OPTIONAL {
    ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?professional <http://dbpedia.org/property/occupation> ?alterEgo .
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
513,7,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/ontology/receiver> ?award .
  ?award <http://dbpedia.org/property/awardedBy> ?entity .
}
```",2,2,3,2,1,3,2,20,0,0,87241,0,0.0,0
159,6,train,Give me the writer of Always the Love Songs.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/ontology/writer> ?writer .
}
```",1,1,2,1,1,3,3,71,0,2,3,0.0,0.0,0
492,6,train,Give me the death place of Reed Howes and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Reed_Howes>
    <http://dbpedia.org/resource/Caryn_Jones> # Assuming ""Caryn Jones"" is the DBpedia resource for Carolyn Jones
  }
  
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
468,5,train,"Give me the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/father> ?father .
  OPTIONAL { 
    ?father <http://dbpedia.org/property/occupation> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
78,14,train,"Give me the associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  # Associated Musical Artist of Stuart Tosh
  <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .

  UNION

  # Associated Musical Artist of the Writer of Wizards of Waverly Place (soundtrack)
  OPTIONAL {
    <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?writer .
    ?writer a <http://dbpedia.org/ontology/MusicalArtist> ;
            a <http://dbpedia.org/ontology/artist> .
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
  }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
531,20,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Madrid> .
  OPTIONAL { 
    ?war <http://dbpedia.org/property/commander> ?result .
    FILTER(CONTAINS(LCASE(?war), ""central african republic civil war""))
  }
  ?result <http://dbpedia.org/ontology/politician> [] .
  ?result <http://dbpedia.org/ontology/officeHolder> [] .
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
159,32,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/ontology/writer> ?writer .
  
  OPTIONAL { 
    ?commander <http://dbpedia.org/ontology/successor> ?successor .
    FILTER(?successor = ?writer)
    
    ?successor <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is the property for holding an office
    ?successor <http://www.wikidata.org/entity/P102> ?party . # Assuming P102 is the property for political party membership
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
531,53,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Office of Mariano Rajoy
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/office> ?rajoyOffice .
  
  # Leader of the 2003 Madrid City Council election and their residence
  ?leader <http://dbpedia.org/property/electedAsLeaderOf> <http://dbpedia.org/resource/2003_Madrid_City_Council_election> .
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://dbpedia.org/ontology/tenant> ?result .

  # Office of the leader of Conservative Republican Party (Spain)
  OPTIONAL {
    ?partyLeader <http://dbpedia.org/property/partyLeaderOf> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
    ?partyLeader <http://dbpedia.org/ontology/office> ?result .
  }

  FILTER(?rajoyOffice = ?result)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
311,8,train,Give me the band member of the writer of No Alternative.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
SELECT ?writer ?band WHERE {
  <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/ontology/writer> ?writer .
  OPTIONAL { 
    ?writer <http://dbpedia.org/property/memberOfBand> ?band .
  }
}
```",2,2,3,2,1,3,2,20,0,0,123,0,0.0,0
941,17,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel and child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  
  ?spouse1 <http://dbpedia.org/ontology/spouse> ?child .
  ?spouse2 <http://dbpedia.org/ontology/spouse> ?spouse1 .
  
  ?spouse2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> .

  BIND(?spouse2 AS ?result)
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
609,47,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place as a region and administrative region
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?region .
  ?region a <http://dbpedia.org/class/yago/AdministrativeRegion108069068> .

  # Step 2: Find the governor of that region
  ?governor <http://dbpedia.org/ontology/governor> ?birthPlace .
  ?governor a <http://dbpedia.org/ontology/Politician> .

  # Step 3: Get the birth place of the governor
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .

  # Step 4: Find Vince Gilligan's awardee and their birth place
  OPTIONAL {
    <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> <http://dbpedia.org/ontology/awardee> ?awardee .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,18,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor) and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthName> ""Harriette Arlene Lake"" .
  ?result <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Roger_Pryor_(actor)> .
  ?result <http://dbpedia.org/ontology/memberOfParty> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
419,6,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
SELECT ?result ?almaMater WHERE {
  ?person <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Australian_Laureate_Fellowship> .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia> .
  ?person <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Scientist> .
  
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  BIND(?person AS ?result)
}
```",2,4,3,2,1,2,2,9,0,0,8,0,0.0,0
412,9,train,Give me the entity in Athens and war of Konstantinos Ventiris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/property/war> ?war .
  ?war <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> .
  ?entity <http://dbpedia.org/ontology/relatedTo> <http://dbpedia.org/resource/Konstantinos_Ventiris> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
225,16,train,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> .
  
  ?awardee <http://dbpedia.org/property/birthPlace> ?result .
  ?awardee <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q30> . # Q30 is the identifier for Japan
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> .
  
  FILTER EXISTS { ?region <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?result }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
37,0,train,Give me the birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
39,46,train,Give me the professional in the profession of the producer of Coke Studio Philippines and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find the producer of Coke Studio Philippines and their profession
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://dbpedia.org/property/profession> ?profession .

  # Find professionals in the same profession as the producer of Coke Studio Philippines
  ?result <http://dbpedia.org/property/profession> ?profession .

  # Find the alter ego of The Shadow and any associated professionals
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    ?result <http://dbpedia.org/property/profession> ?v1 .
    FILTER(?v1 = ?alterEgo)
  }
}
```",5,5,6,3,2,3,3,71,0,0,39640,0,0.0,0
723,3,train,"Give me the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result .
  ?result rdf:type dbo:Organization .
  ?result rdf:type dbo:Group .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
756,60,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
SELECT ?manager WHERE {
  # Step 1: Find successor season of 2006–07 VfL Bochum
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?successorSeason .
  
  # Step 2: Identify player in successor season associated with a sports club, organization, and soccer club
  ?player <http://dbpedia.org/ontology/team> ?team .
  ?team <http://www.w3.org/2000/01/rdf-schema#label> ?clubLabel .
  FILTER(CONTAINS(LCASE(?clubLabel), ""sports club"") && CONTAINS(LCASE(?clubLabel), ""organization"") && CONTAINS(LCASE(?clubLabel), ""soccer club"")) .
  
  # Step 3: Find manager born on 1968-08-26 who is a sports manager
  ?person <http://dbpedia.org/property/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?occupationLabel .
  FILTER(CONTAINS(LCASE(?occupationLabel), ""sports manager"")) .

  # Step 4: Find the team managed by this person
  ?teamSeason <http://dbpedia.org/ontology/teamManager> ?person .
  
  # Combine to find the manager of the player in the successor season
  ?player <http://dbpedia.org/ontology/team> ?successorTeam .
  ?successorTeam <http://dbpedia.org/ontology/teamManager> ?manager .
}
```",6,16,7,3,2,3,3,71,0,0,1,0,0.0,0
472,20,train,"Give me the administration of Olaf I of Denmark and territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
SELECT ?result WHERE {
  # Administration related to Olaf I of Denmark
  ?administration <http://dbpedia.org/ontology/ruler> <http://dbpedia.org/resource/Olaf_I_of_Denmark> .
  
  # Territory administered from Copenhagen
  ?administration <http://dbpedia.org/property/administeredFrom> <http://dbpedia.org/resource/Copenhagen> .

  # Administration related to Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  OPTIONAL {
    ?person <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
    ?person <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
    ?administration <http://dbpedia.org/ontology/ruler> ?person .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
557,42,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Producer of Janet Gaynor's claim to fame (assuming it is ""Seventh Heaven"" for this example)
  <http://dbpedia.org/resource/Seventh_Heaven_(1925_film)> <http://dbpedia.org/ontology/producers> ?result .
  
  OPTIONAL { 
    # Professional involvement with The Shadow's alter ego
    ?result <http://dbpedia.org/property/occupation> ?v1 .
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  }
  
  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producers> ?result .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
119,45,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?administration <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  ?administration <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  
  ?office <http://dbpedia.org/ontology/holder> <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> .
  ?result <http://dbpedia.org/ontology/tenant> ?administration .
  ?result <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Spain> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
756,56,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/West_Germany> .
  ?person <http://dbpedia.org/property/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Sports_manager> .

  OPTIONAL {
    ?vflBochumSeason <http://dbpedia.org/property/teamManager> ?person ;
                      <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Football_(soccer)> ;
                      <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/VfL_Bochum> .
    ?vflBochumSeason <http://dbpedia.org/property/startYear> ""2007""^^<http://www.w3.org/2001/XMLSchema#integer> ;
                      <http://dbpedia.org/property/endYear> ""2008""^^<http://www.w3.org/2001/XMLSchema#integer> .
    ?vflBochumSeason <http://dbpedia.org/ontology/type> ?type .
    FILTER (?type IN (<http://dbpedia.org/resource/Sports_club>, <http://dbpedia.org/resource/Organisation>, <http://dbpedia.org/resource/Football_club>))
  }

  OPTIONAL {
    ?teamSeason <http://dbpedia.org/property/teamManager> ?person ;
                <http://dbpedia.org/ontology/type> ?type .
    FILTER (?type IN (<http://dbpedia.org/resource/Soccer_club_season>, <http://dbpedia.org/resource/Sports_season>, <http://dbpedia.org/resource/Sports_team_season>))
  }

  BIND(?person AS ?result)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
225,9,train,Give me the region of the time zone in Kiyosu.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Kiyosu,_Aichi> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/2006/vcard/ns#region> ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
119,11,train,Give me the entity in Poland and war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland> .
  OPTIONAL { 
    ?war <http://dbpedia.org/property/commanderInWar> ?result .
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11173> . # Assuming Q11173 is the identifier for ""French Revolutionary War""
  }
}
```",3,3,4,2,2,3,2,20,0,57328,1,0.0,0.0,0
731,6,train,Give me the war of Tom Phillips (Royal Navy officer) and force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
SELECT ?war ?force WHERE {
  # Find wars associated with Tom Phillips (Royal Navy officer)
  OPTIONAL { 
    <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/war> ?war .
  }
  
  # Find forces associated with William Tennant (Royal Navy officer)
  OPTIONAL {
    <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> <http://dbpedia.org/property/servedIn> ?force .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
595,15,train,"Give me the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
SELECT ?author WHERE {
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> .
  ?work <http://dbpedia.org/ontology/book> [] .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .

  ?author <http://dbpedia.org/ontology/author> ?work .
  ?author <http://dbpedia.org/ontology/politician> [] .
  ?author <http://dbpedia.org/ontology/officeHolder> [] .
}
```",2,6,3,2,1,3,3,71,0,0,1,0,0.0,0
295,17,train,Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
SELECT ?native WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Film_producer> .
  ?person <http://dbpedia.org/property/wrote> <http://dbpedia.org/resource/Boom_Shack-A-Lak> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  ?native <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ?placeLabel .
  FILTER (STR(?placeLabel) = STR(?birthPlace))

}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
769,5,train,"Give me the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  ?team <http://dbpedia.org/ontology/teamManager> ?result .
  FILTER(STRSTARTS(LCASE(?team), ""hong kong c team""))
  
  ?result a <http://dbpedia.org/class/yago/SportsManagers> ;
         a <http://dbpedia.org/class/yago/SoccerCoaches> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
871,7,train,Who is the alumnus of Eton College?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
SELECT ?alumnus WHERE {
  <http://dbpedia.org/resource/Eton_College> dbo:alumnus ?alumnus .
}
```",1,1,2,1,1,3,3,71,0,0,211,0,0.0,0
58,5,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# No valid query can be constructed due to insufficient information.
```",1,1,2,1,1,3,2,20,0,0,39790,0,0.0,0
628,24,train,Give me the person born as the birth name of Bobby Shmurda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?birthName .
  
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> ;
          <http://dbpedia.org/ontology/placeOfBirth> ?placeOfBirth .
  
  FILTER(CONTAINS(LCASE(?placeOfBirth), ""florida""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,43,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
  
  OPTIONAL { 
    ?mariaSpouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
    ?father <http://dbpedia.org/ontology/father> ?mariaSpouse .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?parent <http://dbpedia.org/ontology/father> ?father .
  }
  
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  FILTER (?spouse = ?result && ?parent = ?spouse)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
347,49,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Maria Anna of Bavaria (born 1574)
  <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q5> . # Assuming Q5 is ""human""

  # Step 2: Find her child who is royalty
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""

  # Step 3: Determine the father of this royal child
  ?father <http://dbpedia.org/property/father> ?child .

  # Step 4: Identify the commander in a war that is also a societal event, an event, and a television show related to the 2nd Dragoon Regiment (France)
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q1180374> . # Assuming Q1180374 is ""societal event""
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q221225> . # Assuming Q221225 is ""event""
  ?war <http://dbpedia.org/ontology/show> ?tvShow .
  
  ?commander <http://dbpedia.org/property/commander> ?war .
  ?result <http://dbpedia.org/property/father> ?commander .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
399,1,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/occupation> ?v .
  FILTER(CONTAINS(LCASE(?v), ""singer""))
}
```",1,1,2,1,1,2,2,9,0,0,10364,0,0.0,0
87,24,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
SELECT ?actor WHERE {
  # Find movies that are both a work and a film, featuring Audrey Hepburn
  ?movie <http://dbpedia.org/ontology/work> ?work .
  ?movie <http://dbpedia.org/ontology/film> ?film .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Audrey_Hepburn> .

  # Find actors in these movies
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  # Check if the actor is married to an awardee of Janusz Kamiński's list
  OPTIONAL {
    ?awardList <http://dbpedia.org/property/awardee> ?spouse .
    FILTER(?spouse = ?actor)
    ?awardList <http://www.wikidata.org/entity/P921> <http://dbpedia.org/resource/Janusz_Kamiński> . # Assuming P921 is the property for ""recipient""
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
595,13,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Bill_Clinton> <http://dbpedia.org/ontology/author> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book110310489> .
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
737,12,train,"Give me the child of Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .
  ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Margarete_Sophie_of_Austria> .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
198,17,train,"Give me the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Settlement> .
  ?birthPlace <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
119,32,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Find the leader from the 2009 Galician regional election
  ?election <http://dbpedia.org/ontology/electionDate> ""2009-05-22""^^xsd:date .
  ?election <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Galicia_(Spain)> .
  ?result <http://dbpedia.org/ontology/wonElection> ?election .
  
  # Find Álvaro Quirós's country of residence
  <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?country .

  # Ensure the leader is a tenant (or associated) with that country
  ?result <http://dbpedia.org/ontology/residence> ?country .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
80,43,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
SELECT ?result WHERE {
  # Find works by T.I. that are both songs and musical works
  ?work <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/T.I._(rapper)> .
  ?work a <http://dbpedia.org/class/yago/MusicalWork108069068> . # Assuming this is the class for ""Musical Work""
  ?work a <http://dbpedia.org/class/yago/Song108069067> . # Assuming this is the class for ""Song""

  # Find albums associated with these works
  ?album <http://dbpedia.org/property/songs> ?work .
  
  # Identify actors involved in those albums (assuming there's a property linking actors to albums)
  OPTIONAL { 
    ?album <http://dbpedia.org/ontology/starring> ?result .
  }

  # Actor of Shelby Oaks
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .

  # Professional involvement (occupation)
  OPTIONAL { 
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
668,44,train,Give me the person born as the birth name of Joey B and professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
SELECT ?result WHERE {
  ?person dbo:birthName <http://dbpedia.org/resource/Joe_Brown_(singer)> .
  ?person dbo:profession <http://dbpedia.org/resource/Rod_Argent> .
  OPTIONAL { 
    ?pacely dbo:musicalArtist ?result .
  }
}
```

Note: The query assumes that the birth name of Joey B and the profession of Rod Argent are directly linked to specific DBpedia resources. Adjustments may be needed if these assumptions do not hold in the actual data model.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
311,10,train,"Who is the writer of the album, that is a musical work and a work and an album, of Sappy?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
SELECT ?writer WHERE {
  ?album rdf:type <http://dbpedia.org/ontology/MusicalWork> .
  ?album rdf:type <http://www.w3.org/2002/07/owl#Thing> . # Assuming Thing is used for general works
  ?album dbo:albumTitle ""Sappy"" .
  ?album dbo:writer ?writer .
}
```",2,5,3,2,1,3,2,20,0,0,26,0,0.0,0
871,48,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Find the award associated with Rodney Lees
  ?award <http://dbpedia.org/ontology/receiver> ?awardee .
  ?award <http://dbpedia.org/property/recipient> ""Rodney Lees"" .

  # Identify parent of the awardee
  ?parent <http://dbpedia.org/ontology/child> ?awardee .

  # Find children of Frederick Stanley who are politicians
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?child <http://dbpedia.org/property/politicalParty> ?party .

  # Ensure the person is both a parent and a father
  FILTER (?parent = ?result)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of Kate Dimbleby.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie ?author WHERE {
  ?movie a dbo:Film .
  ?movie a owl:Thing .
  
  <http://dbpedia.org/resource/Vera_Lynn> <http://dbpedia.org/ontology/starring> ?movie .

  ?movie <http://dbpedia.org/property/author> ?author .
  
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> .
    FILTER(?author = ?parent)
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
557,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://www.wikidata.org/entity/P1365> ?alterEgo .
  ?alterEgo <http://dbpedia.org/property/occupation> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
58,7,train,Give me the spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Linda Sue Cobb"" .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
384,0,train,Give me the party of Guillaume Peltier.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Guillaume_Peltier> dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
213,15,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of Cat Country (novel).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/decedent> ?decedent .
  ?decedent <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Taipei> .

  ?child <http://dbpedia.org/ontology/parent> ?person .
  ?child <http://dbpedia.org/property/politicalParty> ?party . # Assuming political involvement is indicated by party membership

  ?novel <http://dbpedia.org/property/country> ?country .
  FILTER(?novel = <http://dbpedia.org/resource/Cat_Country_(novel)>)

  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
78,8,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Stuart Mcbeath Tosh"" .
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""musical artist"") || CONTAINS(LCASE(?v1), ""musician""))
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/associatedBand> ?result .
  }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
557,2,train,Give me the producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?producer .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
756,30,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/West_Germany> .
  
  OPTIONAL { 
    ?team <http://dbpedia.org/property/teamManaged> ?result .
    ?team <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
    ?team <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Sports_season> .
  }
  
  OPTIONAL {
    ?letschTeam <http://dbpedia.org/property/teamManaged> ?result .
    ?letschTeam <http://dbpedia.org/resource/Thomas_Letsch> .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/teamManaged> ?result .
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
737,15,train,"Give me the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,51,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?governorBirthPlace ?authorBirthPlace WHERE {
  # Governor of Virginia who is a politician
  ?governor <http://dbpedia.org/ontology/governmentRole> <http://dbpedia.org/resource/Governor_of_Virginia> .
  ?governor <http://www.w3.org/2000/01/rdf-schema#label> ""Governor of Virginia""@en .
  ?governor <http://dbpedia.org/ontology/politicianForParty> ?party .
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .

  # American author of El Deafo
  ?author <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:American_authors> .
  ?author <http://dbpedia.org/property/writtenWork> <http://dbpedia.org/resource/El_Deafo> .
  ?author <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
943,58,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . },"```sparql
SELECT ?grandfather WHERE {
  # Identify the child of Baeda Maryam I and Dawit I
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Dawit_I> .

  # Determine the father of that child (the grandfather)
  ?grandfather <http://dbpedia.org/ontology/father> ?child .

  # Ensure this grandfather is both royalty and an office holder
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  OPTIONAL { 
    ?grandfather <http://dbpedia.org/ontology/officeHolder> ?office .
  }

  # Find any connection or reference to ""The Shadow's"" alter ego
  OPTIONAL {
    ?reference <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
    ?grandfather <http://dbpedia.org/ontology/reference> ?reference .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,24,train,Give me the professional in the profession of Shatrughan Sinha and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?profession .
  ?person <http://dbpedia.org/property/occupation> ?profession .
  FILTER(?person != <http://dbpedia.org/resource/Shatrughan_Sinha>)
}
```",3,3,4,2,2,3,3,71,39639,18392,1,0.6830659475108132,0.9999747729566095,0.8116841232300273
353,27,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
SELECT ?grandchild WHERE {
  # Find the spouse of Constance of Burgundy who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Find a child of this royal spouse
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .

  # Find a grandchild (child of the above child)
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
}
```",3,4,4,3,1,3,3,71,0,0,8,0,0.0,0
58,2,train,Give me the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
609,6,train,"Who is the governor, that is a politician, of Virginia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?governor WHERE {
  ?governor <http://dbpedia.org/ontology/governmentRole> <http://dbpedia.org/resource/Governor_of_Virginia> .
  ?governor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,34,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?result WHERE {
  # Find landmarks at the specified elevation
  ?landmark <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^xsd:float .
  
  # Determine the country or region of the landmark and its ruling party
  ?landmark <http://dbpedia.org/property/locationCountry> ?country .
  ?country <http://dbpedia.org/property/rulingParty> ?party .

  # Find individuals who are members of this ruling party
  ?person <http://dbpedia.org/ontology/memberOf> ?party .

  # Identify the person born as Harriette Arlene Lake
  ?person <http://dbpedia.org/ontology/birthName> ""Harriette Arlene Lake"" .
  
  BIND(?person AS ?result)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
668,21,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
SELECT DISTINCT ?artist WHERE {
  # Find Stonebwoy's resource
  <http://dbpedia.org/resource/Stonebwoy> <http://www.w3.org/2000/01/rdf-schema#label> ""Elorm Kabu Amenyah""@en .
  
  # Find Shatta Wale's resource
  <http://dbpedia.org/resource/Shatta_Wale> <http://www.w3.org/2000/01/rdf-schema#label> ""Darryl Paa Kwesi Bannerman-Martin""@en .

  # Check for common musical collaborations or associations
  {
    ?artist <http://dbpedia.org/ontology/collaboration> <http://dbpedia.org/resource/Stonebwoy> .
    ?artist <http://dbpedia.org/ontology/collaboration> <http://dbpedia.org/resource/Shatta_Wale> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,37,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify children of Stephen V of Hungary
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Step 2: Find the spouse of Maria of Bytom
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .

  # Step 3: Determine the father of this spouse and check if he is royalty
  ?father <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 4: Find the parent of this royal father
  ?result <http://dbpedia.org/ontology/birthParent> ?father .

  # Ensure the child from step 1 is the same as the result
  FILTER (?child = ?result)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,50,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  ?grandchild <http://dbpedia.org/ontology/father> ?child .
  
  OPTIONAL { 
    ?reference <http://dbpedia.org/ontology/father> ?grandchild .
    ?reference <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?reference <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 represents an office holder
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/William_I> .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
816,52,train,"Give me the parent of the professional in Photographer and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/occupation> ""Photographer"" .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Doon_Arbus> .

  OPTIONAL { 
    ?movie <http://dbpedia.org/ontology/starring> ?result .
    ?movie a <http://dbpedia.org/ontology/Movie> .
  }

  OPTIONAL {
    ?decedent <http://dbpedia.org/property/deathPlace> ""Los Angeles"" .
    ?relation ?result ?decedent .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
80,50,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Find professional associated with The Shadow's alter ego
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?result .

  # Find a song or musical work by T.I.
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/T.I._(rapper)> ;
          <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Song> .
    
    # Find the album of this work
    ?work <http://dbpedia.org/ontology/album> ?album .

    # Identify actors (artists) involved in the album
    ?album <http://dbpedia.org/ontology/contributor> ?result .
  }
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
151,2,train,Give me the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
361,2,train,Give me the actor of Rustlers' Rhapsody.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
472,0,train,Give me the territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
SELECT ?territory WHERE {
  ?territory a dbo:Territory .
  OPTIONAL { 
    ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Copenhagen> .
  }
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
119,19,train,Give me the office of the leader of 2009 Galician regional election and tenant of Spain.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?office WHERE {
  ?election <http://dbpedia.org/ontology/electionDate> ""2009-01-01""^^xsd:date .
  ?election <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Galicia> .
  ?winner <http://dbpedia.org/ontology/winner> ?office .
  
  OPTIONAL {
    ?office <http://www.w3.org/ns/org#hasPost> ?post .
    ?post <http://www.w3.org/ns/org#memberOf> <http://dbpedia.org/resource/Spain> .
  }
}
```

This query attempts to find the office held by the winner of the 2009 Galician regional election and checks if that office is associated with a role within Spain. Note that specific property paths might need adjustment based on DBpedia's schema at the time of querying.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
311,11,train,"Give me the band member of Mark Eitzel and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
SELECT ?result WHERE {
  ?eitzel <http://dbpedia.org/ontology/member> ?result .
  FILTER(?eitzel = <http://dbpedia.org/resource/Mark_Eitzel>) .

  ?result <http://dbpedia.org/property/associatedMusicalArtist> ?artist1 .
  
  ?artist1 <http://dbpedia.org/property/associatedMusicalArtist> ?artist2 .
  FILTER(?artist2 = <http://dbpedia.org/resource/R.E.M.>)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
37,1,train,Give me the birthplace of Scott LaFaro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
859,9,train,"Give me the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Burnt_by_the_Sun> <http://dbpedia.org/ontology/reference> ?reference .
  ?reference <http://www.wikidata.org/entity/P31> [
    <http://www.wikidata.org/entity/Q215380> ; # Band
    <http://www.wikidata.org/entity/Q215381> ; # Group
    <http://dbpedia.org/ontology/Organisation>
  ] .
  ?reference rdfs:label ?result .
}
```",2,6,3,2,1,3,2,20,0,0,5,0,0.0,0
347,38,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT DISTINCT ?result WHERE {
  # Find children of Ferdinand III
  ?child <http://dbpedia.org/ontology/father> ?result .
  ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .

  # Find father of Cecilia Renata
  ?ceciliaFather <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> .
  
  # Find children of Cecilia Renata's father
  ?childOfCeciliaFather <http://dbpedia.org/ontology/father> ?ceciliaFather .

  # Ensure the person is both a father of Ferdinand III's child and a child of Cecilia Renata's father
  FILTER (?result = ?childOfCeciliaFather)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
472,15,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
SELECT ?territory WHERE {
  <http://dbpedia.org/resource/Christian_Ditlev_Ammenorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER (isBlank(?deathPlace) || <http://dbpedia.org/resource/Category:Settlements> <http://www.w3.org/2004/02/skos/core#broader> ?deathPlace)
  
  ?territory <http://dbpedia.org/property/administeredFrom> ?deathPlace .
  OPTIONAL {
    ?territory <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/Olaf_I_of_Denmark> .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,7,train,Give me the figure known as the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Russia_national_football_team> dbo:alias ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
293,9,train,Give me the party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
  ?result <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Roger_Pryor_(actor)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,8,train,Give me the country of the work of Lao She.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
SELECT DISTINCT ?work ?country WHERE {
  ?work <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> .
  OPTIONAL { 
    ?work <http://dbpedia.org/ontology/country> ?country .
  }
}
```",2,2,3,2,1,3,2,20,2,8,0,0.2,1.0,0.33333333333333337
119,40,train,"Give me the tenant of Spain and tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT ?event WHERE {
  ?event <http://dbpedia.org/ontology/location> ?location .
  
  # Tenant of Spain
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Spain""@en .

  # Tenant of Santiago de Compostela
  OPTIONAL { 
    ?event <http://dbpedia.org/ontology/location> ?santiagoLocation .
    ?santiagoLocation <http://www.w3.org/2000/01/rdf-schema#label> ""Santiago de Compostela""@en .
  }

  # Office of the Leader of the Administration
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/associatedWith> <http://dbpedia.org/resource/Anxo_Quintana> .
    ?anxoRole <http://www.w3.org/2000/01/rdf-schema#label> ""Leader of the Administration""@en .
    ?anxoRole <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Anxo_Quintana> .
  }
}
```",5,6,6,3,3,3,3,71,0,2062,1,0.0,0.0,0
531,34,train,"Give me the office of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?miguelOffice .
  
  ?leader <http://dbpedia.org/ontology/election> <http://dbpedia.org/resource/2003_Madrid_City_Council_election> ;
          <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://dbpedia.org/property/tenant> ?result .

  OPTIONAL {
    ?result <http://dbpedia.org/ontology/politicalParty> ?party .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,56,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?result WHERE {
  # Find associated musical artist of Stonebwoy (Elorm Kabu Amenyah)
  <http://dbpedia.org/resource/Stonebwoy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .

  # Ensure the person is a musician
  ?result <http://dbpedia.org/property/profession> ""Musician"" .

  OPTIONAL {
    # Find artists from Central Region, Ghana and their birth names
    ?artist <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> .
    ?artist <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Central_Region,_Ghana> .
    ?artist <http://dbpedia.org/property/birthName> ?birthName .

    # Ensure the associated artist's birth name matches
    ?result <http://dbpedia.org/property/birthName> ?birthName .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,8,train,Give me the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
513,5,train,Give me the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/partyLeader> ?leader .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
353,43,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
  ?reference <http://dbpedia.org/ontology/royalty> ?x .
  ?reference <http://dbpedia.org/ontology/officeHolder> ?y .
  ?reference <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?reference <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .

  ?child <http://dbpedia.org/ontology/father> ?reference .
  ?child <http://dbpedia.org/ontology/royalty> ?z .

  ?father <http://dbpedia.org/ontology/father> ?child .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
723,11,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of Stone Sour.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find the producer(s) of ""Nothing to Gein"" that is an organization or group
  ?producer <http://dbpedia.org/ontology/produced> <http://dbpedia.org/resource/Nothing_to_Gein> .
  ?producer a dbo:Organization .

  # Identify band members of this producer
  ?person <http://dbpedia.org/ontology/member> ?producer .

  # Find band members of Stone Sour
  ?stoneSourMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Stone_Sour> .
  
  # Ensure the person is a member of both
  FILTER (?person = ?stoneSourMember)
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
816,0,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
557,59,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?professional WHERE {
  ?kentAllard <http://dbpedia.org/ontology/fictionalCharacter> true .
  ?kentAllard <http://dbpedia.org/property/reference> ""print"" .
  
  OPTIONAL { 
    ?kentAllard <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?professional <http://dbpedia.org/property/occupation> ?alterEgo .
  }
  
  ?johnnyDoughboy <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/famousFor> ?work .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,59,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT ?actor WHERE {
  # Part 1: Actor of the album of a song by T.I.
  ?song <http://dbpedia.org/ontology/song> true .
  ?song <http://dbpedia.org/ontology/musicalWork> true .
  ?song <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/T.I._(rapper)> .
  ?album <http://dbpedia.org/property/track> ?song .
  ?actor <http://dbpedia.org/ontology/starring> ?album .

  # Part 2: Actor of a movie with the author of Smartbomb
  OPTIONAL {
    <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?author .
    ?movie <http://dbpedia.org/ontology/starring> ?author .
    ?actor <http://dbpedia.org/ontology/starring> ?movie .
  }
}
```",6,8,7,3,2,3,3,71,0,0,10,0,0.0,0
384,2,train,"Give me the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result .
  ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Politician> .
  ?result <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
472,21,train,Give me the administration of Christian IX of Denmark and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/administeredBy> <http://dbpedia.org/resource/Christian_IX_of_Denmark> .
  ?result <http://dbpedia.org/ontology/administeredBy> ?mayor .
  ?mayor <http://www.wikidata.org/entity/P39> <http://dbpedia.org/resource/Duchy_of_Schleswig> . # Assuming P39 is the property for ""position held""
  
  ?result <http://dbpedia.org/property/administrationFrom> <http://dbpedia.org/resource/Copenhagen> .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
633,1,train,"Give me the parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> 
    (<http://dbpedia.org/ontology/father>|<http://dbpedia.org/ontology/mother>) ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
293,36,train,Give me the party member of Republican Party (United States) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
  
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> .
    ?parent <http://dbpedia.org/property/birthName> ?birthName .
    
    FILTER (?result <http://dbpedia.org/property/birthName> = ?birthName)
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
595,24,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
SELECT ?result WHERE {
  ?crisis <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
  ?crisis <http://dbpedia.org/ontology/commander> ?result .

  OPTIONAL { 
    ?work <http://dbpedia.org/property/author> ?result .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book106557786> .
    ?work <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/Bill_Clinton> .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
68,9,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> .
  ?catherine <http://dbpedia.org/ontology/mother> ?child .
  FILTER(?catherine = <http://dbpedia.org/resource/Catherine_of_Austria_(1507–1578)>)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
39,31,train,Give me the professional in  and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
SELECT ?producer ?profession WHERE {
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://dbpedia.org/property/occupation> ?profession .
}
```",4,4,5,3,2,3,3,71,3,12,39637,0.2,7.56811301715439e-05,0.00015130500567393774
258,13,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?university ?foundingDate WHERE {
  <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/property/almaMater> ?university .
  
  ?university rdf:type dbo:University ;
              rdf:type dbo:Organization ;
              rdf:type dbo:EducationalInstitution .

  OPTIONAL { 
    ?university <http://dbpedia.org/ontology/foundingDate> ?foundingDate .
  }
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
816,59,train,"Give me the parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Determine Eugène Cattin's profession
  <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/property/profession> ?profession .

  # Find individuals with the same profession as Eugène Cattin
  ?individual <http://dbpedia.org/property/profession> ?profession .
  
  # Check if they acted in a movie classified as a work
  ?movie <http://dbpedia.org/ontology/starring> ?individual .
  ?movie <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q13442814> . # Assuming Q13442814 is the identifier for ""work""

  # Identify individuals who died in Los Angeles
  OPTIONAL {
    ?decedent <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Los_Angeles> .
    FILTER(?individual = ?decedent)
  }

  # Find the parent of the identified professional
  ?parent <http://dbpedia.org/ontology/child> ?individual .
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
871,52,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Parent of the child of Frederick Stanley, 16th Earl of Derby
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .

  # Parent of the awardee of Rodney Lees' award
  ?awardRecipient <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Rodney_Lees> .
  ?parent2 <http://dbpedia.org/ontology/birthChild> ?awardRecipient .

  # Father of Arthur Stanley (politician)
  ?father <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Arthur_Stanley_(politician)> .

  # Find the common individual who satisfies all conditions
  FILTER (?parent = ?parent2 && ?parent = ?father)
  BIND(?parent AS ?result)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
258,9,train,"Give me the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
SELECT ?foundingDate WHERE {
  <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?university .
  
  ?university a dbo:University ;
              a dbo:Organization ;
              a dbo:EducationalInstitution .

  ?university <http://dbpedia.org/property/foundingDate> ?foundingDate .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
492,19,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?actor ?deathPlace WHERE {
  # Find actor(s) from The Sky Ranger (1928 film)
  <http://dbpedia.org/resource/The_Sky_Ranger_(film)> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Get death place of the actor(s)
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/deathPlace> ?deathPlaceActor .
  }
  
  # Get death place for Sal Mineo
  OPTIONAL {
    <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceSalMineo .
  }

  # Get death place for Carolyn Jones
  OPTIONAL {
    <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceCarolynJones .
  }
  
  # Return results with labels for clarity
  BIND(IF(BOUND(?deathPlaceActor), ?deathPlaceActor, IF(BOUND(?deathPlaceSalMineo), ?deathPlaceSalMineo, IF(BOUND(?deathPlaceCarolynJones), ?deathPlaceCarolynJones, ""Unknown""))) AS ?deathPlace)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
737,46,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of Duke Philipp of Württemberg
  ?child1 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
  
  # Step 2: Find the grandchild (child of the child)
  ?grandchild <http://dbpedia.org/ontology/father> ?child1 .

  # Step 3: Identify the spouse of Archduchess Helena who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 4: Find their child
  ?child2 <http://dbpedia.org/ontology/father> ?spouse .

  # Step 5: Determine the predecessor of this child
  ?result <http://dbpedia.org/ontology/successor> ?child2 .
  
  FILTER(?grandchild = ?result) # Ensure the grandchild is also the result
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,15,train,"Who is the parent of the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/mother> ?parent .
  }
  UNION
  {
    ?child <http://dbpedia.org/ontology/father> ?parent .
  }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
905,18,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
158,13,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  
  # Ensure the birthplace is a country
  ?birthplace <http://www.w3.org/2002/07/owl#sameAs> <http://www.wikidata.org/entity/Q6256> .

  # Find individuals who died at this location
  ?result <http://dbpedia.org/ontology/deathPlace> ?deathplace .
  FILTER (?deathplace = ?birthplace)

  # Ensure the person is native to Grand Duchy of Finland
  ?result <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
297,1,train,Give me the institution in Georgia (U.S. state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
SELECT ?institution WHERE {
  ?institution <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""institution"")) .
  ?institution <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Georgia""@en .
}
```",1,1,2,1,1,2,2,9,0,0,941,0,0.0,0
293,49,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
SELECT ?result WHERE {
  # Find the ruling party in Central, Louisiana
  ?party <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Central,_Louisiana> .
  ?party <http://dbpedia.org/ontology/rulingParty> true .

  # Identify members of this party
  ?member <http://dbpedia.org/ontology/memberOf> ?party .

  # Find Tisha Sterling and her parents
  <http://dbpedia.org/resource/Tisha_Sterling> <http://dbpedia.org/ontology/birthName> ?birthName .
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> .
    ?parent <http://dbpedia.org/ontology/birthName> ?parentBirthName .

    # Match the birth name of a parent with another person
    ?result <http://dbpedia.org/ontology/birthName> ?parentBirthName .
  }
}
```

Note: This query assumes that DBpedia contains detailed information about political affiliations in specific locations and personal details like birth names, which may not always be available or up-to-date. Adjustments might be necessary based on the actual data present in DBpedia.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
531,27,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?partyLeaderOffice WHERE {
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/memberOf> ?politicalParty .
  
  ?politicalParty <http://dbpedia.org/property/partyLeader> ?leader .
  ?leader <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Q82955 is the identifier for ""politician""
  ?leader <http://dbpedia.org/ontology/officeHolder> ?partyLeaderOffice .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
585,6,train,Give me the native of New York (state) and child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Linda_Miller_(actress)> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
353,3,train,"Who is the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
375,17,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
SELECT ?author WHERE {
  # Step 1: Find the author of ""A Picture of Britain""
  <http://dbpedia.org/resource/A_Picture_of_Britain> <http://purl.org/dc/terms/creator> ?author .

  # Step 2 and 3: Identify a native artist and musical artist
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist100000001> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist100000001> .

  # Step 4: Determine their native location
  ?location <http://dbpedia.org/ontology/nationality> ?person .
  ?location <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Settlements_in_England> .

  # Step 5: Find the parent of these individuals
  ?parent <http://dbpedia.org/ontology/child> ?person .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
39,48,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
SELECT ?result WHERE {
  # Find the producer of Coke Studio Philippines and their profession
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://dbpedia.org/property/profession> ?profession .

  # Find Robert Lamar Thompson, confirm he is a musical artist, and identify his band
  <http://dbpedia.org/resource/Bobby_Lynne> <http://www.w3.org/2000/01/rdf-schema#label> ""Robert Lamar Thompson""@en .
  <http://dbpedia.org/resource/Bobby_Lynne> <http://purl.org/dc/terms/subject> ?musicalArtist .
  FILTER(CONTAINS(LCASE(?musicalArtist), ""musical artist""))
  OPTIONAL { 
    <http://dbpedia.org/resource/Bobby_Lynne> <http://dbpedia.org/ontology/member> ?band .
  }

  # Match the profession with the band
  FILTER(?profession = ?band)
  BIND(?producer AS ?result)
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
871,42,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?child <http://dbpedia.org/property/occupation> ?v1 .
  
  FILTER (CONTAINS(LCASE(?v1), ""politician""))

  ?result <http://dbpedia.org/ontology/parent> ?child .

  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
    ?result <http://dbpedia.org/ontology/parent> ?awardee .
  }

  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,5,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
737,58,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the parent of Archduchess Margarete Sophie of Austria
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  
  # Step 2: Find their child who is royalty
  ?royalChild <http://dbpedia.org/ontology/parent> ?parent .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Step 3: Find a grandchild of that royal child
  ?result <http://dbpedia.org/ontology/parent> ?royalChild .
  
  # Step 4: Ensure this person is a predecessor to Carl, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .

  # Step 5: Find the child of Duke Philipp of Württemberg
  ?philippChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
  
  # Step 6: Ensure this person is a grandchild of that child
  ?result <http://dbpedia.org/ontology/parent> ?philippChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,57,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  # Tenant of Madrid
  ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Madrid> .
  
  # Office of the Commander in a military conflict involving Manuel Pinto da Costa
  OPTIONAL { 
    ?conflict <http://dbpedia.org/property/conflict> ?v1 .
    ?conflict <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q1180374> . # Assuming Q1180374 is ""military conflict""
    ?conflict <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11070> . # Assuming Q11070 is ""societal event""
    ?conflict <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
    
    ?result <http://dbpedia.org/ontology/commander> ?v1 .
    ?result <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is ""office holder""
    ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is ""politician""
  }
  
  # Leader of Conservative Republican Party (Spain)
  OPTIONAL {
    ?party <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
    ?result <http://www.wikidata.org/entity/P39> ?leaderOffice . # Assuming P39 is ""office holder""
    ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is ""politician""
  }
}
```",6,11,7,3,3,3,3,71,0,9,1,0.0,0.0,0
756,5,train,Give me the leader of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/West_Germany> dbo:headOfState ?leader .
  UNION
  <http://dbpedia.org/resource/West_Germany> dbo:primeMinister ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,12,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
258,6,train,Give me the establishment of 1955-12-02 and alma mater of Eleonora Menicucci.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/established> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> .
  <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/almaMater> ?result .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,48,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the commander in Siege of Mukha who is royalty
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the parent of this commander who is royalty
  ?parent <http://dbpedia.org/ontology/child> ?commander .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Identify the child of this royal parent
  ?result <http://dbpedia.org/ontology/parent> ?parent .

  # Step 4: Find Na'od's father who is royalty and an office holder
  ?naod_father <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Na%27od> .
  ?naod_father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?naod_father <http://www.wikidata.org/entity/P106> ?office_holder_role . # Assuming P106 is for occupation

  # Step 5: Identify the father of this individual (Na'od's grandfather)
  ?result2 <http://dbpedia.org/ontology/child> ?naod_father .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
38,4,train,"Give me the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event <http://dbpedia.org/ontology/conflict> <http://dbpedia.org/resource/Korean_War> .
  ?event <http://dbpedia.org/ontology/commander> ?commander .
  ?commander a <http://dbpedia.org/class/yago/YagoLegalActor108676848> . # Assuming this class represents office holders
}
```",1,2,2,1,1,3,2,20,0,0,42,0,0.0,0
103,22,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow_(radio_series)> <http://dbpedia.org/property/alterEgo> ?v1 .
  }
}
```",3,3,4,2,2,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
39,9,train,Give me the professional in Singer and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
SELECT ?result ?v1 WHERE {
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""singer""))
}
```

This query will return individuals who have ""Singer"" as one of their listed occupations, along with all the professions associated with them.",2,2,3,1,2,3,3,71,0,0,5422,0,0.0,0
386,21,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russian_Empire> ;
          <http://dbpedia.org/ontology/war> ?war .

  OPTIONAL {
    <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/war> ?war .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,17,train,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result .
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",3,3,4,2,2,2,3,28,3,2,0,0.6,1.0,0.7499999999999999
103,10,train,Give me the actor of Dispatches from Elsewhere and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor ?occupation WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/occupation> ?occupation .
}
```",2,2,3,1,2,3,3,71,2,9,0,0.18181818181818182,1.0,0.3076923076923077
295,12,train,Give me the native of the birth place of Victor Saville and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Find Victor Saville's birth place
  <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Identify individuals native to that birth place
  ?native <http://www.w3.org/2000/01/rdf-schema#label> ?nativeLabel .
  ?native <http://dbpedia.org/property/nationality> ?nationality .
  FILTER(?nationality = ?birthPlace) .

  # Identify the writer of Boom Shack-A-Lak
  ?result <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Boom_Shack-A-Lak> .

  # Ensure the native is also the writer
  FILTER(?native = ?result)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
58,9,train,Give me the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Linda_Bruckheimer> dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  FILTER(?person != <http://dbpedia.org/resource/Linda_Bruckheimer>)
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
353,30,train,Give me the father of William II of Sicily and child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
SELECT ?result WHERE {
  # William II of Sicily's father
  <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/ontology/father> ?result .
  
  # The same person must be a child of Roger II of Sicily
  ?result <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .

  # This person should also be the grandchild of Alfonso VI
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/father> ?result .
    ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
19,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Your_Domain_Here> .
}
```

Replace `<http://dbpedia.org/resource/Your_Domain_Here>` with the appropriate DBpedia resource for the domain of interest.",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
628,34,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?gs9Member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  ?gs9Member <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?gs9Member <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?gs9Member <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> .
  
  ?gs9Member <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Musical_artist> .
  ?gs9Member <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Artist> .

  ?gs9Member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  
  ?bandMember <http://dbpedia.org/ontology/member> ?associatedArtist .
  ?bandMember ?p ?o .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
347,53,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/event> ""Algerian War"" .
  ?war <http://purl.org/dc/terms/type> ?type1, ?type2 .
  FILTER (?type1 = ""societal event"" && ?type2 = ""television show"") .

  ?result <http://dbpedia.org/ontology/commander> ?war .
  
  ?eleonore <http://dbpedia.org/ontology/father> ?result .
  ?eleonore <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> .

  ?ceciliaRenata <http://dbpedia.org/ontology/father> ?grandfather .
  ?result <http://dbpedia.org/ontology/father> ?grandfather .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
103,34,train,"Give me the professional in  and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(?actor != <http://dbpedia.org/resource/Richard_E._Grant>) # Exclude Richard E. Grant himself
  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  }
}
```",4,5,5,3,2,3,3,71,10,12269,3,0.0008143985666585227,0.7692307692307693,0.0016270745200130164
263,23,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?result WHERE {
  # Find William Gayner's birthplace that is both a region and a country
  <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?country .
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?region .

  # Find individuals native to that birthplace
  ?native <http://dbpedia.org/ontology/nativeOf> ?birthPlace .

  # Identify children of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/child> ?child .

  # Find the parent of these children
  ?parent <http://dbpedia.org/ontology/parent> ?child .

  # Intersection: The person who is both native to William Gayner's birthplace and a parent of Claude Bowes-Lyon's child
  FILTER (?native = ?parent)
  BIND(?native AS ?result)
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
39,28,train,Give me the professional in  and professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?profession .
  
  ?result <http://dbpedia.org/property/occupation> ?profession .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/memberOfBand> ?result .
  }
}
```",4,4,5,2,3,3,3,71,4,45127,0,8.863087456515478e-05,1.0,0.00017724603965880138
345,2,train,"Give me the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?result . }","```sparql
SELECT ?name WHERE {
  <http://dbpedia.org/resource/Mitaka,_Tokyo> rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
687,25,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/soccerPlayer> _:a .
  ?result <http://dbpedia.org/property/profession> ""soccer manager"" .
  ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> .

  OPTIONAL {
    ?team <http://dbpedia.org/ontology/player> ?result .
    ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
941,16,train,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find spouse of Duchess Luise of Brunswick-Wolfenbüttel
  ?spouse1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> .
  
  # Find the spouse of that spouse
  ?result <http://dbpedia.org/ontology/spouse> ?spouse1 .

  OPTIONAL {
    # Identify a parent who is royalty for Duke Anthony Ulrich of Brunswick
    ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> .
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    # Find their child
    ?result <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",4,5,5,2,2,3,2,20,1,0,0,1.0,1.0,1.0
609,4,train,Who is the awardee of List of awards and nominations received by Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Vince_Gilligan> dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
557,27,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
  
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie104069976> ;
               <http://dbpedia.org/property/famousFor> ?actor .

  ?claimToFame <http://www.w3.org/2002/07/owl#sameAs> ?work .
  
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108069976> .

  ?claimToFame <http://dbpedia.org/ontology/producer> ?result .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
492,8,train,Give me the death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?actor ?deathPlace WHERE {
  <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?actor .
  OPTIONAL { 
    ?actor dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,2,1,2,3,28,3,3,0,0.5,1.0,0.6666666666666666
39,34,train,Give me the professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Find the producer of Coke Studio Philippines and their profession
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://dbpedia.org/property/profession> ?profession1 .

  # Find bands associated with Bob Thompson (musician) and their type
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Bob_Thompson_(musician)> .
  ?band <http://dbpedia.org/property/type> ?typeBand .

  # Match professionals who share the same profession as both entities
  ?result <http://dbpedia.org/property/profession> ?profession1 .
  ?result <http://dbpedia.org/property/type> ?typeBand .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
386,11,train,Give me the war of the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> .
  ?person <http://dbpedia.org/ontology/war> ?war .
}
```",2,2,3,2,1,2,3,28,0,0,15,0,0.0,0
668,4,train,Who is the person born as Elorm Kabu Amenyah?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
386,0,train,Give me the entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Russian_Empire> dbo:country ?entity .
}
```

This query will return all entities that are associated with the Russian Empire through the `dbo:country` property. Depending on what specific types of entities you're interested in, additional properties might be used to refine the results.",1,1,2,1,1,2,3,28,0,0,87,0,0.0,0
386,1,train,Give me the war of Karl Gustav von Baggovut.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict .
}
```

This query assumes that `dbo:MilitaryConflict` is the class used for wars or battles in DBpedia. Adjustments may be needed based on the exact schema and available properties.",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
816,35,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .

  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Allan_Arbus> .
  ?actor <http://dbpedia.org/ontology/birthChild> ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,9,train,Give me the actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> .
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
531,30,train,"Give me the office of Mariano Rajoy and tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  # Find office held by Mariano Rajoy
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/office> ?office .
  
  # Find individuals who have the same office and are associated with Madrid
  ?person <http://dbpedia.org/ontology/office> ?office .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Madrid> .
  }
  
  # Ensure they are leaders of the Conservative Republican Party (Spain)
  ?person <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
  ?person <http://dbpedia.org/ontology/leader> ?partyLeader .
  
  # Ensure they are politicians
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,33,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?result WHERE {
  # Find T.I.'s songs or musical works and their albums
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/T.I._(rapper)> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/class/yago/MusicalWork1000000010> | <http://dbpedia.org/class/yago/Song1000000010>) .
  ?work <http://dbpedia.org/property/album> ?album .

  # Check if there are actors associated with these albums
  OPTIONAL { 
    ?album <http://dbpedia.org/ontology/starring> ?result .
  }

  # Find individuals who starred in Shelby Oaks
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,56,train,"Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
SELECT ?birthPlaceGlennYoungkin, ?birthPlaceAwardee, ?birthPlaceAuthor WHERE {
  # Birthplace of Glenn Youngkin
  <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceGlennYoungkin .

  # Birthplace of an awardee from Vince Gilligan's list of awards and nominations
  OPTIONAL {
    ?award <http://dbpedia.org/property/nomination> <http://dbpedia.org/resource/Vince_Gilligan> .
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlaceAwardee .
  }

  # Birthplace of the American author referenced in ""El Deafo""
  OPTIONAL {
    <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/reference> ?reference .
    ?reference <http://www.wikidata.org/entity/P50> ?author . # Assuming P50 is the property for author
    ?author <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q30> . # Q30 represents ""United States""
    ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlaceAuthor .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,15,train,"Give me the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?show WHERE {
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""congress"")).
  ?award a <http://dbpedia.org/class/yago/Award_100000002>.
  ?show <http://dbpedia.org/ontology/recipient> ?award .
}
```",2,3,3,2,1,3,3,71,0,0,2196,0,0.0,0
158,20,train,"Give me the person decedent at Switzerland and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland#Administration> ?admin .
    ?person <http://dbpedia.org/ontology/nationality> ?admin .
  }
  
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
68,7,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/ontology/father> ?father .
  <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/ontology/father> ?father .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
198,26,train,Give me the force of the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?award ?force WHERE {
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/receiver> ?award .
  OPTIONAL { 
    ?award <http://dbpedia.org/property/force> ?force .
  }
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
159,55,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
SELECT ?writer ?successor WHERE {
  # Writer of ""Always the Love Songs""
  <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/ontology/writer> ?writer .

  # Successor of a commander in the Russo-Polish War (1654–1667)
  OPTIONAL { 
    ?war <http://dbpedia.org/property/name> ""Russo-Polish War (1654–1667)"" .
    ?commander <http://dbpedia.org/ontology/successor> ?successor .
    ?commander <http://dbpedia.org/ontology/commanderOfWar> ?war .
    ?successor <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Politician
    ?successor <http://www.wikidata.org/entity/P39> ?office . # Office holder
  }

  # Commander in a war that is both a television show and societal event
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/show> ?tvShow .
    ?war <http://dbpedia.org/ontology/event> ?societalEvent .
    ?commander <http://dbpedia.org/ontology/commanderOfWar> ?war .
    FILTER(?commander = <http://dbpedia.org/resource/Jean_Baptiste,_Comte_d'Arco>)
  }
}
```",6,10,7,2,3,3,3,71,0,2,1,0.0,0.0,0
213,11,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of Cat Country (novel).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?child ?birthPlace ?country WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> .
  ?child <http://dbpedia.org/property/politicalParty> ?party . # Assuming political party indicates a politician
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  OPTIONAL {
    <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?country .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
871,29,train,"Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Arthur_Stanley_(politician)> .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> .
  
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
    ?result <http://dbpedia.org/ontology/parent> ?child .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,26,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/William_Bayne> .
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Assuming Q482980 is the YAGO class for military conflict
  ?war rdf:type <http://dbpedia.org/class/yago/Event108067936> . # Assuming Q1656682 is the YAGO class for event
  ?war dbo:militaryForce ?result .
}
```",3,5,4,3,1,3,3,71,0,0,529,0,0.0,0
293,57,train,"Give me the party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/politicalAffiliation> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
  
  OPTIONAL { 
    ?actor <http://dbpedia.org/property/birthName> ""Ann Sothern""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?film <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> .
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?result <http://dbpedia.org/ontology/spouse> ?actor .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
158,14,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/nationality> ?nationality .
  ?administration <http://dbpedia.org/ontology/administration> ?nationality .
  ?administration <http://dbpedia.org/property/ruler> <http://dbpedia.org/resource/Alexander_II_of_Russia> .
  
  ?result <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Switzerland> .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
513,10,train,"Give me the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?party ?leader WHERE {
  <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/member> ?party .
  
  ?party rdf:type dbo:PoliticalParty ;
         owl:sameAs ?organisation .

  OPTIONAL { 
    ?party <http://dbpedia.org/property/partyLeader> ?leader .
  }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
668,8,train,Give me the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
628,1,train,Give me the person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,17,train,"Give me the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
SELECT ?artist ?birthName WHERE {
  ?artist a dbo:Artist .
  OPTIONAL { 
    ?artist <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> .
    ?artist <http://dbpedia.org/ontology/birthPlace> ?place .
    ?place <http://www.w3.org/2000/01/rdf-schema#label> ""Central Region, Ghana"" .
  }
  OPTIONAL { 
    ?artist foaf:name ?birthName .
  }
}
```",2,3,3,2,1,3,3,71,0,201867,1,0.0,0.0,0
159,0,train,Give me the successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
943,57,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandfather WHERE {
  ?naodFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Na%27od> .
  ?grandfather <http://dbpedia.org/ontology/father> ?naodFather .
  
  # Ensure the grandfather is royalty
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Check if the grandfather holds an office (assuming a property for office holder)
  OPTIONAL { 
    ?grandfather <http://dbpedia.org/property/officeHolder> ?office .
  }
  
  # Reference to alter ego of Lamont Cranston
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Lamont_Cranston> .
    ?grandfather <http://dbpedia.org/ontology/references> ?reference .
  }

  # Ensure the grandfather is a child of Dawit I
  ?grandfather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Dawit_I> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,12,train,Give me the force of William Tennant (Royal Navy officer) and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
SELECT ?force ?war WHERE {
  <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> <http://dbpedia.org/ontology/memberOf> ?force .
  
  OPTIONAL {
    <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,19,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?conflict <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict> .
  ?conflict <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?conflict <http://dbpedia.org/property/militaryForce> <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> .
  
  ?commander <http://dbpedia.org/ontology/commander> ?conflict .

  OPTIONAL {
    ?battle <http://dbpedia.org/property/militaryForce> ?commander .
    FILTER (?battle = <http://dbpedia.org/resource/Battle_of_Fort_Royal>)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
628,3,train,"Give me the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/member> ?member .
  
  # Ensure the member is an artist (general)
  ?member <http://dbpedia.org/property/occupation> ?v1 .
  FILTER EXISTS { 
    ?v1 <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Artist> .
  }
  
  # Ensure the member is a musical artist
  ?member <http://dbpedia.org/property/occupation> ?v2 .
  FILTER EXISTS { 
    ?v2 <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Musical_artist> .
  }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
756,46,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?manager WHERE {
  # Find the successor of the 2006–07 VfL Bochum season
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?successor .
  
  # Ensure the successor is a sports club, organization, and soccer club
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsClub108069068> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerClub108069068> .

  # Find a player associated with this successor
  ?player <http://dbpedia.org/ontology/team> ?successor .
  
  # Determine the manager of this player
  ?manager <http://dbpedia.org/property/coach> ?player .

  # Identify Theodor Heuss's administrative country
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/ontology/nationality> ?country .
  
  # Ensure the manager is native to this country
  ?manager <http://dbpedia.org/property/nativePlace> ?place .
  ?place <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108069068> .
  FILTER(?place = ?country)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
39,21,train,Give me the professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?profession .
  
  ?result <http://dbpedia.org/property/occupation> ?profession .
  
  OPTIONAL { 
    ?band <http://dbpedia.org/ontology/member> ?result .
    ?band <http://dbpedia.org/resource/Bob_Thompson_(musician)> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
628,19,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  ?artist <http://dbpedia.org/ontology/member> ?result .
  FILTER(?result = <http://dbpedia.org/resource/Ackquille_Jean_Pollard>)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,38,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/show> ?tvShow .
  ?war <http://dbpedia.org/property/eventType> ""societal event"" .
  
  ?war <http://dbpedia.org/ontology/commander> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Jean_Baptist_Comte_d'Arco> .
  }
  
  OPTIONAL {
    ?reference <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Always_the_Love_Songs> .
    ?result <http://dbpedia.org/ontology/reference> ?reference .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
23,11,train,Give me the party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?fatherParty WHERE {
  <http://dbpedia.org/resource/Sof%C3%ADa_Petro> dbo:parent ?father .
  ?father dbo:partyMembership ?fatherParty .
}
```",2,2,3,2,1,2,3,28,0,0,6,0,0.0,0
293,13,train,"Give me the spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v1 . }","```sparql
SELECT ?actor ?spouse WHERE {
  <http://dbpedia.org/resource/1000_Dollars_a_Minute> dbo:starring ?actor .
  ?actor dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
263,18,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
SELECT ?result WHERE {
  # Find parent of Mary Elphinstone, Lady Elphinstone
  <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> <http://dbpedia.org/ontology/birthParent> ?result .

  # Find children of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> .
    
    # Find parent of that child, which should match the result from above
    ?child <http://dbpedia.org/ontology/birthParent> ?result .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
756,58,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of Theodor Heuss.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
SELECT ?result WHERE {
  # Manager of VfL Bochum
  <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/teamManager> ?result .

  # Manager of a specific team season
  ?teamSeason <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?teamSeason <http://www.w3.org/2002/07/owl#sameAs> ?v1 .
  ?result <http://dbpedia.org/ontology/teamManager> ?teamSeason .

  # Person born on 1968-08-26 and is a sports manager
  ?person <http://dbpedia.org/property/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Sports_manager> .
  FILTER (?result = ?person)

  # Native of the administration country of Theodor Heuss
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/property/nationality> ?country .
  ?person <http://dbpedia.org/ontology/birthPlace> ?place .
  ?place <http://www.w3.org/2002/07/owl#sameAs> ?country .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
159,33,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?result WHERE {
  ?work <http://dbpedia.org/ontology/author> ?result .
  ?work <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/George_Ducas> .

  OPTIONAL { 
    <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
39,45,train,"Give me the professional in Singer and professional in  and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ""Bob Thompson"" .

  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?result <http://dbpedia.org/property/birthName> ""Bob Thompson"" .
  
  ?result <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Singer> .
  OPTIONAL { 
    ?result <http://dbpedia.org/property/profession> ?otherProfession .
  }
  OPTIONAL {
    ?band <http://dbpedia.org/ontology/member> ?result .
  }
}
```",5,6,6,3,3,3,3,71,0,0,3,0,0.0,0
905,25,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Find parent of Charles Martel of Anjou
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .

  # Find children of Béla IV who are royalty
  ?royalChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Find child of this royal child
  ?result <http://dbpedia.org/ontology/parent> ?royalChild .

  # Ensure the result matches the parent found in step 1
  FILTER (?parent = ?result)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Give me the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence a <http://dbpedia.org/class/yago/Country108069465> . # Assuming yago:Country is the class for countries
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
595,53,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?commander WHERE {
  ?disease <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/DiseasesAndDisorders100000000> .
  ?disease <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvents100000000> .

  ?war <http://dbpedia.org/ontology/disease> ?disease .
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  ?commander <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .

  OPTIONAL {
    <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?author .
    ?author <http://dbpedia.org/ontology/spouse> ?spouse .
    
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politicians100000000> .
    ?spouse <http://dbpedia.org/property/officeHolder> ?office .

    ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWorks100000000> .
    ?spouse <http://dbpedia.org/ontology/relatedTo> ?work .
  }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
263,20,train,"Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/placeOfBirth> ?v1 .
  ?v1 <http://www.w3.org/2000/01/rdf-schema#label> ""Middlesex"" .

  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Hon._Mary_Frances_Bowes-Lyon> .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,36,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of Uncle Murda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?awardNative WHERE {
  ?band <http://dbpedia.org/property/bandMember> <http://dbpedia.org/resource/Uncle_Murda> .
  ?band <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/New_York_(state)> .

  ?awardNative <http://dbpedia.org/ontology/nationality> ?nationality .
  FILTER(?nationality IN (<http://dbpedia.org/resource/Category:Regions_of_the_United_States>, 
                         <http://dbpedia.org/resource/Category:American_states>, 
                         <http://dbpedia.org/resource/Category:Settlements_in_the_United_States>))
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
119,9,train,"Who is the commander in the force, that is a television show and a military conflict, of Maria I of Portugal?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> .
  
  OPTIONAL {
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Maria_I_of_Portugal> .
    ?show <http://dbpedia.org/property/commander> ?result .
  }
}
```",2,4,3,2,1,3,2,20,0,0,75,0,0.0,0
158,15,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Russian Empire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:Countries> .

  ?result <http://dbpedia.org/ontology/deathPlace> ?birthPlace .
  
  OPTIONAL {
    ?result <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Russian_Empire> .
  }
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
119,50,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
SELECT ?result WHERE {
  # Tenant of the administration that is Spanish
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  
  # Citizen of Spain
  ?result <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q29> . # Q29 is the identifier for Spain
  
  # Tenant of the residence that is a country
  OPTIONAL {
    ?residence <http://dbpedia.org/ontology/country> ?country .
    ?result <http://dbpedia.org/ontology/residence> ?residence .
  }
}
```",5,8,6,3,2,3,3,71,0,0,23,0,0.0,0
513,15,train,Give me the residence of Doug Beattie and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/George_Hamilton_Cameron> <http://dbpedia.org/property/award> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?result .
  }
}
```",4,4,5,3,2,3,2,20,2,0,0,1.0,1.0,1.0
39,2,train,Give me the band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://purl.org/dc/terms/subject> ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""musician""))
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/memberOfBand> ?band .
  }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
492,20,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?salMineoDeathPlace ?colorMeDeadActor ?actorDeathPlace ?reedHowesDeathPlace WHERE {
  # Death place of Sal Mineo
  <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?salMineoDeathPlace .

  # Actor of Color Me Dead and their death place
  <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/ontology/starring> ?colorMeDeadActor .
  OPTIONAL { 
    ?colorMeDeadActor <http://dbpedia.org/ontology/deathPlace> ?actorDeathPlace .
  }

  # Death place of Reed Howes
  <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?reedHowesDeathPlace .
}
```",4,4,5,2,3,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
38,6,train,"Give me the author of Promise Me, Dad and author of Promises to Keep (Biden book).","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Promise_Me,_Dad> dbo:author ?result .
  <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> dbo:author ?result .
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
38,5,train,"Give me the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . },"```sparql
SELECT ?work WHERE {
  ?work a dbo:WrittenWork .
  ?work a owl:Thing . # Ensures it's classified under the broad category of ""Work""
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Joe_Biden> .
}
```",1,3,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
293,28,train,"Give me the party member of the ruling party in Central, Louisiana and person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Find individuals who are members of the ruling party in Central, Louisiana
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/politicalParty> ?party .
    ?party <http://dbpedia.org/property/currentRulingParty> ""Central, Louisiana""^^<http://www.w3.org/2001/XMLSchema#string> .
  }
  
  # Check if the person was born as Harriette Arlene Lake
  ?result <http://dbpedia.org/ontology/birthName> ""Harriette Arlene Lake"" .

  # Verify that this person is a spouse of Roger Pryor (actor)
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Roger_Pryor_(actor)> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
78,9,train,Give me the band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Alan_Parsons_Project> <http://dbpedia.org/ontology/member> ?result .
  OPTIONAL { 
    ?result <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Billy_Lyall> .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
687,20,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?result WHERE {
  # Find teams or clubs where Juan Carlos Molina played
  <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?team .
  
  # Identify actors of ""All or Nothing: Manchester City""
  <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Ensure the actor is both a soccer player and an athlete
  ?actor <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (
    EXISTS { ?actor <http://dbpedia.org/property/occupation> ""soccer player"" . }
    && EXISTS { ?actor <http://dbpedia.org/property/occupation> ""athlete"" . }
  )
  
  # Find players associated with this actor
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/team> ?team .
    ?result <http://dbpedia.org/ontology/team> ?team .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,38,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commanderOffice ?leaderOffice WHERE {
  # Office of the Commander in Central African Republic Civil War
  ?person <http://dbpedia.org/ontology/politician> _:a .
  ?person <http://dbpedia.org/property/officeHolder> ?commanderOffice .
  ?commanderOffice <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Central_African_Republic_Civil_War> .

  # Office of the Leader of Conservative Republican Party (Spain)
  ?leaderPerson <http://dbpedia.org/ontology/politician> _:b .
  ?leaderPerson <http://dbpedia.org/property/officeHolder> ?leaderOffice .
  ?leaderOffice <http://www.w3.org/2000/01/rdf-schema#label> ""Leader of the Conservative Republican Party (Spain)""@en .

}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
68,18,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Maximilian I's children
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> .
  UNION
  ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Maria_of_Burgundy> .

  # The child of Maximilian I who is a father to someone who is royalty and a child of Philip I
  ?result <http://dbpedia.org/ontology/father> ?grandchild .
  
  # Grandchild must be a child of Philip I
  ?grandchild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip_I_of_Castile> .
  UNION
  ?grandchild <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Joanna_of_Castile> .

  # Grandchild must be royalty
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,21,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of Pablo Aimar.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://purl.org/dc/terms/type> <http://dbpedia.org/resource/Athlete> .
  
  ?team <http://dbpedia.org/property/teamMember> ?person .
  ?team <http://dbpedia.org/property/teamMember> <http://dbpedia.org/resource/Pablo_Aimar> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
412,2,train,Give me the war of Konstantinos Ventiris.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Konstantinos_Ventiris> dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,10,0,0.0,0
103,54,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify television shows that are movies featuring Richard E. Grant
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> . # Assuming Movie is a type
  ?show <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Television_show> .

  # Step 2: Find actors from these shows
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  
  # Step 3: Determine the profession of an actor from ""Ab Kya Hoga"" who is also a politician
  OPTIONAL {
    ?abKyaHogaActor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Ab_Kya_Hoga> .
    ?abKyaHogaActor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician100000001> . # Assuming Politician is a type
    ?abKyaHogaActor <http://dbpedia.org/property/profession> ?profession .
  }
  
  # Step 4: Match this profession with other professionals
  ?actor <http://dbpedia.org/property/profession> ?profession .
}
```",6,8,7,3,3,3,3,71,0,0,13,0,0.0,0
723,2,train,Give me the reference to Nothing to Gein.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . }","```sparql
SELECT ?reference WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Nothing to Gein""@en .
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/wikiPageWikiLink> ?reference .
  }
}
```",1,1,2,1,1,3,2,20,0,27,1,0.0,0.0,0
103,27,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/basedOn> ?series .
  ?series <http://dbpedia.org/property/alterEgo> ?character .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/ComicsCharacters100000001> .
  
  OPTIONAL {
    ?professional <http://dbpedia.org/property/occupation> ?v1 .
    ?character <http://dbpedia.org/ontology/creator> ?professional .
  }
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
628,48,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify GS9 member who is an artist and musical artist
  ?gs9Member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  ?gs9Member <http://dbpedia.org/property/occupation> ?artistOccupation .
  
  FILTER (
    (CONTAINS(LCASE(?artistOccupation), ""artist"") && CONTAINS(LCASE(?artistOccupation), ""musical artist""))
  )
  
  # Step 2: Find associated musical artist
  ?gs9Member <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  
  # Step 3: Identify band member of the associated musical artist
  ?bandMember <http://dbpedia.org/ontology/member> ?associatedArtist .

  # Step 4: Find award related to Coro de la Pontificia Universidad Católica de Puerto Rico that is a region, American state, and settlement
  ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> .
  
  ?award <http://www.wikidata.org/entity/P31> ?awardType .
  FILTER (
    (CONTAINS(LCASE(?awardType), ""region"") && CONTAINS(LCASE(?awardType), ""american state"") && CONTAINS(LCASE(?awardType), ""settlement""))
  )
  
  # Step 5: Find native of the award's region
  ?result <http://dbpedia.org/ontology/nativePlace> ?award .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
213,3,train,"Who is the child, that is a politician, of Chiang Ching-kuo?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Chiang_Ching-kuo> <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Q82955 is the Wikidata identifier for ""politician""
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,41,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  # Producer of Cora Sue Collins' claim to fame
  ?work <http://dbpedia.org/ontology/claimToFame> <http://dbpedia.org/resource/Cora_Sue_Collins> .
  ?work <http://dbpedia.org/ontology/producer> ?result .

  # Producer of A Star Is Born (1937 film)
  OPTIONAL {
    <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result .
  }

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    ?result <http://dbpedia.org/property/occupation> ?v1 .
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,45,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/George_Ducas> .
  ?result <http://dbpedia.org/property/war> ?war .
  
  ?war <http://dbpedia.org/ontology/show> ?show .
  ?war <http://dbpedia.org/ontology/event> ?event .

  ?result <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/Battle_of_Vienna> .
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,27,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?owner .
  
  ?war <http://dbpedia.org/property/warOfOwner> ?owner .
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Qxxxxx> . # QID for ""disease""
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Qyyyyy> . # QID for ""societal event""

  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```

Note: Replace `Qxxxxx` and `Qyyyyy` with the actual Wikidata identifiers for ""disease"" and ""societal event.""",3,5,4,3,1,3,3,71,0,0,18,0,0.0,0
737,26,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?greatGreatGrandchild WHERE {
  # Step 1: Identify Alexander of Württemberg
  <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 2: Find his children's children (grandchildren)
  ?child <http://dbpedia.org/ontology/child> ?grandChild .

  # Step 3: Find grandchildren's children (great-grandchildren)
  ?grandChild <http://dbpedia.org/ontology/child> ?greatGrandChild .

  # Step 4: Find great-grandchildren's children (great-great-grandchildren)
  ?greatGrandChild <http://dbpedia.org/ontology/child> ?greatGreatGrandchild .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
472,16,train,Give me the territory administered from Copenhagen and administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?territory WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeCenter> <http://dbpedia.org/resource/Copenhagen> .
  
  OPTIONAL { 
    ?mayor <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Duchy_of_Schleswig> .
    ?territory <http://dbpedia.org/ontology/administrativeUnit> ?mayor .
  }
}
```",3,3,4,2,2,2,3,28,0,3,1,0.0,0.0,0
468,11,train,Give me the reference to the real name of Peter IV of Aragon and child of Alfonso IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
SELECT ?realName WHERE {
  <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/realName> ?realName .
  OPTIONAL { 
    <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
297,2,train,"Give me the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Little_Hat_Jones> dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(?birthPlace AS ?country)
}
```",1,2,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
782,60,train,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?band ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> ?band .
  
  OPTIONAL {
    ?nickCurran <http://www.wikidata.org/entity/P735> ?realName .
    ?realName <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
89,23,train,Give me the child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
905,26,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  
  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/father> ?spouse .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    ?result <http://dbpedia.org/ontology/parent> ?father .
  }
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
375,15,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18 and parent of Kate Dimbleby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?author WHERE {
  ?person <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^xsd:date .
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Artist
  ?person <http://www.wikidata.org/entity/P21> <http://www.wikidata.org/entity/Q33999> . # Musical artist
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kate_Dimbleby> .
  
  ?movie <http://dbpedia.org/ontology/author> ?person .
  ?movie a <http://dbpedia.org/class/yago/Movie104069976> . # Assuming this class represents both work and television show
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
816,32,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
SELECT ?movie WHERE {
  ?movie a <http://dbpedia.org/ontology/Film> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CreativeWork108069415> . # Assuming this is the class for ""work""
  
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
  
  OPTIONAL {
    ?photographer a <http://dbpedia.org/class/yago/Photographer108069415> . # Assuming this is the class for ""Photographer""
    ?parent <http://dbpedia.org/ontology/child> ?photographer .
    
    ?actor <http://dbpedia.org/ontology/starring> ?movie .
    ?actor <http://dbpedia.org/ontology/birthName> ?parent .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
468,2,train,"Give me the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
353,8,train,Who is the child of Alfonso VI of León and Castile?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,2,3,0.0,0.0,0
399,7,train,Give me the professional in Singer and band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emilia_Yancheva_Valeva> <http://dbpedia.org/property/profession> ""Singer"" .
  <http://dbpedia.org/resource/Emilia_Yancheva_Valeva> <http://dbpedia.org/ontology/memberOfBand> ?result .
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
492,2,train,Give me the death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Sal_Mineo> dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
198,8,train,"Give me the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Settlement> .
  OPTIONAL {
    ?birthplace <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
706,5,train,Who is the actor of Akaler Shandhaney?,SELECT ?result WHERE { <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,2,20,4,0,5,1.0,0.4444444444444444,0.6153846153846153
595,10,train,Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result .
  
  OPTIONAL { 
    ?event <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
    ?event <http://dbpedia.org/property/commander> ?result .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
295,13,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Steven_Kapur> <http://dbpedia.org/ontology/artist> ?trueSelf .
  ?trueSelf <http://purl.org/dc/dcmitype/MusicComposition> ?musicalWork .
  ?musicalWork <http://dbpedia.org/property/writer> ?writer .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
353,56,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of William II of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Constance of Burgundy's royal spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find their children and then those children's children
  ?child1 <http://dbpedia.org/ontology/spouse> ?spouse .
  ?grandChild <http://dbpedia.org/ontology/parent> ?child1 .

  # Step 3: Ensure this person is the father of William II of Sicily
  ?result <http://dbpedia.org/ontology/familyName> ?grandChild .
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/William_II_of_Sicily> .

  # Step 4: Ensure this person is a child of Roger III's parent
  ?parentOfRoger <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  ?result <http://dbpedia.org/ontology/parent> ?parentOfRoger .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,44,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in Photographer and parent of the child of Allan Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/parent> ?actor .
    ?child <http://dbpedia.org/property/profession> ""Photographer"" .
  }
  
  OPTIONAL {
    ?grandchild <http://dbpedia.org/ontology/parent> ?child .
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Allan_Arbus> .
  }
}
```",5,5,6,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
38,7,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?result WHERE {
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Joe_Biden> .
  ?work rdf:type <http://www.w3.org/2002/07/owl#Thing> . # Ensures it's a work
  ?work rdf:type <http://dbpedia.org/class/yago/WrittenWork108069365> . # Written Work
  ?work rdf:type <http://dbpedia.org/ontology/Book> . # Book
  OPTIONAL { 
    ?work dbo:country <http://dbpedia.org/resource/United_States> .
  }
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
731,3,train,Who is the awardee of Commander of the Order of the British Empire?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . },"```sparql
SELECT ?result WHERE {
  ?result dbo:award <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> .
}
```",1,1,2,1,1,3,2,20,838,63,15,0.93007769145394,0.9824150058616647,0.9555302166476626
159,8,train,"Give me the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?war WHERE {
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Wars_as_television_shows> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Societal_events> .
  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jean_Baptiste_Comte_d'Arco> .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2006/vcard/ns#adr> ?address .
  ?address <http://www.w3.org/2006/vcard/ns#country-name> ?country .
  
  OPTIONAL {
    ?residence <http://dbpedia.org/property/tenant> ?result .
  }
}
```",2,3,3,2,1,3,3,71,0,0,216,0,0.0,0
311,6,train,Give me the associated musical artist of Filthy Friends and band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Filthy_Friends> .
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mark_Eitzel> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,39,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?authorBirthPlace ?youngkinBirthPlace WHERE {
  # Find the birthplace of Cece Bell, author of El Deafo
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://www.w3.org/2000/01/rdf-schema#label> ""Cece Bell""@en .
  ?author <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .
  OPTIONAL { 
    ?author <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  }

  # Find the birthplace of Glenn Youngkin
  <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?youngkinBirthPlace .
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
246,8,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
39,42,train,"Give me the professional in  and professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  # Find professionals in the same field as Sam Concepcion
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/ontology/profession> ?profession .
  
  # Match individuals with the same profession
  ?result <http://dbpedia.org/ontology/profession> ?profession .

  # Check if they are a band member of Robert Lamar Thompson (Bobby V)
  OPTIONAL {
    ?bobbyV <http://dbpedia.org/resource/Bobby_V> .
    ?bobbyV <http://www.w3.org/2000/01/rdf-schema#label> ""Robert Lamar Thompson""@en .
    ?result <http://dbpedia.org/property/memberOf> ?bobbyV .
  }
}
```",5,6,6,2,3,3,3,71,0,0,4,0,0.0,0
213,13,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> .
  ?child <http://dbpedia.org/ontology/parent> ?person .
  ?child <http://dbpedia.org/property/politicalParty> ?party . # Assuming political party indicates a politician
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
258,4,train,Give me the birth name of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
59,1,train,Give me the manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/currentManager> ?manager .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
375,21,train,Give me the entity in Japan and war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  # Wars involving Toyotomi Hidenaga
  <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?war .
  
  # Child of Toyotomi Hideyoshi
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Toyotomi_Hideyoshi> .

  # Wars involving the child of Toyotomi Hideyoshi
  ?child <http://dbpedia.org/ontology/battle> ?war .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
756,18,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
SELECT ?result WHERE {
  # Manager of the 2020–21 SBV Vitesse season
  <http://dbpedia.org/resource/2020%E2%80%9321_SBV_Vitesse_season> <http://dbpedia.org/ontology/teamManager> ?result .
  
  # Native of West Germany
  OPTIONAL {
    ?result <http://www.w3.org/ns/prov#wasDerivedFrom> <http://dbpedia.org/resource/West_Germany> .
  }
  
  # Manager of VfL Bochum
  OPTIONAL {
    <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/teamManager> ?result .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
159,53,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander ?successor WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  ?commander rdfs:label ""Jean Baptist, Comte d'Arco""@en .

  OPTIONAL {
    ?successor <http://dbpedia.org/ontology/successor> ?commander .
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/OfficeHolder108069068> .
  }

  OPTIONAL {
    ?force <http://dbpedia.org/ontology/force> ?war .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Event108069068> .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
    ?force rdfs:label ""Michał Kazimierz Pac""@en .
  }

  OPTIONAL {
    ?entity <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/George_Ducas> .
  }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
419,3,train,"Who is the awardee, that is australian and a scientist, of Australian Laureate Fellowship?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . }","```sparql
SELECT ?result WHERE {
  ?award <http://purl.org/dc/terms/title> ""Australian Laureate Fellowship""@en .
  ?award <http://dbpedia.org/ontology/receipient> ?result .
  
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""australian"")) .

  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""scientist""))
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
557,57,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?result WHERE {
  # Producer of Janet Gaynor's claim to fame (movie and work)
  ?claimToFame <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Janet_Gaynor> .
  ?claimToFame a <http://dbpedia.org/ontology/Film> ; # Ensures it is a movie
              a <http://www.w3.org/2002/07/owl#Thing> . # Ensures it is a work (generic class)
  
  ?claimToFame <http://dbpedia.org/property/producers> ?result .

  # Producer of the actor of Johnny Doughboy's claim to fame (work)
  OPTIONAL {
    <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
    ?claimToFame2 <http://dbpedia.org/ontology/starring> ?actor .
    ?claimToFame2 a <http://www.w3.org/2002/07/owl#Thing> . # Ensures it is a work
    ?claimToFame2 <http://dbpedia.org/property/producers> ?result .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,1,train,Give me the father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,1,train,Give me the spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Janusz_Kami%C5%84ski> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
756,53,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
SELECT ?manager WHERE {
  # Native of West Germany
  ?manager <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> .
  
  # Manager of the team associated with Thomas Letsch
  ?team <http://dbpedia.org/ontology/teamManager> ?manager ;
        <http://dbpedia.org/property/season> ?letschSeason .
  ?letschSeason <http://dbpedia.org/ontology/managedBy> <http://dbpedia.org/resource/Thomas_Letsch> .

  # Manager of the player in a sports club and soccer club
  ?player <http://dbpedia.org/ontology/teamManager> ?manager ;
          <http://dbpedia.org/property/memberOf> ?club .
  ?club rdf:type/rdfs:subClassOf* <http://dbpedia.org/resource/Sports_club> ,
                               <http://dbpedia.org/resource/Soccer_club> .

  # Manager in the successor of 2006–07 VfL Bochum season
  OPTIONAL {
    <http://dbpedia.org/resource/2007%E2%80%9308_VfL_Bochum_season> <http://dbpedia.org/ontology/teamManager> ?manager .
  }
}
```",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
80,34,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
SELECT ?actor WHERE {
  # Identify the author of Smartbomb
  <http://dbpedia.org/resource/Smartbomb_(book)> <http://purl.org/dc/terms/creator> ?author .
  
  # Find actors in movies
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  
  # Check if these actors have a professional occupation related to the author
  ?actor <http://dbpedia.org/property/occupation> ?profession .
  OPTIONAL { 
    ?author <http://dbpedia.org/property/occupation> ?relatedProfession .
    FILTER(?profession = ?relatedProfession)
  }
}
```",4,4,5,3,2,3,3,71,0,0,7802,0,0.0,0
737,45,train,"Give me the predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
SELECT DISTINCT ?result WHERE {
  # Predecessor of Carl, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .
  
  # Child of Albrecht, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .

  OPTIONAL {
    # Parent of Archduchess Margarete Sophie of Austria
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
    
    # Grandchild who is royalty
    ?grandchild <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> ?parent .
    ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
    
    # Ensure the result is a child of this grandchild
    ?result <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> ?grandchild .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
68,12,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  ?catherine <http://dbpedia.org/ontology/father> ?result .
  ?isabella <http://dbpedia.org/ontology/father> ?result .
  
  FILTER(?catherine = <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal>)
  FILTER(?isabella = <http://dbpedia.org/resource/Isabella_of_Austria_(1501-1526)>)
  
  ?maximilian <http://dbpedia.org/ontology/child> ?result .
  FILTER(?maximilian = <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor>)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
941,0,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,2,20,0,2,5,0.0,0.0,0
737,33,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Find predecessor of Carl, Duke of Württemberg
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .

  # Trace three generations from Alexander of Württemberg (1804-1881)
  ?child1 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)> .
  ?child2 <http://dbpedia.org/ontology/father> ?child1 .
  ?result <http://dbpedia.org/ontology/father> ?child2 .

  # Ensure the result is the same person
  FILTER (?predecessor = ?result)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
941,15,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify children of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?ferdinandChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> .
  
  # Step 2: Find the parent who is royalty
  ?ferdinandChild <http://dbpedia.org/ontology/mother> ?parent ;
                  <http://dbpedia.org/ontology/father> ?parent .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Step 3: Check if this royal parent is married to Prince Augustus William of Prussia
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> .
  
  # Step 4: Identify the child of this royal parent
  ?child <http://dbpedia.org/ontology/father> ?parent ;
         <http://dbpedia.org/ontology/mother> ?parent .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
737,10,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,34,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?artist WHERE {
  # Find the person born as ""Pacely"" (Tupac Shakur)
  <http://dbpedia.org/resource/Tupac_Shakur> <http://www.w3.org/2000/01/rdf-schema#label> ""Lesane Parish Crooks""@en .
  
  # Find Darryl Paa Kwesi Bannerman-Martin (Stormzy)
  <http://dbpedia.org/resource/Stormzy> <http://xmlns.com/foaf/0.1/name> ""Darryl Paa Kwesi Bannerman-Martin""@en .

  # Identify associated musical artists for Tupac Shakur
  OPTIONAL { 
    <http://dbpedia.org/resource/Tupac_Shakur> <http://dbpedia.org/ontology/musicArtist> ?artist .
  }

  # Identify associated musical artists for Stormzy
  OPTIONAL {
    <http://dbpedia.org/resource/Stormzy> <http://dbpedia.org/ontology/musicArtist> ?artist .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
756,16,train,"Give me the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?administration WHERE {
  ?leader <http://dbpedia.org/ontology/chancellor> <http://dbpedia.org/resource/West_Germany> .
  ?leader <http://dbpedia.org/property/government> ?administration .
  ?administration <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,0,train,Give me the player in Juan Carlos Molina (footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?position WHERE {
  <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Football> .
  <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/property/position> ?position .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
816,56,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
SELECT ?actor WHERE {
  # Actor in a movie (work) with Herschel Bernardi
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .

  # Parent of Amy Arbus
  ?actor <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Amy_Arbus> .

  # Mariclare Costello's spouse and their child
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  
  # Actor is parent of the child of Mariclare Costello's spouse
  ?actor <http://dbpedia.org/ontology/parent> ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,6,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> .
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
386,6,train,Give me the war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
SELECT ?war ?entity WHERE {
  <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/war> ?war .
  
  OPTIONAL { 
    ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Russian_Empire> .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
203,0,train,Give me the commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,48,0,0,1.0,1.0,1.0
80,42,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
SELECT ?result WHERE {
  # Professional involvement with The Shadow's alter ego
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  
  # Actor in ATL (film)
  <http://dbpedia.org/resource/ATL_(2006_film)> <http://dbpedia.org/ontology/starring> ?result .

  # Actor in another movie
  ?movie <http://dbpedia.org/ontology/starring> ?result .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
609,48,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Part 1: Birth place of Vince Gilligan's awardee
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .

  # Part 2: Birth place of the author of El Deafo
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?author .
  ?author <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
225,2,train,Give me the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
SELECT ?timeZone WHERE {
  <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?timeZone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
80,54,train,"Give me the professional in  and actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v3 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Find movies with T.I. and get other actors
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/T.I.> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  UNION

  # Find songs or musical works by T.I.
  ?song <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/T.I.> ;
        a <http://dbpedia.org/ontology/Song> .
  
  # Get albums containing these songs
  ?album <http://dbpedia.org/property/tracks> ?song .

  # Find actors associated with the album (e.g., music videos)
  OPTIONAL {
    ?album <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
557,10,train,Give me the professional in  and producer of A Star Is Born (1937 film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/profession> ?v1 .
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,22,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
SELECT ?result WHERE {
  # Find William Gayner's birthplace that is both a region and a country
  <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  # Ensure the birthplace is both a region and a country
  ?region rdf:type <http://dbpedia.org/class/yago/YagoRegion108930848> .
  ?country rdf:type <http://dbpedia.org/ontology/Country> .

  # Find the parent of Hon. Mary Frances Bowes-Lyon
  ?parent <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Hon._Mary_Frances_Bowes-Lyon> .

  # Match the native of William Gayner's birthplace with the parent
  BIND(?parent AS ?result)
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
203,36,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  ?person <http://dbpedia.org/property/commanderInChief> <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> .

  ?event <http://dbpedia.org/ontology/event> ?person .
  ?event <http://dbpedia.org/ontology/societalEvent> [] .
  
  ?event <http://dbpedia.org/property/militaryForce> ?result .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
557,33,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL { 
    ?actor <http://dbpedia.org/property/famousFor> ?work .
    ?work <http://dbpedia.org/ontology/producer> ?result .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,3,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
609,11,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
159,11,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?commander ?successor WHERE {
  ?commander <http://dbpedia.org/ontology/successor> ?successor .
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> .
  ?commander <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is the property for holding an office
  ?commander <http://www.wikidata.org/entity/P21> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 represents ""politician""
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
103,18,train,Give me the professional in Actor and professional in  and actor of Dispatches from Elsewhere.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ""Actor"" .
  OPTIONAL { 
    ?result <http://dbpedia.org/property/occupation> ?v3 .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
375,10,train,Give me the war of the person born as Koichirō.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?person ?war WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Koichirō""@en .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/war> ?war .
  }
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
782,17,train,"Give me the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Nick Curran"" .
  ?person dbo:birthDate ?date .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
609,60,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
SELECT ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Birthplace of Vince Gilligan's awardee
  ?award <http://dbpedia.org/ontology/receipient> ?person .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/AwardRecipient108069068> .
  ?person <http://dbpedia.org/property/awardedTo> <http://dbpedia.org/resource/Vince_Gilligan> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .

  # Birthplace of an American author referenced in ""El Deafo""
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/El_Deafo> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/AmericanWriter1000001> .
  ?reference <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
293,19,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/memberOf> ?party .
    ?party <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Central,_Louisiana> .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
628,13,train,Give me the person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?person != <http://dbpedia.org/resource/Bobby_Shmurda>)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
38,9,train,"Give me the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
SELECT ?work WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> .
  ?person <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is the property for office holder
  ?person <http://www.wikidata.org/entity/P21> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 represents ""politician""
  
  ?work <http://dbpedia.org/ontology/author> ?person .
  ?work a <http://dbpedia.org/class/yago/WrittenWork108069068> . # Written Work
  ?work a <http://dbpedia.org/class/yago/Book110759968> . # Book
  ?work <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
756,20,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  # Find the birthplace of Theodor Heuss, which should be a country
  <http://dbpedia.org/resource/Theodor_Heuss> dbo:birthPlace ?country .
  
  # Ensure that this place is indeed a country
  ?country rdf:type dbo:Country .

  # Find individuals who are native to the same country as Theodor Heuss's birthplace
  ?result dbo:nationality ?country .

  # Check if they have been a manager of VfL Bochum
  ?result dbo:manager <http://dbpedia.org/resource/VfL_Bochum> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
140,14,train,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/John_McDermott_(artist)> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  
  FILTER (isBlank(?deathPlace) || ?deathPlace != """")
  
  ?deathPlace a <http://www.w3.org/2002/07/owl#Thing> . # Ensures it's a settlement
  
  ?party <http://dbpedia.org/ontology/rulingParty> ?deathPlace .
  ?party a <http://dbpedia.org/ontology/politicalParty>, <http://www.w3.org/2002/07/owl#Thing> . # Political party and organization

  ?result <http://dbpedia.org/property/memberOf> ?party .
}
```",3,6,4,3,1,3,2,20,0,0,21486,0,0.0,0
943,45,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?grandfather WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Dawit_I> .

  ?parent <http://dbpedia.org/ontology/birthChild> ?child .
  ?grandfather <http://dbpedia.org/ontology/birthChild> ?parent .

  # Check if the grandfather is royalty
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Check if the grandfather was an office holder
  OPTIONAL { 
    ?officeHolder <http://dbpedia.org/ontology/officeHolder> ?grandfather .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,10,train,Give me the player in Juan Carlos Molina (footballer) and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
SELECT ?player WHERE {
  # Find the team(s) associated with Pablo Aimar
  <http://dbpedia.org/resource/Pablo_Aimar> <http://dbpedia.org/ontology/team> ?team .
  
  # Find players who have played in the same team as Juan Carlos Molina
  OPTIONAL { 
    <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/playerInTeam> ?team .
    ?player <http://dbpedia.org/ontology/playerInTeam> ?team .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
419,2,train,Give me the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Yandamuri_Veerendranath> dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,2,2,9,3,0,0,1.0,1.0,1.0
905,51,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Charles I of Hungary's father and his parent
  <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?parent <http://dbpedia.org/ontology/child> ?father .

  # Predecessor of Stephen V and his royal descendant
  OPTIONAL {
    ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
    ?royalChild <http://dbpedia.org/ontology/father> ?predecessor .
    ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/parent> ?royalChild .
  }

  FILTER (?parent = ?result)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
297,3,train,Give me the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
SELECT ?office ?administration WHERE {
  <http://dbpedia.org/resource/Brian_Kemp> <http://dbpedia.org/ontology/officeHolder> ?office .
  OPTIONAL { 
    ?office <http://dbpedia.org/property/administration> ?administration .
  }
}
```",1,1,2,1,1,2,2,9,0,0,19,0,0.0,0
68,21,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Child of Maximilian I
  ?result <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> .
  
  # Father of Isabella of Austria
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Isabella_of_Austria> .

  # Child that is royalty and related to Philip I of Castile
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> ?result .
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
    ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Philip_I_of_Castile> .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
39,22,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Robert Lamar Thompson"" .
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""singer""))
  
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
203,25,train,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
SELECT ?result WHERE {
  # Military force of Battle of Fort Royal
  <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/ontology/participant> ?result .

  UNION

  # Military force of an event and societal event involving Robert Calder
  ?event <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""robert calder"")) .
  ?event a <http://dbpedia.org/class/yago/YAGOEvent104930848> . # Assuming YAGOEvent is the class for events
  ?event a <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/ontology/participant> ?result .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,20,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT DISTINCT ?result WHERE {
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .
  
  ?child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
  ?result <http://dbpedia.org/ontology/parent> ?child1 .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
80,12,train,Give me the actor of ATL (film) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
}
```",2,2,3,1,2,3,3,71,4,4,0,0.5,1.0,0.6666666666666666
595,25,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result .
  
  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/war> ?v1 .
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11173> . # Assuming Q11173 is the identifier for ""disease""
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11070> . # Assuming Q11070 is the identifier for ""societal event""
    
    ?war <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/United_States_Navy> .
    ?war <http://dbpedia.org/ontology/commander> ?result .
  }
}
```",3,5,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
39,43,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?result WHERE {
  ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?character <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Comics character
  ?character <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q33999> . # Fictional character

  ?alterEgo <http://dbpedia.org/ontology/allegedAlterEgo> ?character .
  ?result <http://dbpedia.org/ontology/member> ?band .
  ?band <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Bob_Thompson_(musician)> .

  ?result <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Singer> .
}
```",5,7,6,3,3,3,3,71,0,0,3,0,0.0,0
361,11,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?result WHERE {
  ?album a <http://dbpedia.org/ontology/Album> ;
         a <http://dbpedia.org/ontology/Film> ;
         a <http://www.w3.org/2002/07/owl#Thing> ; # Assuming 'Work' is represented by owl:Thing
         <http://dbpedia.org/resource/Lasso_the_Moon> ?album .

  OPTIONAL {
    ?album <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
347,33,train,Give me the commander in Thirty Years' War and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?result WHERE {
  ?result <http://dbpedia.org/ontology/commander> ?war .
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ""Thirty Years' War""@en .

  OPTIONAL {
    <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/father> ?result .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
595,16,train,"Give me the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://dbpedia.org/property/author> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?person <http://dbpedia.org/ontology/profession> ?profession1 .
  ?person <http://dbpedia.org/ontology/profession> ?profession2 .
  
  FILTER (
    (?profession1 = <http://dbpedia.org/resource/Politician> || ?profession1 = <http://dbpedia.org/resource/Office_holder>) &&
    (?profession2 = <http://dbpedia.org/resource/Politician> || ?profession2 = <http://dbpedia.org/resource/Office_holder>)
  )
  
  ?result <http://dbpedia.org/ontology/author> ?person .
  ?result a <http://dbpedia.org/class/yago/WrittenWork108069068> . # Written work
  ?result a <http://dbpedia.org/class/yago/Book106936786> .         # Book
  ?result a <http://www.w3.org/2002/07/owl#Thing> .                 # Work (general)
}
```",2,7,3,2,1,3,3,71,0,0,10,0,0.0,0
80,58,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Actor in Shelby Oaks
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .

  # Actor associated with the album of ""What You Know"" by T.I.
  OPTIONAL { 
    ?album <http://dbpedia.org/property/contributor> ?result .
    ?album <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/What_You_Know_(T.I._song)> .
  }

  # Professional involvement with the alter ego of ""The Golden Master""
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",6,6,7,3,3,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
731,10,train,"Who is the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse?","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> a dbo:SocietalEvent .
  <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> a dbo:MilitaryConflict .
  <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> dbo:commander ?result .
}
```",2,4,3,2,1,3,2,20,6,0,0,1.0,1.0,1.0
414,13,train,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?show WHERE {
  <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/ontology/receiver> ?award .
  
  ?award <http://dbpedia.org/ontology/presenter> ?host .
  ?host <http://dbpedia.org/property/affiliation> ?institution .
  ?institution a <http://dbpedia.org/class/yago/EducationalInstitution108069068> .

  ?show <http://dbpedia.org/ontology/presenter> ?host .
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
89,34,train,Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Predecessor of Myat Hpone Pyo
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .

  # Child of the parent of the child of Minye Kyawswa
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?grandParent <http://dbpedia.org/ontology/parent> ?child .
  ?result <http://dbpedia.org/ontology/parent> ?grandParent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
293,6,train,"Give me the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
143,9,train,"Give me the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?result <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110769069>.
  ?movie <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Afeez_Oyetoro>.
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
668,32,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Get Rod Argent's profession
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/profession> ?profession .

  # Find individuals with the same profession as Rod Argent
  ?person <http://dbpedia.org/property/profession> ?profession .
  
  # Ensure this person is associated musically with Stonebwoy (Elorm Kabu Amenyah)
  OPTIONAL {
    ?association <http://dbpedia.org/ontology/musicArtist> ?person .
    ?association <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/Stonebwoy> .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
633,5,train,Give me the father of Dorothea of Lorraine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
782,6,train,Give me the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
SELECT ?member WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Eric_Clapton> .
  ?band <http://dbpedia.org/ontology/member> ?member .
  FILTER(?member != <http://dbpedia.org/resource/Eric_Clapton>)
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
668,36,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?result WHERE {
  # Find associated musical artist of $pacely
  ?entity <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/$pacely> .
  
  # Find person born as birth name of native artist from Central Region, Ghana
  ?artist <http://www.w3.org/2000/01/rdf-schema#label> ""Central Region""@en ;
          <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> .
  
  ?artist <http://dbpedia.org/property/birthName> ?birthName .
  ?result <http://dbpedia.org/property/birthName> ?birthName .

  # Ensure the result is the same entity
  FILTER(?entity = ?result)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
87,17,train,Give me the actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL {
    ?nominee <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> .
    ?actor <http://dbpedia.org/ontology/spouse> ?nominee .
  }
}
```",3,3,4,2,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
87,14,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
SELECT ?result WHERE {
  # Find the spouse of an awardee related to Janusz Kamiński
  ?awardee <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Ensure the awardee is linked to Janusz Kamiński's awards or nominations
  ?awardList dbo:recipient ?awardee .
  ?awardList rdfs:label ""List of awards and nominations received by Janusz Kamiński""@en .

  # Find actors in Paradise (2013 film)
  <http://dbpedia.org/resource/Paradise_(2013_film)> dbo:starring ?actor .
  
  # Ensure the spouse is also an actor in Paradise
  FILTER (?spouse = ?actor)

  BIND(?spouse AS ?result)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
198,41,train,"Give me the entity in Charleston, South Carolina and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
  
  OPTIONAL { 
    ?medalOfHonorRecipient <http://dbpedia.org/property/awardedMedal> <http://dbpedia.org/resource/Medal_of_Honor> .
    ?medalOfHonorRecipient <http://dbpedia.org/property/war> ?war .
    ?medalOfHonorRecipient = ?result .
  }
  
  OPTIONAL { 
    ?gillmoreAwardee <http://dbpedia.org/property/awardedMedal> <http://dbpedia.org/resource/Gillmore_Medal> .
    ?gillmoreAwardee <http://dbpedia.org/ontology/memberOf> ?force .
    ?gillmoreAwardee = ?result .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
731,15,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?force ?war WHERE {
  # Part 1: Force of Edmund Hakewill-Smith's award
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Edmund_Hakewill-Smith> .
  ?award <http://dbpedia.org/property/militaryForce> ?force .

  # Part 2: War of Tom Phillips (Royal Navy officer)
  OPTIONAL {
    <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/war> ?war .
  }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
419,1,train,Give me the alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,4,0,0,1.0,1.0,1.0
375,3,train,Give me the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Yamaza_Enjir%C5%8D> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
687,4,train,"Give me the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person a <http://dbpedia.org/ontology/Athlete> .
}
```",1,2,2,1,1,3,3,71,10,0,0,1.0,1.0,1.0
58,8,train,Give me the producer of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
# Unable to generate a valid query due to missing movie title.
```",2,2,3,2,1,3,2,20,0,0,10672,0,0.0,0
943,9,train,Give me the reference to  and child of Dawit I.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
SELECT ?child ?reference WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Dawit_I> .
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/wikiPageWikiLink> ?reference .
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
769,14,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
SELECT ?player WHERE {
  ?org <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Hong_Kong_C> .
  ?org a <http://dbpedia.org/class/yago/SportsClub108069415> ;
       a <http://dbpedia.org/class/yago/SportsTeam108069416> ;
       a <http://dbpedia.org/class/yago/SoccerClub108069417> .

  ?manager <http://dbpedia.org/ontology/sportsManager> ?org .
  ?manager <http://dbpedia.org/ontology/teamManager> ?org .
  
  ?player <http://dbpedia.org/ontology/playerForTeam> ?team .
  ?team <http://dbpedia.org/ontology/coach> ?manager .
}
```",3,9,4,3,1,3,2,20,0,0,4,0,0.0,0
80,15,train,Give me the movie with the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?movie WHERE {
  ?author <http://dbpedia.org/property/book> <http://dbpedia.org/resource/Smartbomb_(book)> .
  
  OPTIONAL { 
    ?movie <http://dbpedia.org/ontology/starring> ?author .
  }
  UNION
  OPTIONAL { 
    ?movie <http://dbpedia.org/ontology/director> ?author .
  }
  UNION
  OPTIONAL { 
    ?movie <http://dbpedia.org/ontology/writer> ?author .
  }
}
```",2,2,3,2,1,3,3,71,0,0,39790,0,0.0,0
468,3,train,Give me the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?realName WHERE {
  <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/birthName> ?realName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie ?author WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:TelevisionShow .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Vera_Lynn> .
  ?movie <http://dbpedia.org/property/author> ?author .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
737,52,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify spouse of Archduchess Helena who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find their child who is royalty
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Determine the predecessor of this child
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  # Step 4: Ensure this person is a child of Archduchess Margarete Sophie
  ?result <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  
  # Step 5: Confirm they are also a grandchild of Duke Philipp
  ?grandparent <http://dbpedia.org/ontology/birthChild> ?result .
  ?grandparent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> .

  # Ensure the predecessor is the same as the result
  FILTER (?predecessor = ?result)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
78,21,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  # Find the associated musical artists of Stuart Tosh
  <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
  
  # Find the associated musical artists of Billy Lyall
  <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .

  # Ensure the artist is common to both Stuart Tosh and Billy Lyall
  FILTER (?artist1 = ?artist2)

  # Find associated musical artists of David Paton
  <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist3 .

  # Ensure the common artist is a band member of the artist associated with David Paton
  ?artist1 <http://dbpedia.org/ontology/memberOfBand> ?result .
  FILTER (?result = ?artist3)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
731,11,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?force ?war WHERE {
  ?person <http://dbpedia.org/property/awarded> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> .
  ?person <http://dbpedia.org/ontology/militaryBranch> ?force .

  OPTIONAL { 
    <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/property/war> ?war .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
288,2,train,"Give me the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
SELECT ?result WHERE {
  ?result a dbo:PopulatedPlace .
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan> .
  
  FILTER (
    (CONTAINS(LCASE(?label), ""heart of pakistan"") ||
     CONTAINS(LCASE(?label), ""paris of the east"") ||
     CONTAINS(LCASE(?label), ""city of gardens"") ||
     CONTAINS(LCASE(?label), ""city of literature""))
  )
  
  ?result rdfs:label ?label .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
668,41,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of Rod Argent.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?result = ?person .

  OPTIONAL { 
    ?elorm <http://dbpedia.org/ontology/birthName> ""Elorm Kabu Amenyah"" .
    ?musicalArtist <http://dbpedia.org/ontology/musicalArtist> ?elorm .
    ?result = ?musicalArtist .
  }

  OPTIONAL {
    ?rod <http://dbpedia.org/resource/Rod_Argent> .
    ?profession <http://dbpedia.org/property/profession> ?rod .
    ?result <http://dbpedia.org/property/profession> ?profession .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
468,17,train,"Give me the reference to Peter IV and child of the father, that is a royalty, of the parent of Martin of Aragon.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> .
  
  ?father <http://dbpedia.org/ontology/parent> ?parent .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?result <http://dbpedia.org/ontology/parent> ?father .

  OPTIONAL {
    ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peter_IV> .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
871,27,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
SELECT ?father WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Eton_College> .
  ?child <http://dbpedia.org/ontology/parent> ?alumnus .
  ?child <http://dbpedia.org/property/politician> ?politicianRole .
  ?father <http://dbpedia.org/ontology/father> ?child .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
68,24,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?result WHERE {
  # Find children of Philip I of Castile who are royalty
  ?child <http://dbpedia.org/ontology/father> ?result .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Ensure Philip I of Castile is the father
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip_I_of_Castile> .

  # Find commanders in the Siege of Padua who are royalty and have this person as a child
  ?commander <http://dbpedia.org/ontology/parent> ?result .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Ensure involvement in Siege of Padua
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Padua> .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
119,27,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
SELECT ?result WHERE {
  ?administration dbo:country <http://dbpedia.org/resource/Spain> .
  ?administration dbo:reference <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  ?administration dbo:member ?result .
}
```",3,4,4,3,1,3,3,71,0,0,100,0,0.0,0
347,57,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Father of the child of the parent of Archduke Charles Joseph of Austria
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .
  ?child <http://dbpedia.org/ontology/father> ?parent .
  ?result <http://dbpedia.org/ontology/father> ?child .

  # Step 2: Child of the father of Cecilia Renata of Austria
  ?fatherCecilia <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> .
  FILTER (?result = ?child)

  # Step 3: Commander in Thirty Years' War
  OPTIONAL {
    ?result <http://dbpedia.org/property/commanderInWar> <http://dbpedia.org/resource/Thirty_Years'_War> .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,5,train,"Give me the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
SELECT ?result WHERE {
  ?result a dbo:FictionalCharacter .
  ?result a dbo:ComicsCharacter .
  ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
}
```",1,3,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
37,5,train,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/ontology/creator> ?writer .
  ?writer <http://www.w3.org/2006/vcard/ns#hasOccupation> ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""artist"") && CONTAINS(LCASE(?occupation), ""writer""))
  ?writer <http://www.w3.org/2006/vcard/ns#birthPlace> ?birthPlace .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
756,4,train,"Give me the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  ?season <http://dbpedia.org/property/team> <http://dbpedia.org/resource/VfL_Bochum> .
  ?season <http://www.w3.org/2006/time#inXSDdate> ""2007-08""^^xsd:gYear .
  ?player <http://dbpedia.org/ontology/member> ?season .
  ?player a <http://dbpedia.org/class/yago/SportsClubPlayer108069273> . # Assuming this class represents players
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
78,18,train,Give me the band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?commonMember WHERE {
  # Find band associated with David Paton
  <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/member> ?band1 .
  
  # Find members of that band
  ?band1 <http://dbpedia.org/ontology/member> ?commonMember .

  # Find band associated with Billy Lyall
  <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/member> ?band2 .
  
  # Ensure the common member is also a member of Billy Lyall's band
  ?band2 <http://dbpedia.org/ontology/member> ?commonMember .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
687,47,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Find films directed by Manuel Huerga
  <http://dbpedia.org/resource/Manuel_Huerga> <http://dbpedia.org/ontology/director> ?film .
  
  # Identify actors in these films
  ?film <http://dbpedia.org/ontology/starring> ?actor .

  # Ensure the actor is a soccer player and athlete
  ?actor <http://dbpedia.org/property/profession> ""Soccer Player""@en .
  ?actor <http://dbpedia.org/property/profession> ""Athlete""@en .

  # Identify athletes born on 1955-02-22
  ?person <http://www.w3.org/2006/time#inXSDDate> ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 2 && DAY(?date) = 22)
  ?person <http://dbpedia.org/ontology/profession> ""Athlete""@en .

  # Ensure the actor played with or against this person
  ?actor <http://dbpedia.org/ontology/player> ?person .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,1,train,Give me the birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
39,12,train,Give me the professional in  and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?occupation ?band WHERE {
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/occupation> ?occupation .
  OPTIONAL { 
    <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",2,2,3,1,2,3,3,71,0,1,4,0.0,0.0,0
159,22,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .
  ?war <http://dbpedia.org/property/commander> ?successor .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> . # Assuming this is the class for ""television show""
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069069> . # Assuming this is the class for ""societal event""
  ?war <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Jean_Baptiste_Comte_d'Arco> .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,60,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify Maria Anna of Bavaria (born 1574)
  ?mariaAnna <http://dbpedia.org/ontology/birthDate> ""1574-01-01""^^xsd:date .
  
  # Step 2: Find her child who is royalty
  ?child <http://dbpedia.org/ontology/mother> ?mariaAnna ;
         <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 3: Identify the father of this royal child
  ?father <http://dbpedia.org/ontology/father> ?child .
  
  # Step 4: Find the commander in a war that is both a societal event and a television show
  ?war <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Algerian_War> ;
       <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q1180374>, <http://www.wikidata.org/entity/Q11424>, <http://www.wikidata.org/entity/Q2343759> . # Assuming these are identifiers for societal event, event, and television show
  ?result <http://dbpedia.org/ontology/commander> ?war .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
905,36,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
SELECT ?result WHERE {
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  ?child1 <http://dbpedia.org/ontology/parent> ?predecessor .
  ?child2 <http://dbpedia.org/ontology/parent> ?child1 .
  ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
  FILTER(?child2 = ?result)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
295,10,train,Give me the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> dbo:producer ?producer .
  ?producer dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
353,21,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Find the parent of Roger III, Duke of Apulia
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  
  # Find children of this parent
  ?parent <http://dbpedia.org/ontology/child> ?result .

  # Check if the result is also a child of Elvira of Castile, Queen of Sicily
  ?elviraChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .
  
  FILTER (?result = ?elviraChild)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
38,2,train,"Give me the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/officeHolder> _:b0 .
  ?result <http://dbpedia.org/ontology/politician> _:b1 .
  ?result <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> .
  ?result <http://dbpedia.org/ontology/commander> _:b2 .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
769,8,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
SELECT ?player WHERE {
  ?manager <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Hong_Kong_C_Team> .
  ?manager <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (
    (CONTAINS(LCASE(?v1), ""sports manager"") && CONTAINS(LCASE(?v1), ""soccer manager""))
  )
  
  ?player <http://dbpedia.org/ontology/player> ?manager .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
531,47,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  # Find Alberto Ruiz-Gallardón's residence
  <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/ontology/residence> ?residence .
  
  # Identify tenant of the residence
  ?tenant <http://dbpedia.org/ontology/inhabitant> ?residence .

  # Find force related to Manuel Pinto da Costa as a military conflict and societal event
  ?force <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q12140> . # Assuming Q12140 is ""military conflict""
  ?force <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11879> . # Assuming Q11879 is ""societal event""
  ?force <http://dbpedia.org/property/commander> ?result .
  
  # Ensure the individual is an office holder and politician
  ?result <http://dbpedia.org/ontology/politician> ?officeHolder .
  ?result <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 represents ""office held""
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
203,47,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?result WHERE {
  ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Military_conflicts> .
  ?war <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/William_Bayne> .
  ?war <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> .
  ?war <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
119,54,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SpanishCitizen108930068> .
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/residence> ?countryResidence .
    FILTER(?countryResidence != <http://dbpedia.org/resource/Spain>)
  }
  
  OPTIONAL {
    ?santiagoTenant <http://dbpedia.org/ontology/tenant> ?result .
    ?santiagoTenant <http://www.w3.org/2000/01/rdf-schema#label> ""Santiago de Compostela""@en .
  }

  OPTIONAL {
    ?electionLeader <http://dbpedia.org/property/electedAs> ?office .
    ?electionLeader <http://dbpedia.org/ontology/candidateFor> <http://dbpedia.org/resource/Galician_regional_election,_2009> .
    FILTER(YEAR(?date) = 2009)
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?office .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
246,4,train,"Give me the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Princess_Muna_al-Hussein> dbo:child ?child .
  ?child rdf:type dbo:Royalty .
}
```",1,2,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
159,10,train,Give me the commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Great_Turkish_War> .
  ?war <http://dbpedia.org/ontology/commander> ?result .

  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,7,train,"Give me the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Miguel_Maura> dbo:member ?party .
  ?party a dbo:PoliticalParty .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
119,1,train,Give me the entity in Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland> .
}
```

This query will return a list of entities that are associated with Poland as their country, which could include cities, organizations, landmarks, and more.",1,1,2,1,1,3,2,20,0,0,108,0,0.0,0
158,12,train,Give me the native of Grand Duchy of Finland and person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> .
  ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> .
  ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russian_Empire> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
386,8,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace ?property ?entity .
}
```",2,2,3,2,1,2,3,28,4,769,83,0.00517464424320828,0.04597701149425287,0.009302325581395349
143,16,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  # Find the actor of a movie/show with Afeez Oyetoro
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie500000001> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> .
  ?movie <http://dbpedia.org/ontology/starring> ?result .

  # Find the associated musical artist of Cynthia Morgan
  OPTIONAL {
    ?cynthia <http://www.w3.org/2000/01/rdf-schema#label> ""Cynthia Ikponmwenosa Morgan""@en .
    ?cynthia <http://dbpedia.org/ontology/musicArtist> ?result .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
943,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
392,5,train,Give me the member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Der_Blau> <http://dbpedia.org/ontology/member> ?member .
}
```",2,2,3,2,1,2,2,9,0,0,2569,0,0.0,0
347,39,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Eleonore of Austria, Queen of Poland's father
  <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/ontology/father> ?eleonoreFather .

  # Maria Anna of Bavaria (born 1574)'s father
  <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> <http://dbpedia.org/ontology/father> ?mariaAnnaFather .
  
  # Child of Maria Anna's father who is royalty
  ?result <http://dbpedia.org/ontology/father> ?mariaAnnaFather .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Ensure the person is both Eleonore's father and a child of Maria Anna's father
  FILTER (?eleonoreFather = ?result)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
38,0,train,Give me the author of Promises to Keep (Biden book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://purl.org/dc/terms/creator> ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,57,train,"Give me the professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Find professional in the alter ego of The Shadow
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  
  # Find actor from Ab Kya Hoga who is also a politician
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Ab_Kya_Hoga> .
  ?actor <http://dbpedia.org/property/politicalRole> ?v2 .

  # Ensure the professional matches both criteria above
  ?result <http://dbpedia.org/property/profession> ?v1 .
  ?result <http://dbpedia.org/property/profession> ?v2 .

  # Actor of Dispatches from Elsewhere
  ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dispatches_from_Elsewhere> .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
756,57,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  # Find the leader of West Germany
  ?leader <http://dbpedia.org/ontology/chiefExecutive> <http://dbpedia.org/resource/West_Germany> .
  
  # Identify Thomas Letsch's management role in VfL Bochum and associated soccer club season
  ?teamSeason <http://dbpedia.org/property/teamManager> <http://dbpedia.org/resource/Thomas_Letsch> .
  ?teamSeason <http://dbpedia.org/ontology/sportsTeam> <http://dbpedia.org/resource/VfL_Bochum> .
  
  # Ensure the leader is also a manager of this team
  ?leader <http://dbpedia.org/property/teamManager> ?teamSeason .

  # Find the native country of this leader
  ?leader <http://dbpedia.org/property/nationality> ?result .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
361,0,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person <http://dbpedia.org/property/occupation> ""Actor""@en .
}
```",1,1,2,1,1,2,3,28,21485,0,95,1.0,0.9955977757182577,0.997794032276791
78,24,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?result WHERE {
  # Find band members associated with David Paton's musical artist
  ?artist <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/David_Paton> .
  ?member <http://dbpedia.org/ontology/member> ?artist .

  # Find the writer of Wizards of Waverly Place (soundtrack) who is both a musical artist and an artist
  ?writer <http://www.wikidata.org/entity/P50> <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> .
  ?writer <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215380> . # Assuming Q215380 is the identifier for ""musical artist""
  ?writer <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q330521> . # Assuming Q330521 is the identifier for ""artist""

  # Find associated musical artists of this writer
  ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?writer .

  # Ensure the band member is also an associated artist of the writer's musical artist
  FILTER (?member = ?result)
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
742,16,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of Sofia.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?alumnusBirthPlace WHERE {
  ?person dbo:almaMater <http://dbpedia.org/resource/Plovdiv_University_Paisii_Hilendarski> .
  ?person dbo:birthPlace ?alumnusBirthPlace .

  ?resident dbo:residence <http://dbpedia.org/resource/Sofia> .
  ?resident dbo:birthPlace ?residentBirthPlace .

  FILTER (?alumnusBirthPlace = ?residentBirthPlace)
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
295,2,train,"Who is the true self, that is an artist, of Steven Kapur?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . }","```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/Steven_Kapur> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""artist""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
203,41,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
SELECT ?bayneWarMilitaryForce ?capeFinisterreMilitaryForce ?regimentCommander WHERE {
  # Military force of William Bayne's war
  ?bayneWar <http://dbpedia.org/ontology/militaryConflict> ?bayneWarType .
  FILTER(?bayneWarType IN (<http://dbpedia.org/resource/Military_conflict>, <http://dbpedia.org/resource/Event>)).
  ?bayneWar <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .
  ?bayneWar <http://dbpedia.org/property/militaryForce> ?bayneWarMilitaryForce .

  # Military force of Battle of Cape Finisterre (1805)
  <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/property/militaryForce> ?capeFinisterreMilitaryForce .

  # Commander in the war of 30th (Cambridgeshire) Regiment of Foot
  ?regimentWar <http://dbpedia.org/ontology/militaryConflict> ?regimentWarType .
  FILTER(?regimentWarType IN (<http://dbpedia.org/resource/Military_conflict>, <http://dbpedia.org/resource/Event>)).
  ?regimentWar <http://dbpedia.org/property/unitInvolved> <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> .
  ?regimentWar <http://dbpedia.org/ontology/commander> ?regimentCommander .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
89,7,train,"Give me the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Saw_Min_Phyu> <http://dbpedia.org/ontology/spouse> ?spouse .
  OPTIONAL { 
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
871,16,train,"Who is the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  ?parent <http://dbpedia.org/property/politicalParty> ?party .
  ?parent <http://dbpedia.org/ontology/officeHolder> ?office .
  
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
756,13,train,"Give me the native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/ontology/presidentOf> ?country .
  ?native <http://dbpedia.org/property/nationality> ?country .
}
```",2,3,3,2,1,3,3,71,0,0,5170,0,0.0,0
782,10,train,Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?reference ?associatedArtist WHERE {
  # Reference to The Fabulous Thunderbirds
  <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> ?p1 ?reference .

  # Associated musical artist of Nick Curran
  OPTIONAL { 
    <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/musicalArtist> ?associatedArtist .
  }
}
```",2,2,3,1,2,3,3,71,0,130,1,0.0,0.0,0
213,14,train,"Give me the country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Hu_Jieqing> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""writer"")) .
  
  ?work <http://dbpedia.org/ontology/author> ?spouse .
  ?work <http://dbpedia.org/ontology/country> ?country .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
668,20,train,Give me the professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?profession .
  
  ?result <http://dbpedia.org/property/occupation> ?profession .
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/$pacely> .
  }
}
```",3,3,4,2,2,3,3,71,1,45619,0,2.1920210434020168e-05,1.0,4.383945989785406e-05
158,6,train,Give me the person decedent at Switzerland and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> .
  ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
687,30,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Juan Carlos Molina (footballer) and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/soccerPlayer> [] .
  ?person <http://dbpedia.org/ontology/soccerManager> [] .
  ?person <http://dbpedia.org/property/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> .

  OPTIONAL {
    ?molinaTeam <http://dbpedia.org/ontology/team> ?team .
    ?agüeroTeam <http://dbpedia.org/ontology/team> ?team .
    
    ?person <http://dbpedia.org/ontology/team> ?molinaTeam .
    ?person <http://dbpedia.org/ontology/team> ?agüeroTeam .

    FILTER(?molinaTeam = <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)>) .
    FILTER(?agüeroTeam = <http://dbpedia.org/resource/Sergio_Agüero>) .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
246,6,train,Give me the parent of Princess Sara bint Faisal and parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/father> ?parent .
    <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/mother> ?parent .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> <http://dbpedia.org/ontology/father> ?parent .
    <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> <http://dbpedia.org/ontology/mother> ?parent .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,20,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_I_of_Hungary> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?result <http://dbpedia.org/ontology/parent> ?father .
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
531,8,train,"Give me the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?leader WHERE {
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ""Conservative Republican Party (Spain)""@en .
  ?party <http://dbpedia.org/ontology/partyLeader> ?leader .
  ?leader a <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
140,1,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
}
```",1,1,2,1,1,3,2,20,0,0,21486,0,0.0,0
905,35,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  # Find Philip I's father and his spouse
  ?philipI <http://dbpedia.org/ontology/father> ?father .
  FILTER(?philipI = <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto>)
  
  ?father <http://dbpedia.org/ontology/spouse> ?result .

  # Find a royal child of Béla IV and their child
  OPTIONAL {
    ?belavChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
    FILTER(?belavChild = <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary>)
    
    ?belavChild <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild <http://dbpedia.org/ontology/parent> ?result .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,19,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
  ?father <http://dbpedia.org/ontology/spouse> ?result .

  ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,19,train,Give me the band of Kim Wilson and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
SELECT ?band ?realName WHERE {
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> ?band .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://dbpedia.org/property/realName> ?realName .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
816,9,train,Give me the parent of Amy Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Amy_Arbus> <http://dbpedia.org/ontology/parent> ?result .
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
687,23,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  ?person a dbo:Person ;
          <http://dbpedia.org/property/occupation> ?occupation ;
          <http://dbpedia.org/ontology/birthDate> ?personBirthDate .

  FILTER (?person != <http://dbpedia.org/resource/Marty_Pollio>)
  FILTER CONTAINS(?occupation, ""athlete"")
  FILTER (?birthDate = ?personBirthDate)
}
```",3,4,4,3,1,3,3,71,0,0,18,0,0.0,0
737,57,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Three generations down from Alexander of Württemberg
  ?grandchild1 <http://dbpedia.org/ontology/parent> ?child1 .
  ?child1 <http://dbpedia.org/ontology/parent> ?grandchild2 .
  ?grandchild2 <http://dbpedia.org/ontology/parent> ?result .
  ?result <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> <http://dbpedia.org/ontology/parent> .

  # Two generations down from Archduke Charles Louis of Austria
  ?grandchild3 <http://dbpedia.org/ontology/parent> ?child2 .
  ?child2 <http://dbpedia.org/ontology/parent> ?result .
  ?result <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> <http://dbpedia.org/ontology/parent> .

  # Predecessor of Carl, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> .

  # Ensure the individual is royalty
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
89,15,train,Give me the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?child dbo:child <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,2,2,0.0,0.0,0
203,55,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find William Bayne's war and its military force
  ?bayneWar <http://dbpedia.org/ontology/war> ?war .
  ?bayneWar <http://dbpedia.org/property/militaryForce> ?result .
  
  # Ensure the war is a military conflict and an event
  ?war <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/MilitaryConflicts100000000> ;
       <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Military_conflicts> .
  
  # Step 2: Find the war of the 30th Regiment and its commander
  ?regimentWar <http://dbpedia.org/ontology/war> ?war2 .
  ?commander <http://dbpedia.org/property/commander> ?regimentWar .
  ?commander <http://dbpedia.org/property/militaryForce> ?result .

  # Ensure the war is a military conflict and an event
  ?war2 <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/MilitaryConflicts100000000> ;
        <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Military_conflicts> .

  # Step 3: Find Robert Calder's event and its military force
  ?calderEvent <http://dbpedia.org/ontology/event> ?event .
  ?calderEvent <http://dbpedia.org/property/militaryForce> ?result .

  # Ensure the event is a societal event
  ?event <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/SocietalEvents100000000> ;
         <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Society> .
}
```",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
225,7,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> .
}
```",2,2,3,2,1,3,2,20,2080,175,6836,0.9223946784922394,0.23328847016599372,0.37239280279294606
140,4,train,"Give me the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace rdf:type dbo:PopulatedPlace .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
941,12,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . }","```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> .
  
  OPTIONAL { 
    ?luisespouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> .
    ?child <http://dbpedia.org/ontology/spouse> ?luisespouse .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
23,1,train,Give me the entity in Colombia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> .
}
```",1,1,2,1,1,2,3,28,2141,0,0,1.0,1.0,1.0
386,22,train,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT ?war ?entity WHERE {
  # Assuming ""25"" refers to a specific award or event, replace <Award> with the correct resource
  ?awardee <http://dbpedia.org/ontology/receivesAward> <Award:25> .
  
  # Find wars associated with the awardee
  ?war <http://dbpedia.org/ontology/participant> ?awardee .

  # Locate Elena Žalinkevičaitė-Petrauskienė's birthplace
  <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Find entities in the birthplace
  ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> ?birthPlace .
}
```

Note: The query assumes that ""25"" refers to a specific award or event, which should be replaced with the correct DBpedia resource. Additionally, the properties used (like `receivesAward` and `participatesIn`) may need adjustment based on actual DBpedia schema details.",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
633,7,train,"Give me the spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
SELECT DISTINCT ?spouse WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> .
  
  # Ensure the parent is royalty and noble
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""noble""

  ?spouse <http://dbpedia.org/ontology/spouse> ?parent .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,18,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Audrey_Hepburn> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
23,5,train,Who is the father of Sofía Petro?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Sof%C3%ADa_Petro> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,14,train,Give me the child of the father of Cecilia Renata of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
159,31,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?result WHERE {
  ?commander <http://dbpedia.org/property/politicalParty> ?party .
  ?commander <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is ""held office""
  
  ?force <http://dbpedia.org/ontology/event> _:eventId .
  ?force <http://dbpedia.org/ontology/militaryConflict> _:conflictId .

  ?commander <http://dbpedia.org/ontology/successor> ?result .
  ?result <http://dbpedia.org/resource/George_Ducas> ?ducasRef .

  ?commander <http://dbpedia.org/property/memberOfMilitaryForce> ?force .
  
  ?commander <http://dbpedia.org/resource/Michał_Kazimierz_Pac> ?pacRef .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
19,4,train,Give me the professional in  and spouse of Carrie Johnson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carrie_Johnson> <http://dbpedia.org/ontology/spouse> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
347,56,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Maria Anna of Bavaria (born 1574)
  <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> <http://www.w3.org/2002/07/owl#sameAs> ?mariaAnna .

  # Step 2: Find her child who is royalty
  ?child <http://dbpedia.org/ontology/birthParent> ?mariaAnna .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 3: Determine the father of this royal child
  ?father <http://dbpedia.org/ontology/birthChild> ?child .

  # Step 4: Identify Eleonore of Austria, Queen of Poland
  <http://dbpedia.org/resource/Eleonora_of_Austria,_Queen_of_Poland> <http://www.w3.org/2002/07/owl#sameAs> ?eleonore .

  # Step 5: Find the father of Eleonore
  ?fatherEleonore <http://dbpedia.org/ontology/birthChild> ?eleonore .

  # Step 6: Match the fathers from steps 3 and 5
  FILTER (?father = ?fatherEleonore)

  # Step 7: Identify a commander in a war related to the 2nd Dragoon Regiment (France)
  ?war <http://dbpedia.org/ontology/commander> ?result .
  ?war <http://dbpedia.org/ontology/involvesMilitaryUnit> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .

  # Step 8: Ensure the societal event is also an event and television show
  ?war a <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  ?war a <http://dbpedia.org/ontology/Event> .
  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/show> ?tvShow .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
585,4,train,Give me the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?profession .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
943,0,train,Give me the child of Dawit I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Dawit_I> <http://dbpedia.org/property/child> ?child .
}
```

If the direct child property is not available, an alternative approach using the inverse of parent relationships might be necessary:

```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
375,1,train,Give me the war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Toyotomi_Hidenaga> dbo:participatedIn ?war .
  ?war rdf:type <http://dbpedia.org/class/yago/YAGO2GeoCoordinatesCommons360War>.
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
249,5,train,"Give me the native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
SELECT ?work ?native WHERE {
  <http://dbpedia.org/resource/Jamsetji_Tata> dbo:birthPlace ?native .
  ?work dbo:creator <http://dbpedia.org/resource/Jamsetji_Tata> .
  ?work dbo:country <http://dbpedia.org/resource/India> .
}
```",2,3,3,2,1,2,2,9,0,0,68,0,0.0,0
609,44,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?authorBirthPlace ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Birthplace of the author of ""El Deafo""
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .

  # Birthplace of the governor of Virginia who is a politician
  OPTIONAL {
    ?governor <http://www.wikidata.org/entity/P39> <http://dbpedia.org/resource/Virginia> . # P39: position held, assuming it links to being Governor of Virginia
    ?governor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # P106: occupation, Q82955 is politician
    ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
  }

  # Birthplace of Vince Gilligan
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?vinceGilliganBirthPlace .
}
```",5,6,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
782,15,train,Give me the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?bandName WHERE {
  <http://dbpedia.org/resource/Kim_Wilson> dbo:band ?band .
  ?band rdfs:label ?bandName .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
468,14,train,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Martin_of_Aragon> .
  
  # Ensure the parent is royalty and has children (implying they are a father)
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  ?parent <http://dbpedia.org/ontology/child> ?result .
}
```",3,4,4,3,1,3,2,20,0,0,7,0,0.0,0
737,48,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the spouse of Archduchess Helena who is a royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find children of this royal spouse
  ?child <http://dbpedia.org/ontology/parent> ?spouse .

  # Step 3: Determine predecessor of one of these children
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .
  
  # Step 4: Find the child (a royalty) of Archduke Charles Louis
  ?royalChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 5: Find grandchildren of this royal child
  ?result <http://dbpedia.org/ontology/parent> ?royalChild .
  
  FILTER (?predecessor = ?result)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
668,31,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  ?person dbo:birthName ""Pacely""@en .
  ?person dbo:occupation <http://dbpedia.org/resource/Musician> .
  OPTIONAL { 
    ?person dbo:associatedBand ?band .
  }
  BIND(?person AS ?result)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
557,40,train,"Give me the producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result .
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result .

  OPTIONAL {
    ?fictionalCharacter <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q5263650> . # Assuming Q5263650 is the identifier for ""fictional character""
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",5,6,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
80,37,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?result WHERE {
  ?song <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/T.I._(rapper)> .
  ?song <http://www.w3.org/2002/07/owl#sameAs> ?musicalWork .
  FILTER EXISTS { ?musicalWork a <http://dbpedia.org/class/yago/MusicalWork108069068> } # Assuming this is the class for Musical Work
  ?song <http://dbpedia.org/property/album> ?album .

  OPTIONAL {
    ?album <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
668,7,train,"Who is the native, that is an artist, of Central Region, Ghana?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> .
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""artist""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
706,15,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?awardeeBirthPlace ?smitaPatilBirthPlace WHERE {
  # Find awardees of Sangeet Natak Akademi Fellowship and their birthplaces
  ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .

  # Find Smita Patil's birthplace
  <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?smitaPatilBirthPlace .
}
```",4,4,5,3,2,3,2,20,1,3,0,0.25,1.0,0.4
723,5,train,"Give me the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/member> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist100000001> .
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
756,0,train,Give me the manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/property/currentManager> ?manager .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
270,3,train,"Give me the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace a <http://dbpedia.org/class/yago/Settlement108069068> . # Assuming yago:Settlement is the class for settlements
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
905,45,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
  
  OPTIONAL { 
    ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
    ?child <http://dbpedia.org/ontology/parent> ?predecessor .
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?grandchild <http://dbpedia.org/ontology/parent> ?child .
    
    ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
  }
  
  FILTER (?parent = ?result || ?grandchild = ?result)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,61,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?grandfather WHERE {
  # Step 1: Identify the child of Baeda Maryam I
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Baeda_Maryam_I> .

  # Step 2: Ensure the father is royalty and an office holder
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  OPTIONAL { 
    ?father <http://dbpedia.org/property/officeHolder> ?office .
  }

  # Step 3: Find the grandfather
  ?grandfather <http://dbpedia.org/ontology/father> ?father .

  # Step 4: Reference to Lamont Cranston's alter ego (The Shadow)
  OPTIONAL {
    <http://dbpedia.org/resource/Lamont_Cranston> <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,20,train,Give me the war of Hashiba Hidekatsu and entity in Japan and war of the person born as Koichirō.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
SELECT ?war WHERE {
  # War associated with Hashiba Hidekatsu
  <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/war> ?war .
  
  # Ensure the war involves an entity in Japan
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Japan> .
  ?war <http://dbpedia.org/ontology/participant> ?entity .

  # War associated with a person born as Koichirō
  ?person <http://dbpedia.org/ontology/birthName> ""Koichirō"" .
  ?person <http://dbpedia.org/ontology/war> ?war .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
23,8,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> dbo:birthPlace ?place .
  <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> dbo:occupation dbc:Politician .
  <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> dbo:partyAffiliation ?party .
}
```",2,3,3,2,1,2,3,28,0,0,5,0,0.0,0
412,10,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace a dbo:Settlement .
  ?deathPlace ?p ?entity .
}
```",2,3,3,2,1,2,3,28,1,1161,11,0.0008605851979345956,0.08333333333333333,0.0017035775127768314
941,1,train,Give me the spouse of Prince Augustus William of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
668,60,train,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedArtist WHERE {
  ?person1 <http://dbpedia.org/property/birthName> ""Pacely"" .
  ?person2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> ;
           <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Central_Region,_Ghana> ;
           <http://dbpedia.org/ontology/artist> ?v1 .

  OPTIONAL {
    ?person1 <http://dbpedia.org/ontology/musicArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    ?person2 <http://dbpedia.org/ontology/musicArtist> ?associatedArtist .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
595,37,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?result . }","```sparql
SELECT ?author ?work WHERE {
  ?person <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?person <http://www.wikidata.org/entity/P39> ?office . # Office holder
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
  
  ?author owl:sameAs ?person .
  ?work <http://purl.org/dc/terms/creator> ?author ;
        a <http://dbpedia.org/class/yago/WrittenWork100000001> ; # Written work
        a <http://dbpedia.org/class/yago/Book1000000> . # Book
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
756,45,train,"Give me the manager of VfL Bochum and native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/VfL_Bochum> .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ""West Germany""@en .
  
  OPTIONAL { 
    ?season <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> ;
            <http://dbpedia.org/ontology/team> ?team .
    ?result <http://dbpedia.org/ontology/team> ?team .
  }
  
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?result ;
          <http://dbpedia.org/property/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> ;
          <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Sports_manager> .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,38,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find an award linked to a region/state/settlement in America
  ?award <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?award <http://dbpedia.org/property/state> ?state .
  ?award <http://dbpedia.org/ontology/location> ?location .

  # Step 2: Find Bobby Shmurda's birth name
  OPTIONAL {
    <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/birthName> ?birthName .
  }

  # Step 3: Find a person born with that birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Ensure the award is linked to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
392,7,train,Give me the reference to  and member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Der_Blau> <http://dbpedia.org/ontology/member> ?result .
  OPTIONAL { 
    ?result <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Der_Blau> .
  }
}
```",3,3,4,2,2,2,2,9,0,0,6,0,0.0,0
628,47,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
SELECT ?person WHERE {
  # Identify people from Florida who are musical artists
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?person <http://dbpedia.org/property/stateOrProvince> <http://dbpedia.org/resource/Florida> .
  ?person <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musical_artist> .

  # Find associated musical artists of Bobby Shmurda
  ?associatedArtist <http://dbpedia.org/ontology/associatedBandMember> ?person .
  ?bobbyShmurda <http://dbpedia.org/ontology/associatedBandMember> ?associatedArtist .
  
  # Ensure the birth name matches
  ?person <http://xmlns.com/foaf/0.1/name> ?birthName .
  FILTER(?birthName = ?nativeBirthName)
}
```

Note: The query assumes that DBpedia has structured data for these relationships and properties, which may require adjustments based on actual available data in the dataset.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
103,21,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?actor WHERE {
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TvSeries100000000> .
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL {
    ?actor <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",3,4,4,2,2,3,3,71,0,0,13,0,0.0,0
943,30,train,"Give me the child of Dawit I and reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Dawit_I> .
  
  OPTIONAL { 
    ?naodFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Na'od> .
    ?grandfather <http://dbpedia.org/ontology/father> ?naodFather .
    
    # Assuming Q214424 is the identifier for ""royalty"" and P39 for an office holder
    ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
    ?grandfather <http://www.wikidata.org/entity/P39> ?office .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
80,40,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Find the author of Smartbomb
  <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/ontology/author> ?smartbombAuthor .
  
  # Find actors in ATL
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?atlActor .

  # Find a movie that features both the author of Smartbomb and an actor from ATL
  ?movie <http://dbpedia.org/ontology/starring> ?smartbombAuthor .
  ?movie <http://dbpedia.org/ontology/starring> ?atlActor .

  # Check if there's an actor in this movie who also has a professional occupation
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
943,59,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Commander in Siege of Mukha who is royalty
  ?commander <http://dbpedia.org/ontology/commanderInBattle> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  
  # Parent of the commander
  ?parent <http://dbpedia.org/ontology/child> ?commander .
  
  # Child of the parent (should be the commander if directly related)
  ?result <http://dbpedia.org/ontology/child> ?parent .

  # Reference to Lamont Cranston in media
  OPTIONAL {
    ?reference <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Lamont_Cranston> .
    
    # Alter ego connection
    ?alterEgo <http://dbpedia.org/ontology/alterEgo> ?reference .
  }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
353,55,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Alfonso VI's grandchildren
  ?child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?child1 .

  # Step 2: Find the father of a royal child of William I of Sicily
  ?royalChild <http://dbpedia.org/ontology/parent> ?result .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  ?result <http://dbpedia.org/ontology/spouse> ?mother .

  # Step 3: Ensure the individual is a child of Roger III's parent
  ?parentOfRogerIII <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  ?result <http://dbpedia.org/ontology/parent> ?parentOfRogerIII .

  # Combine conditions to find the correct individual
  FILTER(?grandchild = ?royalChild)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
78,15,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Alans_Project> <http://dbpedia.org/ontology/member> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Stuart_Mcbeath_Tosh> .
  }
  
  ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musical_artist> .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
151,7,train,Give me the entity in the birthplace of Burhan Belge and reference to Order of the Medjidie.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Order_of_the_Medjidie> .
  FILTER(?entity = ?birthPlace)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
353,42,train,"Give me the father of William II of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . }","```sparql
SELECT ?result WHERE {
  # Condition 1: Father of William II of Sicily
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_II_of_Sicily> .
  
  # Condition 2: Child of the child of Alfonso VI of León and Castile
  ?child1 <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?father .
  ?grandchild <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?child1 .
  
  # Condition 3: Child of the parent of Roger III, Duke of Apulia
  ?parentRoger <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  ?result <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?parentRoger .

  # Ensure all conditions are met by the same individual
  FILTER (?father = ?grandchild && ?grandchild = ?result)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
609,35,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?person ?birthPlace WHERE {
  # Birthplace of Vince Gilligan
  OPTIONAL { 
    <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(<http://dbpedia.org/resource/Vince_Gilligan> AS ?person)
  }
  
  # Birthplace of Cece Bell, author of El Deafo
  OPTIONAL { 
    <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(<http://dbpedia.org/resource/Cece_Bell> AS ?person)
  }
}
```",4,4,5,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
68,22,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Dorothea's parent
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> .
  
  # Step 2: Find the father of that parent
  ?grandfather <http://dbpedia.org/ontology/spouse> ?parent .
  FILTER EXISTS { ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> } # Assuming Q214424 is ""royalty""
  
  # Step 3: Ensure the person is a child of a commander in Siege of Padua
  ?result <http://dbpedia.org/ontology/parent> ?commander .
  FILTER EXISTS { 
    ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
    ?commander <http://dbpedia.org/property/commandedEvent> <http://dbpedia.org/resource/Siege_of_Padua> .
  }
  
  # Ensure the person found in step 2 and step 3 are the same
  FILTER (?grandfather = ?result)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
782,12,train,Give me the associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
SELECT ?result WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/musicalArtist> ?result .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/property/band> ?result .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,11,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of Max Born.",SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . },"```sparql
SELECT ?show WHERE {
  ?host <http://dbpedia.org/ontology/host> ?show .
  ?host <http://dbpedia.org/ontology/almaMater> ?institution .
  FILTER EXISTS { 
    ?host <http://www.wikidata.org/entity/P166> <http://www.wikidata.org/entity/Q1063> . # Assuming Q1063 is the identifier for Nobel Prize in Physics
  }
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/receiver> ?host .
    ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Max_Born> .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
263,4,train,Give me the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
871,36,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of Victor Stanley (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/parent> ?alumnus .
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Eton_College> .
  
  ?child <http://www.wikidata.org/entity/P106> ?politicianRole . # Assuming P106 is the property for occupation
  
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> .
  
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
782,14,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
  }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
398,16,train,Give me the figure known as the nickname of Russia national football team and player in the writer of The First Glove.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?team <http://www.w3.org/2000/01/rdf-schema#label> ""Russia national football team""@en .
  ?nickname <http://dbpedia.org/property/nickname> ?team .
  ?writer <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/The_First_Glove> .
  ?player <http://dbpedia.org/ontology/player> ?writer .
  
  FILTER (?result = ?nickname && ?result = ?player)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
203,11,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
SELECT ?war ?commander WHERE {
  ?war a dbo:War ;
       owl:sameAs ?event .
  
  ?regiment <http://dbpedia.org/ontology/participant> ?war .
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .

  OPTIONAL { 
    ?commander <http://dbpedia.org/property/commander> ?regiment ;
               <http://dbpedia.org/ontology/involvement> ?war .
  }
}
```",2,4,3,2,1,3,3,71,0,0,113,0,0.0,0
19,5,train,Give me the professional in the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?birthName ?occupation WHERE {
  <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/ontology/birthName> ?birthName .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/property/profession> ?occupation .
  }
}
```",2,2,3,2,1,2,2,9,0,1,39640,0.0,0.0,0
769,3,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^xsd:date .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:Athlete .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:SoccerPlayer .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:SportsManager .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:SoccerManager .
}
```",1,5,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
782,53,train,"Give me the band of Kim Wilson and reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
SELECT ?band ?realName ?artist WHERE {
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> ?band .
  
  OPTIONAL { 
    ?band <http://dbpedia.org/property/alias> ?realName .
  }
  
  ?person <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?artistLabel .
  FILTER(CONTAINS(LCASE(?artistLabel), ""musical artist""))
  
  OPTIONAL {
    ?band <http://dbpedia.org/ontology/member> ?person .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
585,11,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Linda_Miller_(actress)> .
  ?award <http://www.wikidata.org/entity/P17> <http://www.wikidata.org/entity/Q30> . # Q30 is the identifier for the United States
  ?award <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q486972> . # Assuming Q486972 represents ""settlement""
  ?result <http://dbpedia.org/ontology/nationality> <http://www.wikidata.org/entity/Q30> .
  ?result <http://dbpedia.org/ontology/placeOfBirth> ?award .
  
  OPTIONAL {
    ?result <http://dbpedia.org/property/connection> <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
119,2,train,Give me the tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Santiago_de_Compostela> .
}
```

This query retrieves entities associated with Santiago de Compostela, which could be interpreted as ""tenants"" in a broad sense.",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
361,7,train,Give me the actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/occupation> ""Actor""@en .
}
```",2,2,3,1,2,2,3,28,4,0,0,1.0,1.0,1.0
782,4,train,Give me the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?member ?realName WHERE {
  <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> dbo:member ?member .
  ?member foaf:name ?realName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
39,15,train,Give me the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
SELECT ?producer ?profession WHERE {
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://dbpedia.org/property/occupation> ?profession .
}
```",2,2,3,2,1,3,3,71,12,3,0,0.8,1.0,0.888888888888889
531,61,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commanderOffice ?leaderOffice WHERE {
  # Office of Commander for Manuel Pinto da Costa
  <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> <http://dbpedia.org/ontology/office> ?commanderOffice .
  ?commanderOffice <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?militaryConflict .
  ?militaryConflict a <http://dbpedia.org/class/yago/MilitaryConflicts100000000> .
  ?militaryConflict a <http://dbpedia.org/class/yago/SocietalEvents100000000> .
  
  # Office of Leader for Miguel Maura
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/politicalParty> ?party .
  ?party a <http://dbpedia.org/ontology/PoliticalParty> .
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/office> ?leaderOffice .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
816,49,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/work> ?work .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .

  OPTIONAL {
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
    ?child <http://dbpedia.org/ontology/parent> ?spouse .
    ?actor <http://dbpedia.org/ontology/parent> ?child .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
756,42,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/West_Germany> .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/VfL_Bochum_2007%E2%80%9308_season> <http://dbpedia.org/ontology/coach> ?result .
  }
  
  OPTIONAL {
    ?team <http://dbpedia.org/property/teamManager> <http://dbpedia.org/resource/Thomas_Letsch> .
    ?team <http://dbpedia.org/ontology/sportsTeam> ?v1 .
    ?team <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
    ?team <http://dbpedia.org/ontology/coach> ?result .
  }
}
```",5,11,6,2,3,3,3,71,0,11,1,0.0,0.0,0
737,8,train,"Give me the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
737,55,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify child of Philipp Albrecht, Duke of Württemberg
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
  
  # Step 2: Find grandchild of Duke Philipp of Württemberg
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
  ?child2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
  
  # Step 3: Find grandchild of Archduke Charles Louis who is royalty
  ?grandchildArchduke <http://dbpedia.org/ontology/parent> ?child2 .
  ?child3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?grandchildArchduke <http://dbpedia.org/ontology/parent> ?child3 .
  
  # Check royalty status
  ?grandchildArchduke <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Step 4: Determine predecessor of this individual
  ?result <http://dbpedia.org/ontology/successor> ?grandchildArchduke .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
492,3,train,Give me the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
361,15,train,Give me the actor of Rustlers' Rhapsody and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/profession> ?profession .
    ?actor <http://dbpedia.org/property/profession> ?profession .
  }
}
```",3,3,4,2,2,2,3,28,4,1,0,0.8,1.0,0.888888888888889
816,13,train,Give me the parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
SELECT ?photographer ?parent WHERE {
  ?photographer <http://dbpedia.org/property/occupation> ""Photographer""@en .
  ?photographer <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,3,3,71,14,57,16,0.19718309859154928,0.4666666666666667,0.2772277227722772
628,5,train,"Give me the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
SELECT ?artist WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist dbo:birthPlace <http://dbpedia.org/resource/Florida> .
}
```",1,2,2,1,1,3,3,71,97,0,0,1.0,1.0,1.0
159,51,train,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/ontology/writer> ?result .
  
  OPTIONAL { 
    ?battle <http://dbpedia.org/property/commander> ?result .
    ?battle <http://dbpedia.org/ontology/show> ?tvShow .
    ?battle <http://dbpedia.org/ontology/event> ?societalEvent .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Vienna>)
  }
}
```",5,7,6,3,2,3,3,71,0,2,1,0.0,0.0,0
513,8,train,Give me the residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . },"```sparql
SELECT ?residence WHERE {
  ?leader <http://dbpedia.org/ontology/partyLeader> <http://dbpedia.org/resource/Ulster_Unionist_Party> .
  ?leader <http://dbpedia.org/property/residence> ?residence .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
347,59,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify wars that are societal events, general events, and television shows.
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Event> .
  ?war <http://dbpedia.org/ontology/show> ?tvShow .

  # Step 2: Find commanders associated with these wars and linked to the Algerian War.
  ?result <http://dbpedia.org/property/commanderInWar> ?war .
  ?algerianWar <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/Algerian_War> .
  FILTER(?war = ?algerianWar)

  # Step 3: Determine familial relationships involving Archduke Charles Joseph of Austria.
  OPTIONAL {
    <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> <http://dbpedia.org/ontology/familyName> ?parent .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
    ?result <http://dbpedia.org/property/father> ?child .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
39,36,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person a dbo:MusicalArtist .
  ?person <http://dbpedia.org/property/occupation> ""Singer"" .

  ?person <http://dbpedia.org/ontology/memberOf> ?result .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
943,38,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  # Find Na'od's father
  ?naodFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Na%27od> .
  
  # Find the grandfather (father of Na'od's father)
  ?grandfather <http://dbpedia.org/ontology/father> ?naodFather .

  # Ensure the grandfather is royalty
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Ensure the grandfather is an office holder (assuming a property for this)
  ?grandfather <http://dbpedia.org/property/officeHolder> ?v1 .

  # Reference to The Shadow's alter ego
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
    ?grandfather <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?alterEgo .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
203,5,train,Who is the reference to William Bayne?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/William_Bayne> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
361,23,train,"Give me the professional in the profession of Frédéric Bouraly and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Find Frédéric Bouraly's profession
  <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric_Bouraly> <http://dbpedia.org/property/profession> ?profession .

  # Find individuals with the same profession as Frédéric Bouraly
  ?result <http://dbpedia.org/property/profession> ?profession .
  
  # Ensure the result is an actor of a film/work titled ""Lasso the Moon""
  OPTIONAL {
    <http://dbpedia.org/resource/Lasso_the_Moon> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
    <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
58,4,train,Give me the award of Ian Gregson (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Ian_Gregson> <http://dbpedia.org/ontology/nationality> ?v1 .
  OPTIONAL { 
    <http://dbpedia.org/resource/Ian_Gregson> <http://dbpedia.org/property/award> ?award .
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
295,11,train,"Give me the native of Birmingham and writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> .
  ?work <http://dbpedia.org/ontology/workOf> <http://dbpedia.org/resource/Apache_Indian> ;
        a <http://dbpedia.org/ontology/MusicalWork> .
  ?person <http://dbpedia.org/ontology/writer> ?work .
  BIND(?person AS ?result)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
557,23,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?character <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q33999> .
  ?character <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Kent_Allard_(print)> .
  
  OPTIONAL { 
    ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?alterEgo <http://dbpedia.org/property/occupation> ?result .
  }
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
103,7,train,"Give me the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
SELECT ?series WHERE {
  <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/starring> ?character .
  ?character a dbo:ComicsCharacter .
  ?character <http://dbpedia.org/property/partOfSeries> ?series .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
468,9,train,"Give me the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child ?realName WHERE {
  <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> <http://dbpedia.org/ontology/parent> ?child .
  
  OPTIONAL { 
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
  
  ?child <http://dbpedia.org/ontology/birthName> ?realName .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
80,46,train,Give me the actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?actor WHERE {
  # Find the album of ""What You Know"" by T.I. and its associated actors
  <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/property/album> ?album .
  ?album <http://dbpedia.org/ontology/starring> ?actor .

  # Find the author of ""Smartbomb"" and movies they acted in
  OPTIONAL {
    <http://dbpedia.org/resource/Smartbomb_(book)> <http://www.wikidata.org/entity/P50> ?author .
    ?movie <http://dbpedia.org/property/author> ?author .
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",5,5,6,3,2,3,3,71,0,0,10,0,0.0,0
353,32,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT DISTINCT ?result WHERE {
  # Find the parent of a child who is royalty
  ?child <http://dbpedia.org/ontology/parent> ?result .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Find the parent of Roger III, Duke of Apulia
  ?grandparent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .

  # Ensure the result is a child of this grandparent
  ?result <http://dbpedia.org/ontology/parent> ?grandparent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
941,8,train,Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
SELECT ?spouseOfSpouse WHERE {
  <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/spouse> ?spouseOfSpouse .
}
```",2,2,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
103,46,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
SELECT ?result WHERE {
  # Get Shatrughan Sinha's profession
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?profession .

  # Find movies that are also television shows featuring Richard E. Grant
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?movie <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Television_films> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E_Grant> .

  # Find actors in these movies who have the same profession as Shatrughan Sinha
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?profession .
}
```",5,6,6,3,2,3,3,71,0,0,28,0,0.0,0
39,8,train,"Who is the person born, that is a musical artist, as Robert Lamar Thompson?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Robert Lamar Thompson""@en .
  ?person <http://dbpedia.org/property/occupation> ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musician"") || CONTAINS(LCASE(?occupation), ""singer""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
203,9,train,Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/ontology/militaryForce> ?result .
  OPTIONAL { 
    <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/property/commander> ?result .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
816,43,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL { 
    ?profession <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/property/profession> .
    ?child <http://dbpedia.org/property/profession> ?profession .
    ?child <http://dbpedia.org/ontology/parent> ?result .
  }
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result .
  }
}
```",5,5,6,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
159,15,train,"Give me the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?force <http://dbpedia.org/ontology/event> ?event .
  ?force <http://dbpedia.org/ontology/militaryConflict> ?militaryConflict .
  
  ?pac <http://dbpedia.org/ontology/commander> ?force .
  FILTER(?pac = <http://dbpedia.org/resource/Micha%C5%82_Kazimierz_Pac>) .

  ?result <http://dbpedia.org/ontology/commander> ?force .
  ?result <http://dbpedia.org/property/politician> true .
  ?result <http://dbpedia.org/ontology/officeHolder> ?office .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
905,49,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify the predecessor of Stephen V of Hungary
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Step 2: Find the child (grandparent) of the target person
  ?child <http://dbpedia.org/ontology/parent> ?predecessor .

  # Step 3: Identify the grandchild who is royalty
  ?result <http://dbpedia.org/ontology/parent> ?child .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 4: Find Philip I, Prince of Taranto's father
  ?philipFather <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .

  # Step 5: Identify the spouse of this father
  ?result <http://dbpedia.org/ontology/spouse> ?philipFather .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
472,7,train,Give me the territory administered from Copenhagen and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
SELECT ?territory WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Copenhagen> .
  OPTIONAL { 
    <http://dbpedia.org/resource/Olaf_I_of_Denmark> <http://dbpedia.org/property/rule> ?territory .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,12,train,Give me the tenant of Spain and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Spain> .
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Santiago_de_Compostela> .
}
```",2,2,3,1,2,3,3,71,0,7,4,0.0,0.0,0
386,10,train,Give me the war of the awardee of 25.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  ?awardee <http://dbpedia.org/ontology/award> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""25"" .
  
  ?awardee dbo:participatedInWar ?war .
}
```

Note: The query assumes that the award is labeled with a number ""25,"" which might need adjustment based on actual DBpedia data structure. If ""25"" refers to something else, such as a year or specific context, additional information would be needed to refine this query.",2,2,3,2,1,2,3,28,0,0,182,0,0.0,0
89,51,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Condition 1: Predecessor of the child of the spouse (royalty) of Saw Min Phyu
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  # Condition 2: Spouse of the father (royalty) of Myat Hpone Pyo
  ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?spouse2 <http://dbpedia.org/ontology/spouse> ?father .

  # Find a person who satisfies both conditions
  FILTER (?predecessor = ?result && ?spouse2 = ?result)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
347,40,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Eleonore of Austria's father
  <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/ontology/father> ?result .
  
  # Child of Ferdinand II, Holy Roman Emperor
  ?result <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .

  # Commander in a war related to the Algerian War and depicted as a societal event and television show
  OPTIONAL {
    ?war <http://dbpedia.org/property/commander> ?result .
    ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Algerian_War> .
    ?war <http://dbpedia.org/ontology/event> ?societalEvent .
    ?televisionShow <http://dbpedia.org/property/storyline> ?societalEvent .
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
668,43,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  # Identify the writer profession
  ?writer <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Writing> .
  
  # Find individuals who are musical artists of ""The Live Anthology""
  <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/ontology/musicalArtist> ?result .

  # Ensure the result is a writer
  ?result = ?writer .

  # Check for association with $pacely and Darryl Paa Kwesi Bannerman-Martin
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/$pacely> .
  }
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Darryl_Paa_Kwesi_Bannerman-Martin> .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
89,54,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  
  OPTIONAL { 
    ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/parent> ?royalChild .
  }
  
  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/spouse> ?result .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }

  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut> .
    ?result <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",6,8,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
585,0,train,Give me the native of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/New_York_(state)> .
}
```",1,1,2,1,1,3,2,20,2784,383,4405,0.8790653615408904,0.3872583113089442,0.5376593279258401
943,29,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow and child of Dawit I.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  
  OPTIONAL { 
    ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q12345678> . # Assuming Q12345678 is the identifier for ""The Shadow"" or related concept
  }
  
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Dawit_I> .
}
```

Note: The property `<http://www.wikidata.org/entity/P31>` and the entity `Q12345678` are placeholders. You would need to replace them with the correct properties and identifiers that represent ""The Shadow"" or its alter ego in DBpedia/Wikidata.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,43,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
SELECT ?result WHERE {
  # Find Archduke Charles Joseph's parent
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .
  
  # Identify the grandparent (father of the child)
  ?grandparent <http://dbpedia.org/ontology/parent> ?parent .

  # Check if this person was a commander in the Thirty Years' War
  OPTIONAL { 
    ?grandparent <http://dbpedia.org/property/militaryRole> <http://dbpedia.org/resource/Thirty_Years'_War> .
  }

  # Ensure they are a child of Ferdinand II, Holy Roman Emperor
  ?grandparent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,4,train,Give me the reference to Mitaka and region of Japan Standard Time.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
SELECT ?mitaka ?region WHERE {
  ?mitaka <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Mitaka""@en .
  
  OPTIONAL { 
    ?mitaka <http://dbpedia.org/ontology/timeZone> ?region .
    FILTER(CONTAINS(LCASE(?region), ""japan standard time""))
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
297,7,train,"Give me the institution in Georgia (U.S. state) and entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?institution <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Georgia_(U.S._state)> .
  ?littleHatJones <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?country .
  
  FILTER (STRSTARTS(STR(?country), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?country a <http://dbpedia.org/class/yago/Country108067069> } )

  ?institution <http://dbpedia.org/ontology/location> ?birthPlace .
}
```",3,4,4,2,2,2,2,9,0,0,346,0,0.0,0
871,18,train,"Give me the father of Arthur Stanley (politician) and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/ontology/birthParent> ?result .
  <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/birthParent> ?result .
  <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> <http://dbpedia.org/ontology/birthParent> ?result .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,1,train,Give me the player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> <http://dbpedia.org/ontology/teamMember> ?team .
  ?player <http://dbpedia.org/ontology/teamMember> ?team .
  ?player <http://dbpedia.org/property/occupation> ""Football player""@en .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
345,1,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
SELECT ?region WHERE {
  ?jst a dbo:TimeZone ;
       rdfs:label ""Japan Standard Time""@en .
  OPTIONAL { 
    ?jst dbo:region ?region .
  }
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
203,12,train,Give me the military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
SELECT ?battle ?militaryForce WHERE {
  {
    <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
  UNION
  {
    <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
87,6,train,Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Paradise_(2013_film)> dbo:starring ?result .
  ?result dbo:spouse <http://dbpedia.org/resource/Janusz_Kamiński> .
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
37,6,train,"Give me the birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Ethan_Iverson> <http://dbpedia.org/ontology/artwork> ?work .
  ?work <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Ethan_Iverson> .
  ?work <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Ethan_Iverson> .
  <http://dbpedia.org/resource/Ethan_Iverson> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
375,8,train,Give me the entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Yamaza_Enjir%C5%8D> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace ?property ?entity .
}
```",2,2,3,2,1,2,3,28,0,0,104,0,0.0,0
89,21,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> .
  ?result <http://dbpedia.org/ontology/parent> ?parent .

  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
119,8,train,"Give me the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
SELECT ?administration WHERE {
  ?administration <http://dbpedia.org/property/government> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  ?administration <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (LANG(?label) = ""es"") # Ensures the label is in Spanish
  ?administration a <http://dbpedia.org/class/yago/YAGO2GeoPoliticalEntity108676068> . # Assuming this class represents administrations/governments
}
```",1,2,2,1,1,3,3,71,0,0,320,0,0.0,0
633,14,train,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?father <http://dbpedia.org/ontology/parent> ?child .
  
  ?parent <http://dbpedia.org/ontology/parent> ?father .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
756,37,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?nativeCountry WHERE {
  ?person dbo:leader <http://dbpedia.org/resource/West_Germany> .
  ?person dbo:manager <http://dbpedia.org/resource/2020%E2%80%9321_SBV_Vitesse_season> .
  
  ?person dbo:nationality ?nativeCountry .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
595,33,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
SELECT ?result WHERE {
  ?work <http://purl.org/dc/terms/creator> ?result .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book106557786> .

  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?result <http://dbpedia.org/property/profession> ?v1 .
  FILTER (CONTAINS(LCASE(?v1), ""politician"") || CONTAINS(LCASE(?v1), ""office holder""))

  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,51,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2 & 3: Identify a band awardee from New York with the same birth name
  ?band <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215380> . # Q215380 is an example identifier for ""band""
  ?band <http://dbpedia.org/ontology/birthName> ?birthName .
  ?award <http://dbpedia.org/property/location> <http://dbpedia.org/resource/New_York_(state)> .
  ?award <http://dbpedia.org/ontology/recipient> ?band .

  # Step 4: Determine the native region of the award
  ?region <http://www.wikidata.org/entity/P31> ?type1, ?type2, ?type3, ?type4 .
  ?type1 <http://www.wikidata.org/entity/P279>* <http://www.wikidata.org/entity/Q2220686> . # Region
  ?type2 <http://www.wikidata.org/entity/P279>* <http://www.wikidata.org/entity/Q30> . # American
  ?type3 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q1391> . # State
  ?type4 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q486972> . # Settlement

  ?award <http://dbpedia.org/property/nativePlace> ?region .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
737,35,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> .
  
  ?grandparent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?child2 <http://dbpedia.org/ontology/parent> ?grandparent .
  FILTER (?child = ?child2)
  
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?result <http://dbpedia.org/ontology/successor> ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,53,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in Actor.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
SELECT ?result WHERE {
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie500000001> .
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow500000001> .

  ?show <http://dbpedia.org/ontology/starring> ?result .
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .

  OPTIONAL {
    ?shadow <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }

  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
}
```",6,7,7,3,3,3,3,71,0,0,9,0,0.0,0
386,20,train,Give me the war of Alexander Lvovich Davydov and war of the awardee of 25 and entity in Russian Empire.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
SELECT ?davydovWar ?awardeeWar WHERE {
  # Wars involving Alexander Lvovich Davydov
  <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/war> ?davydovWar .

  # Awardee of ""25"" within the Russian Empire
  ?awardee <http://dbpedia.org/property/receivedAward> ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""25"")) .
  ?awardee <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russian_Empire> .

  # Wars involving the awardee
  ?awardee <http://dbpedia.org/ontology/war> ?awardeeWar .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
58,0,train,Give me the spouse of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
258,12,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Eleonora Menicucci""@en .
  ?person <http://dbpedia.org/ontology/politician> ?politicianRole .
  ?person <http://dbpedia.org/ontology/birthName> ""Eleonora Menicucci de Oliveira"" .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  FILTER EXISTS { 
    ?almaMater <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^xsd:date .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
531,26,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?office WHERE {
  <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> <http://dbpedia.org/ontology/militaryConflict> ?conflict .
  ?conflict <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?event . # Assuming societal event is linked via seeAlso or similar property
  OPTIONAL {
    <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> <http://dbpedia.org/ontology/politicalPartyMember> ?party .
    <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> <http://dbpedia.org/property/officeHolder> ?office .
  }
}
```",3,7,4,3,1,3,3,71,0,0,485,0,0.0,0
347,5,train,Give me the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> 
    (<http://dbpedia.org/ontology/father>|<http://dbpedia.org/ontology/mother>) ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,58,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . }","```sparql
SELECT ?authorBirthPlace ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Birthplace of the American author of ""El Deafo""
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://www.w3.org/2000/01/rdf-schema#label> ?authorLabel .
  FILTER(CONTAINS(LCASE(?authorLabel), ""american"")).
  ?author <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .

  # Birthplace of the governor who is a politician from Virginia
  OPTIONAL {
    <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/ontology/governor> ?governor .
    ?governor <http://dbpedia.org/ontology/occupation> ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""politician"")).
    ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
  }

  # Birthplace of Vince Gilligan
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?vinceGilliganBirthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,16,train,"Give me the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
SELECT ?song ?album WHERE {
  ?song <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/T.I.> .
  ?song rdf:type <http://dbpedia.org/class/yago/MusicalWork100000000> . # Assuming this is the class for ""Musical Work""
  ?song rdf:type <http://dbpedia.org/class/yago/Song100000000> .         # Assuming this is the class for ""Song""
  ?song dbo:album ?album .
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
58,14,train,Give me the producer of the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?movie ?producer WHERE {
  <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/award> ?award .
  ?award <http://dbpedia.org/ontology/relatedWork> ?movie .
  ?movie <http://dbpedia.org/ontology/producer> ?producer .
}
```",3,3,4,3,1,3,2,20,0,0,10672,0,0.0,0
782,25,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?person <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musical_artist> .
  
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/associatedBand> ?result .
  }
  
  ?band <http://dbpedia.org/ontology/member> ?person ;
        <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kim_Wilson> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
668,39,train,"Give me the professional in Musician and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musician> .
  
  OPTIONAL { 
    ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?result <http://dbpedia.org/ontology/birthName> ?birthName .
  }
  
  OPTIONAL {
    ?artist <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> .
    ?artist <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Central_Region,_Ghana> .
    ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist100000007> .
    ?result = ?artist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
769,11,train,"Give me the player in Lai Sun Cheung and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lai_Sun_Cheung> dbo:player ?result .
  
  OPTIONAL { 
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?result .
    ?person <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^xsd:date .
    ?person <http://dbpedia.org/ontology/occupation> ?v1 .
    FILTER (
      EXISTS { ?v1 rdf:type <http://dbpedia.org/class/yago/Athletes100000001>. }
      && EXISTS { ?v1 rdf:type <http://dbpedia.org/class/yago/SoccerPlayers1000000>. }
      && EXISTS { ?v1 rdf:type <http://dbpedia.org/class/yago/SportsManagers1000000>. }
      && EXISTS { ?v1 rdf:type <http://dbpedia.org/class/yago/SoccerManagers1000000>. }
    )
  }
}
```",3,7,4,2,2,3,2,20,0,0,2,0,0.0,0
353,57,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Child of Roger II of Sicily
  <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result .

  # Father of a child who is royalty
  ?result <http://dbpedia.org/ontology/parent> ?royalChild .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Reference to William I as royalty and office holder
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/William_I> .
    ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
    ?result <http://dbpedia.org/property/officeHolder> ?office .
  }

  # Child of the child of Alfonso VI of León and Castile
  ?grandchild <http://dbpedia.org/ontology/parent> ?result .
  ?alfoChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  ?alfoChild <http://dbpedia.org/ontology/child> ?grandchild .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,13,train,"Give me the father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
SELECT ?child ?father WHERE {
  <http://dbpedia.org/resource/William_I_of_Sicily> dbo:child ?child .
  ?child rdf:type dbo:Monarch . # Assuming Monarch is a class representing royalty

  OPTIONAL { 
    ?child dbo:father ?father .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
375,2,train,"Give me the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 2020 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
143,0,train,Give me the actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,2,20,6,0,1,1.0,0.8571428571428571,0.923076923076923
943,20,train,Give me the child of Dawit I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dawit_I> <http://dbpedia.org/ontology/child> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/The_Shadow_alter_ego> .
  }
}
```

Note: The exact property for ""reference to the alter ego"" might need adjustment based on DBpedia's schema and available data. If `<http://dbpedia.org/property/reference>` is not directly applicable, it may be necessary to explore related properties or use a broader search strategy.",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
249,0,train,Give me the native of Jamshedpur.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> .
}
```",1,1,2,1,1,2,2,9,68,0,0,1.0,1.0,1.0
595,7,train,Give me the owner of USS Arcadia (ID-1605).,SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
SELECT ?owner WHERE {
  <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?owner .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
347,9,train,"Give me the father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/ontology/father> ?father .
  OPTIONAL { 
    ?father <http://dbpedia.org/property/occupation> ?v1 .
    FILTER(CONTAINS(LCASE(?v1), ""commander"") && CONTAINS(LCASE(?v1), ""thirty years' war""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
203,28,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  
  ?commander <http://dbpedia.org/property/commanded> ?war .
  ?commander <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> .

  ?battle1 <http://dbpedia.org/ontology/battle> ?commander .
  ?battle2 <http://dbpedia.org/ontology/battle> ?commander .
  
  FILTER (?battle1 = <http://dbpedia.org/resource/Battle_of_Fort_Royal>)
  FILTER (?battle2 = <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)>)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
398,12,train,Give me the player in the writer of The First Glove and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/ontology/writer> ?writer .
  
  OPTIONAL { 
    ?player <http://dbpedia.org/property/playerOf> ?writer .
    ?player <http://www.w3.org/2000/01/rdf-schema#label> ""Наши парни / Nashi parni""@en .
    BIND(?player AS ?result)
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
89,9,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Saw_Min_Hla> .
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,38,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  ?child1 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  ?grandchild <http://dbpedia.org/ontology/father> ?child1 .
  
  ?royaltyChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_I_of_Sicily> .
  ?royaltyChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?result <http://dbpedia.org/ontology/father> ?royaltyChild .
  FILTER(?grandchild = ?result)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
609,59,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place as a region and administrative region
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?region .
  ?region a <http://dbpedia.org/class/yago/AdministrativeRegion108069068> .

  # Step 2: Find the governor of that region
  ?governor <http://dbpedia.org/ontology/governs> ?birthPlace ;
            a <http://dbpedia.org/ontology/Politician> .

  # Step 3: Get the birth place of the governor
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .

  # Step 4: Find Vince Gilligan's award and its awardee
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/award> ?award .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .

  # Step 5: Get the birth place of the awardee
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
158,21,train,"Give me the person decedent at Switzerland and native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
SELECT ?result WHERE {
  # Decedent at Switzerland
  ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> .
  
  # Native of Grand Duchy of Finland
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> .
  }
  
  # Native of the administration (country) of Nicholas II of Russia
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russia> .
  }
}
```",4,5,5,2,3,2,3,28,1,905,0,0.0011037527593818985,1.0,0.002205071664829107
78,11,train,Give me the band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  ?artist <http://dbpedia.org/ontology/member> ?bandMember .
}
```",2,2,3,2,1,2,3,28,0,0,114,0,0.0,0
723,13,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?bandMember WHERE {
  ?producer <http://dbpedia.org/ontology/produced> <http://dbpedia.org/resource/Nothing_to_Gein> .
  ?producer a <http://dbpedia.org/ontology/Organization> ;
            a <http://dbpedia.org/ontology/Band> .

  ?producer <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
103,6,train,Give me the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?profession .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
140,8,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
SELECT ?party ?member WHERE {
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  ?party <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Westport,_Connecticut> .
  ?party <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Q11424 is the identifier for ""political party""
  ?party <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q43229> . # Q43229 is the identifier for ""organization""

  OPTIONAL {
    ?member <http://dbpedia.org/property/member> ?party .
  }
}
```",2,4,3,2,1,3,2,20,0,0,21486,0,0.0,0
293,40,train,Give me the person born as Harriette Arlene Lake and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Find person born as Harriette Arlene Lake
  ?person <http://dbpedia.org/ontology/birthName> ""Harriette Arlene Lake"" .
  
  # Check if this person is a party member of the ruling party in a landmark at elevation 20.116800000000001347
  OPTIONAL {
    ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?latitude ;
              <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?longitude .
    FILTER(?latitude = 20.116800000000001347)
    
    # Assuming there's a property linking landmarks to ruling parties
    ?landmark <http://dbpedia.org/ontology/rulingParty> ?party .
    ?person <http://dbpedia.org/property/memberOf> ?party .
  }
  
  # Check if this person is the spouse of Roger Pryor (actor)
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Roger_Pryor_(actor)> ;
          . = ?person .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
203,35,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  # Find the event associated with Robert Calder that is both an event and a societal event
  ?event <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Robert_Calder> .
  ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
  
  # Identify the military force involved in this event
  ?event <http://dbpedia.org/property/militaryForce> ?result .

  OPTIONAL {
    # Find wars involving the 30th (Cambridgeshire) Regiment of Foot that are both a military conflict and an event
    ?war <http://dbpedia.org/ontology/event> ?conflictEvent .
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .

    # Identify the commander in these wars
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    
    # Ensure the 30th Regiment is involved in this war
    ?war <http://dbpedia.org/property/unit> <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> .
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
39,33,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in Singer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?result WHERE {
  ?creation <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?creation <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Fictional character
  ?creation <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Comics character

  OPTIONAL { 
    ?alterEgo <http://dbpedia.org/ontology/alterEgo> ?creation .
    ?result <http://dbpedia.org/property/profession> ?alterEgo .
    ?result <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Singer> .
  }
}
```",4,6,5,3,2,3,3,71,0,0,5422,0,0.0,0
731,1,train,Give me the war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/war> ?war .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
595,54,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  # Commander in Third Taiwan Strait Crisis
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
  
  # Author of a written work, book, and work
  ?author <http://dbpedia.org/property/author> ?result .
  ?work <http://dbpedia.org/ontology/book> ?result ;
        <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Books> .

  # Resident politician or office holder of Chappaqua, New York
  ?author <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?author <http://www.wikidata.org/entity/P39> ?position . # Assuming P39 is the property for position held

  # Spouse of an author who is a politician and office holder
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> ?author .
    ?spouse <http://www.wikidata.org/entity/P39> ?positionSpouse . # Assuming P39 is the property for position held
    ?invitationAuthor <http://dbpedia.org/property/author> <http://dbpedia.org/resource/An_Invitation_to_the_White_House> .
    FILTER(?spouse = ?invitationAuthor)
  }

  # Linking all conditions together
  FILTER(?commander = ?author)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
119,3,train,Who is the commander in French Revolutionary Wars?,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/French_Revolutionary_Wars> .
  ?commander <http://dbpedia.org/ontology/commander> ?event .
}
```",1,1,2,1,1,3,2,20,0,0,58,0,0.0,0
386,17,train,Give me the war of the awardee of 25 and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  # Assuming there is a property for awards and the awardee of award number 25 can be identified
  ?awardee <http://dbpedia.org/ontology/award> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""25"" .

  # Wars associated with the awardee
  ?awardee <http://dbpedia.org/ontology/war> ?war .

  # Wars associated with Alexander Lvovich Davydov
  <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/war> ?war .
}
```

Note: The query assumes the existence of a property for awards and that ""25"" is directly linked to an award label. Adjustments may be necessary based on actual DBpedia schema details.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,6,train,Give me the birthplace of Ebrahim Alkazi and birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Ebrahim_Alkazi>
    <http://dbpedia.org/resource/Smita_Patil> 
  }
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
119,28,train,Give me the tenant of Santiago de Compostela and tenant of Spain and office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Santiago_de_Compostela> .
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Spain> .

  OPTIONAL { 
    ?electionEvent <http://dbpedia.org/property/electionDate> ""2009""^^xsd:dateTime ;
                    <http://dbpedia.org/property/electionType> ""Galician regional election""@en .
    ?result <http://dbpedia.org/ontology/officeHolder> ?leader .
    ?leader <http://dbpedia.org/property/electedAs> ?electionEvent .
  }
}
```",4,4,5,2,3,3,3,71,0,7,1,0.0,0.0,0
203,34,train,"Give me the military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/ontology/foughtFor> ?result .
  
  OPTIONAL { 
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q1189> . # Assuming Q1189 is the identifier for ""military conflict""
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q1656682> . # Assuming Q1656682 is the identifier for ""event""
    ?result <http://dbpedia.org/property/commander> ?war .
    
    OPTIONAL {
      ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/The_Triple_X's> .
    }
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,53,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
SELECT ?person ?team WHERE {
  # Find person born on 1979-11-03 who is both a soccer player and manager
  ?person <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^xsd:date .
  ?person <http://dbpedia.org/property/profession> ?occupation1 .
  ?person <http://dbpedia.org/property/profession> ?occupation2 .
  
  FILTER (
    (str(?occupation1) = ""soccer player"") &&
    (str(?occupation2) = ""soccer manager"")
  )
  
  # Find athlete born on Marty Pollio's birthday
  ?athlete <http://dbpedia.org/ontology/birthDate> ?martyBirthday .
  ?player <http://dbpedia.org/property/profession> ""athlete"" .
  ?player <http://dbpedia.org/ontology/team> ?team .
  
  # Find player in Sergio Agüero
  ?sergioTeam <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> .
  ?person <http://dbpedia.org/ontology/team> ?sergioTeam .

  # Ensure the person is connected to both conditions
  FILTER (?martyBirthday = ?personBirthDate)
}
```

Note: This query assumes that DBpedia has structured data for these specific relationships and properties. Adjustments may be necessary based on actual schema details in DBpedia.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
203,45,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  # Military force in Battle of Fort Royal
  <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/ontology/militaryForce> ?force1 .
  
  # Commander in French campaign in Egypt and Syria
  <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/militaryForce> ?force2 .

  # Event related to Knight Commander of the Order of the Bath
  ?person <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  ?event <http://dbpedia.org/ontology/event> ?person .
  ?event <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Societal_event> .

  # Ensure the same military force is involved
  FILTER (?force1 = ?force2)
  
  # Return the common military force
  BIND(?force1 AS ?result)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
23,0,train,Give me the party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/property/politicalParty> ?party .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
731,7,train,Give me the force of the awardee of Commander of the Order of the British Empire.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?awardee ?force WHERE {
  ?awardee <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> .
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/memberOf> ?force .
  }
}
```",2,2,3,2,1,3,2,20,0,2,162,0.0,0.0,0
687,38,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?player WHERE {
  # Step 1: Actor of ""All or Nothing: Manchester City""
  <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Step 2: Soccer Player and Athlete
  ?actor <http://dbpedia.org/property/sport> <http://dbpedia.org/resource/Soccer> ;
         <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Athlete> .

  # Step 3: Person born on 1979-11-03 who is a soccer player and manager
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/P1234567> ; # Placeholder for actual resource ID
          <http://dbpedia.org/property/birthDate> ""1979-11-03""^^xsd:date ;
          <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> ;
          <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_manager> .

  # Step 4: Team of the person
  ?person <http://dbpedia.org/ontology/team> ?team .
  
  # Step 5: Ensure player is part of this team
  ?player <http://dbpedia.org/property/team> ?team ;
          <http://dbpedia.org/property/sport> <http://dbpedia.org/resource/Soccer> .

}
```

Note: The placeholder `<http://dbpedia.org/resource/P1234567>` should be replaced with the actual DBpedia resource identifier for the person born on 1979-11-03 who is a soccer player and manager. This requires prior knowledge or lookup to identify the correct individual.",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
859,2,train,"Give me the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . }","```sparql
SELECT ?group WHERE {
  <http://dbpedia.org/resource/Burnt_by_the_Sun> <http://dbpedia.org/ontology/musicBy> ?group .
  ?group a <http://dbpedia.org/class/yago/YAGO2Group4655> . # Assuming YAGO2Group4655 is the class for groups
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
687,8,train,"Give me the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Soccer_player> .
  ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Soccer_manager> .
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
39,18,train,Give me the professional in Singer and band of Bob Thompson (musician) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
SELECT ?singer ?band WHERE {
  OPTIONAL {
    ?singer <http://dbpedia.org/property/occupation> ""Singer"" .
    ?singer <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Bob_Thompson_(musician)> .
  }
  
  OPTIONAL {
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Bob_Thompson_(musician)> .
  }
}
```",3,3,4,1,3,3,3,71,0,0,3,0,0.0,0
628,32,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist <http://dbpedia.org/ontology/member> ?result .
  
  ?result <http://dbpedia.org/ontology/musicalArtist> [] .
  ?result <http://dbpedia.org/property/birthName> ""Bobby Shmurda""^^<http://www.w3.org/2001/XMLSchema#string> .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
595,58,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  # Authorship by Bill Clinton
  ?work <http://dbpedia.org/ontology/author> ?result .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this class represents books
  ?work <http://dbpedia.org/ontology/writtenBy> <http://dbpedia.org/resource/Bill_Clinton> .

  # Commander in a War (Disease/Societal Event)
  OPTIONAL {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Disease100000001> . # Assuming this class represents diseases
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent100000001> . # Assuming this class represents societal events
    ?result <http://dbpedia.org/ontology/commander> ?war .
  }

  # Owner of USS Arcadia (ID-1605)
  OPTIONAL {
    <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/property/owner> ?result .
  }
  
  # Spouse of Hillary Clinton
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
412,6,train,Give me the entity in Athens and war of Napoleon Zervas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Athens> .
  OPTIONAL { 
    ?war <http://dbpedia.org/property/war> ?zervasWar .
    ?zervasWar <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Napoleon_Zervas> .
    ?entity <http://dbpedia.org/ontology/relatedTo> ?war .
  }
}
```",2,2,3,1,2,2,3,28,0,261,1,0.0,0.0,0
412,0,train,Give me the war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?battle WHERE {
  <http://dbpedia.org/resource/Napoleon_Zervas> dbo:participatedIn ?battle .
  ?battle a dbo:Battle .
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
871,5,train,"Who is the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/birthParent> ?result .
  ?result a <http://dbpedia.org/ontology/Politician> .
  ?result a <http://dbpedia.org/ontology/OfficeHolder> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
628,20,train,Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person WHERE {
  ?band <http://dbpedia.org/ontology/member> ?person .
  FILTER(CONTAINS(LCASE(?band), ""uncle murda"")) .

  ?bobbyShmurda <http://dbpedia.org/property/birthName> ?birthName .
  FILTER(?bobbyShmurda = <http://dbpedia.org/resource/Bobby_Shmurda>) .

  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,45,train,"Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?producer WHERE {
  # Producers of The Adventures of Tom Sawyer (1938)
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?producer .

  # Actor in High Society Blues
  <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Claim to fame of the actor (most notable work)
  ?claimToFame <http://dbpedia.org/ontology/subject> ?actor ;
               a <http://dbpedia.org/ontology/Film> .

  # Check if producer also produced the claim to fame
  ?claimToFame <http://dbpedia.org/ontology/producer> ?producer .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
414,16,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of the awardee of Nobel Prize in Physics.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?show WHERE {
  ?host <http://dbpedia.org/ontology/almaMater> ?institution .
  FILTER EXISTS { ?institution <http://www.w3.org/2000/01/rdf-schema#label> ""Educational Institution"" . }
  
  ?show <http://dbpedia.org/ontology/host> ?host .
  OPTIONAL {
    ?show <http://dbpedia.org/property/topic> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> .
  }

  ?awardee <http://dbpedia.org/ontology/nobelPrize> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> .
  OPTIONAL {
    ?show <http://dbpedia.org/property/awardRecipient> ?awardee .
  }
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
198,37,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
  ?award <http://dbpedia.org/property/awardee> ?result .

  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,58,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/commander> ?result .
  ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Battle_of_Vienna> .
  ?war <http://purl.org/dc/terms/type> ?type1, ?type2 .
  
  FILTER (?type1 = <http://dbpedia.org/class/yago/SocietalEvent108069068> && 
          ?type2 = <http://dbpedia.org/ontology/TVEpisode>)
  
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .
  
  OPTIONAL {
    ?reference <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Always_the_Love_Songs> .
    ?reference <http://dbpedia.org/ontology/reference> ?result .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,55,train,"Give me the person born as the birth name of Ann Sothern and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Ann Sothern's birth name
  <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Person with the same birth name as Ann Sothern
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .

  # Political party member in Central, Louisiana
  OPTIONAL {
    ?person <http://dbpedia.org/property/politicalParty> ?party .
    ?party <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Central,_Louisiana> .
  }

  # Spouse of the actor from ""1,000 Dollars a Minute""
  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STRSTARTS(STR(?movie), ""http://dbpedia.org/resource/1,000_Dollars_a_Minute""))
    
    ?actor <http://dbpedia.org/ontology/spouse> ?person .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
353,4,train,"Who is the parent of Roger III, Duke of Apulia?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
782,21,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist ?realName WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/member> ?artist .
    FILTER(?artist != <http://dbpedia.org/resource/Nick_Curran>)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://www.wikidata.org/entity/P735> ?realName .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,59,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify a musical artist native to Florida
  ?artist <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find their band membership
  ?artist <http://dbpedia.org/ontology/memberOfBand> ?band .
  
  # Step 3: Identify GS9 members who are artists and musical artists
  ?gs9Member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
             <http://dbpedia.org/property/memberOfBand> ?band .
  
  # Ensure the GS9 member is also an artist
  ?gs9Member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 4: Link these entities through their band association
  FILTER(?artist != ?gs9Member)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,26,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?person <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Musical_artists> .
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",3,4,4,3,1,3,3,71,0,0,14,0,0.0,0
398,11,train,Give me the player in Aleksandr Filimonov and figure known as the nickname of Russia national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/teamMember> ?result .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?nickname .
    ?result <http://dbpedia.org/property/knowAs> ?nickname .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
39,7,train,Give me the birth name of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,22,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  
  ?alterEgo <http://dbpedia.org/property/profession> ?profession .

  <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric_Bouraly> <http://dbpedia.org/property/profession> ?bouralyProfession .

  FILTER(?profession = ?bouralyProfession)

  ?result <http://dbpedia.org/property/profession> ?profession .
}
```",4,4,5,2,2,2,3,28,0,0,4210,0,0.0,0
782,23,train,Give me the reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
SELECT ?band ?realName WHERE {
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> ?band .
  OPTIONAL { 
    ?band <http://www.w3.org/2000/01/rdf-schema#label> ?bandLabel .
    ?band <http://dbpedia.org/property/realName> ?realName .
  }
}
```",3,3,4,3,1,3,3,71,0,0,10,0,0.0,0
386,4,train,Give me the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?award ?awardee WHERE {
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""25"")) .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,326,0,0.0,0
633,4,train,"Give me the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/offspring> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
557,31,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result .
  
  OPTIONAL { 
    ?fictionalCharacter <http://dbpedia.org/property/fictionalAlterEgo> ?alterEgo .
    ?fictionalCharacter <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q4829803> . # Assuming Q4829803 is the identifier for ""fictional character""
    ?fictionalCharacter <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Kent_Allard> .
    
    ?result <http://dbpedia.org/property/occupation> ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
816,23,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?movie ?actor WHERE {
  ?movie a dbo:Film ;
         a owl:Thing .
  
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  OPTIONAL { 
    ?decedent dbo:deathPlace dbr:Los_Angeles .
    ?actor foaf:surname ?surname .
    ?decedent foaf:surname ?surname .
  }
}
```

This query assumes that the connection between an actor and a decedent can be established through shared properties like surname, which might need adjustment based on available data in DBpedia. Adjustments may be necessary if more specific linking properties are known or required.",3,4,4,3,1,3,3,71,0,0,10313,0,0.0,0
159,46,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
SELECT ?successor WHERE {
  # Find Michał Kazimierz Pac's involvement in a military conflict as a commander
  ?conflict <http://dbpedia.org/ontology/event> ?event .
  ?conflict <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict> .
  
  ?pac <http://dbpedia.org/ontology/commanderOf> ?conflict .
  ?pac <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is the property for ""held office""
  ?pac <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""

  # Find successor of this commander
  ?successor <http://dbpedia.org/ontology/successor> ?pac .
  
  # Ensure successor is also a politician and office holder
  ?successor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?successor <http://www.wikidata.org/entity/P39> ?office2 .

  # Reference to the writer of ""Always the Love Songs""
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/writtenWork> <http://dbpedia.org/resource/Always_the_Love_Songs> .
    ?successor <http://www.wikidata.org/entity/P463> ?writer . # Assuming P463 is a property indicating ""reference"" or ""related to""
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
119,12,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of Alexander Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?entity WHERE {
  # Find the country where Dawid Olejniczak resides
  <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence a dbo:Country .

  # Find wars involving Alexander Suvorov
  ?war <http://dbpedia.org/property/war> ?suvorovWar .
  ?suvorovWar <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q118521> . # Assuming Q118521 is the identifier for ""battle"" or similar

  # Find entities involved in these wars and located in Dawid Olejniczak's residence country
  ?entity <http://dbpedia.org/property/location> ?residence .
  ?entity <http://www.wikidata.org/entity/P625> ?location . # Assuming P625 is the property for geographical coordinates or location

  FILTER EXISTS { 
    ?war <http://dbpedia.org/ontology/place> ?entity .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
59,4,train,Give me the manager of Hartlepool United F.C. and native of Bristol.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/teamManager> ?result .
  ?result <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Bristol> .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
668,9,train,Give me the associated musical artist of $pacely and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
  ?result <http://dbpedia.org/property/occupation> ""Musician""@en .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
905,56,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
  
  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
    ?spouse <http://dbpedia.org/ontology/spouse> ?father .
  }
  
  OPTIONAL {
    ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
    ?child <http://dbpedia.org/ontology/parent> ?predecessor .
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/parent> ?child .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,46,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT ?war1 ?war2 WHERE {
  # Find the award given by United States Congress and its awardees
  ?award <http://dbpedia.org/ontology/awardedBy> <http://dbpedia.org/resource/United_States_Congress> .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee1 .
  
  # Find the war associated with this awardee
  ?awardee1 <http://dbpedia.org/property/war> ?war1 .

  # Find the awardees of Gillmore Medal and their forces
  ?gillmoreAward <http://dbpedia.org/ontology/recipient> ?awardee2 .
  FILTER(?gillmoreAward = <http://dbpedia.org/resource/Gillmore_Medal>) .
  
  # Determine the force associated with this awardee
  ?awardee2 <http://dbpedia.org/property/force> ?force .

  # Find the war associated with this force
  ?force <http://dbpedia.org/property/war> ?war2 .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
414,3,train,"Give me the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?institution WHERE {
  <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/location> ?institution .
  ?institution rdf:type <http://dbpedia.org/class/yago/EducationalOrganization108069068> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,13,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find children of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?person dbo:parent <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> .
  
  # Step 2: Check if any parent is royalty
  ?person dbo:parent ?royalParent .
  ?royalParent dbo:occupation/rdfs:label ""Royalty""@en .

  # Step 3: Find the child of this royal parent
  ?child dbo:parent ?royalParent .
}
```

Note: The query assumes that DBpedia has structured data for these relationships and uses a label-based approach to identify royalty. Adjustments may be needed based on actual DBpedia schema details.",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
782,47,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . }","```sparql
SELECT ?person ?realName WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^xsd:date .
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""musical artist""
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
  ?person <http://xmlns.com/foaf/0.1/name> ?realName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
859,5,train,Give me the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/collaboration> ?artist .
  ?artist a <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
412,24,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Antonios Varthalitis's death place that is a settlement
  <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Settlement> .

  # Awardee of ""30"" and their associated war
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/award> ?award .
    FILTER(?award = ""30"") # Assuming ""30"" is a specific identifier for the award
    ?awardee <http://dbpedia.org/ontology/war> ?war .

    # Find an entity that matches both conditions
    ?result <http://dbpedia.org/ontology/location> ?deathPlace .
    ?result <http://dbpedia.org/ontology/war> ?war .
  }
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
293,30,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Roger_Pryor_(actor)> .
  ?result <http://dbpedia.org/property/birthName> ""Ann Sothern"" .
  
  OPTIONAL { 
    ?result <http://www.wikidata.org/entity/P102> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for the Republican Party
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,26,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place that is both a region and an administrative region
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure the birth place is classified as a region and an administrative region
  ?birthPlace rdf:type <http://dbpedia.org/class/yago/Region108069068> . # Assuming this class represents regions
  ?birthPlace rdf:type <http://dbpedia.org/class/yago/AdministrativeRegion108069068> . # Assuming this class represents administrative regions

  # Step 2: Find the governor of that region who is a politician
  ?governor <http://dbpedia.org/ontology/governs> ?birthPlace .
  ?governor rdf:type <http://dbpedia.org/class/yago/Politician108069068> . # Assuming this class represents politicians

  # Step 3: Get the birth place of the governor
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
}
```

Note: The specific classes for regions, administrative regions, and politicians are assumed here as placeholders (`Region108069068`, `AdministrativeRegion108069068`, `Politician108069068`). These should be replaced with the correct DBpedia class URIs if available. Additionally, the property `<http://dbpedia.org/ontology/governs>` is used hypothetically to represent the relationship between a governor and their region; this may need adjustment based on actual DBpedia schema details.",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
668,52,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Find Rod Argent's profession
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/ontology/profession> ?profession .

  # Find a person with the same profession as Rod Argent
  ?person1 <http://dbpedia.org/ontology/profession> ?profession .
  
  # Find the person born as Darryl Paa Kwesi Bannerman-Martin
  ?person2 <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin"" .

  # Identify $pacely's birth name and find associated musical artist
  <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?birthName .
  ?person3 <http://dbpedia.org/ontology/associatedBand> ?artist .
  
  # Ensure the person matches all criteria
  FILTER (?person1 = ?person2 && ?person2 = ?person3)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
706,14,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparil
SELECT ?birthPlace WHERE {
  ?movie a dbo:Film ;
         dcterms:subject <http://dbpedia.org/resource/Category:Indian_films> .
  
  ?actor dbo:starring ?movie ;
         foaf:name ""Dipankar De""@en .

  ?actor dbo:birthPlace ?birthPlace .
}
```",3,5,4,3,1,3,2,20,0,0,13,0,0.0,0
737,1,train,"Give me the child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
258,7,train,Give me the establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
SELECT ?foundingDate WHERE {
  <http://dbpedia.org/resource/Federal_University_of_Para%C3%ADba> <http://dbpedia.org/ontology/foundingDate> ?foundingDate .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
668,27,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?person ?birthName WHERE {
  ?person a dbo:Artist .
  ?person dbo:birthPlace <http://dbpedia.org/resource/Central_Region,_Ghana> .
  ?person dbo:birthName ?birthName .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
159,39,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> .
  
  ?battleOfVienna <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?war <http://dbpedia.org/property/involvesMilitaryForce> ?militaryForce .

  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/George_Ducas> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?reference .

  ?commander <http://dbpedia.org/ontology/commander> ?war .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,17,train,"Give me the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
SELECT ?child WHERE {
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  ?predecessor <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
375,23,train,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?entity WHERE {
  # Find children of Toyotomi Hideyoshi
  <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?child .
  
  # Find wars associated with Toyotomi Hideyoshi's child
  ?child <http://dbpedia.org/property/war> ?war .

  # Find birthplace of Yamaza Enjirō
  <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Find entities in the birth place of Yamaza Enjirō
  ?entity <http://dbpedia.org/ontology/inhabitant> ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
103,61,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Find the comics character related to The Shadow video game
  <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/comicsCharacter> ?comicsCharacter .
  
  # Determine the alter ego of this comics character
  ?comicsCharacter <http://dbpedia.org/ontology/alterEgo> ?alterEgo .

  # Find professionals associated with this alter ego
  ?result <http://dbpedia.org/property/profession> ?v1 .
  FILTER(?v1 = ?alterEgo)

  OPTIONAL {
    # Identify actors from ""Ab Kya Hoga"" who are politicians
    <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/property/politician> true .
    
    # Extract their professions
    ?actor <http://dbpedia.org/property/profession> ?v2 .

    # Ensure the professional matches both criteria
    FILTER(?v1 = ?v2)
  }
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
159,21,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?successor WHERE {
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> .
  ?commander <http://dbpedia.org/property/politicalParty> ?party .
  OPTIONAL { 
    ?commander <http://dbpedia.org/ontology/successor> ?successor .
  }
  
  ?successor <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Great_Turkish_War> .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,2,train,Give me the office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/office> ?office .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
140,3,train,"Give me the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?war a dbo:War .
  ?war a dbo:SocietalEvent .
  <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/participatedIn> ?war .
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
353,9,train,Give me the child of Roger II of Sicily and father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/William_II_of_Sicily> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,12,train,Give me the father of Baeda Maryam I and reference to .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?father ?reference WHERE {
  <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/ontology/father> ?father .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Baeda_Maryam_I> <http://www.w3.org/2002/07/owl#sameAs> ?reference .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,18,train,Give me the father of Baeda Maryam I and reference to  and child of Dawit I.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  
  OPTIONAL { 
    ?mother <http://dbpedia.org/ontology/husband> <http://dbpedia.org/resource/Dawit_I> .
    ?result <http://dbpedia.org/ontology/mother> ?mother .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
89,36,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the spouse of Saw Min Phyu who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Determine their child
  ?child <http://dbpedia.org/ontology/parent> ?spouse .

  # Step 3: Identify the predecessor of this child
  ?result <http://dbpedia.org/ontology/successor> ?child .

  # Step 4: Verify if this predecessor is also a child of Saw Min Hla
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
203,3,train,Give me the figure known as The Triple X's.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/alias> ?alias .
  FILTER(CONTAINS(LCASE(?alias), ""the triple x's""))
}
```

This query searches for entities where the alias property contains the string ""the triple x's,"" using a case-insensitive match to ensure broader coverage.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,33,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/parent> ?child .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
    ?child <http://dbpedia.org/ontology/spouse> ?father .
  }
  
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,25,train,Give me the predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
375,16,train,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parent WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (
    EXISTS { ?v1 <http://www.w3.org/2000/01/rdf-schema#label> ""Artist"" . }
    && EXISTS { ?v2 <http://www.w3.org/2000/01/rdf-schema#label> ""Musical artist"" . }
    && ?person <http://dbpedia.org/property/occupation> ?v2
  )
  
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Vera_Lynn> .
    ?work <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?series .
    ?person <http://dbpedia.org/property/author> ?work .
  }
  
  ?person <http://dbpedia.org/ontology/birthPlace> ?v3 .
  FILTER (?v3 = <http://dbpedia.org/resource/London>)
  
  ?person <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
531,23,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?leader <http://dbpedia.org/ontology/election> <http://dbpedia.org/resource/Madrid_City_Council_election,_2003> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/ElectedOfficeHolder108069068> . # Assuming this class represents office holders
  ?leader <http://dbpedia.org/property/residence> ?residence .
  
  ?residence <http://dbpedia.org/ontology/tenant> ?result .
}
```",3,4,4,3,1,3,3,71,0,0,375,0,0.0,0
756,35,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT ?manager WHERE {
  # Find the manager of VfL Bochum during the 2007–08 season
  <http://dbpedia.org/resource/2007%E2%80%9308_VfL_Bochum_season> <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/VfL_Bochum> .
  <http://dbpedia.org/resource/2007%E2%80%9308_VfL_Bochum_season> <http://dbpedia.org/property/coach> ?manager .

  # Find the team managed by Thomas Letsch
  ?teamSeason <http://dbpedia.org/ontology/team> ?team .
  ?teamSeason <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Thomas_Letsch> .
  ?teamSeason a <http://dbpedia.org/class/yago/SoccerClubSeason108069627> . # Assuming this class represents soccer club seasons
  FILTER EXISTS { 
    ?team a <http://dbpedia.org/class/yago/SportsOrganization108068965> ; # Sports organization
           a <http://dbpedia.org/class/yago/SoccerClub108068966> . # Soccer club
  }

  # Ensure the manager of VfL Bochum is also the manager for Thomas Letsch's team
  ?manager = ?teamSeason.<http://dbpedia.org/property/coach>
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
531,13,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?office WHERE {
  ?person <http://dbpedia.org/ontology/office> ?office .
  ?person <http://dbpedia.org/property/politicalParty> ?party .
  ?person <http://dbpedia.org/ontology/occupation> ""Commander"" .
  ?war <http://dbpedia.org/ontology/participant> ?person .
  FILTER(CONTAINS(LCASE(?war), ""central african republic civil war""))
}
```",2,4,3,2,1,3,3,71,0,0,485,0,0.0,0
39,10,train,Give me the band of Bob Thompson (musician) and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/memberOf> ?band .
  OPTIONAL { 
    <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Singer> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
119,21,train,Give me the office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
SELECT ?officeGalicia ?officeSantiago WHERE {
  # Find the leader of the 2009 Galician regional election
  ?election <http://dbpedia.org/ontology/electionDate> ""2009"" .
  ?election <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Galicia_(Spain)> .
  ?winner <http://dbpedia.org/ontology/winner> ?election .
  ?winner <http://dbpedia.org/ontology/title> ?officeGalicia .

  # Find the tenant (leader) of Santiago de Compostela
  ?santiago <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Santiago_de_Compostela> .
  ?tenant <http://dbpedia.org/ontology/positionHeld> ?santiago .
  ?tenant <http://dbpedia.org/ontology/title> ?officeSantiago .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
737,32,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
SELECT ?result WHERE {
  # Find the child of Duke Philipp of Württemberg
  ?child1 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
  
  # Find the grandchild (child of the child)
  ?result <http://dbpedia.org/ontology/father> ?child1 .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  ?child2 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
  
  # Find the predecessor of this child
  ?result <http://dbpedia.org/ontology/successor> ?child2 .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
23,12,train,Give me the entity in Colombia and party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/property/memberOfParty> ?result .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/property/memberOfParty> ?result .
  }
}
```",3,3,4,1,3,2,3,28,1,2140,0,0.00046707146193367583,1.0,0.0009337068160597572
225,6,train,Give me the entity in Japan and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
  <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/property/birthPlace> ?result .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,16,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of Isabella of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Find children of Philip I of Castile who are royalty
  ?child <http://dbpedia.org/ontology/father> ?result .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Find father of Isabella of Austria
  <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/ontology/father> ?result .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
412,11,train,Give me the war of the awardee of 30.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?awardee ?war WHERE {
  ?awardee <http://dbpedia.org/property/award> ""30"" .
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/war> ?war .
  }
}
```",2,2,3,2,1,2,3,28,0,0,526,0,0.0,0
468,10,train,"Give me the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Martin_of_Aragon> .
  ?parent <http://dbpedia.org/ontology/father> ?result .
  
  OPTIONAL { 
    ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
80,19,train,Give me the actor of the movie with  and actor of ATL (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/> <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",3,3,4,2,2,3,3,71,10,0,0,1.0,1.0,1.0
89,35,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
SELECT ?result WHERE {
  # Find the parent of Min Hla Htut of Pyakaung
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> .
  
  # Find the child of this parent
  ?result <http://dbpedia.org/ontology/parent> ?parent .

  # Find the child of Saw Shwe Khet
  ?sawChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  
  # Find the predecessor of this child
  ?result <http://dbpedia.org/ontology/successor> ?sawChild .
}
```",4,4,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
756,34,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
SELECT ?manager WHERE {
  # Find the successor of the 2006–07 VfL Bochum season
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?successorSeason .
  
  # Ensure the successor is a football league season, sports team season, and sports season
  ?successorSeason <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/FootballLeagueSeason108069834> ;
                   <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SportsTeamSeason108070000> ;
                   <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SportsSeason108069999> .

  # Find a player associated with a club that is a sports club, organization, and soccer club in the successor season
  ?player <http://dbpedia.org/ontology/team> ?club .
  ?club <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SportsClub108069999> ;
        <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/Organisation108070000> ;
        <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SoccerClub108069999> .
  
  # Find the manager of this club in the successor season
  ?club <http://dbpedia.org/property/teamManager> ?manager .

  # Identify the manager of the 2020–21 SBV Vitesse season
  <http://dbpedia.org/resource/2020%E2%80%9321_SBV_Vitesse_season> <http://dbpedia.org/property/teamManager> ?manager .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
80,30,train,Give me the actor of ATL (film) and professional in the alter ego of The Shadow and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result WHERE {
  # Actor of ATL (film)
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result .
  
  # Professional in the alter ego of The Shadow
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
  
  # Actor of Shelby Oaks
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
585,13,train,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
  ?award <http://dbpedia.org/ontology/location> ?settlement .
  
  ?person <http://dbpedia.org/ontology/placeOfBirth> ?settlement .
  ?person <http://dbpedia.org/property/state> <http://dbpedia.org/resource/New_York_(state)> .

  ?person <http://dbpedia.org/ontology/receipient> ?award .
}
```",3,5,4,3,1,3,2,20,0,0,8569,0,0.0,0
263,6,train,"Give me the native of Middlesex and parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> .
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
628,41,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?result WHERE {
  # Find the associated musical artist of Bobby Shmurda
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  
  # Identify band members who are also musical artists
  ?member <http://dbpedia.org/ontology/member> ?artist ;
          a <http://dbpedia.org/ontology/MusicalArtist> .

  # Ensure the person was born with Bobby Shmurda's birth name and is native to Florida
  ?result <http://dbpedia.org/property/birthName> ""Bobby Shmurda"" .
  ?result <http://dbpedia.org/ontology/placeOfBirth> ?place .
  
  FILTER (CONTAINS(LCASE(?place), ""florida""))
  
  # Ensure the person is a band member and musical artist
  FILTER (?member = ?result)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
258,15,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
SELECT ?university ?foundingDate WHERE {
  <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?university .
  <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?university .
  
  ?university a <http://dbpedia.org/class/yago/YagoLegalEntity4325> ; # Organization
              a <http://dbpedia.org/class/yago/YagoEducationalInstitution1000> ; # Educational Institution
              a <http://dbpedia.org/ontology/University> .
  
  ?university <http://dbpedia.org/property/foundingDate> ?foundingDate .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
375,14,train,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/postalCode> "","" . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?parent WHERE {
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""english"") && CONTAINS(LCASE(?settlementLabel), ""settlement""))
  
  ?artist <http://dbpedia.org/ontology/birthPlace> ?location .
  ?artist <http://dbpedia.org/ontology/musicArtist> ?musicArtist .
  ?artist <http://www.w3.org/2002/07/owl#sameAs> ?nativeArtist .

  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/child> ?artist .
  }
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
531,3,train,"Give me the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/2003_Madrid_city_council_election> dbo:winner ?leader .
  ?leader a dbo:ElectedOfficial .
}
```

This query assumes that the leader of an election is represented by the `dbo:winner` property and that office holders are classified under `dbo:ElectedOfficial`. Adjustments may be needed based on DBpedia's specific schema for this event.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
609,41,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?governorBirthPlace ?awardeeBirthPlace ?ceceBellBirthPlace WHERE {
  # Birthplace of the Governor of Virginia
  ?governor <http://dbpedia.org/property/governor> ""Virginia"" .
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .

  # Birthplace of an awardee related to Vince Gilligan's awards or nominations
  ?award <http://dbpedia.org/ontology/nomineeOrWinner> ?awardee .
  ?award <http://www.wikidata.org/entity/P921> <http://dbpedia.org/resource/Vince_Gilligan> . # Assuming P921 is the property for ""recipient""
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .

  # Birthplace of Cece Bell
  <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?ceceBellBirthPlace .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
270,1,train,Give me the person decedent at Melbourne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
SELECT ?person WHERE {
  ?person a <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> .
}
```",1,1,2,1,1,2,2,9,809,0,0,1.0,1.0,1.0
756,61,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?manager WHERE {
  # Step 1: Identify leader of West Germany
  ?leader <http://dbpedia.org/ontology/chiefExecutive> <http://dbpedia.org/resource/West_Germany> .
  
  # Step 2: Find the administration/country (West Germany)
  ?country rdfs:label ""West Germany""@en .

  # Step 3: Locate a sports manager born on 1968-08-26 and native of West Germany
  ?person <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^xsd:date ;
           <http://dbpedia.org/ontology/nationality> ?country ;
           <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Sports_manager> .

  # Step 4: Identify the team associated with this sports manager
  ?team <http://dbpedia.org/property/teamManaged> ?person .
  
  # Ensure it's a soccer club season, sports season, and sports team season
  ?team <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> ;
        <http://dbpedia.org/ontology/type> ?type .
  FILTER(?type IN (<http://dbpedia.org/resource/Soccer_club_season>, 
                   <http://dbpedia.org/resource/Sports_season>, 
                   <http://dbpedia.org/resource/Sports_team_season>)).
  
  # Step 5: Determine the manager of that team
  ?team <http://dbpedia.org/property/teamManager> ?manager .
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
557,34,train,"Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result .
  
  OPTIONAL { 
    ?fictionalCharacter <http://www.wikidata.org/entity/P735> <http://dbpedia.org/resource/Kent_Allard> . # Assuming P735 is the property for ""reference"" or similar
    ?fictionalCharacter <http://dbpedia.org/ontology/allegedAlterEgo> ?alterEgo .
    ?result <http://dbpedia.org/property/occupation> ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
609,18,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Vince_Gilligan>
    <http://dbpedia.org/resource/Cece_Bell>
    <http://dbpedia.org/resource/Glenn_Youngkin>
  }
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,3,4,1,3,3,3,71,1,3,0,0.25,1.0,0.4
119,56,train,"Give me the tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish""@en .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/memberOfParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  }
  
  OPTIONAL {
    ?election <http://dbpedia.org/ontology/electionDate> ?date .
    FILTER(YEAR(?date) = 2009)
    ?result <http://dbpedia.org/property/office> ?office .
    ?office <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Galicia_(Spain)> .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
905,6,train,"Give me the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/ontology/father> ?father .
  OPTIONAL { 
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
159,24,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/occupation> ?v1 .
    FILTER(CONTAINS(LCASE(?v1), ""commander"") || CONTAINS(LCASE(?v1), ""general""))
    
    ?war <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Great_Turkish_War> .
    ?result <http://dbpedia.org/ontology/memberOf> ?war .
  }
}
```",3,3,4,2,2,3,3,71,0,3,1,0.0,0.0,0
78,23,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Find the associated musical artist for David Paton
  <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
  
  # Find band members of this artist
  ?artist1 <http://dbpedia.org/ontology/member> ?bandMember .

  # Find the associated musical artist for Stuart Mcbeath Tosh
  <http://dbpedia.org/resource/Stuart_Mcbeath_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
  
  # Ensure the band member is also a member of this second artist's band
  ?artist2 <http://dbpedia.org/ontology/member> ?bandMember .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
492,13,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?actor ?deathPlaceActor ?carolynJonesDeathPlace WHERE {
  # Find actors of ""The Sky Ranger"" (1928)
  <http://dbpedia.org/resource/The_Sky_Ranger_(film)> <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL { 
    ?actor <http://dbpedia.org/property/deathPlace> ?deathPlaceActor .
  }
  
  # Find death place of Carolyn Jones
  <http://dbpedia.org/resource/Caryn_Jones> <http://dbpedia.org/property/deathPlace> ?carolynJonesDeathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,13,train,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
SELECT ?child ?realName WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> .
  ?child a dbo:Monarch . # Assuming Monarch is the class for royalty
  ?child rdfs:label ?realName .
}
```",3,4,4,3,1,3,2,20,0,0,17,0,0.0,0
412,5,train,Who is the awardee of 30?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?award ?recipient WHERE {
  ?award <http://dbpedia.org/ontology/name> ?awardName .
  FILTER regex(?awardName, ""30"", ""i"") .
  ?award dbo:recipient ?recipient .
}
```

This query searches for awards with names containing ""30"" and retrieves their recipients. Adjustments may be needed based on the specific context of ""30.""",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
89,55,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  # Spouse of the father that is royalty of Myat Hpone Pyo
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?result <http://dbpedia.org/ontology/spouse> ?father .

  # Child of the parent of Min Hla Htut of Pyakaung
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> .
  ?result <http://dbpedia.org/ontology/parent> ?parent .

  # Predecessor of the child of Saw Shwe Khet
  ?sawChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?predecessor <http://dbpedia.org/ontology/successor> ?sawChild .
  FILTER(?result = ?predecessor)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
119,36,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
SELECT ?result WHERE {
  ?administration <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  ?administration <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  
  ?office <http://dbpedia.org/ontology/holder> <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> .
  ?administration <http://dbpedia.org/property/tenantOf> ?office .
  ?result <http://dbpedia.org/ontology/tenant> ?administration .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,8,train,Give me the reference to Mitaka and region of the time zone of Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
SELECT ?mitakaReference ?region WHERE {
  <http://dbpedia.org/resource/Mitaka> ?property ?mitakaReference .
  OPTIONAL { 
    <http://dbpedia.org/resource/Japan> <http://www.w3.org/2006/time#during> ?timeZone .
    ?timeZone <http://www.w3.org/2006/time#hasTimeZoneRegion> ?region .
  }
}
```",3,3,4,2,2,2,2,9,1,12,0,0.07692307692307693,1.0,0.14285714285714288
398,15,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in Aleksandr Filimonov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?result WHERE {
  # Find the soccer club associated with Denis Kolodin
  <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?club .
  
  # Identify a figure known by a nickname of this club
  ?club <http://dbpedia.org/property/nickname> ?nickname .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .

  # Check if the same figure is also associated with Aleksandr Filimonov as a player
  OPTIONAL {
    <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?team .
    ?result <http://dbpedia.org/ontology/team> ?team .
  }
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
871,6,train,"Who is the child of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
531,29,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  # Tenant of Madrid
  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Madrid> .
  
  # Office holder and politician
  ?result <http://dbpedia.org/ontology/politicalParty> ?party .
  ?result <http://dbpedia.org/ontology/officeHolder> ?office .

  # Commander in Central African Republic Civil War
  OPTIONAL {
    ?result <http://dbpedia.org/property/commanderRole> <http://dbpedia.org/resource/Central_African_Republic_Civil_War> .
  }

  # Office of Miguel Maura
  OPTIONAL {
    ?mauraOffice <http://dbpedia.org/ontology/successor> ?result .
    ?mauraOffice <http://dbpedia.org/resource/Miguel_Maura> .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
769,10,train,"Give me the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. }","```sparql
SELECT ?manager WHERE {
  ?org a dbo:Organization ;
       a dbo:SportsClub ;
       a dbo:SportsTeam ;
       a dbo:SoccerClub .
  
  OPTIONAL { 
    ?org <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Hong_Kong_C> .
  }
  
  ?manager a dbo:SportsManager ;
           a dbo:SoccerManager ;
           dbo:manages ?org .
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
871,30,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
SELECT ?result WHERE {
  # Parent of Edward Stanley, 17th Earl of Derby
  <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/birthParent> ?result .
  
  # Parent of Victor Stanley (Royal Navy officer)
  <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> <http://dbpedia.org/ontology/birthParent> ?result .

  # One of their children is a politician
  ?child <http://dbpedia.org/ontology/birthParent> ?result .
  ?child <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 represents ""politician""
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
633,15,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
SELECT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> .
  FILTER(?child = ?parent) .

  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""noble""

  ?spouse <http://dbpedia.org/ontology/spouse> ?parent .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
213,7,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> .
  ?child <http://dbpedia.org/property/occupation> ""politician""@en .
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
595,45,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
SELECT ?commander WHERE {
  # Identify the war that is both a disease and societal event
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Disease> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .

  # Find the owner of USS Arcadia (ID-1605)
  ?owner <http://dbpedia.org/property/owns> <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> .
  
  # Identify the author of ""Back to Work""
  ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Back_to_Work_(book)> .

  # Find Hillary Clinton's spouse
  ?spouse <http://xmlns.com/foaf/0.1/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
  
  # Link the commander to the war and the three individuals
  ?commander <http://dbpedia.org/ontology/commanded> ?war .
  ?commander <http://dbpedia.org/property/relatedTo> ?owner .
  ?commander <http://dbpedia.org/property/relatedTo> ?author .
  ?commander <http://dbpedia.org/property/relatedTo> ?spouse .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,57,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?author WHERE {
  # Identify the person who is a resident of Chappaqua, New York and meets all other criteria
  ?person <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?person <http://www.wikidata.org/entity/P106> ?politicianRole . # P106 is the property for occupation, assuming it includes politician and office holder
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
  
  OPTIONAL {
    ?person <http://www.wikidata.org/entity/P39> ?commandRole . # P39 is the property for position held, assuming it includes commander role
    ?event <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11173>, <http://www.wikidata.org/entity/Q11070> . # Q11173 is disease, Q11070 is societal event
    ?person <http://dbpedia.org/ontology/commanderOf> ?event .
  }
  
  # Find works authored by this person that are written works, books, or general works
  ?work <http://purl.org/dc/terms/creator> ?author .
  FILTER (?author = ?person)
  ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q571>, <http://www.wikidata.org/entity/Q35637>, <http://www.wikidata.org/entity/Q225377> . # Q571 is book, Q35637 is written work, Q225377 is work
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
668,22,train,Give me the associated musical artist of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedBand> ?result .
  OPTIONAL { 
    ?result <http://dbpedia.org/property/birthName> ""Joey B"" .
  }
}
```",3,3,4,2,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
595,18,train,Give me the spouse of Hillary Clinton and author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
  
  OPTIONAL { 
    ?result <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Back_to_Work_(book)> .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result .
  }
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
513,12,train,Give me the residence of the leader of Ulster Unionist Party and entity in United Kingdom.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?leader ?residence WHERE {
  ?party <http://dbpedia.org/ontology/president> ?leader .
  ?party <http://dbpedia.org/property/name> ""Ulster Unionist Party""@en .
  
  ?leader <http://dbpedia.org/property/residence> ?residence .
  
  OPTIONAL { 
    ?leader <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/United_Kingdom> .
  }
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
905,41,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Charles I of Hungary's father and his parent(s)
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_I_of_Hungary> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/father> ?father .
  }
  
  # Step 2: Ensure this person is a child of Stephen V of Hungary
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .

  # Step 3: Check if they are the spouse of Philip I's father
  OPTIONAL {
    ?philipFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
    ?result <http://dbpedia.org/ontology/spouse> ?philipFather .
  }
  
  # Ensure all conditions are met
  FILTER (?parent = ?result)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,56,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
SELECT ?result WHERE {
  # Real Name of The Fabulous Thunderbirds
  <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://dbpedia.org/property/realName> ?result .

  # Band of Kim Wilson
  OPTIONAL { 
    <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
  }

  # Associated Musical Artist of Nick Curran
  OPTIONAL {
    ?nickCurran <http://dbpedia.org/property/birthName> ""Nick Curran"" .
    ?nickCurran <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musical_artist> .
    ?nickCurran <http://dbpedia.org/ontology/associatedBandOrArtist> ?result .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,19,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?player WHERE {
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Special:Search?search=1955-02-22&title=Special:Search>.
  ?person <http://purl.org/dc/terms/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/athlete> ?player .
  
  OPTIONAL {
    ?team <http://dbpedia.org/property/teamMember> ?player .
    ?team <http://dbpedia.org/property/teamMember> <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
158,3,train,"Give me the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
203,53,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . }","```sparql
SELECT ?commander WHERE {
  # Identify the war associated with ""The Triple X's""
  ?war <http://dbpedia.org/ontology/war> ?tripleX .
  ?tripleX rdfs:label ""The Triple X's""@en .
  
  # Ensure it is a military conflict and an event
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
       rdf:type <http://dbpedia.org/ontology/Event> .

  # Find the commander of this war
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  
  # Check if the commander was involved in the Battle of Fort Royal
  OPTIONAL {
    ?battle rdfs:label ""Battle of Fort Royal""@en ;
           <http://dbpedia.org/property/militaryForce> ?commander .
  }
  
  # Check if the commander was involved in an event with Robert Calder
  OPTIONAL {
    ?event rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
           <http://dbpedia.org/ontology/event> ?calderEvent .
    ?calderEvent rdfs:label ""Robert Calder""@en .
    ?commander <http://dbpedia.org/property/militaryForce> ?event .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,10,train,"Give me the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Nate Newton's band
  <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/member> ?band .
  
  # Ensure the band is an organization
  ?band <http://www.w3.org/2002/07/owl#sameAs> ?orgType1 .
  FILTER(?orgType1 IN (<http://dbpedia.org/resource/Organisation>, <http://dbpedia.org/resource/Band>)).

  # Step 2: Find associated musical artist of the band
  ?band <http://dbpedia.org/property/associatedBand> ?artist .
  
  # Ensure this artist is an organization
  ?artist <http://www.w3.org/2002/07/owl#sameAs> ?orgType2 .
  FILTER(?orgType2 IN (<http://dbpedia.org/resource/Organisation>, <http://dbpedia.org/resource/Band>)).

  # Step 3: Find associated musical artist of this artist
  ?artist <http://dbpedia.org/property/associatedBand> ?finalArtist .

  # Ensure the final artist is an organization
  ?finalArtist <http://www.w3.org/2002/07/owl#sameAs> ?orgType3 .
  FILTER(?orgType3 IN (<http://dbpedia.org/resource/Organisation>, <http://dbpedia.org/resource/Band>)).
}
```",2,5,3,2,1,3,2,20,0,0,15,0,0.0,0
742,7,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?alumnus ?birthPlace WHERE {
  <http://dbpedia.org/resource/Plovdiv_University_Paisii_Hilendarski> <http://dbpedia.org/ontology/alumni> ?alumnus .
  ?alumnus <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
246,11,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of Prince Omar bin Faisal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify children of Prince Faisal bin Hussein who are royalty
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find parents of these children
  ?result <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Identify parent of Prince Omar bin Faisal
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
39,61,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Bob Thompson"" .
  ?person <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musical_artist> .

  OPTIONAL { 
    ?creation <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
    ?creation <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Fictional_character> .
    ?creation <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Comics_character> .

    ?alterEgo <http://dbpedia.org/ontology/alternateName> ?creation .
    ?result <http://dbpedia.org/property/professionalInvolvement> ?alterEgo .
  }
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
159,18,train,Give me the commander in Great Turkish War and reference to George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/name> ""Great Turkish War"" .
  ?war <http://dbpedia.org/ontology/commander> ?result .

  OPTIONAL { 
    ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/George_Ducas> .
    ?reference <http://dbpedia.org/property/person> ?result .
  }

  ?khmelnytsky <http://dbpedia.org/ontology/successor> ?result .
  FILTER(?khmelnytsky = <http://dbpedia.org/resource/Yurii_Khmelnytsky>)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
386,23,train,Give me the war of the awardee of Golden Sword for Bravery and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?entity WHERE {
  ?awardee <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> .
  ?awardee <http://dbpedia.org/property/war> ?war .

  <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/inhabitant> ?birthPlace .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
595,17,train,"Give me the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?owner .
  
  ?war <http://dbpedia.org/property/associatedWith> ?owner .
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11173> . # Assuming Q11173 is the identifier for ""disease""
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11070> . # Assuming Q11070 is the identifier for ""societal event""
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
871,20,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?commonParent WHERE {
  # Find children of Frederick Stanley, 16th Earl of Derby
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  
  # Find parents of these children
  ?child <http://dbpedia.org/ontology/parent> ?commonParent .

  # Find parent of Victor Stanley (Royal Navy officer)
  <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> <http://dbpedia.org/ontology/parent> ?commonParent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
59,2,train,Give me the residence of David Luckman.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/ontology/residence> ?residence .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
119,47,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Spain> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish""@en .
  
  ?person <http://dbpedia.org/property/residence> ?country .
  FILTER (isLiteral(?country) && langMatches(lang(?country), ""EN"") && contains(str(?country), ""Country""))

  OPTIONAL {
    ?election <http://dbpedia.org/ontology/winner> ?leader .
    ?election <http://dbpedia.org/ontology/electionDate> ?date .
    FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galician regional""))
    
    ?leader <http://dbpedia.org/property/office> ?result .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,7,train,"Give me the party of Bruno Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?brunoParty ?successorParty WHERE {
  # Find Bruno Retailleau's party
  <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/politicalParty> ?brunoParty .

  # Find Patrice Martin-Lalande's successor who is a politician and French
  OPTIONAL { 
    ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Patrice_Martin-Lalande> .
    ?successor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Q82955 is the identifier for ""politician""
    ?successor <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q142> . # Q142 is the identifier for ""France""
    
    # Find the successor's party
    ?successor <http://dbpedia.org/ontology/politicalParty> ?successorParty .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
89,48,train,Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the child of Saw Shwe Khet
  ?child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  
  # Step 2: Find the predecessor of this child
  ?result <http://dbpedia.org/ontology/successor> ?child1 .

  # Step 3: Identify the child of Minye Kyawswa
  ?child2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .
  
  # Step 4: Find this child's parent (grandparent of original child)
  ?grandParent <http://dbpedia.org/ontology/parent> ?child2 .

  # Step 5: Identify individuals who are children of this grandparent
  ?result2 <http://dbpedia.org/ontology/parent> ?grandParent .
  
  FILTER(?result = ?result2) 
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
119,20,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?feijoo <http://dbpedia.org/ontology/name> ""Alberto Núñez Feijóo"" .
  ?feijoo <http://dbpedia.org/ontology/office> ?office .

  ?result <http://dbpedia.org/ontology/office> ?office .

  ?quirós <http://dbpedia.org/ontology/name> ""Álvaro Quirós"" .
  ?quirós <http://dbpedia.org/ontology/residence> ?residence .
  
  ?residence <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  FILTER EXISTS { 
    ?result <http://dbpedia.org/ontology/residence> ?residence .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
871,2,train,Give me the father of Arthur Stanley (politician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
756,27,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?manager WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^xsd:date .
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(str(?v1)), ""sports manager"")) .

  ?person <http://dbpedia.org/ontology/teamManager> ?team .
  
  ?team <http://dbpedia.org/ontology/sportsTeam> ?season .
  ?season a <http://dbpedia.org/ontology/SoccerClubSeason> ;
          a <http://dbpedia.org/ontology/SportsSeason> .
  
  BIND(?person AS ?manager)
}
```",3,7,4,3,1,3,3,71,0,0,5,0,0.0,0
472,14,train,"Give me the territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
SELECT ?territory WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Copenhagen> .
  
  OPTIONAL { 
    ?person <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?person <http://dbpedia.org/ontology/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
    ?territory <http://dbpedia.org/property/administration> ?person .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
399,4,train,Give me the professional in Singer and band member of Emilia (Bulgarian singer).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/occupation> ""Singer""@en .
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> .
  ?result <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",2,2,3,1,2,2,2,9,0,0,3,0,0.0,0
89,0,train,Give me the child of Saw Min Hla.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
585,15,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?child .
  
  OPTIONAL {
    ?award <http://www.wikidata.org/entity/P17> <http://www.wikidata.org/entity/Q30> . # Q30 is the identifier for the United States
    ?award <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q515> . # Assuming Q515 represents ""settlement""
    
    ?awardee <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/New_York_(state)> .
    ?award <http://dbpedia.org/property/recipient> ?awardee .
    
    ?child <http://dbpedia.org/ontology/nationality> <http://www.wikidata.org/entity/Q30> . # American nationality
    ?child <http://dbpedia.org/ontology/nativePlace> ?award .
  }
}
```",4,6,5,3,2,3,2,20,1,0,0,1.0,1.0,1.0
361,21,train,"Give me the professional in  and professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lasso_the_Moon> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalAlbum108069834> .
  <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/starring> ?result .
  
  ?result <http://dbpedia.org/property/occupation> ""Actor""@en .

  OPTIONAL {
    <http://dbpedia.org/resource/Lasso_the_Moon> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film108069834> .
    <http://dbpedia.org/resource/Lasso_the_Moon> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CreativeWork108069834> .
  }
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
392,6,train,Give me the reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
SELECT ?designer ?reference WHERE {
  <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/ontology/designer> ?designer .
  OPTIONAL { 
    ?designer <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
  }
}
```",2,2,3,2,1,2,2,9,0,0,98447,0,0.0,0
89,26,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?father <http://dbpedia.org/ontology/parent> ?child .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
782,54,train,"Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Associated musical artist of Nick Curran
  <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .

  UNION

  # Reference to the real name of The Fabulous Thunderbirds
  OPTIONAL { 
    ?entity <http://dbpedia.org/property/band> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
    ?entity <http://dbpedia.org/property/realName> ?result .
  }

  UNION

  # Band of a band member born on 1945-03-30
  OPTIONAL {
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?birthDateEntity .
    ?birthDateEntity <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^xsd:date .
    ?person <http://dbpedia.org/ontology/member> ?band .
    ?band <http://www.w3.org/2000/01/rdf-schema#label> ?result .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
609,57,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT DISTINCT ?governorBirthPlace ?authorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Part 1: Birth place of the governor
  ?paulusPowell <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?region .
  ?region a <http://dbpedia.org/class/yago/AdministrativeRegion108069068> . # Assuming this class represents administrative regions
  ?governor a <http://dbpedia.org/ontology/Governor> ;
            <http://dbpedia.org/property/politician> true ;
            <http://dbpedia.org/ontology/governs> ?birthPlace .
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .

  # Part 2: Birth place of the author of El Deafo
  ?elDeafo a <http://dbpedia.org/ontology/Book> ;
           <http://purl.org/dc/terms/creator> ?author .
  ?author <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .

  # Part 3: Birth place of Vince Gilligan
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?vinceGilliganBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
557,37,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  # Find actor of Johnny Doughboy and their claim to fame as a work
  <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/claimToFame> ?fameWork .
  
  # Ensure the claim to fame is categorized as a work
  ?fameWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/AbstractArtifact108069068>.

  # Find producer of A Star Is Born (1937)
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result .

  # Ensure the same producer is linked to the claim to fame
  OPTIONAL { 
    ?fameWork <http://dbpedia.org/property/producer> ?result .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
288,1,train,Give me the theme of Dikhawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . },"```sparql
SELECT ?theme WHERE {
  <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/theme> ?theme .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
609,50,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?birthPlaceAuthor ?birthPlaceGovernor WHERE {
  # Step 1: Find the birth place of the author of El Deafo
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?author .
  ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlaceAuthor .

  # Step 2: Find the birth place of Paulus Powell, which is a region and administrative region
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?region .
  ?region <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?adminRegion .
  FILTER (?adminRegion IN (<http://dbpedia.org/resource/Administrative_Region>, <http://dbpedia.org/resource/Region>)) .

  # Step 3: Find the governor of this region who is a politician
  ?region <http://dbpedia.org/ontology/governor> ?governor .
  ?governor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 represents ""politician""

  # Step 4: Retrieve the birth place of this governor
  ?governor <http://dbpedia.org/ontology/birthPlace> ?birthPlaceGovernor .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
633,8,train,Give me the parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandparent WHERE {
  ?father <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Dorothea_of_Lorraine> .
  ?grandparent <http://dbpedia.org/ontology/birthParent> ?father .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
23,14,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?party ?entity WHERE {
  <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/politicalParty> ?party .
  
  OPTIONAL {
    <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/nationality> ?country .
    ?entity <http://dbpedia.org/ontology/country> ?country .
  }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
731,0,train,Give me the force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> dbo:commanded ?force .
}
```

This query assumes that `dbo:commanded` is the appropriate property to find the naval force associated with William Tennant. If this specific property does not yield results, alternative properties like `dbo:servedIn` or similar might be considered.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
723,4,train,"Give me the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/member> ?band .
  ?band a dbo:Band ;
        a dbo:Organisation .
  ?band <http://dbpedia.org/property/associatedMusicalArtist> ?result .
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
158,1,train,Give me the native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> .
  ?person a <http://dbpedia.org/ontology/Person> .
}
```",1,1,2,1,1,2,3,28,0,2,355,0.0,0.0,0
89,45,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla and spouse of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .

  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  
  FILTER (?result = ?predecessor)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
468,1,train,Give me the child of Alfonso IV of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,2,20,0,2,3,0.0,0.0,0
140,7,train,"Give me the commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander WHERE {
  ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Societal_event> .
  ?war <http://dbpedia.org/ontology/warParticipant> <http://dbpedia.org/resource/George_Pickett> .
  ?war <http://dbpedia.org/property/commander> ?commander .
}
```",2,3,3,2,1,3,2,20,0,0,26,0,0.0,0
723,14,train,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Nate_Newton> <http://dbpedia.org/ontology/member> ?associatedArtist .
  
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Band115930069> ;
                    <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Organization> .
  
  ?associatedArtist <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,6,4,3,1,3,2,20,0,0,112,0,0.0,0
687,43,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?result WHERE {
  # Player in Juan Carlos Molina (footballer)
  ?molina <http://dbpedia.org/property/team> ?team .
  ?player <http://dbpedia.org/property/team> ?team .
  
  # Actor of a film directed by Manuel Huerga who is also a soccer player and athlete
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  ?actor <http://dbpedia.org/ontology/starring> ?film .
  ?actor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> . # Soccer player
  ?actor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q193018> . # Athlete
  
  # Player in the team of Pablo Aimar
  ?aimarTeam <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Pablo_Aimar> .
  ?player <http://dbpedia.org/property/team> ?aimarTeam .

  FILTER (?player = ?result)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
871,53,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
SELECT ?result WHERE {
  # Identify child who is a politician
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?child <http://dbpedia.org/property/politician> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .

  # Check if this child is a parent of the awardee associated with Rodney Lees
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/parent> ?child .
    ?awardee <http://dbpedia.org/property/award> ?award .
    ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Rodney_Lees> .
  }

  # Check if this child is a parent of Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?child .
  }
  
  BIND(?child AS ?result)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,51,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Tenant of a Spanish Administration related to the Spanish Socialist Workers' Party
  ?administration <http://dbpedia.org/ontology/member> ?result .
  ?administration <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish Socialist Workers' Party""@en .

  # Tenant of a Residence in a Country where Álvaro Quirós Resides
  OPTIONAL {
    <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/nationality> ?country .
    ?result <http://dbpedia.org/ontology/residence> ?country .
  }
}
```",5,7,6,3,2,3,3,71,0,0,23,0,0.0,0
103,30,train,Give me the actor of Dispatches from Elsewhere and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""actor"")) .

  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?result <http://dbpedia.org/property/occupation> ?alterEgo .
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
756,33,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?nativeCountry WHERE {
  ?person <http://dbpedia.org/ontology/nationality> ?nativeCountry .
  
  OPTIONAL { 
    ?person <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/West_Germany> .
  }
  
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/VfL_Bochum> .
  }

  FILTER EXISTS {
    ?person <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/West_Germany> .
  }
  
  FILTER EXISTS {
    ?person <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/VfL_Bochum> .
  }

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,28,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  ?commander <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> .
  ?commander <http://dbpedia.org/ontology/successor> ?result .
  
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?result <http://www.wikidata.org/entity/P39> ?office . # Office holder
  
  ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Great_Turkish_War> .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/George_Ducas> .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
557,39,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?producer WHERE {
  # Find actors of High Society Blues
  <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Identify their claim to fame if it is a movie and work
  ?actor <http://dbpedia.org/property/claimToFame> ?fameWork .
  ?fameWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie105069976> . # Assuming this class represents movies
  ?fameWork <http://www.w3.org/2002/07/owl#sameAs> ?work .
  
  # Find producers of The Adventures of Tom Sawyer (1938 film)
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?producer .

  # Ensure the producer is linked to both
  ?fameWork <http://dbpedia.org/ontology/producer> ?producer .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
668,47,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Find associated artists of Elorm Kabu Amenyah (assuming he's known as ""Stonebwoy"")
  <http://dbpedia.org/resource/Stonebwoy> <http://dbpedia.org/ontology/associatedBand> ?result .

  # Identify the writer of The Live Anthology and their profession
  OPTIONAL {
    <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?writer .
    ?writer <http://dbpedia.org/ontology/profession> ?v1 .
    FILTER EXISTS { ?v1 <http://dbpedia.org/ontology/musicArtist> [] }
  }

  # Ensure the result is a musical artist
  ?result <http://dbpedia.org/ontology/musicArtist> [] .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
756,41,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  # Find the country of Theodor Heuss
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/ontology/nationality> ?country .
  
  # Find a native person from that country who is also a manager for both specified seasons
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ?nativeLabel .
  ?result <http://dbpedia.org/property/nativeCountry> ?country .

  OPTIONAL {
    <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/coach> ?result ;
        <http://dbpedia.org/ontology/sportSeason> ""2007–08"" .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/SBV_Vitesse> <http://dbpedia.org/ontology/coach> ?result ;
        <http://dbpedia.org/ontology/sportSeason> ""2020–21"" .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
198,18,train,"Give me the war of Amasa Tracy and force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/war> ?war .
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/war> ?war .

  OPTIONAL { 
    ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
    FILTER(?war = ?entity)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
595,59,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . }","```sparql
SELECT ?author WHERE {
  # Step 1: Identify works authored by Hillary Clinton that are books and written works.
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this is a class for written works
  ?work <http://dbpedia.org/ontology/book> [] .

  # Step 2: Find the author who is a resident of Chappaqua, NY and a politician.
  ?author <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?author <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician100000001> . # Assuming this is a class for politicians
  ?author <http://dbpedia.org/ontology/officeHolder> [] .

  # Step 3: Ensure the author is also the spouse of another individual who authored a book and written work, and is a politician.
  OPTIONAL {
    ?spouse <http://dbpedia.org/property/spouse> ?author .
    ?work2 <http://dbpedia.org/ontology/author> ?spouse .
    ?work2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this is a class for written works
    ?work2 <http://dbpedia.org/ontology/book> [] .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician100000001> . # Assuming this is a class for politicians
  }
}
```",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
742,12,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceEkaterina ?birthPlaceResident WHERE {
  # Birthplace of Ekaterina Zaharieva
  <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceEkaterina .

  # Birthplace of a resident of Sofia
  ?resident <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sofia> .
  ?resident <http://dbpedia.org/ontology/birthPlace> ?birthPlaceResident .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
595,47,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?author WHERE {
  ?work <http://dbpedia.org/ontology/book> true .
  ?work <http://dbpedia.org/ontology/writtenWork> true .
  ?work <http://dbpedia.org/property/author> ?author .
  
  ?author <http://dbpedia.org/ontology/residenceLocation> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?author <http://dbpedia.org/ontology/politicalParty> ?party .
  
  OPTIONAL {
    ?spouse <http://dbpedia.org/property/spouse> ?author .
    ?invitationWork <http://dbpedia.org/property/author> ?spouse .
    ?invitationWork <http://dbpedia.org/resource/title> ""An Invitation to the White House"" .
    ?spouse <http://dbpedia.org/ontology/politicalParty> ?party2 .
  }
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
158,11,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Nicholas_II_of_Russia> <http://dbpedia.org/ontology/ruler> ?country .
  ?native <http://dbpedia.org/property/nationality> ?country .
}
```",2,3,3,2,1,2,3,28,0,0,5723,0,0.0,0
782,59,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
SELECT ?band1 ?band2 WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Musical Artist""@en .
  ?person <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/memberOf> ?band1 .

  ?kimWilson <http://dbpedia.org/ontology/band> ?band2 .
  FILTER (str(?kimWilson) = ""Kim Wilson""@en)

  OPTIONAL {
    ?band1 <http://www.w3.org/2004/02/skos/core#related> ?band2 .
    # or any other property that indicates a reference to the real name
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
871,43,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer) and father of Arthur Stanley (politician).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  # Find the parent of Edward Stanley, 17th Earl of Derby
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  
  # Identify the child of this parent who is a politician and office holder
  ?result <http://dbpedia.org/ontology/parent> ?parent .
  ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?result <http://www.wikidata.org/entity/P39> ?office . # Office holder

  # Ensure this person is the parent of Victor Stanley (Royal Navy officer)
  ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> .

  # Confirm they are the father of Arthur Stanley (politician)
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Arthur_Stanley_(politician)> .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
398,8,train,Give me the player in the writer of The First Glove.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
SELECT ?player WHERE {
  <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/ontology/writer> ?writer .
  
  OPTIONAL { 
    ?writer <http://dbpedia.org/property/player> ?player .
  }
}
```",2,2,3,2,1,3,2,20,0,0,17,0,0.0,0
723,12,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of Mudvayne.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Find organizations related to Cavalera Conspiracy and their band members
  <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/musicalArtist> ?organization .
  ?organization <http://dbpedia.org/property/member> ?person .

  # Find band members of Mudvayne
  <http://dbpedia.org/resource/Mudvayne> <http://dbpedia.org/property/member> ?person .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
782,52,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
SELECT ?bandRealName ?nickCurranArtist ?claptonBandMemberBand WHERE {
  # Find Kim Wilson's band and its real name
  ?kimWilsonBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kim_Wilson> .
  OPTIONAL { 
    ?kimWilsonBand <http://dbpedia.org/property/realName> ?bandRealName .
  }

  # Find associated musical artist of Nick Curran
  ?nickCurranArtist <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Nick_Curran> .

  # Find band of a band member of Eric Clapton
  ?claptonBandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Eric_Clapton> .
  ?claptonBandMemberBand <http://dbpedia.org/ontology/member> ?claptonBandMember .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
353,48,train,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify grandchildren of Alfonso VI
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .

  # Step 2: Identify children of Roger II's parent who are royalty
  ?royaltyParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?child2 <http://dbpedia.org/ontology/parent> ?royaltyParent .
  ?royaltyParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Find intersection
  FILTER (?grandchild = ?child2)
  BIND(?grandchild AS ?result)
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
198,9,train,Give me the war of Amasa Tracy and force of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
SELECT ?war ?force WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/participatedIn> ?war .
    FILTER (STRSTARTS(STR(?war), ""http://dbpedia.org/resource/"") && STRCONTAINS(LCASE(STR(?war)), ""war""))
  }
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/commander> ?force .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
249,3,train,"Give me the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/property/birthPlace> ?birthplace .
  ?birthplace rdf:type dbo:Country .
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
119,1,train,Give me the tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT ?tenant WHERE {
  ?s <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  ?s <http://dbpedia.org/ontology/occupyingCountry> ?tenant .
}
```

This query assumes that `dbo:occupyingCountry` is a relevant property for identifying historical control over Spain. Adjustments may be needed based on the actual properties available in DBpedia.",1,1,2,1,1,3,3,71,0,0,216,0,0.0,0
89,41,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Predecessor of Myat Hpone Pyo
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .

  # Spouse of the father of Myat Hpone Pyo, who is royalty
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }

  # Child of the parent of Min Hla Htut of Pyakaung
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> .
    ?result <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",5,6,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
103,43,train,"Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/politician> [] .
  }
  
  ?actorAbKyaHoga <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Ab_Kya_Hoga> .
  ?actorAbKyaHoga <http://dbpedia.org/property/profession> ?profession .

  FILTER EXISTS { 
    ?result <http://dbpedia.org/property/profession> ?profession .
  }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
311,2,train,"Give me the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lotus_(R.E.M._song)> dbo:producer ?result .
  
  ?result rdf:type/rdfs:subClassOf* dbo:Organization .
  ?result rdf:type/rdfs:subClassOf* dbo:Band .
  ?result rdf:type/rdfs:subClassOf* dbo:Group .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
468,15,train,"Give me the child of Alfonso IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?child ?realName WHERE {
  <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/birthName> ?realName .
  }
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
412,20,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Napoleon Zervas and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Antonios Varthalitis's death place as a settlement
  <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/2004/02/skos/core#broader>* <http://dbpedia.org/resource/Settlement> .

  # Wars involving Napoleon Zervas
  ?war <http://dbpedia.org/property/warOf> <http://dbpedia.org/resource/Napoleon_Zervas> .
  
  # Wars involving Konstantinos Ventiris
  ?result <http://dbpedia.org/property/warOf> <http://dbpedia.org/resource/Konstantinos_Ventiris> .

  # Ensure the war is common to both Zervas and Ventiris
  FILTER (?war = ?result)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
198,2,train,"Give me the entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
}
```",1,1,2,1,1,3,3,71,0,176,12,0.0,0.0,0
353,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/politicalParty> ?office .
  }
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Child is also royalty
  ?reference <http://dbpedia.org/ontology/reference> ?parent .
  ?reference <http://dbpedia.org/resource/William_I> ?w1 .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
361,19,train,Give me the professional in the profession of Frédéric Bouraly and professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric_Bouraly> <http://dbpedia.org/property/profession> ?profession .
  
  ?result <http://dbpedia.org/property/profession> ?profession .
  ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Rustlers'_Rhapsody> .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,9,train,Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard"" .
  ?band <http://dbpedia.org/resource/Uncle_Murda> .
  ?band <http://dbpedia.org/ontology/member> ?person .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,0,train,"Give me the predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> <http://dbpedia.org/ontology/successor> ?successor .
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
782,36,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthName> ""Nick Curran"" .
  ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""musician""
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,8,train,"Who is the father, that is a royalty and an office holder, of Na'od?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  OPTIONAL {
    ?father <http://dbpedia.org/property/officeHolder> ?office .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
399,3,train,Give me the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?profession .
}
```",1,1,2,1,1,2,2,9,5,0,0,1.0,1.0,1.0
119,60,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
SELECT ?result WHERE {
  # Anxo Quintana as leader of an event
  ?event <http://dbpedia.org/ontology/event> ?administration .
  ?administration <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> .
  ?administration <http://dbpedia.org/property/office> ?result .

  # Tenant of a Spanish administration
  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/administration> ?tenant .
    ?tenant <http://www.w3.org/2000/01/rdf-schema#label> ?labelTenant .
    FILTER (CONTAINS(LCASE(?labelTenant), ""spanish""))
  }

  # Reference to Spanish Socialist Workers' Party
  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  }
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
871,49,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
SELECT ?father WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Eton_College> .
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://dbpedia.org/ontology/mother> ?mother .
  ?child <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/parent> ?child .
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
609,42,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?entity ?birthPlace WHERE {
  # Birth place of Glenn Youngkin
  OPTIONAL { 
    <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(""Glenn Youngkin"" AS ?entity)
  }
  
  # Birth place of an awardee from Vince Gilligan's awards list
  OPTIONAL {
    ?awardList <http://dbpedia.org/property/nomineeOrWinner> ?awardee .
    FILTER(STRSTARTS(LCASE(?awardList), ""list_of_awards_and_nominations_received_by_vince_gilligan""))
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(""Awardee of Vince Gilligan's awards"" AS ?entity)
  }
  
  # Birth place of the author of El Deafo
  OPTIONAL {
    <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
    ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(""Author of El Deafo"" AS ?entity)
  }
}
```",5,5,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
531,37,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/office> ?result .
  
  OPTIONAL { 
    ?commander <http://dbpedia.org/ontology/office> ?result .
    ?commander <http://www.wikidata.org/entity/P39> ?officeHolder .
    ?commander <http://www.wikidata.org/entity/Q82955> ?politician .
    
    ?conflict <http://dbpedia.org/ontology/conflict> ?force .
    ?conflict <http://dbpedia.org/ontology/societalEvent> ?event .
    ?force <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
  }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
871,10,train,Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/ontology/father> ?father .
  <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> <http://dbpedia.org/ontology/father> ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,11,train,"Give me the father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
SELECT ?child ?father WHERE {
  <http://dbpedia.org/resource/Philip_I_of_Castile> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
89,5,train,"Give me the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Saw_Shwe_Khet> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
151,4,train,Give me the entity in Ottoman Empire and reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . }","```sparql
SELECT ?entity WHERE {
  ?entity dbo:country <http://dbpedia.org/resource/Ottoman_Empire> .
  OPTIONAL { 
    ?entity dbo:award <http://dbpedia.org/resource/Order_of_the_Medjidie> .
  }
}
```",2,2,3,1,2,2,2,9,1,246,0,0.004048582995951417,1.0,0.00806451612903226
859,14,train,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
SELECT ?finalAssociatedArtist WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Khlyst_(band)> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?firstAssociatedArtist .
  
  ?firstAssociatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?finalAssociatedArtist .
}
```",3,4,4,3,1,3,2,20,0,0,34,0,0.0,0
595,42,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?author ?spouse WHERE {
  # Find the author of ""Back to Work""
  <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?author .
  
  # Check if this author has a spouse who is a politician and office holder
  OPTIONAL { 
    ?author <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
    ?spouse <http://www.wikidata.org/entity/P39> ?office . # Office holder
  }
  
  # Check if the author was a commander in a war that is both a disease and societal event involving the US Navy
  OPTIONAL {
    ?author <http://dbpedia.org/ontology/commander> ?war .
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q13442814> . # Assuming Q13442814 is a placeholder for ""disease""
    ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11070> . # Societal event
    ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/United_States_Navy> .
  }
}
```

Note: The query assumes certain properties and identifiers (like Q13442814 for ""disease"") which may need to be adjusted based on actual DBpedia data. Additionally, the metaphorical description of a war as a disease might not have direct entries in DBpedia.",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
557,16,train,"Give me the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?actor ?claimToFame WHERE {
  <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108930068> .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
595,51,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?owner .

  # Step 2: Find a war that is both a disease and a societal event
  OPTIONAL {
    ?war <http://dbpedia.org/property/warType> ?type1 .
    FILTER (?type1 IN (""Disease"", ""Societal Event""))
  }

  # Step 3: Identify the author of a work by Bill Clinton
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Clinton> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  FILTER (?type2 IN (""WrittenWork"", ""Book""))

  # Step 4: Find the commander associated with the war
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
595,4,train,"Give me the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/An_Invitation_to_the_White_House> dbo:author ?result .
  ?result a dbo:Politician .
  ?result a dbo:OfficeHolder .
}
```",1,3,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
143,12,train,Give me the actor of The Campus Queen and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Musical_artist> .
    ?result <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Tiwa_Savage> .
  }
}
```",3,3,4,2,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
943,15,train,"Who is the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?commander <http://dbpedia.org/ontology/parent> ?result .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
80,7,train,Give me the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?result . },"```sparql
SELECT ?series WHERE {
  ?series <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TVEpisode104930068>.
  OPTIONAL { 
    ?series rdfs:label ""The Golden Master""@en .
  }
}
```

Note: The class `TVEpisode104930068` is a placeholder and should be replaced with the correct DBpedia class for television series if available. Additionally, ensure that ""The Golden Master"" exists in DBpedia; otherwise, you may need to adjust the query based on actual data availability.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,51,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
SELECT ?result WHERE {
  ?shadowAlterEgo <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  ?parent <http://dbpedia.org/ontology/parent> ?child .
  ?grandParent <http://dbpedia.org/ontology/parent> ?parent .

  ?grandParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  OPTIONAL { 
    ?grandParent <http://dbpedia.org/property/officeHolder> ?office .
  }

  FILTER EXISTS {
    ?shadowAlterEgo = ?result
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
472,10,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result ?administration WHERE {
  ?person dbo:birthName ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  ?person <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL {
    ?person dbo:occupation ?administration .
  }
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
375,6,train,Give me the entity in Japan and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/war> ?war .
  ?war <http://dbpedia.org/property/location> ?location .
  FILTER(CONTAINS(LCASE(?location), ""japan""))
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/inception> ?war .
    FILTER(CONTAINS(LCASE(STR(?entity)), ""japan""))
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
557,13,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Cora_Sue_Collins> dbo:claimToFame ?fame .
  ?fame a dbo:Work .
  ?fame dbo:producer ?producer .
}
```

This query assumes that Cora Sue Collins' claim to fame is represented as a `dbo:Work` in DBpedia and that the producer of this work can be found using the `dbo:producer` property.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
258,14,train,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?almaMater WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/birthName> ""Eleonora Menicucci"" .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
375,4,train,Give me the person born as Koichirō.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person <http://dbpedia.org/property/birthName> ""Koichirō"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,3,train,Give me the birthday of Marty Pollio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthday WHERE {
  <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/property/birthDate> ?birthday .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
89,14,train,Give me the predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?successor <http://dbpedia.org/ontology/successor> ?child .
  ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
89,30,train,Give me the spouse of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?spouse <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Saw_Min_Hla> .

  ?child <http://dbpedia.org/ontology/successor> ?result .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,38,train,"Give me the force of the awardee of Gillmore Medal and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Awardee of Gillmore Medal
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Gillmore_Medal> .
  
  # Force associated with the awardee
  OPTIONAL { 
    ?awardee <http://dbpedia.org/property/force> ?result .
  }
  
  # Birthplace of Henry Clay Lewis
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure birthplace is a settlement and the entity is American
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?settlement .
  ?settlement <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Settlement> .
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
  }
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
557,52,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?result WHERE {
  # Producer of Cora Sue Collins' claim to fame
  <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/property/claimToFame> ?work .
  ?work <http://dbpedia.org/ontology/producer> ?result .

  # Professional in the alter ego of Kent Allard (print)
  OPTIONAL {
    <http://dbpedia.org/resource/Kent_Allard_(print)> <http://dbpedia.org/property/fictionalCharacter> ?character .
    ?result <http://dbpedia.org/ontology/profession> ?v1 .
    FILTER(?v1 = ?character) 
  }

  # Producer of A Star Is Born (1937 film)
  OPTIONAL {
    <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
706,3,train,Who is the awardee of Sangeet Natak Akademi Fellowship?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . },"```sparql
SELECT ?awardee WHERE {
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Sangeet Natak Akademi Fellowship""@en .
  ?award <http://dbpedia.org/ontology/receipient> ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
414,5,train,Who is the awardee of Nobel Prize in Physics?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nobelPrize> ?prize .
  ?prize <http://dbpedia.org/property/nobelPrizeCategory> ""Physics"" .
}
```",1,1,2,1,1,3,2,20,0,0,31,0,0.0,0
293,20,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/spouse> ?spouse .
  
  ?spouse <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,5,train,Give me the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
249,6,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/property/birthPlace> ?birthplace .
  ?birthplace a dbo:Country .

  ?native <http://dbpedia.org/ontology/nativePlace> ?birthplace .
}
```",2,3,3,2,1,2,2,9,0,0,11051,0,0.0,0
687,51,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?actor ?team WHERE {
  # Find actors in ""All or Nothing: Manchester City"" who are soccer players and athletes
  <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/occupation> ?v1 .
  
  # Ensure the actor is a soccer player and athlete
  FILTER (
    EXISTS { ?v1 <http://www.w3.org/2000/01/rdf-schema#label> ""soccer player"" . }
    && EXISTS { ?v1 <http://www.w3.org/2000/01/rdf-schema#label> ""athlete"" . }
  )
  
  # Find Marcelo Sarmiento's birthdate
  OPTIONAL {
    <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?birthdate .
    
    # Identify people born on the same date who are soccer players and managers
    ?person <http://dbpedia.org/ontology/birthDate> ?birthdate .
    ?person <http://dbpedia.org/property/occupation> ?v2 .
    
    FILTER (
      EXISTS { ?v2 <http://www.w3.org/2000/01/rdf-schema#label> ""soccer player"" . }
      && EXISTS { ?v2 <http://www.w3.org/2000/01/rdf-schema#label> ""soccer manager"" . }
    )
    
    # Determine the team associated with these individuals
    ?person <http://dbpedia.org/ontology/team> ?team .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,51,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/profession> ?profession .
  
  ?result <http://dbpedia.org/property/profession> ?profession .

  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    ?alterEgo <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 is the identifier for ""comics character""
    ?result <http://dbpedia.org/property/profession> ?v1 .
  }
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
293,35,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Find the ruling party in Central, Louisiana
  <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/ontology/rulingParty> ?party .
  
  # Identify members of this party
  ?person <http://dbpedia.org/property/memberOf> ?party .

  # Get Ann Sothern's birth name
  <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?birthName .
  
  # Match the person with the same birth name as Ann Sothern
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
513,11,train,Give me the entity in the award of George H. Cameron and residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?result WHERE {
  OPTIONAL { 
    ?award <http://dbpedia.org/ontology/receipient> <http://dbpedia.org/resource/George_H._Cameron> .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?result .
  }
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?result .
  }
}
```",3,3,4,2,2,3,2,20,0,2,2,0.0,0.0,0
513,6,train,Give me the entity in United Kingdom and residence of Doug Beattie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_Kingdom> .
  <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/property/residence> ?entity .
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
943,16,train,"Give me the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/Lamont_Cranston> <http://www.wikidata.org/entity/P1365> ?alterEgo .
}
```

Note: The property `<http://www.wikidata.org/entity/P1365>` is used here as a placeholder for the ""pseudonym"" or ""alter ego"" relationship, assuming it exists in DBpedia. If this specific property isn't available, you may need to adjust based on actual properties present in DBpedia.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
158,18,train,"Give me the native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
SELECT ?result WHERE {
  # Native of the Grand Duchy of Finland
  ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> .
  
  # Native of an administrative region that is a country under Nicholas II
  ?adminRegion <http://dbpedia.org/property/administrativeAuthority> <http://dbpedia.org/resource/Nicholas_II_of_Russia> .
  ?adminRegion <http://www.w3.org/2002/07/owl#sameAs> ?country . # Assuming the administrative region is same as a country
  FILTER (STRSTARTS(STR(?country), ""http://dbpedia.org/resource/"") && 
          STRLEN(STR(?country)) > 30) # Ensuring it's a DBpedia resource for countries
  
  ?result <http://dbpedia.org/ontology/birthPlace> ?adminRegion .
}
```",3,4,4,2,2,2,3,28,0,0,126,0,0.0,0
158,17,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Alexander_II_of_Russia#Grand_Duke_of_Finland> .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russian_Empire> .
}
```

Note: The exact property for ""native of the administration"" might not be directly available in DBpedia, so this query assumes that nationality properties can represent such historical affiliations. Adjustments may be needed based on actual data availability.",3,3,4,2,2,2,3,28,0,0,126,0,0.0,0
943,10,train,Give me the child of Dawit I and father of Baeda Maryam I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dawit_I> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
311,17,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy and associated musical artist of Filthy Friends.",SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
SELECT ?result WHERE {
  # Find the writer of the album Sappy
  <http://dbpedia.org/resource/Sappy_(album)> <http://dbpedia.org/ontology/writer> ?writer .
  
  # Check if this writer is a band member
  ?writer <http://dbpedia.org/ontology/member> ?band .

  # Find individuals associated with Filthy Friends as musical artists
  <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/musicalArtist> ?result .
  
  FILTER (?writer = ?result)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
198,5,train,Give me the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/award> ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
78,20,train,"Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Band member of The Alan Parsons Project
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/The_Alvin_Parsons_Project> .
  
  # Associated musical artist of Stuart Tosh
  OPTIONAL { 
    ?stuartTosh <http://dbpedia.org/property/associatedMusicalArtist> ?result .
    FILTER(STRSTARTS(LCASE(?stuartTosh), ""stuart tosh""))
  }
  
  # Associated musical artist of the writer of Wizards of Waverly Place (soundtrack)
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> .
    FILTER(STRSTARTS(LCASE(?writer), ""musical artist"") && STRSTARTS(LCASE(?writer), ""artist""))
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?result .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
158,4,train,"Give me the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?administration .
}
```

This query assumes that the administration details might be linked via a `seeAlso` property, which is often used to reference related entities or additional information.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
39,16,train,"Give me the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?result WHERE {
  ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:FictionalCharacter .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:ComicsCharacter .
  ?character <http://dbpedia.org/property/alterEgo> ?result .
}
```",2,4,3,2,1,3,3,71,3,0,0,1.0,1.0,1.0
628,2,train,Give me the native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> .
}
```",1,1,2,1,1,3,3,71,971,0,0,1.0,1.0,1.0
756,32,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?manager WHERE {
  # Find the manager of VfL Bochum during the 2007–08 season
  ?player <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/VfL_Bochum> .
  ?player <http://dbpedia.org/property/sportSeason> ""2007–08""^^xsd:string .
  ?manager <http://dbpedia.org/ontology/manages> ?player .

  # Ensure the player is associated with a sports club, organization, and soccer club
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsClub108069068> .
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068> .
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerClub108069068> .
  ?player <http://dbpedia.org/ontology/team> ?club .

  # Find the manager's native country, which should be Germany (Theodor Heuss's administrative country)
  ?manager <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Germany> .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
412,1,train,Give me the entity in Athens.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Athens> .
}
```",1,1,2,1,1,2,3,28,0,261,12,0.0,0.0,0
628,7,train,"Give me the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band dbo:award ?award .
  ?award dbo:location <http://dbpedia.org/resource/New_York_(state)> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
87,13,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of Janusz Kamiński.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  OPTIONAL {
    ?actor <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
198,40,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  # Force of Quincy Adams Gillmore
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
  
  # Entity in Charleston, South Carolina
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .

  # War of the awardee of an award show by United States Congress
  ?award <http://dbpedia.org/property/givenBy> <http://dbpedia.org/resource/United_States_Congress> .
  ?award <http://dbpedia.org/ontology/awardee> ?recipient .
  ?recipient <http://dbpedia.org/ontology/war> ?war .

  # Combine conditions
  FILTER(?force = ?entity)
  FILTER(?entity = ?result)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
737,30,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
SELECT ?result WHERE {
  # Child of Albrecht, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .
  
  # Child of the child of Archduke Charles Louis of Austria (great-grandchild or further)
  ?intermediateChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?result <http://dbpedia.org/ontology/father> ?intermediateChild .

  # Royalty
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Predecessor of Carl, Duke of Württemberg
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,5,train,"Give me the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . },"```sparql
SELECT ?work WHERE {
  ?work a dbo:Song .
  ?work a dbo:MusicalWork .
  OPTIONAL { 
    ?work <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/T.I._(rapper)> .
  }
  OPTIONAL { 
    ?work <http://dbpedia.org/ontology/lyricist> <http://dbpedia.org/resource/T.I._(rapper)> .
  }
}
```",1,3,2,1,1,3,3,71,44,77585,0,0.0005667984902549305,1.0,0.0011329548234264158
159,59,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?successor WHERE {
  ?conflict <http://dbpedia.org/ontology/event> ?event .
  ?pacz <http://dbpedia.org/ontology/commander> ?conflict .
  ?pacz rdfs:label ""Michał Kazimierz Pac""@en .

  ?successor <http://dbpedia.org/ontology/successor> ?pacz .
  ?successor <http://dbpedia.org/property/politicalParty> ?party .
  ?successor <http://dbpedia.org/ontology/officeHolder> ?office .

  OPTIONAL {
    ?ducas_work <http://dbpedia.org/ontology/author> ?writer .
    ?ducas_work rdfs:label ""George Ducas""@en .
    ?reference <http://dbpedia.org/property/reference> ?successor .
    ?reference <http://dbpedia.org/property/referencedWork> ?ducas_work .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
513,14,train,"Give me the residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ""George Savage""@en .
  ?party a <http://dbpedia.org/ontology/Organisation> ;
         a <http://dbpedia.org/ontology/PoliticalParty> .

  ?leader <http://dbpedia.org/property/partyLeader> ?party .
  
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
756,31,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
SELECT ?manager WHERE {
  # Step 1: Find the successor of the ""2006–07 VfL Bochum season""
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?successorSeason .
  
  # Step 2: Ensure the successor is a football league season, sports team season, and sports season
  ?successorSeason <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Football league season
  ?successorSeason <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11173> . # Sports team season
  ?successorSeason <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11879> . # Sports season

  # Step 3: Find the sports club associated with this successor season
  ?successorSeason <http://dbpedia.org/ontology/team> ?club .
  
  # Ensure the club is an organization, soccer club, and sports club
  ?club <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q43229> . # Organization
  ?club <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q33999> . # Soccer club
  ?club <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11173> . # Sports club

  # Step 4: Find players from this club and their managers who are natives of West Germany
  ?player <http://dbpedia.org/ontology/team> ?club .
  ?player <http://dbpedia.org/property/currentManager> ?manager .
  
  ?manager <http://www.wikidata.org/entity/P19> <http://dbpedia.org/resource/West_Germany> . # Native of West Germany
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
472,23,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?territory WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen
  <http://dbpedia.org/resource/Christian_Ditlev_Ammenborg_Hansen> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .

  # Find territories administered from this settlement
  ?territory <http://dbpedia.org/property/administeredFrom> ?settlement .
  
  OPTIONAL {
    # Identify the mayor or leader of Duchy of Schleswig
    <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/ontology/mayor> ?mayor .

    # Find territories administered by this mayor
    ?territory <http://dbpedia.org/property/administeredBy> ?mayor .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
816,30,train,Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result WHERE {
  # Parent of Amy Arbus
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Amy_Arbus> .
  
  # Parent of the child of Allan Arbus
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Allan_Arbus> .
  ?parent2 <http://dbpedia.org/ontology/birthChild> ?child .

  # Actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result .
  
  # Ensure the same person satisfies all conditions
  FILTER (?parent = ?parent2 && ?parent = ?result)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
668,26,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/occupation> ?profession .

  ?result <http://dbpedia.org/ontology/musicArtist> true .
  ?result <http://dbpedia.org/property/occupation> ?profession .
}
```",3,4,4,3,1,3,3,71,0,0,59565,0,0.0,0
143,2,train,Give me the reference to Afeez Oyetoro.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . }","```sparql
SELECT ?property ?hasValue WHERE {
  <http://dbpedia.org/resource/Afeez_Oyetoro> ?property ?hasValue .
}
```",1,1,2,1,1,3,2,20,0,109,1,0.0,0.0,0
347,35,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?result WHERE {
  # Find Cecilia Renata of Austria's father
  ?ceciliaRenata <http://dbpedia.org/ontology/father> ?father .
  
  # Identify the child of this father
  ?child <http://dbpedia.org/ontology/father> ?father .

  # Ensure the person is a commander in a war that meets specific criteria
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?war <http://dbpedia.org/ontology/tvSeries> ?tvShow .

  # The person must be a commander in this war
  ?child <http://dbpedia.org/ontology/commander> ?war .

  # Check for connection to the 2nd Dragoon Regiment (France)
  OPTIONAL {
    ?connection <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
    ?child ?connection .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
782,31,train,Give me the reference to the real name of the band of Kim Wilson and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?band ?realName WHERE {
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> ?band .
  OPTIONAL { 
    ?band <http://dbpedia.org/property/realName> ?realName .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
943,5,train,"Give me the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
SELECT ?medium ?reference WHERE {
  <http://dbpedia.org/resource/Lamont_Cranston> ?property ?reference .
  
  FILTER (
    (?property = <http://dbpedia.org/ontology/starring> && 
     (STRSTARTS(STR(?reference), ""http://dbpedia.org/resource/"") &&
      (CONTAINS(LCASE(STR(?reference)), ""film"") || CONTAINS(LCASE(STR(?reference)), ""television""))))
    ||
    (?property = <http://dbpedia.org/ontology/radioShow> && 
     CONTAINS(LCASE(STR(?reference)), ""radio""))
  )
  
  BIND(
    IF(CONTAINS(LCASE(STR(?reference)), ""film""), ""Film"", 
       IF(CONTAINS(LCASE(STR(?reference)), ""television""), ""Television"", ""Radio"")) AS ?medium
  )
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?person dbo:commanderOf <http://dbpedia.org/resource/French_Revolutionary_Wars> .
  ?person dbo:participatedInWar ?war .
}
```

This query assumes the existence of properties like `dbo:commanderOf` and `dbo:participatedInWar`, which may need to be adjusted based on DBpedia's actual schema.",2,2,3,2,1,3,2,20,0,0,121,0,0.0,0
198,22,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?entity WHERE {
  # Identify Henry Clay Lewis's birthplace that is a settlement in America
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement ;
              <http://www.w3.org/ns/prov#location> ?location .
  FILTER EXISTS { 
    ?location <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> .
  }

  # Identify wars associated with Amasa Tracy
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/property/war> ?war .

  # Find the entity that is both in the birthplace and involved in a war
  ?entity rdf:type dbo:War ;
          <http://www.w3.org/ns/prov#location> ?birthPlace .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
353,39,train,"Give me the father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the father of William II of Sicily
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_II_of_Sicily> .

  # Step 2: Identify Constance of Burgundy's spouse who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 3: Find Constance's children
  ?child <http://dbpedia.org/ontology/fatherOrMother> ?spouse .
  
  # Step 4: Identify grandchildren (children of Constance's children)
  ?grandchild <http://dbpedia.org/ontology/fatherOrMother> ?child .

  # Step 5: Match the father of William II with a grandchild
  FILTER (?result = ?father && ?result = ?grandchild)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,49,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
SELECT ?result WHERE {
  ?artist <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> .
  ?artist <http://dbpedia.org/property/placeOfBirth> ?place .
  FILTER(CONTAINS(LCASE(?place), ""central region, ghana"")) .

  ?artist <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  
  ?elorm <http://dbpedia.org/resource/Elorm_Kabu_Amenyah> .
  ?elorm <http://dbpedia.org/ontology/birthName> ?elormBirthName .
  FILTER(?birthName = ?elormBirthName) .

  OPTIONAL {
    ?association <http://dbpedia.org/ontology/musicArtist> ?artist .
    ?association <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/Elorm_Kabu_Amenyah> .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
742,13,train,Give me the birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
SELECT ?alumnus ?birthPlace WHERE {
  <http://dbpedia.org/resource/Plovdiv_University_Paisius_of_Hilendar> <http://dbpedia.org/ontology/alumni> ?alumnus .
  ?alumnus <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
859,3,train,"Give me the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?result WHERE {
  ?result rdf:type dbo:Band .
  ?result rdf:type dbo:MusicalGroup .
  ?result rdf:type dbo:Organization .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/member> ?result .
    # Alternatively, use other properties like <http://dbpedia.org/ontology/partOf>, <http://dbpedia.org/ontology/associatedBand>, etc.
  }
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
756,54,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?manager WHERE {
  # Manager for VfL Bochum in 2007–08
  <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/teamManager> ?manager .
  <http://dbpedia.org/resource/VfL_Bochum_seasons#2007-08> <http://dbpedia.org/property/manager> ?manager .

  # Manager for SBV Vitesse in 2020–21
  <http://dbpedia.org/resource/SBV_Vitesse> <http://dbpedia.org/ontology/teamManager> ?manager .
  <http://dbpedia.org/resource/SBV_Vitesse_seasons#2020-21> <http://dbpedia.org/property/manager> ?manager .

  # Leader of West Germany
  ?leader <http://dbpedia.org/ontology/chancellor> <http://dbpedia.org/resource/West_Germany> .
  
  # Country administered by the leader of West Germany (Germany)
  ?leader <http://dbpedia.org/property/countryAdministered> <http://dbpedia.org/resource/Germany> .

  # Manager's nationality
  ?manager <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
737,60,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the parent of Archduchess Margarete Sophie of Austria
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .

  # Step 2: Identify their child who is royalty
  ?royalChild <http://dbpedia.org/ontology/parent> ?parent .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 3: Find that child's own child
  ?grandchild <http://dbpedia.org/ontology/parent> ?royalChild .

  # Step 4: Identify the spouse of Archduchess Helena of Austria who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 5: Find their child
  ?childOfSpouse <http://dbpedia.org/ontology/parent> ?spouse .

  # Step 6: Determine the predecessor of this child
  ?result <http://dbpedia.org/ontology/successor> ?childOfSpouse .
  
  FILTER (?grandchild = ?result)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
198,21,train,"Give me the war of the awardee of Medal of Honor and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  ?person dbo:recipient <http://dbpedia.org/resource/Medal_of_Honor> .
  ?entity dbo:location <http://dbpedia.org/resource/Charleston,_South_Carolina> .
  ?person dbo:residence ?entity .
  ?person dbo:award ?medal .
  ?person dbo:war ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
943,3,train,"Who is the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/title> ""Siege of Mukha"" .
  ?event <http://dbpedia.org/ontology/commander> ?result .
  
  # Assuming Q214424 is the identifier for ""royalty""
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,6,train,"Give me the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
37,2,train,"Who is the writer, that is an artist, of The Miseducation of Lauryn Hill?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""artist""))
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
687,12,train,Give me the player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
SELECT DISTINCT ?player WHERE {
  # Find teams where Sergio Agüero has played
  <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> <http://dbpedia.org/ontology/team> ?teamAgüero .
  
  # Find players in those teams
  ?player <http://dbpedia.org/ontology/team> ?teamAgüero .
  
  # Ensure the player is not Sergio Agüero himself
  FILTER (?player != <http://dbpedia.org/resource/Sergio_Ag%C3%BCero>)
  
  # Find teams where Pablo Aimar has played
  <http://dbpedia.org/resource/Pablo_Aimar> <http://dbpedia.org/ontology/team> ?teamAimar .
  
  # Check if the player is also in any of those teams
  ?player <http://dbpedia.org/ontology/team> ?teamAimar .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,18,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
557,12,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  { 
    <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> dbo:producer ?producer .
  }
  UNION
  {
    <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> dbo:producer ?producer .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
375,9,train,Give me the war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  {
    <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?war .
    ?war rdf:type dbo:Battle .
  }
  UNION
  {
    <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?war .
    ?war rdf:type dbo:Battle .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
816,17,train,Give me the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
941,3,train,"Who is the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> 
    (<http://dbpedia.org/ontology/father>|<http://dbpedia.org/ontology/mother>) ?parent .
  
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
311,0,train,Give me the associated musical artist of Filthy Friends.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/member> ?artist .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
119,39,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . }","```sparql
SELECT ?result WHERE {
  ?administration <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Spain> .
  ?administration <http://dbpedia.org/ontology/government> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  }
}
```",4,5,5,3,2,3,3,71,0,0,23,0,0.0,0
871,37,train,"Give me the father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . }","```sparql
SELECT ?result WHERE {
  # Find the father of Arthur Stanley (politician)
  <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/ontology/father> ?father .
  
  # Ensure this person is a parent to someone who is both a politician and an office holder related to Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> ?father .
    ?child <http://dbpedia.org/ontology/politician> [] .
    ?child <http://dbpedia.org/property/officeHolder> [] .
    
    # Ensure the child is related to Edward Stanley, 17th Earl of Derby
    ?relatedChild <http://dbpedia.org/ontology/father> ?child .
    ?relatedChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""politician""
    ?relatedChild <http://www.wikidata.org/entity/P39> [] . # Assuming P39 represents an office holder
    ?relatedChild <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/father> .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,28,train,"Give me the child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Child of Stephen V of Hungary
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Spouse of the father of Philip I, Prince of Taranto
  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
    ?child <http://dbpedia.org/ontology/spouse> ?father .
  }
  
  # Parent of Charles Martel of Anjou
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
  }

  BIND(?child AS ?result)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,25,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Find the father of Eleonore of Austria, Queen of Poland
  <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/ontology/father> ?fatherOfEleonore .

  # Find the father of Cecilia Renata of Austria
  <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/ontology/father> ?fatherOfCeciliaRenata .

  # The result should be a child of the father of Cecilia Renata and also the father of Eleonore
  ?result <http://dbpedia.org/ontology/father> ?fatherOfEleonore .
  ?result <http://dbpedia.org/ontology/mother> ?mother . # Assuming mother is needed to complete the parent-child relationship
  ?fatherOfCeciliaRenata <http://dbpedia.org/ontology/child> ?result .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,38,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?result <http://dbpedia.org/ontology/successor> ?child .

  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }
}
```",4,5,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
392,8,train,Give me the member of 1. FC Magdeburg and reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/1._FC_Magdeburg> <http://dbpedia.org/ontology/member> ?result .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result .
  }
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
103,16,train,"Give me the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?actor ?profession WHERE {
  <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""politician""))
  OPTIONAL { 
    ?actor <http://dbpedia.org/property/profession> ?profession .
  }
}
```",2,3,3,2,1,3,3,71,0,1,3,0.0,0.0,0
742,5,train,Give me the resident of Sofia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Sofia> .
}
```",1,1,2,1,1,3,2,20,9,18,7,0.3333333333333333,0.5625,0.4186046511627907
628,4,train,"Give me the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Bobby_Shmurda> dbo:associatedBand ?associatedArtist .
  ?associatedArtist a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
103,44,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL { 
    ?shadowAlterEgo <http://dbpedia.org/property/alterEgo> ""The Shadow"" .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
    FILTER(?v1 = ?shadowAlterEgo)
  }
  
  ?shatrughanSinha <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
                   <http://dbpedia.org/property/profession> ?profession .
  FILTER(?result = ?shatrughanSinha)
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
905,46,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Condition 1: Spouse of the father of the parent (royalty) of Philip, Despot of Romania
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?grandfather <http://dbpedia.org/ontology/child> ?parent .
    ?spouse <http://dbpedia.org/ontology/spouse> ?grandfather .
    BIND(?spouse AS ?result)
  }

  # Condition 2: Parent of the father (royalty) of Charles I of Hungary
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_I_of_Hungary> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?parent <http://dbpedia.org/ontology/child> ?father .
    BIND(?parent AS ?result)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,0,train,Give me the birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
119,53,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/event> ?v1 .
  ?event <http://dbpedia.org/ontology/leader> ?result .
  
  OPTIONAL { 
    ?administration <http://dbpedia.org/property/member> ?result .
    ?administration <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Spain> .
  }
  
  OPTIONAL {
    ?party <http://dbpedia.org/ontology/member> ?result .
    ?party <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11173> . # Assuming Q11173 is the identifier for ""Spanish Socialist Workers' Party""
  }
  
  OPTIONAL {
    ?result <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Spain> .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
258,8,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Eleonora Menicucci de Oliveira"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
  ?person <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
943,37,train,"Give me the father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?father ?alterEgo WHERE {
  <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/ontology/father> ?father .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Lamont_Cranston> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
871,51,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?result <http://dbpedia.org/ontology/parent> ?child .
  ?result <http://dbpedia.org/property/occupation> ""politician"" .
  ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
311,3,train,"Who is the associated musical artist, that is an artist, of R.E.M.?",SELECT ?result WHERE { <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/member> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""artist"") || CONTAINS(LCASE(?v1), ""musician""))
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
293,59,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?spouse WHERE {
  # Find films produced by Nat Levine
  ?film <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> .
  
  # Identify actors of these films
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  
  # Determine the spouse of each actor
  ?actor <http://dbpedia.org/ontology/spouse> ?spouse .

  # Find landmarks at a specific elevation and their ruling party
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?latitude .
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?longitude .
  FILTER (abs(?elevation - 20.1168) < 0.0001)
  
  # Assuming there's a property linking landmarks to ruling parties
  OPTIONAL { 
    ?landmark <http://dbpedia.org/property/rulingParty> ?party .
    ?spouse <http://dbpedia.org/ontology/memberOf> ?party .
  }
}
```

Note: The query assumes the existence of certain properties and relationships in DBpedia, such as a direct link between landmarks and ruling parties. Adjustments may be necessary based on actual data availability.",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
87,0,train,Give me the actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Paradise_(2013_film)> dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,7,0,0,1.0,1.0,1.0
633,16,train,"Give me the parent of the father of Dorothea of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Dorothea_of_Lorraine> .
  ?grandparent <http://dbpedia.org/ontology/parent> ?father .
  
  ?result <http://dbpedia.org/ontology/spouse> ?grandparent .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> .

  OPTIONAL { 
    ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/nobleTitle> ?title .
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
905,60,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the predecessor of Stephen V of Hungary
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Step 2: Identify a child of this predecessor who is royalty
  ?child1 <http://dbpedia.org/ontology/parent> ?predecessor .
  ?child1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 3: Find the child of this royal child
  ?child2 <http://dbpedia.org/ontology/parent> ?child1 .
  
  # Step 4: Identify Philip, Despot of Romania and his parent who is royalty
  <http://dbpedia.org/resource/Philip_Despot_of_Romania> <http://dbpedia.org/ontology/parent> ?philipParent .
  ?philipParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 5: Find the father of this royal parent
  ?father <http://dbpedia.org/ontology/parent> ?philipParent .
  
  # Step 6: Ensure the identified child2 is married to this father
  ?result <http://dbpedia.org/ontology/spouse> ?father .
  FILTER (?result = ?child2)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,32,train,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v1 <http://dbpedia.org/property/starring> """"@en . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Find the album of ""What You Know"" by T.I.
  <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/property/album> ?album .
  
  # Find actors associated with this album
  ?album <http://dbpedia.org/ontology/starring> ?actor .

  # Find the movie ""with"" and its actors
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  FILTER EXISTS { ?movie <http://dbpedia.org/property/someProperty> ""with"" } # Replace 'someProperty' with the correct property if known

}
```

Note: The placeholder `?movie <http://dbpedia.org/property/someProperty> ""with""` should be replaced with the actual DBpedia property that describes the relationship or characteristic of the movie involving ""with."" This requires knowledge of the specific property used in DBpedia to describe such a relationship. If this information is not available, further exploration of DBpedia's schema might be necessary.",4,4,5,2,2,3,3,71,0,0,10,0,0.0,0
78,2,train,Give me the band member of The Alan Parsons Project.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/The_Alans_Parsons_Project> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,3,28,0,0,17,0,0.0,0
609,0,train,Give me the birth place of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
905,54,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Philip I's father and spouse
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .

  # Step 2: Identify Maria of Bytom's spouse and their royal parent
  ?mariaSpouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  ?royalFather <http://dbpedia.org/ontology/father> ?mariaSpouse .
  ?royalFather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 3: Ensure the person is a child of Stephen V of Hungary
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .

  # Combine conditions to find the correct individual
  FILTER (?spouse = ?royalFather)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,14,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?spouse1 <http://dbpedia.org/ontology/spouse> ?child .
  ?spouse2 <http://dbpedia.org/ontology/spouse> ?spouse1 .

  ?result <http://dbpedia.org/ontology/spouse> ?spouse2 .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
414,7,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?show WHERE {
  ?host <http://dbpedia.org/ontology/host> ?show .
  ?host <http://dbpedia.org/property/institution> ?institution .
  FILTER EXISTS { 
    ?noblePrize <http://dbpedia.org/ontology/category> <http://dbpedia.org/resource/Nobel_Prizes_in_Physics> .
    OPTIONAL { ?show <http://dbpedia.org/ontology/topic> ?noblePrize . }
    OPTIONAL { ?host <http://www.wikidata.org/entity/P69> ?noblePrize . } # Assuming P69 is the property for ""recipient of""
  }
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
80,61,train,"Give me the professional in the alter ego of the series of The Golden Master and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?result WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/ontology/profession> ?v1 .
  }
  
  ?song <http://dbpedia.org/ontology/song> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork108069068> . # Assuming this class represents musical works
  ?song <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/T.I._(rapper)> .
  
  ?album <http://dbpedia.org/ontology/song> ?song .
  ?result <http://dbpedia.org/ontology/starring> ?album .
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
668,13,train,Give me the professional in the profession of Rod Argent.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?profession .
  ?person <http://dbpedia.org/property/occupation> ?profession .
  FILTER(?person != <http://dbpedia.org/resource/Rod_Argent>)
}
```",2,2,3,2,1,3,3,71,45619,0,1,1.0,0.999978079789566,0.9999890397746577
756,3,train,"Give me the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result .
  ?result rdf:type dbo:FootballLeagueSeason .
  ?result rdf:type dbo:SportsTeamSeason .
  ?result rdf:type dbo:SportsSeason .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
39,27,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> 
    <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:MusicalArtist .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Bob_Thompson_(musician)> 
      <http://dbpedia.org/property/birthName> ""Bob Thompson""^^xsd:string .
  }
  
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:MusicalArtist .
  ?person <http://dbpedia.org/property/birthName> ""Bob Thompson""^^xsd:string .
  ?person <http://dbpedia.org/ontology/band> ?band .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
37,4,train,Give me the birthplace of Scott LaFaro and birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/resource/Bob_Crewe> }
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,2,2,9,0,3,1,0.0,0.0,0
103,19,train,"Give me the professional in Actor and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  
  ?work <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Film> ;
        <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Television_show> .
  
  ?work <http://dbpedia.org/ontology/starring> ?person .
  ?work <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
}
```",3,4,4,2,2,3,3,71,0,0,24,0,0.0,0
769,13,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  FILTER EXISTS { 
    ?person <http://dbpedia.org/property/occupation> ?occupation .
    VALUES ?occupation {
      <http://dbpedia.org/resource/Athlete>
      <http://dbpedia.org/resource/Soccer_player>
      <http://dbpedia.org/resource/Sports_manager>
      <http://dbpedia.org/resource/Soccer_manager>
    }
  }
  
  BIND(?person AS ?result)
}
```",3,7,4,3,1,3,2,20,0,0,6,0,0.0,0
392,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# No valid query can be constructed due to lack of specific subject.
```",1,1,2,1,1,2,2,9,0,0,98447,0,0.0,0
816,24,train,Give me the parent of the professional in Photographer and parent of Doon Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  ?photographer <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Photographer> .
  ?photographer <http://dbpedia.org/ontology/birthParent> ?parent .

  OPTIONAL { 
    <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/birthParent> ?parent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
293,14,train,Give me the person born as the birth name of Ann Sothern.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?person != <http://dbpedia.org/resource/Ann_Sothern>)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,41,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Condition 1: Parent of an awardee of Commander of the Royal Victorian Order
  ?awardee <http://dbpedia.org/ontology/title> ""Commander of the Royal Victorian Order"" .
  ?parent <http://dbpedia.org/ontology/child> ?awardee .

  # Condition 2: Father of Arthur Stanley (politician)
  <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result .

  # Condition 3: Parent of Frederick Stanley, 16th Earl of Derby's child
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?parent2 <http://dbpedia.org/ontology/child> ?child .

  # Ensure all conditions point to the same person
  FILTER (?result = ?parent && ?result = ?parent2)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
198,45,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
SELECT ?war ?entity WHERE {
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/war> ?war .
  
  ?person <http://www.wikidata.org/entity/P570> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> ;
          <http://www.wikidata.org/entity/P27> <http://dbpedia.org/resource/United_States> .

  ?person <http://dbpedia.org/property/birthPlace> ?birthplace .
  
  ?birthplace a <http://dbpedia.org/class/yago/Settlement108069068> . # Assuming Settlement is represented by this class

  ?entity rdfs:label ?birthplaceLabel ;
          owl:sameAs ?birthplace .

  OPTIONAL {
    <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/militaryForce> ?force .
    ?force <http://dbpedia.org/property/member> ?entity .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
782,16,train,"Give me the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Musical_artists> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/bandMember> ?band .
  }
}
```",2,3,3,2,1,3,3,71,0,0,61,0,0.0,0
347,27,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> .

  ?father <http://dbpedia.org/ontology/father> ?grandchild .
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
871,59,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Find the award associated with Rodney Lees and its awardee
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?lees <http://dbpedia.org/property/award> ?award .
  FILTER(?lees = <http://dbpedia.org/resource/Rodney_Lees>) .

  # Find the parent of the awardee
  ?awardee <http://dbpedia.org/ontology/birthParent> ?result .

  # Find Edward Stanley's parent and their children
  ?edward <http://dbpedia.org/ontology/birthParent> ?parent .
  FILTER(?edward = <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby>) .
  
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .

  # Find the parent of this child
  ?child <http://dbpedia.org/ontology/birthParent> ?result .

  # Ensure the person is a politician and an office holder
  ?result <http://dbpedia.org/ontology/politician> ?politician .
  ?result <http://dbpedia.org/property/officeHolder> ?officeHolder .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
943,39,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  ?grandfather <http://dbpedia.org/ontology/parent> ?child .
  
  # Check if the grandfather is royalty and an office holder
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  OPTIONAL { 
    ?grandfather <http://dbpedia.org/ontology/officeHolder> ?office .
  }
  
  # Return the reference to this entity
  ?result <http://xmlns.com/foaf/0.1/page> ?grandfather .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
737,37,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?greatGreatGrandchild WHERE {
  # Step 1: Find children of Alexander of Württemberg
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)> .
  
  # Step 2: Find grandchildren (children of the children)
  ?grandChild <http://dbpedia.org/ontology/birthParent> ?child1 .

  # Step 3: Find great-grandchildren
  ?greatGrandChild <http://dbpedia.org/ontology/birthParent> ?grandChild .
  
  # Step 4: Find great-great-grandchildren
  ?greatGreatGrandchild <http://dbpedia.org/ontology/birthParent> ?greatGrandChild .

  # Step 5: Ensure the great-great-grandchild is also a child of Archduchess Margarete Sophie of Austria
  ?greatGreatGrandchild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,17,train,"Give me the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?result WHERE {
  ?result a <http://dbpedia.org/ontology/War> .
  ?result a <http://dbpedia.org/ontology/TelevisionShow> .
  ?result a <http://dbpedia.org/ontology/SocialEvent> .

  OPTIONAL { 
    ?battleOfVienna dbo:involvesMilitaryForce ?militaryForce .
    ?result dbo:involvesMilitaryForce ?militaryForce .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,38,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/profession> ?profession .
  ?result <http://dbpedia.org/property/profession> ?profession .

  <http://dbpedia.org/resource/Joe_Brown_(singer)> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?result <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
668,58,train,"Give me the associated musical artist of $pacely and professional in the profession of Rod Argent and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?result WHERE {
  # Associated musical artist of $pacely
  <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/musicArtist> ?result .

  # Professional in the profession of Rod Argent
  ?result <http://dbpedia.org/property/profession> ?profession .
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/profession> ?argentProfession .
  FILTER(?profession = ?argentProfession)

  # Person born as the birth name of an artist from Central Region, Ghana
  OPTIONAL {
    ?artist <http://dbpedia.org/ontology/birthName> ?birthName .
    ?artist <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Ghana> .
    ?artist <http://dbpedia.org/ontology/placeOfBirth> ?placeOfBirth .
    ?placeOfBirth <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://www.w3.org/2006/vcard/ns#locality> ""Central Region"" .
    ?artist <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musician> .

    ?result <http://dbpedia.org/property/birthName> ?birthName .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,3,train,Give me the designer of Aston Martin AMR1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result . },"```sparql
SELECT ?designer WHERE {
  <http://dbpedia.org/resource/Aston_Martin_AMR1> dbo:designer ?designer .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
140,13,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .
  ?charge <http://dbpedia.org/resource/Pickett%27s_Charge> ;
          <http://dbpedia.org/property/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
  ?war <http://dbpedia.org/ontology/participant> ?militaryForce .
}
```",3,4,4,3,1,3,2,20,0,0,42,0,0.0,0
270,5,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
SELECT ?predecessor WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ada Jane Low""@en .
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  
  ?predecessor <http://dbpedia.org/ontology/successor> ?person .
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
816,4,train,"Give me the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a owl:Thing .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
}
```",1,2,2,1,1,3,3,71,7,1,6,0.875,0.5384615384615384,0.6666666666666667
198,50,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT DISTINCT ?force WHERE {
  # Force of the awardee of Quincy Adams Gillmore
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/receivesAward> ?award .
  ?award <http://dbpedia.org/property/awardedByForce> ?force .

  # Entity in the birthplace of Henry Clay Lewis
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""settlement"") && CONTAINS(LCASE(?label), ""american"")) .

  # Ensure the force is related to an entity in the birthplace
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?force .
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
609,14,train,Give me the birth place of the author of El Deafo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?author .
  ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
943,23,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?parent <http://dbpedia.org/ontology/child> ?commander .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Parent must also be royalty
  
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
375,15,train,Give me the entity in the birth place of Yamaza Enjirō and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Yamaza_Enjir%C5%8D> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/property/war> ?war .

  FILTER (?birthPlace = ?entity || ?war = ?entity)
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
905,42,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT DISTINCT ?result WHERE {
  # Step 1: Find Béla IV's children who are royalty
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find grandchildren of Béla IV
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Identify Philip I's father and his spouse
  ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .

  # Step 4: Ensure the person is a parent of Charles Martel of Anjou
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
  
  # Combine conditions to find the correct individual
  FILTER (?grandchild = ?spouse && ?spouse = ?result)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
89,52,train,"Give me the child of the parent of the child of Minye Kyawswa and predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1 & 2: Find grandchild of Minye Kyawswa
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Identify predecessor of Myat Hpone Pyo
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  
  # Ensure the result is a grandchild of Minye Kyawswa
  FILTER(?grandchild = ?result)

  # Step 4 & 5: Find Myat Hpone Pyo's royal father and confirm marriage
  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,44,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?result WHERE {
  # Player in Juan Carlos Molina (footballer)
  ?molina <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> .
  
  # Actor of All or Nothing: Manchester City who is a soccer player and athlete
  ?actor <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerPlayer100000001> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Athlete100000001> .

  # Player in the actor
  ?result <http://dbpedia.org/ontology/player> ?actor .
  
  # Team of person born on 1979-11-03 who is a soccer player and manager
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Births:November_3> .
  ?person <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerPlayer100000001> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerManager100000001> .

  # Team of the person
  ?team <http://dbpedia.org/ontology/team> ?person .
  
  FILTER (?result = ?molina) 
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
633,13,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find children of Antoine, Duke of Lorraine who are royalty
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Identify parent of this child
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .

  # Ensure the parent is royalty and a noble
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  OPTIONAL { 
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""noble""
  }

  # Find spouse of this parent
  ?spouse <http://dbpedia.org/ontology/spouse> ?parent .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
39,23,train,Give me the professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://dbpedia.org/property/profession> ?profession .

  ?result <http://dbpedia.org/property/profession> ?profession .
  FILTER(?result != ?producer)
}
```",3,3,4,3,1,3,3,71,0,0,46017,0,0.0,0
905,55,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Parent of the father, who is royalty, of Charles I of Hungary
  ?charlesFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_I_of_Hungary> .
  ?charlesGrandfather <http://dbpedia.org/ontology/father> ?charlesFather .
  ?charlesGrandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Spouse of the father of Philip I, Prince of Taranto
  ?philipFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
  ?result <http://dbpedia.org/ontology/spouse> ?philipFather .

  # Child of the child, who is royalty, of Béla IV of Hungary
  ?belaChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  ?belaGrandchild <http://dbpedia.org/ontology/father> ?belaChild .
  ?belaGrandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Combine conditions
  FILTER (?result = ?charlesGrandfather && ?result = ?belaGrandchild)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,30,train,Give me the associated musical artist of $pacely and professional in Musician and person born as the birth name of Joey B.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/$pacely> .
  ?result <http://dbpedia.org/property/occupation> ""Musician"" .
  ?result <http://dbpedia.org/ontology/birthName> ""Joey B."" .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,40,train,Give me the birth place of Cece Bell and birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?person ?birthPlace WHERE {
  # Birthplace of Cece Bell
  <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace1 .
  
  # Identify the award Vince Gilligan is associated with and find an awardee's birthplace
  OPTIONAL {
    <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/award> ?award .
    ?awardee <http://dbpedia.org/ontology/receivesAward> ?award .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace2 .
  }
  
  # Birthplace of Glenn Youngkin
  <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?birthPlace3 .

  BIND(?birthPlace1 AS ?birthPlace)
  UNION
  BIND(?birthPlace2 AS ?birthPlace)
  UNION
  BIND(?birthPlace3 AS ?birthPlace)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
595,12,train,Give me the author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result .
  
  OPTIONAL { 
    ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
    ?event <http://dbpedia.org/ontology/commander> ?result .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
557,15,train,"Give me the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Kent_Allard_(print)> <http://dbpedia.org/ontology/alterEgo> ?result .
  ?result a <http://dbpedia.org/ontology/FictionalCharacter> .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
609,20,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?vinceGilliganBirthPlace ?governorBirthPlace WHERE {
  # Birth place of Vince Gilligan
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?vinceGilliganBirthPlace .

  # Current governor of Virginia and their birth place
  OPTIONAL {
    ?governor a <http://dbpedia.org/ontology/GovernmentOfficial> ;
             <http://dbpedia.org/property/stateGovernor> <http://dbpedia.org/resource/Virginia> ;
             <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
737,61,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Three generations down from Alexander of Württemberg
  ?grandchild1 <http://dbpedia.org/ontology/parent> ?child1 .
  ?child1 <http://dbpedia.org/ontology/parent> ?grandchild2 .
  ?grandchild2 <http://dbpedia.org/ontology/parent> ?result .

  # Parent of Archduchess Margarete Sophie of Austria
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  
  # Child of the parent identified above
  ?result <http://dbpedia.org/ontology/parent> ?parent .

  # Ensure the person is royalty
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Link to Alexander of Württemberg (1804-1881)
  ?ancestor <http://dbpedia.org/ontology/deathDate> ""1881""^^xsd:date .
  ?ancestor <http://dbpedia.org/property/birthName> ""Alexander of Württemberg"" .
  ?ancestor <http://dbpedia.org/ontology/birthYear> ""1804""^^xsd:gYear .

  # Ensure the lineage starts from Alexander
  FILTER(?grandchild1 = ?ancestor)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
531,32,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  ?residence <http://dbpedia.org/ontology/resident> ?result .
  ?residence <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/A._R._Gallardon> .

  OPTIONAL { 
    ?conflict <http://dbpedia.org/property/commander> ?result .
    FILTER(CONTAINS(LCASE(?conflict), ""central african republic civil war""))
  }

  ?result <http://www.wikidata.org/entity/P39> ?office .
  ?result <http://www.wikidata.org/entity/Q82955> ?politicianRole .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
905,30,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the parent(s) of Charles Martel of Anjou
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .

  # Step 2: Identify children of Béla IV of Hungary who are royalty
  ?royalChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 3: Find a child of one of these royal children
  ?result <http://dbpedia.org/ontology/parent> ?royalChild .

  # Step 4: Ensure this person is also a spouse of Charles II of Naples
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,0,train,Give me the birthplace of Ekaterina Zaharieva.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Ekaterina_Zaharieva> dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
375,13,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?movie ?author WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow1000000> .
  
  ?artist <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?artist <http://dbpedia.org/ontology/occupation> ?v1 .
  FILTER (CONTAINS(LCASE(str(?v1)), ""artist"") && CONTAINS(LCASE(str(?v1)), ""musical artist"")) .

  ?movie <http://dbpedia.org/ontology/starring> ?artist .
  
  OPTIONAL { 
    ?movie <http://dbpedia.org/property/scriptwriter> ?author .
  }
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
89,11,train,Give me the child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,1,5,0.0,0.0,0
203,54,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  # Find wars involving the 30th Regiment of Foot
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> .
  
  # Ensure William Bayne is referenced in this war
  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/William_Bayne> .
  }
  
  # Find the commander of these wars
  ?war <http://dbpedia.org/property/commander> ?result .

  # Ensure the military force is involved in both this war and Battle of Cape Finisterre (1805)
  ?war <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
143,4,train,Give me the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,28,train,"Give me the player in Sergio Agüero and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
SELECT ?result WHERE {
  # Player in Sergio Agüero's team
  ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> .
  
  # Team of Pablo Aimar
  ?team2 <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Pablo_Aimar> .

  # Player in the team that is common between Sergio Agüero and Pablo Aimar
  ?result <http://dbpedia.org/ontology/team> ?team .
  ?result <http://dbpedia.org/ontology/team> ?team2 .

  # Athlete born on 1955-02-22
  OPTIONAL {
    ?athlete <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?result <http://dbpedia.org/ontology/team> ?teamAthlete .
    ?teamAthlete <http://dbpedia.org/ontology/player> ?athlete .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
943,34,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/ontology/father> ?result .
  
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/child> ?result .
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
  
  OPTIONAL {
    ?siege <http://dbpedia.org/property/commander> ?result .
    ?siege <http://dbpedia.org/resource/Siege_of_Mukha> .
    ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
398,10,train,Who is the writer of the work of Aleksandr Filimonov?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?work ?writer WHERE {
  <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/work> ?work .
  OPTIONAL { 
    ?work <http://dbpedia.org/ontology/creator> ?writer .
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
731,8,train,Give me the war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> dbo:commander ?commander .
  ?commander dbo:participatedInWar ?war .
}
```",2,2,3,2,1,3,2,20,0,0,12,0,0.0,0
159,35,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Find wars that are both television shows and societal events
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Television_shows> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Societal_events> .

  # Find Jean Baptist, Comte d'Arco as a commander in such wars
  ?war <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Jean_Baptiste,_Comte_d%27Arco> .
  
  # Identify commanders in the Russo-Polish War (1654–1667) who were politicians and office holders
  <http://dbpedia.org/resource/Russo-Polish_War_(1654%E2%80%931667)> <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  ?commander <http://www.wikidata.org/entity/P39> ?office .

  # Find successors of these commanders
  OPTIONAL { 
    ?successor <http://dbpedia.org/property/successor> ?commander .
    ?result <http://dbpedia.org/ontology/successor> ?successor .
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
263,13,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?result WHERE {
  # Find the parent of Mary Elphinstone, Lady Elphinstone
  <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> <http://dbpedia.org/ontology/birthName> ""Mary Elphinstone"" .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> .

  # Find the birthplace of William Gayner
  <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure the birthplace is both a region and a country
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://dbpedia.org/class/yago/Regions100000001> .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://dbpedia.org/class/yago/Countries100000001> .

  # Ensure the parent is native to this birthplace
  ?result <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
119,11,train,Give me the office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?election <http://dbpedia.org/ontology/electionDate> ""2009-05-01""^^xsd:date .
  ?election <http://www.w3.org/2004/02/skos/core#prefLabel> ""Galician regional election, 2009""@en .
  ?leader <http://dbpedia.org/ontology/officeHolder> ?election .
  ?leader <http://dbpedia.org/property/title> ?office .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
158,5,train,"Give me the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nicholas_II_of_Russia> <http://dbpedia.org/ontology/rule> ?result .
  ?result a <http://dbpedia.org/class/yago/Country108069068> . # Assuming this is the class for countries
}
```",1,2,2,1,1,2,3,28,0,0,3,0,0.0,0
531,11,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v0 . },"```sparql
SELECT ?tenant WHERE {
  <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> dbo:residence ?residence .
  ?residence dbo:tenant ?tenant .
}
```

Note: The property `dbo:tenant` is hypothetical in this context, as DBpedia may not have a direct property for tenants. This query assumes such a relationship exists or can be inferred through related properties.",2,2,3,2,1,3,3,71,0,0,375,0,0.0,0
295,6,train,Give me the native of Birmingham and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Birmingham,_England> .
  <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/ontology/writer> ?result .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
668,6,train,Give me the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?profession .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
628,33,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Find band members of Uncle Murda
  <http://dbpedia.org/resource/Uncle_Murda> <http://dbpedia.org/ontology/member> ?member .
  
  # Match member with a person born as the birth name of a musical artist from Florida
  ?artist <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> ;
          <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> ;
          <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musical_artist> .
  ?artist <http://dbpedia.org/property/birthName> ?birthName .

  # Check if the band member was born with that birth name
  ?member <http://dbpedia.org/property/birthName> ?birthName .
  
  BIND(?member AS ?result)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,47,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
SELECT ?force ?war WHERE {
  # Force of the awardee of Quincy Adams Gillmore's award
  ?award <http://dbpedia.org/ontology/receipient> ?awardee .
  ?awardee <http://dbpedia.org/property/militaryForce> ?force .
  
  FILTER(?award = <http://dbpedia.org/resource/Award_of_Quincy_Adams_Gillmore>) # Assuming this is the correct URI for Gillmore's award

  # War of the awardee of Medal of Honor
  OPTIONAL {
    ?medalOfHonorAward <http://dbpedia.org/ontology/receipient> ?medalAwardee .
    ?medalAwardee <http://dbpedia.org/property/conflict> ?war .
    
    FILTER(?medalOfHonorAward = <http://dbpedia.org/resource/Medal_of_Honor>) # Assuming this is the correct URI for Medal of Honor
  }
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
103,31,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?result WHERE {
  ?tvshow <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TVEpisode104069068>.
  ?tvshow <http://dbpedia.org/ontology/starring> ?actor .
  ?tvshow <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?actor <http://dbpedia.org/property/occupation> ""Actor""@en .
}
```",4,5,5,3,2,3,3,71,0,0,24,0,0.0,0
288,0,train,Give me the native of Lahore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Lahore> .
}
```",1,1,2,1,1,2,2,9,0,0,881,0,0.0,0
203,23,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/conflict> ?v1 .
  ?war a <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Assuming this class represents military conflicts
  ?war a <http://dbpedia.org/class/yago/Event108069068> . # Assuming this class represents events

  OPTIONAL {
    ?war <http://dbpedia.org/property/involvedParty> <http://dbpedia.org/resource/The_Triple_X's> .
  }

  ?war <http://dbpedia.org/ontology/commander> ?result .
}
```",3,5,4,3,1,3,3,71,0,0,113,0,0.0,0
557,18,train,Give me the professional in  and producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?producer .
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?producer .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
609,33,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?vinceBirthPlace ?governorBirthPlace WHERE {
  # Step 1: Find the birth place of Vince Gilligan
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?vinceBirthPlace .

  # Step 2: Check if this birth place is a region and an administrative region
  OPTIONAL {
    ?vinceBirthPlace <http://www.w3.org/2002/07/owl#sameAs> ?region .
    ?region <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/AdministrativeRegion108069068> .
    
    # Find the governor of this region
    ?governor a <http://dbpedia.org/ontology/GovernmentOfficial> ;
              <http://dbpedia.org/property/politicalParty> ?party ;
              <http://dbpedia.org/ontology/governs> ?region .

    # Ensure the governor is a politician
    ?governor <http://www.w3.org/2002/07/owl#sameAs> ?politician .
  }

  # Step 3: Find the birth place of Paulus Powell
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?paulusBirthPlace .

  # Check if this birth place is a region and an administrative region
  OPTIONAL {
    ?paulusBirthPlace <http://www.w3.org/2002/07/owl#sameAs> ?regionPowell .
    ?regionPowell <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/AdministrativeRegion108069068> .

    # Find the governor of this region
    ?governorBirthPlace a <http://dbpedia.org/ontology/GovernmentOfficial> ;
                        <http://dbpedia.org/property/politicalParty> ?partyPowell ;
                        <http://dbpedia.org/ontology/governs> ?regionPowell .

    # Ensure the governor is a politician
    ?governorBirthPlace <http://www.w3.org/2002/07/owl#sameAs> ?politicianPowell .
  }
}
```",4,7,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
38,3,train,"Give me the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork108069415> .
  ?result <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Book> .
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> .
  ?result <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Joe_Biden> .
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
687,59,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Condition 1: Player in the person born on Marty Pollio's birthday
  <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/property/birthDate> ?birthDate .
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  
  # Condition 2: Player in the actor of a film directed by Manuel Huerga
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  ?actor <http://dbpedia.org/ontology/starring> ?film .
  ?actor <http://dbpedia.org/property/occupation> ?v2 .
  
  # Ensure the person satisfies both conditions
  FILTER(?person = ?actor)
  FILTER(CONTAINS(LCASE(?v1), ""athlete""))
  FILTER(CONTAINS(LCASE(?v2), ""soccer player"") && CONTAINS(LCASE(?v2), ""athlete""))
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,30,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
SELECT ?reference ?associatedArtist ?band WHERE {
  # Reference to The Fabulous Thunderbirds
  <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> ?p ?reference .

  # Associated musical artist of Nicholas Michael Curran
  ?curran <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran"" .
  ?curran <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?curran ?p ?associatedArtist .

  # Band of Kim Wilson
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> ?band .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
58,16,train,Give me the producer of the movie with  and spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
SELECT ?producer WHERE {
  ?movie <http://dbpedia.org/ontology/producer> ?producer .
  
  OPTIONAL { 
    ?linda <http://www.w3.org/2000/01/rdf-schema#label> ""Linda Sue Cobb""@en .
    ?linda <http://dbpedia.org/property/birthName> ""Linda Sue Cobb"" .
    ?linda <http://dbpedia.org/ontology/spouse> ?producer .
  }
}
```",4,4,5,2,2,3,2,20,1,45422,0,2.2015278603350725e-05,1.0,4.402958788305741e-05
531,18,train,Give me the office of Mariano Rajoy and office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?officeRajoy ?officeMaura ?tenant WHERE {
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/office> ?officeRajoy .
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/office> ?officeMaura .

  ?tenant <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""madrid"")) .
  
  OPTIONAL {
    ?officeRajoy <http://dbpedia.org/property/location> ?tenant .
  }
  OPTIONAL {
    ?officeMaura <http://dbpedia.org/property/location> ?tenant .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
39,53,train,"Give me the professional in  and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Robert Lamar Thompson's band membership
  ?person <http://dbpedia.org/ontology/birthName> ""Robert Lamar Thompson"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/memberOf> ?band .
  }

  # Step 2: Identify the profession of the producer of Coke Studio Philippines
  ?producer <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> .
  ?producer <http://dbpedia.org/ontology/profession> ?profession .

  # Step 3: Find a person who matches both criteria
  ?result <http://dbpedia.org/property/memberOf> ?band .
  ?result <http://dbpedia.org/ontology/profession> ?profession .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
246,0,train,Give me the parent of Princess Sara bint Faisal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/father> ?parent .
  UNION
  <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/mother> ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
668,1,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/occupation> ""Musician""@en .
}
```",1,1,2,1,1,3,3,71,7563,0,0,1.0,1.0,1.0
943,46,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
SELECT ?result WHERE {
  ?shadow <http://dbpedia.org/property/alterEgo> ?result .
  
  OPTIONAL { 
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/birthParent> ?parent .
    
    ?commander <http://dbpedia.org/property/roleInEvent> <http://dbpedia.org/resource/Siege_of_Mukha> .
    ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/birthParent> ?commander .
  }
}
```",5,7,6,3,2,3,3,71,0,817,3,0.0,0.0,0
943,36,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
SELECT ?result WHERE {
  # Child of Dawit I
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> .
  
  # Father of the father (grandparent)
  ?child <http://dbpedia.org/ontology/parent> ?grandchildParent .
  ?grandchildParent <http://dbpedia.org/ontology/parent> ?grandchild .

  # Royalty and Office Holder
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?result <http://dbpedia.org/ontology/officeHolder> ?office .

  # Child of Baeda Maryam I
  ?child2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  
  # Linking the conditions together
  FILTER (?result = ?child)
  OPTIONAL { 
    ?child2 = ?grandchild .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
68,17,train,"Give me the father of Catherine of Austria, Queen of Portugal and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  ?catherine <http://dbpedia.org/ontology/father> ?result .
  FILTER(STRSTARTS(STR(?catherine), ""http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal""))

  OPTIONAL { 
    ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?commander <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Siege_of_Padua> .
    ?result <http://dbpedia.org/ontology/parent> ?commander .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,31,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?result WHERE {
  # Find Marty Pollio's birthdate
  <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Identify athletes born on the same date as Marty Pollio
  ?athlete <http://dbpedia.org/ontology/Athlete> true .
  ?athlete <http://dbpedia.org/ontology/birthDate> ?sameBirthDate .
  FILTER (?sameBirthDate = ?birthDate) .

  # Ensure they are also associated with Sergio Agüero as a player
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> .
    FILTER(?athlete = ?result)
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
89,27,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  ?spouse dbo:spouse <http://dbpedia.org/resource/Saw_Min_Phyu> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child dbo:parent ?spouse .
  
  ?successor dbo:predecessor ?predecessor .
  ?successor dbo:successor ?child .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
628,35,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the Award
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""region"") && CONTAINS(LCASE(?awardLabel), ""american"") && CONTAINS(LCASE(?awardLabel), ""state"") && CONTAINS(LCASE(?awardLabel), ""settlement"")) .

  # Step 2: Find the Native Region of Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro <http://dbpedia.org/ontology/nationality> ?nativeRegion .
  FILTER(?coro = <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico>) .

  # Step 3: Identify Associated Musical Artist with Bobby Shmurda
  ?bobbyShmurda <http://dbpedia.org/ontology/memberOfBand> ?associatedArtist .
  FILTER(?bobbyShmurda = <http://dbpedia.org/resource/Bobby_Shmurda>) .

  # Step 4: Find Band Members of the Associated Artist
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?associatedArtist .
  
  # Step 5: Match Native Region with Band Member's Place of Birth
  ?bandMember <http://dbpedia.org/ontology/placeOfBirth> ?nativeRegion .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
80,4,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# No valid query can be constructed due to insufficient information.
```",1,1,2,1,1,3,3,71,0,0,39790,0,0.0,0
295,9,train,"Give me the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Steven_Kapur> <http://dbpedia.org/ontology/occupation> ?artist .
  FILTER(CONTAINS(LCASE(?artist), ""music"") || CONTAINS(LCASE(?artist), ""artist"")) .
  
  ?work <http://dbpedia.org/property/work> <http://dbpedia.org/resource/Steven_Kapur> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork108069068> .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
756,55,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
SELECT ?manager WHERE {
  # Manager of Thomas Letsch's team during a soccer club season
  ?team <http://dbpedia.org/ontology/team> ?letschTeam .
  ?letschTeam <http://dbpedia.org/property/coach> ?manager .
  
  # Manager in the 2007-08 VfL Bochum season
  ?vflBochumSeason <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/VfL_Bochum> .
  ?vflBochumSeason <http://dbpedia.org/property/coach> ?manager .
  
  # Native of the country where Theodor Heuss was an administrator
  ?heuss <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> .
  ?manager <http://dbpedia.org/ontology/nativePlace> ?place .
  ?place <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Germany> .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
742,6,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Ekaterina_Zaharieva> 
    <http://dbpedia.org/resource/Reneta_Kamberova>
  }
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,4,0,0.2,1.0,0.33333333333333337
412,22,train,"Give me the war of the leader of National Party of Greece and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . },"```sparql
SELECT ?war ?entity WHERE {
  ?party <http://dbpedia.org/ontology/leader> ?leader .
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ""National Party of Greece""@en .

  ?leader <http://dbpedia.org/property/war> ?war .

  <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  
  OPTIONAL { 
    ?entity <http://dbpedia.org/property/location> ?settlement .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
414,9,train,"Give me the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?host WHERE {
  <http://dbpedia.org/resource/Rainer_Weiss> dbo:recipient ?award .
  ?award dbo:hostedBy ?host .
  ?host dbo:type dbp:EducationalInstitution . # Assuming 'EducationalInstitution' is the correct class for educational institutions in DBpedia
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
633,6,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of Renée of Bourbon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> dbo:parent ?parent .
  OPTIONAL { 
    ?parent dbo:spouse <http://dbpedia.org/resource/Renée_of_Bourbon> .
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
943,28,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and reference to  and father of Baeda Maryam I.","SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?result <http://dbpedia.org/ontology/parent> ?parent .
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
203,58,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
  
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  ?awardee <http://dbpedia.org/property/event> ?event .

  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict> ;
       <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Event> .
  ?war <http://dbpedia.org/property/militaryForce> ?militaryForce .
  
  ?bayne <http://dbpedia.org/ontology/war> ?war ;
         rdfs:label ""William Bayne (Royal Navy officer)""@en .

  ?campaign <http://dbpedia.org/ontology/commander> ?commander .
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  
  FILTER (?awardee = ?commander)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
80,21,train,Give me the actor of the movie with  and professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> """"@en . }","```sparql
# Placeholder for when specific movie and profession details are provided.
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Specific_Movie> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Specific_Profession> .
}
```",3,3,4,2,2,3,3,71,0,0,7802,0,0.0,0
687,60,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
SELECT ?player1 ?team WHERE {
  # Find Marty Pollio's birthdate
  <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?martyBirthDate .
  
  # Identify athletes born on Marty Pollio's birthday
  ?person1 <http://dbpedia.org/ontology/birthDate> ?martyBirthDate ;
           <http://dbpedia.org/property/profession> ?profession1 .
  FILTER(?profession1 = ""athlete"") .
  BIND(?person1 AS ?player1)
  
  # Find Marcelo Sarmiento's birthdate
  <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?marceloBirthDate .

  # Identify soccer players and managers born on Marcelo Sarmiento's birthday
  ?person2 <http://dbpedia.org/ontology/birthDate> ?marceloBirthDate ;
           <http://dbpedia.org/property/profession> ?profession2 .
  FILTER(?profession2 = ""soccer player"" || ?profession2 = ""soccer manager"") .

  # Find the team associated with this person
  ?person2 <http://dbpedia.org/ontology/team> ?team .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
119,24,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  # Find tenant of Santiago de Compostela
  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Santiago_de_Compostela> .
  
  # Determine the country where Álvaro Quirós resides
  <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/ontology/nationality> ?country .
  
  # Find tenant of a residence in that country
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://dbpedia.org/ontology/locationCountry> ?country .
  }
}
```",3,4,4,2,2,3,3,71,0,1,4,0.0,0.0,0
143,10,train,Give me the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Cynthia_Morgan> dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
203,49,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?militaryForce WHERE {
  ?awardee <http://dbpedia.org/property/receipient> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  
  ?event <http://dbpedia.org/ontology/event> ?societalEvent .
  ?societalEvent <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SocialEvent108069068> . # Assuming this class represents societal events
  ?awardee <http://dbpedia.org/ontology/event> ?event .
  
  ?conflict <http://dbpedia.org/property/participatedIn> <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> .
  ?conflict <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Assuming this class represents military conflicts
  ?commander <http://dbpedia.org/ontology/commander> ?conflict .
  
  ?militaryForce <http://dbpedia.org/property/event> ?event .
  ?militaryForce <http://dbpedia.org/property/commander> ?commander .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
23,20,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?party WHERE {
  # Party associated with Roy Barreras
  <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/memberOf> ?party .
  
  # Entity in the same country as Daniel Elahi Galán
  OPTIONAL { 
    <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/property/country> ?country .
    ?entity <http://dbpedia.org/property/country> ?country .
    ?entity <http://dbpedia.org/ontology/memberOf> ?party .
  }
  
  # Party associated with Gustavo Petro
  <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/memberOf> ?party .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,56,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  
  ?birthplace <http://www.w3.org/2004/02/skos/core#broader> ?country .
  FILTER (?country = <http://dbpedia.org/resource/United_States>) .

  ?birthplace a <http://dbpedia.org/class/yago/Settlement108069068> . # Assuming this class represents settlements

  OPTIONAL {
    ?awardee <http://dbpedia.org/property/medalOfHonorWar> ?war .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/militaryForce> ?force .
  }
  
  FILTER (?result IN(?birthplace, ?war, ?force))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,5,train,Give me the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Aladdin_(1958_film)> dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
414,12,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?show ?award WHERE {
  <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> <http://dbpedia.org/ontology/show> ?show .
  
  OPTIONAL {
    <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://www.wikidata.org/entity/P166> ?award .
  }
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,1,train,Give me the residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?residence .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
143,17,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Find associated musical artist of Cynthia Morgan
  <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/musicArtist> ?result .
  
  # Ensure the same person acted in The Campus Queen
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
80,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
80,18,train,Give me the actor of Shelby Oaks and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .

  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
816,51,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Find Mariclare Costello's spouse
  <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Find the child of that spouse
  OPTIONAL { 
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    
    # Find the parent(s) of that child
    ?child <http://dbpedia.org/ontology/parent> ?result .
  }
  
  # Find professionals in photography
  OPTIONAL {
    ?photographer <http://dbpedia.org/property/occupation> ""Photographer"" .
    
    # Find the parent(s) of those photographers
    ?photographer <http://dbpedia.org/ontology/birth> ?birth .
    ?birth <http://dbpedia.org/ontology/parent> ?result .
  }
}
```",5,5,6,3,2,3,3,71,2,0,0,1.0,1.0,1.0
347,47,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find parent of Archduke Charles Joseph of Austria
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> <http://dbpedia.org/ontology/father> ?parent .
  }
  UNION
  {
    <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> <http://dbpedia.org/ontology/mother> ?parent .
  }

  # Step 2: Find child of this parent
  ?child <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?parent .

  # Step 3: Identify the father of this child
  ?child <http://dbpedia.org/ontology/father> ?result .

  # Step 4: Find wars that are societal events and television shows
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?tvShow .

  # Step 5: Check for command association with the 2nd Dragoon Regiment (France)
  ?result <http://dbpedia.org/ontology/commanderOf> ?war .
  ?war <http://dbpedia.org/property/regiment> ""2nd Dragoon Regiment (France)""@en .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,14,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
SELECT ?result WHERE {
  ?administration <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  ?administration <http://dbpedia.org/ontology/leader> ?result .
  ?result <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q29> . # Q29 is the identifier for Spain
}
```",2,3,3,2,1,3,3,71,0,0,100,0,0.0,0
468,7,train,Give me the reference to the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?realName WHERE {
  <http://dbpedia.org/resource/Peter_IV_of_Aragon> dbo:givenName ?realName .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
151,1,train,Give me the reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Order_of_the_Medjidie> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
731,5,train,Who is the commander in Sinking of Prince of Wales and Repulse?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
198,31,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?award <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/United_States_Congress> .
  ?award <http://dbpedia.org/ontology/awardee> ?entity .
  ?entity <http://dbpedia.org/property/war> ?war .

  OPTIONAL {
    <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/militaryForce> ?force .
    ?force <http://dbpedia.org/property/war> ?war .
  }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
347,48,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify Cecilia Renata of Austria's father
  <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find the children of this father
  ?child <http://dbpedia.org/ontology/father> ?father .
  
  # Step 3: Check if any child was a commander in an event related to the Algerian War
  OPTIONAL {
    ?child <http://dbpedia.org/property/commanderInWar> ?warEvent .
    
    # Ensure the war is classified as both a societal event and a television show
    ?warEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
    ?warEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> .

    # Ensure the war is related to the Algerian War
    ?warEvent <http://dbpedia.org/ontology/relatedTo> <http://dbpedia.org/resource/Algerian_War> .
  }
  
  BIND(?child AS ?result)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
782,49,train,"Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?realName ?artist WHERE {
  <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://dbpedia.org/ontology/foundingMember> ?realName .
  
  OPTIONAL { 
    ?artist <http://dbpedia.org/property/birthName> ""Nick Curran"" .
    ?artist <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,18,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Condition 1: Child of Elvira of Castile, Queen of Sicily
  ?result <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .
  
  # Condition 2: Father of William II of Sicily
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_II_of_Sicily> .

  # Condition 3: Child of Roger II of Sicily
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
943,41,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify Baeda Maryam I's father
  <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/ontology/father> ?father .

  # Step 2 and 3: Find Yeshaq I's parent who is royalty, and check if the same person is their child
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  FILTER (?father = ?child)
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Reference to the alter ego of The Shadow
  OPTIONAL {
    ?result <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/The_Shadow#Alter_Ego> .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
198,48,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Part 1: Entity in the birthplace of Henry Clay Lewis
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""us"") || CONTAINS(LCASE(?settlementLabel), ""america""))
  
  # Part 2: War associated with the awardee of a show related to United States Congress
  OPTIONAL {
    ?show <http://dbpedia.org/ontology/awards> ?award .
    ?award <http://dbpedia.org/property/recipient> ?awardee .
    ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
    ?awardee <http://dbpedia.org/ontology/war> ?war .
    
    # Linking the entity from Part 1 to Part 2
    FILTER (?entity = ?birthPlace || ?entity = ?war)
  }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
39,17,train,"Who is the person born, that is a musical artist, as the birth name of Bob Thompson (musician)?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?birthName .
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
293,5,train,"Give me the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
SELECT ?film WHERE {
  ?film a dbo:Film .
  ?film <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> .
}
```",1,2,2,1,1,3,3,71,96,0,0,1.0,1.0,1.0
384,3,train,"Give me the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Bruno Daniel Marie Paul Retailleau"" .
  ?person a dbo:OfficeHolder .
  ?person a dbo:Politician .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
293,37,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
SELECT ?spouse WHERE {
  ?film <http://dbpedia.org/property/product> <http://dbpedia.org/resource/Nat_Levine> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  
  ?person <http://www.wikidata.org/entity/P735> ""Harriette Arlene Lake"" .
  FILTER(?actor = ?person)
  
  ?actor <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
293,58,train,"Give me the party member of Republican Party (United States) and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Find party members of the Republican Party (United States)
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Republican_Party_(United_States)> .

  # Identify actors in ""1,000 Dollars a Minute"" and their spouses
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/1,000_Dollars_a_Minute> .
    ?person <http://dbpedia.org/ontology/spouse> ?actor .
  }

  # Find the birth name of Tisha Sterling's parent
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/birthName> ?birthName .
    ?tisha <http://dbpedia.org/ontology/birthParent> ?parent .
    FILTER(?tisha = <http://dbpedia.org/resource/Tisha_Sterling>) .

    # Identify people born with that birth name
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
628,44,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of Uncle Murda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?result WHERE {
  # Find awards associated with regions that are American, states, and settlements
  ?award <http://dbpedia.org/ontology/location> ?region .
  ?region <http://www.w3.org/2000/01/rdf-schema#label> ?labelRegion .
  FILTER (CONTAINS(LCASE(?labelRegion), ""american"") && CONTAINS(LCASE(?labelRegion), ""state"") && CONTAINS(LCASE(?labelRegion), ""settlement""))

  # Find natives related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
  FILTER (?coro = <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico>)
  
  # Check for band membership in Uncle Murda
  ?result <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Uncle_Murda> .

  # Match the birth name of Bobby Shmurda
  ?bobby <http://dbpedia.org/property/birthName> ""Bobby Shmurda"" .
  FILTER (?result = ?bobby)

  # Ensure all conditions are met for a single result
  BIND(?nativePlace AS ?award)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
905,1,train,Give me the parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
347,50,train,Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Find Cecilia Renata of Austria's father
  ?ceciliaRenata dbo:parent ?fatherOfCecilia .
  
  # Find the children of Cecilia Renata's father
  ?fatherOfCecilia dbo:child ?candidate1 .

  # Find a parent of Archduke Charles Joseph of Austria
  ?charlesJoseph dbo:parent ?parentOfCharles .

  # Find the child of this parent
  ?parentOfCharles dbo:child ?childOfParent .

  # Determine who is the father of this child
  ?childOfParent dbo:father ?candidate2 .

  # Ensure both conditions are met by the same person
  FILTER (?candidate1 = ?candidate2)
  
  BIND(?candidate1 AS ?result)
}
```",5,5,6,3,2,3,3,71,0,42,1,0.0,0.0,0
905,39,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of Charles Martel of Anjou.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
SELECT ?result WHERE {
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  ?child <http://dbpedia.org/ontology/parent> ?predecessor .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?result <http://dbpedia.org/ontology/parent> ?child .
  ?result <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
39,35,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson"" .
  ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musical_artist> .
  
  ?person <http://dbpedia.org/property/profession> ?profession .
  ?samConcepcion <http://dbpedia.org/property/profession> ?profession .

  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/memberOf> ?result .
  }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
668,5,train,"Who is the writer, that is a musical artist, of The Live Anthology?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""musical artist""))
}
```",1,2,2,1,1,3,3,71,0,0,19,0,0.0,0
68,10,train,"Give me the child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  ?commander <http://dbpedia.org/ontology/child> ?result .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL { 
    ?event <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Siege_of_Padua> .
    ?commander <http://dbpedia.org/ontology/participant> ?event .
  }
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
68,2,train,"Give me the father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
375,13,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Yamaza_Enjir%C5%8D> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/property/war> ?war .
    ?war <http://dbpedia.org/ontology/location> ?entity .
    FILTER(?entity = ?birthPlace)
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
295,8,train,Give me the native of the birth place of Victor Saville.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?native <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,3,2,20,274,43,1257,0.8643533123028391,0.17896799477465708,0.29653679653679654
263,24,train,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
SELECT ?result WHERE {
  # Find parent of Hon. Mary Frances Bowes-Lyon
  ?person <http://dbpedia.org/ontology/birthName> ""Hon. Mary Frances Bowes-Lyon"" .
  ?parent <http://dbpedia.org/ontology/child> ?person .

  # Find child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?claudelord <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> .
  ?child <http://dbpedia.org/ontology/parent> ?claudelord .

  # Ensure the same parent for both conditions
  FILTER (?parent = ?result)
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,29,train,Give me the person born as the birth name of Bobby Shmurda and band member of Uncle Murda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?birthName .
  
  ?result <http://dbpedia.org/property/birthName> ?birthName .
  ?result <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Uncle_Murda> .
  ?result <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Florida> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,15,train,"Give me the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
SELECT ?player WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> .
  
  ?club <http://dbpedia.org/ontology/sportsTeam> ?successor ;
        a <http://dbpedia.org/ontology/SportsClub>, <http://dbpedia.org/ontology/SoccerClub> .

  ?player <http://dbpedia.org/property/player> ?club .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
492,12,train,Give me the death place of Reed Howes and death place of Carolyn Jones and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Reed_Howes> 
    <http://dbpedia.org/resource/Carolyn_Jones> 
    <http://dbpedia.org/resource/Sal_Mineo>
  }
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,3,4,1,3,2,3,28,1,3,0,0.25,1.0,0.4
756,12,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
SELECT ?manager WHERE {
  ?season <http://dbpedia.org/property/team> <http://dbpedia.org/resource/SBV_Vitesse> .
  ?season <http://dbpedia.org/ontology/sportSeason> ""2020–21""^^xsd:string .
  ?season <http://dbpedia.org/ontology/coach> ?manager .

  ?manager <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/West_Germany> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
723,7,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer a <http://dbpedia.org/class/yago/Organisation100000000> ; # Assuming this class represents organizations/groups
            <http://dbpedia.org/property/member> ?result .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
668,14,train,Give me the person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Joe_B._Thomas> <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  FILTER(?person != <http://dbpedia.org/resource/Joe_B._Thomas>)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,56,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/politician> ?politicianRole .
  ?parent <http://dbpedia.org/ontology/alumnusOf> <http://dbpedia.org/resource/Eton_College> .
  ?child <http://dbpedia.org/ontology/parent> ?parent .

  OPTIONAL {
    ?awardee <http://www.wikidata.org/entity/P166> <http://www.wikidata.org/entity/Q12345678> . # Assuming Q12345678 is the identifier for ""Commander of the Royal Victorian Order""
    ?awardee <http://dbpedia.org/ontology/parent> ?child .
  }

  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/E._Stanley,_17th_Earl_of_Derby> .
  }
  
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```

Note: The query assumes the existence of specific identifiers for awards and institutions in DBpedia or Wikidata. Adjustments may be necessary based on actual data availability.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,6,train,"Give me the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bill_Clinton> <http://dbpedia.org/property/authored> ?result .
  ?result a <http://dbpedia.org/class/yago/YagoWoRK0000010> . # YAGO class for books
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
595,50,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?person <http://dbpedia.org/ontology/politicalParty> ?party . # Assuming political involvement is indicated by party membership
  ?person <http://dbpedia.org/ontology/officeHolder> ?office . # Office holder role

  OPTIONAL {
    ?person <http://dbpedia.org/property/commanderInWar> <http://dbpedia.org/resource/COVID-19_pandemic> .
  }

  ?result <http://dbpedia.org/ontology/author> ?work .
  ?work <http://www.w3.org/2002/07/owl#sameAs> ?person . # Assuming the work is authored by the person
  ?work a <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Ensuring it's a literary work

}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
225,17,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?entity WHERE {
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Q11673> . # Assuming Q11673 is the class for television shows
  ?awardee <http://dbpedia.org/ontology/receipient> ?reference .
  ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> ;
           <http://dbpedia.org/property/birthPlace> ?birthplace .
  FILTER (strstarts(str(?birthplace), ""Japan""))
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
706,8,train,Give me the birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?actor ?birthPlace WHERE {
  <http://dbpedia.org/resource/Akaler_Shandhaney> dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,10,4,0,0.7142857142857143,1.0,0.8333333333333333
742,8,train,Give me the birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Sofia> .
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,3,2,20,7,31,7,0.18421052631578946,0.5,0.2692307692307692
609,29,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
SELECT ?person ?birthPlace WHERE {
  # Cece Bell's birth place
  <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  BIND(<http://dbpedia.org/resource/Cece_Bell> AS ?person)

  UNION

  # Governor of Virginia's birth place
  ?governor <http://dbpedia.org/ontology/governmentRole> <http://dbpedia.org/resource/Governor_of_Virginia> ;
            <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""virginia"") && CONTAINS(LCASE(?governor), ""politician""))
  ?governor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  BIND(?governor AS ?person)

  UNION

  # Vince Gilligan's birth place
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  BIND(<http://dbpedia.org/resource/Vince_Gilligan> AS ?person)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
905,31,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
  
  ?grandfather <http://dbpedia.org/ontology/child> ?parent .
  ?spouse <http://dbpedia.org/ontology/spouse> ?grandfather .

  OPTIONAL {
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?spouse <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,20,train,Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?force ?war WHERE {
  ?person <http://dbpedia.org/property/awarded> <http://dbpedia.org/resource/Gillmore_Medal> .
  ?person <http://dbpedia.org/ontology/memberOf> ?force .

  OPTIONAL { 
    <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/property/war> ?war .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
756,8,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
SELECT ?team WHERE {
  ?team <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Thomas_Letsch> .
  ?team a <http://dbpedia.org/class/yago/SoccerClubSeason108069068> . # SoccerClubSeason
  ?team a <http://dbpedia.org/class/yago/SportsSeasons108070000> .       # SportsSeason
  ?team a <http://dbpedia.org/class/yago/SportsTeamSeasons108071000> .   # SportsTeamSeason
}
```",1,4,2,1,1,3,3,71,0,0,5,0,0.0,0
816,50,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?parent WHERE {
  # Find Eugène Cattin's profession
  <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/property/profession> ?profession .

  # Find individuals with the same profession as Eugène Cattin
  ?individual <http://dbpedia.org/property/profession> ?profession .
  
  # Identify parents of these individuals
  ?parent <http://dbpedia.org/ontology/child> ?individual .

  # Find Allan Arbus's children
  <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?arbusChild .
  
  # Check if the same parent is also a parent of one of Allan Arbus's children
  ?parent <http://dbpedia.org/ontology/child> ?arbusChild .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
353,44,train,"Give me the child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
SELECT ?result WHERE {
  # Child of Roger II of Sicily
  ?result <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .

  # Grandchild of Alfonso VI of León and Castile
  ?intermediateChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  ?result <http://dbpedia.org/ontology/birthParent> ?intermediateChild .

  # Father of a royalty child of William I of Sicily
  ?royaltyChild <http://dbpedia.org/ontology/birthParent> ?result .
  ?royaltyChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?royaltyChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_I_of_Sicily> .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
492,14,train,Give me the death place of Reed Howes and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?reedDeathPlace ?actor ?actorDeathPlace WHERE {
  # Find the death place of Reed Howes
  <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?reedDeathPlace .

  # Identify actors of ""Color Me Dead""
  <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Find the death place for each actor
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
258,2,train,"Give me the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?university WHERE {
  <http://dbpedia.org/resource/Luiza_Erundina> dbo:almaMater ?university .
  ?university rdf:type dbpedia-owl:University ;
              rdf:type dbpedia-owl:Organization ;
              rdf:type dbpedia-owl:EducationalInstitution .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
78,10,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?writer ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (CONTAINS(LCASE(?v1), ""musical artist"") && CONTAINS(LCASE(?v1), ""artist""))
  
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/collaboration> ?associatedArtist .
    ?associatedArtist <http://dbpedia.org/property/occupation> ?v2 .
    FILTER (CONTAINS(LCASE(?v2), ""musical artist""))
  }
}
```",2,4,3,2,1,2,3,28,0,0,18,0,0.0,0
347,28,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/war> ?event .
  ?event <http://www.w3.org/2002/07/owl#sameAs> ?tvShow .
  
  ?commander <http://dbpedia.org/property/commandedUnit> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
  ?commander <http://dbpedia.org/ontology/warCommander> ?war .

  <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result .
  
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> .

  FILTER (?commander = ?result)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
595,35,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Disease> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .
  
  ?commander <http://dbpedia.org/property/commandedBy> <http://dbpedia.org/resource/United_States_Navy> ;
             <http://dbpedia.org/ontology/warFoughtIn> ?war .

  ?author <http://dbpedia.org/ontology/authorOf> <http://dbpedia.org/resource/An_Invitation_to_the_White_House> .
  ?author <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  ?author <http://www.wikidata.org/entity/P39> ?office . # Office holder

  ?commander <http://dbpedia.org/ontology/spouse> ?author .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
119,58,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Tenant of the residence that is a country of Álvaro Quirós
  <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/ontology/residenceCountry> ?country .
  ?result <http://dbpedia.org/ontology/residenceCountry> ?country .

  # Office of Alberto Núñez Feijóo
  OPTIONAL {
    ?office <http://dbpedia.org/property/holder> <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> .
    ?result <http://dbpedia.org/ontology/officeHolder> ?office .
  }

  # Tenant of the administration that is Spanish of the reference to Spanish Socialist Workers' Party
  OPTIONAL {
    <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> <http://dbpedia.org/property/administration> ?admin .
    ?result <http://dbpedia.org/ontology/member> ?admin .
    FILTER (LANG(?admin) = ""es"") # Ensures the administration is Spanish
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,7,train,Who is the awardee of Knight Commander of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:award <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
}
```

Note: The URI `<http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath>` is assumed to be correct. If this specific resource does not exist, it may need to be adjusted based on the actual DBpedia structure.",1,1,2,1,1,3,3,71,0,0,899,0,0.0,0
353,12,train,"Give me the father of William II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/ontology/father> ?result .
  ?result <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,22,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Madrid> .
  ?result <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
  ?result rdf:type dbo:Politician .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
628,40,train,"Give me the native of Florida and person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ackquille Jean Pollard"" .
  ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/placeOfBirth> ?place .
    FILTER regex(str(?place), ""Florida"", ""i"")
  }
  
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://dbpedia.org/property/associatedMusicalArtist> ?artist .

  ?gs9member <http://dbpedia.org/ontology/memberOfBand> ?gs9 .
  ?gs9member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?gs9member <http://dbpedia.org/ontology/artist> ?gs9 .

  FILTER (?person = ?gs9member)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
293,16,train,"Give me the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",2,3,3,2,1,3,3,71,201,31,56,0.8663793103448276,0.7821011673151751,0.8220858895705522
295,0,train,Give me the writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Boom_Shack-a-Lak> <http://dbpedia.org/ontology/writer> ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,7,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> 
    (<http://dbpedia.org/ontology/father>|<http://dbpedia.org/ontology/mother>) ?parent .
  
  ?parent <http://www.w3.org/2006/vcard/ns#birthPlace> ?place .
  FILTER(CONTAINS(LCASE(?place), ""middlesex""))
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
347,61,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the parent of Archduke Charles Joseph of Austria
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .
  
  # Step 2: Find a child of this parent
  ?child <http://dbpedia.org/ontology/father> ?parent .
  
  # Step 3: Ensure the child is royalty and find their father
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  ?father <http://dbpedia.org/ontology/father> ?child .
  
  # Step 4: Identify Maria Anna of Bavaria's child who is royalty
  ?annaChild <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> .
  ?annaChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 5: Find the father of Maria Anna's child
  ?result <http://dbpedia.org/ontology/father> ?annaChild .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
628,21,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
SELECT ?result WHERE {
  ?artist <http://dbpedia.org/ontology/member> ?band .
  ?band <http://dbpedia.org/property/collaboration> <http://dbpedia.org/resource/Bobby_Shmurda> .
  
  ?result <http://dbpedia.org/ontology/member> ?band .
  ?result a <http://dbpedia.org/ontology/MusicalArtist> .

  ?result <http://dbpedia.org/property/placeOfBirth> ?place .
  FILTER (strstarts(str(?place), ""Florida""))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
361,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
687,42,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (
    EXISTS { ?v1 <http://dbpedia.org/ontology/wikiPageRedirects> <http://dbpedia.org/resource/Soccer_player> } &&
    EXISTS { ?v2 <http://dbpedia.org/ontology/wikiPageRedirects> <http://dbpedia.org/resource/Soccer_manager> ; 
             <http://www.w3.org/2000/01/rdf-schema#seeAlso>* ?person }
  )
  
  ?athlete <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?athlete <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Athlete> .
  
  ?person <http://dbpedia.org/ontology/teamMember> ?team .
  ?athlete <http://dbpedia.org/ontology/teamMember> ?team .

  ?agüero <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> .
  ?agüero <http://dbpedia.org/ontology/teamMember> ?team2 .
  ?person <http://dbpedia.org/ontology/teamMember> ?team2 .

  BIND(?person AS ?result)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?war WHERE {
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts1000000000> .
  ?show <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/TelevisionShows1000000000> .
  
  ?show <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/war> ?war .
}
```",3,5,4,3,1,3,2,20,0,0,121,0,0.0,0
375,14,train,Give me the war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Koichirō"" .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?person <http://dbpedia.org/ontology/war> ?war .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
58,11,train,Give me the spouse of the person born as Linda Sue Cobb and producer of 12 Strong.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?result WHERE {
  # Find the DBpedia resource for Linda Sue Cobb (Diane Kruger)
  <http://dbpedia.org/resource/Diane_Kruger> <http://dbpedia.org/ontology/birthName> ""Linda Sue Cobb"" .
  
  # Identify her spouse
  <http://dbpedia.org/resource/Diane_Kruger> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Check if the spouse is a producer of ""12 Strong""
  ?spouse <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/12_Strong> .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
859,4,train,"Give me the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""musical artist""))
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
89,13,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
23,22,train,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
SELECT ?result WHERE {
  # Get Daniel Elahi Galán's country
  <http://dbpedia.org/resource/Daniel_El%C3%A1i_Gal%C3%A1n> <http://dbpedia.org/ontology/nationality> ?country .
  
  # Get Roy Leonardo Barreras Montealegre's political party
  <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> <http://dbpedia.org/property/politicalParty> ?party .

  # Find a politician with the same country and party
  ?result <http://www.wikidata.org/entity/Q82955> _:a . # Ensures it's a politician
  ?result <http://dbpedia.org/ontology/nationality> ?country .
  ?result <http://dbpedia.org/property/politicalParty> ?party .
}
```",4,5,5,2,2,2,3,28,0,0,5,0,0.0,0
531,1,train,Give me the office of Mariano Rajoy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/office> ?office .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
39,54,train,"Give me the band of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Band of Bob Thompson (musician)
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Bob_Thompson_(musician)> .
  
  # Professional in the profession of Sam Concepcion
  ?profession <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Sam_Concepcion> .
  
  # Professional in the alter ego of a fictional character and comics character created by Walter B. Gibson
  ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/class/yago/FictionalCharacter108069068> <http://dbpedia.org/class/yago/ComicsCharacters1000000011>) .
  ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
  
  # Combine conditions
  ?result = ?band .
  ?result <http://dbpedia.org/property/profession> ?profession .
  ?result <http://dbpedia.org/property/profession> ?alterEgo .
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
80,9,train,Give me the actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/ATL_(film)> dbo:starring ?actor .
  <http://dbpedia.org/resource/Shelby_Oaks> dbo:starring ?actor .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
347,22,train,Give me the child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?child WHERE {
  # Find Cecilia Renata of Austria's father
  <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/ontology/father> ?father .
  
  # Identify the child of her father
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Check if this child was a commander in the Thirty Years' War
  OPTIONAL {
    ?child <http://dbpedia.org/property/commander> ""Thirty Years' War"" .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,37,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Florida> .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?result <http://dbpedia.org/property/birthName> ?birthName .
  
  FILTER (?name = ?birthName)
  
  ?result <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musical_artist> .
}
```",4,5,5,3,2,3,3,71,0,0,59,0,0.0,0
687,55,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
SELECT ?player WHERE {
  # Actor in ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> .
  ?actor <http://dbpedia.org/property/profession> ?profession1 .
  FILTER (CONTAINS(LCASE(?profession1), ""soccer player"") && CONTAINS(LCASE(?profession1), ""athlete"")) .

  # Player related to a person born on 1955-02-22 who is an athlete
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^xsd:date .
    ?person <http://dbpedia.org/property/profession> ?profession2 .
    FILTER (CONTAINS(LCASE(?profession2), ""athlete"")) .
    ?player <http://dbpedia.org/ontology/teamMember> ?person .
  }

  # Team of a person born on 1979-11-03 who is both a soccer player and manager
  OPTIONAL {
    ?manager <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^xsd:date .
    ?manager <http://dbpedia.org/property/profession> ?profession3 .
    FILTER (CONTAINS(LCASE(?profession3), ""soccer player"") && CONTAINS(LCASE(?profession3), ""soccer manager"")) .
    ?team <http://dbpedia.org/ontology/teamMember> ?manager .
    ?player <http://dbpedia.org/ontology/teamMember> ?team .
  }

  # Ensure the same player satisfies all conditions
  FILTER (?actor = ?player)
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
668,19,train,Give me the professional in Musician and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Elorm Kabu Amenyah"" .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Elom*"" ; # Assuming Elom* is the stage name
  
  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musician> ;
          <http://dbpedia.org/property/associatedMusicalArtist> ?person .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,28,train,Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
  
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result .
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
687,37,train,"Give me the team of Pablo Aimar and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?team ?player WHERE {
  # Step 1: Get the team of Pablo Aimar
  <http://dbpedia.org/resource/Pablo_Aimar> <http://dbpedia.org/ontology/team> ?team .

  # Step 2: Find films directed by Manuel Huerga
  ?film <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  
  # Step 3: Identify players who are actors in these films and also soccer players
  ?player <http://dbpedia.org/ontology/starring> ?film .
  ?player <http://dbpedia.org/property/sport> <http://dbpedia.org/resource/Soccer> .
  ?player <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> . # Assuming Q33999 is the identifier for ""actor""
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/ontology/office> ?office .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
80,17,train,Give me the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
119,30,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
SELECT ?result WHERE {
  ?administration <http://dbpedia.org/ontology/tenant> ?result .
  ?administration <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish""@en .
  ?administration <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .

  OPTIONAL {
    ?office <http://dbpedia.org/ontology/holder> <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> .
    ?result <http://dbpedia.org/ontology/tenant> ?office .
  }

  ?country <http://dbpedia.org/ontology/tenant> ?result .
  ?country <http://www.w3.org/2000/01/rdf-schema#label> ""Spain""@en .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
531,60,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
SELECT ?office WHERE {
  ?party <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Miguel_Maura> .
  ?leader <http://dbpedia.org/ontology/politicalParty> ?party ;
           <http://dbpedia.org/ontology/president> ?party ;
           <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Q82955 is the identifier for ""politician""
  
  OPTIONAL {
    ?officeHolder <http://dbpedia.org/property/electionYear> ""2003""^^xsd:gYear ;
                  <http://dbpedia.org/ontology/office> ?office .
    FILTER(?leader = ?officeHolder)
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
557,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# The query cannot be constructed without additional context.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
531,0,train,Give me the tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?tenant WHERE {
  ?tenant <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Madrid> .
}
```",1,1,2,1,1,3,3,71,68,496,191,0.12056737588652482,0.2625482625482625,0.16524908869987848
595,60,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?owner .

  # Step 2: Find a war that is both a disease and societal event
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q12136> . # Assuming Q12136 represents ""disease""
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11070> . # Assuming Q11070 represents ""societal event""

  # Step 3: Identify the author who is a politician and office holder of a work by Hillary Clinton
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book110759069> . # Assuming this class represents ""book""
  ?author <http://dbpedia.org/ontology/politicalParty> ?party .
  ?author <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is for office holder

  # Step 4: Find the spouse of this author
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .

  # Final step: Identify the commander in the war related to the owner
  ?owner <http://dbpedia.org/ontology/commander> ?commander .
}
```

Note: This query assumes certain mappings and class identifiers that may not exist directly in DBpedia. Adjustments might be necessary based on actual data availability and structure.",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
37,3,train,"Who is the work, that is an artist and a musical artist, of Ethan Iverson?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?work WHERE {
  ?entity <http://dbpedia.org/ontology/work> ?work .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist100001846> .
  ?entity foaf:name ""Ethan Iverson""@en .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
782,20,train,Give me the band of the band member of Eric Clapton and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
SELECT ?band WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Eric_Clapton> .
  OPTIONAL { 
    ?band <http://www.w3.org/2004/02/skos/core#related> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
  }
}
```

This query attempts to find bands that have Eric Clapton as a member and are related to ""The Fabulous Thunderbirds"" in some way. Note that the exact property for referencing might vary based on DBpedia's schema, so adjustments may be necessary if `<http://www.w3.org/2004/02/skos/core#related>` is not applicable.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,61,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Find an artist from Central Region, Ghana
  ?artist <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ghana> .
  ?artist <http://dbpedia.org/property/placeOfBirth> ?place .
  FILTER(CONTAINS(LCASE(?place), ""central region"")) .

  # Match birth name with another individual's birth name
  ?artist <http://dbpedia.org/ontology/birthName> ?birthName .
  ?native <http://dbpedia.org/ontology/birthName> ?birthName .

  # Ensure the person is a writer and musical artist related to ""The Live Anthology""
  ?result <http://dbpedia.org/property/profession> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""writer"") && CONTAINS(LCASE(?v1), ""musical artist"")) .
  
  # Link the person to ""The Live Anthology""
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/ontology/creator> ?result .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
38,15,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard and author of Promise Me, Dad.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/property/organization> <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> .
  
  ?person <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Promise_Me,_Dad> .

  ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q571> . # Q571 is the identifier for ""book""
  ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q2253777> . # Written work
  ?work <http://www.wikidata.org/entity/P17> <http://www.wikidata.org/entity/Q30> . # Q30 is the identifier for ""United States""
  
  ?person <http://dbpedia.org/property/author> ?work .
}
```",4,10,5,3,2,3,2,20,0,0,1,0,0.0,0
140,12,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
SELECT ?result WHERE {
  # Find commanders in Pickett's Charge
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Picketts_Charge> .
  
  # Ensure the commander is a member of a ruling party in Westport, Connecticut
  ?party <http://dbpedia.org/property/rulingParty> <http://dbpedia.org/resource/Westport,_Connecticut> .
  ?commander <http://dbpedia.org/ontology/member> ?party .

  # Ensure the party is both a political party and an organization
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/PoliticalParty108069068> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation118557> .

  BIND(?commander AS ?result)
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
23,4,train,Give me the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Daniel_El%C3%A1i_Gal%C3%A1n> <http://dbpedia.org/ontology/nationality> ?country .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
203,8,train,"Give me the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
SELECT ?event ?force WHERE {
  ?event <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Societal_events> .
  ?event <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Event> .
  ?event <http://dbpedia.org/property/force> ?force .
  
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Robert_Calder> .
  }
}
```",1,3,2,1,1,3,3,71,0,0,4,0,0.0,0
119,10,train,"Give me the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v0 <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lodz> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Polish""@en .
  ?person <http://dbpedia.org/property/profession> ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""athlete"") || CONTAINS(LCASE(?occupation), ""sports"")) .
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  ?residence a <http://dbpedia.org/class/yago/Country108069465> . # Assuming this class represents countries
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
668,48,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?artist WHERE {
  ?person1 <http://dbpedia.org/property/birthName> ""pacely"" .
  ?person2 <http://dbpedia.org/property/birthName> ""Joey B"" .

  ?person1 <http://dbpedia.org/ontology/musicArtist> ?artist .
  ?person2 <http://dbpedia.org/ontology/musicArtist> ?artist .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
585,17,train,Give me the child of the professional in the profession of Shirley Stoler and native of New York (state).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Shirley_Stoler> dbo:child ?child .
  
  ?child dbo:occupation ?profession .
  ?child dbo:nativePlace <http://dbpedia.org/resource/New_York_(state)> .
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
941,4,train,"Who is the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/offspring> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
816,55,train,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
SELECT ?result WHERE {
  # Find Allan Arbus's children
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Allan_Arbus> .
  
  # Identify the parent of Allan Arbus's child
  ?child <http://dbpedia.org/ontology/parent> ?result .

  # Check if this person acted in a movie with Herschel Bernardi
  ?movie <http://dbpedia.org/ontology/starring> ?result ;
         <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
  
  # Ensure the result is also a parent of someone whose occupation is Photographer
  ?photographer <http://dbpedia.org/ontology/parent> ?result .
  ?photographer <http://dbpedia.org/property/occupation> ""Photographer"" .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
159,12,train,Give me the commander in Great Turkish War and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Great_Turkish_War> .
  ?event <http://dbpedia.org/property/commander> ?commander .
  
  OPTIONAL { 
    ?commander <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/George_Ducas> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,42,train,"Give me the professional in Actor and professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/occupation> ""Actor"" .
  
  OPTIONAL { 
    ?shadow <http://dbpedia.org/resource/The_Shadow> .
    ?shadow <http://dbpedia.org/ontology/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
  
  ?tvShow <http://dbpedia.org/ontology/starring> ?result .
  ?tvShow <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
}
```",5,6,6,2,3,3,3,71,0,0,9,0,0.0,0
78,0,train,Give me the associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/collaboration> ?artist .
  ?artist a <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
213,17,train,"Give me the birth place of Winston Chang and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?country WHERE {
  <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> ;
            <http://dbpedia.org/property/profession> ""writer"" .
    
    ?work <http://dbpedia.org/ontology/creator> ?spouse ;
          <http://dbpedia.org/ontology/country> ?country .
  }
}
```",4,5,5,3,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
159,16,train,Give me the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
SELECT ?work ?writer WHERE {
  ?work <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/George_Ducas> .
  ?work <http://dbpedia.org/ontology/writer> ?writer .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,34,train,Give me the parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Find the parent of an awardee associated with Rodney Lees
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  ?award <http://dbpedia.org/ontology/associatedWith> <http://dbpedia.org/resource/Rodney_Lees> .
  ?awardee <http://dbpedia.org/ontology/birthParent> ?result .

  # Find the father of Arthur Stanley (politician)
  OPTIONAL {
    <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/ontology/father> ?result .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,23,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?actor ?deathPlace WHERE {
  # For The Sky Ranger (1928)
  { 
    <http://dbpedia.org/resource/The_Sky_Ranger_(film)> <http://dbpedia.org/ontology/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/property/deathPlace> ?deathPlace . }
  }

  UNION

  # For Aladdin (1958)
  {
    <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/ontology/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/property/deathPlace> ?deathPlace . }
  }
}
```",4,4,5,2,2,2,3,28,0,8,1,0.0,0.0,0
513,4,train,"Give me the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/property/politicalAffiliation> ?party .
  ?party rdf:type dbo:Organization .
  ?party rdf:type dbo:PoliticalParty .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
816,16,train,Give me the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/property/occupation> ?profession .
  ?person <http://dbpedia.org/property/occupation> ?profession .
  FILTER(?person != <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin>)
}
```",2,2,3,2,1,3,3,71,0,0,940,0,0.0,0
782,58,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  ?band <http://dbpedia.org/ontology/band> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
  
  OPTIONAL { 
    ?member <http://dbpedia.org/property/member> ?claptonBand .
    ?claptonBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Eric_Clapton> .
    ?band <http://dbpedia.org/ontology/band> ?member .
  }
  
  OPTIONAL {
    ?person <http://www.wikidata.org/entity/P735> <http://dbpedia.org/resource/Nick_Curran> . # Assuming P735 is the property for ""persona""
    ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q1028181> .
    ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?person .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
384,8,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of Guillaume Peltier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
SELECT ?person ?party WHERE {
  VALUES ?name { ""Bruno Daniel Marie Paul Retailleau"" ""Guillaume Peltier"" }
  
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
  FILTER EXISTS { ?person <http://dbpedia.org/ontology/officeHolder> [] } .
  FILTER EXISTS { ?person <http://dbpedia.org/ontology/politician> [] }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
609,16,train,"Who is the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?governor WHERE {
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/class/yago/Region108069> . # Assuming Region108069 is a placeholder for ""region""
  ?birthPlace <http://dbpedia.org/ontology/administrativeRegion> ?adminRegion .
  
  ?governor <http://dbpedia.org/property/governs> ?birthPlace .
  ?governor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069> . # Assuming Politician108069 is a placeholder for ""politician""
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
89,19,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> .
  ?result <http://dbpedia.org/ontology/parent> ?parent .
  
  FILTER (?spouse = ?result)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
782,46,train,Give me the band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
SELECT ?bandOfClaptonMember ?realNameReference WHERE {
  # Find bands of Eric Clapton's band members
  ?member <http://dbpedia.org/ontology/member> ?claptonBand .
  ?claptonBand <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/ontology/member> ?bandOfClaptonMember .

  # Find reference to the real name of Kim Wilson's band
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/property/band> ?kimWilsonBand .
  OPTIONAL { 
    ?kimWilsonBand <http://www.w3.org/2000/01/rdf-schema#label> ?realNameReference .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
737,40,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Child of Albrecht, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .

  # Predecessor of the child of the spouse that is royalty of Archduchess Helena of Austria
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
    ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
    ?result <http://dbpedia.org/ontology/successor> ?child .
    
    # Ensure the spouse is royalty
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  }

  # Child of Archduchess Margarete Sophie of Austria
  ?result <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
609,28,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
SELECT ?person ?birthPlace WHERE {
  # Vince Gilligan's awards or nominations
  OPTIONAL { 
    ?award <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/Vince_Gilligan> .
    <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(<http://dbpedia.org/resource/Vince_Gilligan> AS ?person)
  }
  
  # Cece Bell's birthplace
  OPTIONAL {
    <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(<http://dbpedia.org/resource/Cece_Bell> AS ?person)
  }

  # Glenn Youngkin's birthplace
  OPTIONAL {
    <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(<http://dbpedia.org/resource/Glenn_Youngkin> AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
347,19,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  ?war rdf:type dbo:SocietalEvent ;
       rdf:type owl:Thing ;
       <http://dbpedia.org/ontology/show> ?tvShow .
  
  ?commander <http://dbpedia.org/property/commandedUnit> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> ;
             <http://dbpedia.org/ontology/warCommander> ?war .
  
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> .
  
  FILTER (?commander = ?result)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
492,1,train,Give me the death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
347,32,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?father WHERE {
  # Find children of Ferdinand III
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .

  # Identify wars or events involving the 2nd Dragoon Regiment (France)
  OPTIONAL {
    ?event <http://dbpedia.org/property/involvement> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
    ?event a <http://dbpedia.org/ontology/SocietalEvent> ;
           a <http://dbpedia.org/ontology/Event> .
    # Check if the event is depicted in a television show
    OPTIONAL { 
      ?tvShow <http://dbpedia.org/property/basedOn> ?event .
    }
  }

  # Ensure the father was a commander in such an event
  ?father <http://dbpedia.org/ontology/commander> ?event .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
816,61,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Find Eugène Cattin's profession and its parents
  <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/property/profession> ?profession .
  ?parent <http://dbpedia.org/ontology/parent> ?profession .

  # Find Mariclare Costello's spouse and their child(ren)
  OPTIONAL {
    <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?child <http://dbpedia.org/ontology/parent> ?spouse .
    ?parent2 <http://dbpedia.org/ontology/parent> ?child .

    # Ensure the same parent satisfies both conditions
    FILTER (?parent = ?parent2)
  }

  BIND(?parent AS ?result) 
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
213,2,train,Who is the person decedent at Taipei?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> .
}
```",1,1,2,1,1,3,2,20,220,0,0,1.0,1.0,1.0
80,53,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
SELECT ?actor WHERE {
  # Find author of Smartbomb and movies they are associated with
  <http://dbpedia.org/resource/Smartbomb> <http://purl.org/dc/terms/creator> ?author .
  
  # Find actors in those movies
  ?movie <http://dbpedia.org/ontology/producer> ?author .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  # Professional involvement with The Shadow's alter ego
  OPTIONAL {
    ?shadowEntity <http://dbpedia.org/property/alterEgo> ?v1 .
    ?actor <http://dbpedia.org/property/profession> ?v1 .
  }

  # Actor of ATL (film)
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?actor .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
293,29,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake and party member of Republican Party (United States).","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
SELECT ?result WHERE {
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/1,000_Dollars_a_Minute> .
  ?actor <http://dbpedia.org/property/spouse> ?result .

  ?person <http://xmlns.com/foaf/0.1/name> ""Harriette Arlene Lake"" .
  ?person <http://dbpedia.org/ontology/birthName> ""Harriette Arlene Lake"" .
  FILTER(?person = ?result)

  ?result <http://dbpedia.org/property/partyMember> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,6,train,Give me the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Gillmore_Medal> <http://dbpedia.org/ontology/recipient> ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,24,train,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?result .

  OPTIONAL { 
    <http://dbpedia.org/resource/Lasso_the_Moon> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film105069068> .
    <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
905,33,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the spouse of Charles II of Naples
  <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Identify the spouse of Maria of Bytom
  <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?mariaSpouse .

  # Step 3: Find the father of this spouse and ensure he is royalty
  ?father <http://dbpedia.org/ontology/parent> ?mariaSpouse .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 4: Find the parent of this royal father
  ?result <http://dbpedia.org/ontology/parent> ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
140,5,train,"Give me the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
SELECT ?party WHERE {
  ?location <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Westport,_Connecticut> .
  ?party <http://www.w3.org/ns/org#hasMemberOrEmployee> ?location .
  ?party a <http://dbpedia.org/ontology/PoliticalParty> ;
         a <http://www.w3.org/ns/org#Organization> .
  
  OPTIONAL {
    ?election <http://dbpedia.org/property/election> ?party .
    FILTER EXISTS { ?election <http://dbpedia.org/property/result> ""ruling"" }
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,40,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band ?realName ?associatedArtist WHERE {
  # Band associated with Kim Wilson
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/band> ?band .
  
  # Real name of the band (if available)
  OPTIONAL { 
    ?band <http://dbpedia.org/property/realName> ?realName .
  }
  
  # Associated musical artist of Nick Curran
  <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  
  # Check if the associated artist is linked to Kim Wilson's band
  OPTIONAL {
    ?associatedArtist <http://dbpedia.org/ontology/band> ?band .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
687,9,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?commonPlayer WHERE {
  # Teams associated with Juan Carlos Molina
  <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?team1 .
  
  # Teams associated with Sergio Agüero
  <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> <http://dbpedia.org/ontology/team> ?team2 .

  # Find players who have been part of both teams
  ?commonPlayer <http://dbpedia.org/ontology/team> ?team1 .
  ?commonPlayer <http://dbpedia.org/ontology/team> ?team2 .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,29,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of Rod Argent and associated musical artist of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthName> ""Darryl Paa Kwesi Bannerman-Martin"" .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/profession> ?profession .
    ?argent <http://dbpedia.org/resource/Rod_Argent> ;
            <http://dbpedia.org/property/profession> ?profession .
  }
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/$pacely> .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
23,13,train,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> .
  ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Q82955 is the identifier for ""politician""
  
  OPTIONAL {
    <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> <http://dbpedia.org/property/politicalParty> ?party .
    ?result <http://dbpedia.org/property/politicalParty> ?party .
  }
}
```",3,4,4,2,2,2,3,28,0,0,5,0,0.0,0
737,22,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Find the child of Archduke Charles Louis of Austria
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  
  # Find the grandchild (child of the child) who is royalty
  ?result <http://dbpedia.org/ontology/parent> ?child .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Check if this grandchild was a predecessor to Carl, Duke of Württemberg
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,43,train,"Give me the entity in Charleston, South Carolina and war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/property/war> ?war .
    ?award <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
    ?award <http://dbpedia.org/ontology/receiver> ?awardee .
    ?awardee <http://dbpedia.org/ontology/militaryUnit> ?force .
    
    FILTER(?entity = ?result)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
816,48,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?movie ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Film> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CreativeWork108069415> . # Assuming this is the class for ""Work""
  
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL {
    ?decedent <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Los_Angeles> .
    ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/HumanBeing108069415> . # Assuming this is the class for ""Person""
    FILTER(?actor = ?decedent)
  }
  
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> ?parent .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/HumanBeing108069415> . # Assuming this is the class for ""Person""
    FILTER(?actor = ?parent)
    
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Allan_Arbus> .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
87,2,train,Give me the actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Always_(1989_film)> dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
288,8,train,Give me the theme of the show with Anumta Qureshi and native of Lahore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?v2 <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
SELECT ?show ?theme WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Lahore""@en .
  ?show <http://dbpedia.org/ontology/castMember> ?person .
  ?show <http://dbpedia.org/ontology/theme> ?theme .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
258,0,train,Give me the establishment of 1955-12-02.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^xsd:date .
}
```

This query will return entities that have a recorded founding date of December 2, 1955.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,9,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> dbo:participatedIn ?war .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> dbo:participatedIn ?war .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
557,49,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  
  ?claimToFame <http://dbpedia.org/ontology/work> ?entity ;
               <http://dbpedia.org/ontology/movie> ?claimToFame .
  
  ?result <http://dbpedia.org/ontology/producer> ?claimToFame .

  OPTIONAL {
    <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(?actor = ?entity)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,1,train,Give me the band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mark_Eitzel> .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
  FILTER(?bandMember != <http://dbpedia.org/resource/Mark_Eitzel>)
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
353,33,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  ?reference <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?reference <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?reference <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 represents an office holder

  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthPlace> ?reference .
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
  }

  ?result <http://dbpedia.org/ontology/spouse> ?reference . # Assuming the father is a spouse
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
361,18,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Lasso_the_Moon> a dbo:Film .
  <http://dbpedia.org/resource/Lasso_the_Moon> a dbo:Album .
  <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
375,10,train,"Give me the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?person WHERE {
  ?location dbo:type dbo:Settlement ;
            dcterms:language ""en"" .
  
  ?person dbo:nativePlace ?location ;
          rdf:type dbo:Artist, dbo:MusicalArtist .
}
```",2,6,3,2,1,3,2,20,0,0,659,0,0.0,0
595,40,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
SELECT ?spouse WHERE {
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000036> . # Assuming this class represents books
  ?work <http://dbpedia.org/resource/Hillary_Clinton> .
  
  ?author <http://www.wikidata.org/entity/P39> ?officeHolderRole .
  ?author <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .

  OPTIONAL {
    ?spouse <http://dbpedia.org/property/commanderIn> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
  }
  
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Back_to_Work_(book)> .
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
80,27,train,Give me the professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/property/occupation> ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
871,44,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?father WHERE {
  # Identify children of Frederick Stanley who are politicians
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?child <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Politician> .

  # Find the father of this politician child
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?child <http://dbpedia.org/ontology/birthParent> ?mother .
  
  # Ensure Victor Stanley is a child of Frederick Stanley and find his parent
  <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> <http://dbpedia.org/ontology/birthParent> ?parentVictor .
  FILTER (?parentVictor = ?father || ?parentVictor = ?mother)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,43,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in Great Turkish War.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?result WHERE {
  ?work <http://dbpedia.org/ontology/writer> ?result .
  ?work <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/George_Ducas> .

  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .

  ?result <http://dbpedia.org/property/commanderInWar> <http://dbpedia.org/resource/Great_Turkish_War> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
737,21,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  
  # Check if this child is a predecessor (parent) of any child of Philipp Albrecht, Duke of Württemberg
  ?child2 <http://dbpedia.org/ontology/birthParent> ?result .
  ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
  
  # Bind the result to ensure it matches both conditions
  BIND(?child AS ?result)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,59,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  # Leader of the 2003 Madrid City Council election who is an office holder
  ?leader <http://dbpedia.org/ontology/electedAs> <http://dbpedia.org/resource/Madrid_City_Council_election,_2003> .
  ?leader <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 represents ""held office""
  
  # Residence of the leader and its tenant
  ?leader <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://dbpedia.org/ontology/tenant> ?result .

  # Commander in a force related to Manuel Pinto da Costa
  OPTIONAL {
    ?result <http://www.wikidata.org/entity/P39> ?commanderOffice . # Assuming P39 represents ""held office""
    ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
    
    ?force <http://dbpedia.org/ontology/conflict> ?conflict .
    ?force <http://dbpedia.org/ontology/event> ?event .
    ?commanderOffice <http://www.wikidata.org/entity/P39> ?result . # Commander role
    ?force <http://dbpedia.org/property/commandedBy> ?manuelPintoDaCosta .
    ?manuelPintoDaCosta <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
  }
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
531,36,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Madrid> .
  ?result <http://dbpedia.org/ontology/politicalPartyLeader> ?party .
  
  OPTIONAL { 
    ?miguelMaura <http://dbpedia.org/ontology/memberOf> ?party .
    ?miguelMaura <http://www.wikidata.org/entity/Q215627> <http://dbpedia.org/resource/Miguel_Maura> . # Assuming Q215627 is the identifier for Miguel Maura
  }
}
```

Note: The query assumes that `<http://dbpedia.org/ontology/placeOfBirth>` can be used to identify a connection to Madrid, which might need adjustment based on actual data availability. Additionally, the exact property linking Miguel Maura to his political party may vary and should be verified against DBpedia's schema.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,32,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Philip I's father
  ?philipI dbo:parent ?fatherPhilip .
  
  # Step 2: Find the spouse of Philip I's father
  ?fatherPhilip <http://www.wikidata.org/entity/P26> ?spouse .

  # Step 3: Identify Charles I's father and ensure he is royalty
  ?charlesI dbo:parent ?fatherCharles .
  ?fatherCharles <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 4: Find one of the parents of Charles I's father
  ?fatherCharles dbo:parent ?result .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
871,40,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Arthur_Stanley_(politician)> .

  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/receivedAward> ?award .
    ?award <http://dbpedia.org/property/givenBy> <http://dbpedia.org/resource/Rodney_Lees> .
    ?child <http://dbpedia.org/ontology/parent> ?result .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
89,4,train,Give me the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Min_Hla_Htut> <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Pyakaung> .
  <http://dbpedia.org/resource/Min_Hla_Htut> <http://dbpedia.org/ontology/father> ?parent .
}
UNION
{
  <http://dbpedia.org/resource/Min_Hla_Htut> <http://dbpedia.org/ontology/mother> ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,38,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Find Béla IV of Hungary's children
  ?child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  
  # Find the grandchildren (children of Béla IV)
  ?grandchild <http://dbpedia.org/ontology/parent> ?child1 .

  # Check if the grandchild is royalty
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Find Charles I of Hungary's father
  ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_I_of_Hungary> .

  # Check if the father is royalty
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . 

  # Find the parent of Charles I's father (grandparent)
  ?result <http://dbpedia.org/ontology/child> ?father .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
293,32,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  # Assuming we have identified the ruling party in Central, Louisiana as <http://dbpedia.org/resource/Ruling_Party_Central_Louisiana>
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Ruling_Party_Central_Louisiana> .
  
  OPTIONAL {
    <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/spouse> ?result .
  }
}
```

Note: The query assumes the existence of a DBpedia resource for ""Ruling Party Central Louisiana"" and that such specific data is available. Adjustments may be needed based on actual DBpedia entries.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
782,38,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
SELECT ?band WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Eric_Clapton> .
  ?member <http://dbpedia.org/ontology/band> ?band .

  OPTIONAL { 
    ?person <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?band <http://dbpedia.org/ontology/associatedBand> ?person .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
159,47,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
SELECT ?successor WHERE {
  ?commander <http://dbpedia.org/ontology/successor> ?successor .
  ?commander <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> .
  
  ?successor <http://dbpedia.org/ontology/politician> true .
  ?successor <http://dbpedia.org/property/officeHolder> true .

  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/writtenBy> <http://dbpedia.org/resource/George_Ducas> .
    ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?successor .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
80,41,train,Give me the professional in  and actor of the album of What You Know (T.I. song) and actor of the movie with .,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/songAlbum> ?album .
  ?album <http://dbpedia.org/property/artist> ?result .
  
  ?movie <http://dbpedia.org/ontology/starring> ?result .

  OPTIONAL { 
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
213,4,train,"Who is the spouse, that is a writer, of Hu Jieqing?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Hu_Jieqing> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/occupation> ""writer"" .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
103,5,train,"Give me the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (?v1 = ""Actor"" || ?v1 = ""Politician"")
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
668,10,train,Give me the associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/$pacely> .
  ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,29,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of Carl, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?result WHERE {
  ?child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?child1 .
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  
  FILTER (?grandchild = ?result)
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
756,14,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?team ?manager WHERE {
  ?team <http://dbpedia.org/ontology/team> ?sportTeam .
  ?sportTeam <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  
  ?season <http://dbpedia.org/ontology/club> ?team .
  ?season a <http://dbpedia.org/class/yago/SportsSeason108069068> . # Assuming this class represents ""Sports Season""
  ?season a <http://dbpedia.org/class/yago/SoccerClubSeasons> . # Assuming this class represents ""Soccer Club Seasons""
  
  ?team <http://dbpedia.org/property/manager> ?manager .
  ?manager foaf:name ""Thomas Letsch"" .
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
668,45,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/$pacely> .
  
  OPTIONAL { 
    ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?result <http://dbpedia.org/property/birthName> ?birthName .
  }
  
  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musician> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
375,5,train,Give me the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
668,11,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Elorm Kabu Amenyah"" .
  ?person <http://dbpedia.org/property/associatedBand> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
737,42,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify grandchildren of Archduke Charles Louis who are royalty
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Identify predecessors of children of Philipp Albrecht, Duke of Württemberg
  ?predecessor <http://dbpedia.org/ontology/successor> ?childOfPhilipp .
  ?childOfPhilipp <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .

  # Step 3: Ensure the individual is a child of Albrecht, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .
  
  # Combine conditions to find the correct individual
  FILTER (?grandchild = ?predecessor && ?grandchild = ?result)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
39,50,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .

  OPTIONAL {
    ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
    ?character <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""fictional character"") && CONTAINS(LCASE(?label), ""comics character"")) .

    ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?result <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(CONTAINS(LCASE(STR(?profession)), LCASE(STR(?alterEgo)))) .
  }

  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
386,3,train,Give me the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
353,60,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Condition 1: Child of the Parent of the Child (that is Royalty) of Roger II of Sicily
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?grandparent <http://dbpedia.org/ontology/parent> ?child .
  ?result <http://dbpedia.org/ontology/parent> ?grandparent .

  # Condition 2: Child of the Child of the Spouse (that is Royalty) of Constance of Burgundy
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?child2 <http://dbpedia.org/ontology/parent> ?spouse .
    ?grandchild <http://dbpedia.org/ontology/parent> ?child2 .
    FILTER (?result = ?grandchild)
  }
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
595,41,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
SELECT ?result WHERE {
  # Commander in Third Taiwan Strait Crisis
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
  
  # Author of a work related to Bill Clinton
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this class represents written works and books
  ?work <http://dbpedia.org/property/author> ?result .
  ?work <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/Bill_Clinton> .

  # Spouse of the author who is a politician and office holder
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> ?result .
    ?spouse <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 represents political roles
    ?invitation <http://dbpedia.org/property/author> ?spouse .
    ?invitation <http://dbpedia.org/resource/An_Invitation_to_the_White_House> .
  }
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
353,53,train,"Give me the father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the father of William II of Sicily
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Wilhelm_II._von_Sizilien> .

  # Step 2: Find children of Roger II of Sicily who are royalty and their parents (grandparents)
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II._Siciliens> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?grandparent <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> ?child .

  # Step 3: Identify a child of the grandparent (i.e., parent of the target person)
  ?result <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> ?grandparent .

  # Step 4: Ensure the result is also a child of a child of Alfonso VI
  ?alfonsoChild <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Alfons_VI._von_León> .
  ?result <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> ?alfonsoChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
557,17,train,"Give me the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?actor ?fame WHERE {
  <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/claimToFame> ?fame .
  
  FILTER EXISTS { ?fame a <http://dbpedia.org/ontology/Film> . }
  FILTER EXISTS { ?fame a owl:Thing . } # Ensures it's classified as a work
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
595,8,train,"Give me the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?war <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/United_States_Navy> .
  ?war rdf:type <http://dbpedia.org/class/yago/Disease108930068> . # Assuming this is the class for diseases
  ?war rdf:type <http://dbpedia.org/class/yago/SocietalEvent108930069> . # Assuming this is the class for societal events
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
89,61,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the child of Saw Shwe Khet who is royalty
  ?child <http://dbpedia.org/ontology/familyName> ""Saw Shwe Khet"" .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the father of this child who is also royalty
  ?father <http://dbpedia.org/ontology/parent> ?child .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Determine the spouse of this royal father
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .

  # Step 4: Identify the child of Saw Min Phyu who is royalty
  ?child2 <http://dbpedia.org/ontology/familyName> ""Saw Min Phyu"" .
  ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 5: Find the predecessor of this child
  ?predecessor <http://dbpedia.org/ontology/successor> ?child2 .

  # Step 6: Ensure the spouse from step 3 is the predecessor found in step 5
  FILTER (?spouse = ?predecessor)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
595,31,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Hillary Clinton's book that is a work and written work
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000036> . # Assuming this class represents ""written work""
  ?work <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Books_by_Hillary_Clinton> .

  # Step 2: Find the author of this book
  ?author <http://dbpedia.org/ontology/author> ?work .
  
  # Step 3: Identify spouse who is a politician and office holder
  ?spouse <http://dbpedia.org/ontology/spouse> ?author .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician100000027> . # Assuming this class represents ""politician""
  ?spouse <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 4: Verify if the spouse is also an author of ""Back to Work"" (book)
  OPTIONAL {
    ?backToWork <http://dbpedia.org/ontology/author> ?spouse .
    ?backToWork <http://www.w3.org/2000/01/rdf-schema#label> ""Back to Work""@en .
  }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
756,48,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?manager WHERE {
  # Find the soccer club season associated with Thomas Letsch
  ?team <http://dbpedia.org/ontology/team> ?letschTeam .
  ?letschTeam <http://dbpedia.org/property/manager> ?manager .
  
  # Ensure it's a soccer club season, sports season, and sports team season
  ?team <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SoccerClubSeason108069834> ;
        <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SportsSeason108070000> ;
        <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SportsTeamSeason108069835> .

  # Find the player managed by this manager
  ?player <http://dbpedia.org/property/team> ?team .
  ?player <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SportsClub108070001> ;
          <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/Organisation108069836> ;
          <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SoccerClub108070002> .

  # Ensure the team and player are part of the successor season of 2006–07 VfL Bochum
  ?successorSeason <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> .
  ?successorSeason <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/FootballLeagueSeason108069837> ;
                   <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SportsTeamSeason108069835> ;
                   <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SportsSeason108070000> .
  
  ?team <http://dbpedia.org/ontology/team> ?successorSeason .
  ?player <http://dbpedia.org/property/team> ?successorSeason .
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
398,0,train,Give me the figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
SELECT ?resource WHERE {
  ?resource rdfs:label ""Наши парни""@ru .
  FILTER NOT EXISTS { ?resource rdfs:label ?otherLabel . FILTER (lang(?otherLabel) != ""ru"") }
}
UNION
SELECT ?resource WHERE {
  ?resource rdfs:label ""Nashi parni""@en .
  FILTER NOT EXISTS { ?resource rdfs:label ?otherLabel . FILTER (lang(?otherLabel) != ""en"") }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,10,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Vince_Gilligan> 
    <http://dbpedia.org/resource/Cece_Bell>
  }
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
782,27,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Nick Curran""@en .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?birthName = ""Nick Curran"")
  }
  ?person <http://dbpedia.org/property/associatedMusicalArtist> ?result .
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
905,50,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Béla IV's children who are royalty
  ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find grandchildren of Béla IV who are royalty
  ?grandchild <http://dbpedia.org/ontology/birthPlace> ?child .
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Identify Maria of Bytom's spouse and their royal father
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  ?father <http://dbpedia.org/ontology/birthPlace> ?spouse .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 4: Find the parent of this royal father
  ?result <http://dbpedia.org/ontology/birthPlace> ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,9,train,"Who is the child, that is a politician, of the person decedent at Taipei?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
SELECT ?child WHERE {
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> .
  ?child <http://dbpedia.org/property/parent> ?decedent .
  ?child <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Politician> .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
609,54,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?ceceBirthPlace ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Birth place of Cece Bell
  <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?ceceBirthPlace .

  # Region and administrative region for Paulus Powell's birthplace
  OPTIONAL {
    <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?paulusBirthPlace .
    ?paulusBirthPlace <http://dbpedia.org/ontology/administrativeRegion> ?region .
    ?region <http://www.w3.org/2000/01/rdf-schema#label> ?regionLabel .

    # Governor of the region
    OPTIONAL {
      ?governor <http://dbpedia.org/ontology/governs> ?region ;
                <http://dbpedia.org/ontology/politicianOf> ?country .
      ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
    }
  }

  # Awardee of Vince Gilligan's awards
  OPTIONAL {
    ?award <http://dbpedia.org/property/receivedBy> <http://dbpedia.org/resource/Vince_Gilligan> ;
           <http://dbpedia.org/ontology/awardee> ?awardee .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .
  }
}
```",6,9,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
375,3,train,"Give me the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:TelevisionShow .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Vera_Lynn> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
203,16,train,"Give me the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?war WHERE {
  ?war a dbo:War .
  ?war a dbo:Event .
  ?war <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/William_Bayne> .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
871,28,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Parent of Edward Stanley, 17th Earl of Derby
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  UNION
  ?parent <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .

  # Father of Arthur Stanley (politician)
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Arthur_Stanley_(politician)> .

  # Parent of an awardee of the Commander of the Royal Victorian Order
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> ?parent .
    UNION
    ?child <http://dbpedia.org/ontology/mother> ?parent .
    ?child <http://dbpedia.org/property/honours> ?award .
    FILTER(CONTAINS(LCASE(?award), ""commander of the royal victorian order""))
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
595,26,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?author WHERE {
  ?resident <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?resident <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?resident <http://www.wikidata.org/entity/P39> ?office . # Office holder

  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/LiteraryWork100000036> . # Written work
  ?work <http://dbpedia.org/ontology/book> ?book .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book100007846> . # Book

  FILTER(?author = ?resident)
}
```",3,8,4,3,1,3,3,71,0,0,3,0,0.0,0
151,3,train,Give me the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,4,5,0.0,0.0,0
941,9,train,"Who is the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
628,46,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  ?artist <http://dbpedia.org/property/birthName> ?birthName .
  ?bandMember <http://dbpedia.org/ontology/member> ?artist .
  
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist100001846> .

  FILTER(?bandMember = ?result)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
756,26,train,"Give me the native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?nativeCountry WHERE {
  ?leader <http://dbpedia.org/ontology/chiefExecutive> <http://dbpedia.org/resource/West_Germany> .
  ?leader <http://dbpedia.org/property/nativePlace> ?nativePlace .
  ?nativePlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?nativeCountry .
}
```",3,4,4,3,1,3,3,71,0,0,5170,0,0.0,0
557,56,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?producer WHERE {
  # Producer of The Adventures of Tom Sawyer (1938 film)
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?producer .

  # Actor of High Society Blues
  OPTIONAL { 
    <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(?actor = ?producer) # Assuming the same entity can be both actor and producer
  }

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?producer <http://dbpedia.org/property/occupation> ?alterEgo .
  }

  # Producer's claim to fame is a movie and a work
  OPTIONAL {
    ?claimToFame <http://dbpedia.org/ontology/work> ?producer .
    ?claimToFame <http://dbpedia.org/ontology/movie> ?producer .
  }
}
```",6,8,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
816,12,train,Give me the parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/family> ?parent .
  <http://dbpedia.org/resource/Amy_Arbus> <http://dbpedia.org/ontology/family> ?parent .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
737,50,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Descendant of Alexander of Württemberg through three generations
  ?grandchild1 <http://dbpedia.org/ontology/parent> ?parent1 .
  ?parent1 <http://dbpedia.org/ontology/parent> ?parent2 .
  ?parent2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> .

  # Descendant of Archduke Charles Louis through two generations
  ?grandchild2 <http://dbpedia.org/ontology/parent> ?parent3 .
  ?parent3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .

  # The person must be the same in both lineage conditions
  FILTER (?grandchild1 = ?result && ?grandchild2 = ?result)

  # Ensure the person is royalty
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
386,2,train,Give me the war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/participatedIn> ?war .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
756,36,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
SELECT ?result WHERE {
  # Manager of VfL Bochum
  <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/teamManager> ?result .
  
  # Manager of a specific team season
  ?teamSeason <http://dbpedia.org/ontology/team> ?team ;
              <http://www.w3.org/2002/07/owl#sameAs> ?v1 ; # Soccer club season
              <http://www.w3.org/2002/07/owl#sameAs> ?v2 .  # Sports team season
  
  FILTER(?v1 IN (<http://dbpedia.org/resource/Soccer_club_season>, 
                 <http://dbpedia.org/resource/Sports_season>, 
                 <http://dbpedia.org/resource/Sports_team_season>))
  
  ?result <http://dbpedia.org/ontology/teamManager> ?teamSeason .
  
  # Person born on 1968-08-26 and is a sports manager
  ?result <http://dbpedia.org/property/birthDate> ""1968-08-26""^^xsd:date ;
          <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q1930183> . # Assuming Q1930183 represents ""sports manager""
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,57,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?entity WHERE {
  # Birthplace of Henry Clay Lewis
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""us"") || CONTAINS(LCASE(?settlementLabel), ""america""))

  # Force of the awardee of the award of Quincy Adams Gillmore
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/award> ?award .
  ?award <http://dbpedia.org/property/awardee> ?awardee .
  ?awardee <http://dbpedia.org/ontology/memberOf> ?force .

  # War of Amasa Tracy
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/war> ?war .

  # Find the entity that matches all criteria
  FILTER (?birthPlace = ?entity || ?force = ?entity || ?war = ?entity)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
668,0,train,Give me the associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/collaboration> ?artist .
  FILTER (STRSTARTS(STR(?artist), ""http://dbpedia.org/resource/MusicalArtist""))
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
89,47,train,"Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify Min Hla Htut's parent
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> .
  
  # Step 2: Find child of that parent
  ?result <http://dbpedia.org/ontology/parent> ?parent .

  OPTIONAL {
    # Step 3: Identify Saw Shwe Khet's royal child
    ?child <http://dbpedia.org/ontology/father> ?father .
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
    
    # Step 4: Find the royal father of this child
    ?father <http://dbpedia.org/ontology/spouse> ?result .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is ""royalty""
    
    # Ensure the child is of Saw Shwe Khet
    ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  }
}
```",5,7,6,3,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
159,41,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Writer of ""Always the Love Songs""
  <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/ontology/writer> ?result .

  # Successor of a commander in Russo-Polish War (1654–1667)
  OPTIONAL { 
    ?commander <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Russo-Polish_War_(1654%E2%80%931667)> .
    ?commander <http://dbpedia.org/ontology/successor> ?result .
  }

  # Politician and office holder
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/politicalParty> ?party .
  }

  # Commander in Great Turkish War
  OPTIONAL {
    ?result <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Great_Turkish_War> .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
633,3,train,"Give me the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> dbo:parent ?result .
  
  # Assuming Q214424 is the identifier for ""royalty""
  ?result rdf:type <http://www.wikidata.org/entity/Q214424> . 
  OPTIONAL { 
    ?result rdf:type <http://dbpedia.org/ontology/Nobleman> . # Assuming Nobleman represents nobility
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,3,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> ?band .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
737,27,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?parent .
  ?greatGrandchild <http://dbpedia.org/ontology/parent> ?grandchild .
  
  ?result <http://dbpedia.org/ontology/parent> ?greatGrandchild .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
347,15,train,"Give me the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/partOf> <http://dbpedia.org/resource/Algerian_War> .
  ?result rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  ?result rdf:type <http://www.w3.org/2002/07/owl#Thing> . # Assuming general event classification
  OPTIONAL {
    ?tvShow dbo:depicts ?result .
  }
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
628,14,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/property/location> ?region .
  ?region a <http://dbpedia.org/class/yago/Region108069068> ; # Assuming this is the class for ""Region""
          a <http://dbpedia.org/class/yago/AmericanStatesAndTerritories100000001> ; # Assuming this is the class for ""American""
          a <http://dbpedia.org/class/yago/StateOrProvince108069067> ; # Assuming this is the class for ""State""
          a <http://dbpedia.org/class/yago/Settlement108069068> . # Assuming this is the class for ""Settlement""

  ?award <http://dbpedia.org/ontology/nationality> ?result .
}
```",2,6,3,2,1,3,3,71,0,0,8569,0,0.0,0
737,9,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .
  <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> <http://dbpedia.org/ontology/successor> ?result .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,47,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT DISTINCT ?professional WHERE {
  # Find the alter ego of The Shadow and professionals associated with it
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?professional <http://dbpedia.org/ontology/profession> ?alterEgo .

  # Find the actor of Johnny Doughboy and their claim to fame
  <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/claimToFame> ?work .

  # Identify a producer for the work that is the actor's claim to fame
  ?producer <http://dbpedia.org/ontology/produced> ?work .

  # Ensure the professional is also the producer of the claim to fame
  FILTER (?professional = ?producer)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
293,48,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of Ann Sothern.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?person WHERE {
  # Finding landmark at elevation approximately 20.12
  ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)
  
  # Determining the country or region of this landmark and its ruling party
  ?landmark <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/rulingParty> ?rulingParty .

  # Finding members of the ruling party
  ?member <http://dbpedia.org/ontology/memberOf> ?rulingParty .

  # Identifying Ann Sothern's birth name
  <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?birthName .
  
  # Finding persons born with that same name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .

  # Ensuring the person is a member of the ruling party
  FILTER(?member = ?person)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,21,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/child> ?result .
  
  OPTIONAL { 
    ?movie <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q13442814> . # Assuming Q13442814 is the identifier for ""film""
    ?movie <http://dbpedia.org/ontology/starring> ?result .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
89,43,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
SELECT DISTINCT ?result WHERE {
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .

  OPTIONAL { 
    <http://dbpedia.org/resource/Saw_Shwe_Khet> <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    ?father <http://dbpedia.org/ontology/parent> ?royalChild .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }
}
```",5,7,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
353,5,train,"Who is the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/William_I> <http://dbpedia.org/ontology/reference> ?result .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Q214424 is the identifier for ""royalty""
  OPTIONAL { 
    ?result <http://dbpedia.org/property/officeHolder> ?v1 .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
151,5,train,Give me the entity in the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
}
```",2,2,3,2,1,2,2,9,0,14,249,0.0,0.0,0
386,18,train,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war1 ?war2 WHERE {
  # Find the war associated with the awardee of the Golden Sword for Bravery
  ?person <http://dbpedia.org/property/awarded> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> .
  ?person <http://dbpedia.org/ontology/war> ?war1 .

  # Find the war associated with Karl Gustav von Baggovut
  <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/war> ?war2 .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
263,0,train,Give me the native of Middlesex.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex>.
}
```",1,1,2,1,1,2,3,28,935,0,0,1.0,1.0,1.0
293,31,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?location <http://dbpedia.org/ontology/location> ?landmark .
  ?party <http://dbpedia.org/property/rulingParty> ?location .
  ?result <http://dbpedia.org/property/memberOfParty> ?party .

  OPTIONAL {
    ?roger a <http://dbpedia.org/ontology/Actor> ;
           <http://dbpedia.org/ontology/spouse> ?result .
    FILTER (str(?roger) = ""Roger_Pryor_(actor)"")
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,24,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find child of Stephen V of Hungary
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Identify the father of Charles I of Hungary
  ?father <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Charles_I_of_Hungary> .

  # Find parent of this father (grandparent of Charles I)
  ?result <http://dbpedia.org/ontology/birthParent> ?father .
  
  # Ensure the result is royalty
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
756,59,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
SELECT ?manager WHERE {
  # Find the successor season of 2006–07 VfL Bochum
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?successorSeason .
  
  # Identify a player in this successor season who is part of a sports club, organization, and soccer club
  ?player <http://dbpedia.org/property/team> ?club .
  ?club rdf:type <http://dbpedia.org/class/yago/SportsClub108069068> ;
        rdf:type <http://dbpedia.org/class/yago/Organisation108069068> ;
        rdf:type <http://dbpedia.org/class/yago/SoccerClub108069068> .

  # Find the manager of this player
  ?player <http://dbpedia.org/ontology/coach> ?manager .
  
  # Identify the leader of West Germany and their country of origin
  ?leader <http://dbpedia.org/property/country> ?country .
  ?leader rdf:type <http://dbpedia.org/class/yago/Leader108069068> ;
          <http://dbpedia.org/ontology/nationality> ?nationality .

  # Ensure the manager is a native of this country
  ?manager <http://dbpedia.org/ontology/nationality> ?nationality .
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
288,6,train,Give me the theme of the show with Anumta Qureshi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
SELECT ?show ?theme WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> .
  ?show <http://dbpedia.org/property/theme> ?theme .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
557,24,train,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?producer WHERE {
  # Producer of A Star Is Born (1937 film)
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?producer .

  # Claim to fame of Cora Sue Collins as a work
  OPTIONAL { 
    <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/property/famousFor> ?work .
    ?work <http://dbpedia.org/ontology/producer> ?producer .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
513,17,train,"Give me the entity in United Kingdom and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
SELECT ?result WHERE {
  # Identify the political party associated with George Savage
  ?party <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/George_Savage_(politician)> .
  
  # Ensure it is both an organization and a political party
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation100000001> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/PoliticalParty1000000> .

  # Find the leader of this party
  ?leader <http://dbpedia.org/ontology/memberOf> ?party .
  
  # Determine the residence of the leader and ensure it is in the UK
  ?residence <http://dbpedia.org/property/residence> ?leader .
  ?residence <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/United_Kingdom> .

  # The result should be this residence entity
  BIND(?residence AS ?result)
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
39,4,train,Give me the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?profession .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
585,8,train,Give me the child of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  ?actress <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Actresses> .
  ?actress <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,935,0,0.0,0
80,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""medicine""))
}
```

This template can be adjusted based on the specific context or domain you have in mind.",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
905,40,train,"Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Child of Stephen V of Hungary
  ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Parent of Charles Martel of Anjou
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .

  OPTIONAL {
    # Philip, Despot of Romania's father and royalty check
    ?philipFather <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
    ?philipFather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    # Spouse of Philip's royal father
    ?result <http://dbpedia.org/ontology/spouse> ?philipFather .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
492,17,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?salMineoDeathPlace ?actorDeathPlace WHERE {
  # Get death place for Sal Mineo
  <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?salMineoDeathPlace .

  # Get actors of ""Color Me Dead""
  <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Get death place for each actor
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
89,49,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut> .
  
  ?result <http://dbpedia.org/ontology/parent> ?parent .
  FILTER (?predecessor = ?result)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
89,31,train,Give me the spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  # Find spouse of Saw Shwe Khet
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  
  # Identify children of Minye Kyawswa
  ?childMinyeKyawswa <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .

  # Find parents of those children (which could be Minye Kyawswa or another figure)
  ?parentOfChild <http://dbpedia.org/ontology/parent> ?childMinyeKyawswa .
  
  # Identify children of these parents
  ?result <http://dbpedia.org/ontology/parent> ?parentOfChild .

  # Ensure the person is both spouse and child as per conditions
  FILTER (?spouse = ?result)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,3,train,"Give me the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Philip,_Despot_of_Romania> <http://dbpedia.org/ontology/parent> ?result .
  ?result a <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
198,11,train,Give me the war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
SELECT DISTINCT ?war WHERE {
  ?recipient dbo:recipient <http://dbpedia.org/resource/Medal_of_Honor> .
  ?recipient dbo:servedInWar ?war .
}
```

This query selects distinct wars (`?war`) where the recipient of the Medal of Honor (`?recipient`) served. The assumption here is that DBpedia has a property `dbo:servedInWar` linking recipients to specific wars.",2,2,3,2,1,3,3,71,0,0,611,0,0.0,0
225,4,train,"Give me the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . }","```sparql
SELECT ?tvShow WHERE {
  ?tvShow a dbo:TelevisionShow .
  ?tvShow <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
80,24,train,Give me the actor of the album of What You Know (T.I. song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparqp
SELECT ?result WHERE {
  <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/property/song> ?album .
  ?album <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
103,28,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?result WHERE {
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TvSeries118069068>.
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film500>.
  
  ?result <http://dbpedia.org/ontology/starring> ?show .
  ?result <http://dbpedia.org/property/occupation> ""Actor""@en .
}
```",4,5,5,2,3,3,3,71,0,0,9,0,0.0,0
905,61,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find predecessor of Stephen V of Hungary
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Step 2: Find child of the predecessor who is royalty
  ?child <http://dbpedia.org/ontology/parent> ?predecessor .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 3: Find grandchild (who is royalty) of the predecessor
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 4: Find spouse of Maria of Bytom
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  
  # Step 5: Find father of the spouse who is royalty
  ?father <http://dbpedia.org/ontology/parent> ?spouse .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Step 6: Find parent of this royal father
  ?result <http://dbpedia.org/ontology/parent> ?father .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
668,57,train,"Give me the person born as the birth name of Joey B and associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joey B"" .
  
  OPTIONAL { 
    ?pacely dbo:associatedBand ?result .
  }
  
  ?anthology dbo:writer ?writer .
  ?writer a dbo:MusicalArtist ;
          dbo:occupation ""Writer"" .
  FILTER(?writer = ?result)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,57,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/ontology/politicalOffice> ?office .
  
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> ;
            <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> ;
            <http://dbpedia.org/ontology/residence> ?country .
    FILTER(?country = <http://dbpedia.org/resource/Spain>)
  }
  
  ?result <http://dbpedia.org/ontology/politicalOffice> ?office .
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> ;
          <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Spain> .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,31,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  # Parent of an awardee associated with Rodney Lees
  ?awardee <http://dbpedia.org/property/receivedAward> ?award .
  ?award <http://dbpedia.org/ontology/recipient> ?person .
  ?person <http://dbpedia.org/ontology/birthName> ""Rodney Lees"" .
  ?result <http://dbpedia.org/ontology/parent> ?awardee .

  # Parent of Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
769,15,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in Lai Sun Cheung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Find individuals born on Tony Hollings' birthday
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Ensure the person is an athlete and a soccer player
  ?person <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  
  # Check for roles as sports manager and soccer manager
  ?person <http://dbpedia.org/property/profession> ?profession .
  FILTER (
    (?profession = <http://dbpedia.org/resource/Sports_manager>) ||
    (?profession = <http://dbpedia.org/resource/Soccer_manager>)
  )

  # Ensure the person is a player in Lai Sun Cheung
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Lai_Sun_Cheung> .
  }
}
```",4,8,5,3,2,3,2,20,0,0,2,0,0.0,0
412,21,train,Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?result WHERE {
  # War involving Napoleon Zervas
  <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/war> ?war1 .
  
  # Awardee of the year 1930 and their associated war
  ?awardee <http://dbpedia.org/property/yearAwarded> ""1930""^^xsd:gYear ;
           <http://dbpedia.org/ontology/war> ?war2 .

  # Entity related to Athens
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Athens> .
  
  # Ensure the entity is involved in both wars and located in Athens
  FILTER (?result = ?war1 && ?result = ?war2)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,17,train,Give me the war of Hashiba Hidekatsu and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
SELECT ?hashibaWar ?koichiroWar WHERE {
  # Wars involving Hashiba Hidekatsu
  OPTIONAL { 
    <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/war> ?hashibaWar .
  }
  
  # Wars involving the person born as Koichirō
  OPTIONAL {
    ?koichiro <http://www.w3.org/2000/01/rdf-schema#label> ""Koichirō""@en .
    ?koichiro <http://dbpedia.org/ontology/birthName> ""Koichirō"" .
    ?koichiro <http://dbpedia.org/ontology/war> ?koichiroWar .
  }
}
```

Note: The query assumes that DBpedia has entries for Hashiba Hidekatsu and a person with the birth name Koichirō, along with their associated wars. Adjustments may be necessary based on actual data availability in DBpedia.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
905,21,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> .
  ?father <http://dbpedia.org/ontology/spouse> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Stephen_V_of_Hungary> ;
            <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
263,15,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?parent WHERE {
  # Find the birthplace of William Gayner that is both a region and a country
  <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure this place is classified as both a region and a country
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:Regions_of_the_United_Kingdom> .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:Countries_in_Europe> .

  # Find the parent of Patrick Bowes-Lyon who is native to this birthplace
  ?parent <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
203,20,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?result WHERE {
  ?campaign <http://dbpedia.org/ontology/commander> ?result .
  ?campaign <http://www.w3.org/2000/01/rdf-schema#label> ""French campaign in Egypt and Syria""@en .

  OPTIONAL { 
    ?war <http://dbpedia.org/property/militaryForce> ?result .
    ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .
    ?war <http://www.w3.org/2000/01/rdf-schema#label> ?labelWar .
    FILTER(CONTAINS(LCASE(?labelWar), ""military conflict"") && CONTAINS(LCASE(?labelWar), ""event""))
  }
}
```",3,5,4,2,2,3,3,71,2,46,0,0.041666666666666664,1.0,0.07999999999999999
782,29,train,Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
  
  OPTIONAL { 
    ?member <http://dbpedia.org/property/memberOfBand> ?band .
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Eric_Clapton> .
    ?result <http://dbpedia.org/ontology/band> ?band .
  }
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nick_Curran> .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
225,10,train,"Give me the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?result .
  ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  
  OPTIONAL { 
    ?reference <http://dbpedia.org/property/referencedBy> ?award .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> .
  }
  
  FILTER EXISTS { 
    ?award <http://dbpedia.org/ontology/name> ""Anita Borg Institute Women of Vision Awards"" .
  }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
78,22,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  # Find writer of Wizards of Waverly Place (soundtrack) who is also a musical artist
  <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""musical artist"") || CONTAINS(LCASE(?v1), ""artist"")) .

  # Find associated musical artists of the writer
  OPTIONAL { 
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
  }

  # Identify Stuart Mcbeath Tosh as a musical artist and find his associated musical artists
  <http://dbpedia.org/resource/Stuart_Mcbeath_Tosh> <http://dbpedia.org/property/birthDate> ?birthDate .
  FILTER(CONTAINS(LCASE(?v1), ""musical artist"")) .

  OPTIONAL { 
    <http://dbpedia.org/resource/Stuart_Mcbeath_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
  }
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
293,61,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Find the birth name of a parent of Tisha Sterling
  ?parent <http://dbpedia.org/ontology/birthName> ?birthName .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> .

  # Identify films produced by Nat Levine and actors in those films
  ?film <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Nat_Levine> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .

  # Find the spouse of an actor who matches the birth name condition
  ?actor <http://dbpedia.org/ontology/spouse> ?person .
  
  FILTER (?birthName = ?person)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
492,0,train,Give me the death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Reed_Howes> dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
871,9,train,"Give me the parent of Victor Stanley (Royal Navy officer) and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> <http://dbpedia.org/ontology/father> ?parent .
    <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> <http://dbpedia.org/ontology/mother> ?parent .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/father> ?parent .
    <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/mother> ?parent .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,16,train,Give me the war of the child of Toyotomi Hideyoshi and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?child ?war WHERE {
  <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/property/war> ?war .
  ?war <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Japan> .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
87,16,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and actor of Paradise (2013 film).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
SELECT ?actor WHERE {
  # Actors from films that are works and starred Audrey Hepburn
  ?film a dbo:Film ;
        <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Audrey_Hepburn> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .

  # Actors from the film ""Paradise"" (2013)
  <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,5,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
159,49,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  # Find commanders in Russo-Polish War
  ?commander <http://dbpedia.org/property/war> <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> .
  
  # Identify their successors who are politicians and office holders
  ?successor <http://dbpedia.org/ontology/successor> ?commander .
  ?successor <http://dbpedia.org/property/politicalParty> ?party .
  ?successor <http://dbpedia.org/ontology/officeHolder> ?office .

  # Find wars that are both television shows and societal events
  ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Television_series_by_genre> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Societal_events> .

  # Identify commanders in these wars who were also involved in the Battle of Vienna
  ?successor <http://dbpedia.org/ontology/commander> ?war .
  ?militaryForce <http://dbpedia.org/property/militaryForce> <http://dbpedia.org/resource/Battle_of_Vienna> .
  ?successor <http://dbpedia.org/ontology/commander> ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
203,43,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805) and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . }","```sparql
SELECT ?result WHERE {
  # Military force of the war involving William Bayne
  ?war <http://dbpedia.org/ontology/war> ?v1 .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?v2 .
  ?v2 <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/William_Bayne> .
  ?result <http://dbpedia.org/property/militaryForce> ?war .

  # Military force of Battle of Cape Finisterre (1805)
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/property/militaryForce> ?result .
  }

  # Commander in French campaign in Egypt and Syria
  OPTIONAL {
    <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
531,33,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Madrid> .
  ?result <http://dbpedia.org/property/office> ?v1 .
  FILTER EXISTS { ?v1 <http://www.w3.org/2000/01/rdf-schema#label> ""Commander"" . }
  
  ?result a <http://dbpedia.org/ontology/OfficeHolder> ;
         a <http://dbpedia.org/ontology/Politician> .

  OPTIONAL {
    ?conflict <http://dbpedia.org/property/conflict> ?v2 .
    FILTER EXISTS { ?v2 <http://www.w3.org/2000/01/rdf-schema#label> ""Military Conflict"" . }
    FILTER EXISTS { ?v2 <http://www.w3.org/2000/01/rdf-schema#label> ""Societal Event"" . }
    
    ?conflict <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
  }
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
557,58,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?producer WHERE {
  # Producer of Cora Sue Collins' claim to fame
  ?collinsClaim <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Cora_Sue_Collins> .
  ?collinsClaim <http://www.w3.org/2002/07/owl#sameAs> ?work .
  ?producer1 <http://dbpedia.org/ontology/producer> ?collinsClaim .

  # Producer of an actor's claim to fame in High Society Blues
  ?highSocietyActor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/High_Society_Blues> .
  ?actorFame <http://www.w3.org/2002/07/owl#sameAs> ?movie .
  ?producer2 <http://dbpedia.org/ontology/producer> ?actorFame .

  # Ensure the producer is the same for both conditions
  FILTER (?producer1 = ?producer2)
  BIND(?producer1 AS ?producer)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
723,17,train,"Give me the band member of Mudvayne and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Find members of Mudvayne
  <http://dbpedia.org/resource/Mudvayne> <http://dbpedia.org/ontology/member> ?result .
  
  # Identify associated musical artist that is also an organization and a band
  ?associatedBand <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/Nate_Newton> .
  ?associatedBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup115069068> . # Assuming this is the class for bands
  ?associatedBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation118237> . # Assuming this is the class for organizations
  
  # Check if the person is also a member of the associated band
  ?associatedBand <http://dbpedia.org/ontology/member> ?result .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
353,22,train,Give me the child of the child of Alfonso VI of León and Castile and child of Roger II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  # Find grandchildren of Alfonso VI
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .

  # Find children of Roger II
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .

  # Ensure the same individual is both a grandchild of Alfonso VI and a child of Roger II
  FILTER (?grandchild = ?result)
}
```",3,3,4,2,2,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
80,51,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
SELECT ?result WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/partOfAlbum> ?album .
    ?album <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",5,5,6,3,2,3,3,71,0,0,4,0,0.0,0
633,17,train,"Give me the spouse of Renée of Bourbon and parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Renée_of_Bourbon> .
  
  ?father <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?parent <http://dbpedia.org/ontology/parent> ?father .
  
  ?result <http://dbpedia.org/ontology/spouse> ?spouse .
  ?result <http://dbpedia.org/ontology/parent> ?parent .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
723,9,train,"Give me the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:Organization .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:Group .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
816,18,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> dbo:starring ?result .
  
  ?result dbo:child <http://dbpedia.org/resource/Doon_Arbus> .
  ?result dbo:child <http://dbpedia.org/resource/Amy_Arbus> .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
249,2,train,"Give me the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . },"```sparql
SELECT ?work WHERE {
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jamsetji_Tata> .
  ?work a <http://dbpedia.org/class/yago/Work108930069> . # Assuming this class represents ""Work""
  OPTIONAL { 
    ?work <http://purl.org/dc/terms/isPartOf> <http://dbpedia.org/resource/India> .
  }
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
816,58,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?actor WHERE {
  # Actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?actor .

  # Parent of the child of the spouse of Mariclare Costello
  OPTIONAL {
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
    ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
    ?actor <http://dbpedia.org/ontology/birthChild> ?child .
  }

  # Parent of the professional in Photographer
  OPTIONAL {
    ?photographer <http://dbpedia.org/property/occupation> ""Photographer"" .
    ?actor <http://dbpedia.org/ontology/birthParent> ?photographer .
  }
}
```",6,6,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
609,61,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place as a region and administrative region
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?region .
  ?region a <http://dbpedia.org/class/yago/AdministrativeRegion108069068> .

  # Step 2: Find the governor of that region who is a politician
  ?governor <http://dbpedia.org/ontology/governs> ?birthPlace ;
            <http://dbpedia.org/property/politician> true .
  
  # Step 3: Get the birth place of this governor
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .

  # Step 4: Find El Deafo's author and an American reference to them
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?author .
  ?reference <http://dbpedia.org/ontology/reference> ?author ;
             <http://www.w3.org/2002/07/owl#sameAs> ?americanEntity .
  
  # Ensure the reference is American
  ?americanEntity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> .

  # Get the birth place of the person/entity associated with that reference
  OPTIONAL { 
    ?reference <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
80,13,train,Give me the actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?album .
  ?album <http://dbpedia.org/ontology/starring> ?result .
}
```",2,2,3,2,1,3,3,71,10,0,0,1.0,1.0,1.0
375,0,train,Give me the author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
723,16,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  # Find the producer of ""Nothing to Gein"" that is an organization and a group
  <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer rdf:type <http://dbpedia.org/class/yago/Organisation100000001> . # Assuming this class represents organizations/groups

  # Find band members of the producer
  ?result <http://dbpedia.org/ontology/member> ?producer .

  # Ensure the same person is a band member of Cavalera Conspiracy
  <http://dbpedia.org/resource/Cavalera_Conspiracy> rdf:type <http://dbpedia.org/class/yago/MusicalArtist100000001> . # Assuming this class represents musical artists/organizations
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Cavalera_Conspiracy> .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
756,11,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?manager WHERE {
  <http://dbpedia.org/resource/VfL_Bochum> a <http://dbpedia.org/ontology/SportsClub> .
  <http://dbpedia.org/resource/VfL_Bochum> a <http://dbpedia.org/ontology/Organisation> .
  <http://dbpedia.org/resource/VfL_Bochum> a <http://dbpedia.org/ontology/SoccerClub> .

  ?season <http://dbpedia.org/property/team> <http://dbpedia.org/resource/VfL_Bochum> .
  ?season <http://dbpedia.org/property/year> ""2007–08""^^<http://www.w3.org/2001/XMLSchema#string> .
  
  ?season <http://dbpedia.org/ontology/teamManager> ?manager .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
531,39,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?miguelPartyLeaderOffice ?marianoRajoyOffice WHERE {
  # Find Miguel Maura's political party
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/member> ?party .
  
  # Identify the leader of this party and their office, ensuring they are a politician
  ?leader <http://dbpedia.org/ontology/partyLeader> ?party ;
          <http://dbpedia.org/ontology/politician> true ;
          <http://dbpedia.org/ontology/officeHolder> ?miguelPartyLeaderOffice .
  
  # Find the office held by Mariano Rajoy
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/officeHolder> ?marianoRajoyOffice .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,3,train,Give me the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/award> ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
119,22,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/ontology/office> ?office .
  
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> .
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  ?person <http://dbpedia.org/ontology/office> ?adminOffice .
  
  FILTER(?adminOffice = ?office)
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
472,1,train,Give me the administration of Christian IX of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/reign> ?reign .
  ?reign <http://dbpedia.org/property/administration> ?administration .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
58,12,train,Give me the spouse of Linda Bruckheimer and producer of the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
SELECT ?spouse ?movie WHERE {
  <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/ontology/spouse> ?spouse .
  OPTIONAL { 
    <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/produced> ?movie .
  }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
585,7,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
  ?award <http://dbpedia.org/ontology/location> ?settlement .
  FILTER (isLiteral(?settlement) && contains(str(?settlement), ""Coro de la Pontificia Universidad Católica de Puerto Rico""))
  ?award <http://dbpedia.org/property/nativeOf> ?result .
}
```",2,4,3,2,1,3,2,20,0,0,8569,0,0.0,0
263,9,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?commonParent WHERE {
  # Find parents of Mary Elphinstone, Lady Elphinstone
  <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> dbo:parent ?parent1 .
  
  # Find parents of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> dbo:parent ?parent2 .

  # Check for common parent
  FILTER (?parent1 = ?commonParent)
  FILTER (?parent2 = ?commonParent)
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
782,13,train,Give me the band of the band member of Eric Clapton.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT DISTINCT ?band WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Eric_Clapton> .
  ?member <http://dbpedia.org/ontology/member> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
258,10,train,"Who is the person born, that is a politician, as the birth name of Eleonora Menicucci?",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Eleonora Menicucci"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/politician> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,7,train,Give me the birthday of Marcelo Sarmiento.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthday WHERE {
  <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?birthday .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
816,2,train,Give me the parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/father> ?parent .
} UNION
{
  <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/mother> ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
159,52,train,"Give me the commander in Great Turkish War and reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
SELECT ?commander ?successor WHERE {
  # Find commanders in the Great Turkish War
  ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Great_Turkish_War> .
  ?event <http://dbpedia.org/ontology/commander> ?commander .

  # Reference to the writer of ""Always the Love Songs""
  OPTIONAL {
    ?writer <http://dbpedia.org/property/writtenWork> <http://dbpedia.org/resource/Always_the_Love_Songs> .
    ?commander <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?writer .
  }

  # Successor as a politician and office holder
  ?commander <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://dbpedia.org/ontology/politicalParty> ?party .
  ?successor <http://dbpedia.org/property/officeHolder> ?office .

  # Force involved in an event and military conflict
  ?force <http://dbpedia.org/ontology/event> ?event .
  ?force <http://dbpedia.org/ontology/militaryConflict> ?conflict .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
225,11,train,Give me the birthplace of Chieko Asakawa and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?birthPlace ?entity WHERE {
  <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  OPTIONAL {
    ?entity <http://www.w3.org/2006/time#during> [
      a <http://www.w3.org/2006/time#DateTimeInterval>;
      <http://www.w3.org/2006/time#hasTimezone> ""Asia/Tokyo""^^<http://www.w3.org/2001/XMLSchema#string>
    ] .
  }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
871,19,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
SELECT ?commonParent WHERE {
  # Find the parent of an awardee of Commander of the Royal Victorian Order
  ?awardee <http://dbpedia.org/ontology/nationality> wd:Q145 . # Assuming Q145 is a placeholder for ""Commander of the Royal Victorian Order""
  ?awardee <http://dbpedia.org/ontology/parent> ?commonParent .

  # Find the parent of Edward Stanley, 17th Earl of Derby
  <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?commonParent .
}
```

Note: The query assumes that there is a direct property linking individuals to the ""Commander of the Royal Victorian Order"" in DBpedia, which may need adjustment based on actual data availability. Additionally, the placeholder `wd:Q145` should be replaced with the correct Wikidata identifier for the award if available.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,44,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
SELECT ?result WHERE {
  # Find the child (grandchild) of Béla IV who is royalty
  ?grandchild <http://dbpedia.org/ontology/father> ?child .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Find parent of father who is royalty of Charles I
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_I_of_Hungary> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }

  # Ensure this person is spouse of Charles II of Naples
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .

  # Link all conditions to find the common individual
  FILTER (?grandchild = ?parent && ?grandchild = ?result)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
557,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
103,35,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?result WHERE {
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie500000001> .
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow500000001> .
  ?show <http://dbpedia.org/ontology/starring> ?result .
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .

  OPTIONAL {
    ?result <http://dbpedia.org/property/occupation> ?v1 .
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  }
}
```",4,5,5,2,2,3,3,71,0,0,13,0,0.0,0
609,49,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . }","```sparql
SELECT DISTINCT ?authorBirthPlace ?awardeeBirthPlace WHERE {
  # Find the American author of ""El Deafo""
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?author <http://dbpedia.org/property/birthPlace> ?authorBirthPlace .

  # Find the birthplace of an awardee related to Vince Gilligan
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/receiver> ?awardee .
    ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Vince_Gilligan> .
    ?awardee <http://dbpedia.org/property/birthPlace> ?awardeeBirthPlace .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,13,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
  <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
80,31,train,Give me the actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Find the author of Smartbomb
  <http://dbpedia.org/resource/Smartbomb_(book)> <http://purl.org/dc/terms/creator> ?author .
  
  # Find movies written by this author and their actors
  ?movie <http://dbpedia.org/ontology/writer> ?author .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  # Find actors in the film ATL
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?atlActor .

  # Check for a common actor between the two sets
  FILTER (?actor = ?atlActor)
}
```",4,4,5,3,2,3,3,71,0,0,10,0,0.0,0
39,20,train,Give me the professional in the alter ego of The Shadow and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Singer> .
  }
}
```",3,3,4,2,2,3,3,71,5422,34218,0,0.13678102926337032,1.0,0.24064622076250494
293,45,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/birthName> ?birthName .
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Tisha_Sterling> .

  ?result <http://dbpedia.org/property/politicalAffiliation> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
  
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Roger_Pryor_(actor)> .

  FILTER (?birthName = ?result)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,3,train,Give me the time zone of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
SELECT ?timeZone WHERE {
  <http://dbpedia.org/resource/Japan> <http://dbpedia.org/ontology/timeZone> ?timeZone .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
871,58,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?father WHERE {
  # Step 1: Find the alumnus of Eton College and their politician child
  ?alumnus <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> .
  ?child <http://dbpedia.org/ontology/birthParent> ?alumnus .
  ?child <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""

  # Step 2: Check if this politician is a parent of Frederick Stanley's child
  ?frederickChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?child <http://dbpedia.org/ontology/birthParent> ?frederickChild .

  # Step 3: Ensure this politician is also a parent of Victor Stanley
  ?victor <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> .
  ?child <http://dbpedia.org/ontology/birthParent> ?victor .

  # The father we are looking for is the same as this child's parent
  ?father <http://dbpedia.org/ontology/birthChild> ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
68,8,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?grandfather WHERE {
  <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> dbo:parent ?parent .
  ?parent dbo:parent ?grandfather .
}
```",2,2,3,2,1,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
756,21,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  <http://dbpedia.org/resource/2020%E2%80%9321_SBV_Vitesse_season> <http://dbpedia.org/ontology/teamManager> ?manager .

  # Manager of a player in the 2007–08 VfL Bochum season
  OPTIONAL {
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsClub108069068> .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068> .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerClub108069068> .
    <http://dbpedia.org/resource/2007%E2%80%9308_VfL_Bochum_season> <http://dbpedia.org/ontology/teamManager> ?manager .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
472,2,train,Give me the administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Olaf_I_of_Denmark> <http://dbpedia.org/ontology/reign> ?administration .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
628,26,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person ?birthName WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?person <http://dbpedia.org/ontology/placeOfBirth> ?place .
  ?place <http://www.w3.org/2000/01/rdf-schema#label> ""Florida""@en .
  ?person a <http://dbpedia.org/ontology/MusicalArtist> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  }
}
```",3,4,4,3,1,3,3,71,0,0,59,0,0.0,0
213,10,train,"Give me the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Hu_Jieqing> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""writer"")) .
  
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/works> ?work .
  }
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
871,60,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/receipient> ?awardee .
  ?award <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Rodney_Lees> .
  
  ?parent <http://dbpedia.org/ontology/child> ?awardee .
  ?result <http://dbpedia.org/ontology/father> ?politicianChild .

  ?politicianChild <http://dbpedia.org/property/occupation> ""Politician"" .
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Eton_College> .
  ?politicianChild <http://dbpedia.org/ontology/parent> ?alumnus .

  FILTER (?result = ?parent)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,51,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Child of the child of Archduchess Margarete Sophie of Austria
  ?parent1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  ?grandchild1 <http://dbpedia.org/ontology/parent> ?parent1 .
  
  # Child of the child of Duke Philipp of Württemberg
  ?parent2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
  ?grandchild2 <http://dbpedia.org/ontology/parent> ?parent2 .

  # Intersection and royalty condition
  FILTER (?grandchild1 = ?result && ?grandchild2 = ?result)
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
353,19,train,"Give me the child of the parent of Roger III, Duke of Apulia and father of William II of Sicily.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  ?parent <http://dbpedia.org/ontology/child> ?result .
  
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_II_of_Sicily> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,4,train,"Give me the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Wars> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event rdf:type <http://dbpedia.org/class/yago/YagoLegalEvent108930848> . # Assuming this class represents ""Event""
  
  <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/participatedIn> ?war .
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
103,20,train,Give me the actor of Dispatches from Elsewhere and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/occupation> ?occupation .
  
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?shatrughanOccupation .
  
  FILTER (?occupation = ?shatrughanOccupation)
}
```",3,3,4,2,2,3,3,71,2,0,0,1.0,1.0,1.0
492,16,train,Give me the death place of Reed Howes and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?howesDeathPlace ?actor ?actorDeathPlace WHERE {
  # Death place for Reed Howes
  <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?howesDeathPlace .

  # Actors of Aladdin (1958 film)
  <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Death place for each actor
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,8,0,0.1111111111111111,1.0,0.19999999999999998
905,7,train,Give me the predecessor of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Stephen_V_of_Hungary> <http://dbpedia.org/ontology/successor> ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
80,10,train,Give me the professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
782,42,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
SELECT ?result WHERE {
  ?nick <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?nick <http://dbpedia.org/property/musicalArtist> ?result .

  OPTIONAL { 
    ?thunderbirds <http://www.wikidata.org/entity/P735> ?kim .
    ?kim <http://dbpedia.org/ontology/birthName> ""Kim Wilson"" .
    ?thunderbirds rdfs:label ""The Fabulous Thunderbirds""@en .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
905,14,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
119,15,train,"Who is the leader of the administration, that is an event, of Anxo Quintana?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Anxo_Quintana> <http://dbpedia.org/ontology/event> ?event .
  ?event <http://dbpedia.org/property/administration> ?administration .
  ?administration <http://dbpedia.org/ontology/leader> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,9,0,0.0,0
816,33,train,Give me the parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result ?parent WHERE {
  <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/profession> ?profession .
  
  ?actor <http://dbpedia.org/property/profession> ?profession .
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?actor .

  ?actor <http://dbpedia.org/ontology/parent> ?parent .
  
  BIND(?actor AS ?result)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,44,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
SELECT ?result WHERE {
  ?office <http://dbpedia.org/ontology/holder> ?result .
  ?office <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> .

  OPTIONAL { 
    ?residence <http://dbpedia.org/ontology/resident> ?result .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ""Álvaro Quirós""@en .
    ?residence <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Countries> .
  }

  OPTIONAL { 
    ?administration <http://dbpedia.org/ontology/administrator> ?result .
    ?administration <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish Socialist Workers' Party""@en .
    ?administration <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Spain> .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
871,0,train,Give me the parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> 
    (<http://dbpedia.org/ontology/father> | <http://dbpedia.org/ontology/mother>) ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
347,6,train,"Give me the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,2,4,0.0,0.0,0
87,23,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Find movies with Iliza Shlesinger that are works and films
  ?movie1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?movie1 <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Films_by_year> . # Assuming this indicates a film
  ?movie1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> .
  
  # Find actors in these movies
  ?movie1 <http://dbpedia.org/ontology/starring> ?actor .

  # Find movies with Audrey Hepburn that are works and films
  ?movie2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?movie2 <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Films_by_year> . # Assuming this indicates a film
  ?movie2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Audrey_Hepburn> .
  
  # Find actors in these movies
  ?movie2 <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,8,5,2,2,2,3,28,0,0,1,0,0.0,0
769,0,train,Give me the player in Ye Jia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/player> ?player .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
311,15,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of Mark Eitzel.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the producer of ""Lotus"" that is an organization and a band/group
  <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?producer .
  
  FILTER (
    { ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation100000001> . }
    && 
    {
      { ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup1000000> . }
      ||
      { ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Band10000000> . }
    }
  )
  
  # Step 2: Find the associated musical artist of this producer
  ?producer <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
  
  # Step 3: Find another associated musical artist of the first artist
  ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
  
  # Step 4: Check if this result is a band member of Mark Eitzel
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mark_Eitzel> .
  }
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
103,58,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Find the profession of Shatrughan Sinha
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/ontology/profession> ?profession .
  
  # Find individuals with the same profession as Shatrughan Sinha
  ?result <http://dbpedia.org/ontology/profession> ?profession .

  # Identify the alter ego of a comics character from The Shadow video game
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?result <http://dbpedia.org/ontology/profession> ?alterEgo .
  }

  # Find actors of Dispatches from Elsewhere
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?result .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
375,6,train,Give me the parent of Kate Dimbleby and author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Kate_Dimbleby> <http://dbpedia.org/ontology/birthParent> ?result .
  OPTIONAL { 
    <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/property/author> ?result .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
143,14,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?birthName ?artist WHERE {
  <http://dbpedia.org/resource/Cynthia_Morgan_(singer)> <http://dbpedia.org/property/birthName> ?birthName .
  OPTIONAL { 
    ?birthName <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }
}
```",3,3,4,3,1,3,2,20,0,0,6,0,0.0,0
159,4,train,"Give me the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Russo-Polish_War_(1654%E2%80%931667)> .
  ?event <http://dbpedia.org/ontology/commander> ?result .
  
  ?result <http://dbpedia.org/property/politicalParty> ?party .
  ?result <http://dbpedia.org/ontology/officeHolder> ?office .

  FILTER EXISTS { 
    ?result <http://dbpedia.org/ontology/birthDate> ?birth .
    ?result <http://dbpedia.org/ontology/deathDate> ?death .
    FILTER (?birth <= ""1667-01-01""^^xsd:date && ?death >= ""1654-01-01""^^xsd:date)
  }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
595,9,train,Give me the spouse of Hillary Clinton and author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result .
  OPTIONAL { 
    <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
158,0,train,Give me the person decedent at Switzerland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> .
}
```",1,1,2,1,1,2,3,28,906,0,0,1.0,1.0,1.0
706,4,train,"Give me the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dipankar_De> .
}
```",1,3,2,1,1,3,2,20,3,1,0,0.75,1.0,0.8571428571428571
531,48,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
SELECT ?leaderOffice ?tenant WHERE {
  # Find leader of Conservative Republican Party (Spain)
  ?person <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
  ?person <http://dbpedia.org/property/office> ?leaderOffice .

  # Find office holder from the 2003 Madrid City Council election
  ?holder <http://dbpedia.org/ontology/election> <http://dbpedia.org/resource/Madrid_City_Council_election,_2003> .
  ?holder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/OfficeHolder108069068> .
  ?holder <http://dbpedia.org/property/residence> ?residence .

  # Find tenant of the residence
  ?tenant <http://dbpedia.org/ontology/livesIn> ?residence .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the producer of ""Lotus"" (R.E.M. song)
  <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?producer .

  # Step 2: Ensure the producer is an organisation, band, and group
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068> .
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Band103501465> .
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup108069068> .

  # Step 3: Find associated musical artist of the producer
  ?producer <http://dbpedia.org/property/associatedMusicalArtist> ?artist1 .

  # Step 4: Identify associated musical artist of these artists
  ?artist1 <http://dbpedia.org/property/associatedMusicalArtist> ?result .
}
```",3,7,4,3,1,3,2,20,0,0,28,0,0.0,0
609,55,train,"Give me the birth place of the author of El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birth place of the author of ""El Deafo""
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?author .
  ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

# Query for the birth place of an awardee from Vince Gilligan's list
SELECT ?awardeeBirthPlace WHERE {
  ?award <http://dbpedia.org/property/nomineeOrWinner> ?awardee .
  ?award <http://dbpedia.org/resource/Vince_Gilligan> ?relation .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .
}

UNION

# Query for the birth place of the current governor of Virginia
SELECT ?governorBirthPlace WHERE {
  ?governor <http://dbpedia.org/ontology/governmentRole> <http://dbpedia.org/resource/Governor_of_Virginia> ;
            <http://www.w3.org/2000/01/rdf-schema#label> ""Governor of Virginia""@en .
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
  FILTER EXISTS { ?governor <http://dbpedia.org/ontology/politicalParty> ?party } # Ensures they are a politician
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
731,2,train,Give me the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/ontology/award> ?award .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
87,10,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?awardee ?spouse WHERE {
  ?award <http://dbpedia.org/property/nominee> ?awardee .
  ?award <http://dbpedia.org/property/winner> ?awardee .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/YahooAwardRecipient100000001> .
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  FILTER EXISTS {
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
    ?awardLabel bif:contains ""Janusz Kamiński"" .
  }
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
816,6,train,Give me the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/occupation> ""Photographer""@en .
}
```",1,1,2,1,1,3,3,71,937,0,0,1.0,1.0,1.0
687,40,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthDate> ?birthDate .
  ?martyPollio <http://dbpedia.org/property/birthDate> ?birthDate .
  
  FILTER(?person != ?martyPollio) # Ensure it's not Marty Pollio himself

  ?person <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Athlete> .

  ?pabloAimar <http://dbpedia.org/ontology/teamMember> ?result .
  ?sergioAgüero <http://dbpedia.org/ontology/teamMember> ?result .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,53,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result WHERE {
  # Parent of Amy Arbus
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> .
  
  # Parent of the child of Allan Arbus
  ?allanChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Allan_Arbus> .
  ?parent2 <http://dbpedia.org/ontology/child> ?allanChild .

  # Actor in a movie that is classified as a work
  ?result <http://dbpedia.org/ontology/starring> ?movie .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .

  # Connection to a decedent at Los Angeles
  OPTIONAL {
    ?decedent <http://dbpedia.org/property/deathPlace> ""Los Angeles"" .
    ?result <http://dbpedia.org/ontology/spouse> ?decedent .
  }

  FILTER (?parent = ?parent2)
}
```",6,7,7,3,3,3,3,71,0,23693,1,0.0,0.0,0
782,35,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
SELECT ?associatedArtist WHERE {
  ?curran <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?curran <http://dbpedia.org/property/musicalArtist> ?associatedArtist .

  OPTIONAL {
    <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://dbpedia.org/ontology/realName> ?realName .
    ?associatedArtist <http://www.w3.org/2000/01/rdf-schema#label> ?realName .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
531,9,train,Give me the tenant of Madrid and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?residence ?office WHERE {
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/residence> ?residence .
  FILTER(CONTAINS(LCASE(STR(?residence)), ""madrid""))
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/politicalOffice> ?office .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
143,1,train,Give me the associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Cynthia_Morgan_(singer)> 
    <http://dbpedia.org/ontology/collaboration> ?artist .
  
  UNION
  
  <http://dbpedia.org/resource/Cynthia_Morgan_(singer)>
    <http://dbpedia.org/property/associatedActs> ?artist .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
585,2,train,Give me the awardee of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/New_York_(state)> .
  ?award <http://dbpedia.org/property/recipient> ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,60,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?person WHERE {
  # Find Tisha Sterling's parent(s)
  ?parent <http://dbpedia.org/ontology/birthName> ?birthName .
  ?tisha <http://dbpedia.org/ontology/birthName> ""Tisha Sterling"" .
  ?tisha <http://dbpedia.org/ontology/parent> ?parent .

  # Find a landmark with the specified elevation
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#elevation> ?elevation .
  FILTER(?elevation = 20.1168) .

  # Determine the country of this landmark and its ruling party
  ?landmark <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/property/rulingParty> ?rulingParty .

  # Find a person who is a member of this ruling party
  ?person <http://dbpedia.org/ontology/memberOfPoliticalParty> ?rulingParty .
  
  FILTER(?birthName = ?person) # Ensure the birth name matches the person found
}
```

Note: This query assumes that DBpedia contains elevation data for landmarks and political party membership information, which might not be directly available. Adjustments or external data sources may be necessary to fully resolve this query.",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
151,0,train,Give me the entity in Ottoman Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> .
}
```

This query retrieves entities that are considered part of or associated with the Ottoman Empire based on their country property.",1,1,2,1,1,2,2,9,0,0,247,0,0.0,0
143,11,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of Cynthia Morgan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?result WHERE {
  # Find movies where Afeez Oyetoro has acted
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> .
  
  # Identify other actors in those movies
  ?movie <http://dbpedia.org/ontology/starring> ?result .

  # Check if the actor is associated with Cynthia Morgan as a musical artist
  OPTIONAL {
    ?result <http://dbpedia.org/property/musicArtist> <http://dbpedia.org/resource/Cynthia_Morgan> .
  }
}
```",3,4,4,2,2,3,2,20,1,24,0,0.04,1.0,0.07692307692307693
595,21,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?book <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/An_Invitation_to_the_White_House> .
  ?book <http://dbpedia.org/ontology/author> ?author .

  # Ensure the author is a politician and an office holder
  ?author <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?author <http://www.wikidata.org/entity/P39> ?office . # Office holder

  # Find the spouse of this author
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .

  # Ensure the spouse was a commander in the Third Taiwan Strait Crisis
  ?crisis <http://dbpedia.org/property/commander> ?spouse .
  FILTER(STRSTARTS(LCASE(?crisis), ""third taiwan strait crisis""))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,57,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?actor WHERE {
  # Actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?actor .

  # Parent of a professional in the profession of Eugène Cattin
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/profession> ?profession .
    ?parent <http://dbpedia.org/ontology/parent> ?child .
    ?eugene_cattin <http://dbpedia.org/ontology/profession> ?eugene_profession .
    FILTER(?profession = ?eugene_profession)
  }

  # Parent of a child of Allan Arbus
  OPTIONAL {
    ?allan_arbus_child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Allan_Arbus> .
    ?actor_parent <http://dbpedia.org/ontology/parent> ?allan_arbus_child .
    FILTER(?actor = ?actor_parent)
  }
}
```",6,6,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
39,30,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthName> ""Robert Lamar Thompson"" .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/occupation> ""Singer"" .
  }
  OPTIONAL {
    ?result <http://dbpedia.org/property/memberOfBand> ?band .
  }
}
```",4,5,5,2,3,3,3,71,0,0,3,0,0.0,0
158,23,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Nicholas II of Russia's administration country (assuming it is Russia)
  <http://dbpedia.org/resource/Nicholas_II_of_Russia> <http://dbpedia.org/property/administrationCountry> ?country .
  
  # Person native to the administration country of Nicholas II
  ?result <http://dbpedia.org/ontology/nationality> ?country .

  # Sandro Bertaggia's birthplace country
  <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?birthCountry .
  
  # Person decedent at the birthplace of Sandro Bertaggia
  ?result <http://dbpedia.org/ontology/deathPlace> ?birthCountry .
}
```",4,6,5,2,2,2,3,28,0,0,36,0,0.0,0
531,14,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?office WHERE {
  <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> dbo:leader ?leader .
  ?leader dbo:occupation dbc:Politician . # Assuming dbc:Politician is the DBpedia category for politicians
  ?leader dbo:office ?office .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
706,17,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of Ebrahim Alkazi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?actorBirthPlace ?ebrahimAlkaziBirthPlace WHERE {
  # Find the movie that is both a ""Movie"" and ""Indian""
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie108069068> . # Assuming this is the class for ""Movie""
  ?movie <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> .
  
  # Ensure Dipankar De is in the movie
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dipankar_De> .

  # Get the birthplace of an actor from this movie
  ?actor <http://dbpedia.org/ontology/birthPlace> ?actorBirthPlace .
  
  # Get Ebrahim Alkazi's birthplace
  <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?ebrahimAlkaziBirthPlace .
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
375,22,train,Give me the war of the person born as Koichirō and entity in the birth place of Yamaza Enjirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
SELECT ?person ?war ?entity WHERE {
  # Find person born as Koichirō
  ?person <http://dbpedia.org/ontology/birthName> ""Koichirō"" .
  
  # Check for war involvement
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/war> ?war .
  }
  
  # Find birthplace of Yamaza Enjirō and entities there
  <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
668,3,train,Give me the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```

Note: Replace `$pacely` with the actual DBpedia resource identifier for the individual in question.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,4,train,"Give me the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?result <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?result WHERE {
  ?result a dbo:Organization .
  ?result a dbo:SportClub .
  ?result a dbo:Team .
  ?result a dbo:SoccerClub .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Hong_Kong_C> ;
            <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Hong_Kong_C> .
  }
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
293,11,train,"Give me the party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
SELECT ?partyMember WHERE {
  ?state <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Louisiana> .
  ?state <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
  ?rulingParty <http://dbpedia.org/ontology/member> ?partyMember .
}
```

Note: This query assumes that DBpedia has structured data about the ruling party and its members for Louisiana. The actual availability of such detailed information may vary.",2,2,3,2,1,3,3,71,0,0,21486,0,0.0,0
595,61,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the politician and office holder in Chappaqua, NY
  ?resident <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?resident <http://www.wikidata.org/entity/P39> ?office . # Office holder property
  ?resident <http://www.wikidata.org/entity/P102> ?party . # Politician property

  # Step 2: Find the war that is both a disease and societal event
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q13442814> . # Assuming Q13442814 represents ""disease""
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q4907> . # Assuming Q4907 represents ""societal event""

  # Step 3: Find the commander of this war
  ?resident <http://dbpedia.org/ontology/commanderOf> ?war .

  # Step 4: Identify the owner of USS Arcadia during this war
  <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/property/owner> ?owner .
  
  # Step 5: Find the author who wrote about or related to this owner
  ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q571> . # Assuming Q571 represents ""book""
  ?work <http://dbpedia.org/property/author> ?result .
  ?work <http://dbpedia.org/ontology/about> ?owner .
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
119,59,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
SELECT ?office WHERE {
  # Find the event where Anxo Quintana was a leader
  ?event <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Anxo_Quintana> .
  
  # Identify the office held by Anxo Quintana in that event
  ?event <http://dbpedia.org/property/office> ?office .

  OPTIONAL {
    # Find a Spanish citizen from Spain
    ?person <http://www.wikidata.org/entity/P27> <http://dbpedia.org/resource/Spanish_people> .
    ?person <http://www.wikidata.org/entity/P19> <http://dbpedia.org/resource/Spain> .

    # Identify the residence of that person and link it to a country
    ?residence <http://dbpedia.org/ontology/resident> ?person .
    ?residence <http://dbpedia.org/property/country> ?country .
  }
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
609,19,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
SELECT ?youngkinBirthPlace ?awardee ?awardeeBirthPlace WHERE {
  # Birth place of Glenn Youngkin
  <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?youngkinBirthPlace .

  # Awardees related to Vince Gilligan's awards and nominations
  OPTIONAL {
    ?awardList <http://dbpedia.org/property/awardee> ?awardee .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .

    # Assuming there is a resource for Vince Gilligan's awards and nominations
    ?awardList <http://www.w3.org/2000/01/rdf-schema#label> ""List of awards and nominations received by Vince Gilligan"" .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
557,30,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?result WHERE {
  # Identify Janet Gaynor's claim to fame that is both a movie and a work
  <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?fame rdf:type dbo:Movie .
  ?fame rdf:type dbo:Work .

  # Find the professional role associated with this claim to fame
  ?result <http://dbpedia.org/property/profession> ?profession .
  
  # Ensure the same person was a producer of The Adventures of Tom Sawyer (1938 film)
  ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
23,21,train,Give me the party of Roy Barreras and entity in Colombia and party of the father of Sofía Petro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/politicalAffiliation> ?party .
  
  # Ensure the party is linked to an entity in Colombia
  OPTIONAL { 
    ?party <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Colombia> .
  }
  
  # Find Sofía Petro's father and his political affiliation
  ?sofiaPetroFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Sof%C3%ADa_Petro> .
  ?sofiaPetroFather <http://dbpedia.org/ontology/politicalAffiliation> ?party .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,12,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?author .
  
  OPTIONAL {
    ?artist <http://dbpedia.org/property/nationality> ""United Kingdom"" .
    ?artist <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/London> .
    ?artist <http://dbpedia.org/ontology/profession> ?occupation1 .
    ?artist <http://dbpedia.org/ontology/profession> ?occupation2 .
    
    FILTER (
      (str(?occupation1) = ""Artist"" || str(?occupation1) = ""Painter"") &&
      (str(?occupation2) = ""Musician"" || str(?occupation2) = ""Singer"")
    )
    
    ?artist <http://dbpedia.org/ontology/parent> ?author .
  }
}
```",3,5,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
103,25,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(?v1 = ""Actor"")
}
```",3,3,4,2,2,3,3,71,0,0,4210,0,0.0,0
119,16,train,"Give me the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
SELECT ?country WHERE {
  ?person <http://dbpedia.org/property/citizenship> <http://dbpedia.org/resource/Spain> .
  ?person <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q29> . # Q29 is the identifier for ""Spanish""
  ?person <http://dbpedia.org/ontology/residence> ?country .
  ?country a dbo:Country .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
39,24,train,Give me the band of Bob Thompson (musician) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
SELECT ?band ?professional WHERE {
  <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/member> ?band .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?professional <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
347,44,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?father WHERE {
  # Step 1: Find children of Ferdinand III and their fathers
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .
  ?father <http://dbpedia.org/ontology/parent> ?child .

  # Step 2: Find Cecilia Renata's father and his children
  ?ceciliaFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> .
  ?child2 <http://dbpedia.org/ontology/parent> ?ceciliaFather .

  # Step 3: Ensure the person was a commander in the Thirty Years' War
  ?father <http://dbpedia.org/property/commanderIn> <http://dbpedia.org/resource/Thirty_Years'_War> .
  
  # Combine conditions to find the common individual
  FILTER (?father = ?child2)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
737,17,train,"Give me the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Find parents of Archduchess Margarete Sophie of Austria
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/father> ?parent .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/mother> ?parent .
  }

  # Find children of the identified parent who are royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/RoyalFamilyMemberOfAustria108069068> . # Assuming this class represents royalty
  ?parent <http://dbpedia.org/ontology/child> ?child .

  FILTER EXISTS { 
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
943,14,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?grandfather WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Na'od> .
  ?grandfather <http://dbpedia.org/ontology/father> ?father .

  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?grandfather <http://dbpedia.org/ontology/officeHolder> ?office .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
39,52,train,Give me the professional in the alter ego of The Shadow and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/profession> ?v1 .
  }
  
  # Band of Bob Thompson (musician)
  OPTIONAL { 
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Bob_Thompson_(musician)> .
    ?result <http://dbpedia.org/property/bandMember> ?band .
  }
  
  # Professional in the profession of the producer of Coke Studio Philippines
  OPTIONAL { 
    ?producer <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Coke_Studio_Philippines> .
    ?producer <http://dbpedia.org/property/profession> ?v2 .
    ?result <http://dbpedia.org/property/profession> ?v2 .
  }
}
```",6,6,7,3,3,3,3,71,0,778,4,0.0,0.0,0
58,13,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Linda Bruckheimer"" .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
203,37,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
SELECT ?battleForce ?warForce WHERE {
  # Military force in the Battle of Cape Finisterre (1805)
  <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/ontology/belligerent> ?battleEntity .
  ?battleEntity <http://dbpedia.org/property/militaryForce> ?battleForce .

  # Military force in a war related to William Bayne
  ?war <http://dbpedia.org/ontology/war> ?event .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
  ?war <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/William_Bayne> .
  ?warEntity <http://dbpedia.org/ontology/belligerent> ?warEntity .
  ?warEntity <http://dbpedia.org/property/militaryForce> ?warForce .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
119,29,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
SELECT ?result WHERE {
  # Tenant of Santiago de Compostela
  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Santiago_de_Compostela> .
  
  # Tenant of the country where Álvaro Quirós resides
  <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/countryOfResidence> ?country .
  ?result <http://dbpedia.org/ontology/residence> ?country .

  # Office of Alberto Núñez Feijóo
  ?result <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
89,22,train,Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  ?individual <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  ?individual <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Saw_Min_Hla> .
  
  ?predecessor <http://dbpedia.org/ontology/successor> ?individual .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
419,7,train,Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?entity .
  <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/property/almaMater> ?entity .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
756,43,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?manager WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  <http://dbpedia.org/resource/SBV_Vitesse> <http://dbpedia.org/property/teamManager> ?manager .
  FILTER EXISTS { 
    ?manager <http://dbpedia.org/ontology/teamManager> <http://dbpedia.org/resource/VfL_Bochum> .
  }

  # Leader of West Germany and their country
  ?leader <http://dbpedia.org/property/chancellor> <http://dbpedia.org/resource/West_Germany> .
  ?leader <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  # Manager's birthplace is the same as leader's country
  ?manager <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER EXISTS { 
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
258,17,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/establishment> ""1955-12-02""^^xsd:date .
  
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> ; # Q82955 is the identifier for politician
           <http://dbpedia.org/property/birthName> ""Eleonora Menicucci"" ;
           <http://dbpedia.org/ontology/alumni> ?result .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
557,61,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?producer WHERE {
  # Find the producer of the claim to fame (work) of the actor of ""Johnny Doughboy""
  ?actor1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Johnny_Doughboy> .
  ?actor1 <http://dbpedia.org/property/notableWork> ?notableWork1 .
  ?notableWork1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?workType1 .
  FILTER(?workType1 != <http://dbpedia.org/class/yago/Movie104067>) # Exclude movies
  ?notableWork1 <http://dbpedia.org/ontology/producer> ?producer .

  # Find the producer of the claim to fame (movie and work) of the actor of ""High Society Blues""
  ?actor2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/High_Society_Blues> .
  ?actor2 <http://dbpedia.org/property/notableWork> ?notableWork2 .
  ?notableWork2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie104067> . # Ensure it's a movie
  ?notableWork2 <http://dbpedia.org/ontology/producer> ?producer .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
412,12,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/war> ?war .
  <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/war> ?war .

  OPTIONAL { 
    ?entity <http://www.w3.org/2000/01/rdf-schema#location> <http://dbpedia.org/resource/Athens> .
    ?entity <http://dbpedia.org/ontology/war> ?war .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
782,51,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?band WHERE {
  # Step 1: Identify band members of Eric Clapton
  ?member <http://dbpedia.org/ontology/member> ?claptonBand .
  ?claptonBand <http://dbpedia.org/property/bandMember> <http://dbpedia.org/resource/Eric_Clapton> .

  # Step 2: Find associated bands of these members
  ?band <http://dbpedia.org/ontology/member> ?member .

  # Step 3: Identify Nick Curran's persona and associated artists
  OPTIONAL {
    <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/property/birthName> ?persona .
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?persona .
    FILTER(?band = ?artist)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
159,37,train,Give me the reference to the writer of the work of George Ducas and commander in Great Turkish War.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
SELECT ?result WHERE {
  ?work <http://dbpedia.org/ontology/writer> ?result .
  ?work <http://dbpedia.org/property/author> <http://dbpedia.org/resource/George_Ducas> .

  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/commander> ?result .
    ?war <http://www.w3.org/2000/01/rdf-schema#label> ""Great Turkish War""@en .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,59,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Philip's parent who is royalty
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philip_Despot_of_Romania> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the father of this royal parent
  ?grandfather <http://dbpedia.org/ontology/father> ?parent .

  # Step 3: Identify the spouse of this grandfather
  ?result <http://dbpedia.org/ontology/spouse> ?grandfather .

  # Step 4: Identify Maria of Bytom's spouse and check if their father is royalty
  ?spouseOfMaria <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  ?royalFather <http://dbpedia.org/ontology/father> ?spouseOfMaria .
  ?royalFather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 5: Find the parent of this royal father
  ?parentOfRoyalFather <http://dbpedia.org/ontology/father> ?royalFather .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
297,5,train,"Give me the entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  ?birthPlace ?p ?entity .
}
```",2,3,3,2,1,2,2,9,36,1552,63385,0.022670025188916875,0.0005676353258384447,0.001107538956144534
213,1,train,Give me the country of Cat Country (novel).,SELECT ?result WHERE { <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?country .
}
```

If the direct property `dbo:country` is not available, we might need to explore related properties such as:
- The author's nationality.
- The setting of the novel.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
58,15,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Linda Bruckheimer"" .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .

  OPTIONAL { 
    ?film <http://dbpedia.org/resource/12_Strong> .
    ?film <http://dbpedia.org/ontology/producer> ?spouse .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
816,1,train,Give me the parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Amy_Arbus> <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
472,11,train,Give me the administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?administration WHERE {
  ?duchy <http://www.w3.org/2000/01/rdf-schema#label> ""Duchy of Schleswig""@en .
  ?mayor <http://dbpedia.org/ontology/mayor> ?duchy .
  ?mayor <http://dbpedia.org/property/administration> ?administration .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
159,50,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/show> ?tvShow .
  ?war <http://dbpedia.org/property/eventType> ""societal event"" .
  
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  
  OPTIONAL { 
    ?commander <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Jean_Baptist_Comte_d'Arco> .
  }
  
  ?ducasWork <http://dbpedia.org/property/writer> ?writer .
  ?reference <http://dbpedia.org/ontology/reference> ?writer .
  FILTER(?ducasWork = <http://dbpedia.org/resource/George_Ducas>)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
633,9,train,"Give me the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/father> ?child .
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""noble""
  }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
737,31,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?predecessor WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child <http://dbpedia.org/ontology/familyName> ?spouse .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .

  ?predecessor <http://dbpedia.org/ontology/successor> ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,34,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find children of Roger II of Sicily who are royalty
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the parent of this royal child
  ?parent <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Ensure this person is also a child of Elvira of Castile, Queen of Sicily
  ?result <http://dbpedia.org/ontology/father> ?parent .
  ?result <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
80,38,train,Give me the actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?album .
  ?album <http://dbpedia.org/ontology/starring> ?result .

  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",4,4,5,2,2,3,3,71,4,6,0,0.4,1.0,0.5714285714285715
628,6,train,Give me the birth name of Bobby Shmurda.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
943,24,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father ?alterEgo WHERE {
  <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/ontology/father> ?father .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
140,10,train,"Give me the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?rulingParty WHERE {
  <http://dbpedia.org/resource/John_McDermott_(artist)> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  
  ?deathPlace a <http://dbpedia.org/class/yago/Settlement108069068> . # Assuming Settlement is represented by this class

  ?rulingParty <http://dbpedia.org/ontology/rulingParty> ?deathPlace .
  ?rulingParty a <http://dbpedia.org/ontology/PoliticalParty> .
  ?rulingParty a <http://www.w3.org/ns/org#Organization> .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
375,4,train,"Give me the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?location WHERE {
  ?location a dbo:Settlement .
  ?location <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .
}
```",1,3,2,1,1,3,2,20,0,14,6,0.0,0.0,0
687,18,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  # Find teams associated with Juan Carlos Molina
  <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/property/team> ?team1 .
  
  # Find teams associated with Sergio Agüero
  <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> <http://dbpedia.org/property/team> ?team2 .

  # Find teams associated with Pablo Aimar
  <http://dbpedia.org/resource/Pablo_Aimar> <http://dbpedia.org/property/team> ?team3 .

  # Identify a player who has been on the same team as both Juan Carlos Molina and Sergio Agüero, and also played for Pablo Aimar's team
  ?player <http://dbpedia.org/property/team> ?commonTeam .
  
  FILTER (?commonTeam = ?team1 || ?commonTeam = ?team2)
  OPTIONAL { 
    ?player <http://dbpedia.org/property/team> ?team3 .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
103,52,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie500000001>.
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow500000001>.
  
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .

  ?actor <http://dbpedia.org/property/profession> ?profession .
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/profession> ?shatrughanProfession .
  
  FILTER(?profession = ?shatrughanProfession)
}
```",6,7,7,3,3,3,3,71,0,0,13,0,0.0,0
492,21,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film) and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?person ?deathPlace WHERE {
  # Death place of Carolyn Jones
  <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  
  UNION
  
  # Actors in Aladdin (1958 film) and their death places
  ?actor dbo:starring <http://dbpedia.org/resource/Aladdin_(1958_film)> ;
         <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  UNION

  # Death place of Reed Howes
  <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,3,train,Give me the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric_Bouraly> <http://dbpedia.org/property/occupation> ?profession .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,17,train,"Give me the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?person WHERE {
  # Get the birthday of Marcelo Sarmiento
  <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Find individuals who are both soccer players and managers
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .

  # Match the birth date with Marcelo Sarmiento's
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",2,4,3,2,1,3,3,71,5,0,0,1.0,1.0,1.0
375,2,train,Give me the war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Hashiba_Hidekatsu> dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
742,10,train,"Give me the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?result <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?region WHERE {
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> .
  ?region <http://www.w3.org/2006/vcard/ns#adrType> ?settlementType .
  FILTER(?settlementType IN (<http://dbpedia.org/resource/Settlement>, <http://dbpedia.org/resource/City>, <http://dbpedia.org/resource/Town>))
}
```",2,3,3,2,1,3,2,20,0,0,159,0,0.0,0
585,5,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/occupation> ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actress""))
}
```",1,1,2,1,1,3,2,20,0,0,19241,0,0.0,0
633,0,train,Give me the spouse of Renée of Bourbon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ren%C3%A9e_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,11,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,2,3,28,3,4,0,0.42857142857142855,1.0,0.6
595,3,train,"Give me the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
SELECT ?work WHERE {
  ?work a dbo:Book .
  ?work a dbo:WrittenWork .
  ?work dbo:author <http://dbpedia.org/resource/Hillary_Clinton> .
}
```",1,3,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
595,0,train,Give me the spouse of Hillary Clinton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,33,train,"Give me the associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/$pacely> .
  
  OPTIONAL { 
    ?writer <http://dbpedia.org/property/profession> ""Writer""@en .
    ?writer <http://dbpedia.org/ontology/musicalArtist> ?result .
    ?result <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/The_Live_Anthology> .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
943,11,train,"Give me the child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Yeshaq_I> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
399,2,train,Give me the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
816,28,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Doon Arbus and parent of Amy Arbus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
SELECT ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/work> [] .
  ?movie dbo:starring ?actor .
  ?movie dbo:starring <http://dbpedia.org/resource/Herschel_Bernardi> .

  ?actor dbo:parent <http://dbpedia.org/resource/Doon_Arbus> .
  ?actor dbo:parent <http://dbpedia.org/resource/Amy_Arbus> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,6,train,Give me the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?result . },"```sparql
SELECT ?album WHERE {
  <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?album .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
263,19,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?result WHERE {
  # Find the birthplace of William Gayner that is both a region and a country
  <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  # Ensure the birthplace is both a region and a country
  FILTER EXISTS { ?region <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Region> }
  FILTER EXISTS { ?country <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Country> }

  # Find the parent of Mary Elphinstone, Lady Elphinstone
  <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> <http://dbpedia.org/ontology/birthParent> ?result .

  # Find the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/birthParent> ?result .

  # Ensure the person is native to William Gayner's birthplace
  ?result <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
871,12,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?parent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/father> ?parent .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/A._B._C._Stanley> <http://dbpedia.org/ontology/father> ?parent .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
225,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
}
```

This query uses the `dbo:country` property to find entities where Japan is listed as the country.",1,1,2,1,1,3,2,20,0,0,8916,0,0.0,0
375,18,train,Give me the war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war1 ?war2 WHERE {
  # Wars involving Toyotomi Hidenaga
  <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/participant> ?war1 .

  # Identify the child of Toyotomi Hideyoshi
  ?child <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Toyotomi_Hideyoshi> .
  
  # Wars involving the child of Toyotomi Hideyoshi
  ?child <http://dbpedia.org/ontology/participant> ?war2 .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
159,7,train,Give me the military force of Battle of Vienna.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Battle_of_Vienna> dbo:participatedIn ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
414,2,train,Give me the award of Rainer Weiss.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/ontology/wonAward> ?award .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
198,10,train,"Give me the war of Amasa Tracy and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war ?entity WHERE {
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/war> ?war .
  
  OPTIONAL { 
    ?entity <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat .
    ?entity <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long .
    FILTER (
      ?lat >= 32.75 && ?lat <= 32.85 &&
      ?long >= -79.95 && ?long <= -79.85
    )
  }
}
```

This query assumes that Amasa Tracy's involvement in wars is directly linked via the `ontology:war` property, and entities are located using latitude and longitude within a bounding box for Charleston, South Carolina.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
871,54,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?result WHERE {
  # Parent of awardee of Commander of the Royal Victorian Order
  ?awardee <http://dbpedia.org/ontology/title> ""Commander of the Royal Victorian Order"" .
  ?awardee <http://dbpedia.org/property/parent> ?result .

  # Father of Arthur Stanley (politician)
  OPTIONAL { 
    <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/ontology/father> ?result .
  }

  # Politician and Office Holder
  ?result <http://dbpedia.org/property/politician> true .
  ?result <http://dbpedia.org/property/officeHolder> true .

  # Parental connection to Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
    ?result <http://dbpedia.org/property/parent> ?parent .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
295,7,train,"Give me the writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?work ?writer WHERE {
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Apache_Indian> .
  ?work a <http://dbpedia.org/class/yago/MusicalWork108069068> . # Assuming this is the class for Musical Work
  ?work <http://dbpedia.org/property/writer> ?writer .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
595,32,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
SELECT ?result WHERE {
  # Identify works associated with Bill Clinton that are books
  ?work <http://dbpedia.org/ontology/author> ?result .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this class represents books
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Bill_Clinton> .
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
    ?spouse <http://www.wikidata.org/entity/P39> ?office . # Office holder
  }
  
  FILTER EXISTS {
    ?work <http://dbpedia.org/ontology/title> ""An Invitation to the White House""@en .
  }
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
103,41,train,"Give me the professional in  and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Get Shatrughan Sinha's profession
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?sinhaProfession .

  # Find professionals with the same occupation as Shatrughan Sinha
  ?result <http://dbpedia.org/property/occupation> ?sinhaProfession .
  
  # Identify movies that are also television shows and starred Richard E. Grant
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> ;
         <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  
  # Ensure the movie is also a television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow100000001> .

  # Find actors in these movies
  ?movie <http://dbpedia.org/ontology/starring> ?result .
}
```",5,6,6,2,3,3,3,71,0,0,13,0,0.0,0
353,36,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  # Find the spouse of Constance of Burgundy who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Find their child
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .

  # Find the grandchild of the spouse (child's child)
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .

  # Ensure this grandchild is also a child of Roger II of Sicily
  ?grandchild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
23,2,train,Give me the party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/property/politicalParty> ?party .
}
```",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
89,1,train,Give me the spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Saw_Shwe_Khet> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
531,56,train,"Give me the office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Office of Mariano Rajoy
  ?office1 <http://dbpedia.org/ontology/holder> <http://dbpedia.org/resource/Mariano_Rajoy> .
  
  # Tenant of Alberto Ruiz-Gallardón's residence
  ?residence <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> .
  ?result <http://dbpedia.org/property/residence> ?residence .

  # Office of a leader, that is a politician
  ?office2 <http://dbpedia.org/ontology/holder> ?result .
  ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""

  # Leader of the party associated with Miguel Maura
  ?party <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Miguel_Maura> .
  ?result <http://dbpedia.org/ontology/memberOf> ?party .
  ?office3 <http://dbpedia.org/ontology/holder> ?result .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,20,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> .
  
  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }
}
```",3,4,4,2,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
39,32,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Get Sam Concepcion's profession
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/ontology/profession> ?profession .
  
  # Find individuals with the same profession as Sam Concepcion
  ?result <http://dbpedia.org/ontology/profession> ?profession .

  # Get The Shadow's alter ego
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    
    # Find individuals associated with the same alter ego profession
    ?result <http://dbpedia.org/ontology/profession> ?alterEgo .
  }
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
68,6,train,"Give me the father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/ontology/father> ?result .
  ?result <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
737,16,train,Give me the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/birthPlace> ?place .
  ?child <http://dbpedia.org/property/birthYear> ""1804""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?child <http://dbpedia.org/property/deathYear> ""1881""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?child <http://dbpedia.org/ontology/birthPlace> ?place .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)> .

  ?grandchild <http://dbpedia.org/ontology/birthPlace> ?gPlace .
  ?grandchild <http://dbpedia.org/ontology/father> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
39,29,train,Give me the professional in the alter ego of The Shadow and professional in Singer and band of Bob Thompson (musician).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?result .

  OPTIONAL { 
    <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/singer> ?result .
    <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/memberOfBand> ?result .
  }
}
```",4,4,5,2,3,3,3,71,0,0,3,0,0.0,0
871,25,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  # Identify parent of Edward Stanley, 17th Earl of Derby
  <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/birthParent> ?result .
  
  # Find a child who is a politician and related to Frederick Stanley, 16th Earl of Derby
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> ?result .
    ?child <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Politician> .
    ?child <http://dbpedia.org/ontology/sibling> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
398,1,train,Give me the player in Aleksandr Filimonov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?team .
  ?team <http://dbpedia.org/ontology/player> ?player .
}
```",1,1,2,1,1,3,2,20,0,0,17,0,0.0,0
89,44,train,"Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
SELECT ?predecessor WHERE {
  ?result <http://dbpedia.org/ontology/familyName> ?childOfShweKhet .
  ?result <http://dbpedia.org/ontology/familyName> ?childOfMinHla .

  ?predecessor <http://dbpedia.org/ontology/successor> ?result .

  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,50,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Part 1: Military force of the war involving William Bayne
  ?war a <http://dbpedia.org/ontology/War> ;
       <http://dbpedia.org/ontology/event> ?event .
  
  ?referenceToBayne <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/William_Bayne> .
  ?referenceToBayne <http://dbpedia.org/ontology/war> ?war .

  ?war <http://dbpedia.org/ontology/militaryForce> ?militaryForce1 .

  # Part 2: Military force of the event involving Robert Calder
  ?event a <http://dbpedia.org/ontology/SocialEvent>, <http://dbpedia.org/ontology/Event> ;
         <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Robert_Calder> .

  ?force <http://dbpedia.org/ontology/event> ?event .
  ?force <http://dbpedia.org/ontology/militaryForce> ?militaryForce2 .
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
531,46,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  # Find the leader of the 2003 Madrid City Council election
  ?leader <http://dbpedia.org/property/election> <http://dbpedia.org/resource/Madrid_City_Council_election,_2003> .
  ?leader <http://dbpedia.org/ontology/officelocation> ?residence .
  
  # Find the tenant of that residence
  ?residence <http://dbpedia.org/ontology/tenant> ?result .

  # Find a commander in the Central African Republic Civil War who is an office holder and politician
  OPTIONAL {
    ?commander <http://dbpedia.org/property/election> <http://dbpedia.org/resource/Central_African_Republic_Civil_War> .
    ?commander <http://dbpedia.org/ontology/officelocation> ?office .
    ?commander <http://www.wikidata.org/entity/P39> ?result . # Assuming P39 is the property for holding an office
  }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
58,3,train,Give me the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
375,7,train,Give me the war of Hashiba Hidekatsu and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/war> ?war .
  OPTIONAL { 
    ?war <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Japan> .
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
737,43,train,"Give me the child of Archduchess Margarete Sophie of Austria and child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Child of Archduchess Margarete Sophie of Austria
  ?result <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .

  # Descendant of Alexander of Württemberg (1804-1881)
  ?child1 <http://dbpedia.org/ontology/birthParent> ?result .
  ?child2 <http://dbpedia.org/ontology/birthParent> ?child1 .
  ?alexander <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> .
  ?child3 <http://dbpedia.org/ontology/birthParent> ?child2 .
  ?alexander <http://dbpedia.org/ontology/birthParent> ?child3 .

  # Predecessor of Carl, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
119,6,train,Give me the entity in Poland and war of Alexander Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/war> ?war .
  ?war <http://dbpedia.org/ontology/location> ?location .
  FILTER(CONTAINS(LCASE(STR(?location)), ""poland"") || CONTAINS(LCASE(STR(?location)), ""krakow"") || CONTAINS(LCASE(STR(?location)), ""warsaw""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
816,20,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?result ?parent WHERE {
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ""Photographer"" .
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,57,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  # Band member of Uncle Murda
  ?band <http://dbpedia.org/ontology/member> ?result .
  FILTER(STRSTARTS(LCASE(?band), ""uncle murda""))

  # Person born as the birth name of a native musical artist from Florida
  ?artist <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> ;
          <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Florida> .
  ?artist <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/property/birthName> ?birthName .

  # Native of an award, that is a region and American and a state or settlement
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/location> ?region .
    FILTER(STRSTARTS(LCASE(?award), ""coro de la pontificia universidad católica de puerto rico""))
    FILTER(STRSTARTS(LCASE(?region), ""united states"") || STRSTARTS(LCASE(?region), ""state"") || STRSTARTS(LCASE(?region), ""settlement""))
    ?person <http://dbpedia.org/ontology/nationality> ?region .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the war of Alexander Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Alexander_Suvorov> dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,2,20,0,0,28,0,0.0,0
531,52,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Office held by Miguel Maura
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/office> ?miguelOffice .
  
  # Commander's office in Central African Republic Civil War
  ?commander <http://dbpedia.org/ontology/office> ?warOffice .
  ?commander <http://dbpedia.org/property/politicalParty> ?party .
  FILTER(?warOffice = ""Commander"" && EXISTS { ?commander <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Central_African_Republic> }).
  
  # Office holder and politician
  ?result <http://dbpedia.org/ontology/office> ?miguelOffice .
  ?result <http://dbpedia.org/ontology/office> ?warOffice .
  ?result <http://dbpedia.org/property/politicalParty> ?party .

  # Tenant of the leader's residence in 2003 Madrid City Council election
  OPTIONAL {
    <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/ontology/winner> ?leader .
    ?leader <http://dbpedia.org/ontology/residence> ?residence .
    ?result <http://dbpedia.org/property/residence> ?residence .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
905,11,train,"Give me the spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
412,3,train,Who is the leader of National Party of Greece?,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/ontology/leader> ?leader .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
270,8,train,"Give me the predecessor of Ada Watson and person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> .
  
  <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  
  ?result <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER (?deathPlace = ?birthPlace)
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
119,9,train,Give me the tenant of Spain and office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT ?tenant ?office WHERE {
  # Find the tenant of Spain (e.g., President)
  ?tenant <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> .
  ?tenant <http://www.wikidata.org/entity/P39> <http://www.wikidata.org/entity/Q11696> . # Assuming Q11696 is the identifier for ""President of Spain""

  # Find Alberto Núñez Feijóo's office
  <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/occupation> ?office .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,4,train,Give me the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
293,1,train,Give me the spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
353,61,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the spouse of Constance of Burgundy who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find their child
  ?child1 <http://dbpedia.org/ontology/parent> ?spouse .

  # Step 3: Find that child's own child
  ?result <http://dbpedia.org/ontology/parent> ?child1 .

  # Step 4: Identify a reference person related to William I who is royalty and an office holder
  ?reference <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?reference <http://www.wikidata.org/entity/P39> ?office . # Office holder

  # Step 5: Find the reference's child who is royalty
  ?child2 <http://dbpedia.org/ontology/parent> ?reference .
  ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty

  # Step 6: Find that child's father
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?mother <http://dbpedia.org/ontology/parent> ?child2 .

  FILTER(?result = ?father)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
687,50,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
SELECT ?person ?team WHERE {
  # Step 1: Find person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:soccerPlayer true .
  ?person dbo:soccerManager true .

  # Step 2: Find actor who is also a soccer player and athlete, in a film by Manuel Huerga
  ?film dbo:director <http://dbpedia.org/resource/Manuel_Huerga> .
  ?actor dbo:starring ?film ;
         dbo:soccerPlayer true ;
         dbo:athlete true .

  # Step 3: Ensure the person from step 1 is a player in the actor from step 2
  ?person dbo:team ?team .
  ?actor dbo:player ?person .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
140,11,train,"Give me the party member of Republican Party (United States) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
  
  OPTIONAL { 
    ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Societal_event> . # Assuming societal events are categorized this way
    ?result <http://dbpedia.org/ontology/commander> ?war .
    ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/George_Pickett> .
  }
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
816,36,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
    ?child <http://dbpedia.org/ontology/parent> ?spouse .
    ?actor <http://dbpedia.org/ontology/parent> ?child .
  }
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
706,12,train,Give me the birthplace of Ebrahim Alkazi and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?alkaziBirthplace ?actor ?actorBirthplace WHERE {
  # Birthplace of Ebrahim Alkazi
  <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?alkaziBirthplace .

  # Actors of Akaler Shandhaney and their birthplaces
  <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/birthPlace> ?actorBirthplace .
}
```",3,3,4,2,2,3,2,20,2,13,0,0.13333333333333333,1.0,0.23529411764705882
78,19,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/The_Alans_Parsons_Project> .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Stuart_Mcbeath_Tosh> <http://dbpedia.org/property/associatedMusicalArtist> ?result .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/property/associatedMusicalArtist> ?result .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
293,15,train,Give me the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
SELECT ?landmark ?rulingParty WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""20.1168""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://dbpedia.org/property/country> ?country .
  ?country <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
198,29,train,"Give me the entity in Charleston, South Carolina and force of the awardee of Gillmore Medal and war of Amasa Tracy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
SELECT ?result WHERE {
  # Entity located in Charleston, South Carolina
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
  
  # Gillmore Medal awardee and their military force
  ?awardee <http://dbpedia.org/property/awarded> <http://dbpedia.org/resource/Gillmore_Medal> .
  ?awardee <http://dbpedia.org/ontology/militaryForce> ?force .
  
  # Amasa Tracy's war involvement
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/war> ?war .
  
  # Ensure the entity matches all criteria
  FILTER (?result = ?awardee)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
386,5,train,Give me the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . },"```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Golden_Sword_for_Bravery> dbo:recipient ?awardee .
}
```

This query assumes that the award ""Golden Sword for Bravery"" is represented in DBpedia and uses a property like `dbo:recipient` to link awardees. If the exact property or URI differs, adjustments may be necessary based on the actual structure of DBpedia.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
39,14,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Robert Lamar Thompson"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
769,12,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in Ye Jia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
SELECT ?player WHERE {
  ?manager rdf:type <http://dbpedia.org/ontology/SportsManager> .
  ?manager rdf:type <http://dbpedia.org/ontology/SoccerManager> .
  ?manager <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Hong_Kong_C_Team> .

  ?player <http://dbpedia.org/ontology/player> ?manager .
  
  OPTIONAL {
    ?yeJia rdf:type <http://dbpedia.org/ontology/SoccerTeam> ;
           <http://dbpedia.org/property/teamName> ""Ye Jia"" .
    
    ?player <http://dbpedia.org/ontology/player> ?yeJia .
  }
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
225,3,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Japan_Standard_Time> dbo:region ?region .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,55,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?profession .

  # Band of Robert Lamar Thompson, who is a musical artist
  <http://dbpedia.org/resource/Robert_Lamar_Thompson> <http://dbpedia.org/property/band> ?resultBand .
  <http://dbpedia.org/resource/Robert_Lamar_Thompson> <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musical_artist> .

  # Professional in the same field as Sam Concepcion
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/ontology/profession> ?samProfession .
  
  FILTER (?resultBand = ?result)
  FILTER (?profession = ?samProfession)
}
```",6,7,7,2,3,3,3,71,0,0,4,0,0.0,0
756,39,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. }","```sparql
SELECT ?result WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""West Germany""@en .
  ?manager <http://dbpedia.org/ontology/team> ?team .
  ?team <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?person <http://dbpedia.org/property/birthDate> ""1968-08-26""^^xsd:date .
  ?person <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Sports_manager> .
  FILTER(?manager = ?person)
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
782,34,train,Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?associatedArtist ?bandName ?realName WHERE {
  # Find associated musical artist of Nick Curran
  <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/collaboration> ?associatedArtist .
  
  # Find the band of Kim Wilson and its real name if it exists
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> ?band .
  ?band <http://www.w3.org/2000/01/rdf-schema#label> ?bandName .
  
  OPTIONAL {
    ?band <http://dbpedia.org/property/alias> ?realName .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
628,0,train,Give me the band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Uncle_Murda> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
103,55,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of Shatrughan Sinha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  ?result <http://dbpedia.org/ontology/profession> ?v1 .

  # Actor of a movie that is also a television show with Richard E. Grant
  ?tvShow <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie500000001> .
  ?tvShow <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?tvShow <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionSeries500000001> .
  ?tvShow <http://dbpedia.org/ontology/starring> ?result .

  # Professional in the profession of Shatrughan Sinha
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/ontology/profession> ?v2 .
  ?result <http://dbpedia.org/ontology/profession> ?v2 .
}
```",6,7,7,2,3,3,3,71,0,0,13,0,0.0,0
492,9,train,Give me the death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Sal_Mineo> 
    <http://dbpedia.org/resource/Carolyn_Jones>
  }
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
595,34,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?spouse WHERE {
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Hillary_Clinton> .
  FILTER (CONTAINS(LCASE(STR(?work)), ""book"") && CONTAINS(LCASE(STR(?work)), ""written work"")) .

  ?author <http://purl.org/dc/terms/creator> ?work .
  ?author <http://dbpedia.org/ontology/politician> true .
  ?author <http://dbpedia.org/ontology/officeHolder> true .
  
  OPTIONAL { 
    ?event <http://dbpedia.org/property/commander> ?author .
    FILTER (STR(?event) = ""Third Taiwan Strait Crisis"")
  }

  ?author <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,13,train,Give me the force of the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
SELECT ?awardee ?force WHERE {
  ?awardee dbo:award <http://dbpedia.org/resource/Gillmore_Medal> .
  OPTIONAL { 
    ?awardee dbo:militaryBranch ?force .
    FILTER EXISTS { ?force a <http://www.w3.org/2002/07/owl#Thing> } # Ensuring it's a valid entity
  }
}
```

This query assumes that the ""force"" could be represented by military branches or similar affiliations. If ""force"" refers to something else, such as scientific forces or other types of influence, additional properties would need to be considered.",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
293,27,train,Give me the person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Tisha_Sterling> <http://dbpedia.org/ontology/family> ?parent .
  ?parent <http://dbpedia.org/property/birthName> ?birthName .

  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
859,0,train,Give me the band member of Human Remains (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Human_Remains_(band)> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
668,28,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
SELECT ?result WHERE {
  # Identify Shaggy by his birth name and check for musician profession
  <http://dbpedia.org/resource/Shaggy_(musician)> <http://www.w3.org/2000/01/rdf-schema#label> ""Darryl Paa Kwesi Bannerman-Martin""@en .
  <http://dbpedia.org/resource/Shaggy_(musician)> <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musician> .

  # Check for association with Kojo Funds
  OPTIONAL {
    ?association <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Kojo_Funds> .
    ?association <http://www.w3.org/2000/01/rdf-schema#subject> ?result .
  }
  
  # Ensure the result is Shaggy
  FILTER(?result = <http://dbpedia.org/resource/Shaggy_(musician)>)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,57,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow
  ?alterEgo <http://dbpedia.org/ontology/profession> ?result .
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .

  # Actor of an album that is a song and musical work by T.I.
  ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/T.I.> .
  ?album <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Song104930069> . # Assuming Song is a class
  ?album <http://dbpedia.org/ontology/starring> ?result .

  # Actor of Shelby Oaks
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
628,22,train,"Give me the band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?result WHERE {
  # Find band members of Uncle Murda
  <http://dbpedia.org/resource/Uncle_Murda> <http://dbpedia.org/ontology/member> ?result .

  # Ensure the person is native to an award that fits the description
  OPTIONAL { 
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
    FILTER(CONTAINS(LCASE(?awardLabel), ""region"") && CONTAINS(LCASE(?awardLabel), ""american"") && CONTAINS(LCASE(?awardLabel), ""state"") && CONTAINS(LCASE(?awardLabel), ""settlement""))
    ?result <http://dbpedia.org/ontology/nativePlace> ?award .
  }

  # Ensure connection to Coro de la Pontificia Universidad Católica de Puerto Rico
  OPTIONAL {
    <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/ontology/member> ?result .
  }
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
472,5,train,Who is the mayor of Duchy of Schleswig?,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/ontology/mayor> ?mayor .
}
```

Note: If the direct query does not return results, it might be necessary to explore related entities or historical contexts within DBpedia.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
159,26,train,Give me the reference to the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/writer> ?v2 . }","```sparql
SELECT ?work ?writer WHERE {
  <http://dbpedia.org/resource/George_Ducas> <http://dbpedia.org/property/works> ?work .
  ?work <http://dbpedia.org/ontology/author> ?writer .
}
```",3,3,4,3,1,3,3,71,0,0,98450,0,0.0,0
159,5,train,Give me the work of George Ducas.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/George_Ducas> <http://dbpedia.org/ontology/creator> ?work .
  ?work a <http://dbpedia.org/ontology/Work> .
}
```

This query assumes that George Ducas is linked to his works via the `dbo:creator` property and that these works are classified under DBpedia's ontology for ""Work.""",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,6,train,"Give me the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence rdf:type dbo:Country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
943,52,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow and father of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  # Find commander in Siege of Mukha and their parent
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?parent <http://dbpedia.org/ontology/child> ?commander .

  # Check if the parent is royalty
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Find child of this royal parent
  ?result <http://dbpedia.org/ontology/child> ?parent .

  # Reference to alter ego of The Shadow
  OPTIONAL { 
    ?result <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/The_Shadow#Alter_Ego> .
  }

  # Confirm father of Baeda Maryam I
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,59,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
SELECT DISTINCT ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/movie> ?movie .
  ?movie <http://dbpedia.org/ontology/tvSeries> ?tvShow .

  ?actor <http://dbpedia.org/ontology/starring> ?movie .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .

  OPTIONAL {
    <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?actor2 .
    ?actor2 <http://dbpedia.org/property/profession> ""Actor"" .
    ?actor2 <http://dbpedia.org/ontology/politician> ?politician .

    FILTER(?actor = ?actor2)
  }
}
```",6,8,7,3,2,3,3,71,0,0,28,0,0.0,0
347,2,train,"Give me the child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,2,3,0.0,0.0,0
609,24,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?ceceBirthPlace ?governorBirthPlace WHERE {
  <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?ceceBirthPlace .
  
  OPTIONAL {
    ?virginiaGovernor <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Virginia> ;
                      <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
905,0,train,Give me the spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
78,17,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/ontology/writer> ?result .
  
  # Ensure the writer is also a musical artist and an artist
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (CONTAINS(LCASE(?v1), ""musical artist"") && CONTAINS(LCASE(?v1), ""artist""))

  OPTIONAL {
    <http://dbpedia.org/resource/The_Alan_Parsons_Project> <http://dbpedia.org/ontology/member> ?result .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
347,7,train,"Give me the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
871,17,train,"Who is the child, that is a politician, of the alumnus of Eton College?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Eton_College> .
  ?alumnus <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""politician""))
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
782,57,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
SELECT ?referenceToFabulousThunderbirds ?bandMemberBand ?associatedArtist WHERE {
  # Reference to The Fabulous Thunderbirds
  <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> ?referenceToFabulousThunderbirds .

  # Band of the band member born on 1945-03-30
  ?person <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^xsd:date .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?labelPerson .
  FILTER(CONTAINS(LCASE(?labelPerson), ""musical artist"")) .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMemberBand .

  # Associated musical artist of Nicholas Michael Curran
  <http://dbpedia.org/resource/Nicholas_Michael_Curran> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
288,7,train,"Give me the theme of Dikhawa and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?theme ?figure WHERE {
  <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/theme> ?theme .
  
  OPTIONAL {
    ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ""The Heart of Pakistan"" ;
                <http://www.w3.org/2000/01/rdf-schema#label> ""Paris of the East"" ;
                <http://www.w3.org/2000/01/rdf-schema#label> ""City of Gardens"" ;
                <http://www.w3.org/2000/01/rdf-schema#label> ""City of Literature"" .
    ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan> .

    ?figure <http://dbpedia.org/ontology/birthPlace> ?settlement ;
            <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
756,2,train,Give me the manager of 2020–21 SBV Vitesse season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  <http://dbpedia.org/resource/2020%E2%80%9321_SB_Vitesse_season> <http://dbpedia.org/property/teamManager> ?manager .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
531,16,train,"Give me the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?conflict <http://dbpedia.org/ontology/conflict> ?force .
  ?force <http://dbpedia.org/property/commander> ?result .
  
  ?result <http://dbpedia.org/ontology/politician> true .
  ?result <http://dbpedia.org/property/officeHolder> true .

  OPTIONAL {
    ?conflict <http://dbpedia.org/ontology/societalEvent> true .
    ?force <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> ?relation .
  }
}
```",2,6,3,2,1,3,3,71,0,0,179,0,0.0,0
531,42,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?leader <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
  ?leader <http://dbpedia.org/property/occupation> ""politician"" .
  
  OPTIONAL { 
    ?leader <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> .
  }
  
  ?result <http://dbpedia.org/ontology/office> ?office .
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/office> ?office .
  
  FILTER (?leader = ?result)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,12,train,"Give me the parent of Princess Sara bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> .
  
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> .
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/parent> ?child .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,10,train,Give me the death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?actor ?deathPlace WHERE {
  <http://dbpedia.org/resource/Color_Me_Dead> dbo:starring ?actor .
  OPTIONAL { 
    ?actor dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,2,1,2,3,28,3,2,0,0.6,1.0,0.7499999999999999
119,8,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence a <http://dbpedia.org/class/yago/Country108069465> . # Assuming yago:Country is the class for countries
}
```",2,3,3,2,1,3,2,20,0,0,108,0,0.0,0
225,8,train,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:award <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> .
  ?person dbo:nationality <http://dbpedia.org/resource/Japan> .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
943,54,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Find the alter ego of Lamont Cranston
  <http://dbpedia.org/resource/Lamont_Cranston> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  
  # Identify individuals who are children of a royal parent of Yeshaq I
  ?parent <http://dbpedia.org/ontology/child> ?result .
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Ensure these individuals are fathers of Baeda Maryam I
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,55,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
  
  OPTIONAL {
    ?residence <http://dbpedia.org/ontology/resident> ?result .
    ?residence <http://dbpedia.org/resource/Antonio_Ruiz-Gallardón> .
  }
  
  OPTIONAL {
    ?conflict <http://dbpedia.org/property/commander> ?result .
    ?conflict <http://dbpedia.org/resource/Central_African_Republic_Civil_War_(2012–present)> .
  }

  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/OfficeHolder108069068> .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
905,53,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
  ?grandChild <http://dbpedia.org/ontology/parent> ?child .
  ?grandChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
  
  OPTIONAL {
    ?philipFather <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
    ?philipFather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/spouse> ?philipFather .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
119,38,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find Álvaro Quirós's country of residence
  <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/nationality> ?country .
  
  # Identify tenants of this country (assuming a property for residence)
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/residence> ?country .
  }
  
  # Check if the same entity is involved in the administration of the Spanish Socialist Workers' Party
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  }
}
```",4,6,5,2,2,3,3,71,0,0,23,0,0.0,0
103,12,train,Give me the professional in  and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/occupation> ""Actor""@en .
  ?result <http://dbpedia.org/property/occupation> ?v0 .
}
```",2,2,3,1,2,3,3,71,4210,17370,0,0.19508804448563485,1.0,0.32648313299728576
293,46,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/1_000_Dollars_a_Minute> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/spouse> ?spouse .

  OPTIONAL { 
    ?spouse <http://dbpedia.org/property/memberOf> ?party .
  }

  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#elevation> ""20.1168""^^xsd:float .
  ?location <http://dbpedia.org/ontology/location> ?landmark .
  ?location <http://dbpedia.org/ontology/rulingParty> ?party .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
78,4,train,"Give me the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> dbo:writer ?result .
  ?result dbo:occupation ?v1 .
  FILTER (
    EXISTS { ?result dbo:occupation <http://dbpedia.org/ontology/MusicalArtist> } &&
    EXISTS { ?result dbo:occupation <http://dbpedia.org/ontology/Artist> }
  )
}
```",1,3,2,1,1,2,3,28,0,0,13,0,0.0,0
782,1,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> ?band .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
249,8,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of Jamshedpur.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
SELECT ?result WHERE {
  # Find Shobhna Samarth's birthplace that is a country
  <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Find individuals native to this country and Jamshedpur
  ?result <http://dbpedia.org/property/nationality> ?birthPlace .
  ?result <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Jamshedpur> .
}
```",3,4,4,2,2,2,2,9,0,0,22,0,0.0,0
361,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# The SPARQL query cannot be constructed due to insufficient information.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
103,40,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
SELECT ?result WHERE {
  ?show <http://dbpedia.org/ontology/movie> ?movie .
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  
  ?show <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/profession> ""Actor"" .

  FILTER (STRSTARTS(STR(?movie), STR(?show))) # Ensures the movie is also a television show
}
```",5,6,6,3,3,3,3,71,0,0,9,0,0.0,0
159,60,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?successor WHERE {
  # Michał Kazimierz Pac's military involvement
  ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Micha%C5%82_Kazimierz_Pac> .
  ?conflict a <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Assuming this class represents military conflicts

  # Successor who is also a politician and office holder
  ?successor <http://dbpedia.org/ontology/successor> ?pacCommanderRole .
  ?successor <http://dbpedia.org/property/politicalParty> ?party .
  ?successor <http://dbpedia.org/ontology/officeHolder> ?office .

  # Commander in a war that is both a television show and societal event
  ?war <http://dbpedia.org/ontology/commander> ?successor .
  ?war a <http://dbpedia.org/class/yago/SocietalEvent108069068> . # Assuming this class represents societal events
  ?war a <http://dbpedia.org/class/yago/TelevisionShow108069068> . # Assuming this class represents television shows

  # Link to Battle of Vienna's military force
  ?battleOfVienna <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?war <http://dbpedia.org/property/militaryForce> ?militaryForce .

  FILTER(?conflict != ?war) # Ensure it's a different event
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
782,18,train,Give me the band of Kim Wilson and associated musical artist of Nick Curran and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
SELECT ?band WHERE {
  # Kim Wilson is a member of the band
  <http://dbpedia.org/resource/Kim_Wilson> <http://dbpedia.org/ontology/member> ?band .
  
  # Nick Curran is associated with the same band
  OPTIONAL { 
    <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/member> ?band .
  }
  
  # The band has a reference to The Fabulous Thunderbirds
  OPTIONAL {
    ?band <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
78,12,train,Give me the associated musical artist of Stuart Tosh and band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/property/associatedMusicalArtist> ?result .
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/The_Alvin_Parsons_Project> .
  <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/property/associatedMusicalArtist> ?result .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
943,53,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandfather WHERE {
  # Step 1: Identify Na'od's father and grandfather
  <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/father> ?grandfather .

  # Step 2: Ensure the grandfather is royalty and an office holder
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?grandfather <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 3: Identify the commander in Siege of Mukha and their parent
  <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Commander is royalty

  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/father> ?parentCommander .
    ?parentCommander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Parent is royalty
    ?parentCommander <http://dbpedia.org/ontology/father> ?child .
  }

  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/mother> ?parentCommander .
    ?parentCommander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Parent is royalty
    ?parentCommander <http://dbpedia.org/ontology/father> ?child .
  }

  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/mother> ?parentCommander .
    ?parentCommander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Parent is royalty
    ?parentCommander <http://dbpedia.org/ontology/mother> ?child .
  }

  # Step 4: Ensure the identified person is a reference for Na'od
  OPTIONAL { 
    ?grandfather <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Na'od> .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,0,train,Give me the band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Mudvayne> dbo:member ?bandMember .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
119,2,train,"Give me the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . },"```sparql
SELECT ?result WHERE {
  ?result a dbo:TelevisionShow .
  ?result a dbo:MilitaryConflict .
  ?result <http://dbpedia.org/ontology/relatedTo> <http://dbpedia.org/resource/Maria_I_of_Portugal> .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
353,51,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify children of William I of Sicily who are royalty
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_I_of_Sicily> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Identify father of this royal child
  ?father <http://dbpedia.org/ontology/father> ?child .

  # Step 3: Verify spouse condition with Constance of Burgundy
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    ?grandchild <http://dbpedia.org/ontology/father> ?spouse .
    FILTER (?grandchild = ?child)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
737,3,train,"Give me the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?spouse .
  OPTIONAL { 
    ?spouse rdf:type <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
628,45,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as Ackquille Jean Pollard and band member of Uncle Murda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?native WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ackquille Jean Pollard"" .
  ?person <http://dbpedia.org/property/memberOfBand> <http://dbpedia.org/resource/Uncle_Murda> .
  ?award <http://dbpedia.org/ontology/receiver> ?person ;
         <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/New_York_(state)> .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
  
  FILTER(CONTAINS(LCASE(?awardLabel), ""region"") && CONTAINS(LCASE(?awardLabel), ""american"") &&
         CONTAINS(LCASE(?awardLabel), ""state"") && CONTAINS(LCASE(?awardLabel), ""settlement""))
  
  ?award <http://dbpedia.org/ontology/native> ?native .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
293,24,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/spouse> ?spouse .

  FILTER (?spouse = <http://dbpedia.org/resource/Harriette_Arlene_Lake>)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,57,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
SELECT ?calderMilitaryForce ?bayneMilitaryForce ?campaignCommander WHERE {
  # Military force involved in Robert Calder's societal event
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Robert_Calder> .
  ?event rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  ?event rdf:type <http://www.w3.org/2002/07/owl#Thing> . # Assuming this is a general event type
  ?event <http://dbpedia.org/property/militaryForce> ?calderMilitaryForce .

  # Military force involved in William Bayne's military conflict
  ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/William_Bayne> .
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Assuming this is a specific type for military conflicts
  ?war rdf:type <http://www.w3.org/2002/07/owl#Thing> . # General event type
  ?war <http://dbpedia.org/property/militaryForce> ?bayneMilitaryForce .

  # Commander in the French campaign in Egypt and Syria
  <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?campaignCommander .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,57,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Find films directed by Manuel Huerga
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  
  # Identify actors in those films who are also soccer players and athletes
  ?film <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/profession> ?v1 .
  FILTER (CONTAINS(LCASE(?v1), ""soccer player"") && CONTAINS(LCASE(?v1), ""athlete""))
  
  # Check if they have played with Juan Carlos Molina
  OPTIONAL { 
    ?team <http://dbpedia.org/ontology/player> ?result .
    ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> .
  }
  
  # Ensure they are part of the team of a person born on November 3, 1979
  OPTIONAL {
    ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:1979_births> ;
            <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://dbpedia.org/property/profession> ?v2 .
    FILTER (CONTAINS(LCASE(?v2), ""soccer player"") && CONTAINS(LCASE(?v2), ""manager""))
    
    ?team <http://dbpedia.org/ontology/player> ?result .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
628,28,train,"Give me the person born as Ackquille Jean Pollard and native of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard"" .
  ?person <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Florida> .
  
  ?band <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Bobby_Shmurda> .
  ?result <http://dbpedia.org/ontology/memberOfBand> ?band .

  FILTER(?person = ?result)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
628,43,train,"Give me the band member of Uncle Murda and native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?result WHERE {
  # Find band members of Uncle Murda
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Uncle_Murda> .
  
  # Ensure they are native to Florida
  ?native <http://dbpedia.org/property/nationality> ""United States"" .
  ?native <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> .

  # Match birth name of the native with the band member's birth name
  ?member <http://dbpedia.org/ontology/birthName> ?birthName .
  ?native <http://dbpedia.org/ontology/birthName> ?birthName .

  # Ensure they are a musical artist
  ?result = ?member .
  ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q215380> . # Q215380 is the identifier for ""musician""
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,20,train,Give me the actor of Rustlers' Rhapsody and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ""Actor""@en .

  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/ontology/profession> ?v1 .
  }
}
```",4,4,5,2,3,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
723,8,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/member> ?member .
  
  OPTIONAL {
    ?associatedArtist <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?member .
    ?associatedArtist a <http://dbpedia.org/class/yago/MusicalArtist108069068> ; # Assuming this class represents Musical Artists
                     a <http://dbpedia.org/class/yago/Organisation100000001> . # Assuming this class represents Organizations
  }
}
```",2,3,3,2,1,3,2,20,0,0,89,0,0.0,0
80,20,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL {
    ?album <http://dbpedia.org/property/song> <http://dbpedia.org/resource/What_You_Know_(T.I._song)> .
    ?album <http://dbpedia.org/ontology/performer> ?actor .
  }
}
```",3,3,4,2,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
668,2,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,57,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/commander> ?result .
  ?war <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:Television_shows> .
  ?war <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:Societal_events> .

  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .
  
  OPTIONAL {
    ?ducas_work <http://dbpedia.org/property/writer> ?writer .
    ?reference <http://dbpedia.org/ontology/reference> ?writer .
    ?result <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
412,8,train,Give me the war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://dbpedia.org/property/war> ?war .
}
```",2,2,3,2,1,2,3,28,0,0,13,0,0.0,0
871,39,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  # Parent of Edward Stanley, 17th Earl of Derby
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  
  # Child who is a politician and an alumnus of Eton College
  ?child <http://dbpedia.org/property/politician> true .
  ?child <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Eton_College> .
  
  # The parent identified is also the father of this child
  ?parent <http://dbpedia.org/ontology/father> ?child .

  BIND(?parent AS ?result)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
58,1,train,Give me the producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?producer .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
87,4,train,Who is the awardee of List of awards and nominations received by Janusz Kamiński?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kami%C5%84ski> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?award .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
737,41,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
SELECT ?result WHERE {
  # Find the child of the child of Duke Philipp of Württemberg
  ?grandchild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
  ?child <http://dbpedia.org/ontology/parent> ?grandchild .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  ?philippChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
  
  # Find the predecessor of this child
  ?predecessor <http://dbpedia.org/ontology/successor> ?philippChild .

  # Ensure the result is also a child of Archduchess Margarete Sophie of Austria
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  
  # Combine conditions to find the correct individual
  FILTER (?child = ?predecessor && ?child = ?result)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
203,52,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Find the war associated with The Triple X's
  ?war <http://dbpedia.org/ontology/event> _:a .
  ?war <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/The_Triple_X%27s> .
  
  # Identify commanders of this war
  ?war <http://dbpedia.org/property/commander> ?result .

  # Find the military force in Battle of Cape Finisterre (1805)
  <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/ontology/militaryForce> ?force1 .
  
  # Identify commanders of this battle
  ?force1 <http://dbpedia.org/property/commander> ?result .

  # Find the war associated with William Bayne (Royal Navy officer)
  ?bayneWar <http://dbpedia.org/ontology/event> _:b .
  ?bayneWar <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .

  # Identify the military force in this war
  ?bayneWar <http://dbpedia.org/ontology/militaryForce> ?force2 .
  
  # Ensure the commander is the same for all these forces
  ?force2 <http://dbpedia.org/property/commander> ?result .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,34,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?person <http://www.wikidata.org/entity/P569> ?birthDate .
  ?martyPollio <http://www.wikidata.org/entity/P569> ?birthDate .
  FILTER(?martyPollio = <http://dbpedia.org/resource/Marty_Polio>) .

  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q1930183> . # Assuming Q1930183 is the identifier for ""athlete""

  OPTIONAL {
    ?pabloAimar <http://dbpedia.org/ontology/teamMember> ?team .
    ?result <http://dbpedia.org/ontology/teamMember> ?team .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Who is the citizen, that is Spanish, of Spain?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:country <http://dbpedia.org/resource/Spain> .
  ?person dbo:nationality <http://dbpedia.org/resource/Spanish_people> .
}
```",1,2,2,1,1,3,3,71,0,0,1550,0,0.0,0
816,60,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?movie ?actor WHERE {
  # Find the decedent at Los Angeles who is also a parent of the child of Mariclare Costello's spouse
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> .
  
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  ?decedent <http://dbpedia.org/ontology/parent> ?child .

  # Ensure the decedent is an actor in a movie classified as a work
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie5005> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(?actor = ?decedent)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,46,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Parent of an awardee associated with Rodney Lees
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?awardee <http://dbpedia.org/ontology/parent> ?result .
  FILTER EXISTS { 
    ?award <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Rodney_Lees> .
  }

  # Parent of a child of Frederick Stanley, 16th Earl of Derby
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
    ?child <http://dbpedia.org/ontology/parent> ?result .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
361,8,train,Give me the professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric_Bouraly> <http://dbpedia.org/property/occupation> ?profession .
  ?person <http://dbpedia.org/property/occupation> ?profession .
  FILTER(?person != <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric_Bouraly>)
}
```",2,2,3,2,1,2,3,28,0,0,21580,0,0.0,0
80,35,train,Give me the actor of the movie with  and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
SELECT ?result WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  ?movie <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/The_Shadow> .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",4,4,5,2,2,3,3,71,0,0,7802,0,0.0,0
398,6,train,Give me the figure known as Наши парни / Nashi parni and player in Aleksandr Filimonov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Na%C5%A1i_parni> <http://dbpedia.org/ontology/subject> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Aleksandr_Filimonov> .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,32,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
SELECT DISTINCT ?birthPlace WHERE {
  # Part 1: Birth place of the governor of Virginia
  ?governor <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Virginia> .
  ?governor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> . # Assuming Politician class
  ?governor <http://dbpedia.org/property/birthPlace> ?birthPlace .

  UNION

  # Part 2: Birth place of an awardee related to Vince Gilligan's awards
  ?awardee <http://dbpedia.org/ontology/nominee> ?award .
  ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Vince_Gilligan> .
  ?awardee <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,4,train,"Give me the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
871,55,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Parent of an awardee of the Commander of the Royal Victorian Order
  ?awardee <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  ?parent <http://dbpedia.org/ontology/child> ?awardee .

  # Parent of a child of Frederick Stanley, 16th Earl of Derby
  ?frederickStanley <http://dbpedia.org/property/honorificPrefix> ""Frederick Stanley, 16th Earl of Derby""@en .
  ?parent2 <http://dbpedia.org/ontology/child> ?child .
  ?frederickStanley <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .

  # Ensure the parent is the same individual
  FILTER (?parent = ?parent2)

  # The parent must be a father and a politician
  ?result <http://dbpedia.org/property/gender> ""male"" .
  ?result <http://dbpedia.org/ontology/spouse> ?spouse .
  ?result <http://dbpedia.org/ontology/child> ?child .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""politician""))

  # Ensure the result is the same as the parent
  FILTER (?parent = ?result)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
595,43,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  # Commander in Third Taiwan Strait Crisis
  ?event <http://dbpedia.org/property/commander> ?result .
  FILTER(?event = <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis>) .

  # Author of a written work and book
  ?work <http://dbpedia.org/ontology/author> ?result .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> . # Written work
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Book> . # Book

  # Resident politician and office holder in Chappaqua, New York
  ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> . # Politician
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/OfficeHolder> . # Office holder

  # Spouse of Hillary Clinton
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
347,0,train,Give me the commander in Thirty Years' War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,42,0,0,1.0,1.0,1.0
203,13,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?conflict ?militaryForce WHERE {
  ?conflict a <http://dbpedia.org/ontology/MilitaryConflict> ;
            a <http://dbpedia.org/ontology/Event> .
  
  ?conflict <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .

  OPTIONAL {
    ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
}
```",2,4,3,2,1,3,3,71,0,0,529,0,0.0,0
151,6,train,Give me the reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?award ?reference WHERE {
  <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> dbo:award ?award .
  OPTIONAL { 
    ?award dbo:reference ?reference .
  }
}
```",2,2,3,2,1,2,2,9,2,2,98448,0.5,2.031488065007618e-05,4.062811058971702e-05
399,0,train,Give me the band member of Emilia (Bulgarian singer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
905,9,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
39,3,train,Who is the producer of Coke Studio Philippines?,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
119,17,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź and war of Alexander Suvorov.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT DISTINCT ?result WHERE {
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Łódź> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/PolishPeople> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Athlete> .
  
  ?person <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Q6256> .

  <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/war> ?war .
  ?residence <http://dbpedia.org/property/location> ?war .

  BIND(?residence AS ?result)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
816,10,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Doon_Arbus> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,51,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?leaderOffice ?commanderOffice WHERE {
  # Part 1: Office of the leader of Miguel Maura's party
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/member> ?party .
  ?party <http://dbpedia.org/ontology/partyLeader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
  ?leader <http://dbpedia.org/property/office> ?leaderOffice .

  # Part 2: Office of the commander in Central African Republic Civil War
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
  ?commander <http://dbpedia.org/property/conflict> <http://dbpedia.org/resource/Central_African_Republic_Civil_War_(2012–present)> .
  ?commander <http://dbpedia.org/ontology/officeHolder> ?officeHolderRole .
  ?commander <http://dbpedia.org/property/office> ?commanderOffice .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
816,34,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?parent .
  
  ?movie <http://dbpedia.org/ontology/starring> ?parent .
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/starring> ?movie .
    ?actor <http://dbpedia.org/property/deathPlace> ""Los Angeles"" .
  }
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
609,53,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  # Vince Gilligan's birthplace
  OPTIONAL { 
    <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(<http://dbpedia.org/resource/Vince_Gilligan> AS ?person)
  }
  
  # Cece Bell's birthplace (author of El Deafo)
  OPTIONAL { 
    <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(<http://dbpedia.org/resource/Cece_Bell> AS ?person)
  }
  
  # Glenn Youngkin's birthplace
  OPTIONAL { 
    <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(<http://dbpedia.org/resource/Glenn_Youngkin> AS ?person)
  }
}
```",6,6,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
293,42,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Roger_Pryor_(actor)> .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/politicalParty> ?party .
    FILTER(?party = ""Ruling Party in Central, Louisiana"") # Placeholder for actual party URI
  }
  
  ?result <http://dbpedia.org/ontology/birthName> ""Ann Sothern"" .
}
```

Note: The placeholder `""Ruling Party in Central, Louisiana""` should be replaced with the correct URI or identifier for the ruling political party in that region if available in DBpedia.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
143,7,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110769069>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108936068>.
  ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro>.
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
531,35,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
SELECT ?result WHERE {
  OPTIONAL { 
    ?residence <http://dbpedia.org/ontology/resident> <http://dbpedia.org/resource/A._Ruiz-Gallardón> .
    ?residence <http://dbpedia.org/ontology/tenant> ?result .
  }
  
  OPTIONAL {
    ?party <http://www.wikidata.org/entity/P102> ?leader .
    ?party <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
    ?leader <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
    ?leader <http://dbpedia.org/property/office> ?result .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
668,15,train,Who is the person born as the birth name of $pacely?,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""$pacely"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
609,45,train,"Give me the birth place of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?gilliganBirthPlace ?authorBirthPlace ?youngkinBirthPlace WHERE {
  # Birthplace of Vince Gilligan
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?gilliganBirthPlace .

  # Author of El Deafo and their birthplace if American
  OPTIONAL {
    <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?elDeafoAuthor .
    ?elDeafoAuthor <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q30> . # Assuming Q30 is the identifier for ""United States""
    ?elDeafoAuthor <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .
  }

  # Birthplace of Glenn Youngkin
  <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?youngkinBirthPlace .
}
```",5,6,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
140,2,train,Give me the military force of Pickett's Charge.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Pickett%27s_Charge> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
585,16,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in Actress.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?award <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Settlement> .
  ?award <http://dbpedia.org/property/nativeOf> ?result .

  OPTIONAL {
    ?coro <http://dbpedia.org/ontology/location> ?location .
    FILTER (?location = ?award) 
  }

  ?parent <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Actress> .
  ?parent <http://dbpedia.org/ontology/child> ?result .
}
```",4,6,5,2,2,3,2,20,0,0,10,0,0.0,0
158,8,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?decedent WHERE {
  <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace a <http://dbpedia.org/class/yago/Country108069465> . # Assuming the birthplace is categorized as a country
  ?decedent <http://dbpedia.org/property/deathPlace> ?birthPlace .
}
```",2,3,3,2,1,2,3,28,0,0,906,0,0.0,0
347,41,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/event> ?societalEvent .
  ?societalEvent a <http://dbpedia.org/class/yago/SocialEvent108069068> . # Assuming this class represents societal events
  ?war <http://dbpedia.org/property/show> ?tvShow . # Hypothetical property for TV show linkage

  ?result <http://dbpedia.org/ontology/commanderOfMilitaryUnit> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .

  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> ?result .
    ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
742,15,train,Give me the birthplace of Reneta Kamberova and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
SELECT ?renetaBirthplace ?alumnusBirthplace WHERE {
  <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?renetaBirthplace .
  
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Plovdiv_University_Paisius_of_Hilendar> .
    ?alumnus <http://dbpedia.org/ontology/birthPlace> ?alumnusBirthplace .
  }
}
```",4,4,5,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
246,10,train,"Give me the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Princess_Muna_al-Hussein> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?grandchild <http://dbpedia.org/ontology/father> ?parent .
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Ensuring grandchild is royalty
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
513,2,train,Give me the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/George_Hamilton_Cameron> dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
595,14,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""disease"") && CONTAINS(LCASE(?label), ""societal event""))
  
  ?war <http://dbpedia.org/ontology/war> ?relatedWar .
  ?relatedWar <http://dbpedia.org/property/commander> ?result .
  OPTIONAL { 
    ?relatedWar <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States_Navy> .
  }
}
```",2,4,3,2,1,3,3,71,0,0,18,0,0.0,0
609,38,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
SELECT ?authorBirthPlace ?governorBirthPlace WHERE {
  # Birth place of the author of El Deafo
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/ontology/birthPlace> ?authorBirthPlace .

  # Birth place of the governor of Virginia, ensuring they are a politician
  OPTIONAL {
    <http://dbpedia.org/resource/Virginia/Governor> <http://dbpedia.org/ontology/currentIncumbent> ?governor .
    ?governor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Q82955 is the identifier for ""politician""
    ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .
  }
}
```",4,5,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
742,14,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> .
  ?settlement <http://dbpedia.org/ontology/location> ?region .
  ?person <http://dbpedia.org/property/residence> ?settlement .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,4,4,3,1,3,2,20,5,9,137,0.35714285714285715,0.035211267605633804,0.06410256410256411
531,58,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Part 1: Office of Commander in Central African Republic Civil War
  ?commander <http://dbpedia.org/ontology/politicalParty> ?party .
  ?commander <http://dbpedia.org/property/officeHolder> ""Commander"" .
  ?commander <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Central_African_Republic> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .

  # Part 2: Tenant of Madrid
  OPTIONAL {
    ?tenant <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Madrid> .
    FILTER(?commander = ?tenant)
  }

  # Part 3: Office of Leader in a Political Party
  ?leader <http://dbpedia.org/property/politicalPartyLeader> ?party .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .

  # Part 4: Political Party of Miguel Maura
  ?miguelParty <http://dbpedia.org/ontology/politicalAffiliation> <http://dbpedia.org/resource/Miguel_Maura> .
  FILTER(?party = ?miguelParty)

  # Combine results to find the intersection
  BIND(CONCAT(""Office: "", STR(?commander), "" - Leader of Party: "", STR(?leader)) AS ?result)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,29,train,"Give me the team of Pablo Aimar and player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Team of Pablo Aimar
  <http://dbpedia.org/resource/Pablo_Aimar> <http://dbpedia.org/ontology/team> ?team .
  
  # Player in Juan Carlos Molina (footballer)
  ?player <http://dbpedia.org/property/player> <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> .

  # Actor of All or Nothing: Manchester City who is a soccer player and an athlete
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> .
    ?actor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> . # Soccer player
    ?actor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q193018> . # Athlete
  }

  # Combine conditions to find the result
  FILTER (?team = ?player && ?player = ?actor)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
782,41,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
SELECT ?result WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/musicalArtist> ?result .
  }
  
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://dbpedia.org/property/realName> ?v1 .
  }

  OPTIONAL {
    ?member <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Eric_Clapton> .
    ?member <http://dbpedia.org/ontology/memberOfBand> ?result .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
756,28,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/West_Germany> .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/VfL_Bochum_in_the_2007%E2%80%9308_season> <http://dbpedia.org/property/manager> ?result .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/SBV_Vitesse_in_the_2020%E2%80%9321_season> <http://dbpedia.org/property/manager> ?result .
  }
}
```",4,7,5,2,3,3,3,71,0,11,1,0.0,0.0,0
158,19,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland and native of Russian Empire.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  
  ?result <http://dbpedia.org/ontology/deathPlace> ?birthplace .
  ?result <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> .
  ?result <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Russian_Empire> .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
159,3,train,"Give me the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?force WHERE {
  ?force a dbo:MilitaryConflict .
  ?force a dbo:Event .
  ?force <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Micha%C5%82_Kazimierz_Pac> .
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
706,13,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
SELECT ?awardee ?birthplace WHERE {
  ?awardee <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> .
  ?awardee <http://dbpedia.org/property/birthPlace> ?birthplace .
}
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
19,1,train,Give me the spouse of Carrie Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Carrie_Johnson> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
198,25,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  # Find the birthplace of Henry Clay Lewis that is a settlement and American
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .

  # Find the force associated with Quincy Adams Gillmore
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/militaryService> ?force .
  
  # Ensure the entity is both the birthplace and the force
  FILTER (?birthPlace = ?result && ?force = ?result)
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
293,4,train,"Give me the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
SELECT ?governingBody ?rulingParty WHERE {
  <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/ontology/administrativeUnit> ?governingBody .
  ?governingBody <http://dbpedia.org/ontology/governingParty> ?rulingParty .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
412,13,train,Give me the war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?war WHERE {
  ?leader <http://dbpedia.org/ontology/partyLeader> <http://dbpedia.org/resource/National_Party_of_Greece> .
  ?leader <http://dbpedia.org/property/war> ?war .
  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Athens> .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
859,16,train,"Give me the associated musical artist of the associated musical artist of James Plotkin and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find associated musical artists of James Plotkin
  ?artist <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/James_Plotkin> .
  
  # Step 2: From these artists, find band members of another entity
  ?artist <http://dbpedia.org/ontology/member> ?band .

  # Step 3: Ensure the band is classified as a band, group, and organization
  ?band <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Band> .
  ?band <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Musical_group> .
  ?band <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Organisation> .

  # Step 4: Ensure the band is associated with Burnt by the Sun
  ?band <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> .
  
  BIND(?band AS ?result)
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
816,14,train,Give me the parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT DISTINCT ?parent WHERE {
  ?child dbo:parent <http://dbpedia.org/resource/Allan_Arbus> .
  ?child dbo:parent ?parent .
}
```

This query will return distinct parents of any children that Allan Arbus has, effectively giving us the grandparents from Allan Arbus's perspective.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
756,25,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/West_Germany> .
  ?team <http://dbpedia.org/property/teamManager> ?result .
  ?team <http://dbpedia.org/ontology/sportsTeamSeason> ?season .
  ?season <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  
  OPTIONAL {
    ?letsch <http://dbpedia.org/property/teamManager> ?team .
    FILTER(?letsch = <http://dbpedia.org/resource/Thomas_Letsch>)
  }
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
23,23,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?partyBarreras ?partyFather WHERE {
  # Part 1: Party of Roy Leonardo Barreras Montealegre
  <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  OPTIONAL { 
    <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> <http://dbpedia.org/ontology/politicalParty> ?partyBarreras .
  }

  # Part 2: Party of the father of Sofía Petro
  <http://dbpedia.org/resource/Sof%C3%ADa_Petro> <http://dbpedia.org/ontology/father> ?fatherPetro .
  OPTIONAL { 
    ?fatherPetro <http://dbpedia.org/ontology/politicalParty> ?partyFather .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
293,21,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake"" .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Democratic_Party_(United_States)> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,6,train,"Give me the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict .
  ?war a dbo:Event .
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
159,61,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/war> ?event .
  ?war <http://dbpedia.org/ontology/tvSeries> ?tvShow .
  ?war <http://dbpedia.org/property/societalEvent> ?societyEvent .

  ?commander <http://dbpedia.org/ontology/commanderOfMilitaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/war> <http://dbpedia.org/resource/Battle_of_Vienna> .

  OPTIONAL {
    ?reference <http://dbpedia.org/property/referenceTo> ?writer .
    ?writer <http://dbpedia.org/ontology/authorOf> <http://dbpedia.org/resource/George_Ducas> .
    ?commander <http://dbpedia.org/ontology/referencedBy> ?reference .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
19,6,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Caroline_Louise_Bevan_Symonds> dbo:birthName ""Caroline Louise Bevan Symonds"" .
  <http://dbpedia.org/resource/Caroline_Louise_Bevan_Symonds> dbo:spouse ?spouse .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
668,50,train,"Give me the person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joey B"" .
  
  ?anthology <http://dbpedia.org/resource/The_Live_Anthology> .
  ?anthology <http://dbpedia.org/property/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/profession> ?profession .

  ?result <http://dbpedia.org/ontology/profession> ?profession .
  
  FILTER EXISTS { 
    ?result <http://dbpedia.org/ontology/occupation> ?v1 .
    VALUES ?v1 { ""musician"" ""singer"" ""composer"" } # Assuming these are relevant terms for a musical artist
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
871,14,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/property/politician> ?v1 .
  ?child <http://dbpedia.org/ontology/father> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
361,12,train,Give me the professional in  and actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Rustlers'_Rhapsody> dbo:starring ?actor .
  ?actor dbo:occupation ?v1 .
  FILTER (CONTAINS(LCASE(?v1), ""actor""))
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
151,8,train,Give me the entity in Ottoman Empire and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> .
  OPTIONAL { 
    <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/award> ?result .
  }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
557,32,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?alterEgo <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  ?result <http://dbpedia.org/ontology/profession> ?alterEgo .

  <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/claimToFame> ?work .
  ?work <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q13442814> . # Assuming Q13442814 is the identifier for ""work""
  
  ?result <http://dbpedia.org/ontology/producer> ?work .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,2,train,Give me the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Пловдивски_университет_„Паисий_Хилендарски“> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
297,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> .
}
```",1,1,2,1,1,2,2,9,1307,11701,62114,0.10047662976629766,0.020608315857523533,0.034201677373771736
143,5,train,Give me the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
531,49,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Find the political party of Miguel Maura
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/member> ?party .
  
  # Identify leaders who are politicians of that party
  ?leader <http://dbpedia.org/ontology/politicalParty> ?party ;
          <http://dbpedia.org/property/office> ?result ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108930068> .
  
  # Check if the leader was a tenant of Alberto Ruiz-Gallardón's residence
  OPTIONAL {
    ?residence <http://dbpedia.org/ontology/resident> <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> ;
               <http://dbpedia.org/ontology/tenant> ?leader .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
742,17,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of Ekaterina Zaharieva.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?birthplace WHERE {
  # Find the birthplace of Ekaterina Zaharieva
  <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/property/birthPlace> ?birthplace .

  # Ensure this place is a settlement in a region observing Eastern European Time
  ?region <http://www.w3.org/2006/time#during> ?eet .
  ?settlement <http://dbpedia.org/ontology/location> ?region .
  ?settlement <http://www.w3.org/2002/07/owl#sameAs> ?birthplace .

  # Define Eastern European Time
  BIND(IRI(""http://dbpedia.org/resource/Eastern_European_Time"") AS ?eet)
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
103,11,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?result WHERE {
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TVEpisode104069>.
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?show <http://dbpedia.org/ontology/starring> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,53,0,0.0,0
87,12,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result .
  <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL {
    ?result <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> .
  }
}
```",3,3,4,1,3,2,3,28,1,0,0,1.0,1.0,1.0
39,41,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Professional in the profession of Sam Concepcion
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/profession> ?profession .
  
  # Find individuals with the same profession as Sam Concepcion
  ?result <http://dbpedia.org/property/profession> ?profession .

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/profession> ?v1 .
  }

  # Band member of Bob Thompson (musician)
  OPTIONAL {
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Bob_Thompson_(musician)> .
    ?result <http://dbpedia.org/ontology/member> ?band .
  }
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
198,54,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?force ?entityInCharleston ?war WHERE {
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/militaryBranch> ?force .
  
  OPTIONAL { 
    ?gillmoreEntity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
    BIND(?gillmoreEntity AS ?entityInCharleston)
  }
  
  OPTIONAL {
    ?medalOfHonorAward <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
    ?medalOfHonorAward <http://dbpedia.org/property/war> ?war .
  }
}
```",6,6,7,3,3,3,3,71,0,306,1,0.0,0.0,0
816,3,train,Give me the person decedent at Los Angeles.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> .
}
```",1,1,2,1,1,3,3,71,2883,0,0,1.0,1.0,1.0
468,16,train,"Give me the reference to the real name of Peter IV of Aragon and child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?realName ?child WHERE {
  <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/birthName> ?realName .
  
  OPTIONAL {
    <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/child> ?child .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
347,20,train,"Give me the commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
SELECT ?result WHERE {
  # Find commanders in the Thirty Years' War
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  ?war rdfs:label ""Thirty Years' War""@en .

  # Check if this commander is a father of someone who is also a child of Ferdinand III
  ?child <http://dbpedia.org/ontology/father> ?commander .
  ?child <http://dbpedia.org/ontology/mother> ?mother .
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthplace .

  # Ensure the child is also a child of Ferdinand III
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
943,42,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?child ?grandfather ?reference WHERE {
  # Find Yeshaq I's royal parent and their child
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?child <http://dbpedia.org/ontology/child> ?parent .

  # Find Na'od's father who is royalty and an office holder, then his parent (grandfather)
  ?naodFather <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Naa%27od> .
  ?naodFather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?naodFather <http://www.wikidata.org/entity/P39> <http://www.wikidata.org/entity/Q82955> . # Office holder
  ?grandfather <http://dbpedia.org/ontology/parent> ?naodFather .

  # Reference property for additional context or links
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/wikiPageExternalLink> ?reference .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
80,0,train,Give me the actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
80,45,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?result WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
  
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result .
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .
}
```",5,5,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
353,26,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?father WHERE {
  ?reference <http://dbpedia.org/ontology/royalty> ?v1 .
  ?reference <http://dbpedia.org/ontology/officeHolder> ?v2 .
  ?reference <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child <http://dbpedia.org/ontology/parent> ?reference .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  ?father <http://dbpedia.org/ontology/parent> ?child .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
782,0,train,Give me the reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> rdfs:seeAlso ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,49,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  # Find wars that are both diseases and societal events
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Disease> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .

  # Identify the commander of such a war
  ?result <http://dbpedia.org/ontology/commander> ?war .

  # Find the owner of USS Arcadia (ID-1605)
  OPTIONAL {
    <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/property/owner> ?owner .
    ?result = ?owner .
  }

  # Locate the author who is a politician and office holder of ""An Invitation to the White House""
  OPTIONAL {
    <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/ontology/author> ?author .
    ?author <http://dbpedia.org/property/politician> true .
    ?author <http://dbpedia.org/ontology/officeHolder> ?office .
    ?result <http://dbpedia.org/ontology/spouse> ?author .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,3,train,"Give me the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
SELECT ?alumnus WHERE {
  <http://dbpedia.org/resource/Plovdiv_University_Paisii_Hilendarski> <http://dbpedia.org/ontology/alumni> ?alumnus .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
628,42,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  # Find associated musical artist of Bobby Shmurda
  ?artist <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/Bobby_Shmurda> .
  
  # Identify band members of the associated artist who are also musical artists
  ?member <http://dbpedia.org/ontology/member> ?artist ;
          <http://dbpedia.org/ontology/musicArtist> ?result .

  # Find award related to Coro de la Pontificia Universidad Católica de Puerto Rico and its region
  ?award <http://dbpedia.org/property/associatedMusicalGroup> <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> .
  ?region <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> ;
          <http://dbpedia.org/ontology/state> ?state ;
          <http://dbpedia.org/ontology/settlement> ?settlement .
  ?award <http://dbpedia.org/property/location> ?region .

  # Ensure the person is native to this region
  ?result <http://dbpedia.org/ontology/nativePlace> ?region .

  # Check if the person was born as Ackquille Jean Pollard
  ?result <http://dbpedia.org/ontology/birthName> ""Ackquille Jean Pollard"" .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
293,2,train,Give me the person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
737,25,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Find child of Albrecht, Duke of Württemberg
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .
  
  # Ensure the child is also a grandchild of Archduke Charles Louis of Austria
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .

  # Check if the child is royalty
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  BIND(?child AS ?result)
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
399,5,train,Give me the band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Emilia Yancheva Valeva""@en .
  ?person <http://dbpedia.org/ontology/member> ?band .
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
225,1,train,Give me the birthplace of Chieko Asakawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Chieko_Asakawa> dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
595,11,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?author <http://dbpedia.org/property/book> <http://dbpedia.org/resource/An_Invitation_to_the_White_House> .
  ?author <http://www.wikidata.org/entity/P39> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?author <http://dbpedia.org/ontology/politician> [] .
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
293,43,train,"Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Harriette Arlene Lake"" .
  ?person <http://dbpedia.org/property/politicalAffiliation> <http://dbpedia.org/resource/Republican_Party_(United_States)> .

  OPTIONAL { 
    ?film <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> .
    ?actor <http://dbpedia.org/ontology/starring> ?film .
    ?person <http://dbpedia.org/ontology/spouse> ?actor .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,5,train,Give me the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/property/occupation> ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
89,32,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  # Myat Hpone Pyo's royal father and his spouse
  ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .

  # Min Hla Htut's parent and their child
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Min_Hla_Htut> .
  
  # Ensure the spouse is also a child of this parent
  ?spouse <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,50,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Find actors in Ab Kya Hoga who are also politicians
  <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.wikidata.org/entity/P106> ?occupationActor .
  FILTER(?occupationActor = <http://www.wikidata.org/entity/Q33999>) # Q33999 is the identifier for ""politician""

  # Find someone with a matching profession
  ?result <http://dbpedia.org/property/profession> ?professionResult .

  # Ensure this person's profession matches that of the actor-politicians
  ?actor <http://www.wikidata.org/entity/P106> ?occupationActor .
  FILTER(?occupationActor = ?professionResult)

  # Find professionals related to The Shadow's alter ego
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?result <http://dbpedia.org/property/profession> ?alterEgoProfession .
    FILTER(?alterEgoProfession = ?alterEgo)
  }
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
198,53,train,"Give me the force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?force ?war ?entity WHERE {
  # Force of Quincy Adams Gillmore
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/militaryService> ?force .

  # War of the awardee of an award show by United States Congress
  ?awardShow <http://dbpedia.org/property/awardingBody> <http://dbpedia.org/resource/United_States_Congress> .
  ?awardShow <http://dbpedia.org/property/awardee> ?person .
  ?person <http://dbpedia.org/ontology/war> ?war .

  # Entity in the birthplace of Henry Clay Lewis
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace a <http://dbpedia.org/class/yago/Settlement108069068> ; # Assuming this class represents settlements
             <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel ;
             <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
  ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,35,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Condition 1: Child of the parent of Roger III, Duke of Apulia
  ?parent <http://dbpedia.org/ontology/spouse> ?spouse .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  ?result <http://dbpedia.org/ontology/parent> ?parent .

  # Condition 2: Child of the child of Alfonso VI of León and Castile
  ?grandparent <http://dbpedia.org/ontology/spouse> ?spouse2 .
  ?grandparent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  ?intermediateChild <http://dbpedia.org/ontology/parent> ?grandparent .
  ?result <http://dbpedia.org/ontology/parent> ?intermediateChild .
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
246,13,train,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify Princess Aisha bint Faisal's parent who is royalty
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 2: Find the child of this royal parent who is also royalty
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  # Step 3: Identify the parent of this royal child
  ?result <http://dbpedia.org/ontology/parent> ?child .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
871,26,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?child <http://dbpedia.org/ontology/politician> [] .
  ?child <http://dbpedia.org/property/officeHolder> [] .
  BIND(?child AS ?result)
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
687,15,train,"Give me the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?person <http://dbpedia.org/ontology/birthDate> ?personBirthDate .

  BIND (YEAR(?birthDate) AS ?year)
  BIND (MONTH(?birthDate) AS ?month)
  BIND (DAY(?birthDate) AS ?day)

  FILTER (
    YEAR(?personBirthDate) = ?year &&
    MONTH(?personBirthDate) = ?month &&
    DAY(?personBirthDate) = ?day
  )
}
```",2,3,3,2,1,3,3,71,10,0,0,1.0,1.0,1.0
159,13,train,Give me the reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/ontology/writer> ?writer .
}
```",2,2,3,2,1,3,3,71,2,0,98448,1.0,2.031488065007618e-05,4.062893592816804e-05
871,47,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT DISTINCT ?grandparent WHERE {
  # Find Edward Stanley's parents
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .
  
  # Identify their children (Edward Stanley's grandparents)
  ?parent <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandparent <http://dbpedia.org/ontology/child> ?parent .

  # Ensure the grandparent is a politician and office holder
  OPTIONAL { 
    ?grandparent <http://dbpedia.org/property/politician> true .
    ?grandparent <http://dbpedia.org/property/officeHolder> true .
  }

  # Check if they are parents to someone who received the Commander of the Royal Victorian Order
  ?grandparent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/property/honorsReceived> ""Commander of the Royal Victorian Order"" .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,50,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?commanderOffice ?leaderOffice WHERE {
  # Part 1: Office of Commander for Manuel Pinto da Costa
  ?office <http://dbpedia.org/ontology/holder> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
  ?office <http://www.w3.org/2000/01/rdf-schema#label> ?commanderOfficeLabel .
  FILTER(CONTAINS(LCASE(?commanderOfficeLabel), ""commander"")) .
  
  OPTIONAL {
    ?militaryConflict <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
    ?societalEvent <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
  }
  
  # Part 2: Office of Leader for Conservative Republican Party (Spain)
  ?partyLeaderOffice <http://dbpedia.org/ontology/partyLeader> ?leader .
  ?partyLeaderOffice <http://www.w3.org/2000/01/rdf-schema#label> ?leaderOfficeLabel .
  FILTER(CONTAINS(LCASE(?leaderOfficeLabel), ""leader"")) .

  ?leader <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
513,9,train,Give me the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/George_Hamilton_Cameron> <http://dbpedia.org/ontology/award> ?award .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
557,5,train,Give me the actor of Johnny Doughboy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,10,0,4,1.0,0.7142857142857143,0.8333333333333333
119,4,train,Who is the leader of 2009 Galician regional election?,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  ?election <http://dbpedia.org/ontology/electionDate> ?date .
  ?election <http://www.w3.org/2000/01/rdf-schema#label> ""Galician regional election, 2009"" .
  FILTER (YEAR(?date) = 2009)
  
  OPTIONAL {
    ?party <http://dbpedia.org/ontology/electionResult> ?result .
    ?election <http://dbpedia.org/ontology/winningParty> ?party .
    ?party <http://dbpedia.org/ontology/leader> ?leader .
  }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
595,28,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?spouse WHERE {
  ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/An_Invitation_to_the_White_House> .
  ?author <http://dbpedia.org/ontology/politician> _:politician .
  ?author <http://dbpedia.org/property/officeHolder> _:officeholder .
  ?author <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
  ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Back_to_Work_(book)> .
  
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
595,56,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the author of ""An Invitation to the White House"" who is also a politician and office holder.
  ?author <http://dbpedia.org/ontology/authored> <http://dbpedia.org/resource/An_Invitation_to_the_White_House> .
  ?author <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?author <http://www.wikidata.org/entity/P39> ?office . # Office holder

  # Step 2: Confirm this author wrote ""Back to Work.""
  ?author <http://dbpedia.org/ontology/authored> <http://dbpedia.org/resource/Back_to_Work_(book)> .

  # Step 3: Find wars classified as both diseases and societal events, then identify commanders.
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q13442814> . # Disease
  ?war <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q1180374> . # Societal event
  ?commander <http://dbpedia.org/ontology/commanded> ?war .

  # Step 4: Determine the owner of USS Arcadia and find any connection to the commander.
  ?owner <http://dbpedia.org/property/ownedBy> <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> .
  ?commander <http://www.wikidata.org/entity/P26> ?owner .

  # Step 5: Find the spouse of this author.
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
39,57,train,"Give me the professional in Singer and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
SELECT ?singer ?alterEgoProfession ?band WHERE {
  # Professional in Singer
  ?singer <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Singer> .

  # Creation by Walter B. Gibson that is a fictional character and comics character
  ?creation <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?creation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/FictionalCharacter108069068> .
  ?creation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/ComicsCharacters100000001> .

  # Professional in the alter ego of the creation
  OPTIONAL {
    ?creation <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?alterEgoProfession <http://dbpedia.org/ontology/profession> ?v1 .
  }

  # Band of the person born as Robert Lamar Thompson
  ?person <http://dbpedia.org/ontology/birthName> ""Robert Lamar Thompson"" .
  ?person <http://dbpedia.org/property/memberOfBand> ?band .
}
```",6,9,7,3,3,3,3,71,0,0,3,0,0.0,0
203,1,train,Give me the military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Battle_of_Fort_Royal> dbo:participatedIn ?battle .
  ?battle dbo:militaryForce ?force .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
905,23,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?father <http://dbpedia.org/ontology/father> ?parent .
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
737,49,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find parent of Archduchess Margarete Sophie of Austria
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .

  # Step 2: Find child of the parent who is royalty
  ?result <http://dbpedia.org/ontology/parent> ?parent .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Step 3: Find predecessor of the child of Philipp Albrecht, Duke of Württemberg
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
    ?result <http://dbpedia.org/ontology/successor> ?child .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,47,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of Sam Concepcion.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
SELECT ?result WHERE {
  ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/FictionalCharacter108069068> .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/ComicsCharacters100000001> .
  
  ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?profession <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/ontology/profession> .

  ?result <http://dbpedia.org/property/profession> ?alterEgo .
  ?result <http://dbpedia.org/ontology/profession> ?profession .
}
```",5,7,6,3,2,3,3,71,0,0,39640,0,0.0,0
668,37,train,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Darryl Paa Kwesi Bannerman-Martin"" .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?writer .
    ?writer <http://dbpedia.org/property/profession> ?profession .
    
    ?person <http://dbpedia.org/ontology/profession> ?profession .
  }
  
  ?result <http://dbpedia.org/ontology/musicalArtist> true .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
531,19,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?tenant WHERE {
  <http://dbpedia.org/resource/A._Ruiz-Gallardón> <http://dbpedia.org/ontology/residence> ?residence .
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/officeLocation> ?office .

  ?tenant <http://dbpedia.org/ontology/inhabitant> ?residence .
  ?tenant <http://dbpedia.org/ontology/inhabitant> ?office .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
59,8,train,"Give me the native of Bristol and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> .
  
  OPTIONAL { 
    ?club <http://dbpedia.org/ontology/sportsTeam> ?v1 .
    ?club <http://dbpedia.org/property/sport> <http://dbpedia.org/resource/Soccer> .
    
    ?player <http://dbpedia.org/property/player> <http://dbpedia.org/resource/Jamie_McCunnie> .
    ?person <http://dbpedia.org/ontology/manages> ?player .
  }
  
  BIND(?person AS ?result)
}
```",3,5,4,2,2,2,2,9,1,970,0,0.0010298661174047373,1.0,0.00205761316872428
38,16,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author WHERE {
  # Find the author of a work that is a book, written work, and American
  ?work <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Joe_Biden> .
  ?work <http://dbpedia.org/ontology/book> [] .
  ?work <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> .
  ?work <http://dbpedia.org/ontology/writtenWork> [] .
  
  # Find the author of another work by Joe Biden
  ?otherWork <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Joe_Biden> .
  ?otherWork <http://dbpedia.org/ontology/writtenWork> [] .

  # The same author must be associated with both works
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?otherWork <http://dbpedia.org/ontology/author> ?author .
}
```",4,10,5,2,2,3,2,20,0,0,1,0,0.0,0
59,3,train,"Give me the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?club WHERE {
  ?club a dbo:SoccerClub .
  ?club a dbo:SportsClub .
  ?club dbo:player <http://dbpedia.org/resource/Jamie_McCunnie> .
}
```",1,3,2,1,1,2,2,9,0,0,12,0,0.0,0
769,1,train,Give me the player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/player> ?player .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
347,54,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify children of Ferdinand II
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .
  
  # Step 2: Check if the child was a commander in a war that is also a societal event, general event, and television show
  ?child <http://dbpedia.org/ontology/commander> ?war .
  ?war rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
       rdf:type <http://dbpedia.org/class/yago/Event108069068> ;
       rdf:type <http://dbpedia.org/class/yago/TelevisionShow108069068> .
  
  # Step 3: Check involvement with 2nd Dragoon Regiment (France)
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .

  # Step 4: Identify the parent of Archduke Charles Joseph
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .
  
  # Step 5: Find the child of this parent and then their father
  ?grandchild <http://dbpedia.org/ontology/father> ?parent ;
              <http://dbpedia.org/ontology/mother> ?mother .
  ?result <http://dbpedia.org/ontology/father> ?grandchild .
  
  # Ensure the result matches all criteria
  FILTER (?child = ?result)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,3,train,Give me the award of Rodney Lees.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/ontology/award> ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
159,19,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> .
  ?successor <http://dbpedia.org/ontology/successor> ?commander .
  
  ?successor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  ?successor <http://www.wikidata.org/entity/P39> ?office . # Office holder property
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/George_Ducas> .
    FILTER(?result = ?successor)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
609,37,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceCeceBell ?region ?adminRegion ?governor WHERE {
  # Birth place of Cece Bell
  <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceCeceBell .

  # Birth place of Paulus Powell and its region
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?birthPlacePaulus .
  ?birthPlacePaulus <http://dbpedia.org/ontology/location> ?region .
  ?region <http://dbpedia.org/ontology/administrativeRegion> ?adminRegion .

  # Governor of the region who is a politician
  ?governor <http://dbpedia.org/ontology/governs> ?region ;
            <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 represents ""politician""
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
609,36,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?authorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Find the author of El Deafo who is American
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q30> . # Q30 represents ""United States""
  ?author <http://dbpedia.org/property/birthPlace> ?authorBirthPlace .

  # Find the birthplace of Vince Gilligan
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/birthPlace> ?vinceGilliganBirthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
23,10,train,Give me the entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Daniel_Elahi_Galán> dbo:nationality ?country .
  ?entity dbo:locationCountry ?country .
}
```",2,2,3,2,1,2,3,28,0,0,2141,0,0.0,0
687,39,train,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?team WHERE {
  # Find Sergio Agüero's teams
  <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> <http://dbpedia.org/ontology/team> ?agüeroTeam .

  # Get Marcelo Sarmiento's birthday
  <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://www.w3.org/2000/01/rdf-schema#birthDate> ?sarmientoBirthday .

  # Find individuals who are both soccer players and managers, born on the same date as Sarmiento
  ?person <http://dbpedia.org/ontology/birthDate> ?sarmientoBirthday .
  ?person <http://dbpedia.org/ontology/team> ?team .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_player> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_manager> .

  # Ensure the team matches one of Agüero's teams
  FILTER (?team = ?agüeroTeam)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
39,38,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
SELECT ?result WHERE {
  # Finding professional in alter ego of The Shadow
  ?shadowAlterEgo <http://dbpedia.org/property/alterEgo> ""The Shadow"" .
  ?shadowAlterEgo <http://dbpedia.org/ontology/profession> ?result .

  # Finding band associated with Robert Lamar Thompson
  OPTIONAL {
    ?thompson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?thompson <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson"" .
    ?thompson <http://dbpedia.org/ontology/memberOf> ?resultBand .
    
    FILTER(?result = ?resultBand)
  }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
595,2,train,Give me the commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,18,0,0,1.0,1.0,1.0
782,9,train,Give me the reference to The Fabulous Thunderbirds and band of Kim Wilson.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
SELECT ?band WHERE {
  ?band <http://www.w3.org/2000/01/rdf-schema#label> ""The Fabulous Thunderbirds""@en .
  ?band a <http://dbpedia.org/ontology/Band> .
  OPTIONAL { 
    ?band <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Kim_Wilson> .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
384,5,train,"Give me the party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Patrice_Martin-Lalande> .
  ?successor a <http://dbpedia.org/ontology/politician> .
  ?successor <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (CONTAINS(LCASE(?label), ""france"") || CONTAINS(LCASE(?successor<http://dbpedia.org/property/nationality>), ""france""))
  ?successor <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",2,4,3,2,1,2,2,9,0,0,6,0,0.0,0
609,12,train,Give me the birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Cece_Bell>
    <http://dbpedia.org/resource/Glenn_Youngkin>
  }
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
353,58,train,"Give me the child of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify Roger II's children
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  
  # Step 2: Find Constance of Burgundy's royal spouse and their grandchildren
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    ?child2 <http://dbpedia.org/ontology/father> ?spouse .
    ?grandchild <http://dbpedia.org/ontology/father> ?child2 .
  }
  
  # Step 3: Identify who is also a father of a royal child of William I
  OPTIONAL {
    ?royalChild <http://dbpedia.org/ontology/father> ?result .
    ?royalChild <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/William_I_of_Sicily> .
    ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
  
  FILTER (?child = ?grandchild) # Ensure the person is both a child of Roger II and a grandchild of Constance's spouse
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
905,29,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  # Find Charles I of Hungary's father who is royalty
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_I_of_Hungary> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Find the parent of this royal father
  ?parent <http://dbpedia.org/ontology/father> ?father .
  
  # Check if this person is a spouse of Charles II of Naples
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
  
  # Ensure the same person is also a child of Stephen V of Hungary
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  FILTER (?parent = ?result)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
687,2,train,Give me the team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
SELECT ?team WHERE {
  <http://dbpedia.org/resource/Pablo_Aimar> <http://dbpedia.org/ontology/team> ?team .
}
```",1,1,2,1,1,3,3,71,1,8,0,0.1111111111111111,1.0,0.19999999999999998
103,0,train,Give me the actor of Dispatches from Elsewhere.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,5,0,1,1.0,0.8333333333333334,0.9090909090909091
119,4,train,"Who is the native, that is Polish and an athlete, of Łódź?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lodz> .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Poland> .
  ?person <http://dbpedia.org/ontology/occupation> ?sport .
  FILTER EXISTS { 
    ?sport <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""athlete"") || CONTAINS(LCASE(?label), ""sports""))
  }
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
756,6,train,"Give me the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/ontology/country> ?result .
  ?result a <http://dbpedia.org/ontology/Country> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,25,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ackquille Jean Pollard"" .
  
  OPTIONAL {
    ?award <http://dbpedia.org/property/nationality> ""American"" .
    ?award <http://dbpedia.org/ontology/location> ?region .
    ?region a <http://dbpedia.org/class/yago/Region108069068> . # Assuming this class represents regions
    ?region a <http://dbpedia.org/class/yago/State115777470> .   # Assuming this class represents states
    ?region a <http://dbpedia.org/class/yago/Settlement108069068> . # Assuming this class represents settlements
    
    ?person <http://dbpedia.org/ontology/nationality> ?award .
  }
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
905,58,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Spouse of Charles II of Naples
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
  
  # Child of the child that is royalty of the predecessor of Stephen V of Hungary
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  ?child1 <http://dbpedia.org/ontology/parent> ?predecessor .
  ?child1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?grandchild <http://dbpedia.org/ontology/parent> ?child1 .

  # Parent of the father, that is a royalty, of Charles I of Hungary
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_I_of_Hungary> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?parent <http://dbpedia.org/ontology/parent> ?father .

  # Combine conditions
  FILTER (?spouse = ?grandchild && ?grandchild = ?parent)
  BIND(?spouse AS ?result)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
756,49,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
SELECT ?manager WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Sports_manager> .
  
  ?manager <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?manager <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Sports_manager> .

  ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/VfL_Bochum> ;
          <http://dbpedia.org/property/year> ""2007–08"" .
  
  ?season <http://dbpedia.org/ontology/coach> ?manager .

  OPTIONAL {
    ?teamSeason <http://dbpedia.org/ontology/team> ?team ;
                 <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
    
    ?team <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Sports_team> .

    ?manager <http://dbpedia.org/ontology/coach> ?teamSeason .
  }
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
595,20,train,"Give me the spouse of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  OPTIONAL {
    ?book <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> ;
          <http://purl.org/dc/terms/creator> ?author .
    
    FILTER(?author = <http://dbpedia.org/resource/Bill_Clinton>)
  }
  
  FILTER(?spouse = <http://dbpedia.org/resource/Hillary_Clinton>)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
23,16,train,Give me the party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?royParty ?father ?fatherParty WHERE {
  # Find Roy Barreras' political party
  <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/politicalAffiliation> ?royParty .

  # Find Sofía Petro's father and his political party
  OPTIONAL { 
    <http://dbpedia.org/resource/Sof%C3%ADa_Petro> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/politicalAffiliation> ?fatherParty .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,1,train,Give me the birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
531,44,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
SELECT ?leaderOffice ?tenantOffice ?commanderOffice WHERE {
  # Leader of Conservative Republican Party (Spain)
  ?person <http://dbpedia.org/ontology/politician> _:a .
  ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> .
  ?person <http://dbpedia.org/property/office> ?leaderOffice .

  # Tenant of Madrid
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Madrid> .
    ?person <http://dbpedia.org/property/office> ?tenantOffice .
  }

  # Commander in Central African Republic Civil War
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/politician> _:b .
    ?person <http://dbpedia.org/property/office> ?commanderOffice .
    ?commanderOffice <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Central_African_Republic_Civil_War> .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
159,23,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/event> ?v1 .
  ?commander <http://dbpedia.org/ontology/commanderOf> ?event .
  ?commander <http://dbpedia.org/property/politician> true .
  ?commander <http://dbpedia.org/ontology/officeHolder> ?office .

  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Micha%C5%82_Kazimierz_Pac> .
  FILTER (?commander = ?successor)
}
```",3,7,4,3,1,3,3,71,0,0,3,0,0.0,0
943,32,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result .
  
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Yeshaq_I> .
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",4,5,5,2,2,3,3,71,0,3,3,0.0,0.0,0
246,9,train,"Give me the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/parent> ?child .
    ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .
  }
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
39,59,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find fictional and comics characters created by Walter B. Gibson
  ?creation <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?creation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/FictionalCharacter108069068> .
  ?creation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/ComicsCharacters100000001> .

  # Step 2: Find the alter ego's profession
  ?creation <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?profession .

  # Step 3: Identify the producer of Coke Studio Philippines
  <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?producer .
  
  # Step 4: Match professions
  ?producer <http://dbpedia.org/ontology/profession> ?profession .

  # Result is the professional in both contexts
  BIND(?alterEgo AS ?result)
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
628,55,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
SELECT ?result WHERE {
  # Find band members of artists associated with Bobby Shmurda
  ?artist <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/Bobby_Shmurda> .
  ?bandMember <http://dbpedia.org/ontology/bandMember> ?artist .
  
  # Ensure the person is a musical artist
  ?bandMember <http://dbpedia.org/ontology/musicArtist> ?v1 .

  # Check if they were born as Bobby Shmurda
  ?bandMember <http://dbpedia.org/property/birthName> ""Bobby Shmurda""^^<http://www.w3.org/2001/XMLSchema#string> .
  
  # Identify the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> .
    
    # Ensure the award is a region, American, state, and settlement
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?regionLabel .
    FILTER (CONTAINS(LCASE(?regionLabel), ""region"") && CONTAINS(LCASE(?regionLabel), ""american"") && CONTAINS(LCASE(?regionLabel), ""state"") && CONTAINS(LCASE(?regionLabel), ""settlement""))
    
    # Check if the person is native to this region
    ?bandMember <http://dbpedia.org/ontology/nativeCountry> ?award .
  }
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
353,20,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  
  ?grandchild <http://dbpedia.org/ontology/father> ?result .
  ?grandchild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_I_of_Sicily> .

  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
78,13,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?artist WHERE {
  # Find associated musical artist of Stuart Mcbeath Tosh
  <http://dbpedia.org/resource/Stuart_Mcbeath_Tosh> <http://dbpedia.org/ontology/associatedBand> ?artist .
  FILTER EXISTS { 
    ?artist a <http://dbpedia.org/ontology/MusicalArtist> .
  }

  # Find associated musical artist of Billy Lyall
  OPTIONAL {
    <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedBand> ?artist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
756,19,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/coach> ?manager .
  ?manager <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/West_Germany> .
  
  FILTER(YEAR(?season) = 2007 && MONTH(?season) >= 8 || YEAR(?season) = 2008 && MONTH(?season) <= 5)
  
  ?vfl a <http://dbpedia.org/ontology/SportsClub> ;
      a <http://dbpedia.org/ontology/Organisation> ;
      a <http://dbpedia.org/ontology/SoccerClub> .
}
```

Note: The query assumes that the season is represented in a way that allows filtering by year and month, which might require additional adjustments based on how DBpedia represents seasons. Additionally, the exact property for nationality may need to be adjusted if it's not directly available as shown.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
905,47,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Maria of Bytom's spouse and their royal father's parent
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  ?father <http://dbpedia.org/ontology/father> ?spouse .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?parent <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Ensure this person is also the spouse of Philip I, Prince of Taranto's father
  OPTIONAL {
    <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/ontology/father> ?philipFather .
    ?result <http://dbpedia.org/ontology/spouse> ?philipFather .
  }

  # Ensure the person from step 1 is the same as in step 2
  FILTER (?parent = ?result)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
80,1,train,Give me the actor of ATL (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,10,0,0,1.0,1.0,1.0
628,18,train,Give me the native of Florida and person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
  ?result <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Florida> .
  ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard"" .
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Uncle_Murda> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,48,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . }","```sparql
SELECT ?person ?team WHERE {
  # Step 1: Identify the person born on 1979-11-03 who is a soccer player and manager
  ?person <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^xsd:date .
  ?person <http://dbpedia.org/property/profession> ?occupation1 .
  ?person <http://dbpedia.org/property/profession> ?occupation2 .
  
  FILTER (
    (str(?occupation1) = ""soccer player"" || str(?occupation1) = ""Soccer player"") &&
    (str(?occupation2) = ""soccer manager"" || str(?occupation2) = ""Soccer manager"")
  )
  
  # Step 2: Identify the team(s) associated with this person
  ?person <http://dbpedia.org/ontology/team> ?team .
  
  OPTIONAL {
    # Step 3: Find Marty Pollio's birth date and identify athletes born on that date
    <http://dbpedia.org/resource/Marty_Polio> <http://dbpedia.org/ontology/birthDate> ?martyBirthDate .
    
    ?athlete <http://dbpedia.org/ontology/birthDate> ?martyBirthDate .
    ?athlete <http://dbpedia.org/property/profession> ""athlete"" .
    
    # Step 4: Check if the identified person played for any team related to these athletes
    ?team <http://dbpedia.org/ontology/player> ?person .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
158,22,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Get birthplace of Sandro Bertaggia
  <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Step 2: Find decedents at this birthplace
  ?result <http://dbpedia.org/ontology/deathPlace> ?birthPlace .

  # Step 3: Get administration of Alexander II, Grand Duke of Finland
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> <http://dbpedia.org/property/administration> ?administration .
    
    # Find natives from this administration
    ?result <http://dbpedia.org/property/nativeOf> ?administration .
  }
}
```",4,5,5,2,2,2,3,28,2,905,0,0.002205071664829107,1.0,0.0044004400440044
159,1,train,Give me the reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . }","```sparql
SELECT ?resource ?description WHERE {
  ?resource rdfs:label ""George Ducas""@en .
  OPTIONAL { ?resource dbo:description ?description . }
}
```

This query will return the DBpedia resource for George Ducas and any available description, which can serve as a reference to him.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
769,2,train,Give me the birthday of Tony Hollings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthday WHERE {
  <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?birthday .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
347,46,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Algerian_War> .
  
  <http://dbpedia.org/resource/Algerian_War> <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/SocietalEvent108069> .
  OPTIONAL { 
    <http://dbpedia.org/resource/Algerian_War> <http://dbpedia.org/ontology/show> ?tvShow .
  }
  
  ?child <http://dbpedia.org/ontology/father> ?result .
  <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/parent> ?child .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,57,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Spouse of Charles II of Naples
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_II_of_Naples> .
  
  # Step 2: Parent of the father, that is a royalty, of the spouse of Maria of Bytom
  OPTIONAL {
    ?mariaSpouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
    ?father <http://dbpedia.org/ontology/father> ?mariaSpouse .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?grandparent <http://dbpedia.org/ontology/parent> ?father .
  }
  
  # Step 3: Child of the child, that is a royalty, of Béla IV of Hungary
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> .
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?grandchild <http://dbpedia.org/ontology/father> ?child .
  }
  
  # Final condition: The result must satisfy all conditions
  FILTER (?spouse = ?result && ?grandparent = ?result && ?grandchild = ?result)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
38,14,train,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?author WHERE {
  ?commander <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/officeName> ""Commander"" .
  ?office <http://dbpedia.org/ontology/officePeriod> ?period .
  FILTER(CONTAINS(LCASE(?period), ""korean conflict""))

  ?work <http://dbpedia.org/ontology/author> ?commander .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .

  ?author <http://dbpedia.org/ontology/authored> ?work .
}
```",3,6,4,3,1,3,2,20,0,0,24,0,0.0,0
80,48,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify the author of Smartbomb
  <http://dbpedia.org/resource/Smartbomb_(book)> <http://purl.org/dc/terms/creator> ?author .

  # Step 2: Find movies associated with this author and identify actors
  ?movie <http://dbpedia.org/ontology/writer> ?author .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  # Step 3: Check if the actor is professionally involved with The Shadow's alter ego
  OPTIONAL {
    ?actor <http://dbpedia.org/property/occupation> ?v1 .
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/allegedAlterEgo> ?v1 .
  }
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
198,7,train,Give me the person deceased on 1850-08-05.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (STR(?deathDate) = ""1850-08-05""^^xsd:date)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
859,15,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  
  ?artist <http://dbpedia.org/ontology/member> ?band .

  FILTER (
    EXISTS { ?band <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215380> } && # Band
    EXISTS { ?band <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q43229> } && # Group
    EXISTS { ?band <http://www.wikidata.org/entity/P102> ?org . ?org <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q43229> } # Organization
  )

  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Burnt_by_the_Sun> .
    ?band <http://dbpedia.org/ontology/reference> ?reference .
  }
}
```",4,8,5,3,2,3,2,20,0,0,5,0,0.0,0
39,56,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthName> ""Bob Thompson"" .
  ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""musical artist""
  
  OPTIONAL {
    ?samConcepcion <http://dbpedia.org/ontology/profession> ?profession .
    ?result <http://dbpedia.org/ontology/profession> ?profession .
  }
  
  ?result <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
941,11,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of Prince Augustus William of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify the parent(s) of Duke Anthony Ulrich of Brunswick who are royalty
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find children of these royal parents
  ?child <http://dbpedia.org/ontology/parent> ?parent .

  # Step 3: Check if any of these children are spouses of Prince Augustus William of Prussia
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
472,6,train,Give me the administration of Christian IX of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/ruler> ?result .
  ?result <http://dbpedia.org/property/administrativeCenter> <http://dbpedia.org/resource/Copenhagen> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
472,13,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Christian IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Christian_Ditlev_Ammenorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER (isBlank(?deathPlace) || <http://dbpedia.org/ontology/Settlement> IN (rdfs:subClassOf* OF ?deathPlace))
  
  ?result <http://dbpedia.org/property/administeredFrom> ?deathPlace .
  OPTIONAL {
    ?result <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/Christian_IX_of_Denmark> .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,2,train,"Give me the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?club WHERE {
  ?club a dbo:SoccerClub .
  ?club <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Denis_Kolodin> .
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
398,13,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?club ?nickname WHERE {
  <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/player> ?club .
  ?club <http://dbpedia.org/property/nickname> ?nickname .
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
140,6,train,Give me the commander in Pickett's Charge and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Picketts_Charge> .
  ?event <http://dbpedia.org/ontology/commander> ?result .
  
  ?result <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
737,19,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .

  ?result <http://dbpedia.org/ontology/successor> ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,15,train,Who is the awardee of the award of Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/gaveAward> ?award .
  ?award <http://dbpedia.org/property/receiver> ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# This query cannot be constructed as the subject is unspecified.
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
412,14,train,"Give me the war of Napoleon Zervas and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?war ?entity WHERE {
  <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/war> ?war .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/property/deathPlace> ?deathPlace .
    ?deathPlace a <http://www.w3.org/2006/vcard/ns#adr> . # Assuming this classifies it as a settlement
    ?entity <http://dbpedia.org/ontology/location> ?deathPlace .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
159,9,train,Give me the successor of Yurii Khmelnytsky and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/wikiPageWikiLink> <http://dbpedia.org/resource/George_Ducas> .
  }
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
531,21,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Miguel Maura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  # Find the residence of Alberto Ruiz-Gallardón and its tenant
  <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://dbpedia.org/property/tenant> ?result .

  # Find the office associated with Miguel Maura and check if it's linked to the same person
  OPTIONAL {
    <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/office> ?office .
    ?office <http://dbpedia.org/property/occupant> ?result .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,31,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify Mariano Rajoy's office
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/office> ?office .

  # Step 2: Find the leader of the 2003 Madrid City Council election and their residence
  ?leader <http://dbpedia.org/property/electedAsLeaderOf> <http://dbpedia.org/resource/Madrid_City_Council_election,_2003> .
  ?leader <http://dbpedia.org/ontology/residence> ?residence .

  # Step 3: Identify the tenant of that residence who is an office holder
  ?result <http://dbpedia.org/ontology/residence> ?residence .
  ?result <http://dbpedia.org/ontology/officeHolder> ?v1 .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
414,6,train,Give me the show of Royal Swedish Academy of Sciences and award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
SELECT ?show ?award WHERE {
  # Show or event related to the Royal Swedish Academy of Sciences
  ?show <http://dbpedia.org/ontology/organizer> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> .

  # Award received by Max Born
  ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Max_Born> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
80,47,train,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
SELECT ?actor WHERE {
  # Find a movie associated with T.I.
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/property/performer> <http://dbpedia.org/resource/T.I.> .

  # Find an album or song associated with T.I.
  ?work <http://dbpedia.org/ontology/album> ?album .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork100000001> .
  ?work <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/T.I.> .

  # Ensure the actor is linked to both
  OPTIONAL { 
    ?album <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",5,7,6,3,2,3,3,71,0,0,10,0,0.0,0
159,42,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?successor WHERE {
  ?commander <http://dbpedia.org/ontology/successor> ?successor .
  ?commander <http://dbpedia.org/ontology/war> <http://dbpedia.org/resource/Russo-Polish_War_(1654%E2%80%931667)> .
  ?successor <http://dbpedia.org/property/politicalParty> ?party .
  ?successor <http://dbpedia.org/ontology/officeHolder> ?office .

  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/George_Ducas> .
    ?reference <http://dbpedia.org/ontology/war> ?war .
    ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Television_shows> .
    ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Societal_events> .
  }

  OPTIONAL {
    ?war2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Jean_Baptiste,_Comte_d%27Arco> .
    ?war2 <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Television_shows> .
    ?war2 <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Societal_events> .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
203,48,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Event> .

  ?tripleX <http://www.w3.org/2000/01/rdf-schema#label> ""The Triple X's"" .
  ?force1 <http://dbpedia.org/property/militaryForce> ?tripleX .
  ?force1 <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Event> .
  ?force1 <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .

  ?calder <http://www.w3.org/2000/01/rdf-schema#label> ""Robert Calder"" .
  ?force2 <http://dbpedia.org/property/militaryForce> ?calder .
  ?force2 <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Event> .
  ?force2 <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .

  ?war <http://dbpedia.org/property/involvesMilitaryForce> ?force1, ?force2 .
  ?commander <http://dbpedia.org/ontology/commanded> ?war .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
392,2,train,Give me the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/alsoKnownAs> ""Der Blau""@en .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
633,12,train,Give me the spouse of Renée of Bourbon and parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ren%C3%A9e_of_Bourbon> .
  
  OPTIONAL { 
    ?grandfather <http://dbpedia.org/ontology/familyName> ""Dorothea of Lorraine"" .
    ?father <http://dbpedia.org/ontology/father> ?grandfather .
    ?result <http://dbpedia.org/ontology/child> ?father .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,10,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  # Find commander in French campaign in Egypt and Syria
  <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result .
  
  # Ensure the same individual was involved with a military force in Battle of Cape Finisterre (1805)
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/property/militaryForce> ?result .
  }
}
```",2,2,3,1,2,3,3,71,1,47,0,0.020833333333333332,1.0,0.04081632653061225
103,3,train,Give me the person born as Richard Grant Esterhuysen.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
58,17,train,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  ?movie <http://dbpedia.org/property/award> ?award .
  ?award <http://www.wikidata.org/entity/P921> <http://dbpedia.org/resource/Ian_Gregson> . # Assuming P921 is the property for ""recipient""
  
  ?movie <http://dbpedia.org/ontology/producer> ?producer .

  ?producer <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> .
}
```

This query assumes that:
- The award property is correctly linked to the recipient (Ian Gregson) using a Wikidata property like P921.
- DBpedia has structured data for producers and spouses as described.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
412,19,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Wars involving Konstantinos Ventiris
  OPTIONAL { 
    <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/war> ?war1 .
  }
  
  # Wars involving the leader of National Party of Greece
  OPTIONAL { 
    ?leader <http://www.wikidata.org/entity/P39> <http://dbpedia.org/resource/National_Party_of_Greece> . # Assuming P39 is ""head"" or similar property for leadership
    ?leader <http://dbpedia.org/ontology/war> ?war2 .
  }
  
  # Entity in Athens related to these wars
  FILTER (?result = ?war1 || ?result = ?war2)
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Athens> .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
89,28,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  # Spouse of Saw Shwe Khet
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  
  # Child of the parent of Min Hla Htut of Pyakaung
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> .
  ?result <http://dbpedia.org/ontology/child> ?parent .

  # Predecessor of Myat Hpone Pyo
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,25,train,Give me the parent of the child of Allan Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Parent of Allan Arbus's child
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Allan_Arbus> .
  ?child <http://dbpedia.org/ontology/mother> ?parent1 .

  # Parent of Amy Arbus
  <http://dbpedia.org/resource/Amy_Arbus> <http://dbpedia.org/ontology/father> ?fatherAmy .
  <http://dbpedia.org/resource/Amy_Arbus> <http://dbpedia.org/ontology/mother> ?motherAmy .

  # Find common parent
  FILTER (?parent1 = ?fatherAmy || ?parent1 = ?motherAmy)
  BIND(?parent1 AS ?result)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
353,17,train,"Who is the child of the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
782,2,train,Give me the associated musical artist of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/collaboration> ?artist .
  ?artist a <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
38,13,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?commander <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/holderOf> <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> .

  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108930069> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108930070> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book108930071> .

  ?work <http://purl.org/dc/terms/creator> ?commander .
  ?work <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
  
  BIND(?commander AS ?result)
}
```",3,9,4,3,1,3,2,20,0,0,1,0,0.0,0
943,44,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of Dawit I.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
SELECT ?result WHERE {
  # Find the alter ego of The Shadow
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  
  # Identify Na'od's father and his father (Na'od's grandfather)
  ?naodFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Naa%27d> .
  ?grandfather <http://dbpedia.org/ontology/father> ?naodFather .

  # Check if the grandfather is royalty and an office holder
  ?grandfather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  ?grandfather <http://dbpedia.org/ontology/officeHolder> ?office .

  # Ensure the grandfather is a child of Dawit I
  ?grandfather <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Dawit_I> .
  
  # Bind the result to the alter ego found initially
  FILTER (?alterEgo = ?result)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
468,8,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
347,55,train,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Cecilia Renata of Austria's father
  ?ceciliaRenata <http://dbpedia.org/ontology/father> ?fatherOfCecilia .

  # Step 2: Find the child of Cecilia Renata's father (a sibling)
  ?sibling <http://dbpedia.org/ontology/father> ?fatherOfCecilia .
  
  # Step 3: Identify Ferdinand III, Holy Roman Emperor's children
  ?ferdinandIII <http://dbpedia.org/ontology/child> ?childOfFerdinand .

  # Step 4: Find the father of Ferdinand III's child (should be Ferdinand III)
  ?fatherOfChild <http://dbpedia.org/ontology/father> ?childOfFerdinand .
  
  # Step 5: Identify if this person was a commander in a war
  OPTIONAL { 
    ?sibling <http://dbpedia.org/property/commanderInWar> ?war .
  }
  
  # Step 6: Find societal events, events, and television shows related to 2nd Dragoon Regiment (France)
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/event> ?tvSeries .
    ?tvSeries <http://dbpedia.org/ontology/societalEvent> ?societalEvent .
    ?societalEvent <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
  }
  
  # Bind the result to the person who fits all criteria
  BIND(?sibling AS ?result)
}
```",6,9,7,2,3,3,3,71,0,2292,1,0.0,0.0,0
595,1,train,Give me the author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
609,25,train,Give me the birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?person ?name ?birthPlace WHERE {
  { 
    <http://dbpedia.org/resource/Cece_Bell> dbo:birthPlace ?birthPlace .
    BIND(""Cece Bell"" AS ?name)
    BIND(<http://dbpedia.org/resource/Cece_Bell> AS ?person)
  }
  UNION
  { 
    <http://dbpedia.org/resource/Glenn_Youngkin> dbo:birthPlace ?birthPlace .
    BIND(""Glenn Youngkin"" AS ?name)
    BIND(<http://dbpedia.org/resource/Glenn_Youngkin> AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
687,22,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?result ?team WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?person <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Soccer_manager> .
  
  ?person <http://dbpedia.org/ontology/team> ?team .
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/coPlayer> <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
384,6,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Bruno_Retailleau> dbo:birthPlace ?place .
  <http://dbpedia.org/resource/Bruno_Retailleau> dbo:officeHolder ?office .
  <http://dbpedia.org/resource/Bruno_Retailleau> dbo:partyAffiliation ?party .
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
531,4,train,Give me the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/ontology/residence> ?residence .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
119,25,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
SELECT ?result WHERE {
  ?administration <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  ?administration <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""spanish"")) .

  ?result <http://dbpedia.org/ontology/tenant> ?administration .
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> .
  }
}
```",3,4,4,2,2,3,3,71,0,0,23,0,0.0,0
609,21,train,Give me the birth place of Cece Bell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?ceceBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Birth place of Cece Bell
  <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?ceceBirthPlace .

  # Birth place of Vince Gilligan (assuming he is the awardee)
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?vinceGilliganBirthPlace .
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
782,43,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
SELECT ?reference ?associatedArtist ?band WHERE {
  # Reference to The Fabulous Thunderbirds
  <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://dbpedia.org/ontology/reference> ?reference .

  # Associated musical artist of Nick Curran
  <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .

  # Band member born on 1945-03-30
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Birth_date:March_30,_1945> .
  ?band <http://dbpedia.org/ontology/bandMember> ?person .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
557,36,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
  
  ?actor <http://dbpedia.org/property/claimToFame> ?fame .
  FILTER EXISTS { ?fame a <http://dbpedia.org/class/yago/Movie104069976> } # Assuming this class represents movies
  FILTER EXISTS { ?fame a <http://www.wikidata.org/entity/Q34729> } # Assuming Q34729 is the identifier for ""work""
  
  ?fame <http://dbpedia.org/ontology/producer> ?result .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,16,train,"Give me the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  
  FILTER (?father != ?child) .

  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Ensure the father is also royalty
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
816,47,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .

  ?eugene_cattin <http://dbpedia.org/property/profession> ?profession .
  ?parent <http://www.w3.org/ns/prov#wasDerivedFrom> ?eugene_cattin .
  
  FILTER (?actor = ?parent)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
68,13,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
SELECT ?result WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/father> ?parent .
  }
  UNION
  {
    <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/mother> ?parent .
  }

  ?parent <http://dbpedia.org/ontology/father> ?result .

  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/offspring> <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
782,11,train,Give me the reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?member ?realName WHERE {
  <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> dbo:member ?member .
  ?member foaf:name ?realName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
668,55,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Find individuals with the same profession as Rod Argent
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/ontology/profession> ?profession .

  # Ensure they have the birth name of Joey B
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  <http://dbpedia.org/resource/Joe_Brown_(musician)> <http://dbpedia.org/property/birthName> ?birthName .

  # Check for association with Elorm Kabu Amenyah
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Elorm_Kabu_Amenyah> .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
816,38,train,Give me the parent of the child of Allan Arbus and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
SELECT ?parent WHERE {
  # Parent of child of Allan Arbus
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Allan_Arbus> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .

  # Parent of professional photographer
  ?photographer <http://dbpedia.org/property/occupation> ""Photographer"" .
  ?photographer <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
246,14,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild ?parent WHERE {
  # Step 1: Find Princess Muna al-Hussein's royal child
  ?royalChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Muna_al-Hussein> .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the child of this royal child
  ?grandchild <http://dbpedia.org/ontology/parent> ?royalChild .

  # Step 3: Identify the parent of this grandchild
  ?parent <http://dbpedia.org/ontology/parent> ?grandchild .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
295,3,train,"Give me the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?work WHERE {
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Apache_Indian> .
  ?work a dbo:MusicalWork .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,50,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?result WHERE {
  # Producer of the claim to fame (work) of the actor of Johnny Doughboy
  <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/famousFor> ?fameWork .
  ?fameWork <http://dbpedia.org/ontology/producer> ?result .

  # Producer of the claim to fame (movie and work) of Janet Gaynor
  OPTIONAL {
    <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/property/famousFor> ?fameMovie .
    FILTER EXISTS { ?fameMovie a <http://dbpedia.org/ontology/Film> }
    ?fameMovie <http://dbpedia.org/ontology/producer> ?result .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
103,56,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie500000001> .
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow500000001> .
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?show <http://dbpedia.org/ontology/starring> ?result .

  OPTIONAL {
    ?shadowSeries <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/profession> ?v1 .
  }

  FILTER EXISTS { 
    ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  }
}
```",6,8,7,3,3,3,3,71,0,0,9,0,0.0,0
414,4,train,Give me the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
SELECT ?reference WHERE {
  ?entity a dbo:NobelPrizeInPhysics .
  ?entity <http://dbpedia.org/ontology/wikiPageWikiLink> ?reference .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,58,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?result WHERE {
  # Player in Juan Carlos Molina (footballer)
  ?molina <http://dbpedia.org/ontology/team> ?team .
  ?result <http://dbpedia.org/ontology/team> ?team .

  # Player in the actor of All or Nothing: Manchester City who is a soccer player
  OPTIONAL {
    ?actor <http://dbpedia.org/property/role> <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> .
    ?actor <http://dbpedia.org/ontology/soccerPlayer> ?soccerPlayer .
    ?result <http://dbpedia.org/ontology/soccerPlayer> ?soccerPlayer .
  }

  # Team of the person born on Marcelo Sarmiento's birthday
  ?person <http://dbpedia.org/property/birthDate> ?birthDate .
  FILTER (STR(?birthDate) = ""1977-09-21"") # Assuming this is Marcelo Sarmiento's birth date
  ?person <http://dbpedia.org/ontology/soccerPlayer> ?soccerPlayer .
  ?person <http://dbpedia.org/ontology/soccerManager> ?soccerManager .
  ?result <http://dbpedia.org/ontology/team> ?team2 .
  ?person <http://dbpedia.org/ontology/team> ?team2 .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
203,44,train,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
SELECT ?result WHERE {
  ?campaign <http://dbpedia.org/ontology/commander> ?result .
  ?campaign rdf:type <http://dbpedia.org/class/yago/FrenchCampaignInEgyptAndSyria108639273> .

  ?campaign <http://dbpedia.org/property/militaryForce> ?force1 .
  ?force1 rdf:type <http://dbpedia.org/ontology/MilitaryUnit> ;
          rdf:type <http://dbpedia.org/ontology/SocialEvent> .

  ?calderConflict <http://dbpedia.org/ontology/commander> ?result .
  ?calderConflict <http://dbpedia.org/property/militaryForce> ?force2 .
  ?calderConflict rdf:type <http://dbpedia.org/ontology/MilitaryConflict> ;
                  rdf:type <http://dbpedia.org/ontology/SocialEvent> .

  ?bayneConflict <http://dbpedia.org/ontology/commander> ?result .
  ?bayneConflict <http://dbpedia.org/property/militaryForce> ?force3 .
  ?bayneConflict rdf:type <http://dbpedia.org/ontology/MilitaryConflict> ;
                 rdf:type <http://dbpedia.org/ontology/SocialEvent> .

  FILTER(?campaign = ?calderConflict || ?campaign = ?bayneConflict)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
859,6,train,Give me the associated musical artist of Phantomsmasher and band member of Human Remains (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedBand> ?result .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Human_Remains_(band)> <http://dbpedia.org/ontology/member> ?result .
  }
}
```",2,2,3,1,2,3,2,20,3,8,0,0.2727272727272727,1.0,0.42857142857142855
468,0,train,Give me the reference to Peter IV.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
SELECT ?entity WHERE {
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""peter iv""))
}
```

This query will return entities whose labels contain the phrase ""Peter IV,"" providing references to any relevant figures or pages in DBpedia.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
159,27,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Vienna> <http://dbpedia.org/ontology/battleOf> ?war .
  
  ?war a <http://dbpedia.org/class/yago/YAGO2_SocialEvent> . # Assuming societal event classification
  OPTIONAL { 
    ?war a <http://dbpedia.org/resource/Category:Television_series> . # Assuming TV show classification
  }
  
  ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> .
  ?militaryForce <http://dbpedia.org/property/commander> ?commander .
}
```",3,5,4,3,1,3,3,71,0,0,40,0,0.0,0
628,12,train,Give me the native of Florida and person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard"" .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Florida> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,51,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify the child who is royalty of Maria Anna of Bavaria (born 1574)
  ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Identify the father of this royal child
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?child <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Identify the father of a child of Ferdinand III, Holy Roman Emperor
  ?grandChild <http://dbpedia.org/ontology/father> ?result .
  ?grandChild <http://dbpedia.org/ontology/mother> ?motherFerdinand .
  ?motherFerdinand <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .

  # Ensure the person is both identified in step 1 and step 2
  FILTER (?father = ?result)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,11,train,Give me the professional in the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?profession .
  ?person <http://dbpedia.org/property/occupation> ?profession .
  FILTER(?person != <http://dbpedia.org/resource/Sam_Concepcion>)
}
```",2,2,3,2,1,3,3,71,45130,0,1,1.0,0.9999778422813587,0.9999889210179368
119,37,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
SELECT ?result WHERE {
  # Find tenants in Santiago de Compostela
  ?santiago <http://dbpedia.org/ontology/residence> ?result .
  
  # Ensure the result is also a residence of a Spanish citizen
  OPTIONAL { 
    ?person <http://www.wikidata.org/entity/P27> <http://dbpedia.org/resource/Spain> . # Person is a citizen of Spain
    ?person <http://dbpedia.org/ontology/residence> ?result .
    ?result <http://www.wikidata.org/entity/P17> ?country . # Result is in a country
  }
}
```",4,6,5,3,2,3,3,71,0,15969,4,0.0,0.0,0
361,14,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Actor> .
}
```",3,3,4,2,2,2,3,28,0,558,4210,0.0,0.0,0
297,6,train,Give me the institution in the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
SELECT ?institution WHERE {
  <http://dbpedia.org/resource/Brian_Kemp> <http://dbpedia.org/ontology/administration> ?institution .
}
```",2,2,3,2,1,2,2,9,0,0,941,0,0.0,0
246,7,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
737,18,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
SELECT ?result WHERE {
  # Child of Archduchess Margarete Sophie of Austria
  ?result <http://dbpedia.org/ontology/father> ?father .
  FILTER(?father = <http://dbpedia.org/resource/Archduke_Franz_Salvator_of_Austria>) 
  UNION
  ?result <http://dbpedia.org/ontology/mother> ?mother .
  FILTER(?mother = <http://dbpedia.org/resource/Margarete_Sophie,_Archduchess_of_Austria>)

  # Predecessor of Carl, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .

  # Child of Albrecht, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/father> ?father .
  FILTER(?father = <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg>)
  UNION
  ?result <http://dbpedia.org/ontology/mother> ?mother .
  FILTER(?mother = <http://dbpedia.org/resource/Maria_Dorothea_of_Austria_(1743-1824)>)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
143,13,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/show> [] . # Assuming there's a property indicating it's also a show
  }
  ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> .
}
```",3,4,4,3,1,3,2,20,0,0,28,0,0.0,0
905,12,train,Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  ?parent <http://dbpedia.org/ontology/mother> ?mother . # To cover both parent possibilities

  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
    ?parent <http://dbpedia.org/ontology/mother> ?mother2 . # Again, to cover both parent possibilities
  }

  BIND(?parent AS ?result)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,52,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?result WHERE {
  # Actor in ""All or Nothing: Manchester City""
  <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/ontology/starring> ?result .
  
  # Soccer player and athlete
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (
    EXISTS { ?v1 <http://www.w3.org/2000/01/rdf-schema#label> ""soccer player"" . }
    && EXISTS { ?v1 <http://www.w3.org/2000/01/rdf-schema#label> ""athlete"" . }
  )
  
  # Team of Pablo Aimar
  OPTIONAL {
    ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Pablo_Aimar> .
    ?result <http://dbpedia.org/ontology/team> ?team .
  }

  # Player born on Marty Pollio's birthday
  ?martyPollio <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Marty_Polio> .
  ?martyPollio <http://dbpedia.org/ontology/birthDate> ?birthday .
  ?result <http://dbpedia.org/ontology/birthDate> ?birthday .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
628,10,train,Give me the native of Florida and band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> .
  ?person <http://dbpedia.org/property/memberOfBand> <http://dbpedia.org/resource/Uncle_Murda> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,23,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
SELECT DISTINCT ?result WHERE {
  ?royalty <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?royalty <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?parent <http://dbpedia.org/ontology/child> ?royalty .
  ?result <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
39,49,train,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  # Find individuals with the same profession as Sam Concepcion
  <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/ontology/profession> ?profession .
  
  # Identify a person born as Bob Thompson who is a musician and find their band
  ?person <http://dbpedia.org/property/birthName> ""Bob Thompson"" .
  ?person <http://dbpedia.org/ontology/profession> ?v1 .
  FILTER(?v1 = <http://dbpedia.org/resource/Musical_artist>) # Ensure they are a musical artist
  ?person <http://dbpedia.org/property/band> ?band .

  # Match the profession of Sam Concepcion with the person found above
  ?result <http://dbpedia.org/ontology/profession> ?profession .
  
  # Ensure the result is the same as the band associated with Bob Thompson
  FILTER(?result = ?band)
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
103,48,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?result WHERE {
  # Professional related to The Shadow's alter ego
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  
  # Actor of a movie that is also a television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  
  # Ensure the movie is also a television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow100000001> .

  # Co-starring with Richard E. Grant
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
}
```",5,6,6,3,2,3,3,71,0,0,13,0,0.0,0
78,1,train,Give me the associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/collaboration> ?artist .
  FILTER (isLiteral(?artist) && langMatches(lang(?artist), ""en""))
}
```

Note: The exact property used (`<http://dbpedia.org/ontology/collaboration>`) might need adjustment based on the actual schema in DBpedia, as it can vary or be updated. If this specific property does not yield results, exploring similar properties like `<http://dbpedia.org/property/musicalArtist>` could be necessary.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
871,32,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?parent WHERE {
  # Find children of Frederick Stanley, 16th Earl of Derby
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  
  # Identify the parent(s) of these children
  ?parent <http://dbpedia.org/ontology/child> ?child .

  UNION

  # Find awardees of Commander of the Royal Victorian Order
  ?awardee <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  
  # Identify the parent(s) of these awardees
  ?parent <http://dbpedia.org/ontology/child> ?awardee .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
375,9,train,"Give me the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .

  ?artist <http://dbpedia.org/property/dateOfDeath> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?artist <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Musical_artists> .
  ?movie <http://dbpedia.org/ontology/starring> ?artist .

}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
59,6,train,"Give me the manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsClub108069068>.
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerClub118070067>.
  
  ?player <http://dbpedia.org/ontology/team> ?club .
  ?player <http://dbpedia.org/property/playerManager> ?manager .
  
  OPTIONAL {
    ?relatedEntity <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Jamie_McCunnie> .
    ?relatedEntity <http://dbpedia.org/ontology/sameAs> ?player .
  }
}
```",2,4,3,2,1,2,2,9,0,0,7,0,0.0,0
513,13,train,Give me the entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/George_Hamilton_Cameron> <http://dbpedia.org/ontology/award> ?award .
}
```",3,3,4,3,1,3,2,20,0,0,87241,0,0.0,0
687,5,train,"Give me the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?film WHERE {
  ?film a <http://dbpedia.org/ontology/Film> .
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q13442814> . # Assuming Q13442814 is the identifier for ""work""
  OPTIONAL {
    ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
119,34,train,"Give me the tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Santiago_de_Compostela> .
  ?event a <http://dbpedia.org/ontology/Event> .
  
  OPTIONAL { 
    ?leader <http://dbpedia.org/property/office> ?office .
    ?leader <http://dbpedia.org/ontology/participatedIn> ?event .
    ?leader <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Anxo_Quintana> .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
633,2,train,"Give me the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . }","```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> .
  ?child a dbo:RoyalFamilyMember .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
628,11,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist dbo:bandMember ?result .
  ?result <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musical_artist> .
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
609,43,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?governorBirthPlace WHERE {
  # Find Paulus Powell's birth place which is a region and administrative region
  <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?region .
  ?region <http://www.w3.org/2000/01/rdf-schema#label> ?regionLabel .
  FILTER(CONTAINS(LCASE(?regionLabel), ""region"") && CONTAINS(LCASE(?regionLabel), ""administrative region""))

  # Find the governor of that region
  ?governor <http://dbpedia.org/ontology/governor> ?region .
  FILTER EXISTS { ?governor <http://dbpedia.org/ontology/politician> [] } .

  # Get the birth place of the governor
  ?governor <http://dbpedia.org/ontology/birthPlace> ?governorBirthPlace .

  # Find Vince Gilligan's birth place
  OPTIONAL {
    <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?vinceGilliganBirthPlace .
  }

  # Find Cece Bell's birth place
  OPTIONAL {
    <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?ceceBellBirthPlace .
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
414,8,train,Give me the award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?prize a dbo:NobelPrize .
  ?prize <http://dbpedia.org/ontology/awardCategory> ""Physics"" .
  ?prize <http://www.wikidata.org/entity/P166> ?award .
}
```",2,2,3,2,1,3,2,20,0,0,87,0,0.0,0
737,34,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .

  ?predecessor <http://dbpedia.org/ontology/successor> ?child . # Assuming a familial or hierarchical context

  ?predecessor <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
249,7,train,"Give me the native of India and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
SELECT ?result WHERE {
  # Find individuals who are natives of India
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/India> .
  
  # Identify works associated with Jamsetji Tata that are Indian
  ?work dbo:creator <http://dbpedia.org/resource/Jamsetji_Tata> .
  ?work <http://www.wikidata.org/entity/P17> <http://www.wikidata.org/entity/Q28> . # Q28 is the identifier for India

  # Ensure the person is associated with the work
  ?person dbo:birthPlace ?work .

  BIND(?person AS ?result)
}
```",3,4,4,2,2,2,2,9,0,0,21,0,0.0,0
871,8,train,"Who is the child, that is a politician, of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""politician""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
687,32,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?result WHERE {
  # Find person born on 1955-02-22 who is an athlete
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/property/occupation> ?athlete .

  # Find actor in All or Nothing: Manchester City who is a soccer player and an athlete
  OPTIONAL {
    <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/property/occupation> ?soccerPlayer .
    FILTER(?soccerPlayer = ""Soccer player"" || ?soccerPlayer = ""Athlete"")
  }

  # Ensure the person and actor are the same
  FILTER(?person = ?actor)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
78,3,train,"Give me the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh"" .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
347,24,train,"Give me the child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT DISTINCT ?child WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .
  
  OPTIONAL { 
    ?grandchild <http://dbpedia.org/ontology/father> ?father .
    FILTER(?father = ?child)
    ?grandchild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
585,1,train,Give me the child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
39,58,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Singer> .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/profession> ?v1 .
    ?alterEgo <http://dbpedia.org/ontology/allegedAlterEgo> <http://dbpedia.org/resource/The_Shadow> .
    ?person <http://dbpedia.org/property/profession> ?alterEgo .
  }
  
  OPTIONAL {
    ?band <http://dbpedia.org/ontology/member> ?person .
    ?member <http://dbpedia.org/ontology/birthName> ""Bob Thompson"" .
    ?member <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musical_artist> .
  }
  
  FILTER(?result = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,3,0,0.0,0
119,52,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  # Leader of an administration event related to Anxo Quintana
  ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Anxo_Quintana> .
  ?event <http://dbpedia.org/ontology/leader> ?result .
  
  # Tenant of Álvaro Quirós' residence in a country
  ?residence <http://dbpedia.org/property/residence> ?country .
  ?residence <http://dbpedia.org/ontology/tenant> ?result .
  ?country <http://dbpedia.org/resource/Álvaro_Quirós> .

  # Tenant of Santiago de Compostela
  ?santiagoResidence <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Santiago_de_Compostela> .
  ?santiagoResidence <http://dbpedia.org/ontology/tenant> ?result .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,39,train,"Give me the spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/parent> ?spouse .
    ?predecessor <http://dbpedia.org/ontology/successor> ?child .
    
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Phyu> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    
    FILTER (?predecessor = ?father)
    BIND(?predecessor AS ?result)
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
585,3,train,"Give me the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/ontology/receiver> ?result .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
  FILTER (CONTAINS(LCASE(?awardLabel), ""american"") && CONTAINS(LCASE(?awardLabel), ""settlement""))
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
119,43,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Spain> .
  ?result <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Spanish_people> .

  OPTIONAL { 
    ?residence <http://dbpedia.org/ontology/residence> ?result .
    ?residence <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Santiago_de_Compostela> .
  }

  OPTIONAL {
    ?officeHolder <http://dbpedia.org/ontology/officeHolder> ?result .
    ?officeHolder <http://dbpedia.org/property/name> ""Alberto Núñez Feijóo""@en .
  }
}
```",5,7,6,3,3,3,3,71,0,1,1,0.0,0.0,0
687,45,train,"Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?result WHERE {
  # Players associated with Juan Carlos Molina
  ?team1 <http://dbpedia.org/ontology/team> ?molina .
  ?molina <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> .
  ?player1 <http://dbpedia.org/ontology/player> ?team1 .

  # Players associated with Sergio Agüero
  ?team2 <http://dbpedia.org/ontology/team> ?aguero .
  ?aguero <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> .
  ?player2 <http://dbpedia.org/ontology/player> ?team2 .

  # Check if the player is the same for both Molina and Agüero
  FILTER (?player1 = ?player2)
  
  # Find a person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Birth_date> ?birthDate .
  
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/property/profession> ?profession1 .
  ?person <http://dbpedia.org/property/profession> ?profession2 .

  # Ensure the person is both a soccer player and manager
  FILTER (?profession1 = ""soccer player"" && ?profession2 = ""soccer manager"")

  # Check if this person matches the player found earlier
  FILTER (?player1 = ?person)
  
  BIND(?player1 AS ?result)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
293,39,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Find the spouse of Roger Pryor (actor)
  <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Identify Tisha Sterling's parents and their birth names
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/birthName> ?birthName .
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> .
    
    # Find a person with the same birth name as one of Tisha Sterling's parents
    ?result <http://dbpedia.org/ontology/birthName> ?birthName .
  }
  
  # Ensure the spouse matches the result found by birth name
  FILTER(?spouse = ?result)
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
687,13,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (
    EXISTS { ?v1 <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q9310> } . # Q9310 is the identifier for ""soccer player""
    EXISTS { ?result <http://dbpedia.org/ontology/athleteOfSport> <http://dbpedia.org/resource/Soccer> }
  )
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
68,15,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> .
  
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> .
    ?result <http://dbpedia.org/ontology/father> ?parent .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
80,22,train,Give me the actor of Shelby Oaks and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  }
}
```",3,3,4,2,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
353,49,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify spouse of Constance of Burgundy who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find child of this spouse
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .

  # Step 3: Find grandchild of this spouse
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .

  # Step 4: Identify parent of Roger III, Duke of Apulia
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .

  # Step 5: Find the individual who is both a child of the grandchild and the parent of Roger III
  ?result <http://dbpedia.org/ontology/birthParent> ?grandchild .
  ?result <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
347,30,train,"Give me the child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> .
  ?father <http://dbpedia.org/ontology/child> ?result .
  
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> .

  OPTIONAL {
    ?result <http://dbpedia.org/property/occupation> ?v1 .
    FILTER(CONTAINS(LCASE(?v1), ""commander"") && CONTAINS(LCASE(?v1), ""thirty years' war""))
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
628,54,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?person <http://dbpedia.org/property/stateOrProvince> ""Florida"" .
  
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  ?otherPerson <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?otherPerson <http://dbpedia.org/property/stateOrProvince> ""Florida"" .
  ?otherPerson <http://dbpedia.org/property/birthName> ?birthName .

  ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musical_artist> .
  
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?associatedArtist .
  ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Bobby_Shmurda> .

  FILTER (?person = ?bandMember)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,39,train,Give me the actor of ATL (film) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result .
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
  }
}
```",4,4,5,3,2,3,3,71,4,4,0,0.5,1.0,0.6666666666666666
737,39,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> .
  
  ?result <http://dbpedia.org/ontology/parent> ?parent .
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
531,5,train,"Give me the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?force WHERE {
  ?force <http://dbpedia.org/ontology/involves> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
  ?force rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
  ?force rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
595,22,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Disease> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .
  ?war <http://dbpedia.org/property/involvesMilitaryBranch> <http://dbpedia.org/resource/United_States_Navy> .
  
  ?result <http://dbpedia.org/ontology/commanderInWar> ?war .
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,47,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?greatGrandchild WHERE {
  # Step 1: Find Alexander's child
  ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)> .
  
  # Step 2: Find Alexander's grandchild
  ?grandChild <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Find Alexander's great-grandchild
  ?greatGrandchild <http://dbpedia.org/ontology/parent> ?grandChild .

  # Step 4: Identify Philipp Albrecht's child
  ?philippChild <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
  
  # Find the predecessor of Philipp Albrecht's child
  OPTIONAL { 
    ?predecessor <http://dbpedia.org/ontology/successor> ?philippChild .
    
    # Step 5: Match great-grandchild with predecessor
    FILTER (?greatGrandchild = ?predecessor)
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,26,train,Give me the parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?father ?mother WHERE {
  <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/property/profession> ?profession .
  OPTIONAL { 
    <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/ontology/father> ?father .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin> <http://dbpedia.org/ontology/mother> ?mother .
  }
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
143,3,train,"Give me the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring <http://dbpedia.org/resource/Afeez_Oyetoro> .
}
```",1,2,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
905,48,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Philip's grandparent as royalty
  ?grandparent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
  ?grandparent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the father of this grandparent
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Ensure the person is a child of someone who is a royal descendant of Béla IV of Hungary
  ?child <http://dbpedia.org/ontology/parent> ?father .
  ?descendant <http://dbpedia.org/ontology/parent> ?child .
  ?descendant <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?descendant <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Béla_IV_of_Hungary> .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,24,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?office WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Central_African_Republic_Civil_War> .
  ?person <http://dbpedia.org/property/politician> true .
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .

  OPTIONAL {
    <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/officeHolder> ?office .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,23,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  
  ?result <http://dbpedia.org/ontology/successor> ?child .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
905,52,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Child of Stephen V of Hungary
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  
  # Parent of the father of Charles I of Hungary
  ?grandfather <http://dbpedia.org/ontology/parent> ?fatherOfCharlesI .
  ?fatherOfCharlesI <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_I_of_Hungary> .
  
  # Spouse of the father of the parent of Philip, Despot of Romania
  ?parentOfPhilip <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> .
  ?grandfatherOfPhilip <http://dbpedia.org/ontology/parent> ?parentOfPhilip .
  
  # Check if the child of Stephen V is also the parent of Charles I's father and spouse of Philip's grandfather
  FILTER (?child = ?result)
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/spouse> ?grandfatherOfPhilip .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
68,23,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Find a child of Philip I of Castile who is royalty
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Philip_I_of_Castile> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Find the father of this child
  ?result <http://dbpedia.org/ontology/birthParent> ?child .

  # Ensure this person is also a grandfather to Dorothea of Denmark, Electress Palatine
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> .
    ?result <http://dbpedia.org/ontology/birthParent> ?parent .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
263,3,train,"Give me the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace rdf:type dbo:Region .
  ?birthplace rdf:type dbo:Country .
}
```",1,3,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
103,39,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/property/alterEgo> ?v1 .
  ?v1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 is the identifier for ""comics character""
  
  ?result <http://dbpedia.org/ontology/allegedPerpetrator> ?v1 .
  ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Actor> .
}
```",4,5,5,3,2,3,3,71,0,0,4210,0,0.0,0
225,12,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
SELECT ?birthplace WHERE {
  ?recipient <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?recipient <http://dbpedia.org/property/birthPlace> ?birthplace .
  ?awards <http://dbpedia.org/ontology/receiver> ?recipient .
  FILTER EXISTS { 
    ?awards <http://www.w3.org/2000/01/rdf-schema#label> ""Anita Borg Institute Women of Vision Awards""@en
  }
  ?birthplace <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Japan> .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
295,16,train,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of Victor Saville.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
SELECT ?writer WHERE {
  ?work <http://dbpedia.org/ontology/writtenBy> ?writer .
  ?work <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Musical_work> .
  ?work <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Apache_Indian> .

  ?victor <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  FILTER(?victor = <http://dbpedia.org/resource/Victor_Saville>) .

  ?writer <http://dbpedia.org/ontology/birthPlace> ?birthplace .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
263,10,train,Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Hon._Mary_Frances_Bowes-Lyon> <http://dbpedia.org/ontology/fatherOrMother> ?parent .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
203,18,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/property/commander> ?commander .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/ontology/militaryForce> ?force1 .
    ?commander <http://dbpedia.org/ontology/memberOf> ?force1 .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/ontology/militaryForce> ?force2 .
    ?commander <http://dbpedia.org/ontology/memberOf> ?force2 .
  }
}
```",3,3,4,1,3,3,3,71,0,49,1,0.0,0.0,0
816,39,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT DISTINCT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Amy_Arbus> .

  ?result <http://dbpedia.org/ontology/parent> ?child .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Amy_Arbus> .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,2,train,Give me the commander in Great Turkish War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Great_Turkish_War> dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,40,0,0,1.0,1.0,1.0
103,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?alterEgo ?profession WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  OPTIONAL { 
    ?alterEgo <http://dbpedia.org/property/occupation> ?profession .
  }
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
737,56,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Child of Albrecht, Duke of Württemberg
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .
  
  # Predecessor of the child of Philipp Albrecht, Duke of Württemberg
  ?philippChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> .
  ?child <http://dbpedia.org/ontology/successor> ?philippChild .

  # Child of the child that is royalty
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
  ?grandchild <http://www.wikidata.org/entity/P31> <http://www.wikpedia.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Parent of Archduchess Margarete Sophie of Austria
  OPTIONAL {
    ?ancestor <http://dbpedia.org/ontology/parent> ?result .
    ?ancestor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Margarete_Sophie_of_Austria> .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,17,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?team WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^xsd:date .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""sports manager"")) .

  ?person <http://dbpedia.org/property/team> ?team .
  
  ?team a <http://dbpedia.org/ontology/SoccerClubSeason> ;
        a <http://dbpedia.org/ontology/SportsSeason> ;
        a <http://dbpedia.org/ontology/SportsTeamSeason> .
}
```",2,6,3,2,1,3,3,71,0,0,5,0,0.0,0
412,18,train,Give me the war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v0 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?war ?entityInAthens WHERE {
  ?awardee <http://dbpedia.org/property/someProperty> ""30"" .
  ?awardee <http://dbpedia.org/ontology/war> ?war .
  
  OPTIONAL { 
    ?entityInAthens <http://www.w3.org/2008/05/skos#subject> <http://dbpedia.org/resource/Athens> .
    ?entityInAthens <http://dbpedia.org/ontology/involvesWar> ?war .
  }
}
```

Note: The property `<http://dbpedia.org/property/someProperty>` is a placeholder and should be replaced with the actual DBpedia property that indicates ""awardee of 30."" Similarly, `<http://www.w3.org/2008/05/skos#subject>` and `<http://dbpedia.org/ontology/involvesWar>` are used as examples and may need adjustment based on available data in DBpedia.",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
353,6,train,"Who is the child, that is a royalty, of William I of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/William_I_of_Sicily> <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""royalty""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,22,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Janet_Gaynor> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie108069068> .
  ?movie <http://dbpedia.org/ontology/work> ?work .
  ?work <http://www.w3.org/2002/07/owl#sameAs> ?movie . # Ensures it's a work
  ?movie <http://dbpedia.org/property/producer> ?result .
  ?result <http://dbpedia.org/property/profession> ?v1 .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,36,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in Thirty Years' War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Find Maria Anna of Bavaria's father
  <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1616)> <http://dbpedia.org/ontology/father> ?father .
  
  # Find the child of this father who is royalty
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  
  # Ensure the child was a commander in the Thirty Years' War
  ?child <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""commander"") && CONTAINS(LCASE(?v1), ""thirty years' war""))
  
  BIND(?child AS ?result)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
263,5,train,"Give me the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,2,3,28,3,4,0,0.42857142857142855,1.0,0.6
769,7,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Athletes100003501> . # Assuming this class represents athletes
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerPlayers100000001> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsManagers100000001> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerManagers100000001> .
}
```",2,6,3,2,1,3,2,20,0,0,6,0,0.0,0
203,27,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  ?event <http://dbpedia.org/ontology/person> ?person ;
         <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Event> ;
         <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .
  ?event <http://dbpedia.org/property/militaryForce> ?result .
}
```",3,5,4,3,1,3,3,71,0,0,4831,0,0.0,0
628,27,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?award ?band ?nativePlace WHERE {
  ?award <http://dbpedia.org/ontology/location> ?location .
  ?location rdf:type ?type .
  
  FILTER (
    (?type = <http://dbpedia.org/class/yago/NewYorkState108930069>
     || ?type = <http://dbpedia.org/class/yago/AmericanStatesAndTerritories108930070>)
    && EXISTS { ?award <http://dbpedia.org/ontology/recipient> ?band . }
  )
  
  ?band rdf:type <http://dbpedia.org/ontology/Band> .
  ?band <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
  ?band <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",3,8,4,3,1,3,3,71,0,0,8569,0,0.0,0
159,40,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?successor WHERE {
  # Find Michał Kazimierz Pac's successor who is a politician and office holder
  ?pac <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?successor <http://www.wikidata.org/entity/P39> ?office . # Office holder

  # Ensure the successor was a commander in the Great Turkish War
  ?successor <http://dbpedia.org/ontology/commanderInWar> <http://dbpedia.org/resource/Great_Turkish_War> .

  # Reference to George Ducas
  OPTIONAL { 
    ?reference <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/George_Ducas> .
    ?successor <http://dbpedia.org/ontology/referencedBy> ?reference .
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,56,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?person WHERE {
  # Step 1: Identify Ackquille Jean Pollard by birth name
  ?person <http://dbpedia.org/ontology/birthName> ""Ackquille Jean Pollard"" .
  
  # Step 2: Find band member of the associated musical artist of Bobby Shmurda
  ?artist <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Bobby_Shmurda> .
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .

  # Step 3: Native of the award, which is a region and American state and settlement
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ?region .
  ?region <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
  ?region <http://dbpedia.org/ontology/type> ?type1 .
  ?region <http://dbpedia.org/ontology/type> ?type2 .
  FILTER(?type1 IN (<http://dbpedia.org/ontology/Region>, <http://dbpedia.org/ontology/Settlement>) && ?type2 = <http://dbpedia.org/ontology/AdministrativeDivision>)
  
  # Find the awardee band from New York
  ?band <http://dbpedia.org/property/location> <http://dbpedia.org/resource/New_York_(state)> .
  ?band <http://dbpedia.org/ontology/award> ?award .

  # Ensure person is native to this region
  ?person <http://dbpedia.org/ontology/nativePlace> ?region .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
756,38,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
SELECT ?manager WHERE {
  # Step 1: Find Thomas Letsch's teams
  ?team <http://dbpedia.org/ontology/team> ?letsch .
  ?letsch foaf:name ""Thomas Letsch"" .

  # Step 2: Ensure the team is part of a soccer club season, sports season, and sports team season
  ?team <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?team <http://dbpedia.org/ontology/seasonType> ?seasonType .
  FILTER (?seasonType IN (<http://dbpedia.org/resource/Soccer_club_season>, 
                         <http://dbpedia.org/resource/Sports_season>, 
                         <http://dbpedia.org/resource/Sports_team_season>))

  # Step 3: Find the manager of these teams
  ?team <http://dbpedia.org/ontology/coach> ?manager .

  # Step 4: Ensure the manager is native to Theodor Heuss's administration country (Germany)
  ?manager foaf:nationality <http://dbpedia.org/resource/Germany> .
  
  # Optional: Verify Theodor Heuss's administrative role in Germany
  OPTIONAL {
    ?heuss dbo:officeHolderOf <http://dbpedia.org/resource/President_of_Germany> .
    ?heuss foaf:name ""Theodor Heuss"" .
  }
}
```",4,8,5,2,2,3,3,71,0,0,3,0,0.0,0
203,61,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Part 1: Find the war related to William Bayne and its military force
  ?war <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/William_Bayne> .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/militaryForce> ?militaryForce1 .

  # Part 2: Find the awardee of Knight Commander of the Order of the Bath
  ?person <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  
  # Part 3: Identify an event related to this person that is both a general and societal event
  ?event <http://dbpedia.org/ontology/person> ?person .
  ?event a <http://dbpedia.org/ontology/Event> .
  ?event a <http://dbpedia.org/ontology/SocietalEvent> .

  # Part 4: Find the military force involved in this event
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce2 .
}
```",6,10,7,3,2,3,3,71,0,0,24,0,0.0,0
87,20,train,Give me the actor of Always (1989 film) and actor of Paradise (2013 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Actor of ""Always"" (1989 film)
  <http://dbpedia.org/resource/Always_(film)> <http://dbpedia.org/ontology/starring> ?result .
  
  # Actor of ""Paradise"" (2013 film)
  <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result .

  # Spouse of an awardee related to Janusz Kamiński
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/nominee> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kami%C5%84ski> .
    ?awardee <http://dbpedia.org/ontology/spouse> ?result .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
871,4,train,Who is the awardee of Commander of the Royal Victorian Order?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/honoraryTitle> ""Commander of the Royal Victorian Order""@en .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
871,38,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .
  
  FILTER EXISTS { 
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MaleHuman100000001> .
  }
  
  ?parent <http://dbpedia.org/property/occupation> ?v1 .
  FILTER CONTAINS(LCASE(?v1), ""politician"")
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,11,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie a owl:Thing .
  ?movie dbo:starring <http://dbpedia.org/resource/Audrey_Hepburn> .
  ?movie dbo:starring ?actor .
}
```",2,4,3,2,1,2,3,28,62,11,0,0.8493150684931506,1.0,0.9185185185185185
816,54,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  # Parent of Doon Arbus
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Doon_Arbus> .
  
  # Actor in a movie with Herschel Bernardi that is classified as a work
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CreativeWork108069068> .

  # Parent of someone with the same profession as Eugène Cattin
  ?eugeneProf <http://dbpedia.org/property/profession> ?profession .
  FILTER(?eugeneProf = <http://dbpedia.org/resource/Eug%C3%A8ne_Cattin>)
  
  ?parent2 <http://dbpedia.org/ontology/birthParent> ?child .
  ?child <http://dbpedia.org/property/profession> ?profession .

  # Ensure the same person satisfies all conditions
  FILTER(?parent = ?parent2)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,52,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
SELECT ?result WHERE {
  # Child of the parent of the child (Royalty) of Roger II of Sicily
  ?child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?child1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?parent1 <http://dbpedia.org/ontology/child> ?child1 .

  # Father of the child (Royalty) of William I of Sicily
  ?child2 <http://dbpedia.org/ontology/father> ?result .
  ?child2 <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/William_I_of_Sicily> .
  ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Child of Elvira of Castile, Queen of Sicily
  ?result <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
782,48,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
SELECT ?associatedArtist ?bandRealName WHERE {
  # Find Nick Curran by birth name and his associated musical artist
  ?nickCurran <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?nickCurran <http://dbpedia.org/property/associatedBand> ?associatedArtist .

  # Find Kim Wilson's band and its real name
  ?kimWilson <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/realName> ?bandRealName .
  
  FILTER(?nickCurran != ?kimWilson) # Ensure we are not conflating the two individuals
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
103,32,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?result WHERE {
  # Get Shatrughan Sinha's profession
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?profession .

  # Find entities with the same profession as Shatrughan Sinha
  ?person <http://dbpedia.org/property/occupation> ?profession .
  
  # Ensure this person is an actor in a movie that is also a television show featuring Richard E. Grant
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film100000001> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow1000000> .
  ?movie <http://dbpedia.org/ontology/starring> ?person .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E_Grant> .

}
```",4,5,5,2,2,3,3,71,0,0,28,0,0.0,0
782,61,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
SELECT ?band ?associatedArtist WHERE {
  # Part 1: Band of a band member born on March 30, 1945
  ?person <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^xsd:date .
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q215627> . # Musical artist
  ?person <http://dbpedia.org/property/memberOf> ?band .

  # Part 2: Associated musical artist of Nick Curran's persona
  OPTIONAL {
    ?nickCurran <http://www.wikidata.org/entity/P735> ?persona .
    ?associatedArtist <http://www.wikidata.org/entity/P527> ?persona . # Assuming P527 is ""has part"" or similar for association
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
472,3,train,"Give me the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Christian_Ditlev_Ammenborg_Hansen> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace a <http://dbpedia.org/class/yago/PopulatedPlace108069627> . # Assuming this class represents settlements
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
687,26,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
SELECT ?result WHERE {
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  
  ?actor <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (
    EXISTS { ?v1 <http://www.w3.org/2000/01/rdf-schema#label> ""soccer player""@en }
    && EXISTS { ?v1 <http://www.w3.org/2000/01/rdf-schema#label> ""athlete""@en }
  )
  
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/player> ?result .
  }
}
```",3,6,4,3,1,3,3,71,0,0,7,0,0.0,0
756,51,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
SELECT DISTINCT ?native WHERE {
  # Step 1: Find Theodor Heuss's administered country
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/ontology/administeredCountry> ?country .

  # Step 2: Identify a native of that country who is a manager of a soccer club season
  ?native <http://dbpedia.org/property/nationality> ?country .
  ?native <http://dbpedia.org/ontology/manager> ?team .
  
  # Ensure the team is a soccer club season
  ?team <http://dbpedia.org/ontology/team> ?sportsTeam .
  ?sportsTeam <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .

  # Step 3: Find the sports manager born on 1968-08-26
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Sports_Manager_Born_1968-08-26> .
  ?person <http://dbpedia.org/property/birthDate> ""1968-08-26""^^xsd:date .

  # Step 4: Link the manager to the team managed by the person identified in step 3
  ?team <http://dbpedia.org/ontology/team> ?sportsTeam .
  ?person <http://dbpedia.org/ontology/manager> ?sportsTeam .
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
531,25,train,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?rajoyOffice ?partyLeaderOffice WHERE {
  # Office held by Mariano Rajoy
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/office> ?rajoyOffice .
  
  # Leader of the Conservative Republican Party (Spain)
  OPTIONAL {
    <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/ontology/president> ?leader .
    ?leader <http://dbpedia.org/ontology/office> ?partyLeaderOffice .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
347,8,train,Give me the father of Cecilia Renata of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,33,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?force ?war WHERE {
  # Find the force of the awardee of Quincy Adams Gillmore's award
  ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
  ?gillmore <http://dbpedia.org/ontology/militaryService> ?force .

  # Find the war in which Amasa Tracy participated
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/property/war> ?war .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
80,3,train,Give me the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,3,3,71,0,2,3,0.0,0.0,0
816,46,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
SELECT DISTINCT ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/work> ?v1 .
  ?movie <http://dbpedia.org/ontology/movie> ?v2 .
  
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> .
  ?child <http://dbpedia.org/ontology/familyName> ?v3 .
  ?child <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Photographer> .
  ?person <http://dbpedia.org/ontology/parent> ?child .

  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
263,8,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/property/birthPlace> ?birthplace .
  
  ?birthplace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  ?native <http://dbpedia.org/ontology/nationality> ?birthplace .
}
```",2,4,3,2,1,2,3,28,0,0,935,0,0.0,0
769,9,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Sports_manager> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_manager> .
  
  ?person dbo:birthDate ?birthDate .

  # Get Tony Hollings' birth date
  <http://dbpedia.org/resource/Tony_Hollings> dbo:birthDate ?hollingsBirthDate .

  FILTER (?birthDate = ?hollingsBirthDate)
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
609,5,train,"Give me the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Paulus_Powell> dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Region .
  ?birthPlace rdf:type dbo:AdministrativeRegion .
}
```",1,3,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
198,52,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
SELECT ?war WHERE {
  ?award <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/United_States_Congress> .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  
  ?awardee <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .

  OPTIONAL {
    ?gillmoreAward <http://dbpedia.org/ontology/recipient> ?force .
    ?gillmoreAward <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q12345678> . # Assuming Q12345678 is the identifier for ""Gillmore Medal""
    FILTER(?awardee = ?force)
  }
  
  ?war <http://dbpedia.org/ontology/conflict> ?gillmoreAward .
}
```

Note: The exact property or identifier for the Gillmore Medal should be verified in DBpedia, as it might not directly exist and may need to be inferred from related data.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,37,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .
  ?result <http://dbpedia.org/ontology/father> ?child .
  
  OPTIONAL { 
    ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/William_I> .
    ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 represents an office holder
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
311,12,train,Give me the associated musical artist of Filthy Friends and band member of the writer of No Alternative.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Identify associated musical artists of Filthy Friends
  <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/member> ?result .
  
  # Find the writer of No Alternative
  OPTIONAL { 
    <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?writer .
    
    # Check if the result is a band member of this writer
    ?writer <http://dbpedia.org/ontology/member> ?result .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
103,38,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  
  ?alterEgo <http://dbpedia.org/ontology/profession> ?profession1 .

  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/ontology/profession> ?profession2 .

  FILTER(?profession1 = ?profession2)

  ?result <http://dbpedia.org/ontology/profession> ?profession1 .
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
198,49,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . }","```sparql
SELECT ?entity WHERE {
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  
  ?birthplace <http://www.w3.org/2004/02/skos/core#broader> ?country .
  FILTER (?country = <http://dbpedia.org/resource/United_States>) .

  ?birthplace <http://dbpedia.org/ontology/type> ?type .
  FILTER (?type = <http://dbpedia.org/resource/Settlement>) .

  OPTIONAL {
    ?awardee <http://dbpedia.org/property/war> ?war .
    ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
    ?awardee <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Medal_of_Honor> .
  }
  
  BIND(?birthplace AS ?entity)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
375,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
}
```

This query uses the `dbo:country` property to find entities where Japan is listed as the country. It will return a list of all such entities.",1,1,2,1,1,2,3,28,0,0,104,0,0.0,0
311,7,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/R.E.M.> dbo:associatedMusicalArtist ?intermediate .
  ?intermediate rdf:type dbo:Artist .
  ?intermediate dbo:associatedMusicalArtist ?result .
}
```",2,3,3,2,1,3,2,20,28,0,0,1.0,1.0,1.0
782,50,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?associatedArtist ?band WHERE {
  # Find Nicholas Michael Curran and his associated musical artist
  ?curran a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/2000/01/rdf-schema#label> ""Nicholas Michael Curran""@en .
  
  OPTIONAL { 
    ?curran <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
  }
  
  # Find the person born on March 30, 1945
  ?person a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/P1234567> ; # Placeholder for actual resource ID
          <http://dbpedia.org/property/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> .
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  }
}
```

Note: The placeholder `<http://dbpedia.org/resource/P1234567>` should be replaced with the actual DBpedia resource identifier for a person born on March 30, 1945. This query assumes that such an entity exists and is correctly linked in DBpedia.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
816,40,train,"Give me the parent of Amy Arbus and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  # Find parent of Amy Arbus and Doon Arbus
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Amy_Arbus> .
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Doon_Arbus> .

  # Ensure the parent is an actor in a movie with a decedent at Los Angeles
  ?result <http://dbpedia.org/ontology/starring> ?movie .
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles,_California> .
  ?movie <http://dbpedia.org/ontology/starring> ?decedent .

  # Ensure the actor is the parent found
  FILTER(?parent = ?result)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
37,8,train,"Give me the birthplace of Bob Crewe and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?bobBirthplace ?workBirthplace WHERE {
  # Birthplace of Bob Crewe
  <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?bobBirthplace .

  # Works associated with Ethan Iverson that are both an artist and a musical artist
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Ethan_Iverson> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist100000001> . # Assuming this class represents ""musical artist""
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/birthPlace> ?workBirthplace .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
203,33,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Event108069068> .
  
  OPTIONAL { 
    ?war <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/William_Bayne> .
  }
  
  ?campaign <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?campaign = <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria_(1798–1801)>)
  
  ?war <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
293,47,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Find the ruling party in Central, Louisiana
  ?party <http://dbpedia.org/property/rulingPartyIn> <http://dbpedia.org/resource/Central,_Louisiana> .
  
  # Identify members of this party
  ?member <http://dbpedia.org/ontology/member> ?party .
  ?member <http://www.w3.org/ns/prov#location> <http://dbpedia.org/resource/Central,_Louisiana> .

  # Find films produced by Nat Levine and their actors
  ?film <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Nat_Levine> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .

  # Check if any actor's spouse is a member of the ruling party
  ?actor <http://dbpedia.org/ontology/spouse> ?result .
  
  FILTER (?member = ?result)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
595,46,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Identify the spouse of Bill Clinton who is a politician and office holder
  <http://dbpedia.org/resource/Bill_Clinton> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Ensure this person is an author of Hillary Clinton's work
  ?work1 <http://dbpedia.org/property/author> ?spouse .
  ?work1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000036> . # Assuming this class represents books
  ?work1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Hillary_Clinton> .

  # Ensure this person is an author of Bill Clinton's work
  ?work2 <http://dbpedia.org/property/author> ?spouse .
  ?work2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000036> . # Assuming this class represents books
  ?work2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
628,30,train,"Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ackquille Jean Pollard"" .
  ?person dbo:bandMember <http://dbpedia.org/resource/Uncle_Murda> .

  OPTIONAL {
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
    ?award a <http://dbpedia.org/class/yago/RegionInAmerica108069068> ;
           a <http://dbpedia.org/class/yago/AmericanStateOrSettlement108069068> .

    ?person dbo:nativePlace ?award .
  }
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
203,14,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Robert_Calder> .
  ?event a <http://dbpedia.org/class/yago/SocietalEvent108069068> . # Assuming this class represents societal events
  OPTIONAL { 
    ?event <http://dbpedia.org/property/militaryForce> ?result .
  }
}
```",2,4,3,2,1,3,3,71,0,0,34,0,0.0,0
595,55,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the author of ""An Invitation to the White House""
  ?book <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/An_Invitation_to_the_White_House> .
  ?book <http://dbpedia.org/ontology/author> ?author .

  # Step 2: Check if this author is a politician and office holder
  ?author <http://dbpedia.org/ontology/politician> true .
  ?author <http://dbpedia.org/ontology/officeHolder> true .

  # Step 3: Find the spouse of this author
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 4: Identify a commander in a war that is both a disease and societal event, related to the US Navy
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/war> true .
    ?war <http://dbpedia.org/property/disease> ?disease .
    ?war <http://dbpedia.org/property/societalEvent> true .
    ?commander <http://dbpedia.org/ontology/commander> ?navyUnit .
    ?navyUnit <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States_Navy> .
  }

  # Step 5: Find an author connected to Bill Clinton's works
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/book> true .
    ?work <http://dbpedia.org/ontology/writtenWork> true .
    ?work <http://dbpedia.org/ontology/work> true .
    ?work <http://dbpedia.org/ontology/author> ?clintonAuthor .
    ?clintonAuthor <http://dbpedia.org/resource/Bill_Clinton> .
  }
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
158,24,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Russia> .
  ?result <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Finland> .
}
```",4,5,5,2,2,2,3,28,0,0,126,0,0.0,0
119,14,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Poland> .
  ?person <http://dbpedia.org/property/profession> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""athlete"")) .
  ?person <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Lodz> .

  ?person <http://dbpedia.org/ontology/residence> ?result .
  ?result a <http://www.w3.org/2002/07/owl#Thing> ; 
          <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
  FILTER(CONTAINS(LCASE(?countryLabel), ""country""))
}
```",3,6,4,3,1,3,2,20,0,0,108,0,0.0,0
668,25,train,Give me the person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Joey B""@en .
  ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musician> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,38,train,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?descendant WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .
  ?descendant <http://dbpedia.org/ontology/parent> ?child .

  ?childA <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?descendant <http://dbpedia.org/ontology/parent> ?childA .

  OPTIONAL { 
    ?descendant <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  }
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
347,16,train,Give me the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
SELECT DISTINCT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,57,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify children of Frederick Stanley who are politicians
  ?child <http://dbpedia.org/ontology/father> ?result .
  ?child <http://dbpedia.org/property/politician> true .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .

  # Step 2: Ensure the parent of this child is a politician and office holder related to Edward Stanley
  ?grandparent <http://dbpedia.org/ontology/father> ?child .
  ?grandparent <http://dbpedia.org/property/politician> true .
  ?grandparent <http://dbpedia.org/property/officeHolder> true .
  ?grandparent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> .

  # Step 3: Ensure the result is also a parent of Victor Stanley
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
392,4,train,Give me the member of 1. FC Magdeburg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> .
  OPTIONAL { 
    ?result ?p ?o . # This line is a placeholder to capture any additional references or connections.
  }
}
```",2,2,3,1,2,2,2,9,2,614,0,0.003246753246753247,1.0,0.006472491909385114
293,33,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  ?film <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Nat_Levine> .
  ?film a <http://dbpedia.org/class/yago/Film100000001> . # Assuming this class represents films

  ?actor <http://dbpedia.org/ontology/starring> ?film .
  ?actor <http://dbpedia.org/ontology/spouse> ?spouse .

  ?spouse <http://www.wikidata.org/entity/P102> <http://www.wikidata.org/resource/Q11496> . # Assuming Q11496 is the identifier for the Republican Party (United States)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
198,30,train,"Give me the force of Quincy Adams Gillmore and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  # Force associated with Quincy Adams Gillmore
  ?force <http://dbpedia.org/property/militaryUnitLeader> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
  
  # War in which Amasa Tracy participated
  ?war <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Amasa_Tracy> .

  # Birthplace of Henry Clay Lewis that is a settlement and American
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""settlement"") && CONTAINS(LCASE(?settlementLabel), ""american"")) .

  # Entity that satisfies all conditions
  ?result = ?force .
  ?result = ?war .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
198,32,train,Give me the force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?gillmoreForce ?medalOfHonorWar WHERE {
  # Gillmore Medal awardee's military force
  ?person <http://dbpedia.org/property/receivedAward> <http://dbpedia.org/resource/Gillmore_Medal> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/militaryService> ?gillmoreForce .
  }

  # Medal of Honor awardee's war
  ?recipient <http://dbpedia.org/property/receivedAward> <http://dbpedia.org/resource/Medal_of_Honor> .
  OPTIONAL { 
    ?recipient <http://dbpedia.org/ontology/war> ?medalOfHonorWar .
  }
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
943,17,train,"Who is the father, that is a royalty and an office holder, of the child of Baeda Maryam I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  ?child <http://dbpedia.org/ontology/father> ?father .

  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  OPTIONAL { 
    ?father <http://dbpedia.org/property/occupation> ?office .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,18,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of $pacely.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musician> .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  OPTIONAL {
    ?result <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/$pacely> ;
            <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/$pacely> .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
769,17,train,"Give me the player in Ye Jia and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/player> ?result .
  
  OPTIONAL { 
    ?manager <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Hong_Kong_C> .
    ?manager <http://dbpedia.org/ontology/sportsManager> [] .
    ?manager <http://dbpedia.org/ontology/soccerManager> [] .

    <http://dbpedia.org/resource/Hong_Kong_C> a <http://dbpedia.org/class/yago/SportsClub108069068> ;
        a <http://dbpedia.org/class/yago/SportsTeam108069067> ;
        a <http://dbpedia.org/class/yago/SoccerClub108069070> .
    
    ?result <http://dbpedia.org/ontology/player> ?manager .
  }
}
```",4,10,5,3,2,3,2,20,0,0,2,0,0.0,0
557,46,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?result WHERE {
  ?alterEgo <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/Kent_Allard> .
  ?alterEgo <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q33999> . # Assuming Q33999 is the identifier for ""fictional character""
  
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/claimToFame> <http://dbpedia.org/resource/Cora_Sue_Collins> .
    ?work <http://dbpedia.org/ontology/producer> ?result .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
687,24,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/ontology/starring> ?result .
  
  # Ensure the person is both a soccer player and an athlete
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (?v1 = ""soccer player"" || ?v1 = ""athlete"") .

  # Check if they were on the same team as Pablo Aimar
  OPTIONAL {
    ?pabloAimarTeam <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Pablo_Aimar> .
    ?result <http://dbpedia.org/ontology/teamMember> ?pabloAimarTeam .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
398,14,train,Give me the player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
SELECT ?player WHERE {
  ?work <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> .
  OPTIONAL { 
    ?work <http://dbpedia.org/property/playerIn> ?player .
  }
}
```",3,3,4,3,1,3,2,20,0,0,17,0,0.0,0
140,15,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/war> ?societalEvent .
  ?pickettCharge <http://dbpedia.org/property/militaryForce> ""Pickett's Charge"" .
  ?pickettCharge <http://dbpedia.org/ontology/commander> ?result .
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/politicalAffiliation> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
  }
}
```",4,5,5,3,2,3,2,20,0,0,4,0,0.0,0
557,19,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
557,48,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
SELECT ?result WHERE {
  ?alterEgo <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/Kent_Allard> .
  ?alterEgo <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q33999> . # Assuming Q33999 is the identifier for ""fictional character""
  
  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/producer> ?result .
    ?movie <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/property/claimToFame> . # Assuming this property links to her claim to fame
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
595,44,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  # Find works authored by Bill Clinton that are written works and books
  ?work <http://dbpedia.org/ontology/author> ?result .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Book106557786> .
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Clinton> .

  # Find wars characterized as diseases and societal events where the individual was a commander in the United States Navy
  OPTIONAL {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Disease106557786> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
    ?result <http://dbpedia.org/ontology/commanderInWar> ?war .
    ?war <http://dbpedia.org/property/nationInvolved> <http://dbpedia.org/resource/United_States_Navy> .
  }

  # Ensure the individual is identified as the spouse of Hillary Clinton
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
198,1,train,Give me the force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/commanderOf> ?force .
}
```

This query assumes the use of `dbo:commanderOf` to find military forces associated with Quincy Adams Gillmore. If this property does not yield results, alternative properties like `dbo:militaryUnit` or similar might be considered.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
557,53,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Producer of Janet Gaynor's claim to fame (assuming ""Seventh Heaven"" as her claim to fame)
  <http://dbpedia.org/resource/Seventh_Heaven_(1927_film)> <http://dbpedia.org/ontology/producer> ?result .
  
  # Producer of The Adventures of Tom Sawyer (1938 film)
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result .

  # Professional involvement with Kent Allard's alter ego
  OPTIONAL {
    ?alterEgo <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q215627> . # Assuming Q215627 is the identifier for ""fictional character""
    ?alterEgo <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Kent_Allard> .
    ?result <http://dbpedia.org/ontology/profession> ?v1 .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
609,23,train,Give me the birth place of the awardee of the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT DISTINCT ?awardee ?birthPlace WHERE {
  <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/award> ?award .
  ?awardee <http://dbpedia.org/property/award> ?award .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER(?awardee != <http://dbpedia.org/resource/Vince_Gilligan>)
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
782,37,train,"Give me the associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result ?band WHERE {
  <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/collaborator> ?result .
  
  FILTER (?result != <http://dbpedia.org/resource/Nick_Curran>) .

  ?result <http://dbpedia.org/property/birthDate> ""1945-03-30""^^xsd:date .
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/member> ?band .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,33,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/Lamont_Cranston> .
  ?entity <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> .
  BIND(?entity AS ?result)
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
687,14,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?result ?team WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> .
  FILTER EXISTS { 
    ?person <http://dbpedia.org/property/occupation> ?o .
    VALUES ?o { <http://dbpedia.org/resource/Soccer_player> <http://dbpedia.org/resource/Soccer_manager> }
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/team> ?team .
  }

  BIND(?person AS ?result)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
941,2,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
859,11,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  
  ?artist <http://dbpedia.org/ontology/member> ?band .
  
  ?band a <http://dbpedia.org/class/yago/Band115069068> ; # Assuming this is the class for ""band""
        a <http://dbpedia.org/class/yago/MusicalGroup115069068> . # Assuming this is the class for ""group""
        
  OPTIONAL {
    ?band <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> .
  }
}
```",3,6,4,2,2,3,2,20,0,0,5,0,0.0,0
756,52,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
SELECT ?result WHERE {
  # Find Theodor Heuss's country of origin or administration
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/ontology/nationality> ?country .
  
  # Identify a manager associated with a sports club that is an organization and soccer club
  ?club <http://www.w3.org/2000/01/rdf-schema#label> ""VfL Bochum""@en ;
        <http://dbpedia.org/ontology/type> ?type1, ?type2 .
  FILTER(?type1 = <http://dbpedia.org/resource/Sports_club> && 
         (?type2 = <http://dbpedia.org/resource/Organisation> || ?type2 = <http://dbpedia.org/resource/Football_club>)).
  
  # Find the successor season of 2006–07 VfL Bochum
  <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?successorSeason .
  
  # Identify manager of the club in the successor season
  ?result <http://dbpedia.org/ontology/manager> ?club ;
          <http://dbpedia.org/property/seasonManaged> ?successorSeason .

  # Manager of SBV Vitesse during the 2020–21 season
  OPTIONAL {
    ?vitesseManager <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/SBV_Vitesse> ;
                    <http://dbpedia.org/property/seasonManaged> <http://dbpedia.org/resource/2020%E2%80%9321_SBV_Vitesse_season> .
    FILTER(?result = ?vitesseManager)
  }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
706,16,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?awardeeBirthplace ?actorBirthplace WHERE {
  # Find birthplace of awardees of Sangeet Natak Akademi Fellowship
  ?person <http://dbpedia.org/property/sangeetNatakAkademiFellowship> ?fellowship .
  ?person <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthplace .

  # Find birthplace of actors of ""Akaler Shandhaney""
  <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/birthPlace> ?actorBirthplace .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
203,32,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Part 1: Military Force of William Bayne's War
SELECT ?war ?militaryForce WHERE {
  <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/participatedIn> ?war .
  ?war <http://dbpedia.org/property/militaryConflict> ""true""^^xsd:boolean .
  ?war <http://dbpedia.org/property/event> ""true""^^xsd:boolean .
  ?war <http://dbpedia.org/property/militaryForce> ?militaryForce .
}

# Part 2: Commander in the War of 30th (Cambridgeshire) Regiment of Foot
SELECT ?war ?commander WHERE {
  <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/participatedIn> ?war .
  ?war <http://dbpedia.org/property/militaryConflict> ""true""^^xsd:boolean .
  ?war <http://dbpedia.org/property/event> ""true""^^xsd:boolean .
  ?commander <http://dbpedia.org/ontology/commanderOf> ?war .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
419,4,train,Give me the alma mater of Chennupati Jagadish and entity in Andhra Pradesh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
SELECT ?almaMater ?entity WHERE {
  <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Andhra_Pradesh> .
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Chennupati_Jagadish> .
  }
}
```",2,2,3,1,2,2,2,9,2,2,0,0.5,1.0,0.6666666666666666
103,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
270,2,train,"Who is the person born, that is a politician, as Ada Jane Low?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Ada Jane Low"" .
  ?person <http://dbpedia.org/ontology/occupation> ?v1 .
  FILTER (CONTAINS(LCASE(?v1), ""politician""))
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
687,54,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^xsd:date .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Athletes100000031> .

  OPTIONAL {
    ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
    ?film <http://dbpedia.org/ontology/starring> ?person .
  }

  ?person <http://dbpedia.org/property/profession> ?profession .
  FILTER (
    EXISTS { ?profession rdfs:label ""soccer player""@en }
    && EXISTS { ?profession rdfs:label ""athlete""@en }
  )

  OPTIONAL {
    ?team <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Pablo_Aimar> .
    ?team <http://dbpedia.org/ontology/teamMember> ?person .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
557,54,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?producer WHERE {
  # Producer of A Star Is Born (1937 film)
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?producer .

  # Actor of Johnny Doughboy
  OPTIONAL { 
    <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/property/profession> ?v1 .
  }

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?professional <http://dbpedia.org/property/profession> ?v1 .
    FILTER(?v1 = ?alterEgo)
  }

  # Ensure the producer is connected through their claim to fame
  OPTIONAL {
    ?producer <http://dbpedia.org/ontology/claimToFame> ?work .
    FILTER EXISTS { 
      ?actor <http://dbpedia.org/property/profession> ?v1 .
      ?professional <http://dbpedia.org/property/profession> ?v2 .
      FILTER(?v1 = ?alterEgo)
    }
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
19,2,train,Give me the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,2,2,9,1,0,1,1.0,0.5,0.6666666666666666
609,7,train,"Give me the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/creator> ?result .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ""American""@en .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
213,16,train,"Give me the country of the work of Lao She and birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v3 <http://dbpedia.org/ontology/country> ?result . },"```sparql
# Part 1: Country of the work of Lao She
SELECT ?work ?country WHERE {
  <http://dbpedia.org/resource/Lao_She> <http://dbpedia.org/ontology/work> ?work .
  OPTIONAL { 
    ?work <http://dbpedia.org/property/country> ?country .
  }
}

# Part 2: Birthplace of the child who is a politician of Chiang Ching-kuo
SELECT ?child ?birthPlace WHERE {
  <http://dbpedia.org/resource/Chiang_Ching-kuo> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { 
    ?child <http://dbpedia.org/property/politicalParty> ?party .
    FILTER EXISTS { ?party a <http://dbpedia.org/ontology/PoliticalParty> }
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
246,16,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
SELECT DISTINCT ?parent WHERE {
  ?child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> .
  ?child1 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?parent <http://dbpedia.org/ontology/child> ?child1 .

  ?child2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> .
  ?child2 <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  FILTER(?child1 != ?child2)
  
  ?parent <http://dbpedia.org/ontology/child> ?child2 .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
345,6,train,Give me the region of the time zone of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
SELECT ?region WHERE {
  ?timeZone dbo:country <http://dbpedia.org/resource/Japan> .
  ?timeZone dbo:region ?region .
}
```",2,2,3,2,1,2,2,9,12,29,2243,0.2926829268292683,0.005321507760532151,0.010452961672473868
687,61,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v3 . },"```sparql
SELECT ?actor ?player WHERE {
  # Step 1: Find films directed by Manuel Huerga
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  
  # Step 2: Find actors in the film who are also soccer players and athletes
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/occupation> ?occupation1 .
  ?actor <http://dbpedia.org/property/occupation> ?occupation2 .
  
  FILTER (
    (?occupation1 = <http://dbpedia.org/resource/Soccer_player> && 
     ?occupation2 = <http://dbpedia.org/resource/Athlete>)
    ||
    (?occupation2 = <http://dbpedia.org/resource/Soccer_player> && 
     ?occupation1 = <http://dbpedia.org/resource/Athlete>)
  )
  
  # Step 3: Find a person born on Marcelo Sarmiento's birthday who is both a soccer player and manager
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/property/occupation> ?occupation3 .
  ?person <http://dbpedia.org/property/occupation> ?occupation4 .
  
  FILTER (
    (?occupation3 = <http://dbpedia.org/resource/Soccer_player> && 
     ?occupation4 = <http://dbpedia.org/resource/Soccer_manager>)
    ||
    (?occupation4 = <http://dbpedia.org/resource/Soccer_player> && 
     ?occupation3 = <http://dbpedia.org/resource/Soccer_manager>)
  )
  
  # Get Marcelo Sarmiento's birth date
  <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?marceloSarmientoBirthDate .
  
  FILTER (?birthDate = ?marceloSarmientoBirthDate)
  
  # Step 4: Find the team of this person
  ?person <http://dbpedia.org/ontology/team> ?team .
  
  # Step 5: Find players in that team
  ?team <http://dbpedia.org/ontology/player> ?player .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
293,38,train,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ann Sothern"" .
  
  OPTIONAL {
    ?movie <http://dbpedia.org/resource/1000_Dollars_a_Minute> .
    ?actor <http://dbpedia.org/ontology/starring> ?movie .
    ?actor <http://dbpedia.org/property/spouse> ?person .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
353,10,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/parent> ?child .
  <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/parent> ?child .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
103,60,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
SELECT ?result WHERE {
  # Find the alter ego of The Shadow (video game) comics character
  <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/property/comicsCharacter> ?shadowComics .
  ?shadowComics <http://dbpedia.org/property/alterEgo> ?alterEgo .
  
  # Find professionals associated with the alter ego
  ?result <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(?v1 = ?alterEgo)
  
  # Find movies that are also television shows featuring Richard E. Grant
  OPTIONAL {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow100000001> .
    
    # Ensure the professional is also an actor in these movies
    ?result <http://dbpedia.org/ontology/starring> ?movie .
  }
}
```",6,8,7,3,2,3,3,71,0,0,13,0,0.0,0
557,21,train,Give me the professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  ?result <http://dbpedia.org/ontology/profession> ?v1 .

  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,29,train,"Give me the child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Child of Roger II of Sicily and Elvira of Castile, Queen of Sicily
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?result <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .

  # Father of the child of William I of Sicily
  ?child <http://dbpedia.org/ontology/father> ?result .
  ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/William_I_of_Sicily> .

  # Royalty status
  ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,4,train,"Give me the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlements100000001> .
  ?result <http://dbpedia.org/ontology/timeZone> ""Eastern European Time"" .
}
```",1,2,2,1,1,3,2,20,0,0,20665,0,0.0,0
198,60,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war ?entity WHERE {
  # Find the awardee of an award show recognized by the United States Congress
  ?award <http://dbpedia.org/ontology/awardee> ?awardee .
  ?award <http://dbpedia.org/property/recognition> ""United States Congress"" .

  # Link the awardee to a war
  ?awardee <http://dbpedia.org/property/war> ?war .

  # Find a person deceased on 1850-08-05, who is American and born in a settlement
  ?person <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^xsd:date .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  
  # Ensure the birthplace is a settlement
  ?birthplace rdf:type <http://dbpedia.org/class/yago/Settlements100000036> .

  # Find an entity related to their birthplace
  ?entity <http://dbpedia.org/property/location> ?birthplace .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
347,31,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/type> ?type .
  FILTER(?type IN (<http://dbpedia.org/class/yago/SocietalEvent108069068>, <http://www.w3.org/2002/07/owl#Thing>, <http://dbpedia.org/ontology/televisionShow>)).
  
  ?war <http://dbpedia.org/property/militaryForce> <http://dbpedia.org/resource/Algerian_War> .
  
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  
  ?commander <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
633,11,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent ?spouse WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> .
  
  OPTIONAL { 
    ?spouse <http://dbpedia.org/ontology/spouse> ?parent .
    ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?spouse <http://dbpedia.org/ontology/nobleTitle> ?v2 .
  }
}
```",3,5,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
386,7,train,Give me the war of Alexander Lvovich Davydov and entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> dbo:participatedIn ?war .
  
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russian_Empire> .
    ?war dbo:place ?entity .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
943,7,train,Who is the child of Baeda Maryam I?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,1,2,0.0,0.0,0
23,15,train,"Give me the party of Gustavo Petro and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
SELECT ?petroParty ?barrerasParty WHERE {
  <http://dbpedia.org/resource/Gustavo_Petro> dbo:party ?petroParty .
  
  OPTIONAL {
    <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> dbo:party ?barrerasParty .
  }
}
```",3,4,4,2,2,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
905,16,train,"Give me the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_of_Bytom> .
  ?father <http://dbpedia.org/ontology/parent> ?spouse .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
38,8,train,"Give me the author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
SELECT ?work WHERE {
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Joe_Biden> .
  ?work rdf:type <http://dbpedia.org/class/yago/WrittenWork108069068> .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,8,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film a dbo:Film ;
        owl:sameAs <http://www.wikidata.org/entity/Q11424> ; # Assuming Q11424 is ""work""
        <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> .
  
  ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
412,23,train,Give me the war of the awardee of 30 and war of the leader of National Party of Greece.,"SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war1 ?war2 WHERE {
  # War associated with an awardee from the year 30
  ?award <http://dbpedia.org/property/year> ""30"" .
  ?award <http://dbpedia.org/ontology/awardee> ?person .
  ?person <http://dbpedia.org/ontology/war> ?war1 .

  # War associated with the leader of National Party of Greece
  <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://dbpedia.org/ontology/war> ?war2 .
}
```",4,4,5,2,2,2,3,28,0,0,11,0,0.0,0
943,40,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?commander <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  ?parent <http://dbpedia.org/ontology/child> ?commander .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> .

  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Baeda_Maryam_I> .
  
  FILTER (?result = ?parent)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
347,26,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> <http://dbpedia.org/ontology/father> ?father .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
871,13,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT DISTINCT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
159,25,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/George_Ducas> .
  ?entity <http://dbpedia.org/property/commander> ?result .
  
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Wars100000001> . # Assuming a generic class for wars
  ?war <http://dbpedia.org/ontology/show> ?result .
  ?war <http://dbpedia.org/property/societalEvent> ?result .

  ?war <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Jean_Baptiste_Comte_d'Arco> .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
392,0,train,Give me the member of 1. FC Magdeburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/1._FC_Magdeburg> <http://dbpedia.org/ontology/teamMember> ?member .
}
```",1,1,2,1,1,2,2,9,0,0,616,0,0.0,0
198,0,train,Give me the war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/participatedIn> ?war .
  ?war a dbo:War .
}
```",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
353,31,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
SELECT ?result WHERE {
  # Find children of Roger II of Sicily who are royalty
  ?royalChild <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Find parent of this royal child
  ?parent <http://dbpedia.org/ontology/birthPlace> ?royalChild .
  
  # Ensure this person is also the father of William II of Sicily
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_II_of_Sicily> .
  
  # Match the parent with the result
  FILTER(?parent = ?result)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
557,35,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?producer WHERE {
  # Find Janet Gaynor's claim to fame movie
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Janet_Gaynor> .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Claim_to_fame_of_Janet_Gaynor> . # Assuming there's a specific resource for her claim to fame
  ?movie <http://dbpedia.org/ontology/producer> ?producer .
  
  OPTIONAL {
    # Find professional involved with The Shadow's alter ego
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?producer <http://dbpedia.org/property/occupation> ?v1 .
    FILTER(?v1 = ?alterEgo)
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
258,11,train,Give me the alma mater of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?foundingDate WHERE {
  <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/almaMater> ?almaMater .
  
  <http://dbpedia.org/resource/Federal_University_of_Para%C3%ADba> <http://dbpedia.org/ontology/foundingDate> ?foundingDate .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
513,16,train,Give me the entity in the award of George H. Cameron and residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
SELECT ?result WHERE {
  {
    ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/George_H._Cameron> .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?result .
  }
  UNION
  {
    ?leader <http://dbpedia.org/property/partyLeader> <http://dbpedia.org/resource/Ulster_Unionist_Party> .
    ?leader <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?result .
  }
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
859,13,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?result WHERE {
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Burnt_by_the_Sun> .
  ?reference rdf:type <http://dbpedia.org/class/yago/MusicalArtist100000001> . # Assuming this is a class for bands
  ?reference rdf:type <http://dbpedia.org/class/yago/Group100000001> . # Assuming this is a class for groups
  ?reference rdf:type <http://dbpedia.org/class/yago/Organisation100000001> . # Assuming this is a class for organizations
  
  ?reference <http://dbpedia.org/ontology/member> ?result .
}
```

Note: The specific classes used (`MusicalArtist`, `Group`, and `Organisation`) are placeholders. You may need to adjust these based on the actual DBpedia ontology or use broader categories if necessary.",3,7,4,3,1,3,2,20,0,0,18,0,0.0,0
80,25,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
  ?result <http://dbpedia.org/property/profession> ?v1 .

  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
143,8,train,Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Nicki_Minaj> <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan"" .
  OPTIONAL { 
    <http://dbpedia.org/resource/Nicki_Minaj> <http://dbpedia.org/ontology/musicArtist> ?associatedArtist .
  }
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
353,25,train,Give me the child of the child of Alfonso VI of León and Castile and father of William II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  ?grandchild <http://dbpedia.org/ontology/father> ?child .
  
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_II_of_Sicily> .

  FILTER (?grandchild = ?person)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,14,train,Give me the child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
943,35,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  # Find Yeshaq I's parent who is royalty
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Yeshaq_I> .
  ?parent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Find the child of Yeshaq I's royal parent
  ?result <http://dbpedia.org/ontology/child> ?parent .

  # Find Na'od's father who is royalty and an office holder
  ?naodFather <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Na'od> .
  ?naodFather <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  ?naodFather <http://www.wikidata.org/entity/P39> ?office . # Assuming P39 is the property for office holder

  # Find the father of Na'od's royal and office-holding father
  ?result2 <http://dbpedia.org/ontology/child> ?naodFather .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
513,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_Kingdom> .
}
```

This query will return all entities that have a location property pointing to the United Kingdom resource in DBpedia.",1,1,2,1,1,3,2,20,0,0,42999,0,0.0,0
140,0,train,Give me the commander in Pickett's Charge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Pickett%27s_Charge> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
347,3,train,Give me the military force of Algerian War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Algerian_War> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,119,0,0.0,0
414,17,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . }","```sparql
SELECT ?show ?award WHERE {
  <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> <http://dbpedia.org/ontology/show> ?show .
  
  OPTIONAL {
    ?person <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q134064> . # Assuming Q134064 is the identifier for ""Nobel Prize in Physics""
    ?person <http://dbpedia.org/ontology/referencedBy> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> .
  }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
816,45,train,Give me the parent of the child of the spouse of Mariclare Costello and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Find Mariclare Costello's spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mariclare_Costello> .
  
  # Find the children of Mariclare Costello's spouse
  ?child <http://dbpedia.org/ontology/parent> ?spouse .

  # Identify the parent(s) of those children
  ?result <http://dbpedia.org/ontology/parent> ?child .

  # Ensure the person is an actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result .
  
  # Ensure the person is a parent of Amy Arbus
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Amy_Arbus> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
472,8,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?territory WHERE {
  <http://dbpedia.org/resource/Christian_Ditlev_Ammenorp_Hansen> dbo:deathPlace ?deathPlace .
  
  ?deathPlace a dbo:Settlement .
  
  OPTIONAL { 
    ?deathPlace dbo:administers ?territory .
  }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
609,9,train,Give me the birth place of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Vince_Gilligan>
    <http://dbpedia.org/resource/Glenn_Youngkin>
  }
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
246,15,train,"Give me the parent of Prince Omar bin Faisal and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
SELECT ?result WHERE {
  # Parent of Prince Omar bin Faisal
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Omar_bin_Faisal> .
  
  # Child of this parent that is royalty
  ?royalChild <http://dbpedia.org/ontology/parent> ?parent .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # Parent of Princess Aisha bint Faisal that is royalty
  ?aishaParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Aisha_bint_Faisal> .
  ?aishaParent <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""

  # The result must satisfy both conditions
  FILTER (?parent = ?aishaParent)
  BIND(?parent AS ?result)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
756,24,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  # Find the country associated with Theodor Heuss's administration
  <http://dbpedia.org/resource/Theodor_Heuss> <http://dbpedia.org/ontology/nationality> ?country .
  
  # Find individuals native to that country
  ?person <http://dbpedia.org/ontology/nativeCountry> ?country .

  # Identify the manager of the 2020–21 SBV Vitesse season
  OPTIONAL {
    <http://dbpedia.org/resource/2020%E2%80%9321_SBV_Vitesse_season> <http://dbpedia.org/property/manager> ?person .
  }

  BIND(?person AS ?result)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
293,44,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States) and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/1_000_Dollars_a_Minute> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/spouse> ?result .
  
  FILTER (?result <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Republican_Party_(United_States)>)
  
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/birthName> ""Ann Sothern"" .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
723,6,train,Give me the band member of Stone Sour and band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Stone_Sour> .
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mudvayne> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
23,17,train,Give me the entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?entity WHERE {
  # Get the country of Daniel Elahi Galán
  <http://dbpedia.org/resource/Daniel_El%C3%A1i_Gal%C3%A1n> <http://dbpedia.org/ontology/nationality> ?country .

  # Get the political party of Gustavo Petro
  <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/property/politicalParty> ?party .

  # Find an entity associated with both the country and the party
  ?entity <http://dbpedia.org/ontology/country> ?country .
  ?entity <http://dbpedia.org/property/politicalParty> ?party .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
39,51,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?result WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/birthName> ""Bob Thompson""^^<http://www.w3.org/2001/XMLSchema#string> .
  
  OPTIONAL {
    ?person <http://dbpedia.org/property/profession> ?v1 .
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?v1 .
  }
  
  ?result <http://dbpedia.org/ontology/member> ?person .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
737,4,train,"Give me the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
198,28,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/militaryService> ?force .
  
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
  
  OPTIONAL {
    ?medalOfHonorAwardee <http://dbpedia.org/property/militaryConflict> ?war .
    ?result <http://dbpedia.org/ontology/name> ?entityName .
    FILTER(?entityName = ?entity)
  }
  
  FILTER(?force = ?result)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
293,7,train,Give me the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Tisha_Sterling> <http://dbpedia.org/ontology/father> ?parent .
} UNION
{
  <http://dbpedia.org/resource/Tisha_Sterling> <http://dbpedia.org/ontology/mother> ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,55,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  # Producer of Cora Sue Collins' claim to fame
  <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/claimToFame> ?collinsWork .
  ?collinsWork <http://dbpedia.org/ontology/producer> ?result .

  # Producer of Janet Gaynor's movie claim to fame
  <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/claimToFame> ?gaynorMovie .
  ?gaynorMovie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie104069976> . # Assuming a class for movies
  ?gaynorMovie <http://dbpedia.org/ontology/producer> ?result .

  # Professional in The Shadow's alter ego
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?shadowAlterEgo .
    ?result <http://dbpedia.org/property/occupation> ?shadowAlterEgo .
  }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
198,42,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?force ?entityInBirthplace ?war WHERE {
  # Force associated with Quincy Adams Gillmore
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/militaryUnit> ?force .

  # Birthplace of Henry Clay Lewis that is a settlement in America
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?entityInBirthplace .
  FILTER(CONTAINS(LCASE(?entityInBirthplace), ""settlement"") && CONTAINS(LCASE(?entityInBirthplace), ""america""))

  # Wars associated with Medal of Honor awardees
  ?medalRecipient <http://dbpedia.org/property/awarded> <http://dbpedia.org/resource/Medal_of_Honor> .
  ?medalRecipient <http://dbpedia.org/ontology/war> ?war .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
103,29,train,Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of Shatrughan Sinha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/profession> ?profession .
    ?result <http://dbpedia.org/property/profession> ?profession .
  }
}
```",4,4,5,2,3,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
23,3,train,"Who is the person born, that is a politician, as Roy Leonardo Barreras Montealegre?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre"" .
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
293,12,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthName> ""Harriette Arlene Lake"" .
  ?result <http://dbpedia.org/ontology/spouse> ?spouse .
  
  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ""Roger Pryor (actor)""@en .
  OPTIONAL { 
    ?spouse <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,24,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  
  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?result <http://dbpedia.org/ontology/spouse> ?father .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
159,20,train,Give me the successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
SELECT ?successor ?writerReference WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?successor .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://www.w3.org/2002/07/owl#sameAs> ?writerReference .
  }
}
```",3,3,4,2,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
198,14,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace a <http://dbpedia.org/ontology/Settlement> .
  OPTIONAL { 
    ?birthplace <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/United_States> .
  }
  ?result a <http://dbpedia.org/ontology/Settlement> ;
         <http://dbpedia.org/ontology/location> ?birthplace .
}
```",2,4,3,2,1,3,3,71,0,2,12,0.0,0.0,0
609,52,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Birthplace of Vince Gilligan's Awardee
  OPTIONAL { 
    <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/award> ?award .
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  # Birthplace of Cece Bell
  OPTIONAL { 
    <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  # Birthplace of Virginia's Governor (Politician)
  OPTIONAL {
    ?governor <http://dbpedia.org/ontology/governorOf> <http://dbpedia.org/resource/Virginia> ;
              <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
    ?governor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
347,23,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
SELECT ?commander WHERE {
  ?event rdf:type dbo:SocietalEvent .
  ?event rdf:type dbo:Event .
  ?event rdf:type dbo:TelevisionShow .
  ?event dbo:participatedIn <http://dbpedia.org/resource/Algerian_War> .

  ?commander dbo:commanded ?militaryForce .
  ?militaryForce dbo:participatedIn ?event .
}
```",3,6,4,3,1,3,3,71,0,0,124,0,0.0,0
871,61,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby's parent
  <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?parent .

  # Step 2: Find the child of this parent who is a politician and an office holder
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?child <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
  OPTIONAL { 
    ?child <http://www.wikidata.org/entity/P39> ?office . # Office holder
  }

  # Step 3: Check if this child has another child who is a politician and attended Eton College
  ?grandChild <http://dbpedia.org/ontology/father> ?child .
  ?grandChild <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Politician
  ?grandChild <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Eton_College> .

  BIND(?child AS ?result)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
706,2,train,Give me the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
158,2,train,Give me the native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> .
}
```",1,1,2,1,1,2,3,28,5475,0,0,1.0,1.0,1.0
295,1,train,Give me the native of Birmingham.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Birmingham> .
}
```",1,1,2,1,1,3,2,20,0,0,1531,0,0.0,0
531,41,train,"Give me the office of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  # Find Miguel Maura's office
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/office> ?miguelOffice .
  
  # Find tenants of Alberto Ruiz-Gallardón’s residence
  <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?residence .
  ?result <http://dbpedia.org/ontology/inhabitant> ?residence .

  # Find the office of a commander in Central African Republic Civil War
  ?commanderRole <http://dbpedia.org/ontology/office> ?warOffice .
  FILTER(?warOffice = ""Commander"" && ?warOffice IN (<http://dbpedia.org/resource/Central_African_Republic_Civil_War>))

  # Ensure the person is an office holder and a politician
  ?result <http://dbpedia.org/ontology/officeHolder> ?miguelOffice .
  ?result <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 represents ""politician""

  # Combine conditions to find the person
  FILTER(?result = ?commanderRole)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
288,3,train,Give me the show with Anumta Qureshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
SELECT ?show WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> .
  OPTIONAL { 
    ?show a <http://dbpedia.org/class/yago/TVEpisode104067068> . # This class represents TV episodes
  }
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
595,36,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""disease"") && CONTAINS(LCASE(?label), ""societal event"")) .

  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/warFoughtBy> <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> .
  }

  OPTIONAL {
    ?result <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Hillary_Clinton> .
    ?result <http://dbpedia.org/ontology/commander> ?war .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
628,17,train,"Give me the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?award WHERE {
  ?award a dbo:Award .
  
  # Ensure the award is related to a region, state, and settlement
  ?region a dbo:Region ;
          <http://dbpedia.org/ontology/country> dbc:United_States_of_America ; # Assuming dbc:United_States_of_America represents the US
          <http://dbpedia.org/ontology/state> ?state .
  
  ?settlement a dbo:Settlement ;
              <http://dbpedia.org/ontology/location> ?region .

  # Link award to region, state, and settlement
  ?award <http://dbpedia.org/property/awardedByRegion> ?region ;
         <http://dbpedia.org/property/awardedByState> ?state ;
         <http://dbpedia.org/property/awardedInSettlement> ?settlement .

  # Find bands from New York state that received the award
  ?band a dbo:Band ;
        <http://dbpedia.org/ontology/location> dbc:New_York_(state) .
  
  ?award <http://dbpedia.org/ontology/recipient> ?band .
}
```",2,7,3,2,1,3,3,71,0,0,3,0,0.0,0
412,16,train,Give me the war of the awardee of 30 and war of Napoleon Zervas.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT DISTINCT ?war1 ?war2 WHERE {
  
  # War of the awardee of 30
  ?award <http://dbpedia.org/ontology/year> ""1930"" .
  ?award <http://dbpedia.org/property/relatedTo> ?war1 .
  
  # War of Napoleon Zervas
  <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/war> ?war2 .

}
```",3,3,4,2,2,2,3,28,0,0,11,0,0.0,0
628,61,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""musical artist"" .
  
  ?person <http://xmlns.com/foaf/0.1/name> ?birthName .

  ?award <http://purl.org/dc/terms/subject> ?band .
  ?band <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/New_York_(state)> .
  ?band <http://www.w3.org/2000/01/rdf-schema#label> ""band"" .

  ?award <http://purl.org/dc/terms/type> ?region .
  ?region <http://www.w3.org/2000/01/rdf-schema#label> ?regionLabel .
  
  FILTER (CONTAINS(LCASE(?regionLabel), ""state"") && CONTAINS(LCASE(?regionLabel), ""settlement""))

  ?nativePlace <http://dbpedia.org/ontology/nativeName> ?birthName .
}
```",6,12,7,3,2,3,3,71,0,0,59,0,0.0,0
859,12,train,Give me the associated musical artist of the associated musical artist of James Plotkin and band member of Human Remains (band).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?artist <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/James_Plotkin> .
  ?artist <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Human_Remains_(band)> .
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
375,19,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  ?birthPlace <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Yamaza_Enjirō> .
  
  ?warToyotomi <http://dbpedia.org/property/foughtIn> ?result .
  ?toyotomi <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Toyotomi_Hidenaga> .

  ?warHashiba <http://dbpedia.org/property/foughtIn> ?result .
  ?hashiba <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Hashiba_Hidekatsu> .

  FILTER(?birthPlace = ?warToyotomi || ?birthPlace = ?warHashiba)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
203,31,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
SELECT ?commander WHERE {
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
  ?conflict <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/The_Triple_X's> .
  ?conflict <http://dbpedia.org/property/commander> ?commander .

  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/property/militaryForce> ?commander .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,56,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in Sergio Agüero and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?result WHERE {
  # Get Marcelo Sarmiento's birthdate
  <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?birthdate .

  # Find individuals who are soccer players and managers born on the same date as Marcelo Sarmiento
  ?result <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?result <http://dbpedia.org/property/profession> ""soccer manager"" .
  ?result <http://dbpedia.org/ontology/birthDate> ?birthdate .

  # Check if they played with Sergio Agüero
  ?agüeroTeam <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Sergio_Agüero> .
  ?result <http://dbpedia.org/property/team> ?agüeroTeam .

  # Identify an athlete born on 1955-02-22
  ?athlete <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^xsd:date .
  ?athlete <http://dbpedia.org/ontology/sport> ?sport . # Ensure they are athletes

  # Check if the result played with this athlete
  ?resultTeam <http://dbpedia.org/property/team> ?result .
  ?athleteTeam <http://dbpedia.org/property/team> ?athlete .
  FILTER(?resultTeam = ?athleteTeam)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,9,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
SELECT ?christianIXAdministration ?olafIAdministration WHERE {
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> dbo:reign ?christianIXAdministration .
  <http://dbpedia.org/resource/Olaf_I_of_Denmark> dbo:reign ?olafIAdministration .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
140,9,train,"Give me the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Picketts_Charge> <http://dbpedia.org/ontology/militaryForce> ?military .
  ?military <http://dbpedia.org/property/societalEvent> ?result .
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
816,29,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
SELECT ?result WHERE {
  # Parent of someone who is a Photographer
  ?child <http://dbpedia.org/property/occupation> ""Photographer"" .
  ?result <http://dbpedia.org/ontology/parent> ?child .

  # Parent of an actor in Judgment: The Trial of Julius and Ethel Rosenberg
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> .
    ?result <http://dbpedia.org/ontology/parent> ?actor .
  }

  # Parent of Doon Arbus
  OPTIONAL {
    ?doonArbus <http://www.wikidata.org/entity/Q215627> ""Doon Arbus"" . # Assuming Q215627 is the identifier for Doon Arbus
    ?result <http://dbpedia.org/ontology/parent> ?doonArbus .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,19,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Herschel_Bernardi> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Amy_Arbus> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
68,14,train,"Give me the father of Isabella of Austria and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Isabella_of_Austria> .
  
  OPTIONAL { 
    ?commander <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Siege_of_Padua> .
    ?commander <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
    ?commander <http://dbpedia.org/ontology/parent> ?result .
  }
  
  FILTER (?father = ?result)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
198,35,train,"Give me the war of the awardee of Medal of Honor and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/honoraryAward> <http://dbpedia.org/resource/Medal_of_Honor> .
  ?person <http://dbpedia.org/property/war> ?war .
  
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
    ?birthplace <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
    FILTER (CONTAINS(LCASE(?settlementLabel), ""american"") && CONTAINS(LCASE(?settlementLabel), ""henry clay lewis""))
  }
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
246,17,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of Princess Sara bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  # Find children of Princess Muna al-Hussein who are royalty
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Muna_al-Hussein> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Find parents of these royal children
  ?result <http://dbpedia.org/ontology/parent> ?child .
  
  # Ensure they are also parents of Princess Sara bint Faisal
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
668,40,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musician> .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Tupac_Shakur> .
  }
  
  OPTIONAL {
    ?result <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Darryl_Paa_Kwesi_Bannerman-Martin> .
  }
}
```",5,5,6,3,3,3,3,71,0,4,1,0.0,0.0,0
87,5,train,"Give me the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a owl:Thing .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Audrey_Hepburn> .
}
```",1,3,2,1,1,2,3,28,15,6,0,0.7142857142857143,1.0,0.8333333333333333
293,56,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Find party members in Central, Louisiana
  ?partyMember <http://dbpedia.org/ontology/member> ?rulingParty .
  ?rulingParty <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Central,_Louisiana> .

  # Person born as the birth name of Tisha Sterling's parent
  ?parent <http://dbpedia.org/ontology/birthName> ?birthName .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> .
  ?result <http://dbpedia.org/property/birthName> ?birthName .

  # Spouse of Roger Pryor (actor)
  OPTIONAL {
    ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Roger_Pryor_(actor)> .
  }
}
```

Note: This query assumes that DBpedia has detailed entries for all the entities and relationships mentioned. If certain data is missing, additional sources or manual verification might be required.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
557,51,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
SELECT ?producer WHERE {
  # Find Cora Sue Collins' claim to fame
  <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/claimToFame> ?collinsWork .
  
  # Find the producer of Cora Sue Collins' work
  ?collinsWork <http://dbpedia.org/ontology/producer> ?producer .

  # Find the actor in High Society Blues
  <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Find the actor's claim to fame, which is a movie and work
  ?actor <http://dbpedia.org/ontology/claimToFame> ?actorWork .
  ?actorWork rdf:type <http://dbpedia.org/class/yago/Movie104069976> . # Assuming this class represents movies

  # Find the producer of the actor's claim to fame
  ?actorWork <http://dbpedia.org/ontology/producer> ?producer .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,50,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Nat_Levine> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  
  ?actor <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/birthName> ""Ann Sothern"" .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
595,19,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?spouse WHERE {
  ?author <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/An_Invitation_to_the_White_House> .
  ?author <http://dbpedia.org/property/occupation> ?v1 .
  FILTER (?v1 IN (<http://dbpedia.org/resource/Politician>, <http://dbpedia.org/resource/Office_holder>)).
  ?author <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/Back_to_Work_(book)> .
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
80,60,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
  ?result <http://dbpedia.org/property/profession> ?v1 .

  OPTIONAL {
    ?smartbombAuthor <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Smartbomb_(book)> .
    ?movie <http://dbpedia.org/ontology/writer> ?smartbombAuthor .
    ?movie <http://dbpedia.org/ontology/starring> ?result .
  }
}
```",6,6,7,3,2,3,3,71,0,0,7802,0,0.0,0
871,24,train,"Give me the father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Arthur_Stanley_(politician)> .
  
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
    ?result <http://dbpedia.org/ontology/parent> ?child .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,17,train,"Give me the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
SELECT ?result WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
  ?spouse a dbo:Royalty . # Assuming 'dbo:Royalty' is the class for royalty individuals

  ?child <http://dbpedia.org/ontology/parent> ?spouse .
  BIND(?child AS ?result)
}
```",2,3,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
941,10,train,"Who is the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
39,25,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Robert Lamar Thompson""@en .
  ?person <http://dbpedia.org/ontology/birthName> ""Robert Lamar Thompson"" .
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""musical artist"") || CONTAINS(LCASE(?v1), ""musician""))
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  }
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
103,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This query cannot be constructed without additional context.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
68,5,train,"Who is the child, that is a royalty, of Philip I of Castile?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Philip_I_of_Castile> <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,2,3,28,0,0,5,0,0.0,0
412,17,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  
  <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/property/war> ?war .

  ?result <http://dbpedia.org/ontology/location> ?deathPlace .
  ?result <http://dbpedia.org/ontology/conflict> ?war .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,41,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
SELECT ?result WHERE {
  # Actor in ""All or Nothing: Manchester City""
  <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Soccer player and athlete
  ?actor <http://dbpedia.org/property/soccerPlayer> true .
  ?actor <http://dbpedia.org/ontology/athlete> true .

  # Team of Pablo Aimar
  ?team <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Pablo_Aimar> .
  ?team <http://dbpedia.org/ontology/member> ?result .

  # Player in person born on 1955-02-22
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?result .
  ?person <http://dbpedia.org/property/birthDate> ""1955-02-22""^^xsd:date .
  ?person <http://dbpedia.org/ontology/athlete> true .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
531,43,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Madrid> .
  ?result <http://dbpedia.org/property/office> ?commanderOffice .
  
  ?result a <http://dbpedia.org/ontology/OfficeHolder> ;
          a <http://dbpedia.org/ontology/Politician> .

  OPTIONAL {
    ?conflict <http://dbpedia.org/ontology/conflict> ?societalEvent ;
              <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> .
    ?result <http://dbpedia.org/ontology/involvement> ?conflict .
  }

  ?miguelOffice <http://dbpedia.org/property/office> ?commanderOffice ;
                <http://dbpedia.org/resource/Miguel_Maura> ?miguelMaura .

  FILTER(?result = ?miguelMaura)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
78,16,train,Give me the associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Find the associated musical artist of Stuart Tosh
  ?artist <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Stuart_Tosh> .
  
  # Check if this artist is a band member of an artist associated with David Paton
  ?artist <http://dbpedia.org/ontology/member> ?band .
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/David_Paton> .
  
  BIND(?artist AS ?result)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
23,6,train,Give me the entity in Colombia and party of Roy Barreras.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Colombia> .
  OPTIONAL { 
    <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/property/memberOf> ?party .
    ?entity <http://dbpedia.org/property/memberOf> ?party .
  }
}
```",2,2,3,1,2,2,3,28,0,399,5,0.0,0.0,0
263,17,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/birthParent> ?parent .
  <http://dbpedia.org/resource/Hon._Mary_Frances_Bowes-Lyon> <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,44,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  OPTIONAL {
    ?association <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> .
    ?person <http://dbpedia.org/ontology/memberOf> ?association .
  }
  
  OPTIONAL {
    ?bandMember <http://dbpedia.org/property/bandMember> ?claptonBand .
    ?claptonBand <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Eric_Clapton> .
    ?result <http://dbpedia.org/ontology/memberOf> ?bandMember .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,1,train,"Give me the parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,16,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01 and player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?wikidataEntity .
  
  # Filter by birth date
  ?person <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> .

  # Check for athlete and soccer player roles
  ?person <http://www.wikidata.org/entity/P106> ?athleteRole .
  FILTER (
    ?athleteRole IN (<http://dbpedia.org/resource/Athlete>, 
                     <http://dbpedia.org/resource/Soccer_player>)
  )

  # Check for sports manager and soccer manager roles
  ?person <http://www.wikidata.org/entity/P106> ?managerRole .
  FILTER (
    ?managerRole IN (<http://dbpedia.org/resource/Sports_manager>, 
                     <http://dbpedia.org/resource/Soccer_manager>)
  )
  
  # Identify the manager of Hong Kong C Team with relevant roles
  ?manager <http://www.wikidata.org/entity/P106> ?teamManagerRole .
  FILTER (
    ?teamManagerRole IN (<http://dbpedia.org/resource/Sports_manager>, 
                         <http://dbpedia.org/resource/Soccer_manager>)
  )
  
  # Ensure the person is a player under this manager
  ?person <http://dbpedia.org/ontology/player> ?manager .

  # Specific team association
  ?team <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Hong_Kong_C_Team> .
  ?player <http://dbpedia.org/ontology/player> ?team .
  FILTER (?player = ?person)
}
```",4,10,5,2,2,3,2,20,0,0,2,0,0.0,0
119,49,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?result WHERE {
  ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SpanishAdministrations> .
  ?administration <http://dbpedia.org/ontology/member> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Socialist_Workers'_Party_of_Spain> .
  }
  
  OPTIONAL {
    ?election <http://dbpedia.org/ontology/electionDate> ""2009-05-01""^^<http://www.w3.org/2001/XMLSchema#date> ;
              <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Galicia_(Spain)> .
    ?result <http://dbpedia.org/ontology/officesHeld> ?office .
    ?office <http://dbpedia.org/ontology/election> ?election .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
398,5,train,Who is the writer of The First Glove?,SELECT ?result WHERE { <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/ontology/writer> ?writer .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
203,24,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?battleForce ?warForce WHERE {
  # Military force in Battle of Cape Finisterre (1805)
  <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/property/militaryForce> ?battleForce .

  # Military force in a war involving William Bayne
  <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/property/militaryConflict> ?war .
  ?war <http://dbpedia.org/ontology/event> ?event .
  FILTER(?event = ?war) # Ensures it's both a military conflict and an event
  ?war <http://dbpedia.org/property/militaryForce> ?warForce .
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
103,13,train,Give me the professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?occupation .
  ?person <http://dbpedia.org/property/occupation> ?occupation .
  FILTER(?person != <http://dbpedia.org/resource/Shatrughan_Sinha>)
}
```",2,2,3,2,1,3,3,71,58031,0,1,1.0,0.9999827681279294,0.9999913839897298
706,11,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?awardeeBirthPlace ?smitaPatilBirthPlace WHERE {
  # Find birthplace of awardees of Sangeet Natak Akademi Fellowship
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/India> .
  ?person <http://www.wikidata.org/entity/P166> <http://www.wikidata.org/entity/Q12345678> . # Assuming Q12345678 is the identifier for Sangeet Natak Akademi Fellowship
  ?person <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .

  # Find birthplace of Smita Patil
  <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?smitaPatilBirthPlace .
}
```

Note: The property `<http://www.wikidata.org/entity/P166>` is used here as a placeholder for the actual property that indicates receiving an award. You would need to replace `Q12345678` with the correct Wikidata identifier for Sangeet Natak Akademi Fellowship if it exists.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
687,27,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
SELECT ?person ?team WHERE {
  # Get Marcelo Sarmiento's birthdate
  <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?birthdate .

  # Find individuals who are both soccer players and managers, born on the same date as Marcelo Sarmiento
  ?person <http://dbpedia.org/ontology/soccerPlayer> [] .
  ?person <http://dbpedia.org/ontology/soccerManager> [] .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthdate .

  # Retrieve the team associated with this person
  ?person <http://dbpedia.org/property/team> ?team .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
375,5,train,"Give me the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist100007845> .
}
```",1,3,2,1,1,3,2,20,0,0,657,0,0.0,0
782,24,train,Give me the associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
SELECT ?result WHERE {
  # Find musical artist associated with Nick Curran
  <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/musicalArtist> ?artist .
  
  # Check if this artist is part of a band that includes Eric Clapton as a member
  ?band <http://dbpedia.org/property/memberOfBand> <http://dbpedia.org/resource/Eric_Clapton> .
  ?band <http://dbpedia.org/ontology/musicalArtist> ?artist .

  BIND(?artist AS ?result)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
23,24,train,Give me the party of the father of Sofía Petro and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?party ?entity WHERE {
  # Find the party of Sofía Petro's father
  OPTIONAL { 
    <http://dbpedia.org/resource/Sof%C3%ADa_Petro> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/politicalParty> ?party .
  }
  
  # Find an entity in the country of Daniel Elahi Galán
  OPTIONAL {
    <http://dbpedia.org/resource/Daniel_Elahi_Gal%C3%A1n> <http://dbpedia.org/ontology/country> ?country .
    ?entity <http://dbpedia.org/ontology/country> ?country .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
87,22,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?actor WHERE {
  # Find movies that are works, films, and starring Iliza Shlesinger
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?movie <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Films> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> .

  # Find actors in these movies
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  OPTIONAL {
    # Identify awardees of Janusz Kamiński's awards/nominations
    ?awardee <http://www.wikidata.org/entity/P166> ?award .
    ?award <http://www.wikidata.org/entity/P921> <http://dbpedia.org/resource/Janusz_Kami%C5%84ski> .

    # Check if the actor is married to an awardee
    ?actor <http://dbpedia.org/ontology/spouse> ?awardee .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
203,38,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
SELECT DISTINCT ?bayneMilitaryForce ?calderMilitaryForce WHERE {
  # Military force of William Bayne's war
  ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .
  ?war a <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Assuming this class represents military conflicts
  ?war a <http://dbpedia.org/ontology/Event> .
  ?war <http://dbpedia.org/property/militaryForce> ?bayneMilitaryForce .

  # Military force of Robert Calder's event
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Robert_Calder> .
  ?event a <http://dbpedia.org/ontology/Event> .
  ?event a <http://dbpedia.org/class/yago/SocietalEvent108069068> . # Assuming this class represents societal events
  ?event <http://dbpedia.org/property/militaryForce> ?calderMilitaryForce .
}
```",4,8,5,2,2,3,3,71,0,0,5,0,0.0,0
412,7,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/war> ?war .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/war> ?war .
  }
}
```",2,2,3,1,2,2,3,28,0,0,9,0,0.0,0
871,35,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
SELECT ?parent WHERE {
  # Find parent of an awardee of the Commander of the Royal Victorian Order
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> ""Commander of the Royal Victorian Order"" .
  ?parent <http://dbpedia.org/ontology/child> ?awardee .

  # Find politician child related to Frederick Stanley, 16th Earl of Derby
  ?politician <http://dbpedia.org/ontology/politician> true .
  ?politician <http://dbpedia.org/ontology/parent> ?parent .
  ?frederick <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?politician <http://dbpedia.org/ontology/child> ?frederick .

}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,47,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?result WHERE {
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie500000001> .
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow500000001> .
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_E._Grant> .
  ?show <http://dbpedia.org/ontology/starring> ?result .

  OPTIONAL {
    ?actor <http://dbpedia.org/property/profession> ?profession .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician500000001> .
    ?actor <http://dbpedia.org/resource/Ab_Kya_Hoga> .
    ?result <http://dbpedia.org/property/profession> ?profession .
  }
}
```",5,7,6,3,2,3,3,71,0,0,28,0,0.0,0
472,24,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
SELECT ?person ?administration WHERE {
  # Administration of Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  OPTIONAL {
    <http://dbpedia.org/resource/Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck> <http://dbpedia.org/ontology/birthPlace> ?place .
    FILTER (STRSTARTS(STR(?place), ""http://dbpedia.org/resource/Schleswig-Holstein""))
    <http://dbpedia.org/resource/Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck> <http://dbpedia.org/property/administration> ?administration .
  }
  
  # Administration of the Mayor of Duchy of Schleswig
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/title> ""Mayor""@en .
    ?mayor <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Duchy_of_Schleswig> .
    ?mayor <http://dbpedia.org/property/administration> ?administration .
  }
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
347,37,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . }","```sparql
SELECT ?father WHERE {
  # Step 1: Identify the parent of Archduke Charles Joseph
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .

  # Step 2: Find any child of this parent
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Identify the father of this child
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Ensure this father is a child of Ferdinand II, Holy Roman Emperor
  ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
68,0,train,Give me the father of Isabella of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
258,16,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira and establishment of the founding date of Federal University of Paraíba.","SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . }","```sparql
SELECT ?almaMater ?founded WHERE {
  # Alma mater of Eleonora Menicucci de Oliveira
  <http://dbpedia.org/resource/Eleonora_Menicucci> 
    <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
    <http://dbpedia.org/property/almaMater> ?almaMater .

  # Founding date of Federal University of Paraíba
  <http://dbpedia.org/resource/Federal_University_of_Para%C3%ADba> 
    <http://dbpedia.org/ontology/foundingDate> ?founded .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
249,4,train,Give me the native of Jamshedpur and native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> .
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> .
}
```",2,2,3,1,2,2,2,9,21,0,0,1.0,1.0,1.0
399,8,train,Give me the band member of Emilia (Bulgarian singer) and professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
SELECT ?result WHERE {
  ?band <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> ;
        <http://dbpedia.org/ontology/member> ?result .
  
  <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/profession> ?profession .
  
  ?result <http://dbpedia.org/property/profession> ?profession .
}
```",3,3,4,2,2,2,2,9,0,0,4,0,0.0,0
198,12,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . }","```sparql
SELECT ?force ?entity WHERE {
  <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/ontology/memberOf> ?force .
  
  OPTIONAL {
    ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Charleston,_South_Carolina> .
    ?entity <http://dbpedia.org/ontology/associatedWith> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
859,8,train,Give me the associated musical artist of the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?secondLevelArtist WHERE {
  # First level: Find artists associated with James Plotkin
  <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?firstLevelArtist .
  
  # Second level: For each first-level artist, find their associated artists
  ?firstLevelArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelArtist .
}
```",2,2,3,2,1,3,2,20,13,0,0,1.0,1.0,1.0
687,35,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
SELECT ?team WHERE {
  ?person1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person1 <http://dbpedia.org/property/profession> ?occupation1 .
  FILTER (
    (CONTAINS(LCASE(?occupation1), ""soccer player"") && CONTAINS(LCASE(?occupation1), ""soccer manager""))
  ) .

  ?team <http://dbpedia.org/ontology/teamMember> ?person1 ;
        <http://dbpedia.org/ontology/player> ?player .
  
  ?person2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person2 <http://dbpedia.org/property/profession> ?occupation2 .
  FILTER (CONTAINS(LCASE(?occupation2), ""athlete"")) .

  ?player = ?person2 .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
687,6,train,"Give me the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> dbo:starring ?actor .
  ?actor a dbo:SoccerPlayer .
  ?actor a dbo:Athlete .
}
```",1,3,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
871,15,train,Who is the awardee of the award of Rodney Lees?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?recipient WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?recipient .
  OPTIONAL { 
    ?award <http://dbpedia.org/property/awardedTo> <http://dbpedia.org/resource/Rodney_Lees> .
  }
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
557,6,train,"Give me the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/work> ?work .
  ?work a <http://dbpedia.org/class/yago/YAGO11_Work_1000000010> . # Assuming this class represents ""Work""
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
353,0,train,Give me the child of Roger II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,2,6,0.0,0.0,0
468,12,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to Peter IV.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/father> ?father .
  
  # Ensure the father is royalty
  OPTIONAL { 
    ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
  }
  
  # Find children of Peter IV
  <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/ontology/child> ?child .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
58,6,train,Give me the spouse of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/ontology/spouse> ?result .
  OPTIONAL { 
    <http://dbpedia.org/resource/12_Strong_(film)> <http://dbpedia.org/property/producer> ?result .
  }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
905,8,train,"Give me the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
609,30,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?name ?birthPlace WHERE {
  VALUES (?resource ?label) {
    ( <http://dbpedia.org/resource/Vince_Gilligan> ""Vince Gilligan"" )
    ( <http://dbpedia.org/resource/Cece_Bell> ""Author of El Deafo"" )
    ( <http://dbpedia.org/resource/Glenn_Youngkin> ""Glenn Youngkin"" )
  }
  
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en') .

  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { ?person foaf:name ?resource . }

  VALUES (?resource) {
    (<http://dbpedia.org/resource/Vince_Gilligan>)
    (<http://dbpedia.org/resource/Cece_Bell>)
    (<http://dbpedia.org/resource/Glenn_Youngkin>)
  }
}
```",4,4,5,2,3,3,3,71,1,503788,0,1.9849579883641764e-06,1.0,3.969908096627563e-06
80,56,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
SELECT ?result WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
  
  <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result .

  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/starring> ?result .
    FILTER(?movie != <http://dbpedia.org/resource/ATL_(film)>)
  }
}
```",6,6,7,3,3,3,3,71,4,6,0,0.4,1.0,0.5714285714285715
288,4,train,Give me the theme of Dikhawa and native of Lahore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/theme> ?result .
  OPTIONAL { 
    ?result <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Lahore> .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
225,15,train,Give me the entity in the region of the time zone in Kiyosu and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Kiyosu,_Aichi> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://dbpedia.org/property/region> ?region .

  <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/property/birthPlace> ?birthplace .
  
  ?entity <http://dbpedia.org/ontology/location> ?region .
  ?entity = ?birthplace
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
203,22,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/event> ?calderEvent .
  ?calderEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  ?calderEvent <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Robert_Calder> .

  OPTIONAL {
    ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }

  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> .
    ?event <http://dbpedia.org/ontology/person> ?commander .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
412,15,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?ventirisWar ?partyLeaderWar WHERE {
  # Wars involving Konstantinos Ventiris
  <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/war> ?ventirisWar .

  # Leader of the National Party of Greece
  ?leader <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/National_Party_of_Greece> .
  
  # Wars involving the leader of the National Party of Greece
  ?leader <http://dbpedia.org/ontology/war> ?partyLeaderWar .
}
```",3,3,4,2,2,2,3,28,0,0,9,0,0.0,0
78,7,train,Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Alan_Parsons_Project> <http://dbpedia.org/ontology/member> ?result .
  OPTIONAL { 
    ?result <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Stuart_Tosh> .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
347,18,train,"Give me the commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Thirty_Years'_War> .
  ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> .
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
23,19,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of Gustavo Petro and entity in Colombia.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
SELECT ?barrerasParty ?petroParty WHERE {
  <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> 
    <http://dbpedia.org/ontology/politicalParty> ?barrerasParty .
  <http://dbpedia.org/resource/Gustavo_Petro> 
    <http://dbpedia.org/ontology/politicalParty> ?petroParty .

  OPTIONAL {
    <http://dbpedia.org/resource/Roy_Leonardo_Barreras_Montealegre> 
      <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Colombia> .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Gustavo_Petro> 
      <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Colombia> .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
203,30,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
SELECT ?result WHERE {
  # Military force in Battle of Fort Royal
  <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/ontology/militaryForce> ?result .
  
  # Commander in French campaign in Egypt and Syria
  OPTIONAL { 
    <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/property/commander> ?commander .
    ?result <http://dbpedia.org/ontology/militaryForce> ?commander .
  }
  
  # Military force related to Robert Calder's event
  OPTIONAL {
    ?event <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Societal_event> .
    ?event <http://dbpedia.org/ontology/event> ?calderEvent .
    ?calderEvent <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Robert_Calder> .
    ?result <http://dbpedia.org/ontology/militaryForce> ?event .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
905,27,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?predecessor .
  ?royalChild wdt:P31 wd:Q214424 . # Assuming Q214424 is the identifier for ""royalty""
  
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?royalChild .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
311,14,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?album <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/Sappy> .
  ?album rdf:type dbo:MusicalWork, owl:Thing, dbo:Album .
  
  ?album dbo:writer ?writer .
  ?writer dbo:bandMember ?result .
}
```",3,6,4,3,1,3,2,20,0,0,123,0,0.0,0
37,7,train,"Give me the birthplace of Scott LaFaro and birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplaceScottLaFaro ?birthplaceWriterArtist WHERE {
  <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?birthplaceScottLaFaro .
  
  OPTIONAL {
    <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?writerArtist .
    ?writerArtist <http://dbpedia.org/ontology/birthPlace> ?birthplaceWriterArtist .
  }
}
```",3,4,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
731,17,train,"Give me the force of William Tennant (Royal Navy officer) and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?force ?war WHERE {
  <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> <http://dbpedia.org/ontology/memberOf> ?force .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/conflict> ?war .
    ?war a <http://dbpedia.org/class/yago/YAGO_SocietalEvent108930068> . # Assuming this class represents societal events
    ?war a <http://dbpedia.org/class/yago/YAGO_MilitaryConflict108930069> . # Assuming this class represents military conflicts
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
609,2,train,Give me the birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
595,48,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify works by Hillary Clinton that are books and written works
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LiteraryWork100000001> . # Assuming this class represents books
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork> .

  # Step 2: Find the spouse of the author
  ?author <http://dbpedia.org/ontology/author> ?work .
  ?author <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Ensure the spouse is a politician and office holder
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician100000001> . # Assuming this class represents politicians
  OPTIONAL { 
    ?spouse <http://dbpedia.org/ontology/politicalParty> ?party .
  }

  # Step 4: Verify if the spouse was a commander in a war involving the United States Navy
  OPTIONAL {
    ?war <http://dbpedia.org/property/nationInvolved> <http://dbpedia.org/resource/United_States_Navy> .
    ?spouse <http://dbpedia.org/ontology/commander> ?war .
  }
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
361,6,train,Give me the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""actor"")).
  ?person <http://dbpedia.org/property/occupation> ?v2 .
  FILTER(?v1 != ?v2)
}
```",2,2,3,1,2,2,3,28,0,0,4210,0,0.0,0
628,58,train,"Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?result WHERE {
  # Band member of Uncle Murda
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Uncle_Murda> .
  
  # Person born as the birth name of Bobby Shmurda
  ?person <http://dbpedia.org/property/birthName> <http://dbpedia.org/resource/Bobby_Shmurda#Birth_name> .
  
  # Native of a specific region that is an award and also a region, American state, and settlement
  ?region <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/New_York_(state)> ;
          <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> ;
          <http://dbpedia.org/ontology/type> ?type .
  
  FILTER(?type IN (<http://dbpedia.org/class/yago/RegionsOfTheUnitedStates100000001>, 
                   <http://dbpedia.org/class/yago/AmericanStates1000001>,
                   <http://dbpedia.org/class/yago/SettlementsInNewYorkState>))
  
  ?award <http://dbpedia.org/ontology/location> ?region .
  ?band <http://dbpedia.org/property/awards> ?award ;
        <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/New_York_(state)> .

  # Linking the person to the region
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?person <http://dbpedia.org/ontology/placeOfBirth> ?region .

  FILTER(?member = ?person)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
198,23,train,"Give me the war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
SELECT ?award ?war WHERE {
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""United States Congress""@en .
  ?award a dbo:Award .
  
  ?recipient <http://dbpedia.org/ontology/recipient> ?award .
  ?recipient <http://dbpedia.org/ontology/war> ?war .
}
```",3,4,4,3,1,3,3,71,0,0,611,0,0.0,0
203,42,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT DISTINCT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/militaryConflict> ?war .
  ?war <http://dbpedia.org/ontology/event> ?war .
  ?war <http://dbpedia.org/property/commander> ?commander .
  ?war <http://dbpedia.org/property/involvesMilitaryUnit> <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> .

  <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/ontology/militaryForce> ?force .
  ?commander <http://dbpedia.org/property/commandedMilitaryForce> ?force .

  ?event <http://dbpedia.org/property/event> ?event .
  ?event <http://dbpedia.org/ontology/societalEvent> ?event .
  ?event <http://dbpedia.org/property/involvesPerson> <http://dbpedia.org/resource/Robert_Calder> .
  ?commander <http://dbpedia.org/property/commandedMilitaryForce> ?force2 .
  FILTER (?force = ?force2)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
19,3,train,Give me the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
595,52,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify commanders in Third Taiwan Strait Crisis
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> .
  
  # Step 2: Find works authored by Bill Clinton that are written works and books
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Bill_Clinton> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> ,
                             <http://dbpedia.org/class/yago/Book106936786> .
  
  # Step 3: Identify spouse of the author who is a politician and office holder
  ?author <http://purl.org/dc/terms/creator> ?work ;
           <http://xmlns.com/foaf/0.1/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/politician> true ;
          <http://dbpedia.org/ontology/officeHolder> true .

  # Step 4: Ensure this spouse is also the author of a work by Hillary Clinton
  ?hwork <http://purl.org/dc/terms/creator> ?spouse ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/WrittenWork108069068> ,
                                              <http://dbpedia.org/class/yago/Book106936786> .
  ?hwork <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Hillary_Clinton> .

  # Final result
  BIND(?commander AS ?result)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
737,7,train,Give me the parent of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Margarete_Sophie_of_Austria> 
    (<http://dbpedia.org/ontology/father>|<http://dbpedia.org/ontology/mother>) ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
293,8,train,Give me the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
557,43,train,"Give me the professional in  and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  # Find actor of Johnny Doughboy
  <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Ensure this actor is also a producer of A Star Is Born (1937 film)
  <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/property/producer> ?actor .

  # Check if the person has a professional occupation
  ?actor <http://dbpedia.org/ontology/profession> ?profession .
  
  # Identify their claim to fame as a work they produced
  OPTIONAL {
    ?claimToFameWork <http://dbpedia.org/property/producer> ?actor .
    ?claimToFameWork <http://www.w3.org/2002/07/owl#sameAs> ?result . # Assuming the claim to fame is linked directly or indirectly as a notable work
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
39,26,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> .
  ?character a <http://dbpedia.org/class/yago/FictionalCharacter108069068> . # Fictional Character class
  ?character a <http://dbpedia.org/class/yago/ComicsCharacters1000000010> . # Comics Character class
  
  OPTIONAL {
    ?character <http://dbpedia.org/ontology/alternateName> ?alterEgo .
    ?profession <http://dbpedia.org/property/profession> ?alterEgo .
    ?result <http://dbpedia.org/property/profession> ?profession .
  }
}
```",3,5,4,3,1,3,3,71,0,0,39640,0,0.0,0
609,31,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?awardeeBirthPlace ?youngkinBirthPlace WHERE {
  # Birth place of an awardee associated with Vince Gilligan
  ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Vince_Gilligan> .
  ?award <http://dbpedia.org/ontology/receiver> ?awardee .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .

  # Birth place of Glenn Youngkin
  <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?youngkinBirthPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
263,14,train,Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Hon. Mary Frances Bowes-Lyon""@en .
  ?parent <http://dbpedia.org/ontology/parent> ?person .
  ?parent <http://dbpedia.org/ontology/placeOfBirth> ?place .
  FILTER(CONTAINS(LCASE(STR(?place)), ""middlesex""))
  BIND(?parent AS ?result)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,51,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/event> ?societalEvent .
  ?societalEvent rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> . # Assuming a specific class for societal events

  ?awardee <http://dbpedia.org/property/knightCommanderOfTheOrderOfTheBath> true .
  ?event <http://dbpedia.org/ontology/awardee> ?awardee .

  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Assuming a specific class for military conflicts
  ?war rdf:type <http://www.w3.org/2002/07/owl#Thing> . # General event type

  ?war <http://dbpedia.org/property/militaryForce> ?militaryForce .
  
  ?bayne <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .
  ?war <http://dbpedia.org/ontology/participant> ?bayne .
}
```",5,9,6,3,2,3,3,71,0,0,24,0,0.0,0
270,4,train,Give me the person decedent at Melbourne and predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> .
  ?person <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> .
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
633,10,train,"Give me the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,49,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
SELECT ?player ?team WHERE {
  # Find the athlete born on 1955-02-22
  ?athlete <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^xsd:date .
  ?athlete <http://dbpedia.org/ontology/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""athlete"")) .

  # Find the player associated with this athlete
  ?player <http://dbpedia.org/property/team> ?team .
  ?player <http://www.w3.org/2000/01/rdf-schema#label> ?playerLabel .
  
  # Find Marcelo Sarmiento's birthday
  ?marceloSarmiento <http://dbpedia.org/ontology/birthDate> ?birthday .

  # Find a soccer player and manager with the same birthday as Marcelo Sarmiento
  ?soccerPerson <http://www.w3.org/2000/01/rdf-schema#label> ?personLabel .
  FILTER(CONTAINS(LCASE(?personLabel), ""soccer player"") && CONTAINS(LCASE(?personLabel), ""manager"")) .
  ?soccerPerson <http://dbpedia.org/ontology/birthDate> ?birthday .

  # Ensure the team is associated with this soccer player and manager
  ?soccerPerson <http://dbpedia.org/property/team> ?team .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
347,10,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/parent> ?child .
  OPTIONAL { 
    ?child <http://dbpedia.org/property/occupation> ?v1 .
    FILTER(CONTAINS(LCASE(?v1), ""commander"") || CONTAINS(LCASE(?v1), ""thirty years' war""))
  }
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
68,20,train,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?result WHERE {
  # Identify as child of a commander
  ?commander <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Commander> .
  ?result <http://dbpedia.org/ontology/father> ?commander .

  # Check if the person is royalty in Siege of Padua
  OPTIONAL { 
    ?result <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 represents ""royalty""
    ?siegeEvent <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Siege_of_Padua> .
    ?result <http://dbpedia.org/ontology/participant> ?siegeEvent .
  }

  # Father of Catherine of Austria, Queen of Portugal
  ?catherine <http://dbpedia.org/ontology/father> ?result .
  FILTER(STRSTARTS(LCASE(?catherine), ""catherine of austria, queen of portugal""))

  # Father of Isabella of Austria
  ?isabella <http://dbpedia.org/ontology/father> ?result .
  FILTER(STRSTARTS(LCASE(?isabella), ""isabella of austria""))
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
119,18,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela and tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/ontology/office> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Santiago_de_Compostela> .
  }
  
  OPTIONAL {
    ?result <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Spain> .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
198,44,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  # Find Henry Clay Lewis's birthplace that is a settlement and American
  <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""us"") || CONTAINS(LCASE(?settlementLabel), ""america""))
  
  # Find the awardee of Gillmore Medal and their military force
  <http://dbpedia.org/resource/Gillmore_Medal> <http://dbpedia.org/property/awardee> ?medalAwardee .
  ?medalAwardee <http://dbpedia.org/ontology/militaryForce> ?militaryForce .

  # Find the war involving Amasa Tracy
  <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/war> ?war .

  # Ensure all conditions are met by a single entity
  FILTER (?birthPlace = ?result && ?militaryForce = ?result && ?war = ?result)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
203,39,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/event> ?awardee .
  ?awardee <http://dbpedia.org/property/knightCommanderOfTheOrderOfTheBath> true .
  ?event <http://dbpedia.org/ontology/societyEvent> true .

  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .

  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Fort_Royal> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
628,52,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find Bobby Shmurda's birth name
  <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Find someone born with that same birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .

  # Ensure the person is a band member of GS9
  ?gs9Member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/GS9> .
  
  # Check if this person is also a musical artist and native to Florida
  ?person <http://dbpedia.org/ontology/member> ?gs9Member .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?person <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Florida> .
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q215380> . # Assuming Q215380 is the identifier for ""musical artist""
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
80,29,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparqp
SELECT ?result WHERE {
  # Find the album associated with ""What You Know"" by T.I.
  <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?album .
  
  # Identify actors of that album
  ?album <http://dbpedia.org/ontology/starring> ?result .

  # Check if the same individual is also an actor in Shelby Oaks
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
531,28,train,Give me the office of Miguel Maura and office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . },"```sparql
SELECT ?miguelOffice ?marianoOffice ?tenant WHERE {
  <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/politicalOffice> ?miguelOffice .
  
  <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/ontology/politicalOffice> ?marianoOffice .

  OPTIONAL {
    <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://dbpedia.org/ontology/inhabitant> ?tenant .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,46,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Find Marty Pollio's birthdate
  <http://dbpedia.org/resource/Marty_Polio> <http://dbpedia.org/ontology/birthDate> ?birthdate .

  # Find athletes born on the same date as Marty Pollio
  ?person <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> . # Assuming Q33999 is ""athlete""
  ?person <http://dbpedia.org/property/birthDate> ?birthdate .

  # Find actors in All or Nothing: Manchester City who are soccer players and athletes
  OPTIONAL {
    <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q33999> . # Assuming Q33999 is ""athlete""
    ?actor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q1930183> . # Assuming Q1930183 is ""soccer player""
  }

  # Ensure the person matches both conditions
  FILTER (?person = ?actor)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
531,6,train,"Give me the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/conflict> <http://dbpedia.org/resource/Central_African_Republic_Civil_War> .
  ?event <http://dbpedia.org/ontology/commander> ?result .
  
  ?result <http://dbpedia.org/property/officeHolder> ?v1 .
  ?result a <http://dbpedia.org/ontology/politician> .
}
```",1,3,2,1,1,3,3,71,0,0,179,0,0.0,0
706,10,train,"Who is the actor of the movie, that is a movie and Indian, with Dipankar De?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?movie <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> .
  ?movie dbo:starring <http://dbpedia.org/resource/Dipankar_De> .
  ?movie dbo:starring ?actor .
}
```",2,4,3,2,1,3,2,20,0,0,17,0,0.0,0
87,21,train,"Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result .
  
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> .
  }
  
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  ?movie <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q11424> . # Assuming Q11424 is the identifier for ""film""
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Audrey_Hepburn> .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
87,15,train,"Give me the actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Find actors of ""Always"" (1989)
  <http://dbpedia.org/resource/Always_(film)> <http://dbpedia.org/ontology/starring> ?actor .

  # Find movies that are works, films, and feature Iliza Shlesinger
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/YagoLegalDocument4325> . # Assuming YagoLegalDocument4325 represents ""work""
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> .

  # Find actors of these movies
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
353,41,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  # Child of Elvira of Castile, Queen of Sicily
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .
  
  # Father of the child that is royalty of William I of Sicily
  ?royalChild <http://dbpedia.org/ontology/father> ?result .
  ?royalChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_I_of_Sicily> .
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  
  # Child of the parent of Roger III, Duke of Apulia
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  ?result <http://dbpedia.org/ontology/birthParent> ?parent .

  # Ensure the result is the same individual satisfying all conditions
  FILTER (?child = ?royalChild && ?result = ?child)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,23,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
SELECT ?landmark ?partyMember WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""20.1168""^^xsd:decimal .
  
  OPTIONAL { 
    ?location <http://dbpedia.org/ontology/location> ?landmark .
    ?location <http://dbpedia.org/property/rulingParty> ?party .
    
    ?member <http://dbpedia.org/ontology/member> ?party ;
            a <http://dbpedia.org/ontology/Person> .
  }
}
```

Note: This query assumes that DBpedia has structured data linking landmarks to locations and ruling parties, which may not always be the case. Adjustments might be necessary based on available data.",3,3,4,3,1,3,3,71,0,0,21514,0,0.0,0
668,16,train,"Give me the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?writer ?profession WHERE {
  <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""musical artist""))
  OPTIONAL { 
    ?writer <http://dbpedia.org/property/profession> ?profession .
  }
}
```",2,3,3,2,1,3,3,71,0,0,23,0,0.0,0
782,7,train,Give me the persona of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?alias WHERE {
  <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/alsoKnownAs> ?alias .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
293,3,train,Give me the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  ?landmark <http://dbpedia.org/ontology/elevation> ""20.1168""^^xsd:float .
}
```

Note: The elevation value is rounded to match typical precision in DBpedia data, assuming the property uses `xsd:float` for its datatype.",1,1,2,1,1,3,3,71,0,0,192,0,0.0,0
557,1,train,Give me the producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?producer .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
198,36,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war ?entity WHERE {
  # Find wars associated with Amasa Tracy
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Amasa_Tracy> .
  
  # Identify the person who died on 1850-08-05
  ?person <http://dbpedia.org/property/deathDate> ""1850-08-05""^^xsd:date ;
           <http://dbpedia.org/ontology/birthPlace> ?birthplace .

  # Ensure birthplace is a settlement and American
  ?birthplace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> ;
              <http://dbpedia.org/ontology/type> ?type .
  
  FILTER(?type = <http://dbpedia.org/class/yago/Settlement108069068> || 
         ?type = <http://dbpedia.org/class/yago/City110610416> ||
         ?type = <http://dbpedia.org/class/yago/Town110610415>) .

  # Find entities related to the birthplace
  ?entity <http://www.w3.org/2002/07/owl#sameAs> ?birthplace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
943,43,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?result WHERE {
  ?alterEgo <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/Lamont_Cranston> .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> .
  ?result <http://dbpedia.org/ontology/child> ?alterEgo .
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Baeda_Maryam_I> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
492,22,train,Give me the death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?actor1 ?deathPlace1 ?actor2 ?deathPlace2 WHERE {
  # Actor of Color Me Dead
  <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/ontology/starring> ?actor1 .
  ?actor1 <http://dbpedia.org/property/deathPlace> ?deathPlace1 .

  # Actor of The Sky Ranger (1928 film)
  <http://dbpedia.org/resource/The_Sky_Ranger_(film)> <http://dbpedia.org/ontology/starring> ?actor2 .
  ?actor2 <http://dbpedia.org/property/deathPlace> ?deathPlace2 .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
80,55,train,Give me the professional in the alter ego of The Shadow and actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?result WHERE {
  # Professional in the alter ego of The Shadow
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/property/profession> ?result .

  # Actor of a movie with ""and"" in the title
  ?movie <http://dbpedia.org/ontology/starring> ?result .
  FILTER(CONTAINS(LCASE(?movie), ""and""))

  # Actor (or associated artist) of the album of What You Know (T.I. song)
  OPTIONAL {
    <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/property/album> ?album .
    ?album <http://dbpedia.org/ontology/artist> ?result .
  }
}
```",6,6,7,2,3,3,3,71,0,0,4,0,0.0,0
782,22,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Nicholas Michael Curran"" .
  ?person <http://dbpedia.org/ontology/musicalArtist> true .
  
  ?collaboration <http://dbpedia.org/property/artist> ?person ;
                 <http://dbpedia.org/property/associatedArtist> ?associatedArtist .
  
  OPTIONAL {
    ?reference <http://dbpedia.org/property/reference> ""The Fabulous Thunderbirds"" .
    ?associatedArtist ?reference .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
472,19,train,"Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?result WHERE {
  ?christianIX <http://dbpedia.org/ontology/administration> ?result .
  ?olafI <http://dbpedia.org/ontology/administration> ?result .

  ?hansen <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER (STRSTARTS(STR(?deathPlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?deathPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement }).

  OPTIONAL {
    ?result <http://dbpedia.org/ontology/administeredTerritoryFrom> ?settlement .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
668,12,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musician> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
270,0,train,Give me the predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . },"```sparql
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Ada_Watson> <http://dbpedia.org/ontology/successor> ?predecessor .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,15,train,"Give me the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Thing> .

  ?person <http://dbpedia.org/ontology/died> ?deathEvent .
  ?deathEvent <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Los_Angeles> .
  
  ?movie <http://dbpedia.org/ontology/starring> ?person .
}
```",2,3,3,2,1,3,3,71,0,0,6475,0,0.0,0
412,4,train,"Give me the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace a dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
311,16,train,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the writer of ""No Alternative""
  ?writer <http://dbpedia.org/ontology/writtenWork> <http://dbpedia.org/resource/No_Alternative> .
  
  # Step 2: Find band members related to these writers
  ?bandMember <http://dbpedia.org/ontology/member> ?band .
  ?band <http://dbpedia.org/ontology/musicalArtist> ?writer .

  # Step 3: Identify associated musical artists of R.E.M.
  ?associated1 <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/R.E.M.> .
  
  # Step 4: Find another artist associated with the first associated artist
  ?result <http://dbpedia.org/property/associatedMusicalArtist> ?associated1 .

  # Ensure the result is an artist
  ?result a <http://dbpedia.org/class/yago/MusicalArtist115069273> .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
737,53,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Child of the child (royalty) of Archduke Charles Louis of Austria
  ?childOfCharles <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> .
  ?grandChild <http://dbpedia.org/ontology/parent> ?childOfCharles .
  ?grandChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Predecessor of the child of the spouse (royalty) of Archduchess Helena
  ?spouseOfHelena <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> .
  ?spouseOfHelena <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?childOfSpouse <http://dbpedia.org/ontology/parent> ?spouseOfHelena .
  ?result <http://dbpedia.org/ontology/successor> ?childOfSpouse .

  # Step 3: Child of Albrecht, Duke of Württemberg
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,29,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?result WHERE {
  # Commander in the French Campaign in Egypt and Syria
  <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result .
  
  # Military force of a war involving William Bayne, classified as military conflict and event
  ?war <http://dbpedia.org/property/militaryForce> ?result .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Assuming this is the class for military conflicts
  ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Event> .
  
  # William Bayne's involvement in a war
  ?bayne <http://dbpedia.org/property/militaryForce> ?result .
  ?bayne <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> .

  # Military force of the Battle of Cape Finisterre (1805)
  <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> <http://dbpedia.org/property/militaryForce> ?result .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
159,44,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/show> ?tvShow .
  ?war <http://dbpedia.org/ontology/event> ?societalEvent .
  
  ?result <http://dbpedia.org/property/commanderInWar> ?war .
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .
  FILTER(?result = ?successor)
  
  OPTIONAL {
    ?reference <http://dbpedia.org/property/writerOf> <http://dbpedia.org/resource/Always_the_Love_Songs> .
    ?reference <http://dbpedia.org/ontology/reference> ?result .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
80,44,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Actor of Shelby Oaks
  <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result .

  # Actor/contributor of the album containing ""What You Know (T.I. song)""
  OPTIONAL { 
    ?album <http://dbpedia.org/property/song> <http://dbpedia.org/resource/What_You_Know_(T.I._song)> .
    ?album <http://dbpedia.org/ontology/contributor> ?result .
  }

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 .
    ?result <http://dbpedia.org/property/occupation> ?v1 .
  }
}
```",5,5,6,2,3,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
353,24,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child ?father WHERE {
  # Find children who are royalty and have both William I of Sicily and Elvira of Castile as parents
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/William_I_of_Sicily> .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Find the father of this child
  ?father <http://dbpedia.org/ontology/parent> ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
270,6,train,"Give me the person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?decedent WHERE {
  <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace a <http://dbpedia.org/class/yago/Settlement_1234567890> . # Assuming the birthplace is classified as a settlement
  ?decedent <http://dbpedia.org/ontology/deathPlace> ?birthPlace .
}
```

Note: The class URI `<http://dbpedia.org/class/yago/Settlement_1234567890>` should be replaced with the actual class URI for settlements in DBpedia, which might require checking the specific ontology used by DBpedia.",2,3,3,2,1,2,2,9,0,0,809,0,0.0,0
353,7,train,"Who is the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Constance_of_Burgundy> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse a <http://dbpedia.org/ontology/Royal> . # Assuming 'Royal' is the class for royalty
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
353,46,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify children of William I of Sicily who are royalty
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Wilhelm_I._of_Sicily> .
  ?child <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the father of this child
  ?result <http://dbpedia.org/ontology/father> ?child .

  # Step 3: Ensure this person (father) is a parent to someone who is royalty and a child of Roger II of Sicily
  ?royalChild <http://dbpedia.org/ontology/father> ?result .
  ?royalChild <http://dbpedia.org/ontology/mother> ?mother . # Optional, if mother information is needed
  ?royalChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty status
  ?royalChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Roger_II_of_Sicily> .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,14,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?result WHERE {
  ?war <http://dbpedia.org/ontology/war> ?v1 .
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> .
  
  ?war <http://dbpedia.org/ontology/commander> ?result .
  ?war <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Jean_Baptiste,_Comte_d'Arco> .
}
```",2,4,3,2,1,3,3,71,0,0,40,0,0.0,0
609,13,train,"Give me the birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  ?governor <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Virginia> .
  ?governor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Q82955 is the identifier for ""politician""
  ?governor dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,16,train,"Give me the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?actor WHERE {
  ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  
  ?actor <http://dbpedia.org/property/occupation> ?occupation1 .
  ?actor <http://dbpedia.org/property/occupation> ?occupation2 .

  FILTER (
    (?occupation1 = ""soccer player"" && ?occupation2 = ""athlete"") ||
    (?occupation1 = ""athlete"" && ?occupation2 = ""soccer player"")
  )
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
756,22,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
SELECT ?result WHERE {
  ?season <http://dbpedia.org/ontology/team> ?team .
  ?season <http://dbpedia.org/property/type> ?type1 .
  ?season <http://dbpedia.org/property/type> ?type2 .
  
  FILTER (?type1 = ""Soccer Club Season"" && ?type2 = ""Sports Team Season"")
  
  ?season <http://dbpedia.org/property/manager> ?result .
  
  OPTIONAL {
    ?letschAssociation <http://dbpedia.org/ontology/associatedWith> <http://dbpedia.org/resource/Thomas_Letsch> .
    ?letschAssociation <http://dbpedia.org/property/manager> ?result .
  }
  
  ?bochumSeason <http://dbpedia.org/property/team> <http://dbpedia.org/resource/VfL_Bochum> .
  ?bochumSeason <http://dbpedia.org/property/manager> ?result .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
159,29,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Always_the_Love_Songs> .
  ?result <http://dbpedia.org/property/commanderInWar> <http://dbpedia.org/resource/Great_Turkish_War> .
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Yurii_Khmelnytsky> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
859,10,train,"Give me the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/property/occupation> ?v1 .
  FILTER(CONTAINS(LCASE(?v1), ""musical artist"") || CONTAINS(LCASE(?v1), ""musician""))
  
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/associatedBandMember> ?result .
  }
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
687,33,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
SELECT ?result WHERE {
  # Find player in Juan Carlos Molina (footballer)
  <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/player> ?player1 .
  
  # Identify films directed by Manuel Huerga
  ?film <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Manuel_Huerga> .

  # Find actors in these films who are also soccer players and athletes
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/profession> ?profession1 .
  ?actor <http://dbpedia.org/ontology/profession> ?profession2 .

  FILTER (
    (?profession1 = <http://dbpedia.org/resource/Soccer_player>) &&
    (?profession2 = <http://dbpedia.org/resource/Athlete>)
  )

  # Check if these actors have played with Juan Carlos Molina
  ?actor <http://dbpedia.org/ontology/player> ?player2 .
  
  FILTER(?player1 = ?player2)
  
  BIND(?actor AS ?result)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
103,26,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  
  ?result <http://www.wikidata.org/entity/P106> ?occupation .
  FILTER (?occupation = <http://www.wikidata.org/entity/Q82955>)
}
```",3,4,4,3,1,3,3,71,0,0,58032,0,0.0,0
756,23,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsClubs1000000> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organizations100000036> .
  ?successor <http://dbpedia.org/ontology/teamManager> ?manager .
}
```",3,9,4,3,1,3,3,71,0,0,1,0,0.0,0
38,10,train,"Give me the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
SELECT ?result WHERE {
  ?result a <http://dbpedia.org/ontology/WrittenWork> .
  ?result a owl:Thing .

  OPTIONAL { 
    ?author <http://dbpedia.org/ontology/author> ?result .
    ?author <http://dbpedia.org/property/commanderInKoreanConflict> ""true""^^xsd:boolean .
    ?author <http://dbpedia.org/ontology/officeHolder> ?office .
  }
}
```",2,5,3,2,1,3,2,20,52,88747,0,0.0005855921800921182,1.0,0.0011704989251668525
609,34,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?awardeeBirthPlace ?ceceBellBirthPlace WHERE {
  # Find awardees associated with Vince Gilligan's awards and their birthplaces
  ?award <http://dbpedia.org/ontology/receiver> ?awardee .
  ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Vince_Gilligan> .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .

  # Find Cece Bell's birthplace
  <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?ceceBellBirthPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,15,train,"Give me the entity in Poland and war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland> .
  ?result <http://dbpedia.org/ontology/conflictType> <http://dbpedia.org/resource/Military_conflict> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/class/yago/MilitaryConflict108067069> <http://dbpedia.org/class/yago/TelevisionShow108067069>) .
  
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/commanded> ?result .
    ?commander <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Maria_I_of_Portugal> .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
386,15,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?entity WHERE {
  # Get the birthplace of Elena Žalinkevičaitė-Petrauskienė
  <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Get wars associated with Alexander Lvovich Davydov
  <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/property/war> ?war .

  # Find a common entity between the birthplace and the war
  {
    ?birthPlace rdf:type ?entity .
  } UNION {
    ?war rdf:type ?entity .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
628,8,train,"Give me the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/ontology/receivesAward> ?award .
  
  ?region <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Category:Regions_of_the_United_States> ;
          <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> .
  
  ?region a <http://dbpedia.org/class/yago/State115069465> ; # Assuming this class represents states
          a <http://dbpedia.org/class/yago/Settlements108365470> . # Assuming this class represents settlements
  
  ?award <http://dbpedia.org/ontology/location> ?region .
}
```",1,5,2,1,1,3,3,71,0,0,3,0,0.0,0
78,6,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?result WHERE {
  {
    <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/musicalArtist> ?result .
  }
  UNION
  {
    <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/musicalArtist> ?result .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
89,46,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Spouse of the father (royalty) of Myat Hpone Pyo
  ?father <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?result <http://dbpedia.org/ontology/spouse> ?father .

  # Child of the parent (Minye Kyawswa) of a child
  ?child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?result2 <http://dbpedia.org/ontology/parent> ?child1 .

  FILTER(?result = ?result2)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
769,6,train,Give me the player in Ye Jia and player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/property/player> ?result .
  <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/property/player> ?result .
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
293,22,train,Give me the party member of Republican Party (United States) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Republican_Party_(United_States)> .
  ?annSothern <http://dbpedia.org/property/birthName> ?birthName .
  FILTER(?annSothern = <http://dbpedia.org/resource/Ann_Sothern>)
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,27,train,"Give me the birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://www.wikidata.org/entity/P27> <http://www.wikidata.org/entity/Q30> . # Q30 is the identifier for ""United States""
  ?author <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
353,11,train,"Give me the child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,5,7,0.0,0.0,0
89,60,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify the spouse of Saw Min Phyu who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> .
  ?spouse <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""

  # Step 2: Find the child of this royal spouse
  ?child <http://dbpedia.org/ontology/parent> ?spouse .

  # Step 3: Determine the predecessor of this child
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  # Step 4: Identify the parent of Minye Kyawswa's child
  ?minyeChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?parentOfMinyeChild <http://dbpedia.org/ontology/parent> ?minyeChild .

  # Step 5: Find the child of this parent
  ?result <http://dbpedia.org/ontology/parent> ?parentOfMinyeChild .

  FILTER(?predecessor = ?result)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,6,train,Give me the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> <http://dbpedia.org/property/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
859,7,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/member> ?member .
  
  OPTIONAL { 
    ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist100000001> .
    ?artist <http://dbpedia.org/ontology/member> ?member .
    ?artist <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Band> .
    ?artist <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Musical_group> .
    ?artist <http://www.w3.org/ns/org#organization> ?org .
  }
}
```",2,5,3,2,1,3,2,20,0,0,18,0,0.0,0
668,46,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify Rod Argent's profession
  <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?profession .

  # Step 2: Find individuals with the same profession as Rod Argent
  ?person <http://dbpedia.org/property/occupation> ?profession .
  
  # Step 3: Identify the birth name of $pacely
  ?pacely <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 4: Find an associated musical artist with this birth name
  ?artist <http://dbpedia.org/property/associatedMusicalArtist> ?person .
  FILTER(?person = ?result)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
386,16,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?awardee ?war ?entity WHERE {
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> .
  ?awardee <http://dbpedia.org/ontology/war> ?war .
  
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Russian_Empire> .
    FILTER(?awardee = ?entity)
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
353,47,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?reference <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty
  ?reference <http://www.wikidata.org/entity/P39> ?office . # Office holder

  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> .
  ?candidate <http://dbpedia.org/ontology/parent> ?parent .

  ?result <http://dbpedia.org/ontology/child> ?royaltyChild .
  ?royaltyChild <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Royalty

  FILTER (?candidate = ?reference)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,13,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.wikidata.org/entity/P31> <http://www.wikidata.org/entity/Q214424> . # Assuming Q214424 is the identifier for ""royalty""
  ?father <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,46,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?birthPlaceGovernor ?birthPlaceAwardee WHERE {
  # Birth place of the governor of Virginia
  ?governor <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Virginia> .
  ?governor <http://dbpedia.org/property/politician> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
  ?governor <http://dbpedia.org/ontology/birthPlace> ?birthPlaceGovernor .

  # Birth place of an awardee associated with Vince Gilligan
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  ?award <http://dbpedia.org/property/associatedPerson> <http://dbpedia.org/resource/Vince_Gilligan> .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlaceAwardee .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,11,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war ?commander WHERE {
  ?war rdf:type dbo:War .
  ?war rdf:type dbo:SocietalEvent .
  
  OPTIONAL { 
    ?tvShow dbo:starring <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
    ?tvShow dbo:depicts ?war .
  }
  
  ?war dbo:commander ?commander .
}
```",2,5,3,2,1,3,3,71,0,0,42,0,0.0,0
756,10,train,Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  # Manager of the 2020–21 SBV Vitesse season
  <http://dbpedia.org/resource/2020%E2%80%9321_SBV_Vitesse_season> <http://dbpedia.org/ontology/teamManager> ?manager .
  
  # Manager of VfL Bochum
  <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/teamManager> ?manager .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,40,train,Give me the predecessor of Myat Hpone Pyo and spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
SELECT ?result WHERE {
  # Predecessor of Myat Hpone Pyo
  ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> .

  # Spouse of Saw Shwe Khet
  ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> .
  
  # Child of the parent of the child of Minye Kyawswa
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Minye_Kyawswa> .
  ?result <http://dbpedia.org/ontology/parent> ?child .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
871,22,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  ?politician <http://dbpedia.org/ontology/child> ?result .
  ?politician <http://www.wikidata.org/entity/P106> <http://www.wikidata.org/entity/Q82955> . # Assuming Q82955 is the identifier for ""politician""
  
  ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  
  ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
