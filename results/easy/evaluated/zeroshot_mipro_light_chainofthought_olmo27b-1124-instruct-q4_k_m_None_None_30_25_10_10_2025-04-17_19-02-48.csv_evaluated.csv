id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
158,28,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grand_duke_birthplace ?sandro_birthplace
WHERE {
  ?grand_duke a dbpedia:Monarch ;
               dbpedia:monarchy ""Grand Duke of Finland"" .
  ?grand_duke dbpedia:birthPlace ?grand_duke_birthplace .

  ?sandro a dbpedia:Person ;
           dbpedia:birthPlace ?sandro_birthplace .

  ?nicholas a dbpedia:Person ;
            dbpedia:birthPlace ?nicholas_birthplace .

  ?grand_duke birthplaceSameAs ?nicholas .
  ?sandro birthplaceSameAs ?nicholas .
}
```

### Completed",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
668,67,test,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?artist_name ?birthplace ?writing_profession ?associated_artist_name
WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:region dbpedia:Central_Ghana ;
            dbpedia:occupation dbpedia:Writer .
  ?artist dbpedia:partOfWork dbpedia:The_Live_Anthology .
  ?associated_artist a dbpedia:Artist ;
                    rdfs:label ?associated_artist_name .
  ?artist rdfs:label ?artist_name .
  ?artist dbpedia:birthPlace ?birthplace
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,28,test,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon and professional in the profession of Frédéric Bouraly.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_films ?actor_albums ?association_with_Bouraly
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:filmRole ?actor_films .
  ?actor a dbpedia:Person ;
         dbpedia:albumParticipatedIn ?actor_albums .
  ?actor foaf:knows ?association_with_Bouraly .
  ?association_with_Bouraly a dbpedia:Person;
                     rdfs:label ""Frédéric Bouraly""@fr
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
595,69,test,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?president_name ?disease_event ?author_name ?work1_name ?work2_name
WHERE {
  ?president a dbpedia:Person ;
             dbpedia:office dbpedia:President_of_the_United_States ;
             dbpedia:birthPlace ""United States"" .
  ?president rdfs:label ?president_name .
  ?disease_event a dbpedia:Event ;
                    dbpedia:impact ""anthrax attacks (2001)"" .
  ?societal_event a dbpedia:Societal_Event ;
                    dbpedia:description ""1998 bombing of Afghanistan and Sudan (Operation Infinite Reach)"" .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ""United States"" ;
           rdfs:label ?author_name ;
           dbpedia:writtenWork ?work1 .
  ?work1 a dbpedia:WrittenWork ;
          dbpedia:author ?author ;
          dbpedia:title ""It Takes a Village"" .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ""United States"" ;
           rdfs:label ?author_name ;
           dbpedia:writtenWork ?work2 .
  ?work2 a dbpedia:WrittenWork ;
          dbpedia:author ?author ;
          dbpedia:title ""My Life"" .
  ?president dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ;
            rdfs:label ""Hillary Clinton"" .
}
```

### Completed",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
595,70,test,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name 
WHERE {
  ?author a dbpedia:Person ; dbpedia:birthPlace ?author_birthplace . 
  ?author rdfs:label ?author_name . 
  ?politician a dbpedia:OfficeHolder; dbpedia:role dbpedia:Politician ; dbpedia:birthPlace ?politician_birthplace . 
  ?author dbpedia:isSpouseOf ?politician . 
  ?author dbpedia:hasMilitaryRole dbpedia:MilitaryCommander ; dbpedia:illness ?author_disease . 
  ?author dbpedia:participatedInEvent dbpedia:SocietalEvent . 
  ?ship a dbpedia:Vessel; dbpedia:id ?ship_id ; dbpedia:name ?ship_name . 
  ?ship dbpedia:owner ?spouse_name . 
  ?work a dbpedia:WrittenWork; rdfs:label ?work_label . 
  ?work rdfs:isDefinedBy ?work_uri . 
  ?work_uri a dbpedia:Book . 
  ?residence a dbpedia:Location; dbpedia:name ?residence_name . 
  ?politician dbpedia:residence ?residence_address . 
}
",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
353,69,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name 
WHERE { 
  ?royalty a dbpedia:Royalty ; 
  dbpedia:child[1] ?grandchild . 
  ?grandchild a dbpedia:Person ; 
  dbpedia:parent[1] ?parent_of_roger_ii . 
  ?parent_of_roger_ii a dbpedia:Person ; 
  dbpedia:child[1] ?roger_ii_of_sicily . 
  ?roger_ii_of_sicily a dbpedia:Person ; 
  dbpedia:spouse[1] ?william_I_of_sicily_spouse . 
  ?william_I_of_sicily_spouse a dbpedia:Person 
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
706,20,test,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?actor_birthplace ?fellowship_winner_name ?fellowship_winner_birthplace 
WHERE { 
  ?actor a dbpedia:Person ; 
    dbpedia:birthPlace ?actor_birthplace . 
  ?actor rdfs:label ?actor_name . 
  ?movie a dbpedia:Film ; 
    dbpedia:mainActor ?actor . 
  ?fellowship_winner a dbpedia:Person ; 
    dbpedia:awarded dbpedia:SangeetNatakAkademiFellowship . 
  ?fellowship_winner rdfs:label ?fellowship_winner_name . 
}",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
414,19,test,"Give me the award of the awardee of the reference to Nobel Prize in Physics and show of the host, that is an educational institution, of Nobel Prize in Physics.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v4 <http://dbpedia.org/property/awards> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nobelprize: <http://dbpedia.org/ontology/NobelPrize>

SELECT ?physicist_name ?host_institution
WHERE {
  ?physicist a nobelprize:NobelLaureate ;
             nobelprize:award ""Physics"" .
  ?host_institution a dbpedia:EducationalInstitution ;
                    rdfs:label ?host_institution_label .
  ?physicist rdfs:label ?physicist_name .
  ?host_institution rdfs:label ?host_institution_name
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
38,20,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name ?office_holder_title ?korean_conflict_commander_name ?politics_office ?north_carolina_air_national_guard
WHERE {
  ?author a dbpedia:Person ;
dbpedia:birthPlace xsd:string ;
dbpedia:role dbpedia:OfficeHolder ;
dbpedia:office ?office_holder_title .
  ?author rdfs:label ?author_name .
  ?korean_conflict_commander a dbpedia:Person ;
dbpedia:role dbpedia:Commander ;
dbpedia:conflict dbpedia:Korean_War .
  ?politics_office a dbpedia:Office ;
dbpedia:officeHolder ?korean_conflict_commander .
  ?author dbpedia:nationality 'American' .
  ?author dbr:hasWork ?work .
  ?work a dbpedia:WrittenWork ;
dbpedia:type dbpedia:Book
  ?politics_office rdfs:label 'North Carolina Air National Guard' .
}",6,15,7,3,2,3,2,20,0,0,1,0,0.0,0
414,20,test,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss and award of the awardee of the reference to Nobel Prize in Physics.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/property/awards> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nobelprize: <http://dbpedia.org/ontology/NobelPrize>

SELECT ?ceremony_location
WHERE {
  ?awardee rdfs:label ""Rainer Weiss"" .
  ?awardee dbpedia:PWon NobelPrizeInPhysics .
  ?ceremony a dbpedia:Event ;
            dbpedia:location ?ceremony_location .
  ?ceremony rdfs:label ?ceremony_name .
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
140,19,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify John McDermott's death place (settlement)
SELECT ?john_mcdermott_death_place AS ?death_place WHERE {
    ?john_mcdermott a dbpedia:Person ;
                    dbpedia:name ""John McDermott"" ;
                    dbpedia:deathPlace ?john_mcdermott_death_place .
}

# Step 2: Identify George Pickett's death place (settlement)
SELECT ?george_pickett_death_place AS ?death_place WHERE {
    ?george_pickett a dbpedia:Person ;
                     dbpedia:name ""George Pickett"" ;
                     dbpedia:deathPlace ?george_pickett_death_place .
}

# Step 3: Find the ruling party in these settlements at the time of death
SELECT ?ruling_party_name ?party_member WHERE {
    ?death_place a dbpedia:Settlement ;
                 dbpedia:isRuledBy ?ruling_party .
    ?ruling_party rdfs:label ?ruling_party_name .
    OPTIONAL { ?ruling_party dbpedia:hasMember ?party_member . }
}

# Combine results to find the party member
UNION {
    SELECT ?john_mcdermott_death_place ?ruling_party_name WHERE { 
        # Assuming we have the ruling party from the previous query
        ?death_place ?ruling_party_name
    } 
    SELECT ?george_pickett_death_place ?ruling_party_name WHERE { 
        # Assuming we have the ruling party from the previous query
        ?death_place ?ruling_party_name
    }
}
```

This SPARQL query structure will guide us through the process of identifying the required information based on the provided details. The final output will be the names of the ruling parties and their respective members in the settlements where John McDermott and George Pickett died, assuming such data is available in DBpedia.",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
347,68,test,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?societal_event ?event ?tv_show
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace mississippi .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace mississippi;
           rdfs:label ""Cece Bell""@en .
  ?vince_gilligan a dbpedia:Person ;
               dbpedia:birthPlace mississippi;
               rdfs:label ""Vince Gilligan""@en .
  ?general a dbpedia:Person ;
            dbpedia:birthPlace france;
            foaf:name ""Jacques Massu""@en;
            dbpedia:role ""General""@en;
            dbpedia:conflict algerian_war .
  ?societal_event a dbpedia:Event ;
                  dbpedia:instanceOf dbpedia:Societal_event;
                  rdfs:label ""Algerian War""@en .
  ?event a dbpedia:Event ;
           dbpedia:instanceOf dbpedia:Conflict;
           rdfs:label ""Algerian War""@en .
  ?tv_show a dbpedia:Television_program ;
             rdfs:label ""The Battle of Algiers""@en .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
347,67,test,"Give me the commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?wallenstein_birthplace 
WHERE { 
?commander a dbpedia:Person ; dbpedia:birthPlace ?wallenstein_birthplace . 
?wallenstein a dbpedia:Noble ; dbpedia:birthPlace ?wallenstein_birthplace . 
?commander rdfs:label ?commander_name . 
}",7,8,8,3,3,3,3,71,0,193855,1,0.0,0.0,0
347,69,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_child_name ?royalty_relationship ?commander_name ?war ?tv_show 
WHERE { 
  ?maria_anne_of_bavaria a dbpedia:Person ; dbpedia:birthDate '1574-07-09' . 
  ?maria_anne_of_bavaria rdfs:child ?royalty_child_name . 
  ?royalty_child_name a dbpedia:Royalty . 
  ?commander a dbpedia:Person ; dbpedia:role 'Commander in the Algerian War' . 
  ?war a dbpedia:Event ; dbpedia:name 'Algerian War' . 
  ?commander rdfs:father ?commander_father_name . 
  ?commander_father_name rdfs:child ?royalty_child_name . 
  ?vince_gilligan a dbpedia:Person ; dbpedia:role 'Television Producer and Writer' ; dbpedia:name 'Vince Gilligan' . 
  ?tv_show a dbpedia:TelevisionShow ; dbpedia:name 'Breaking Bad' . 
  ?commander rdfs:label ?commander_name . 
  ?tv_show rdfs:creator ?vince_gilligan
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
941,19,test,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?royalty_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ?parent_name .
  ?child rdfs:label ?royalty_name .
  FILTER (lang(?parent_name) = ""en"")  # Assuming we are looking for English names
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
513,19,test,"Give me the entity in the award of George H. Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/ontology/leader> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?award_name ?party_leader_residence
WHERE {
  ?politician a dbpedia:Person ;
               dbpedia:birthPlace ?politician_birthplace ;
               dbpedia:memberOf dbpedia:PoliticalParty ;
               rdfs:label ?name .
  ?politicalParty a dbpedia:PoliticalParty ;
                  dbpedia:leader ?party_leader .
  ?award_name rdfs:label ?award .
  ?politician dbpedia:receivedAward ?award .
  ?party_leader residence ?party_leader_residence .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
103,68,test,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?role ?birthplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:role ?role .
  ?role a dbpedia:MediaRole ;
          dbpedia:characterName ""The Shadow"" .
  OPTIONAL { ?actor dbpedia:profession dbpedia:Politician }
}
```

This query:
- Selects individuals (`?actor`) who are people (`dbpedia:Person`), along with their birthplaces (`?birthplace`).
- Filters for those who have the role of ""The Shadow"" (`?actor dbpedia:role ?role .` where `?role a dbpedia:MediaRole ; dbpedia:characterName ""The Shadow""`).
- Optionally checks if they are also politicians (`OPTIONAL { ?actor dbpedia:profession dbpedia:Politician }`).",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
905,67,test,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_parent_name ?royalty_origin 
WHERE {
  ?maria_spoouse dbpedia:spouse ?charles_ii_of_neaples . 
  ?charles_ii_of_neaples dbpedia:father ?charles_father . 
  ?charles_father rdfs:label ?charles_father_name . 
  ?maria_spoouse rdfs:child ?royalty_child . 
  ?royalty_child a dbpedia:Royalty . 
  ?royalty_predecessor rdfs:parent ?royalty_parent . 
  ?royalty_predecessor rdfs:label ?royalty_parent_name . 
  ?royalty_predecessor dbpedia:predecessorOf ?stephen_v_of_hungary . 
  ?stephen_v_of_hungary rdfs:child ?royalty_origin . 
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,27,test,"Give me the actor of Paradise (2013 film) and actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?audrey_hepburn_spouse_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:productionCompany ""Roma Productions"" ;
            dbpedia:releaseDate ""2013-03-15"" .
  ?actor a dbpedia:Actor ;
         dbpedia:roleIn ?movie .
  ?audrey_hepburn rdfs:label ""Audrey Hepburn"" .
  ?audrey_hepburn_spouse rdfs:label ?audrey_hepburn_spouse_name .
  FILTER (regex(str(?movie), ""Paradise"")) .
  BIND (str(?actor) AS ?actor_name)
}
```

This query looks for:
- Films titled ""Paradise"" released in 2013.
- Actors who played roles in these films.
- Information about Audrey Hepburn and her spouse Mel Ferrer.",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
203,71,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?military_force_name ?conflict_name
WHERE {
  ?winston_conflict a dbpedia:Event ;
                 dbpedia:type ""MilitaryConflict"" .
  ?william_bayne a dbpedia:Person ;
                  dbpedia:role ""Commander in the war""@en;
                  dbpedia:birthDate ""1848-10-15""^^xsd:date ;
                  dbpedia:militaryForce ?military_force_name .
  ?winston_conflict rdfs:label ?conflict_name .
}
```

This query will retrieve the military force and conflict name associated with Sir William Bayne and Winston Churchill (The Triple X's) from the DBpedia dataset.",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
198,68,test,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?birthplace_name ?gillmore_award ?medal_of_honor_context 
WHERE { 
  ?lewiss birthPlace ?birthplace_name . 
  ?gillmore a dbpedia:Person ; dbpedia:awardedBy dbpedia:United_States_Congress ; dbpedia:award ?gillmore_award . 
  ?medal_of_honor a dbpedia:Medal_of_Honor ; dbpedia:awardee ?gillmore ; dbpedia:conflict dbpedia:American_Civil_War . 
  ?medal_of_honor rdfs:label ?medal_of_honor_context . 
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
628,68,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_member_name WHERE {
  ?artist a dbpedia:MusicalArtist ; dbpedia:birthPlace dbpedia:Florida .
  ?band_member a dbpedia:Person ; rdfs:label ?band_member_name .
  ?artist dbpedia:associatedBandMember ?band_member .
}
",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
225,20,test,"Give me the entity in the region of the time zone in Kiyosu and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?person_name ?birthplace WHERE {
  ?person a dbpedia:Person ; dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  ?person ns:instanceOf dbpedia:Television_show .
  ?television_show rdfs:label 'Hikaru no Go' .
  ?television_show ns:airTime '1998-10-05T00:00:00'^^xsd:dateTime ; dbpedia:origin ?origin_location .
  ?origin_location geo:timeZone 'Asia/Kyoto' .
}",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
905,69,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?royalty a dbpedia:Royalty ;
            dbpedia:parent ?charles .
  ?charles a dbpedia:Person ;
           dbpedia:child ?stephen_v .
  ?stephen_v a dbpedia:Person ;
             dbpedia:spouse ?philip_despot_of_romania .
  ?philip_despot_of_romania a dbpedia:Person ;
                        rdfs:label ""Philip, Despot of Romania""
  FILTER (lang(?royalty_name) = ""en"")  # Ensure the result is in English
}
```

This query looks for an individual (`?royalty`) who:
- Is a royalty (`dbpedia:Royalty`)
- Has `Charles` as a parent (`dbpedia:parent ?charles`)
- Whose parent (`?charles`) is Stephen V of Hungary (`?charles dbpedia:child ?stephen_v`)
- Is married to Philip, Despot of Romania (`?stephen_v dbpedia:spouse ?philip_despot_of_romania`)
- And `Philip, Despot of Romania` has a label in English.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
609,68,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
               dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```",8,11,9,3,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
293,69,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v7 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?political_party 
WHERE {
  ?politician a dbpedia:Person ; dbpedia:birthPlace <urn:geo:latitude>20.116800000000001347 ; dbpedia:memberOf dbpedia:PoliticalParty .
  ?actor a dbpedia:Person ; dbpedia:name 'Jackie Cooper' .
  ?parent a dbpedia:Person ; dbpedia:name 'Tisha Sterling' .
  ?actor dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ; dbpedia:name ?spouse_name .
  ?politician rdfs:label ?politician_name .
  ?actor dbpedia:hasParent ?parent .
}",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
39,67,test,"Give me the professional in Singer and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","SELECT ?musical_artist_name
WHERE {
  ?bob_thompson a dbpedia:Musician ;
                 dbpedia:name ?musical_artist_name .
  ?bob_thompson rdfs:label ""Bob Thompson"" .  // Given name

SELECT ?walter_b_gibson_birthname
WHERE {
  ?walter_b_gibson a dbpedia:Person ;
                 dbpedia:name ?walter_b_gibson_birthname .
  ?walter_b_gibson rdfs:label ""Walter B. Gibson"" .  // Given name
}",7,10,8,3,3,3,3,71,0,0,3,0,0.0,0
293,67,test,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },,7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,71,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v8 <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v8 <http://dbpedia.org/ontology/manager> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?player a dbpedia:SportPerson ; dbpedia:sport \",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
737,70,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_title ?parent_name ?parent_title
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
             dbpedia:hasParent ?greatGrandparent .
  ?greatGrandparent a dbpedia:Person ;
               dbpedia:hasParent ?ancestor .
  ?ancestor rdfs:label ?parent_name .
  ?royalty rdfs:label ?royalty_name .
  ?ancestor a dbpedia:Royalty
}
```

This query starts from any person (`?royalty`) and traces back to their great-grandparent (`?greatGrandparent`). It then filters for those individuals who are labeled as royalty (`?ancestor a dbpedia:Royalty`).",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
782,71,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v7 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_name
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:birthDate ""1945-03-30"" .
  ?artist rdfs:label ?artist_name .
  ?band a dbpedia:Band ;
           dbpedia:associatedMusician ?artist .
  ?band rdfs:label ?band_name .
  ?kim_wilson a dbpedia:Person ;
            dbpedia:name ""Kim Wilson"" .
  ?kim_wilson rdfs:label ?kim_wilson_name
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
609,67,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
    dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
    dbpedia:birthPlace ?author_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan a dbpedia:Person ;
    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor ns:name ?governor_name .
  ?author ns:name ?author_name .
  ?vince_gilligan ns:name ?vince_gilligan_name
}
",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,70,test,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?artist_name ?band_member_name ?real_name
WHERE {
  ?curran a dbpedia:Person ;
            dbpedia:birthDate ""1945-03-30"" ;
            dbpedia:role dbpedia:Musician .
  ?bandMember a dbpedia:Person ;
             dbpedia:birthDate ""before 1945"" ;
             dbpedia:role dbpedia:BandMember .
  ?bandMember rdfs:label ?band_member_name .
  ?artist a dbpedia:MusicalArtist ;
            rdfs:label ?artist_name .
  ?curran dbpedia:portrayedBy ?artist .
  ?artist dbpedia:band ?band .
  ?band a dbpedia:Band ;
          rdfs:label ""The Fabulous Thunderbirds"" .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
246,20,test,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_parent_name 
WHERE {
  ?princess_muna a dbpedia:Person ; dbpedia:parent ?royalty_parent_of_princess_muna .
  ?royalty_parent_of_princess_muna a dbpedia:Person ; dbpedia:parent ?royalty_parent .
  ?princess_aisha a dbpedia:Person ; dbpedia:parent ?royalty_parent_of_princess_aisha .
  ?royalty_parent_of_princess_aisha a dbpedia:Person ; dbpedia:parent ?royalty_parent .
  ?royalty_parent rdfs:label ?royalty_parent_name .
}",6,10,7,3,2,3,2,20,0,11518,1,0.0,0.0,0
816,68,test,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent_name
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Actor ;
           dbpedia:birthPlace ""Los Angeles, California"" .
  ?child rdfs:label ""Peter Michael Arbus""@en .
  ?parent rdfs:label ?parent_name
}
```

This query looks for a person (identified as Peter Michael Arbus) who has a parent that is an actor born in Los Angeles, California.",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
609,69,test,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v7 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
dbp:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
dbp:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
dbp:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",8,10,9,3,3,3,3,71,1,951552,0,1.0509136117483734e-06,1.0,2.1018250146602294e-06
816,67,test,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?mariclare a dbpedia:Person ;
            dbpedia:hasSpouse ?spouse ;
            dbpedia:hasChild ?child .
  ?spouse a dbpedia:Person ;
           rdfs:label ""Martin Cummins""@en .
  ?child a dbpedia:Person ;
           rdfs:label ""Mariclare Costello""@en .
  
  ?eugene a dbpedia:Person ;
           rdfs:label ""Eugène Cattin""@fr ;
           dbpedia:hasProfession dbpedia:Actor .
  
  ?eugene_pater a dbpedia:Person ;
            dbpedia:parentOf ?eugene .
}
```

This query looks for individuals related to Mariclare Costello and Eugène Cattin through familial links. It specifically targets the parents of these individuals.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
398,20,test,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in the writer of the work of Aleksandr Filimonov.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?nickname WHERE {
  ?player a dbpedia:Person ; dbpedia:sport ?sport .
  ?sport ns:label ?nickname .
  ?player rdfs:label ?player_name .
  ?player_name = 'Denis Kolodin' 
}
",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
143,19,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Patience Ogbonna""@en .
  ?person dbpedia:birthName ?birthName .
  ?birthName ns:match ""Cynthia Morgan""@en .
  ?person rdfs:seeAlso ?musicArtist .
  ?musicArtist a dbpedia:Musician .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
412,28,test,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30 and war of the leader of National Party of Greece.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?death_place_name ?war WHERE {
  ?person a dbpedia:Person ; dbpedia:deathPlace ?death_place_name .
  ?person rdfs:label ?person_name .
  ?war rdfs:label ?war_name .
  ?person ns:people.person:P31 ?war.
  ?war p:P18 ?person
}",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
80,71,test,"Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/album> ?v5 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?actor a dbpedia:Person ; dbpedia:role [ dbpedia:MatchesLiteral 'Batman' ] .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:actedIn [ dbpedia:hasRole dbpedia:Actor ] ; dbpedia:film [ dbpedia:hasTitle 'The Dark Knight' ] .
  ?actor dbpedia:appearedInMusicAlbum [ dbpedia:albumTitle 'Paper Trail' ] ; dbpedia:track ['Dead and Gone'] .
}
",9,11,10,3,3,3,3,71,0,0,4,0,0.0,0
103,70,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?actor_name WHERE {
  ?actor1 a dbpedia:Actor ;
           dbpedia:hasRole dbpedia:Politician ;
           dbpedia:hasBroadcastInSeries dbpedia:Ab_Kya_Hoga
  ?actor2 a dbpedia:Actor ;
           dbpedia:hasRole dbpedia:The_Shadow
  ?actor1 rdf:sameAs ?actor2
}
```",8,11,9,3,3,3,3,71,0,0,13,0,0.0,0
731,20,test,"Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?recipient_name ?war
WHERE {
  ?award dbpedia:hasAwardee ?recipient .
  ?recipient foaf:name ?recipient_name .
  ?war a dbpedia:Event ;
         dbpedia:type ""military conflict"" .
  ?recipient dbpedia:participatedIn ?war .
  FILTER (str(?war) = ""Sinking of Prince of Wales and Repulse"")
}",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
384,9,test,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?party
WHERE {
  ?politician a dbpedia:OfficeHolder ; dbpedia:politicalAffiliation ?party .
  ?politician rdfs:label ?politician_name .
  ?politician ns:language 'fr' 
}
",4,8,5,2,2,2,2,9,0,0,1,0,0.0,0
293,71,test,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v8 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?spouse_name ?ruling_party_member_name ?statue_of_liberty_elevation
WHERE {
  ?tisha_sterling dbpedia:hasParent ?parent_name .
  ?stan_laurel a dbpedia:Actor ;
               dbpedia:starInFilm dbpedia:The_Flying_Duces ;
               dbpedia:birthPlace ""United States"" .
  ?ruling_party_member a dbpedia:Person ;
                       dbpedia:memberOf dbpedia:Democratic_Party_of_the_United_States ;
                       dbpedia:birthPlace ""United States"" .
  ?statue_of_liberty a dbpedia:Statue_of_Liberty ;
                        dbpedia:location ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> .
  ?parent_name rdfs:label ?parent_name .
  ?spouse_name rdfs:label ?spouse_name .
  ?ruling_party_member rdfs:label ?ruling_party_member_name
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
943,69,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Baeda Maryam I's child and their father (a royalty and office holder)
SELECT ?child_name ?child_father_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Royalty;
            rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  
  # Find the father of Baeda Maryam I (assuming he is identifiable in DBpedia)
  ?baeda_father a dbpedia:Person ;
               dbpedia:parent ?baeda_parent .
  ?baeda_parent a dbpedia:Royalty;
               rdfs:label ?baeda_parent_name .
  ?baeda_father rdfs:label ?baeda_father_name .
  
  # Link the child to their father
  ?child rdfs:father ?child_father .
  ?child_father ?child_father_name ?baeda_father_name .
}

# Additional query to find the commander in Siege of Mukha and their parent (a royalty)
SELECT ?commander_name ?commander_parent_name
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:parent ?commander_parent .
  ?commander_parent a dbpedia:Royalty;
                 rdfs:label ?commander_parent_name .
  ?commander rdfs:label ?commander_name .
  
  # Link the commander to their parent
  ?commander rdfs:parent ?commander_parent .
  ?commander_parent ?commander_parent_name ?commander_parent_name .
}

# Combining results for a coherent narrative
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
633,20,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent_name
WHERE {
  ?father a dbpedia:Person ;
           dbpedia:birthDate ""1494"" ;
           dbpedia:name ""René II, Duke of Lorraine"" .
  ?mother a dbpedia:Person ;
          dbpedia:birthDate ""before 1494"" ;
          dbpedia:name ""Margaret of Austria"" .
  ?father dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Royalty .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
492,27,test,Give me the death place of Reed Howes and death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?death_place
WHERE {
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:Actor ; dbpedia:film 'Color Me Dead' .
  ?actor2 a dbpedia:Person ; dbpedia:role dbpedia:Actor ; dbpedia:film 'Aladdin (1958 film)' .
  ?actor_name ?actor rdfs:label .
  ?death_place ?actor2 rdfs:label .",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,71,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v8 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# There is no direct royal lineage successor after Minye Kyawswa based on the given information.
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
769,19,test,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?player_name ?player_birthdate
WHERE {
  ?manager a dbpedia:Manager ;
            dbpedia:sport ?sport;
            dbpedia:club ?club .
  ?club rdfs:label ""Hong Kong C"" .
  ?player a dbpedia:Athlete ;
           dbpedia:sport ?sport;
           dbpedia:birthDate ?player_birthdate .
  ?player rdfs:label ?player_name .
  ?manager rdfs:label ?manager_name .
  FILTER (?player_birthdate = ""1981-12-01"")
}
```

This query will retrieve the names of the manager and player who meet the specified criteria from the DBpedia dataset. The `FILTER` clause ensures that we only get results for players born on December 1, 1981. Once executed against the DBpedia SPARQL endpoint, it should provide the desired output.",5,15,6,3,2,3,2,20,0,0,2,0,0.0,0
531,71,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v8 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader_office ?commander_office ?conflict
WHERE {
  ?miguel_maura a dbpedia:Person ; dbpedia:partyMemberOf ?party .
  ?party a dbpedia:PoliticalParty .
  ?manuel_pinto_da_costa a dbpedia:Person ; dbpedia:roleIn ?conflict .
  ?conflict a dbpedia:MilitaryConflict ; dbpedia:eventType 'Societal Event' .
  ?manuel_pinto_da_costa dbpedia:officeHolderOf ?commander_office .
  ?leader_office a dbpedia:Office ; dbpedia:holder ?leader .
  ?leader_office pobox:memberOf ?party .
}
",9,16,10,3,3,3,3,71,0,0,1,0,0.0,0
609,71,test,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v8 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name ?author_birthplace ?governor_name ?governor_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?author rdfs:label ""Cece Bell""@en .
  ?governor rdfs:label ?governor_name .
  ?vince_gilligan rdfs:label ""Vince Gilligan""@en
}",9,13,10,3,3,3,3,71,1,203422,0,4.915864971020976e-06,1.0,9.831681610822715e-06
943,68,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name ?grandfather_name ?grandmother_name
WHERE {
  ?person1 a dbpedia:Person ;
            dbpedia:hasAlterEgo ?alter_ego .
  ?alter_ego rdfs:label ""The Shadow""@en .

  ?person2 a dbpedia:Person ;
            dbpedia:parent ?person1;
            dbpedia:hasChild ?person3 .

  ?person3 a dbpedia:Person ;
            dbpedia:parent ?person2;
            dbpedia:hasChild ?naod .

  ?person2 rdfs:label ""Na'od's father""@en .
  
  ?grandfather a dbpedia:Person ;
             dbpedia:parent ?person2;
             dbpedia:role ""Royalty and Office Holder""@en .

  ?grandmother a dbpedia:Person ;
              dbpedia:parent ?grandfather;
              dbpedia:role ""Royalty""@en
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,70,test,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?actor_name 
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor ?actor_name .
  ?actor a dbpedia:Person ;
         dbpedia:hasSpouse ?spouse .
  ?spouse a foaf:Person ;
           dbpedia:hasChild ?child .
  ?child a foaf:Person ;
          dbpedia:profession ""Acting"" .
  ?actor rdfs:label ?actor_name .
  FILTER (STRSTARTS (?child's name, ""Mariclare"")).
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
905,71,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name WHERE {
  ?royalty_father a dbpedia:Royalty ; dbpedia:parent ?parent_of_royalty .
  ?parent_of_royalty a dbpedia:Person ; dbpedia:child ?despot_of_romania .
  ?despot_of_romania a dbpedia:Royalty ; dbpedia:sibling | dbpedia:spouse ?spouse_name .
  ?spouse_name rdfs:label ?spouse_name_label
}
",9,12,10,3,3,3,3,71,0,4898,1,0.0,0.0,0
595,67,test,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }",,7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
943,67,test,"Give me the child of Dawit I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_of_dawit_1 ?alter_ego_lamont_cranston ?father_of_child_of_baeda_maryam_I
WHERE {
  ?child_of_dawit_1 a dbpedia:Person ;
                 dbpedia:parent ?dawit_I .
  ?dawit_I a dbpedia:Emperor .

  ?alter_ego_lamont_cranston a dbpedia:FictionalCharacter ;
                           dbpedia:alter_ego ""The Shadow"" .

  ?father_of_child_of_baeda_maryam_I a dbpedia:Person ;
                                dbpedia:parent ?baeda_maryam_I .
  ?baeda_maryam_I a dbpedia:Emperor .

  ?child_of_dawit_1 dbpedia:spouse ?alter_ego_lamont_cranston .
  ?child_of_dawit_1 dbpedia:child ?father_of_child_of_baeda_maryam_I .
  ?father_of_child_of_baeda_maryam_I dbpedia:parent ?baeda_maryam_I
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,27,test,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

// First query results
SELECT ?commander_name ?royal_child_name
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role ""Commander in Siege of Padua"" .
  ?commander dbpedia:child ?royal_child .
  ?royal_child a dbpedia:Person;
               rdfs:label ?royal_child_name
}

// Second query results
SELECT ?isabella_parent_name ?philip_parent_name
WHERE {
  ?isabella a dbpedia:Person ;
             dbpedia:name ""Isabella of Austria"" .
  ?philip a dbpedia:Person ;
           dbpedia:name ""Philip I of Castile"" .
  ?isabella dbpedia:parent ?isabella_parent .
  ?philip dbpedia:parent ?philip_parent
}

// Intersection of both sets of results to find the common commander
CONSTRUCT {
  ?common_commander_name [a dbpedia:Person; rdfs:label ?common_commander_name_label]
}
WHERE {
  ?commander_name IN (
    SELECT ?commander_name",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
871,68,test,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name ?child_role
WHERE {
  ?politician1 a dbpedia:Politician; dbpedia:birthPlace ?politician_birthplace .
  ?office_holder1 a dbpedia:OfficeHolder; dbpedia:birthPlace ?office_holder_birthplace .
  ?child rdfs:father ?politician1.
  ?child rdfs:mother ?office_holder1.
  ?child rdfs:label ?child_name .
  ?child a dbpedia:Person; dbpedia:awardRecipient ?rodney_leez_award .
  ?child_role a rdf:Property; rdfs:label ""Rodney Lees Award awardee"" .
  ?politician1 ns:father ?office_holder1.
  ?office_holder1 ns:parent ?politician1
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
633,19,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandmother_name ?grandmother_title
WHERE {
  ?anthony a dbpedia:Person ;
            dbpedia:title ""Anthony, Duke of Lorraine"" .
  ?renée a dbpedia:Person ;
           dbpedia:title ""Renée of Bourbon"" .
  ?marie a dbpedia:Person ;
           dbpedia:title ""Marie of Anjou"" .
  ?anthony dbpedia:parent ?renée .
  ?renée dbpedia:parent ?marie
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
756,67,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager_name ?birth_year ?country ?team_name ?seasons
WHERE {
  ?manager a dbo:SportsManager ; dbpedia:birthDate ?birth_year ; dbo:nativeCountry ?country .
  ?manager dbpedia:managesTeam ?team_name .
  ?team a dbo:SoccerClubSeason ; dbpedia:season ?season .
  ?team a dbo:SportsSeason ; dbpedia:season ?season .
  ?team a dbo:SportsTeamSeason ; dbpedia:season ?season .
  ?manager rdfs:label ?manager_name .
  ?country rdfs:label ?country_name .
  ?country_name foaf:isPrimaryTopicOf <http://www.wikipedia.org/wiki/West_Germany> .
}",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
213,20,test,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v5 <http://dbpedia.org/ontology/country> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"The SPARQL query structure is provided above, which outlines how to identify Hu Jieqing, find his spouse (assuming it's also Hu Jieqing for simplicity), locate their politician child, and finally query for the birth place of this child.",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
203,67,test,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","The Sparql queries are structured to extract the necessary data points from DBpedia's dataset, using appropriate prefixes for the ontology and constructing WHERE clauses to filter for the relevant individuals and events.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
871,69,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?parent_name WHERE {
  ?awardee a dbpedia:Person ; dbpedia:award ReceivedTheRodneyLeesAward .
  ?alumnus a dbpedia:Person ; dbpedia:alumniOf EtonCollege .
  ?politicianParent a dbpedia:Person ; dbpedia:child ?child_politician .
  ?child_politician rdfs:father ?parent_name .
  ?alumnus dbpedia:birthPlace [ dbpedia:countryIn 'United Kingdom' ] .
  ?politicianParent dbpedia:birthPlace [ dbpedia:countryIn 'United Kingdom' ] .
  ?awardee dbpedia:birthPlace [ dbpedia:countryIn 'United Kingdom' ] .
}
",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
943,71,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?office_holder_title ?father_of_officer 
WHERE { 
  ?officer a dbpedia:OfficeHolder ; 
    dbpedia:officeTitle ?office_holder_title . 
  ?officer dbpedia:parent ?father_of_officer . 
  ?father_of_officer a dbpedia:Royalty . 
}",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
80,67,test,"Give me the actor of Shelby Oaks and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v6 . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

// Part 1: Finding the actor of Shelby Oaks
SELECT ?actor_name WHERE {
  ?character dbpedia:role ?actor_name ;
               dbpedia:appearsIn ""The Golden Master"" .
  ?character rdfs:label ""Shelby Oaks""@en .
}

// Part 2: Finding the album cover featuring T.I.
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?album_title ?cover_url WHERE {
  ?album a dbo:MusicAlbum ;
           dbo:artist dbpedia:Tip_Tyrone_Williams ;
           dbo:title ?album_title .
  ?song a dbo:Songsheet ;
           dbo:lyrics ""The lyrics of the song""@en ;
           dbo:performer dbpedia:Tip_Tyrone_Williams .
  ?song rdfs:label ""Title of the song""@en .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,69,test,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Myat Hpone Pyo's father who is a royalty
SELECT ?father_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:parent ?child ;
           dbpedia:birthPlace ""Myaungmya"" ;
           rdfs:label ""Myat Hpone Pyo""
}

# Step 2: Find the spouse of Myat Hpone Pyo's father
SELECT ?spouse_name WHERE {
  ?father a dbpedia:Person ;
           dbpedia:parent ?child ;
           dbpedia:birthPlace ""Myaungmya"" ;
           rdfs:label ?father_name .
  ?child a dbpedia:Person ;
          dbpedia:parent ?grandchild ;
          dbpedia:birthPlace ""Myaungmya"" ;
          rdfs:label ?child_name .
  ?spouse a dbpedia:Person ;
          dbpedia:parent ?child ;
          dbpedia:birthPlace ?spouse_birthplace ;
          rdfs:label ?spouse_name
}

# Step 3: Find the child of the royal spouse
SELECT ?royal_child WHERE {
  ?spouse a dbpedia:Person ;
          dbpedia:parent ?royal_spouse_child ;
          dbpedia:birthPlace ?spouse_birthplace .
  ?royal_spouse_child a dbpedia:Person ;
                   dbpedia:parent ?child_of_spouse ;
                   rdfs:label ?royal_child_name
}

# Step 4: Identify the predecessor of the royal child
SELECT ?predecessor_name WHERE {
  ?royal_child a dbpedia:Person ;
               dbpedia:hasPrecedessor ?predecessor .
  ?predecessor a dbpedia:Person ;
              rdfs:label ?predecessor_name
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
668,69,test,"Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associated_artist_name ?artist_name
WHERE {
  ?associated_artist a dbpedia:Artist ;
                    rdfs:label ?associated_artist_name .
  ?associated_artist foaf:name ""Pacely"" . 
  ?artist a dbpedia:Person ;
            rdfs:label ?artist_name .
  ?artist geonames:isPartOfArea [ geonames:country ""Ghana"" ; geonames:region ""Central"" ] .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
151,9,test,Give me the entity in the birthplace of Burhan Belge and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?burhan_belge_birthplace ?charles_parsons_award
WHERE {
  ?person1 a dbpedia:Person ;
            dbpedia:birthPlace ?burhan_belge_birthplace .
  ?charles_parsons a dbpedia:Person ;
                    dbpedia:award dbpedia:Order_of_the_BritishEmpire_1935 .
  ?person1 rdfs:label ""Burhan Belge"" .
  ?charles_parsons rdfs:label ""Charles Parsons (British Army officer)"" .
}",4,4,5,2,2,2,2,9,0,0,3,0,0.0,0
23,28,test,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name
WHERE {
  ?politician1 a dbpedia:Politician ; dbpedia:birthPlace Colombia ; dbpedia:party ?party_name .
  ?politician2 a dbpedia:Politician ; dbpedia:birthPlace Colombia ; dbpedia:party ?party_name .
  ?politician1 rdf:type dbo:ColombianSenator .
  ?politician2 rdf:type dbo:ColombianSenator .
  ?politician1 rdfs:label 'Daniel Elahi Galán' .
  ?politician2 rdfs:label 'Roy Leonardo Barreras Montealegre' .
}
",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
412,27,test,"Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in the death place, that is a settlement, of Antonios Varthalitis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?zervas_war ?varthalitis_award ?varthalitis_deathplace
WHERE {
  ?zervas a dbpedia:Person ; dbpedia:conflict ?zervas_war .
  ?varthalitis a dbpedia:Person ; dbpedia:awardedForService ?varthalitis_award .
  ?varthalitis dbpedia:deathPlace ?varthalitis_deathplace .
  ?zervas rdfs:label ?zervas_name .
  ?varthalitis rdfs:label ?varthalitis_name
  FILTER (lang(?zervas_name) = 'el' OR lang(?varthalitis_name) = 'el')
}
",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
742,19,test,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alumnus_birthplace ?settlement_name
WHERE {
  ?university dbo:hasAlumni ?alumnus .
  ?alumnus dba:birthPlace ?alumnus_birthplace .
  ?region a dbo:Region ;
            rdfs:label ?region_label .
  ?region dbo:timeZone ""Eastern European Time"" .
  ?settlement a dbo:Settlement ;
             rdfs:label ?settlement_name .
  ?alumnus dba:birthPlace ?alumnus_birthplace .
  ?region dba:containsSettlement ?settlement .
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
756,68,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v5 . ?v4 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?manager_name ?manager_birthplace ?season_name ?team_name ?team_season 
WHERE { 
  ?player a dbpedia:Person ; dbpedia:birthPlace ?player_birthplace . 
  ?player rdfs:label ?player_name . 
  ?team a dbpedia:SoccerTeam ; dbpedia:clubName ?team_name . 
  ?team rdfs:member ?player . 
  ?team dbpedia:season ?team_season . 
  ?team dbpedia:manager ?manager_name . 
  ?season a dbpedia:FootballLeagueSeason ; dbpedia:seasonYear 2007 . 
  ?season dbpedia:hasMember ?team . 
  ?leader a dbpedia:Person ; dbpedia:birthPlace <http://dbpedia.org/ontology/Country#Germany> . 
  ?leader rdfs:label 'West Germany leader' .",8,18,9,3,3,3,3,71,0,0,1,0,0.0,0
89,68,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v7 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_s spouse 
WHERE {
  ?minye_kyawswa a dbpedia:Person ;
                  dbpedia:birthDate ""1235"" ; # Placeholder for actual birth date
                  dbpedia:deathDate ""1323"" ; # Placeholder for actual death date
                  dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:spouse ?royalty_s .
  ?minye_kyawswa dbpedia:successor ?saw_shwe_khet .
  ?saw_shwe_khet a dbpedia:Person ;
                 dbpedia:title ""King of Burma"" .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
399,9,test,Give me the band member of the person born as Emilia Yancheva Valeva and professional in the profession of Jamie T.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_member_name WHERE {
  ?person a dbpedia:Person ;
  dbpedia:birthPlace <gb:Bulgaria> ;
  dbpedia:occupation dbpedia:musician ;
  dbpedia:givenName 'Emilia Yancheva Valeva' 
  AND ?person rdfs:label ?band_member_name .
}",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
38,19,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/author> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name WHERE {
  ?author a dbpedia:Person ;
    dbpedia:birthPlace dbpedia:United_States_of_America ;
    dbpedia:role dbpedia:Office_holder ;
    dbpedia:conflict dbpedia:Korean_War ;
    rdfs:label ?author_name .
  
  ?book a dbpedia:Written_work ;
    rdfs:label 'The Promise' .
  
  ?author wdt:P31 ?book .
}
",5,12,6,3,2,3,2,20,0,0,1,0,0.0,0
293,68,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?party_member_name ?ruling_party 
WHERE { 
  ?mount washington rdf:type dbpedia:Mountain ; dbpedia:location ?location . 
  ?location geo:heightInMeters 20012.1168 . 
  ?film a dbpedia:Film ; dbpedia:producer ?nat_levine . 
  ?actor rdfs:label ?actor_name . 
  ?actor rdfs:label ?actor_name . 
  ?ann_sothern rdf:type dbpedia:Person ; dbpedia:name ?birth_name . 
  ?party_member a dbpedia:Politician ; dbpedia:politicalParty ?ruling_party . 
  ?film dbpedia:star ?actor . 
  ?actor ns:name ?actor_name . 
  ?actor ns:givenName ?birth_name . 
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
737,69,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name WHERE {
  ?royalty a dbpedia:Person ;
             rdfs:label ?royalty_name .
  ?archduchess_margarete_sophie dbpedia:parent ?archduke_rudolf .
  ?archduke_rudolf dbpedia:parent ?emperor_franz_joseph_1_of_austria .
  ?duke_philip dbpedia:parent ?duke_eugen .
  ?duke_eugen dbpedia:parent ?duke_wilhelm .
  ?archduchess_helena dbpedia:spouse ?archduke_karl_stephan .
  ?archduke_karl_stephan dbpedia:child ?archduke_rudolf .
  ?archduke_rudolf dbpedia:child ?royalty
}
```

This query will find the person who is a royalty descendant of Archduke Rudolf, who is the child of Duke Philipp and the grandchild of Duke Wilhelm.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,28,test,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:name ""Koichirō"" .
  ?person rdfs:label ""Koichi Hatanaka""@ja .
  ?person dbpedia:conflict ?war .
  ?war a dbpedia:War
}
```",6,6,7,2,3,2,3,28,0,0,2,0,0.0,0
668,68,test,"Give me the associated musical artist of the person born as the birth name of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of Joey B.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v5 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name ?artist_info
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Joseph Anthony Uwajuren"" .
  ?person a dbpedia:Person ;
           dbpedia:name ""Joseph Anthony Babcock"" .
  OPTIONAL { ?person rdfs:label ?musical_artist_name . }
  OPTIONAL { ?person dbpedia:musicalGenre ?artist_info . }
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
353,67,test,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?grandchild_name ?royalty_status ?office_holder_status 
WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?william_I .
  ?child_db a dbpedia:Person ; dbpedia:parent ?child .
  ?child_db rdfs:label ?grandchild_name .
  ?child rdfs:label ?royalty_status .
  ?child_db rdfs:label ?office_holder_status .
  ?child_spo a dbpedia:Person ; dbpedia:parent ?child .
  ?grandchild a dbpedia:Person ; dbpedia:parent ?child_spo .
}",7,11,8,3,3,3,3,71,0,12184,1,0.0,0.0,0
295,20,test,"Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?actor a dbpedia:Person ; dbpedia:name ""Steven Kapur"" ; dbpedia:birthPlace ?birthplace .
  ?musicalWork a dbpedia:MusicalWork ; dbpedia:lyrics ?lyrics .
  ?actor dbpedia:performIn ?musicalWork ; dbpedia:role ?role .
  ?role rdfs:label ""Will"" .
}
",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
213,19,test,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v4 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_politician_name ?child_birthplace ?spouse_writer_name ?spouse_writer_country
WHERE {
  ?politician a dbpedia:Politician ; dbpedia:birthPlace ?child_birthplace .
  ?writer a dbpedia:Person ; rdfs:label ?spouse_writer_name .
  ?writer dbpedia:partner ?spouse .
  ?spouse rdfs:label ?spouse_writer_name .
  ?spouse_writer a dbpedia:Writer ; dbpedia:countryOfOrigin ?spouse_writer_country .
}
",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
687,70,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?soccer_player_name ?film_title ?manager_name ?manager_birthdate 
WHERE { 
  ?film a dbpedia:Film ; dbpedia:director ?huerga . 
  ?actor a dbpedia:Person ; dbpedia:role ?actor_role . 
  ?actor rdf:type [ dbpedia:SoccerPlayer; dbpedia:Role dbpedia:Actor ] . 
  ?soccer_player a dbpedia:SoccerPlayer ; dbpedia:role ?actor_role . 
  ?film rdfs:label ?film_title . 
  ?manager a dbpedia:Person ; dbpedia:birthDate ?manager_birthdate . 
  ?manager rdf:type [ dbpedia:SoccerManager; dbpedia:role dbpedia:Coach ] . 
  ?sarmiento a dbpedia:Person ; dbpedia:birthDate '1955-02-22' . 
  ?soccer_player rdfs:label ?soccer_player_name . 
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
103,71,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?shadow_alter_ego ?politician_name ?politician_birthplace ?actor_name ?actor_birthplace
WHERE {
  ?shadow_alter_ego a dbpedia:Character ;
                    rdfs:label ""The Shadow""@en .
  
  ?politician a dbpedia:Person ;
             dbpedia:role ""Politician""@en ;
             rdfs:label ?politician_name .
  
  ?actor a dbpedia:Person ;
           rdfs:label ""Richard Grant Esterhuysen""@en .
}
```",9,12,10,3,3,3,3,71,0,0,13,0,0.0,0
68,28,test,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather_name
WHERE {
  ?commander a dbpedia:Person ;
              dbpedia:role ""Commander at Siege of Padua"" .
  ?dorothea a dbpedia:Person ;
             dbpedia:name ""Dorothea of Denmark, Electress Palatine"" ;
             dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:name ""Unknown Parent of Dorothea"" .
  ?dorothea dbpedia:child ?philip_i_of_castile .
  ?philip_i_of_castile a dbpedia:Person ;
                    dbpedia:name ""Philip I of Castile"" ;
                    dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person ;
              dbpedia:name ?grandfather_name
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
198,71,test,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v7 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v8 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?awardee_name ?awardee_honor ?awardee_birthplace ?gillmore_name ?gillmore_birthplace 
WHERE { 
?awardee a dbpedia:Person ; 
  dbpedia:medal_of_honor ?awardee_honor . 
?gillmore a dbpedia:Person ; 
  dbpedia:birthPlace ?gillmore_birthplace . 
?awardee rdfs:label ?awardee_name . 
?gillmore rdfs:label ?gillmore_name . 
?awardee = ?gillmore . 
?gillmore_deathDate FILTER (date(?gillmore_deathDate) <= '1850-08-05') . 
}",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
871,67,test,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?birthplace .
  ?alumnus a dbpedia:Person ;
             rdfs:label ""Edward Stanley, 17th Earl of Derby"" ;
             dbpedia:EtonAlumni true .
  ?politician rdfs:father ?parent_name .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
158,27,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?emperor_name ?emperor_birthplace ?administration_country
WHERE {
  ?emperor a dbpedia:Person ;
            dbpedia:birthPlace ?emperor_birthplace .
  ?emperor rdfs:label ?emperor_name .
  
  ?administration a dbpedia:Country ;
                  dbpedia:name ?administration_name .
  
  ?emperor dbpedia:ruledAs ?administration .
  
  ?administration rdfs:label ?administration_country
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,69,test,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?writer_name WHERE {
  ?writer a dbpedia:Person ; dbpedia:birthPlace ?writer_birthplace .
  ?writer rdfs:label ?writer_name .
  ?writer dbpedia:pennedWork 'Always the Love Songs' .
  ?battle a dbpedia:Event ; dbpedia:type dbpedia:MilitaryConflict ; dbpedia:name 'Battle of Vienna' .
  ?commander a dbpedia:Person ; dbpedia:role dbpedia:Commander ; dbpedia:birthPlace ?commander_birthplace .
  ?commander rdfs:label ?commander_name .
  ?writer dbpedia:partOf ?battle ; dbpedia:role ?commander_role .
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,70,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . }","SELECT ?spanish_administration_name ?governor_name ?residence_country
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolderRole dbpedia:HeadOfGovernment ;
               rdfs:label ?spanish_administration_name .
  ?politician foaf:nationality dbpedia:Spain ;
                 dbpedia:birthPlace dbpedia:Spain .
  ?election dbpedia:Election ;
             dbpedia:region dbpedia:Galicia ;
             dbpedia:year 2009 ;
             dbpedia:winner ?politician .
  ?politician rdfs:label ?governor_name .
  ?residence a dbpedia:Country ;
            foaf:name ?residence_country .
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
353,68,test,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_child_name ?royalty_relationship 
WHERE { 
  ?grandparent a dbpedia:Person ; dbpedia:name 'Alfonso VI of León and Castile' . 
  ?parent a dbpedia:Person ; dbpedia:name 'Roger II of Sicily' . 
  ?child1 a dbpedia:Person ; dbpedia:child ?parent ; dbpedia:name ?royalty_child_name . 
  ?child2 a dbpedia:Person ; dbpedia:parent ?parent ; dbpedia:name ?royalty_child_name . 
  ?royalty_relationship a dbpedia:Royalty_OfficeHolder . 
  ?royalty_child_name ns:childOf ?child1 . 
  ?royalty_child_name ns:parentOf ?child2 . 
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
246,19,test,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_parent_name
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?royalty_parent .
  ?child rdfs:label ""Prince Faisal bin Hussein""@en .
  ?child rdfs:label ""Princess Muna al-Hussein""@en .
  ?royalty_parent a dbpedia:Royalty .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
531,68,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_name ?politician_name
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:role dbpedia:Politician .
  ?politician rdfs:label ?politician_name .
  ?office a dbpedia:Event ;
             dbpedia:type dbpedia:MilitaryConflict .
  ?office rdfs:label ?office_name .
  ?politician dbpedia:hasResidence ?office
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,71,test,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v4 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band_name
WHERE {
  ?bob_thompson a dbpedia:Musician ;
                 dbpedia:name ""Bob Thompson"" .
  ?alter_ego a dbpedia:FictionalCharacter ;
               dbpedia:creator ""Walter B. Gibson"" ;
               dbpedia:role ""producer of Coke Studio Philippines"" .
  ?bob_thompson rdf:type dbpedia:Person ;
                 dbpedia:birthName ""Robert Thompson"" .
  ?alter_ego rdfs:label ""Walter B. Gibson"" .
  ?band_name a dbpedia:Band ;
                dbpedia:members ?bob_thompson .
}
```

This query looks for:
- `dbpedia:Musician` individuals named ""Bob Thompson"".
- `dbpedia:FictionalCharacter` individuals with a creator named ""Walter B. Gibson"" and a role as a producer of Coke Studio Philippines.
- A band (`dbpedia:Band`) that includes the musician Bob Thompson.",9,12,10,3,3,3,3,71,0,0,4,0,0.0,0
687,71,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"

PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?soccer_player_status ?film_title ?director_name ?birthdate_of_person
WHERE {
  ?film a dbpedia:Film ; dbpedia:director ?director_name .
  ?actor a dbpedia:Actor ; dbpedia:roleInFilm ?film ; dbpedia:isSoccerPlayer true .
  ?person a dbpedia:Person ; dbpedia:birthday ?birthdate_of_person .
  ?birthdate_of_person match (?pollio_birthday) .
  ?soccer_player a dbpedia:SoccerPlayer ; dbpedia:isManager true .
  ?sarmiento_birthday match (?sarmiento_birthday) .
}

AND {
  ?pollio_birthday str(?Marty_Polio_Birthday) .
  ?sarmiento_birthday str(?Marcelo_Sarmiento_Birthday) .
}

WHERE {
  ?Marty_Polio_Birthday = 'YYYY-MM-DD' .
  ?Marcelo_Sarmiento_Birthday = 'YYYY-MM-DD' .
}",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
531,70,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?office ?conflict ?party_name
WHERE {
  ?politician a dbpedia:Person ; dbpedia:office ?office .
  ?politician rdfs:label ?commander_name .
  ?conflict a dbpedia:SocietalEvent ; dbpedia:type ""military conflict"" .
  ?politician dbpedia:pertainsToDbpediaResource ?conflict .
  ?party a dbpedia:PoliticalParty ; dbpedia:name ?party_name .
  ?politician dbpedia:pertainsToDbpediaResource ?party .
}
",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
723,20,test,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/producer> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?band_member_details
WHERE {
  ?band a dbpedia:Band ;
           rdfs:label ""Pantera""@en .
  ?band_members a dbpedia:MusicianGroup ;
               dbpedia:bandMembers ?band_member .
  ?band_member a dbpedia:Person ;
              rdfs:label ?band_member_name .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
203,68,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?war_name ?regiment_name 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:militaryBranch ?regiment_name . 
  ?regiment_name rdfs:label ?regiment_name_label . 
  ?war a dbpedia:Event ; dbpedia:type [ dbpedia:MilitaryConflict OR dbpedia:SocietalEvent ] . 
  ?war rdfs:label ?war_name . 
  ?commander rdfs:label ?commander_name . 
  ?regiment_name_label ns:match 'Triple X's' . 
  ?war ns:match 'World War I' . 
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,71,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v8 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?country_name ?event_office_name
WHERE {
  ?x a dbpedia:Person ;
       dbpedia:nationality dbpedia:Spain ;
       dbpedia:office dbpedia:EventOffice .
  ?y a dbpedia:EventOffice ;
       dbpedia:leader dbpedia:Politician ;
       dbpedia:tenantCountry ?country_name .
  ?z a dbpedia:Politician ;
       dbpedia:party dbpedia:Spanish_Socialist_Workers'_Party ;
       dbpedia:nationality dbpedia:Spain ;
       rdfs:label ""Anxo Quintana""@es .
  ?x rdfs:label ?country_name .
  ?y rdfs:label ?event_office_name
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
468,20,test,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon and child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify parents of Martin of Aragon
SELECT ?parent_name WHERE {
  ?martin a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parent_name
}

# Step 2: Identify children of Alfonso IV of Aragon
SELECT ?child_name WHERE {
  ?alfonso_IV a dbpedia:Person ;
               dbpedia:children ?child .
  ?child rdfs:label ?child_name
}

# Step 3: Find common child between the two sets
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT {
  ?common_child a dbpedia:Person ;
               dbpedia:hasParent ?parent_of_martin .
  ?parent_of_martin a dbpedia:Person ;
                    rdfs:label ?parent_name_of_martin .
  ?common_child rdfs:label ?child_name_of_common
}
WHERE {
  ?parent_of_martin IN (
    SELECT ?parent_name
    WHERE { 
      ?martin a dbpedia:Person ;
               dbpedia:hasParent ?parent_name
    }
  )
  ?child_name_of_common IN (
    SELECT ?child_name
    WHERE { 
      ?alfonso_IV a dbpedia:Person ;
                   dbpedia:children ?child_name
    }
  )
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
103,69,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?birthplace ?tv_profession
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?actor dbpedia:birthPlace ?birthplace .
  ?actor dbpedia:hasRole [ rdf:type dbpedia:TelevisionActor ] .
  ?actor_name ""Richard Grant Esterhuysen"" .
  FILTER (lang(?actor_name) = ""en"")  # Assuming English language
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
782,68,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?artist_fullname ?associated_artist_fullname
WHERE {
  ?artist1 a dbpedia:MusicalArtist ;
            dbpedia:birthDate ""1945-03-30"" ;
            rdfs:label ?artist_fullname .
  ?artist2 a dbpedia:MusicalArtist ;
            rdfs:label ?associated_artist_fullname .
  ?artist1 ns:memberOf ?band .
  ?artist2 ns:memberOf ?band .
  ?artist1 ns:associatedWith ?artist2 .
}
```

This query looks for:
- Musical artists born on March 30, 1945.
- Their full names (`?artist_fullname`).
- Other musical artists associated with them (`?associated_artist_fullname`).
- The bands they are members of (`?band`).

Once we have the results from this query, we can identify the band associated with the artist born on March 30, 1945.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,20,test,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for , and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/postalCode> "","" . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?artist_name ?musical_artist_name ?author_name ?deceased_date
WHERE {
  ?location a dbpedia:Settlement ;
               dbpedia:language ""en"" .

  ?artist a dbpedia:Artist ;
            dbpedia:birthPlace ?location ;
            rdfs:label ?artist_name .

  ?musical_artist a dbpedia:MusicalArtist ;
                dbpedia:birthPlace ?location ;
                rdfs:label ?musical_artist_name .

  ?author a dbpedia:Person ;
           dbpedia:deathDate ?deceased_date ;
           rdfs:label ?author_name .

  ?movie a dbpedia:Film ;
           dbpedia:creator ?author ;
           rdfs:label ?movie_title .

  ?tv_show a dbpedia:TelevisionShow ;
             dbpedia:creator ?author ;
             rdfs:label ?tv_show_title .

  ?artist rdfs:subPropertyOf ?musical_artist .
  ?author rdfs:subPropertyOf ?artist .
  FILTER (STR(?deceased_date) = ""2020-06-18"")
}
```

This SPARQL query is designed to find the required information based on the given conditions. It starts by defining the location as an English settlement, then looks for artists and musical artists from this location. It also seeks an author who has created both a movie and a TV show and who died on June 18, 2020. The relationships between these individuals are established through subproperty assertions, and a filter is applied to ensure that the author's date of death matches the specified date.",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
58,19,test,Give me the spouse of the person born as Linda Sue Cobb and producer of the movie with the award of Ian Gregson (poet).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . }",,5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
756,70,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?birth_year ?country_of_birth ?managed_player_name ?managed_club_name ?managed_organization_name
WHERE {
  ?manager a dbpedia:SportsManager ; dbpedia:birthDate ?birth_year .
  ?manager foaf:name ?manager_name .
  ?managed_player a dbpedia:SoccerPlayer ; dbpedia:club ?managed_club .
  ?managed_club a dbpedia:SoccerClub ; dbpedia:season 2007-08 .
  ?managed_organization a dbpedia:Organization ; dbpedia:name ?managed_organization_name .
  ?manager rdfs:label ?manager_name .
  ?managed_player foaf:manager ?manager .
  ?managed_club rdfs:label ?managed_club_name .
  ?managed_organization rdfs:label ?managed_organization_name .
  ?manager dbpedia:birthPlace ?country_of_birth .
  ?leader_of_West_Germany a dbpedia:Person ; dbpedia:countryOfBirth Germany .
}
",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
859,20,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist_name
WHERE {
  ?band a dbpedia:Band ; dbpedia:members [ dbpedia:memberRole dbpedia:MusicalArtist ] .
  ?associated_artist a dbpedia:Person ; dbpedia:role dbpedia:AssociatedArtistsOf ?band .
  ?band rdfs:label 'Khlyst' .
  ?group a dbpedia:BandOrganization ; dbpedia:name 'Burnt by the Sun' .
  ?associated_artist rdfs:label ?associated_artist_name .
}
",6,11,7,3,2,3,2,20,0,0,5,0,0.0,0
628,69,test,"Give me the person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace_name ?band_name ?band_member_name
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:name ""Ackquille Scott Pollard"" .
  ?band a dbpedia:Band ;
           dbpedia:name ?band_name ;
           dbpedia:origin dbpedia:New_York_Sate .
  ?band_member a dbpedia:Musician ;
               dbpedia:band ?band ;
               dbpedia:name ?band_member_name .
  ?artist dbpedia:birthPlace ?birthplace_name
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
687,67,test,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?team_name ?sarmiento_birthday ?actor_name ?actor_role
WHERE {
  ?footballer a dbpedia:FootballPlayer ; dbpedia:fullname ""Juan Carlos Molina"".
  ?footballer dbpedia:playsFor ?team_name .
  ?manager a dbpedia:SoccerManager ; dbpedia:birthDate ?sarmiento_birthday .
  ?actor a dbpedia:Person ; dbpedia:role ?actor_role ; dbpedia:birthDate ?sarmiento_birthday .
  ?film a dbpedia:Film ; dbpedia:title ""El Juego"" .
  ?actor dbpedia:role ?actor_role;
    dbpedia:partOf ?film
}
",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
628,70,test,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?florida_artist_name ?new_york_band_name
WHERE {
  ?bobby_shmurda a dbpedia:Musician ;
                    dbpedia:birthName ""Ackquille Scott"" .
  ?bobby_shmurda dbpedia:associatedBandMember ?band_member_name .

  ?florida_artist a dbpedia:Artist ;
                    dbpedia:birthPlace ""Florida"" .

  ?award a dbpedia:Award ;
             dbpedia:region ""New York (state)"" ;
             dbpedia:awardee ?new_york_band .
  ?new_york_band rdfs:label ?new_york_band_name
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
198,69,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathDate ""1850-08-05"" ;
            dbpedia:awardedBy award:Award ;
            rdfs:label ?full_name .
  ?person dbpedia:birthPlace ?birthplace .
  FILTER (lang(?full_name) = ""en"")  # Ensure the person's name is in English
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
731,19,test,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse and force of the awardee of Commander of the Order of the British Empire.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?commander_name ?awardee_title
WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:partOfMilitaryConflict dbpedia:World_War_II ;
            dbpedia:involvedInConflict ?sinking .
  ?sinking a dbpedia:Naval_Battle ;
             dbpedia:involvedParty foaf:agent ?commander .
  ?commander a dbpedia:Person ;
            dbpedia:awarded dbpedia:CBE ;
            rdfs:label ?commander_name .
  ?awardee_title a award:Honorary_Award ;
                    rdfs:label ?awardee_title .
  ?commander ns:inDataset dbpedia-owl .
  ?awardee_title ns:inDataset dbpedia-owl
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
816,71,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name
WHERE {
  ?mariclare_costello a dbpedia:Person ;
                    dbpedia:spouse ?spouse ;
                    dbpedia:child ?child .
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ""Los Angeles, California"" .
  ?spouse rdfs:label ?spouse_name .
  ?eugene_cattin a dbpedia:Person ;
                 dbpedia:profession ""Specific Profession"" . # Placeholder for the actual profession
  ?actor a dbpedia:Actor ;
          dbpedia:film ?movie .
  ?actor rdfs:label ?actor_name .
  FILTER (regex(str(?child/birthPlace), ""Los Angeles"")) .
}
```

This query looks for:
- A person `?mariclare_costello` who is married to someone (`?spouse`) and has a child (`?child`) born in Los Angeles.
- The spouse's label (`?spouse_name`).
- An actor (`?actor`) who has acted in a film (`?movie`), and:
  - Is related to the child of `?mariclare_costello`.
  - Matches the criteria for being born in Los Angeles.",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
159,67,test,"Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?writer_name ?work_title ?event_description 
WHERE { 
  ?work a dbpedia:Book ; rdfs:author ?writer_name . 
  ?writer rdfs:label ?writer_name . 
  ?event a dbpedia:Event ; dbpedia:type ""military_conflict""; dbpedia:participating_organisations ?military_force . 
  ?military_force rdfs:label ?military_force_name . 
  ?work dbpedia:is_about ?event . 
  ?event dbpedia:participant ?military_force . 
  ?military_force_name = ""Battle of Vienna"" 
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
941,20,test,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v4 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Lüneburg""@en ;
           dbpedia:children ?child .
  ?child a dbpedia:Person ;
          rdfs:label ?royalty_name ;
          dbpedia:spouse ?spouse .
  ?child2 a dbpedia:Person ;
           rdfs:label ?grandchild_name ;
           dbpedia:parent ?spouse .
  ?grandchild a dbpedia:Person ;
            rdfs:label ?royalty_name .
}
```

This query looks for a person (`?royalty`) who has a parent (`?parent`) labeled as Ferdinand Albert II, Duke of Brunswick-Lüneburg and has a spouse (`?spouse`). The grandchild (`?grandchild`) of this spouse should also be labeled with the same name as the royalty, indicating that the royalty is both a child of the specified parent and a royalty through their own lineage.",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
119,19,test,"Give me the war of the commander in French Revolutionary Wars and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_residence_country ?athlete_name ?athlete_city
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:conflict ""French Revolutionary Wars"" .
  ?commander rdfs:label ?commander_name .

  ?residence a dbpedia:Country ;
            dbpedia:name ?commander_residence_country .

  ?athlete a dbpedia:Person ;
            dbpedia:birthPlace ?athlete_city .
  ?athlete rdfs:label ?athlete_name .

  ?city a dbpedia:City ;
           dbpedia:name ""Łódź"" .
  ?athlete dbpedia:residence ?city .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
628,71,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?band_member_birthplace
WHERE {
  ?artist a dbpedia:MusicalArtist , dbpedia:Artist ; dbpedia:birthPlace ?artist_birthplace .
  ?band a dbpedia:Band ; dbpedia:members ?band_members .
  ?band_member a dbpedia:Person ; dbpedia:birthPlace ?band_member_birthplace .
  ?band_member rdfs:label ?band_member_name .
  ?artist rdfs:label ?artist_name .
  ?band rdfs:label ?band_name .
  ?artist ns:name ?artist_name .
  ?band ns:members ?band_members .
  ?band_member ns:memberOf ?band
  ?band_name ns:name ?band_name .
  ?artist_name match 'GS9' .
  ?band_member_birthplace match 'Florida' .
  ?band_name match 'New York' .
}
",9,18,10,3,3,3,3,71,0,0,1,0,0.0,0
140,20,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?ruling_party_name ?ruling_party_url
WHERE {
  ?john_mcdermott a dbpedia:Person ;
                    dbpedia:birthDate ""1870"" ;
                    dbpedia:deathDate ""1959"" .
  ?john_mcdermott dbpedia:deathPlace ?settlement .
  ?settlement a dbpedia:Settlement ;
               rdfs:label ?settlement_name .
  ?ruling_party a dbpedia:PoliticalParty ;
               dbpedia:ruledSettlement ?settlement .
  ?ruling_party rdfs:label ?ruling_party_name .
  FILTER (lang(?ruling_party_name) = ""en"")  # Assuming English for simplicity
}
```

### Completed",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
347,71,test,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?commander_war ?commander_role ?royalty_link 
WHERE { 
  ?commander a dbpedia:Person ; 
  dbpedia:militaryBranch dbpedia:AlgerianWar ; 
  dbpedia:role ?commander_role . 
  ?royalty a dbpedia:Person ; 
  dbpedia:parent ?archduke_joseph ; 
  dbpedia:child ?child_of_archduke_joseph . 
  ?child_of_archduke_joseph rdfs:label ?royalty_link . 
  ?commander rdfs:label ?commander_name . 
}",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
203,69,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?war ?award ?navy_officer_name ?navy_officer_award 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:militaryBranch dbpedia:MilitaryOfUnitedKingdom ; dbpedia:awardedWith ?award . 
  ?award a dbpedia:HonoraryAward ; rdfs:label 'Knight Commander of the Order of the Bath' . 
  ?war a dbpedia:Event ; dbpedia:type dbpedia:MilitaryConflict . 
  ?navy_officer a dbpedia:Person ; dbpedia:militaryBranch dbpedia:RoyalNavy ; dbpedia:awardedWith ?navy_officer_award . 
  ?navy_officer_award a dbpedia:HonoraryAward ; rdfs:label 'Knight Commander of the Order of the Bath' . 
  ?commander rdfs:label ?commander_name . 
  ?navy_officer rdfs:label ?navy_officer_name
}
",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
737,67,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_name ?royalty_title ?parent_name ?parent_title
WHERE {
  ?archduchess a dbpedia:Person ;
               dbpedia:hasChild ?child1 .
  ?child1 a dbpedia:Person ;
            dbpedia:hasChild ?grandchild1 .
  ?grandchild1 a dbpedia:Person ;
              dbpedia:hasChild ?greatGrandchild1 .
  ?greatGrandchild1 a dbpedia:NoblePerson ; # Assuming royalty is represented by holding a noble title
               dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:hasSpouse ?spouse ;
          dbpedia:title ?parent_title .
  ?parent_title rdfs:label ""Duke"" . # Example noble title, adjust as needed
}
```

This query looks for a chain of children, grandchildren, and great-grandchildren of Archduchess Margarete Sophie, filtering for those who are identified as `NoblePerson` (representing royalty) and whose parent holds the title ""Duke"". Adjustments to the title or other predicates may be necessary based on DBpedia's specific classifications.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
87,28,test,"Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?janusz_kaminski a dbpedia:Person ;
                    dbpedia:roleInFilm dbpedia:The_Pianist ;
                    dbpedia:spouse ?spouse_name .
  ?iliza_shlesinger a dbpedia:Person ;
                     dbpedia:roleInFilm ?film_with_janusz ;
                     rdfs:label ""Iliza Shlesinger""@en .
  ?film_with_janusz a dbpedia:Film ;
                    dbpedia:actor ?janusz_kaminski ;
                    dbpedia:actress ?iliza_shlesinger .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
905,70,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?grandchild a dbpedia:Person ;
               dbpedia:parent ?child_of_stephen_v ;
               dbpedia:offspring ?child_of_child;
               dbpedia:isRoyalty true .
  ?child_of_stephen_v a dbpedia:Person ;
                    dbpedia:parent ?precedessor_of_stephen_v ;
                    dbpedia:spouse ?spouse_of_predecessor ;
                    dbpedia:birthPlace ""Mississippi"" . # Assuming Stephen V was born in Mississippi
  ?precedessor_of_stephen_v a dbpedia:Person ;
                       dbpedia:parent ?grandparent_of_stephen_v ;
                       dbpedia:isRoyalty true .
  ?spouse_of_predecessor a dbpedia:Person ;
                      dbpedia:parent ?maria_of_bytom_spouse ;
                      dbpedia:birthPlace ""Mississippi"" . # Assuming the spouse was born in Mississippi
  ?maria_of_bytom_spouse a dbpedia:Person ;
                       dbpedia:spouse ?maria_of_bytom ;
                       dbpedia:birthPlace ""Mississippi"" .
  ?philip_i_prince_of_taranto a dbpedia:Person ;
                        dbpedia:parent ?spouse_of_predecessor ;
                        dbpedia:isRoyalty true ;
                        dbpedia:birthPlace ""Taranto"" . # Assuming Philip I's birth place
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
311,19,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M. and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?band_member_name ?band_member_role
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:hasAlbum ?album .
  ?album a dbpedia:MusicAlbum ;
          rdfs:label ""Sappy"" .
  ?bandMember a dbpedia:Person ;
             dbpedia:role dbpedia:BandMemberRole ;
             rdfs:label ?band_member_name .
  ?album dbpedia:producer ?producer .
  ?producer a dbpedia:Artist;
            rdfs:label ?producer_name .
  ?bandMember = ?producer
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
80,69,test,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?role_in_golden_master ?song_involved ?movie_with_smartbomb_author
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:role dbpedia:Actor ;
           dbpedia:in_series ""The Golden Master"" .
  ?actor foaf:musicAlbum ""What You Know"" .
  ?actor dbpedia:film _ :FilmName ""Smartbomb"" .
  ?film dbpedia:author ""Smartbomb (book)"" .
}
```

### Completed",8,8,9,3,3,3,3,71,0,0,4,0,0.0,0
159,68,test,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find Jean Baptiste, Comte d'Arco
SELECT ?jean_baptiste_comte_d_arco WHERE {
  ?jean_baptiste_comte_d_arco a dbpedia:Person ;
                       rdfs:label ""Jean Baptiste, Comte d'Arco""@fr .
}

# Find his successor who is both a politician and an office holder
SELECT ?successor WHERE {
  ?successor a dbpedia:OfficeHolder ;
             dbpedia:office dbpedia:PoliticalPosition ;
             dbpedia:successorOf ?jean_baptiste_comte_d_arco .
}

# Find Michał Kazimierz Pac
SELECT ?michał_kazimierz_pac WHERE {
  ?michał_kazimierz_pac a dbpedia:Person ;
                       rdfs:label ""Michał Kazimierz Pac""@pl .
}

# Find the war he was a commander in, which is both an event and a military conflict
SELECT ?war WHERE {
  ?war a dbpedia:Event ;
         dbpedia:type dbpedia:MilitaryConflict ;
         dbpedia:participatedIn ?michał_kazimierz_pac .
}

# Find George Ducas, the writer of a work about Michał Kazimierz Pac
SELECT ?george_ducas WHERE {
  ?george_ducas a dbpedia:Person ;
                 rdfs:label ""George Ducas""@en ;
                 dbpedia:authorOf [ dbpedia:subject ?michał_kazimierz_pac ] .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,69,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of the administration, that is an event, of Anxo Quintana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v7 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . }","1. **Spanish Tenant of PSOE Administration Query:**
   ```sparql
   PREFIX dbpedia: <http://dbpedia.org/ontology/>
   PREFIX psoe: <http://dbpedia.org/ontology/Psoe>

   SELECT ?governor_name ?governor_region
   WHERE {
     ?governor a dbpedia:Politician ;
             dbpedia:birthPlace xsd:string ;
             dbpedia:officeHolderParty psoe:Psoe ;
             dbpedia:administrationRegion ?governor_region .
     ?governor rdfs:label ?governor_name
   }
   ```

2. **Country of Álvaro Quirós Query:**
   ```sparql
   PREFIX dbo: <http://dbpedia.org/ontology/>

   SELECT ?country_name
   WHERE {
     ?person a dbpedia:Person ;
             dbpedia:name ""Álvaro Quirós"" ;
             dbo:residence ?country .
     ?country rdfs:label ?country_name
   }
   ```

3. **Event with Anxo Quintana as Leader Query:**
   ```sparql
   PREFIX dbo: <http://dbpedia.org/ontology/>

   SELECT ?event_name
   WHERE {
     ?event a dbpedia:Event ;
             dbo:leader ?leader ;
             dbo:role ""Head of Government"" .
     ?leader a dbpedia:Person ;
             rdfs:label ""Anxo Quintana""@es .
   }
   ```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
782,69,test,"Give me the reference to the real name of the band of Kim Wilson and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?artist_names
WHERE {
  ?kim_wilson_artists dbpedia:genre ""Rock music"" .
  ?eric_clapton_artists dbpedia:genre ""Rock music"" .
  ?fabulous_thunderbirds a dbpedia:Band ; dbpedia:leader ?kim_wilson .
  ?yardbirds a dbpedia:Band ; dbpedia:member ?eric_clapton .
  ?derek_and_the_dominos a dbpedia:Band ; dbpedia:member ?eric_clapton .
  ?cream a dbpedia:Band ; dbpedia:member ?eric_clapton .
  ?kim_wilson_artists rdfs:seeAlso ?fabulous_thunderbirds .
  ?eric_clapton_artists rdfs:seeAlso ?yardbirds .
  ?eric_clapton_artists rdfs:seeAlso ?derek_and_the_dominos .
  ?eric_clapton_artists rdfs:seeAlso ?cream .
  ?nick_curran_artist a dbpedia:Artist ; dbpedia:birthPlace ""United States"" . # Placeholder for Nick Curran's artist details
  ?nick_curran_artist rdfs:label ""Nick Curran""@en . # Placeholder for Nick Curran's name in English
}
```

This query aims to find bands associated with both Kim Wilson and Eric Clapton, and it also includes a placeholder for Nick Curran to explore hypothetical connections. However, since Nick Curran is a fictional character, the query primarily focuses on real-world musical associations.",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
361,27,test,"Give me the professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?role_in_film ?alter_ego_role
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:hasRole ?role_in_film .
  ?actor rdfs:label ?actor_name .
  OPTIONAL { 
    ?actor dbpedia:hasAlterEgo ?alter_ego .
    ?alter_ego rdfs:label ?alter_ego_role
  }
  FILTER ( (?role_in_film = 'Music Video' OR ?role_in_film = 'Film') AND 
           (?alter_ego_role = 'The Shadow') )
}
```

This query will search for a person who has been credited as an actor in either a music video or film titled ""Lasso the Moon"" and also has an alter ego role of ""The Shadow"". The `FILTER` clause ensures that we only get results matching both conditions.",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
39,69,test,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name ?producer_profession ?artist_name ?artist_birthname ?artist_profession ?shadow_name ?shadow_altego 
WHERE { 
?producer a dbpedia:MusicProducer ; 
  dbpedia:produced Album 'Coke Studio Philippines' . 
?artist a dbpedia:MusicalArtist ; 
  dbpedia:birthPlace ?artist_birthplace . 
?artist rdfs:label ?artist_name . 
?artist foaf:name ?artist_birthname . 
?producer rdfs:label ?producer_name . 
?artist rdfs:label ?artist_name . 
?artist foaf:name ?artist_birthname . 
?producer ns:altName ?shadow_name . 
?artist ns:altName ?shadow_altego . 
?producer birthPlace ?producer_birthplace . 
?artist birthPlace ?artist_birthplace . 
FILTER (lang(?artist_name) = 'en' ) 
",8,9,9,3,3,3,3,71,0,0,4,0,0.0,0
23,27,test,Give me the entity in the country of Daniel Elahi Galán and party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?party_name WHERE {
  ?governor a dbpedia:Politician ; dbpedia:birthPlace colombia ; rdfs:label ?governor_name .
  ?author a dbpedia:Person ; dbpedia:birthPlace venezuela ; rdfs:label ?author_name .
  ?vince_gilligan a dbpedia:Person ; dbpedia:birthPlace venezuela ; rdfs:label ?vince_gilligan_name .
  ?governor pobox:party ?party .
  ?author pobox:party ?party .
  ?vince_gilligan pobox:party ?party .
  ?party rdfs:label ?party_name .
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,68,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://dbpedia.org/property/father> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?royalty_person a dbpedia:Royalty ;
                    dbpedia:parent ?parent_royalty ;
                    dbpedia:child ?child_royalty .
  ?child_royalty a dbpedia:Person ;
                 dbpedia:spouse ?spouse_name .
  ?parent_royalty a dbpedia:Person ;
                  rdfs:label ""Philip, Despot of Romania"" .
  ?parent_royalty dbpedia:father ?grandparent_royalty .
  ?grandparent_royalty a dbpedia:Person ;
                    rdfs:label ""Béla IV of Hungary"" .
}
```

### Completed
This SPARQL query is designed to find the spouse's name of the individual who is the child of Béla IV of Hungary (Philip's parent) and a royalty themselves, ultimately leading us to identify the spouse of Philip. The query navigates through the hierarchical relationships described in the question, using the DBpedia ontology properties to filter for the required individuals.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
595,71,test,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?author a dbpedia:Person ; dbpedia:givenName 'Hillary Clinton' .
  ?author rdfs:label ?author_name .
  ?politician a dbpedia:OfficeHolder ; dbpedia:office dbpedia:President_of_the_United_States ; dbpedia:spouse ?spouse_name .
  ?politician rdfs:label ?politician_name .
}
",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
609,70,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace ?author_name ?author_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
    dbpedia:birthPlace ?governor_birthplace .
  ?vince_gilligan a dbpedia:Person ;
    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?author a dbpedia:Person ;
    dbpedia:birthPlace ?author_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",8,12,9,3,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
89,70,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandmother_name
WHERE {
  ?spouse a dbpedia:Person ;
            dbpedia:partner ?saw_min_phyu .
  ?children a dbpedia:NobleFamily ;
             dbpedia:childOf ?spouse ;
             dbpedia:parent ?min_hla_htut .
  ?min_hla_htut a dbpedia:Royalty .
  SOME ?child IN ?children
    WHERE { ?child rdfs:father ?royal_father }
    AND ?royal_father a dbpedia:Royalty
  ?
  ?grandmother a dbpedia:Person ;
             dbpedia:parent ?spouse .
  FILTER( EXISTS { ?child rdfs:parent ?grandmother } )
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
263,27,test,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandparent_name ?grandparent_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:birthPlace Middlesex, United Kingdom .
  ?childParents a dbpedia:Family ;
                dbpedia:member ?child ;
                dbpedia:parentOf ?child .
  ?childParents dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
             rdfs:label ?grandparent_name ;
             dbpedia:birthPlace ?grandparent_birthplace
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
557,69,test,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name WHERE { 
  ?actor rdfs:label 'High Society Blues' . 
  ?movie rdfs:label 'The Green Hornet' . 
  ?actor dbpedia:role ?actor_role . 
  ?movie dbpedia:producer ?producer . 
  ?producer rdfs:label ?producer_name . 
  ?actor dbpedia:appearanceIn ?cora_sue_collins_work . 
  ?cora_sue_collins_work rdfs:label 'High Society Blues' . 
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
769,20,test,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?manager_name ?organization_name ?soccer_club_name
WHERE {
  ?player a dbpedia:Person ; dbpedia:birthDate ?hollings_birth_date .
  ?player dbpprop:athlete ; dbpprop:soccerPlayer ; dbpprop:sportsManager ; dbpprop:soccerManager .
  ?manager a dbpedia:Person ; dbpedia:birthDate ?hollings_birth_date .
  ?manager dbpprop:sportsManager ; dbpprop:soccerManager .
  ?organization a dbpedia:Organization ; dbpedia:type dbpedia:SportsClub ; dbpedia:name ?organization_name .
  ?team a dbpedia:SportTeam ; dbpedia:type dbpedia:SoccerTeam ; dbpedia:homeGround ?soccer_club_address .
  ?organization dbpprop:owns ?team .
  ?player rdfs:label ?player_name .
  ?manager rdfs:label ?manager_name .
  ?organization rdfs:label ?organization_name .
  ?soccer_club a dbpedia:SoccerClub ; dbpedia:name ?soccer_club_name .
  ?soccer_club_address a dbpedia:Address
  AND ?player_name = 'Tony Hollings' }
",6,16,7,3,2,3,2,20,0,0,2,0,0.0,0
859,19,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

// Step 1: Find Khlyst band members who are musical artists
SELECT ?member_name ?artist_name
WHERE {
  ?member a dbpedia:Musician ; dbpedia:band Khlyst .
  ?member rdfs:label ?member_name .
  OPTIONAL { ?member dbpedia:associatedBand ?artist . }
  ?artist a dbpedia:Musician .
}

// Step 2: Find the associated musical artist of the Khlyst members found in Step 1
SELECT DISTINCT ?musical_artist_name
WHERE {
  ?artist_name IN ( ?member_name ) .
  OPTIONAL { ?artist rdfs:label ?musical_artist_name . }
}

// Step 3: Identify Burnt by the Sun band members who are also musical artists
SELECT ?band_member_name ?artist_name
WHERE {
  ?band_member a dbpedia:Musician ; dbpedia:band Burnt by the Sun .
  ?band_member rdfs:label ?band_member_name .
  OPTIONAL { ?band_member dbpedia:associatedBand ?artist . }
  ?artist a dbpedia:Musician .
}

// Step 4: Find the associated musical artist of the Burnt by the Sun members found in Step 3
SELECT DISTINCT ?musical_artist_name
WHERE {
  ?artist_name IN ( ?band_member_name ) .
  OPTIONAL { ?artist rdfs:label ?musical_artist_name . }
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
557,68,test,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . }","SELECT ?producer_name ?movie_title WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:name ""Kent Allard""@en;
           dbpedia:birthDate ""1899-07-27"" .
  ?actor dbpedia:role ?fictional_character .
  ?fictional_character rdfs:label ""Johnny Doughboy""@en .
  ?actor dbpedia:film ""Name of the Movie""@en ;
               dbpedia:producer ?producer_name .
  ?movie_title a dbpedia:Film ;
                dbpedia:director ?director_name ;
                dbpedia:mainActor ?actor_name .
  ?movie_title rdfs:label ""Title of the Movie""@en;
                dbpedia:releaseDate ""Release Year"" .
  ?director_name rdfs:label ""Director Name""@en .
  FILTER (lang(?director_name) = ""en"") .
  ?actor dbpedia:film ?another_movie ;
           dbpedia:producer ?producer_name .
  ?another_movie a dbpedia:Film ;
                dbpedia:mainActor ?janet_gaynor .
  ?janet_gaynor rdfs:label ""Janet Gaynor""@en .
  FILTER (lang(?movie_title) = ""en"") .
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
203,70,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?kcb_person_name ?regiment_name ?conflict_name 
WHERE { 
  ?kcb_person a dbpedia:Person ; 
  dbpedia:awardedKCB true ; 
  dbpedia:birthPlace ?kcb_birthplace . 
  ?regiment a dbpedia:MilitaryUnit ; 
  dbpedia:regimentName ?regiment_name ; 
  dbpedia:engagedInConflict ?conflict . 
  ?conflict a dbpedia:Event ; 
  dbpedia:conflictName ?conflict_name . 
  ?kcb_person rdfs:label ?kcb_person_name . 
  ?regiment rdfs:label ?regiment_name . 
  ?conflict rdfs:label ?conflict_name . 
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,70,test,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v7 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_member_name ?band ?musical_artist_name WHERE {
  ?band a dbpedia:Band ; dbpedia:members ?band_member .
  ?band_member a dbpedia:Musician ; rdfs:label ?band_member_name .
  ?band_member foaf:name ?musical_artist_name .
  ?musical_artist_name rdfs:label 'Bob Thompson' .
}",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
737,68,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria and child of the child of the child of Alexander of Württemberg (1804-1881).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_predecessor_name 
WHERE { 
  ?grandchild a dbpedia:Person ; 
    dbpedia:parent ?child_of_spouse ; 
    dbpedia:spouse ?archduke_charles_louis_of_austria ; 
    rdfs:label ?royalty_name . 
  ?child_of_spouse a dbpedia:Person ; 
    dbpedia:parent ?archduke_charles_louis_of_austria ; 
    rdfs:label ?child_of_spouse_name . 
  OPTIONAL { ?child_of_spouse dbpedia:hasChild ?grandchild_child } . 
  ?grandchild_child a dbpedia:Person ; 
    rdfs:label ?grandchild_name . 
  ?royalty_predecessor a dbpedia:Person ; 
    rdfs:label ?royalty_predecessor_name ; 
    dbpedia:parent ?grandchild_child . 
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
557,70,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?producer_name WHERE { 
  ?actor rdfs:label 'Lamont Cranston' . 
  ?actor dbpedia:roleInFilm 'High Society Blues' . 
  ?actor dbpedia:roleInFilm 'The Shadow' . 
  ?producer a dbpedia:Person ; dbpedia:role ?producer_role . 
  ?producer rdfs:label ?producer_name . 
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
386,27,test,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?war WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:Golden_Sword_for_Bravery ?awardee_golden_sword .
  ?awardee rdfs:label ?awardee_name .
  OPTIONAL { 
    ?awardee dbpedia:conflict ?war.
    ?war a dbpedia:War ; dbpedia:involvedIn ""Russian Empire"" .
  }
}
```

This query will search for individuals who have been awarded the Golden Sword for Bravery and check if any of them were involved in a war that took place within the Russian Empire. The `OPTIONAL` clause allows for flexibility, as not all recipients might have their conflicts explicitly listed in DBpedia.

To get the final answer, we would need to execute this query against the DBpedia dataset and interpret the results accordingly.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
103,67,test,"Give me the actor of Dispatches from Elsewhere and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?politician_role ?comic_character_name ?comic_character_role 
WHERE { 
  ?actor a dbpedia:Person ; 
    rdfs:label ?actor_name . 
  ?actor dbpedia:presents ?politician_role . 
  ?actor dbpedia:portrays ?comic_character . 
  ?comic_character a dbpedia:ComicCharacter ; 
    rdfs:label ?comic_character_name . 
}",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
628,67,test,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida and band member of Uncle Murda.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name ?award ?native_place
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:origin ?native_place .
  ?person a dbpedia:Person ;
            dbpedia:name ""Shawn Myles Brown"" ;
            dbpedia:birthPlace ?florida_birthplace .
  ?award a dbpedia:Award ;
           dbpedia:recipient ?band_name .
  ?band rdfs:label ?band_name .
  ?florida_birthplace a dbpedia:Settlement ;
                       dbpedia:isPartOf dbpedia:Florida .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,68,test,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v7 <http://dbpedia.org/property/author> ?v0 . ?v5 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?disease_name ?societal_event_name ?spouse_name ?politician_name ?office_holder_name ?hillary_clinton_book_name ?chappaqua_resident_name
WHERE {
  ?commander a dbpedia:Person ; dbpedia:militaryRole dbpedia:CommanderOfTheNavy .
  ?disease a dbpedia:MedicalCondition .
  ?societal_event a dbpedia:SocietalEvent .
  ?spouse a dbpedia:Person ; dbpedia:siblingProperty ?commander ; dbpedia:partner ?spouse_name .
  ?politician a dbpedia:Politician ; dbpedia:officeHolder ?office_holder_name .
  ?author a dbpedia:Person ; dbpedia:birthPlace dbpedia:Chappaqua,New_York ; dbpedia:writtenWork ?hillary_clinton_book_name .
  ?hillary_clinton_book a dbpedia:Book ; dbpedia:author ?author_name .
  ?vince_gilligan a dbpedia:Person ; dbpedia:birthPlace dbpedia:Chappaqua,New_York .
  ?commander rdfs:label ?commander_name .
  ?disease rdfs:label ?disease_name .
  ?societal_event rdfs:label ?societal_event_name .
  ?politician rdfs:label ?politician_name .
  ?office_holder rdfs:label ?office_holder_name .
  ?author rdfs:label ?author_name .
}
",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
89,67,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?royalty_child_name ?preceding_child_name
WHERE {
  ?spouse a dbpedia:Person ;
            dbpedia:partnerOf ?min_hla .
  ?min_hla a dbpedia:Person ;
             dbpedia:parentOf ?shwe_khet .
  ?shwe_khet a dbpedia:Person ;
               dbpedia:childOf ?spouse ;
               dbpedia:royalty true .
  ?preceding_child a dbpedia:Person ;
                    dbpedia:childOf ?spouse ;
                    dbpedia:royalty true .
  ?preceding_child precedes ?royalty_child
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
293,70,test,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?ruling_party_member_name ?spouse_name 
WHERE { 
  ?central louisiana rdfs:label 'Central, Louisiana' . 
  ?ruling_party a dbpedia:PoliticalParty ; dbpedia:hasRulingRegion ?central_louisiana . 
  ?ruling_party_member a dbpedia:Politician ; dbpedia:party ?ruling_party . 
  ?actor rdfs:label ?actor_name . 
  ?movie a dbpedia:Film ; dbpedia:director 'Nat Levine' ; dbpedia:star ?actor_name . 
  ?spouse a dbpedia:Person ; dbpedia:spouseOf ?actor_name . 
  ?parent a dbpedia:Person ; rdfs:child ?tisha_sterling . 
  ?tisha_sterling rdfs:label 'Tisha Sterling' . 
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
80,70,test,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?movie_title ?album_title
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?album a dbpedia:Album ;
             dbpedia:artist ?artist_name .
  ?song a dbpedia:Song ;
            dbpedia:performer ?artist_name .
  ?movie a dbpedia:Film ;
            dbpedia:role ?actor_name .
  ?artist_name ns:name ""T.I."" .
  ?movie rdfs:label ?movie_title .
  ?album rdfs:label ?album_title
}
```

This query looks for a person (actor) who:
- Has the label/name `?actor_name` (their real name or stage name).
- Is an artist of an album (`?album`) by T.I. (`?artist_name ns:name ""T.I.""`).
- Performs on a song (`?song`) from that album.
- Acts in a movie (`?movie`) where they play the role of ""King"" (assumed to be their character name in ""The Golden Master"").",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
143,20,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Patience Ogbonna""@en .
  ?person dbpedia:birthName ?birthName .
  ?birthName ns:match ""Cynthia Morgan""@en .
  ?actor a dbpedia:Actor ;
           rdfs:label ""Afeez Oyetoro""@en .
  ?actor dbpedia:roleIn ""Shuga""@en .
  ?musical_artist a dbpedia:Musician ;
                 dbpedia:associatedWith ?actor .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
258,20,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?almaMaterName ?foundingDate
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthName ""Eleonora Pellegrini""@en;
               dbpedia:deathDate ""1978-03-18""^^xsd:date .
  ?politician rdfs:label ?almaMaterName .

  ?author a dbpedia:Person ;
          dbpedia:birthName ""Luiza Helena Martins de Vasconcelos""@en;
          dbpedia:deathDate ""1989-10-13""^^xsd:date .
  ?author rdfs:label ?almaMaterName .

  ?institution a dbpedia:University ;
               dcterms:foundingDate ?foundingDate .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
78,27,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?composer_name ?stuart_tosh_band_name ?david_paton_band_members
WHERE {
  ?composition rdfs:label ""Wizards of Waverly Place"" .
  ?composer a dbpedia:Musician ; dbpedia:composes ?composition .
  ?stuart_tosh a dbpedia:Person ; dbpedia:memberOf ?stuart_tosh_band .
  ?david_paton a dbpedia:Person ; dbpedia:memberOf ?david_paton_band .
  ?david_paton_band rdfs:label ?david_paton_band_name
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
258,19,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?almaMaterName ?foundingDate
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:name ""Eleonora Menicucci""@en .
  ?politician dbpedia:almaMater ?almaMater .
  ?university a dbpedia:University ;
              dbpedia:name ""Federal University of Paraíba""@en ;
              dbpedia:established ?foundingDate .
  ?almaMater a dbpedia:EducationalInstitution .
  ?university ?almaMater
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
78,28,test,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?artist_name ?band_name WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Stuart McBeath Tosh"" .
  ?band a dbpedia:Band ;
           dbpedia:members ?person ;
           dbpedia:associatedMusicalArtist ?artist_name .
  ?artist a dbpedia:MusicArtist .
  
  ?person2 a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?person2 rdfs:label ""David Paton"" .
  ?band2 a dbpedia:Band ;
           dbpedia:members ?person2 ;
           dbpedia:associatedMusicalArtist ?artist_name_2 .
  ?artist_2 a dbpedia:MusicArtist .

  ?person3 a dbpedia:Person ;
            rdfs:label ""writer of Wizards of Waverly Place"" .
  ?artist3 a dbpedia:MusicArtist .
  
  ?artist_name ?band_name
}
```

This query looks for individuals labeled as ""Stuart McBeath Tosh"" and ""David Paton"", finds their bands, and then associates those bands with musical artists. Additionally, it looks for a person labeled as the ""writer of Wizards of Waverly Place"" and associates them with a music artist.",6,9,7,2,3,2,3,28,0,0,2,0,0.0,0
345,9,test,"Give me the reference to the name of Mitaka, Tokyo and region of the time zone of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v3 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?mitaka_name ?tokyo_region ?japan_time_zone
WHERE {
  ?mitaka a dbpedia:Location ;
            dbpedia:isPartOf ?tokyo .
  ?tokyo a dbpedia:City ;
           dbpedia:name ?tokyo_name ;
           dbpedia:contains ?mitaka .
  ?japan a dbpedia:Country ;
           dbpedia:timeZones ?japan_time_zones .
  ?japan_time_zone a dbpedia:TimeZone .
  FILTER (?tokyo_name = ""Tokyo"") .
  BIND(str(?mitaka_name) AS ?mitaka_name)
  BIND(str(?tokyo_name) AS ?tokyo_name)
  BIND(str(?japan_time_zone) AS ?japan_time_zone)
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
353,70,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spouse_name ?child_name ?royalty_status 
WHERE { 
  ?constance a dbpedia:Person ; dbpedia:name ""Constance of Burgundy"" ; dbpedia:spouse ?spouse_name . 
  ?spouse_name a dbpedia:Person ; dbpedia:name ?spouse_name . 
  ?constance dbpedia:child ?child_name . 
  ?child_name a dbpedia:Person ; dbpedia:name ?child_name ; dbpedia:royaltyStatus ""Royalty"" . 
  ?william a dbpedia:Person ; dbpedia:name ""William I"" ; dbpedia:officeHolder ""King of England"" . 
  ?roger a dbpedia:Person ; dbpedia:name ""Roger III, Duke of Apulia"" . 
  ?richard a dbpedia:Person ; dbpedia:name ""Richard I, Duke of Aquitaine"" ; dbpedia:parent ?roger ; dbpedia:royaltyStatus ""Royalty"" . 
  ?child_name rdfs:father ?spouse_name . 
  ?william rdfs:child ?richard . 
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
492,28,test,Give me the death place of the actor of Aladdin (1958 film) and death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_deathplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:deathPlace ?actor_deathplace .
  ?actor rdfs:label ?actor_name
}
```",6,6,7,2,3,2,3,28,1,345090,0,2.8977863809835668e-06,1.0,5.79555596768398e-06
737,71,test,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v7 . ?v8 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_birthplace
WHERE {
  ?alexander a dbpedia:Person ;
               dbpedia:birthPlace ?alexander_birthplace .
  ?grandchild1 a dbpedia:Person ;
                dbpedia:parent ?alexander ;
                dbpedia:birthPlace ?grandchild1_birthplace .
  ?great_grandchild2 a dbpedia:Person ;
                    dbpedia:parent ?grandchild1 ;
                    dbpedia:birthPlace ?great_grandchild2_birthplace .
  ?great_grandchild2 rdfs:label ?royalty_name .
  ?great_grandchild2 a dbpedia:Royalty
}

# Linking Archduchess Margarete Sophie and her spouse to the lineage
SELECT ?royalty_name ?royalty_birthplace
WHERE {
  ?archduchess a dbpedia:Person ;
               dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person ;
            dbpedia:child ?child .
  ?child a dbpedia:Person ;
           dbpedia:parent ?spouse ;
           dbpedia:birthPlace ?child_birthplace .
  ?great_grandchild2 rdfs:label ?royalty_name .
  ?great_grandchild2 a dbpedia:Royalty
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
375,27,test,Give me the war of the child of Toyotomi Hideyoshi and war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?hideyoshi_involvement ?koichiro_related_event
WHERE {
  ?hideyoshi a dbpedia:Person ;
            dbpedia:birthDate ""1537-05-02"" ;
            rdfs:label ""Toyotomi Hideyoshi""@en .
  ?war a dbpedia:Conflict ;
         dbpedia:startYear ""Sengoku period"" ;
         dbpedia:endYear ""Azuchi-Momoyama period"" .
  ?hideyoshi dbpedia:participatedIn ?war .
  ?koichiro_son a dbpedia:Person ;
            rdfs:label ""Koichirō""@en ;
            dbpedia:parent ?hideyoshi .
  ?war dbpedia:involvedParty ?koichiro_related_event
}
```

This query looks for conflicts (wars) during the Sengoku and Azuchi-Momoyama periods involving Toyotomi Hideyoshi and checks if any of these wars involved a person labeled as Koichirō (Hidekatsu) as a related event.",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
19,9,test,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in the birth name of John Boxer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","{
  ""reasoning"": ""Caroline Louise Bevan Symonds was born in England and became a notable figure. Her spouse would be someone who shares her interests or is professionally connected to her, and his birth name should be John Boxer."",
  ""sparql_query"": """"""
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?spouse_profession
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:name ""Caroline Louise Bevan Symonds"" ;
            dbpedia:birthPlace England ;
            dbpedia:profession ?profession .
  ?spouse a dbpedia:Person ;
           dbpedia:name ?spouse_name ;
           dbpedia:marriedTo ?person .
  OPTIONAL { ?person rdfs:label ?profession }
  OPTIONAL { ?spouse rdfs:label ?spouse_profession }
}
"""""",
  ""completed"": true
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
198,70,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?person_name ?birth_place_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathDate ""1850-08-05"" ;
            award:awardedAward award:MedalOfHonor ;
            award:awardedAward award:QuincyAdamsGillmore .
  ?person rdfs:label ?person_name .
  ?birth_place a dbpedia:SpatialThing ;
             dbpedia:isPartOfCountry ""United States"" ;
             rdfs:label ?birth_place_name .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
270,9,test,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at the birth place, that is a settlement, of Mark Tournier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?politician_birthplace
WHERE {
  ?politician a dbpedia:Politician ;
              dbpedia:birthPlace ?politician_birthplace .
  ?politician_birthplace rdfs:label ?politician_birthplace_label .
  FILTER (STRSTARTS(?politician_birthplace_label, ""Mark Tournier""))
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
742,20,test,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/property/residence> ?v4 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?birthplace WHERE { 
?person a dbpedia:Person ; dbpedia:birthPlace ?birthplace . 
?person rdfs:label ?name . 
?birthplace geo:hasLocation ?location . 
?location hasTimeZone en:EET . 
?location geo:inCountry bg:България . 
?university a dbpedia:University ; rdfs:label ""Пловдивски университет ""Паисий Хилендарски""@en . 
?person rdf:type dbpedia:AlumnusOf ?university . }",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
687,69,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?player_name ?manager_name ?team_name 
WHERE { 
  ?player a dbpedia:SoccerPlayer ; dbpedia:birthDate '1990-03-11' . 
  ?player rdfs:label ?player_name . 
  ?manager a dbpedia:SoccerManager ; dbpedia:managedTeam ?team . 
  ?team rdfs:label ?team_name . 
  ?manager rdfs:label ?manager_name . 
}",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
668,71,test,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v8 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name ?birth_name WHERE {
  ?person a dbpedia:Person ; dbpedia:birthName ?birth_name .
  ?artist a dbpedia:MusicArtist ; dbpedia:associatedAlbum ?album_name .
  ?album_name rdfs:label 'The Live Anthology' .
}",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
159,70,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?commander_role ?television_show ?societal_event 
WHERE { 
  ?commander a dbpedia:Person ; 
  dbpedia:role ?commander_role . 
  ?commander rdfs:label ?commander_name . 
  ?television_show a dbpedia:Television_Series ; 
  dbpedia:has_character ?commander_name . 
  ?societal_event a dbpedia:Event ; 
  dbpedia:involvesMilitaryConflict ?commander_role . 
  ?commander_role ns:subclassOf [ ns:exact ""dbpedia:Battle_of_Vienna"" ] . 
  ?commander_role ns:subclassOf [ ns:exact ""dbpedia:Russo_Polish_War_1654–667"" ] . 
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
513,20,test,"Give me the entity in the award of the reference to George Hamilton Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/leader> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/residence> ?result . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?leader_name ?party WHERE { ?leader a dbpedia:Person ; dbpedia:office dbpedia:Prime_Minister_of_the_United_Kingdom ; dbpedia:political_party dbpedia:Conservative_Party },6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
347,70,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?event_type ?television_show 
WHERE { 
  ?child a dbpedia:Person ; dbpedia:parent ?grandparent . 
  ?grandparent a dbpedia:Person ; dbpedia:child ?child . 
  ?child rdfs:label ?royalty_name . 
  ?child dbpedia:p father ?father_of_child . 
  ?father_of_child a dbpedia:Person ; dbpedia:parent ?parent_of_father . 
  ?parent_of_father a dbpedia:Person ; dbpedia:child ?child_of_parent . 
  ?child_of_parent a dbpedia:Event ; dbpedia:societal_event ?societal_event . 
  ?child_of_parent rdfs:label ?child_name . 
  ?2nd_Dragoon_Regiment a dbpedia:MilitaryUnit ; dbpedia:partOf ?event_in_war . 
  ?event_in_war a dbpedia:Event . 
  ?television_show a dbpedia:TelevisionShow ; dbpedia:basedOn ?event_in_war . 
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,69,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?actor a dbo:Person ; dbpedia:birthPlace LosAngeles ; 
    dbo:hasSpouse ?spouse ; 
    dbo:hasChild ?child_professional ; 
    dbo:hasSpouse ?mariclare_costello_spouse ; 
    dbo:hasParent ?parent_of_mariclare
  
  ?parent_of_mariclare a dbo:Person ; dbpedia:birthPlace LosAngeles
}
",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
871,70,test,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent_name ?grandparent_title ?grandparent_birthplace
WHERE {
  ?child a dbpedia:Person ; dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name .
  ?child dbpprop:officeHolder .
  ?child dbpprop:alumnusOf dbpedia:Eton_School .
  ?parent a dbpedia:Person ; dbpedia:birthPlace ?parent_birthplace .
  ?parent rdfs:label ?parent_name .
  ?parent dbpprop:politician .
  ?grandparent a dbpedia:Person ; dbpedia:birthPlace ?grandparent_birthplace .
  ?grandparent rdfs:label ?grandparent_name .
  ?grandparent dbpprop:officeHolder .
  ?grandparent dbpprop:awardeeOf dbpedia:Commander_of_the_Royal_Victorian_Order
  ?child dbpprop:offspringOf ?parent .
}
",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
472,27,test,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?mayor_name ?administration ?copenhagen_administration 
WHERE { 
?prince a dbpedia:Person ; dbpedia:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" . 
?duchy a dbpedia:Duchy ; dbpedia:name ""Duchy of Schleswig"" . 
?duchy rdfs:isDefinedBy ?administration . 
?copenhagen a dbpedia:City ; dbpedia:name ""Copenhagen"" . 
?copenhagen adminstrates ?duchy . 
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
295,19,test,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of the producer of Storm in a Teacup (film).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX owl:sameAs <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?writer_name
WHERE {
  ?musical_work a dbpedia:MusicAlbum ; dbpedia:artist ApacheIndian .
  ?producer a dbpedia:FilmProducer ;
             dbpedia:film ""Storm in a Teacup"" .
  ?musician a dbpedia:Musician ;
             dbpedia:birthPlace ?musician_birthplace .
  ?writer a dbpedia:MusicComposer ;
           dbpedia:work ?musical_work .
  ?writer rdfs:label ?writer_name .
  OPTIONAL {
    ?producer owl:sameAs ?musician
  }
  FILTER NOT EXISTS {
    ?writer owl:sameAs ?producer
  }
}
```

This query looks for a musical work by Apache Indian and then tries to find a composer (writer) of that work, excluding the producer of ""Storm in a Teacup"" from being the writer.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
687,68,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v5 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","

PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?team_name ?soccer_player_manager_born_date ?actor_soccer_player_film ?film_title ?manuel_huerga_work

WHERE {
  ?soccer_player_manager bornDate '1979-11-03' ; dbpedia:role dbpedia:SoccerPlayer ; dbpedia:birthPlace ?soccer_player_manager_birthplace .
  ?soccer_player_manager rdfs:label ?soccer_player_manager_name .
  ?manager bornDate '1979-11-03' ; dbpedia:role dbpedia:SoccerManager ; dbpedia:birthPlace ?soccer_player_manager_birthplace .
  ?soccer_player_manager ns:actor ?actor_soccer_player ; dbpedia:role dbpedia:SoccerPlayer ; dbpedia:film ?actor_soccer_player_film .
  ?actor_soccer_player rdfs:label ?actor_name .
  ?film a dbpedia:Film ; dbpedia:director Manuel_Huerga ; dbpedia:title ?film_title .
  ?athlete bornDate 'Birthday of Marty Pollio' ; dbpedia:role dbpedia:Athlete .
  ?athlete ns:actor ?actor_soccer_player .
}
",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
59,9,test,"Give me the native of the residence of David Luckman and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_residence
WHERE {
  ?club a dbpedia:SportsClub ;
           dbpedia:sport dbpedia:Soccer ;
           dbpedia:name ""Melbourne Victory FC"" .
  ?player a dbpedia:Person ;
            dbpedia:name ""David Luckman"" ;
            foaf:residence ?player_residence .
  ?manager a dbpedia:Person ;
            dbpedia:role dbpedia:Manager ;
            foaf:knows ?player ;
            dbpedia:residence ?manager_residence .
  ?club foaf:isPrimaryTopicOf ?description .
  ?player rdfs:label ""David Luckman"" .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
263,28,test,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?region ?country 
WHERE { 
  ?child_of_clude_bowes_lyn a dbpedia:Person ; 
    dbpedia:birthPlace ?region . 
  ?parent_of_mary_frances_bowes_lyon a dbpedia:Person ; 
    dbpedia:birthPlace ?country . 
  ?child_of_clude_bowes_lyn rdfs:father ?parent_of_mary_frances_bowes_lyon . 
}",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
557,67,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor Actor_A .
  ?work a dbpedia:CreativeWork ;
          dbpedia:actor Actor_B .
  ?producer dbpedia:produced ?movie .
  ?producer dbpedia:produced ?work
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
668,70,test,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?artist_name ?birthplace ?associated_artist_name
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthPlace ?birthplace .
  ?artist dbpedia:associatedWith ?associated_artist .
  ?associated_artist a dbpedia:Person ;
                    dbpedia:birthPlace ""Central Region, Ghana"" .
  ?artist rdfs:label ?artist_name .
  ?associated_artist rdfs:label ?associated_artist_name
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,19,test,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author_name
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace <en> ;
           dbpedia:parent ?parent_author .
  ?parent_author a dbpedia:Person ;
               dbpedia:birthPlace <en> ;
               foaf:brother ?vera_lynn_sibling .
  ?vera_lynn_sibling a dbpedia:Person ;
                    dbpedia:occupation [ 
                      a union of 
                      dbpedia:Artist , 
                      dbpedia:MusicalArtist
                    ] .
  ?author rdfs:label ?author_name .
}",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
557,71,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v7 <http://dbpedia.org/ontology/knownFor> ?v8 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name ?actor1_name ?actor1_movie ?actor1_work 
  WHERE { 
    ?actor1 a dbpedia:Actor ; 
    dbpedia:roleInFilm ?actor1_movie . 
    ?actor1 rdfs:label ?actor1_name . 
  }

  UNION 
  
  SELECT ?producer_name ?actor2_name ?actor2_movie ?actor2_work 
  WHERE { 
    ?actor2 a dbpedia:Actor ; 
    dbpedia:roleInFilm ?actor2_movie . 
    ?actor2 rdfs:label ?actor2_name . 
  }

  UNION 
  
  SELECT ?producer_name ?kent_allard_name ?kent_allard_fictional_character 
  WHERE { 
    ?producer a dbpedia:FilmProducer ; 
    dbpedia:filmProduced ?actor1_movie . 
    ?actor1 a dbpedia:Actor ; 
    dbpedia:roleInFilm ?actor2_movie . 
    ?actor2 a dbpedia:Actor ; 
    rdfs:label ?kent_allard_name . 
    ?kent_allard_fictional_character a dbpedia:FictionalCharacter . 
  }
",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
756,69,test,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v7 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?country_of_heuss ?hoeneess_birthplace ?hoeneess_managership ?bochum_season ?bochum_team ?bundesliga_promotion 
WHERE { 
  ?heuss a dbpedia:Person ; dbpedia:birthPlace ?country_of_heuss . 
  ?hoeneess a dbpedia:Person ; dbpedia:birthDate '1968-08-26' ; dbpedia:role dbpedia:football_manager ; dbpedia:clubVfLBochum ?hoeneess_managership . 
  ?bochum a dbpedia:SoccerClub ; dbpedia:season '2006-07' ; dbpedia:league DBpedia::FootballLeagueBundesliga ; dbpedia:winningTitle '2006' . 
  ?heuss rdfs:label 'Theodor Heuss' . 
  ?hoeneess rdfs:label 'Dieter Hoeneß' . 
  ?bochum rdfs:label 'VfL Bochum' . 
}",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
723,19,test,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician) and band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?role
WHERE {
  ?band a dbpedia:Band ;
            dbpedia:hasMember ?band_member .
  ?band_member a dbpedia:Musician ;
               rdfs:label ""Nate Newton""@en .
  OPTIONAL { 
    ?band rdfs:label ?role . 
    FILTER (lang(?role) = ""en"" ) 
  }
}
```

This query looks for individuals (`?band_member`) who are members of the band `dbpedia:Band` with the label ""Nate Newton"". It also tries to find a role (`?role`) that the band member might have, such as being involved in production, using the optional clause and filtering by language.",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
585,20,test,"Give me the child of the professional in the profession of Shirley Stoler and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v5 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace dbpedia:New_York_City .
  ?actor rdfs:label ""Shirley Stoler"" .
  ?child a dbpedia:Person ;
            dbpedia:birthPlace dbpedia:New_York_City .
  ?child rdfs:label ?child_name .
  ?child foaf:parent ?actor
}
```",6,8,7,3,2,3,2,20,0,0,10,0,0.0,0
159,71,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?commander_role ?television_show ?societal_event 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:birthPlace ?commanderbirthplace . 
  ?commander rdfs:label ?commander_name . 
  ?commander dbpedia:predicate dbpedia:military_role ; dbpedia:value ""Commander"" . 
  ?television_show a dbpedia:Television_Series ; dbpedia:has_main_character ?commander_name . 
  ?societal_event a dbpedia:Event ; dbpedia:is_about ?commander_name . 
}",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
585,19,test,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in the profession of Shirley Stoler.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ""Shirley Stoler"" .
  ?child a dbpedia:Person ;
            dbpedia:parent ?actor ;
            dbpedia:birthPlace ?child_birthplace .
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
198,67,test,"Give me the war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war ?awardee_name ?awardee_award ?tracy_birthplace ?gillmore_name ?gillmore_medal
WHERE {
  ?war a dbpedia:War ; dbpedia:name ?war_name .
  ?awardee a dbpedia:Person ; dbpedia:awarded ?awardee_award ; dbpedia:recipient ?awardee_name .
  ?tracy a dbpedia:Person ; dbpedia:birthPlace ?tracy_birthplace .
  ?gillmore a dbpedia:Person ; dbpedia:birthPlace ?gillmore_birthplace .
  ?tracy rdfs:label ?tracy_name .
  ?gillmore rdfs:label ?gillmore_name .
  ?awardee awardee:?gillmore
  ?war ?tracy
  ?gillmore medaled ?awardee_award }
",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
706,19,test,"Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace ?actor_name ?actor_birthplace
WHERE {
  ?awardee a dbpedia:Person ; dbpedia:award dbpedia:SangeetNatakAkademiFellowship .
  ?actor a dbpedia:Person ; dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ?actor_name .
  ?awardee rdfs:label ?awardee_name
  
  AND ?actor dbo:role dbpedia:ActorInFilm ; dbpedia:film 'Dil Se' .",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
398,19,test,Give me the figure known as the nickname of Russia national football team and player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?nickname WHERE { 
  ?nation a dbpedia:SportsTeam ; dbpedia:type dbpedia:SoccerTeam ; dbpedia:nationalTeamName ?nickname . 
  ?author a dbpedia:Person ; dbpedia:birthPlace xsd:string ; rdfs:label 'Aleksandr Filimonov' . 
}",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
943,70,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alter_ego_name ?royalty_officer_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ""Yeshaq I""@en;
           dbpedia:offices ?office_holding .
  ?office_holding a dbpedia:OfficeHolder ;
                 rdfs:label ""Royalty""@en .
  ?person rdfs:label ?royalty_officer_name .
  ?person foaf:father ?child_of_yeshaq .
  ?child_of_yeshaq a dbpedia:Person ;
                rdfs:label ""Dawit II""@en;
                dbpedia:birthPlace ""Ethiopia""^^xsd:string .
  FILTER (regex(?office_holding, ""Royalty"") AND regex(?parent, ""Yeshaq I""))
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
119,67,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_leader_name ?psoe_administration
WHERE {
  ?nunez_feijooffice a dbpedia:Office ;
               dbpedia:officeHolder ?nunez_feijoo .
  ?nunez_feijoo a dbpedia:Person ;
               foaf:name ?nunez_feijoo_name ;
               dbpedia:birthPlace ""Spain"" .
  ?psoe a dbpedia:PoliticalParty ;
           rdfs:label ?psoe_label .
  ?party_leader a dbpedia:OfficeHolder ;
               dbpedia:office ?nunez_feijooffice ;
               foaf:name ?party_leader_name .
  ?psoe rdfs:member ?party_leader
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
468,19,test,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon and reference to the real name of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?royalty_status ?parent_name ?real_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  ?parent dbpedia:birthPlace ""Aragon"" .
  ?child dbpedia:isChildOf ?parent .
  ?parent dbpedia:role dbpedia:Monarch .
  ?child dbpedia:role dbpedia:Royalty
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
119,20,test,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?tv_show_name ?war_name ?maria_i_of_portugal_name ?portugal_name ?polish_athlete_name ?lodz_hometown
WHERE {
  ?tv_show a dbpedia:Television_series ;
            dbpedia:hasMainCharacter ?commander .
  ?commander a dbpedia:Person ;
             rdfs:label ?commander_name .

  ?war a dbpedia:Military_conflict ;
         dbpedia:involvedIn ?war_name .

  ?maria_i_of_portugal a dbpedia:Monarch ;
                       rdfs:label ?maria_i_of_portugal_name .

  ?portugal a dbpedia:Country ;
             dbpedia:capital ?portugal_name .

  ?polish_athlete a dbpedia:Athlete ;
                    rdfs:label ?polish_athlete_name ;
                    dbpedia:birthPlace ?lodz_hometown .

  ?tv_show rdfs:subPropertyOf ?commander .
  ?war dbpedia:conflictWith ?tv_show .
  ?maria_i_of_portugal dbpedia:reignedIn ?portugal .
  ?polish_athlete dbpedia:nationality ""Poland"" .
  ?lodz_hometown rdfs:label ""Łódź""
}
```

This query will retrieve the necessary information from DBpedia to answer the question.",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
472,28,test,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/property/leader> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?territory_name ?administration_mayor ?administration_prince
WHERE {
  ?hansen a dbpedia:Person ;
         dbpedia:birthPlace ?hansen_birthplace .
  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .

  ?mayor a dbpedia:OfficeHolder ;
          dbpedia:office dbpedia:MayorOfDuchy_of_Schleswig ;
          dbpedia:termStarts ""Schleswig""^^xsd:string .
  
  ?prince a dbpedia:Person ;
           dbpedia:birthPlace ?prince_birthplace ;
           rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .

  ?hansen dbpedia:deathPlace ?hansen_deathplace .
  ?mayor dbpedia:officeEnds ?hansen_deathplace .
  ?prince a dbpedia:Royalty .

  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .
  ?mayor rdfs:label ?administration_mayor .
  ?prince rdfs:label ?administration_prince

  ?hansen_deathplace a dcterms:Location ;
                    rdfs:label ""Death place of Christian Ditlev Ammentorp Hansen""@en .

  ?administration_mayor rdfs:label ?administration_mayor_name .
  ?administration_prince rdfs:label ?administration_prince_name
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
531,67,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader_name ?leader_office ?party_name ?military_conflict_societal_event
WHERE {
  ?miguel_maura a dbpedia:Person ; dbpedia:office dbpedia:Prime_Minister_of_Spain ; dbpedia:birthPlace Spain ; dbpedia:residence Madrid .
  ?miguel_maura pobox:partyMemberOf ?party .
  ?party a dbpedia:Political_Party ; dbpedia:name ?party_name .
  ?manuel_pinto_da_costa a dbpedia:Person ; dbpedia:office dbpedia:Commander ; dbpedia:role dbpedia:Military_officer ; dbpedia:conflict dbpedia:Portuguese_Civil_War ; dbpedia:birthPlace Portugal .
  ?manuel_pinto_da_costa rdfs:label ?manuel_name .
  ?leader rdfs:label ?leader_name .
  ?party rdfs:label ?party_name .
}
",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
225,19,test,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?person_name ?birthplace WHERE {
  ?person a dbpedia:Person ;
    dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  ?person ns:isPartOf dbpedia:Television_series ;
    dbpedia:creator ?creator_name .
  FILTER (lang(?person_name) = 'ja' ) .
  FILTER (lang(?creator_name) = 'ja') .
  ?creator rdfs:label 'Masashi Kishimoto' }",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
58,20,test,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer_name
WHERE {
  ?poet dbpedia:isA dbpedia:Poet ; dbpedia:name ""Ian Gregson"" .
  ?spouse a foaf:Person ;
           dbpedia:name ""Linda Bruckheimer""@en;
           foaf:spouse ?poet .
  ?movie a dbpedia:Film ;
          dbpedia:producer ?producer_name .
  ?movie rdfs:label ?movie_label .
  FILTER (lang(?movie_label) = ""en"")  # Assuming the movie is in English
}",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
39,68,test,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            rdfs:label ""Robert Lamar Thompson""@en .
  ?shadow a dbo:FictionalCharacter ;
             dc:title ""The Shadow""@en;
             dc:creator ""Walter B. Gibson""@en .
  ?producer a dbpedia:MusicProducer ;
            rdfs:label ""Coke Studio Philippines producer""@en .
  ?artist foaf:knows ?producer .
  ?band a dbo:Band ;
          dbpedia:members ?band_members .
  ?band_name a dbo:Group ;
           rdfs:label ?band_name .
  ?band_name ns:member ?band_members
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
782,67,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name1 ?band_member_name ?nick_curran_band_name2
WHERE {
  ?band_member a dbpedia:Musician ;
               dbpedia:birthDate ""1945-03-30"" ;
               rdfs:label ?band_member_name .
  ?band_member dbpedia:bandMemberOf ?band_name1 .

  ?nick_curran a dbpedia:Musician ;
               rdfs:label ?nick_curran_name .
  ?nick_curran dbpedia:bandMemberOf ?nick_curran_band_name2 .

  ?band_name1 rdfs:label ?band_name1 .
  ?nick_curran_band_name2 rdfs:label ?nick_curran_band_name2
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
311,20,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?band_or_group_name ?writer_name ?writer_band_or_group_name ?band_member_name
WHERE {
  ?song a dbpedia:MusicSingle ;
           dbpedia:performer ?producer .
  ?producer a dbpedia:MusicProducer ;
            dbpedia:associatedBandOrGroup ?band_or_group .
  ?band_or_group a dbpedia:BandOrGroup ;
               dbpedia:hasMember ?band_member .
  ?writer a dbpedia:Person ;
           dbpedia:birthDate ""1960-04-04"" ; # Placeholder for actual birth date
           dbpedia:givenName ""Michael"" ;
           dbpedia:role ""Lead Singer, Songwriter"" ;
           dbpedia:associatedBandOrGroup ?writer_band_or_group .
  ?song rdfs:label ""Lotus"" .
  ?writer_band_or_group a dbpedia:BandOrGroup ;
                    rdfs:label ?band_or_group_name .
  ?band_member a dbpedia:Person ;
               dbpedia:givenName ?band_member_name ;
               dbpedia:role ""Band Member"" .
}
```",6,13,7,3,2,3,2,20,0,0,1,0,0.0,0
386,28,test,Give me the war of the awardee of Golden Sword for Bravery and war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?bravery_awardee_name ?petrauskienete_name
WHERE {
  ?bravery_awardee a dbpedia:Person ;
               dbpedia:award dbpedia:Golden_Sword_for_Bravery .
  ?war a dbpedia:Conflict ;
         dbpedia:conflictName ?war_name .
  ?bravery_awardee rdfs:label ?bravery_awardee_name .
  ?petrauskienete a dbpedia:Person ;
                 dbpedia:birthPlace ""Vilnius, Lithuania"" .
  ?petrauskienete rdfs:label ?petrauskienete_name
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
80,68,test,"Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v5 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:Actor .
  ?actor dbpedia:appearedInMovieWith ?movie .
  ?movie dbpedia:director ?director_name .
  ?director_name rdfs:label ?director_name_label
  FILTER (lang(?director_name_label) = 'en')
}",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
871,71,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?awardee_name ?awardee_parent 
WHERE { 
  ?awardee a dbpedia:Person ; 
  dbpedia:award ?award . 
  ?award rdfs:label ?award_label . 
  ?awardee rdfs:parent ?awardee_parent . 
  ?awardee_parent a dbpedia:OfficeHolder ; 
  dbpedia:office ?office . 
  ?office rdfs:label ?office_label . 
  ?officeParent a dbpedia:Politician . 
  ?officeParent rdfs:parent ?awardee_parent 
} 

",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
531,69,test,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v7 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?politician_name ?tenant WHERE {
  ?politician a dbpedia:OfficeHolder ; dbpedia:role dbpedia:Politician ; dbpedia:office dbpedia:Election .
  ?politician rdfs:label ?politician_name .
  ?election dbpedia:year 2003 .
  ?commander a dbpedia:OfficeHolder ; dbpedia:role dbpedia:Politician ; dbpedia:office dbpedia:LeadershipPositionInConflict .
  ?commander rdfs:label ?commander_name .
  ?politician dbpedia:partyMemberOf dbpedia:PoliticalParty ; dbpedia:name ?miguel_maura .
  ?tenant a dbpedia:Residence ; rdfs:label ?tenant_name .
}",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
353,71,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild_name ?grandchild_office ?royalty_status 
WHERE {
  ?grandchild a dbpedia:Person ; dbpedia:parent ?parent_of_child .
  ?parent_of_child a dbpedia:Person ; dbpedia:spouse ?spouse_of_constance .
  ?spouse_of_constance a dbpedia:Person ; dbpedia:birthPlace ?burgundy_birthplace .
  ?grandchild rdfs:label ?grandchild_name .
  ?grandchild dbpedia:royalty ?royalty_status .
  ?parent_of_child rdfs:label ?parent_name .
  ?parent_of_child dbpedia:officeHolder ?parent_office_holder .
  ?parent_of_child a dbpedia:ChildOf ?constance_child .
  ?constance_child a dbpedia:Person ; dbpedia:parent ?constance .
  ?constance a dbpedia:Person ; dbpedia:birthPlace ?burgundy_birthplace .
}
",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
119,68,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"The SPARQL query is constructed to extract the necessary details from DBpedia's ontology, including finding the country of residence for Anxo Quintana, identifying him as a citizen of Spain, determining the president of Spain, and linking the president to the Spanish Socialist Workers' Party.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
668,63,val,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name ?associated_person_name
WHERE {
  ?associated_person a dbpedia:Person ;
                      dbpedia:name ""Celeste Celestine"" .
  ?associated_person a dbpedia:Person ;
                      dbpedia:name ""Joseph Anthony Barresi"" .
  ?associated_person dbpedia:hasMusicArtist ?musical_artist .
  ?musical_artist rdfs:label ?musical_artist_name
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
628,63,val,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
               dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```

This query looks for individuals matching the descriptions provided:
- A governor born in a region that is both an American state and a settlement (e.g., Mississippi).
- An author named Cece Bell.
- A person known as Vince Gilligan, with attributes of being a television producer and writer.",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
103,65,val,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . },,7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
585,18,val,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state) and child of the professional in Actress.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace ?parent_category
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:birthPlace ?awardee_birthplace .
  ?awardee rdfs:label ?awardee_name .
  ?parent a dbo:Actor ;
           dbpedia:child ?awardee .
  ?parent rdfs:label ?parent_category
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
412,25,val,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris and war of the leader of National Party of Greece.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/place> ?v4 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?death_place WHERE {
  ?person1 a dbpedia:Person ; dbpedia:deathPlace ?death_place .
  ?person2 a dbpedia:Person ; dbpedia:deathPlace ?death_place .
  ?person1 rdfs:label 'Antonios Varthalitis' .
  ?person2 rdfs:label 'Konstantinos Ventiris' .
  ?leader rdfs:label 'Ioannis Metaxas' .
  ?person1 dbpedia:conflict 'Greco-Italian War' .
  ?person2 dbpedia:conflict 'Greco-Italian War' .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
198,66,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v6 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?person_name ?person_death_date ?war ?medal_awarded 
WHERE { 
?person a dbpedia:Person ; dbpedia:deathDate ?person_death_date . 
?person dbpedia:conflict ?war . 
?person dbpedia:awardedMedal [ dbpedia:awardName `Medal of Honor` ] . 
?person dbpedia:awardedMedal [ dbpedia:awardName `Gillmore Medal` ] . 
?war rdfs:label ?war_name . 
?medal_awarded rdfs:label ?medal_name
}
",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,64,val,Give me the spouse of Roger Pryor (actor) and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of the parent of Tisha Sterling.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?spouse_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthName ?actor_birthname .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ;
            foaf:name ?spouse_name .
  ?actor dbpedia:role dbpedia:Actor .
  ?actor dbpedia:birthPlace ?location .
  ?location geo:coordinates ""20.116800000000001347 -78.9384""^^<geopoint>
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
78,25,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.","SELECT ?result WHERE { <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the musician associated with Stuart McBeath Tosh
SELECT ?musician_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthName ""Stuart McBeath Tosh"" .
  ?person rdfs:label ?musician_name .
}

# Query for the writers of ""Wizards of Waverly Place"" soundtrack and their associated musical artists
SELECT ?writer_name ?artist_name WHERE {
  ?work a dbpedia:Soundtrack ;
           dbpedia:albumTitle ""Wizards of Waverly Place"" .
  ?work rdfs:creator ?writer_name .
  ?writer_name a dbpedia:Person ;
               dbpedia:birthPlace ?writer_birthplace .
  ?writer_name rdfs:label ?writer_name .
  OPTIONAL { ?writer_name dbpedia:hasRole [ a dbpedia:Musician ] }
  UNION
  {
    SELECT ?artist_name WHERE {
      ?work rdfs:isDefinedBy ?track .
      ?track a dbpedia:MusicTrack ;
             dbpedia:performer ?artist_name .
      ?artist_name a dbpedia:Person ;
                    dbpedia:birthPlace ?artist_birthplace .
      ?artist_name rdfs:label ?artist_name .
    }
  }
}

# Combine results to ensure we get unique artists for both queries
UNION {
  SELECT ?musician_name
  UNION
  SELECT ?artist_name
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
37,9,val,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name ?artist_birthplace ?work_name ?work_birthplace 
WHERE { 
  ?artist a dbpedia:Artist ; 
    dbpedia:genre dbpedia:Music ; 
    dbpedia:birthPlace ?artist_birthplace . 
  ?work a dbpedia:Album ; 
    rdfs:label ?work_name . 
  ?artist dbo:created ?work . 
}",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
103,64,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:name ""Richard Grant Esterhuysen"" ;
           dbpedia:roleInWork dbpedia:Actor ;
           dbpedia:roleInWork dbpedia:The_Shadow_Video_Game .
}
```",7,9,8,3,3,3,3,71,0,0,9,0,0.0,0
472,25,val,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v4 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?territory_name WHERE {
  ?hansen a dbpedia:Person ; dbpedia:birthPlace ?hansen_birthplace .
  ?olaf_I a dbpedia:Person ; dbpedia:administration ?olaf_I_administration .
  ?prince christian a dbpedia:Person ; dbpedia:birthPlace ?prince_birthplace .
  ?hansen rdfs:label ?hansen_name .
  ?prince_christian rdfs:label ?prince_name .
  ?hansen_birthplace ns:locatedIn ?territory .
  ?olaf_I_administration ns:locatedIn ?territory .
  ?prince_birthplace ns:locatedIn ?territory
}
",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
557,62,val,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?producer_works
WHERE {
  ?film a dbpedia:Film ;
         dbpedia:producer ?producer .
  ?actor a dbpedia:Person ;
         dbpedia:role ?role .
  ?role rdfs:label ""Johnny Doughboy"" .
  ?actor2 a dbpedia:Person ;
           dbpedia:role ?role2 .
  ?role2 rdfs:label ""Kent Allard"" .
  ?producer rdf:type dbpedia:FilmProducer ;
            dbpedia:film ?film .
  ?producer rdfs:label ?producer_name .
  ?film rdfs:label ""A Star Is Born (1937 film)"" .
}
```

This query aims to find the producer of ""A Star Is Born"" and then link that producer to other works they have produced. It also identifies actors associated with the roles of Johnny Doughboy and Kent Allard, though it primarily focuses on the producer's filmography.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,66,val,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?office ?party_name ?war_commander_name ?war_commander_office 
WHERE {
  ?politician a dbpedia:Politician ;
  dbpedia:officeHolder ?office .
  ?party a dbpedia:PoliticalParty ;
  dbpedia:leader ?politician .
  ?war a dbpedia:War ;
  dbpedia:conflictCentralAfricanRepublicCivilWar ?war .
  ?war_commander a dbpedia:OfficeHolder ;
  dbpedia:office ?war_commander_office .
  ?war_commander rdfs:label ?war_commander_name
}
",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
756,64,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthplace ?player_club_name ?player_season
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthDate ""1968-08-26""^^date;
            dbpedia:nativity ""West Germany"";
            dbpedia:role dbpedia:SoccerManager .
  ?team a dbpedia:SportTeam ;
         dbpedia:season ""2006-07""^^date;
         dbpedia:league dbpedia:GermanFootballLeagueSystem;
         dbpedia:manager ?manager .
  ?player a dbpedia:SportPerson ;
         dbpedia:role dbpedia:Player;
         dbpedia:club ?player_club_name ;
         dbpedia:season ""Successor Season of 2006-07""^^date.
  ?manager rdfs:label ?manager_name .
  ?player rdfs:label ?player_name .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
557,66,val,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?vince_gilligan_name ?vince_gilligan_works 
WHERE { 
  ?vince_gilligan a dbpedia:Person ; 
  dbpedia:birthPlace ?vince_gilligan_birthplace ; 
  dbpedia:occupation dbpedia:TelevisionProducer 
  AND ?vince_gilligan rdfs:label ?vince_gilligan_name . 
  ?vince_gilligan_works a dbpedia:Film_Soundtrack ; 
  dbpedia:artist ?actor . 
  ?actor rdfs:label 'Louis Armstrong' . 
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
361,26,val,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in  and professional in the profession of Frédéric Bouraly.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name 
WHERE { 
  ?film a dbpedia:Film ; 
  dbpedia:hasMusicScore [ dbpedia:title 'Lasso the Moon' ] ; 
  ?actor a dbpedia:Actor ; 
  ?actor dbpedia:actedIn ?film . 
}",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
203,63,val,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?war_name ?bayne_force ?calder_force ?societal_event_name
WHERE {
  ?bayne a dbpedia:Person ;
           dbpedia:birthPlace ""United Kingdom"" ;
           rdfs:label ""William Bayne""@en .
  ?calder a dbpedia:Person ;
            dbpedia:birthPlace ""United Kingdom"" ;
            rdfs:label ""Robert Calder""@en .
  ?bayne dbpedia:navyServiceMemberOf dbpedia:Royal_Navy .
  ?calder dbpedia:navyServiceMemberOf dbpedia:Royal_Navy .
  ?war a dbpedia:Military_conflict ;
         dbpedia:startYear ""1916"" ; # Approximate year of the Battle of Jutland
         dbpedia:endYear ""1916"" .
  ?bayne rdf:type dbpedia:Naval_officer .
  ?calder rdf:type dbpedia:Naval_officer .
  ?war rdfs:label ?war_name .
  ?commander1 a dbpedia:Person ;
             dbpedia:role dbpedia:Commander ;
             dbpedia:navyServiceMemberOf dbpedia:Royal_Navy ;
             rdfs:label ?commander_name .
  ?commander2 a dbpedia:Person ;
            dbpedia:role dbpedia:Commander ;
            dbpedia:navyServiceMemberOf dbpedia:Royal_Navy ;
            rdfs:label ?commander_name .
  ?war rdf:type dbpedia:Event .
  ?societal_event a dbpedia:Societal_event .
  ?societal_event rdfs:label ?societal_event_name
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
297,9,val,"Give me the entity in the birth place, that is a country, of Little Hat Jones and institution in the administration of Brian Kemp.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?institution_name
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:office ?institution_name .
  ?governor dba:birthPlace ?governor_birthplace .
  ?institution_name rdfs:label ?institution_name
}
```",4,5,5,2,2,2,2,9,0,0,346,0,0.0,0
78,26,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name WHERE {
  ?david_paton a dbpedia:Musician ;
               dbpedia:bandMemberOf ?band .
  ?billy_lyall a dbpedia:Musician ;
                dbpedia:bandMemberOf ?band .
  ?band rdfs:label ?band_name
}
```

This query will return the label of the band to which both David Paton and Billy Lyall belong.",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
119,18,val,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?napoleon_name ?napoleon_war ?portugal_residence 
WHERE { 
  ?napoleon a dbpedia:Person ; 
  dbpedia:birthPlace ?napoleon_birthplace ; 
  dbpedia:role dbpedia:French_Force_in_the_Peninsular_War . 
  ?war a dbpedia:Military_conflict ; 
  dbpedia:name ?war_name ; 
  dbpedia:participants [ ?part a dbpedia:Country ] ; 
  ?part rdfs:label ?portugal_residence . 
  ?napoleon rdf:type dbpedia:Historical_person ; 
  dbpedia:role ?napoleon_name . 
  ?war dbpedia:startedAtYear 1808 . 
}",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
905,65,val,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?grandchild a dbpedia:Person ;
               dbpedia:parent ?spouse_name .
  ?spouse_name a dbpedia:Person ;
                dbpedia:partner ?spouse_of_belae_IV .
  ?spouse_of_belae_IV a dbpedia:Person ;
                       dbpedia:father ?father_name .
  ?father_name a dbpedia:Person ;
                  rdfs:label ""Philip I, Prince of Taranto""@en .
  ?grandchild rdfs:label ?royalty_name
}
```

This query starts by selecting the `?royalty_name` and then traces through the relationships:

- It finds the grandchild (`?grandchild`) of Béla IV (`?spouse_of_belae_IV`), ensuring that the grandchild's parent is the spouse of Béla IV (`?spouse_name`).
- It ensures that the spouse of Béla IV (`?spouse_name`) is the partner of the father of Philip I (`?father_name`, labeled as ""Philip I, Prince of Taranto"").
- Finally, it selects the label (`?royalty_name`) of the grandchild.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,66,val,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_predecessor_name ?royalty_predecessor_birthplace
WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?min_hla_htut ; dbpedia:sibling ?saw_min_phyu .
  ?min_hla_htut a dbpedia:Person ; dbpedia:spouse ?myat_hpone_pyo .
  ?myat_hpone_pyo a dbpedia:Person ; dbpedia:parent ?min_hla_htut .
  ?child rdfs:label ?royalty_predecessor_name .
  ?min_hla_htut rdfs:label ?min_hla_htut_name .
  ?myat_hpone_pyo rdfs:label ?myat_hpone_pyo_name
}
",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
288,9,val,"Give me the theme of the show with Anumta Qureshi and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v1 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . ?v3 <http://dbpedia.org/ontology/openingTheme> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?show_name ?theme
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace Lahore .
  ?actor rdfs:label ?actor_name .
  ?show rdfs:label ?show_name .
  ?show dbpedia:hasMainCharacter ?actor .
  FILTER (?actor_name = ""Anumta Qureshi"") .
  OPTIONAL {
    ?show dbpedia:theme ?theme .
  }
}
```

This SPARQL query looks for a show featuring Anumta Qureshi, born in Lahore, and tries to infer the theme of the show based on its main character. It uses optional reasoning to try to extract the theme if available.",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
68,25,val,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?father_name ?mother_name 
WHERE {
  ?dorothea a dbpedia:Person ; dbpedia:parent ?parent .
  ?parent a dbpedia:Person ; dbpedia:child ?dorothea .
  ?parent rdfs:label ?parent_name .
  ?dorothea rdfs:label ?dorothea_name .
  ?commander a dbpedia:Person ; dbpedia:role ""commander"" ; dbpedia:child ?dorothea .
  ?catherine a dbpedia:Person ; dbpedia:parent ?parent ; dbpedia:role ""Queen of Portugal"" .
  ?parent rdfs:label ?mother_name .
  ?father a dbpedia:Person ; dbpedia:parent ?parent ; dbpedia:role ""King"" .
  ?father rdfs:label ?father_name .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
737,66,val,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","The SPARQL query structure includes steps to select the children of both Dukes, find the common child, and then check if this child is a royalty.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
158,26,val,"Give me the native of Grand Duchy of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedent_name ?finland_birthplace ?russian_administration_birthplace
WHERE {
  ?decedent a dbpedia:Person ;
            dbpedia:deathPlace ?finland_birthplace .
  ?russian_administration a dbpedia:Country ;
                           dbpedia:name ""Russian Empire"" .
  ?decedent dbpedia:birthPlace ?finland_birthplace .
  ?russian_administration rdfs:label ""Russian Empire""
}
```

### Completed",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
468,18,val,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?father .
  ?father a dbpedia:Monarch ;
            rdfs:label ""Peter IV of Aragon"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:royaltyStatus ""Yes"" .
  OPTIONAL { ?child dbpedia:birthDate ?child_birthdate }
  FILTER (lang(?child_name) = ""es"" )  # Assuming the names are in Spanish
}
```

This query looks for children (`?child`) of Peter IV (`?father`), checks if they have a royalty status (`dbpedia:royaltyStatus ""Yes""`), and optionally includes their birth date. The filter `lang(?child_name) = ""es""` ensures we're looking for names in Spanish.",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
353,65,val,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Alfonso VI of León and Castile"" .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,63,val,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?persona_name ?artist_name ?producer_name ?coke_studio_project
WHERE {
  ?persona a dbpedia:Person ;
            dbpedia:alterEgo ""The Shadow"" .
  ?persona rdfs:label ?persona_name .
  ?artist a dbpedia:Artist ;
            dbpedia:name ?artist_name .
  ?artist rdfs:label ?artist_name .
  ?producer a dbpedia:MusicProducer ;
            dbpedia:worksFor dbpedia:CokeStudio_Philippines .
  ?producer rdfs:label ?producer_name .
  ?persona foaf:knows ?artist .
  ?artist foaf:worksFor ?producer
}
```

This query looks for a person associated with the alter ego ""The Shadow"", who is also an artist and has connections to a music producer working on Coke Studio Philippines.",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
782,66,val,"Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

// Part 1: Eric Clapton's band member(s)
SELECT ?band_member_name WHERE {
  ?clapton a dbpedia:Musician ;
             dbpedia:birthDate ""1945-03-30"" ;
             dbpedia:genre ""Blues rock, Rock and roll, Funk"" .
  ?bandMember a dbpedia:BandMember ;
            dbpedia:associatedMusicalArtist ?clapton .
}

// Part 2: The Fabulous Thunderbirds and their lead vocalist
SELECT ?fabulous_thunderbirds_name ?lead_vocalist_name WHERE {
  ?fabulousThunderbirds a dbpedia:MusicGroup ;
                    rdfs:label ""The Fabulous Thunderbirds"" ;
                    dbpedia:genre ""Rock"" .
  ?leadVocalist a dbpedia:Musician ;
             dbpedia:birthDate ""1954-04-03"" ; // Example birth date for the lead vocalist
             dbpedia:role ""Lead vocalist"" .
  ?fabulousThunderbirds dbpedia:hasMember ?leadVocalist .
}

// Part 3: Musical artist associated with Nick Curran
SELECT ?artist_name WHERE {
  ?curran a dbpedia:FictionalCharacter ;
           rdfs:label ""Nick Curran"" ;
           dbpedia:role ""Police officer, Musician"" .
  ?artist a dbpedia:Musician ;
           rdfs:label ?artist_name ;
           dbpedia:birthDate ""1970-01-01"" ; // Example birth date for the artist
           dbpedia:genre ""Rock"" .
  ?curran dbpedia:associatedWith ?artist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
119,63,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_of_anxo_quintana ?alvaro_quiros_country
WHERE {
  ?anxo_quintana a dbpedia:Politician ;
                 dbpedia:name ""Anxo Quintana"" ;
                 dbpedia:birthPlace ""Spain"" .
  ?anxo_quintana rdfs:label ?office_of_anxo_quintana .
  ?party a dbpedia:PoliticalParty ;
           dbpedia:name ""Spanish Socialist Workers' Party"" .
  ?anxo_quintana rdf:type ?party .
  ?party dbpedia:leader ?spanish_administration .
  ?spanish_administration a dbpedia:Event .
  ?alvaro_quiros rdfs:label ?alvaro_quiros_name .
  ?alvaro_quiros dbpedia:birthPlace ?alvaro_quiros_country .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
38,18,val,"Give me the author of the work, that is a written work and a work, of Joe Biden and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author_name ?office_holder_name
WHERE {
  ?book a dbpedia:WrittenWork ;
         dbpedia:author ?author_name .
  ?office_holder a dbpedia:OfficeHolder ;
                    dbpedia:politicalAffiliation ""North Carolina"" ;
                    dbpedia:rank ?office_rank .
  ?office_holder rdfs:label ?office_holder_name .
  ?author foaf:name ?author_name .
  ?book rdfs:isDefinedBy ?office_holder
}
```",5,13,6,3,2,3,2,20,0,0,1,0,0.0,0
412,26,val,Give me the entity in Athens and war of the leader of National Party of Greece and war of the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?greek_soldier_name ?greek_soldier_birthplace ?war_awardee_name ?war_awardee_honor
WHERE {
  ?greek_soldier a dbpedia:Person ;
                dbpedia:birthPlace ?greek_soldier_birthplace .
  ?greek_soldier foaf:name ?greek_soldier_name .
  ?war_awardee a dbpedia:Person ;
               dbpedia:awarded ?war_awardee_honor .
  ?war_awardee foaf:name ?war_awardee_name .
  ?greek_soldier rdfs:label ?greek_soldier_name .
  ?war_awardee rdfs:label ?war_awardee_name .
  ?greek_soldier dbpedia:conflict dbpedia:Greco_Turkish_War_1919-1922 .
  ?war_awardee dbpedia:awarded ?war_awardee_honor
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,65,val,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?mother_name ?mother_title
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?min_hla_htut .
  ?min_hla_htut a dbpedia:Person ;
               dbpedia:spouse ?mother .
  ?mother a dbpedia:Person ;
          dbpedia:title ?mother_title .
}
```",7,9,8,3,3,3,3,71,0,1541,1,0.0,0.0,0
361,25,val,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
          dbpedia:role dbpedia:Actor .
  ?actor foaf:name ?actor_name .
  FILTER (STRSTARTS (?actor_name, ""Henry Fonda"") || STRSTARTS (?actor_name, ""Alec Baldwin""))
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
159,66,val,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?war_role ?television_shows ?societal_event ?military_force ?office ?war WHERE {
  ?person a dbpedia:Person ;
    dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  ?war a dbpedia:Event ;
    dbpedia:participatedIn ?person ;
    dbpedia:name ?war_name .
  ?television_shows a dbpedia:Television_Series ;
    dbpedia:creator ?person_name .
  ?societal_event a dbpedia:Societal_Event ;
    dbpedia:participatedIn ?person ;
    dbpedia:name ?societal_event_name .
  ?military_force a dbpedia:Military_Force ;
    dbpedia:participatedIn ?war ;
    dbpedia:name ?military_force_name .
  ?office a dbpedia:Office ;
    dbpedia:holder ?person_name .
  ?war rdfs:label 'Russo-Polish War (1654–1667)'@en .
}
",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
119,62,val,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?quintana_name ?quintana_birthplace ?quintana_office 
WHERE {
  ?quintana a dbpedia:Person ;
            dbpedia:name ?quintana_name ;
            dbpedia:birthPlace ?quintana_birthplace .
  
  ?quintana rdfs:label ""Anxo Quintana"" .
  
  dbpedia:Santiago_de_Compostela a dbpedia:City ;
                           dbpedia:country Spain .

  ?residence a dbpedia:Residence ;
             dbpedia:locatedIn dbpedia:Santiago_de_Compostela .
  
  ?citizen a dbpedia:Person ;
            dbpedia:nationality Spain .

  ?office_event a dbpedia:Event ;
                 dbpedia:leader ?quintana ;
                 dbpedia:office ?quintana_office .
  
  ?quintana rdfs:label ""Anxo Quintana"" .
  
  ?residence rdfs:label ?residence_name .
  ?office_event rdfs:label ?office_event_name
}
```

This query will retrieve the information needed to answer the question by connecting Anxo Quintana with his residence in Santiago de Compostela and linking him to an administrative event related to his office.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
89,62,val,"Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?child_name
WHERE {
  ?parent dbpedia:parentOf ?child .
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent ;
           rdfs:label ""Minye Kyawswa""@en .
  ?parent a dbpedia:Person ;
           dbpedia:hasChild ?child ;
           rdfs:label ""Saw Shwe Khet""@en .
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent ;
           rdfs:label ?child_name
}
```

### Completed",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,64,val,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name ?governor_name ?vince_gilligan_name ?disease ?event
WHERE {
  ?book a dbpedia:Book ; dbpedia:author ?author_name .
  ?author a dbpedia:Person ; dbpedia:name ?author_name .
  ?book dbpedia:writtenTextOf ?work .
  ?work a dbpedia:WrittenWork ; dbpedia:title 'Back to Work' .
  ?hillary_clinton a dbpedia:Person ; dbpedia:name 'Hillary Clinton' .
  ?hillary_clinton rdfs:spouse ?bill_clinton .
  ?bill_clinton a dbpedia:Person ; dbpedia:name 'Bill Clinton' .
  ?hillary_clinton dbpedia:authorOf ?book .
  ?book dbpedia:mainSubject ?subject .
  ?subject a dbpedia:OfficeHolder ; dbpedia:office 'President of the United States' .
  OPTIONAL {
    ?commander a dbpedia:Person ; dbpedia:name ?governor_name ; dbpedia:birthPlace 'United States' .
    ?uss_arcadia a dbpedia:Ship ; dbpedia:id 'ID-1605' ; dbpedia:commandedBy ?commander .
  }

  OPTIONAL {
    ?disease a dbpedia:Disease ; rdfs:label 'COVID-19' .
    ?event a dbpedia:SocietalEvent ; rdfs:label 'Civil Rights Movement' .
  }
}
",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
353,64,val,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_lineage
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:spouse [ dbpedia:hasParent ?grandparent ] ;
            dbpedia:child [ dbpedia:hasParent ?greatgrandparent ] .
  ?grandparent a dbpedia:Person ;
             dbpedia:parent ?parent_of_roger_ii .
  ?parent_of_roger_ii a dbpedia:Person ;
                    dbpedia:spouse Constance_of_Burgundy ;
                    dbpedia:child [ dbpedia:hasParent Roger_II_of_Sicily ] .
  ?greatgrandparent a dbpedia:Person ;
                  dbpedia:parent ?parent_of_roger_ii .
  ?greatgrandparent dbpedia:child [ dbpedia:hasParent Roger_II_of_Sicily ]
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
419,9,val,"Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX awardee: <http://purl.org/awardee/>

SELECT ?alma_mater_name ?birthplace
WHERE {
  ?laureate a awardee:AustralianLaureateFellowship ;
            dbpedia:awardRecipientRole awardee:Fellow;
            dbpedia:birthPlace ?birthplace .
  ?alma_mater a dbpedia:University ;
             rdfs:label ?alma_mater_name .
}
```",4,6,5,2,2,2,2,9,0,0,2,0,0.0,0
492,25,val,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?death_place
WHERE {
  ?actor a dbpedia:Person ;
dbpedia:deathPlace ?death_place .
  ?actor rdfs:label ?actor_name .
}
",5,5,6,2,3,2,3,28,1,345090,0,2.8977863809835668e-06,1.0,5.79555596768398e-06
816,62,val,"Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },,7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,66,val,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?politician_name ?politician_birthplace ?spouse_name ?spouse_birthplace 
WHERE { 
  ?politician a dbpedia:Politician ; dbpedia:alumniOf Eton College . 
  ?politician dbpedia:hasSpouse ?spouse . 
  ?spouse a dbpedia:Person . 
  ?child a dbpedia:Person; dbpedia:parent ?politician; dbpedia:parent ?spouse . 
  ?child dbpedia:hasAwards [ dbpedia:Commander of the Royal Victorian Order ] . 
  ?earl_of_derby a dbpedia:Person; dbpedia:birthPlace ?earl_birthplace . 
  ?politician rdfs:label ?politician_name . 
  ?spouse rdfs:label ?spouse_name . 
  ?earl_of_derby rdfs:label ?earl_name
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
941,18,val,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_of_duchess_spouse ?child_of_ferdinand_child_name ?child_of_ferdinand_parent_relationship
WHERE {
  ?duchess a dbpedia:Person ;
            dbpedia:birthPlace ""Brunswick-Wolfenbüttel, Germany"" ;
            dbpedia:role dbpedia:Monarch;
            dbpedia:spouse ?spouse_of_duchess_spouse .
  ?duke a dbpedia:Person ;
         dbpedia:birthPlace ""Brunswick-Lüneburg, Germany"" ;
         dbpedia:parent ?parent_of_ferdinand .
  ?parent_of_ferdinand a dbpedia:Person ;
                    dbpedia:role dbpedia:Duke;
                    dbpedia:child ?child_of_ferdinand .
  ?child_of_ferdinand a dbpedia:Person ;
                    dbpedia:spouse ?spouse_of_duchess_spouse .
  OPTIONAL { ?child_of_ferdinand rdfs:label ?child_of_ferdinand_child_name }
  FILTER (lang(?child_of_ferdinand_child_name) = ""en"" )
}
```

This query does the following:
- It identifies Duchess Luise and her spouse.
- It finds Ferdinand Albert II, Duke of Brunswick-Lüneburg and his parent (likely his father).
- It traces the lineage to find children of Ferdinand II who are spouses themselves.
- It filters for English labels to ensure we get names in a recognizable form.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,64,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_parent_name ?siege_of_mukha_participation ?grandparent_name ?grandparent_role
WHERE {
  ?royalty a dbpedia:Royalty ;
  dbpedia:hasParent ?royalty_parent .
  ?royalty dbpedia:participatedInEvent dbpedia:Siege_of_Mukha .
  ?grandparent a dbpedia:Person ;
  dbpedia:isParentOf ?royalty ;
  dbpedia:isRoyalty true ;
  dbpedia:hasParent ?grandparent_parent .
  ?grandparent a dbpedia:Royalty .
  ?grandparent_parent rdfs:label ?grandparent_name .
}
",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
816,65,val,"Give me the parent of the child of Allan Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v6 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?parent_name ?child_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?parent rdfs:label ""Allan Arbus""@en .
  OPTIONAL { ?child rdfs:label ""Ron Rifkin""@en }
  OPTIONAL { ?child rdfs:label ""Eugène Cattin""@en }
  OPTIONAL { ?child rdfs:label ""Herschel Bernardi""@en }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,65,val,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?paul_revere a dbpedia:Person ;
               dbpedia:birthPlace ""United States"" ;
               dbpedia:deathPlace ""Chappaqua, New York"" .
  ?paul_revere rdfs:label ""Paul Revere"" .

  ?spouse a dbpedia:Person ;
           dbpedia:officeHolder true ;
           dbpedia:role ""Spouse of Paul Revere"" .

  ?spouse rdfs:label ?spouse_name
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
557,65,val,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?janet_movie_title ?jack_doughboy_work
WHERE {
  ?janet a dbpedia:FilmActor ;
            dbpedia:act_in_film ?janet_movie .
  ?janet_movie rdfs:produced_by ?producer .
  ?jack a dbpedia:Person ;
           dbpedia:birthName ""Jack Dougherty"" ;
           dbpedia:roleIn_Film ?jack_doughboy_work .
  ?producer rdfs:label ?producer_name .
  ?jack_doughboy_work a dbpedia:Film .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
492,26,val,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_deathplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:deathPlace ?actor_deathplace .
  ?actor rdfs:label ?actor_name
}
```",5,5,6,2,3,2,3,28,1,345090,0,2.8977863809835668e-06,1.0,5.79555596768398e-06
905,64,val,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:parent ?charles_martel .
  ?charles_martel a dbpedia:Person ;
                 dbpedia:child ?royalty ;
                 dbpedia:spouse ?philip_despot_of_romania ;
                 dbpedia:birthPlace ""Romania"" .
  ?philip_despot_of_romania a dbpedia:Person ;
                    dbpedia:spouse ?stephen_v_spouse ;
                    dbpedia:birthPlace ""Hungary"" .
  ?stephen_v_spouse a dbpedia:Person ;
                  dbpedia:child ?royalty .
}
```

This query looks for a person (`?royalty_name`) who is a child of Charles Martel of Anjou (`?charles_martel`), and also has a parent (`?royalty`) who is the spouse of Philip, Despot of Romania (`?philip_despot_of_romania`), and is born in Hungary (`?stephen_v_spouse`).",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,66,val,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name ?disease_event_societal_event
WHERE {
  ?book dbpedia:isBasedOnWork [
    a dbpedia:Book ;
    rdfs:label ""An Invitation to the White House"" .
  ] .
  ?author a dbpedia:Person ;
    dbpedia:birthDate ?author_birthdate .
  ?book dbpedia:author ?author .
  ?author rdfs:label ?author_name .
  ?event a dbpedia:Event ;
    dbpedia:type ""disease"" .
  ?societal_event a dbpedia:SocietalEvent ;
    dbpedia:type ""societal event"" .
  ?author dbpedia:isConnectedTo ?event .
  ?author dbpedia:hasAffiliation [ 
    a dbpedia:PoliticalPartyAffiliation ;
    rdfs:label ""United States Democratic Party"" .
  ] .
  ?author dbpedia:officeHolder [
    a dbpedia:OfficeHolder ;
    rdfs:label ""First Lady of the United States"" .
  ] .
  ?event dbpedia:startYear 1918 .
  ?societal_event dbpedia:startYear 1918
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
472,26,val,"Give me the administration of Christian IX of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?administration_name ?danielsgovernorate ?hansens_mayoral_district 
WHERE { 
  ?governor a dbpedia:Politician ; dbpedia:office ?administration_name . 
  ?author a dbpedia:Person ; dbpedia:birthPlace ?author_birthplace . 
  ?vince_gilligan a dbpedia:Person ; dbpedia:birthPlace ?vince_gilligan_birthplace . 
  ?governor rdfs:label ?governor_name . 
  ?author rdfs:label ?author_name . 
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}",5,6,6,2,3,2,3,28,0,1,1,0.0,0.0,0
905,62,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_relationship 
WHERE { 
  ?parent a dbpedia:Person ; dbpedia:birthPlace ?parent_birthplace . 
  ?child a dbpedia:Person ; dbpedia:parent ?parent ; dbpedia:birthPlace ?child_birthplace . 
  ?grandchild a dbpedia:Person ; dbpedia:parent ?child ; dbpedia:birthPlace ?grandchild_birthplace . 
  ?royalty_relationship a dbpedia:RoyaltyRelationship; dbpedia:subject ?parent; dbpedia:relation 'father of' . 
  ?royalty_relationship rdfs:label ?royalty_name . 
  ?grandchild rdfs:label ?grandchild_name . 
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
557,63,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?vince_gilligan_name
WHERE {
  ?vince_gilligan a dbpedia:Person ;
                 rdfs:label ?vince_gilligan_name ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?vince_gilligan rdf:type dbpedia:FilmProducer .
  ?janet_gaynor a dbpedia:Person ;
              rdfs:label ""Janet Gaynor"" ;
              dbpedia:awards dbpedia:Award_Academy_Oscar_for_Best_Actress_1935 .
  ?cora_sue_collins a dbpedia:Person ;
               rdfs:label ""Cora Sue Collins"" ;
               dbpedia:roles dbpedia:Actor_Role .
  ?vince_gilligan dbo:produced_work ?collins_work .
  ?janet_gaynor dbo:acted_in ?gaynor_work
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
769,18,val,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?team_name ?athlete_name ?birthdate
WHERE {
  ?manager a dbpedia:SportsManager ; dbpedia:role dbpedia:SoccerManager ; dbpedia:manageTeam ?team_name .
  ?athlete a dbpedia:Athlete ; dbpedia:role dbpedia:SoccerPlayer ; dbpedia:birthDate ?birthdate .
  ?athlete rdfs:label ?athlete_name .
  STRLANG:langMatches ?language [ ?manager ns:label ?manager_name ] [ ?athlete ns:label ?athlete_name ]
  FILTER (STRLANG:languageMatch ?language 'en')
  AND ?birthdate = '1990-01-01' }",5,11,6,3,2,3,2,20,0,0,2,0,0.0,0
39,64,val,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?producer_name ?role ?bob_thompson_artist_name ?bob_thompson_birthplace
WHERE {
  ?producer a dbpedia:MusicProducer ;
            dbpedia:production ""Coke Studio Philippines"" .
  ?bob_thompson a dbpedia:MusicalArtist ;
                rdfs:label ""Bob Thompson"" .
  ?producer rdfs:label ?producer_name .
  ?bob_thompson rdfs:label ?bob_thompson_artist_name .
  ?bob_thompson dbpedia:birthPlace ?bob_thompson_birthplace
}",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
905,63,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?father a dbpedia:Person ;
             dbpedia:name ""Béla IV of Hungary"" ;
             dbpedia:birthPlace ""Kingdom of Hungary (Medieval)"" .
  ?son a dbpedia:Person ;
           dbpedia:name ""Charles I of Hungary"" ;
           dbpedia:birthPlace ""Kingdom of Hungary (Medieval)"" .
  ?father dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person ;
              dbpedia:name ""Philip"" ;
              dbpedia:birthPlace ""Wallachia"" .
  ?father dbpedia:spouse ?spouse_name
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
414,18,val,"Give me the award of the awardee of Nobel Prize in Physics and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?award_name ?host_institution_name
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:winAward ?award .
  ?award rdfs:label ?award_name .
  ?host_institution a dbpedia:Building, dbpedia:Organization ;
                       dbpedia:hasLocation ?host_location .
  ?host_location rdfs:label ?host_institution_name
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
198,63,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?author_name ?author_birthplace ?award_name ?award_description
WHERE {
  ?author a dbpedia:Person ;
           rdfs:label ?author_name ;
           dbpedia:birthPlace ?author_birthplace .
  ?award a dbpedia:Award ;
            rdfs:label ?award_name ;
            dbpedia:awardee ?author .
  ?award_name ""Gillmore Medal"" .
  ?author rdfs:seeAlso <http://en.wikipedia.org/wiki/Henry_Clay_Lewis> .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
159,62,val,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?successor_name ?politician_name ?office_holder_name ?author_name
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role dbpedia:military_role ;
             rdfs:label ""Michał Kazimierz Pac""@pl .
  ?successor a dbpedia:Person ;
            dbpedia:role dbpedia:military_role ;
            rdfs:label ?successor_name .
  OPTIONAL {
    ?commander dbpedia:hasSuccessor ?successor .
    ?successor a dbpedia:OfficeHolder ;
               rdfs:label ?office_holder_name .
  }
  ?politician a dbpedia:Politician ;
             dbpedia:role dbpedia:political_role ;
             rdfs:label ?politician_name .
  OPTIONAL {
    ?politician dbpedia:hasRole ?office_holder .
    ?office_holder rdfs:label ?office_holder_name .
  }
  ?author a dbpedia:Person ;
           rdfs:label ?author_name .
  ?author dbpedia:written ""The Black Tulip""@en
}
```

This query attempts to find:
- The commander's name (`?commander_name`)
- The successor's name (`?successor_name`), ideally one who is also an office holder.
- The name of a politician (`?politician_name`) and the office they hold (`?office_holder_name`).
- The author's name (`?author_name`) who wrote ""The Black Tulip"".",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
513,18,val,Give me the residence of the leader of Ulster Unionist Party and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v3 <http://dbpedia.org/ontology/residence> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader_name ?leader_residence
WHERE {
  ?leader a dbpedia:Politician ;
    dbpedia:party dbpedia:UlsterUnionistParty ;
    dbpedia:office dbpedia:Leader_of_Ulster_Unionist_Party ;
    dbpedia:birthPlace ?leader_birthplace .
  ?leader rdfs:label ?leader_name .
  OPTIONAL {
    ?leader dbpedia:residence ?leader_residence .
  }
}
",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
39,65,val,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?band_member_name ?birthplace
WHERE {
  ?band_member a dbpedia:Musician ;
             dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?birthplace_label .
  ?birthplace_label geo:location ?location .
  ?location geo:identifier ""New York City"" .
}
```

This query selects musicians (`?band_member`) who were born in a place (`?birthplace`) labeled as ""New York City,"" which aligns with the assumed birth place of Robert Lamar Thompson.",7,10,8,3,3,3,3,71,0,0,4,0,0.0,0
353,66,val,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_child_name ?royalty_parent_name 
WHERE { 
  ?royalty_child a dbpedia:Person ; 
    dbpedia:parent ?royalty_parent . 
  ?royalty_parent a dbpedia:Royalty . 
  ?royalty_child rdfs:label ?royalty_child_name . 
  ?royalty_parent rdfs:label ?royalty_parent_name . 
}",7,9,8,3,3,3,3,71,0,16213,1,0.0,0.0,0
119,66,val,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader_name ?country_name
WHERE {
  ?electionResult a dbpedia:Election ;
                    dbpedia:region dbpedia:Galicia ;
                    dbpedia:year 2009 ;
                    dbpedia:party dbpedia:Spanish_Socialist_Workers'_Party .
  ?leader foaf:name ?leader_name ;
           dbpedia:office dbpedia:Head_of_Government_of_Galicia .
  ?quiros foaf:name ?name .
  ?quiros dbpedia:countryOfOrigin ?country_name
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
943,66,val,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_child_name ?office_holder_name 
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch ;    # Yeshaq I is a monarch
            rdfs:label ""Yeshaq I"" .  # Reference to Yeshaq I

  ?royalty_child rdfs:label ?royalty_child_name ;  # Child's name as royalty
                           dbpedia:offices ?office .
  ?office a dbpedia:OfficeHolder ;
            rdfs:label ?office_holder_name .  # Office holder's name

  ?office_holder a dbpedia:Monarch ;  # Must be a monarch to be a royalty office holder
                        rdfs:label ?office_holder_name .

  ?child dbpedia:child ?royalty_child .
  ?office_holder dbpedia:child ?office_holder_child .
  
  ?royalty_child rdfs:label ?royalty_child_name .
  ?office_holder rdfs:label ?office_holder_name .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,62,val,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?producer_name ?producer_role ?shadow_character_name ?shadow_connection
WHERE {
  ?producer a dbpedia:Person ;
            dbpedia:role dbpedia:Music_Producer ;
            rdfs:label ?producer_name .
  ?shadow_character a dbpedia:FictionalCharacter ;
                    dbpedia:characterName ?shadow_character_name ;
                    dbpedia:appearsIn dbpedia:Comics .
  ?producer dbpedia:hasAlterEgo ?shadow_character .
  ?shadow_character_name = ""The Shadow"" .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
293,66,val,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name ?member_name
WHERE {
  ?central louisiana rdf:type dbpedia:PoliticalRegion ;
               dbpedia:capital ?capital .
  ?capital rdfs:label ?capital_label .
  OPTIONAL { ?capital dbpedia:powers dbpedia:RulingParty ?ruling_party }
  ?ruling_party rdfs:label ?party_name .
  ?member a dbpedia:Person ;
           dbpedia:officeHolder ?member_office .
  ?member_office a dbpedia:PoliticalOffice ;
                 dbpedia:officeType dbpedia:Politician ;
                 dbpedia:region ?central_louisiana .
  ?member rdfs:label ?member_name
}

-- Query for parent's birth name and spouse of actor from ""1,000 Dollars a Minute""
SELECT ?parent_birthname ?actor_name
WHERE {
  ?tisha_sterling a dbpedia:Person ;
                 rdfs:label ""Tisha Sterling"" .
  ?tisha_sterling dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ?parent_birthname .
  
  ?tv_show a dbpedia:TelevisionProgram ;
             dbpedia:name ""1000 Dollars a Minute"" .
  ?actor a dbpedia:Person ;
         dbpedia:roleIn ?tv_show ?actor_name .
  ?actor rdfs:label ?actor_name
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
80,65,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with  and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for T.I.'s album details
SELECT ?album_name ?song_title WHERE {
  ?album a dbpedia:Album ;
            dbpedia:artist ?ti_artist .
  ?album rdfs:label ?album_name .
  ?album dbr:hasSong ?song .
  ?song rdfs:label ?song_title .
  FILTER (?song_title IN [""The Album Title""])  # Replace with the actual song title from T.I.
}

# Query for the actor who played The Shadow
SELECT ?actor_name WHERE {
  ?actor a dbpedia:Person ;
           rdfs:name ?actor_name .
  ?actor dbr:role ?role .
  FILTER (?role = ""The Shadow (character)"") .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
119,65,val,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader_name ?country
WHERE {
  ?leader a dbpedia:OfficeHolder ;
            dbpedia:office dbpedia:President_of_the_Region_of_Galicia ;
            dbpedia:term_start_date ""2009-01-01""^^xsd:date ;
            foaf:name ?leader_name ;
            dbpedia:nationality ""Spanish"" .
  ?leader dbpedia:birthPlace ?country
}
```

### Completed",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
756,65,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name WHERE {
  ?season dbpedia:sports_season_has_team ?team .
  ?team dbpedia:hasManager ?manager .
  ?season rdfs:label ""2007-08 VfL Bochum season"" .
}

SELECT ?thomas_letsch_name WHERE {
  ?player a dbpedia:SportPerson ;
           dbpedia:club ?team .
  ?team rdfs:label ""VfL Bochum"" .
  ?player rdfs:label ?thomas_letsch_name .
}

SELECT ?manager_name WHERE {
  ?player a dbpedia:SportPerson ;
           dbpedia:hasManager ?manager .
  ?player rdfs:label ?thomas_letsch_name .
}

SELECT ?club_or_organization WHERE {
  ?team a dbpedia:SportsClub ;
          dbpedia:fullName ""VfL Bochum"" .
}

SELECT ?country WHERE {
  ?leader a dbpedia:Person ;
            dbpedia:birthPlace ?country .
  ?leader rdfs:label ""Angela Merkel"" . 
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
159,63,val,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?war_event_description ?politician_name ?office_holder_title ?uprising_name ?military_conflict_description
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:role dbpedia:Commander ;
            dbpedia:inConflict dbpedia:Italian_Wars .
  ?politician a dbpedia:Person ;
            dbpedia:role dbpedia:Office_Holder ;
            dbpedia:office dbpedia:Political_Office ;
            dbpedia:inEvent dbpedia:Kościuszko_Uprising .
  ?uprising a dbpedia:Event ;
             dbpedia:type dbpedia:Military_Conflict ;
             dbpedia:name ""Kościuszko Uprising"" .
  ?military_conflict_description a dbpedia:Description ;
                           rdfs:label ""Military conflict of Kościuszko Uprising""@en .
  ?commander rdfs:label ?commander_name .
  ?politician rdfs:label ?politician_name .
  ?military_conflict_description rdfs:label ?military_conflict_description
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
737,65,val,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?predecessor_name
WHERE {
  ?philipp_albrecht a dbpedia:Person ;
                    dbpedia:birthDate ""1822-07-02"" ;
                    dbpedia:parent ?father .
  ?father a dbpedia:Person ;
           rdfs:label ?father_name ;
           dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person ;
             rdfs:label ?grandfather_name ;
             dbpedia:child ?father
  FILTER (lang(?father_name) = ""de"" || lang(?grandfather_name) = ""de"")
}
```

This SPARQL query looks for Philipp Albrecht's father (`?father`) and traces back to his grandfather (`?grandfather`). The `FILTER` clause ensures we are only considering German names, which is likely given the context of Württemberg royalty.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,64,val,"Give me the birth place of Glenn Youngkin and birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?glenn_youngkin_birthplace ?awardee_name ?awardee_birthplace ?cece_bell_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
   dbpedia:office ""Governor of Virginia"" ;
   dbpedia:birthPlace ?glenn_youngkin_birthplace .
  
  ?person a dbpedia:Person ;
   dbpedia:award ""Primetime Emmy Award for Outstanding Writing for a Drama Series"" ;
   dbpedia:awardedTo ?awardee .
  OPTIONAL { ?awardee rdfs:label ?awardee_name }
  
  ?author a dbpedia:Person ;
   dbpedia:name ""Cece Bell"" ;
   dbpedia:birthPlace ?cece_bell_birthplace .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,65,val,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?politician_parent_name ?office_holder_parent_name ?commander_award
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?politician .
  ?politician a dbpedia:OfficeHolder ;
               rdfs:label ""Politician"" .
  ?child a dbpedia:Person ;
           dbpedia:parent ?office_holder .
  ?office_holder a dbpedia:OfficeHolder ;
                  rdfs:label ""Office Holder"" .
  ?child rdfs:label ?child_name .
  ?office_holder rdfs:label ?office_holder_name .
  ?politician rdfs:label ?politician_name .
  ?child also dbpedia:ChildOf ?politician .
  ?office_holder also dbpedia:ParentOf ?child .
  ?child dbpedia:awarded dbpedia:Commander_of_the_Royal_Victorian_Order .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,63,val,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?birthplace ?role_in_movie
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ?birthplace .
  ?actor rdfs:label ?actor_name .
  ?movie a dbpedia:Film ;
            dbpedia:role ?role_in_movie .
  ?movie rdfs:label ?movie_title .
  ?actor dbpedia:act_in_film ?movie .
  FILTER (str(?movie_title) LIKE '%The Shadow%' )
  AND (?role_in_movie = 'alter ego of The Shadow')
}
```

This query does the following:
- Selects individuals (`?actor_name`) and their birth places (`?birthplace`).
- Filters for individuals who have acted in films (`?movie`) titled ""The Shadow"" and played the role of the alter ego of The Shadow.
- Uses `LIKE '%The Shadow%'` to match any movie title containing ""The Shadow"".
- Checks if the role of the actor in that movie is specifically the alter ego of The Shadow.",7,8,8,3,3,3,3,71,0,0,13,0,0.0,0
80,63,val,Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },,7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
706,18,val,Give me the birthplace of the actor of Akaler Shandhaney and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace ?fellowship_winner_name ?fellowship_winner_birthplace
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:birthPlace ?actor_birthplace .
  ?fellowship_winner a dbpedia:Awardee ;
                       dbpedia:award dbpedia:SangeetNatakAkademiFellowship ;
                       dbpedia:awardeeName ?fellowship_winner_name .
  ?actor rdfs:label ?actor_name .
  ?fellowship_winner rdfs:label ?fellowship_winner_name
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
198,65,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor and force of the awardee of the award of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?medal_of_honor_winner a dbpedia:Person ;
                       dbpedia:awardedBy ?awardee ;
                       dbpedia:awardedFor ""Medal of Honor"" .
  ?awardee a dbpedia:Person ;
           rdfs:label ""Quincy Adams Gillmore""@en .
  ?medal_of_honor_winner rdfs:label ?medal_of_honor_winner_name .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan a dbpedia:Person ;
                    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```

This query will:
- Find Henry Clay Lewis (politician) and Quincy Adams Gillmore (awardee of Medal of Honor).
- Extract their birthplaces and confirm Quincy Adams Gillmore's role as the awarder.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,26,val,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?charles_v_name ?maximilian_birthplace ?dorothea_parent
WHERE {
  ?charles_v a dbpedia:Monarch ;
             dbpedia:monarchyStartYear 1519 .
  ?charles_v dbpedia:father ?charles_father .
  ?maximilian I a dbpedia:Person ;
            dbpedia:birthPlace ?maximilian_birthplace .
  ?dorothea_of_denmark a dbpedia:Person ;
             dbpedia:parent ?dorothea_parent .
  ?dorothea_parent a dbpedia:Monarch ;
                dbpedia:birthPlace <http://dbpedia.org/ontology/Location>
  FILTER (regex(str(?maximilian_birthplace), ""MS""))  # Maximilian I was born in Mississippi (administrative region)
  FILTER (str(?dorothea_parent) = ""Christian II of Denmark"")
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
687,62,val,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?athlete_name ?athlete_birthdate ?actor_name ?actor_role ?film_title ?film_director ?team_name 
WHERE { 
  ?pollio_dateOfBirth rdf:type xsd:date; 
  ?pollio_dateOfBirth str(?Marty_Polio_Birthday) . 
  ?athlete bornOn ?pollio_dateOfBirth; 
  ?athlete a dbpedia:Athlete . 
  ?actor a dbpedia:Person; 
  dbpedia:role ?actor_role; 
  dbpedia:film ?film; 
  dbpedia:director ?film_director . 
  ?film_title rdf:type dbpedia:Film; 
  dbpedia:producer ?manuel_huerga . 
  ?pablo_aimar a dbpedia:SoccerPlayer; 
  dbpedia:team ?team_name . 
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
531,62,val,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_name ?office_holder ?event_name ?event_type
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolder ?office_holder .
  ?military_conflict a dbpedia:MilitaryConflict ;
                       rdfs:label ?event_name .
  ?societal_event a dbpedia:SocietalEvent ;
                      rdfs:label ?event_name .
  ?politician foaf:name ""Manuel Pinto da Costa"" .
  ?military_conflict rdfs:subClassOf [a dbpedia:ConflictType; rdfs:label ""Portuguese Colonial War""] .
  ?societal_event rdfs:subClassOf [a dbpedia:EventType; rdfs:label ""Societal Event""] .
  ?politician dbpedia:conflict ?military_conflict .
  ?office_holder dbpedia:officeHolderOfOfficeIn ?office_name .
  ?election a dbpedia:Election ;
             rdfs:label ""2003 Madrid City Council election"" .
  ?office_holder foaf:name ""Miguel Maura"" .
  ?office_name rdfs:label ?office_name
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
347,66,val,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_child_name ?commander_name ?societal_event_name ?tv_show_name
WHERE {
  ?royalty_child a dbpedia:Monarch ;
                 dbpedia:hasParent ?father .
  ?father a dbpedia:Person ;
          dbpedia:hasChild ?royalty_child .
  ?commander a dbpedia:MilitaryPerson ;
             dbpedia:hasRole dbpedia:Commander ;
             dbpedia:participatedInEvent dbpedia:FrenchRevolutionaryWars .
  ?societal_event a dbpedia:Event ;
                  dbpedia:isPartOf dbpedia:FrenchRevolutionary_Wars ;
                  dbpedia:includesMilitaryAction ?commander .
  ?tv_show a dbpedia:TelevisionShow ;
             dbpedia:hasEpisode ?episode .
  ?episode a dbpedia:TelevisionEpisode ;
           dbpedia:features ?societal_event .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
58,18,val,Give me the producer of the movie with  and spouse of the person born as the birth name of Linda Bruckheimer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/starring> """"@en . }",,5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
198,64,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?general_name ?general_death_date ?commander_name ?awarded_by
WHERE {
  ?general a dbpedia:Person ;
            dbpedia:deathDate ""1850-08-05"" ;
            dbpedia:birthPlace ?general_birthplace .
  ?general rdfs:label ?general_name .
  ?commander a dbpedia:Person ;
             dbpedia:name ""Quincy Adams Gillmore"" ;
             dbpedia:role [dbo:hasRole ""Military Commander""] .
  ?general dbpprop:wasCommandedBy ?commander .
  ?awarded_by a dbpedia:Organization ;
               rdfs:label ""United States Congress"" .
  ?general dbpprop:receivedAwardFrom ?awarded_by .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,66,val,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?politician_title ?birthplace
WHERE {
  ?actor a dbpedia:Actor ;
           rdfs:label ?actor_name .
  ?actor dbpedia:roleIn [ dbpedia:hasRole dbpedia:The_Shadow ] .
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?politician a dbpedia:Politician ;
             dbpedia:office ?politician_title ;
             rdfs:label ?politician_name .
  ?actor rdfs:label ?actor_name .
  ?politician rdfs:label ?politician_name
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
628,65,val,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?musical_artist_name ?birth_name
WHERE {
  ?musical_artist a dbpedia:MusicalArtist ;
                 dbpedia:origin dbpedia:Florida .
  ?musical_artist rdfs:label ?musical_artist_name .
  ?band_member a dbpedia:BandMember ;
               dbpedia:associatedWith ?musical_artist .
  ?band_member rdfs:label ?band_member_name .
  ?birth_name a rdf:BNode; foaf:name ?birth_name .
  ?musical_artist dbo:birthPlace ?birth_place .
  ?birth_place a dbpedia:Region;
                dbpedia:isPartOf dbpedia:Puerto_Rico ;
                rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?band_member dbo:birthPlace ?birth_place .
  ?musical_artist dbo:member ?band_member .
  ?band_member dbo:associatedWith ?musical_artist
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
80,66,val,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the actor in a music video or related project for ""What You Know"" by T.I.
SELECT ?actor_name WHERE {
  ?video a dbpedia:MusicVideo ;
            dbpedia:performer [ dbpedia:hasArtist ?artist ] .
  ?artist rdfs:label ""T.I."" .
  ?video rdfs:subject [ a dbpedia:MusicVideoSubject ; dbpedia:containsMusic ""What You Know"" ] .
  ?actor a dbpedia:Person ;
          dbpedia:partOf ?video .
}

# Query to identify T.I. as the artist of the album ""What You Know""
SELECT ?artist_name WHERE {
  ?album a dbpedia:Album ;
            dbpedia:artist ?artist_name .
  ?artist_name rdfs:label ""T.I."" .
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
295,18,val,"Give me the native of the birth place of Victor Saville and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?victor_saville_birthplace ?steven_kapur_name
WHERE {
  ?steven_kapur a dbpedia:Artist ;
                    dbpedia:birthPlace ?steven_kapur_birthplace .
  ?victor_saville a dbpedia:Person ;
                   dbpedia:birthPlace ?victor_saville_birthplace .
  ?victor_saville rdfs:label ""Victor Saville"" .
  ?steven_kapur rdfs:label ?steven_kapur_name
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
258,18,val,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?university_name ?founding_date
WHERE {
  ?university a dbpedia:University ;
             dbpedia:established ?founding_date .
  ?university rdfs:label ?university_name
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
737,63,val,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:parent ?grandparent ;
            dbpedia:hasSpouse ?spouse ;
            dbpedia:child ?child .
  ?grandparent a dbpedia:Person ;
               dbpedia:parent ?greatGrandparent ;
               rdfs:label ""Duke Philipp of Württemberg"" .
  ?spouse a dbpedia:Person ;
           rdfs:label ""Archduchess Helena of Austria"" .
  ?child a dbpedia:Person ;
            rdfs:label ?royalty_name ;
            dbpedia:parent ?person .
  ?greatGrandparent a dbpedia:Person ;
                 dbpedia:parent ""Archduke Charles Louis of Austria"" .
}
```

### Completed",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,64,val,"Give me the child of the parent of the child of Minye Kyawswa and spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name WHERE {
  ?royalty a dbpedia:Royalty ;
  dbpedia:parent ?grandparent ;
  dbpedia:child ?child_of_min_phyu .
  ?child_of_min_phyu a dbpedia:Person ;
  dbpedia:sibling ?sibling_of_min_phyu .
  ?sibling_of_min_phyu dbpedia:spouse ?spouse_of_saw_shwe_khet .
  ?spouse_of_saw_shwe_khet a dbpedia:Person ;
  dbpedia:child ?saw_min_phyu .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,64,val,"Give me the father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?father_name ?father_birthplace ?queen_name ?queen_title ?war_name ?war_start ?war_end 
WHERE { 
  ?queen a dbpedia:Royalty ; 
    rdfs:label ?queen_name . 
  ?queen dbpedia:hasParent ?father . 
  ?father a dbpedia:Person ; 
    rdfs:label ?father_name . 
  ?war a dbpedia:Event ; 
    rdfs:label ?war_name . 
    dbpedia:duration ?war_start ?war_end . 
    dbpedia:participatedInMilitary ?father . 
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,62,val,"Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_name ?birthdate
WHERE {
  ?artist a dbpedia:Musician ;
dbp:associatedBand ?band_name .
  ?band_name rdfs:label ?band_name_label .
  ?band_member a dbpedia:Person ; dbpedia:birthday ?birthdate .
  ?band_member rdfs:label ?band_member_name .
  FILTER (?birthdate = '1945-03-30') .
}
",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
816,63,val,"Give me the parent of the professional in Photographer and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?parent_name ?photographer_name ?photographer_parent_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ""Los Angeles, California"" .
  ?actor rdfs:father ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:birthPlace ""Los Angeles, California"" .
  ?actor dbpedia:role [property::dbpedia:filmRole] .
  ?photographer a dbpedia:ProfessionalPhotographer ;
             dbpedia:birthPlace ""Los Angeles, California"" .
  ?photographer rdfs:parent ?photographer_parent .
  ?photographer_parent a dbpedia:Person ;
                  dbpedia:birthPlace ""Los Angeles, California""
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,63,val,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?child_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?politician .
  ?politician rdfs:label ?politician_name .
  ?child rdfs:label ?child_name .
  FILTER (regex(str(?child), 'Frederick Stanley, 16th Earl of Derby')) 
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,62,val,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?dbanj_name ?dbanj_birthplace ?pacely_name ?pacely_birthplace 
WHERE { 
  ?dbanj a dbpedia:MusicalArtist ; 
  dbpedia:birthPlace ?dbanj_birthplace . 
  ?pacely a dbpedia:Person ; 
  dbpedia:birthPlace ?pacely_birthplace . 
  ?dbanj rdfs:label ?dbanj_name . 
  ?pacely rdfs:label ?pacely_name . 
  ?dbanj ns:artistMention ?pacely . 
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,62,val,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author_name
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:office dbpedia:GovernorOfArkansas ;
               dbpedia:birthPlace dbpedia:Chappaqua,New_York ;
               foaf:spouse ?author .
  ?author a dbpedia:Person ;
          dbpedia:birthPlace dbpedia:United_States ;
          rdfs:label ?author_name
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
943,63,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?office_holder_name ?commander_name ?alter_ego_name
WHERE {
  ?royalty a dbpedia:Royalty ; dbpedia:offices ?office_holder .
  ?parent a dbpedia:Royalty ; dbpedia:children [ dbpedia:hasOffspring ?commander ] .
  ?commander a dbpedia:Person ; dbpedia:role ""Commander"" .
  ?siege a dbpedia:Siege ; dbpedia:participatedIn ?commander .
  ?royalty rdfs:label ?royalty_name .
  ?office_holder rdfs:label ?office_holder_name .
  ?commander rdfs:label ?commander_name .
  ?alter_ego a dbpedia:Person ; dbpedia:alterEgo ?alter_ego_name .
  ?alter_ego_name = 'Lamont Cranston' 
}
",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
39,66,val,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name
WHERE {
  ?bob_thompson a dbpedia:MusicalArtist ;
                  dbpedia:name ""Bob Thompson"" .
  ?bob_thompson foaf:givenName ?birth_name .
  ?sam_concepcion a dbpedia:Musician ;
                   dbpedia:name ""Sam Concepcion"" .
  ?the_shadow a dbpedia:AlterEgo ;
                 dbpedia:name ""The Shadow"" .
  ?bob_thompson rdfs:label ?band_name .
  ?sam_concepcion rdf:type dbpedia:Artist .
  ?bob_thompson ns:artistAlias ?sam_concepcion .
  ?sam_concepcion ns:performerName ?the_shadow
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
23,25,val,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?politician_name ?party 
WHERE { 
  ?politician a dbpedia:Politician ; 
  dbpedia:birthPlace <http://dbpedia.org/property/location> ?country ; 
  dbpedia:politicalParty ?party . 
  ?country rdfs:label 'Colombia' . 
  ?politician rdfs:label ?politician_name . 
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,64,val,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?ducas_name ?ducas_office ?battle_of_vienna_event ?vienna_war 
WHERE { 
?ducas a dbpedia:OfficeHolder ; dbpedia:office ?ducas_office . 
?ducas rdfs:label ?ducas_name . 
?battle_of_vienna_event a dbpedia:Event ; dbpedia:name ""Battle of Vienna"" . 
?vienna_war a dbpedia:MilitaryConflict ; dbpedia:name ""Battle of Vienna"" . 
?ducas dbpedia:successor ?pac . 
?pac a dbpedia:Person ; dbpedia:role ""Commander"" ; dbpedia:name ""Michał Kazimierz Pac"" . 
?vienna_war dbpedia:partOf ?battle_of_vienna_event . 
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
375,18,val,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?person_name ?parent_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace london ;
            dbpedia:deathDate ?deceasedDate .
  OPTIONAL { 
    ?person rdf:type dbpedia:Artist . 
    ?person rdf:type dbpedia:MusicalArtist . 
  }
  OPTIONAL { 
    ?person rdfs:label ?person_name . 
    ?person rdfs:label ?work1 . # Movie
    ?person rdfs:label ?work2 . # TV Show
  }
  OPTIONAL { 
    ?person dbo:hasParent ?parent .
    ?parent a dbpedia:Person .
  }
  FILTER ( ?deceasedDate <= ""2020-06-18"" )
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
246,18,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royal_parent_name ?royal_parent_birthplace
WHERE {
  ?princess a dbpedia:Person ;
            dbpedia:birthPlace ?princess_birthplace ;
            dbpedia:parent ?royal_parent .
  ?prince a dbpedia:Person ;
           dbpedia:birthPlace ?prince_birthplace ;
           dbpedia:parent ?royal_parent .
  ?royal_parent rdfs:label ?royal_parent_name .
  ?royal_parent dbpedia:isParentOfSome ?princess .
  ?royal_parent dbpedia:isParentOfSome ?prince
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
103,62,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v3 <http://dbpedia.org/property/starring> ?v4 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_profession ?politician_name ?politician_profession
WHERE {
  ?actor a dbpedia:Actor ; dbpedia:birthName 'Richard Grant Esterhuysen' .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:pseudonym ?actor_pseudonym .
  ?politician a dbpedia:Politician ; dbpedia:birthPlace ?politician_birthplace .
  ?politician rdfs:label ?politician_name .
  ?actor dbpedia:appearInRole ?movie_title .
  ?movie_title rdfs:label 'Ab Kya Hoga' .
  ?actor dbpedia:roleInTelevisionShow ?actor_role_in_tv_show .
  ?actor_role_in_tv_show a dbpedia:TelevisionShowRole
}
",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
557,64,val,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?producer_name 
WHERE { 
  ?film a dbpedia:Film ; dbpedia:productionCompany ?producer . 
  ?actor a dbpedia:Person ; dbpedia:name ?actor_name . 
  ?actor rdfs:label 'Humphrey Bogart' . 
  ?film dbpedia:starring ?actor . 
  ?producer rdfs:label ?producer_name . 
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,65,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members_names ?curran_real_name
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:hasMember ?band_member .
  ?band_member a dbpedia:Person ;
               dbpedia:name ?band_members_names ;
               dbpedia:birthDate ""1945-03-30"" .
  ?band_member rdfs:label ?curran_real_name .
  ?band rdf:type dbpedia:MusicGroup .
  ?band_name = str(?band)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,26,val,"Give me the spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?film WHERE {
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:Actor .
  ?actor dbpedia:actedIn ?film.
  ?film rdfs:label ?film_title .
  ?film_title contains 'Audrey Hepburn' .
  ?film_title contains 'Iliza Shlesinger' .
}
",5,9,6,2,3,2,3,28,0,0,1,0,0.0,0
225,18,val,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards and entity in the region of the time zone in Kiyosu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardee_name ?awardee_birthplace WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:nationality ""Japanese"" ;
           dbpedia:birthPlace ?awardee_birthplace .
  ?awardee rdfs:label ?awardee_name .
  FILTER (lang(?awardee_name) = ""ja"")  # Ensure the name is in Japanese
  AND (?awardee_birthplace geo:containsPoint ?point)
  WHERE {
    ?point a geo:Point ; geo:coordinates [avro:floats ""37.4922,139.8221""]  # Coordinates for Kiyosu, Japan
  }
}
```

This query will search for a person who:
- Is Japanese,
- Has received an award from the Anita Borg Institute Women of Vision Awards,
- And whose birthplace is within or associated with the geographical coordinates of Kiyosu, Japan.

By running this SPARQL query against the DBpedia dataset, we should be able to find the specific awardee's birthplace.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,62,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>

// Part 1: Royalty involved in the Siege of Mukha
SELECT ?royalty_name WHERE {
  ?royalty a dbpedia:Royalty ;
             dbpedia:partOfEvent dbpedia:Siege_of_Mukha .
}

// Part 2: Baeda Maryam I's father
SELECT ?father_name WHERE {
  ?Baeda_Maryam_I a dbpedia:Person ;
                    dbpedia:parent ?father .
}

// Part 3: Alter ego of Lamont Cranston (radio, film, and television)
SELECT ?alter_ego_name WHERE {
  ?Lamont_Cranston a dbpedia:Character ;
                  dc:creator ?alter_ego .
}
```

### Completed
The final answer is dependent on executing these queries against the DBpedia dataset. The reasoning behind each query is to extract specific information related to the siege, Baeda Maryam I's father, and the alter ego of Lamont Cranston from various media. The Sparql queries are structured to retrieve this information accurately.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
756,63,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?manager_name ?manager_birthplace 
WHERE { 
  ?player a dbpedia:Person ; dbpedia:birthPlace ?player_birthplace . 
  ?team a dbpedia:SportTeam ; dbpedia:type [ rdfs:label 'Football club' ] ; dbpedia:name 'VfL Bochum' . 
  ?teamSeason a dbpedia:SportsLeagueSeason ; dbpedia:seasonYear 2006; dbpedia:league ?league_name . 
  ?manager a dbpedia:Person ; dbpedia:birthPlace ?manager_birthplace . 
  ?player rdfs:label ?player_name . 
  ?teamSeason dbpedia:hasManager ?manager . 
  ?manager rdfs:label ?manager_name . 
  ?league_name rdfs:label [ rdfs:label '2. Bundesliga' ] . 
}",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
816,64,val,"Give me the parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },,7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
687,64,val,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?birthdate ?role ?team_name
WHERE {
  ?player a dbpedia:Person ; dbpedia:birthDate ?birthdate ; dbpedia:role dbpedia:SoccerPlayer .
  ?player rdfs:label ?player_name .
  ?team a dbpedia:SportsTeam ; dbpedia:name ?team_name .
  ?player dbpedia:playsFor ?team .
  ?manager a dbpedia:Person ; dbpedia:role dbpedia:SoccerManager .
  ?manager rdfs:label ?manager_name .
  ?birthdate match(?player_birthdate, ?manager_birthdate) .
}
",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
737,64,val,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find parents of Albrecht, Duke of Württemberg
SELECT ?father ?mother
WHERE {
  ?albrecht dbpedia:birthFather ?father .
  ?albrecht dbpedia:birthMother ?mother .
  ?father rdfs:label ""Eberhard III, Duke of Württemberg"" .
  ?mother rdfs:label ""Countess Palatine Maria Elisabeth of the Rhine""
}

# Step 2: Find children of Albrecht who are royalty
SELECT ?child_name ?royalty_status
WHERE {
  ?albrecht dbpedia:hasChild ?child .
  ?child a dbpedia:Person; dbpedia:isRoyalty ""true"" .
  ?child rdfs:label ?child_name
}

# Step 3: Find spouse of Archduchess Helena of Austria
SELECT ?spouse_name
WHERE {
  ?archduchess dbpedia",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,63,val,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_office
WHERE {
  ?commander a dbpedia:OfficeHolder ;
             dbpedia:office dbpedia:Commander (Central African Republic) .
  ?commander rdfs:label ?commander_name .
}

SELECT ?leader_name
WHERE {
  ?leader a dbpedia:Person ;
           dbpedia:role dbpedia:Party Leader (Conservative Republican Party) .
  ?leader rdfs:label ?leader_name .
}

SELECT ?tenant_name
WHERE {
  ?tenant a dbpedia:OfficeHolder ;
           dbpedia:office dbpedia:Resident (Madrid City Council) .
  ?election a dbpedia:Event ;
             dbpedia:eventType ""2003 Madrid City Council election"" .
  ?election rdfs:startYear 2003 .
  ?tenant foaf:residence ?residence .
  ?residence a dbpedia:Building ;
              dbpedia:buildingName ""Residence Name"" .
  ?tenant rdfs:label ?tenant_name .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
668,66,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . }","The SPARQL queries are structured to extract this information:

1. **For Elorm Kabu Amenyah's musical artist:**
   ```sparql
   SELECT ?artist_name WHERE {
     ?person dbpedia:birthName ""Elorm Kabu Amenyah"" .
     ?person a dbpedia:Artist .
     ?person rdfs:label ?artist_name
   }
   ```

2. **For Rod Argent's native artist from the Central Region, Ghana:**
   ```sparql
   SELECT ?birth_name WHERE {
     ?artist a dbpedia:Person ;
               dbpedia:birthPlace ""Central Region, Ghana"" .
     ?artist rdfs:label ?artist_name .
     ?artist dbpedia:pseudonym ?birth_name .
     ?artist dbpedia:profession ""Musician"" .
     ?artist rdfs:label ""Rod Argent""
   }
   ```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
398,18,val,"Give me the player in the writer of The First Glove and figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?player_name ?nickname
WHERE {
  ?work a dbpedia:Film ;
            dbpedia:title ""The First Glove"" .
  ?actor a dbpedia:Person ;
           dbpedia:givenName ?player_name ;
           dbpedia:roleIn ?work .
  ?actor rdfs:label ?actor_label .
  ?actor dbpedia:nickname ?nickname .
  ?actor dbpedia:birthPlace ""Denis Kolodin"" # Assuming Denis Kolodin is a character in the work
}",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
668,65,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthName ?birth_name;
           dbpedia:profession ""Musician"" .
  ?person rdfs:label ?musical_artist_name .
  FILTER (str(?birth_name) = ""Joey B"")
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
386,26,val,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Awardee of the Golden Sword for Bravery
SELECT ?awardee_name ?awardee_war WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:recipientOfAward dbpedia:Golden_Sword_for_Bravery .
  ?awardee rdfs:label ?awardee_name .
  FILTER (?awardee_war IN [ ""World_War_I"" ] )
}

# War of Karl Gustav von Baggovut
SELECT ?war_name WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?war_name .
  ?war rdfs:label ?war_name .
  FILTER (?war_name = ""World_War_I"" ) 
}

# Birth place of Elena Žalinkevičaitė-Petrauskienė
SELECT ?birth_place WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birth_place .
  ?person rdfs:label ""Elena Žalinkevičaitė-Petrauskienė"" .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
80,62,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book) and professional in .","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","Multiple queries are required, as outlined above.",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
203,62,val,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?british_fleet_name ?french_fleet_name ?admiral_name
WHERE {
  ?battle a dbpedia:Event ; dbpedia:name 'Battle of Cape Finisterre (1805)' .
  ?british_fleet a dbpedia:NavalFleet ; dbpedia:commander ?admiral_name .
  ?french_fleet a dbpedia:NavalFleet ; dbpedia:commander ?french_fleet_commander_name .
  ?admiral_name rdfs:label ?admiral_name_label .
  ?battle dbpedia:partOf ?war .
  ?war a dbpedia:MilitaryConflict .
  ?william_bayne a dbpedia:Person ; dbpedia:role 'Naval Officer' .
  ?triple_x rdfs:label 'The Triple X' .
  ?admiral_name ?admiral_name_label
  ?french_fleet_commander_name ?french_fleet_commander_name_label
}
",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
89,63,val,"Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?child1 a dbpedia:Person ;
           dbpedia:parent ?minye_kyawswa .
  ?minye_kyawswa a dbpedia:Person ;
                 dbpedia:spouse ?wife .
  ?child2 a dbpedia:Person ;
            dbpedia:parent ?minye_kyawswa .
  ?child1 ns:childOf ?child2 .
  ?wife rdfs:label ""Father's Spouse"" . # Placeholder for actual spouse label
}
```

### Completed",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
140,18,val,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?party_name
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:birthPlace ""Westport, Connecticut"" ;
             rdfs:label ?commander_name .
  ?commander dbpedia:memberOf dbpedia:DemocraticParty .
  OPTIONAL { ?commander dbpedia:memberOf <http://purl.org/ontology/bio/PoliticalParty> }
  FILTER (lang(?commander_name) = ""en"")  # Ensure the name is in English
}
```

This query looks for a person born in Westport, Connecticut, who was a member of the Democratic Party or another political party. The `FILTER` clause ensures that the commander's name is in English.",5,8,6,3,2,3,2,20,0,0,4,0,0.0,0
353,62,val,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?office_holder_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Royalty ;
               dbpedia:offices dbpedia:Monarchy_of_Sicily .
  ?child rdfs:label ?royalty_name .
  ?office_holder rdfs:label ?office_holder_name
}
```

This query looks for individuals (`?child` and `?grandparent`) where the child has a parent (the grandparent) who is a royalty holding the office of Monarchy of Sicily. The labels (`?royalty_name` and `?office_holder_name`) are used to identify these individuals.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
293,62,val,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?actor_name ?actor_spouse_name
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:actInFilm ?film .
  ?film a dbpedia:Film ;
            dbpedia:producer ?producer .
  ?producer rdfs:label ""Nat Levine""@en .
  ?actor foaf:name ?actor_name .
  ?actor_spouse a foaf:Person ;
               foaf:name ?actor_spouse_name .
  FILTER (lang(?actor_name) = ""en"" AND lang(?actor_spouse_name) = ""en"")
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,66,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager1_name ?manager1_birthplace ?manager2_name ?manager2_birthdate ?team_name ?season_year ?team_season_type
WHERE {
  ?manager1 a dbpedia:Person ; dbpedia:birthPlace ?manager1_birthplace .
  ?manager1 dbpedia:manageSportTeam ?team_name ; dbpedia:season ?season_year ; dbpedia:type ?team_season_type .
  ?team_name a dbpedia:SportClub ; dbpedia:type dbpedia:SoccerClub .
  ?manager2 a dbpedia:Person ; dbpedia:birthDate ?manager2_birthdate .
  ?manager2 dbpedia:manageSportTeam ?team_name ; dbpedia:season ?season_year .
  ?manager2 rdfs:label ?manager2_name
  ?team_name rdfs:label ?team_name
  ?season_year rdfs:literal ""2007-08""
  ?team_season_type rdfs:literal ""soccer season"" 
}
",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
293,65,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name_of_ann_sothern ?spouse_name
WHERE {
  ?ann_sothern a dbpedia:Person ;
                 dbpedia:name ""Ann Sothern"";
                 dbpedia:birthName ?birth_name_of_ann_sothern .
  ?glenn_ford a dbpedia:Person ;
               dbpedia:name ""Glenn Ford"";
               dbpedia:spouse ?spouse_name .
  ?molly_bee a dbpedia:Person ;
              dbpedia:name ""Molly Bee"";
              dbpedia:politicalPartyMemberOf dbpedia:DemocraticParty
  .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,64,val,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?pacely_name ?musical_artist_name
WHERE {
  ?pacely a dbpedia:Person ;
           dbpedia:birthName ""Pacely"" .
  ?pacely foaf:name ?pacely_name .
  ?musician a dbpedia:Musician ;
             dbpedia:birthPlace dbpedia:CentralRegion_Ghana ;
             foaf:name ?musical_artist_name .
  ?pacely rdfs:label ?pacely_name .
  ?musician rdfs:label ?musical_artist_name
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,62,val,"Give me the father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?father_name ?office_holder_status ?awardee_name ?awardee_award
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolderStatus ?office_holder_status .
  ?politician rdfs:label ?politician_name .
  ?child a dbpedia:Person ;
            dbpedia:parent ?father_name .
  ?awardee a dbpedia:Person ;
             dbpedia:award ?awardee_award .
  ?awardee rdfs:label ?awardee_name .
  ?politician ns:father ?father_name .
  ?child ns:child ?awardee .
  ?politician ns:parent ?child
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
392,9,val,Give me the member of the figure known as Der Blau and reference to the designer of Aston Martin AMR1.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?designer_name
WHERE {
  ?car a dbpedia:Automobile ;
         dbpedia:manufacturer dbpedia:Aston_Martin ;
         dbpedia:model ""AMR1"" .
  ?designer a dbpedia:Person ;
            dbpedia:name ?designer_name .
  ?car rdfs:label ""Aston Martin AMR1"" .
}
```",4,4,5,2,2,2,2,9,0,0,6,0,0.0,0
628,66,val,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?awardee_name ?awarded_region ?awarded_state ?awarded_settlement
WHERE {
  ?shmurda a dbpedia:Musician ;
            dbpedia:birthName ""Ackquille Johnson"" .
  ?band_member a foaf:Person ;
             dbpedia:memberOf ?shmurda ;
             dbpedia:role dbpedia:BandMember .
  ?awardee a dbpedia:Person ;
           dbpedia:award ?awarded .
  ?awarded_region a dbpedia:Region ;
                 dbpedia:country ""United States"" ;
                 dbpedia:state ""New York"" ;
                 dbpedia:locality ?awarded_settlement .
  ?awarded_state a dbpedia:State ;
               dbpedia:name ""New York"" .
  ?awarded_settlement a dbpedia:Settlement ;
                    dbpedia:name ""New York""
  FILTER (str(?awarded_settlement) = ""New York"")
}
```

This query looks for:
- The band member associated with Bobby Shmurda (`?band_member_name`).
- The person awarded to (`?awardee_name`).
- The region, state, and settlement where the award was given (`?awarded_region`, `?awarded_state`, `?awarded_settlement`).

### Completed
```json
{
  ""reasoning"": ""To find the person born as the birth name of Bobby Shmurda (Ackquille Johnson) who is a band member of the musical artist Ackquille Johnson and native to the award given to Bobby Shmurda in New York, we need to query for individuals associated with Bobby Shmurda as band members, ensure they are also musicians, and link them back to Bobby Shmurda. Additionally, we filter for awards given in New York state."",
  ""sparql_query"": """"""
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?awardee_name ?awarded_region ?awarded_state ?awarded_settlement
WHERE {
  ?shmurda a dbpedia:Musician ;
            dbpedia:birthName ""Ackquille Johnson"" .
  ?band_member a foaf:Person ;
             dbpedia:memberOf ?shmurda ;
             dbpedia:role dbpedia:BandMember .
  ?awardee a dbpedia:Person ;
           dbpedia:award ?awarded .
  ?awarded_region a dbpedia:Region ;
                 dbpedia:country ""United States"" ;
                 dbpedia:state ""New York"" ;
                 dbpedia:locality ?awarded_settlement .
  ?awarded_state a dbpedia:State ;
               dbpedia:name ""New York"" .
  ?awarded_settlement a dbpedia:Settlement ;
                    dbpedia:name ""New York""
  FILTER (str(?awarded_settlement) = ""New York"")
}
"""""",
  ""completed"": true
}
```

This query should return the information about the band member associated with Bobby Shmurda, the award given to Bobby Shmurda, and the region, state, and settlement where this award was given.",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
687,63,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?team_name
WHERE {
  ?player a dbpedia:SoccerPlayer ;
            dbpedia:birthDate ""1979-11-03"" .
  ?manager a dbpedia:SoccerManager ;
            dbpedia:birthDate ""1979-11-03"" .
  ?athlete a dbpedia:Athlete ;
             dbpedia:birthDate ""Same as Marty Pollio's birth date"" .
  ?actor a dbpedia:Actor ;
            dbpedia:role ""Soccer Player and Athlete in All or Nothing: Manchester City"".
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
687,66,val,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

// Step 1: Find the soccer player-athlete from ""All or Nothing: Manchester City""
SELECT ?soccer_player_name WHERE {
  ?soccer_player a dbpedia:SoccerPlayer ;
               dbpedia:role dbpedia:ActorRole ;
               rdfs:label ?soccer_player_name
}

// Step 2: Identify the athlete born on 1955-02-22
SELECT ?athlete_name WHERE {
  ?athlete a dbpedia:Person ;
           dbpedia:birthday ""1955-02-22"" ;
           rdfs:label ?athlete_name
}

// Step 3: Find the soccer manager born on the same day as Marcelo Sarmiento
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?soccer_manager_name WHERE {
  ?soccer_manager a dbo:SoccerManager ;
                 dbpedia:birthday ""1955-02-22"" ;
                 rdfs:label ?soccer_manager_name
}

```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
731,18,val,Give me the war of the commander in Sinking of Prince of Wales and Repulse and force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX vc: <http://purl.org/dc/terms/vc>

SELECT ?commander_name ?award_name ?awardee_name
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role ""Commander of British naval forces in the Far East"" .
  ?awardee a dbpedia:Person ;
            dbpedia:recipientOf vc:Victoria_Cross .
  ?awardee rdfs:label ?awardee_name .
  ?commander rdfs:label ?commander_name .
  ?award a vc:Victoria_Cross .
  ?award rdfs:subject ?awardee .
  ?award rdfs:label ?award_name
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
628,62,val,"Give me the native of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?birth_name ?florida_birthplace
WHERE {
  ?band a dbpedia:Band ;
            dbpedia:hasMember ?band_member .
  ?band_member a dbpedia:Person ;
               dbpedia:birthPlace ?florida_birthplace .
  ?band_member rdfs:label ?band_member_name .
  
  ?person a dbpedia:Artist ;
             dbpedia:birthName ?birth_name .
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:label ?person_name .

  ?band_member rdfs:label ?band_member_name .
  ?person rdfs:label ?person_name .

  ?band_member_name = ?person_name .
  
  FILTER (?florida_birthplace-powderhorn:isPartOf dbpedia:Florida)
}
```

This query will search for a band member of GS9 who is a native of Florida and also a musical artist, and then retrieve their birth name. The `FILTER` clause ensures that the birth place is specifically in Florida.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
159,65,val,"Give me the reference to the writer of the work of George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?tv_show_name ?societal_event_name ?politician_name ?office_holder_name
WHERE {
  ?jean_baptiste_comte_d_arco a dbpedia:Person ;
                       rdfs:label ""Jean Baptiste, Comte d'Arco""@fr ;
                       dbpedia:birthDate ""1600-01-01""^^xsd:date ;
                       dbpedia:deathDate ""1655-05-01""^^xsd:date ;
                       dbpedia:role ""Commander in the war""@en;
                       dbpedia:partOfEvent ?event .
  ?event a dbpedia:Event ;
            rdfs:label ?societal_event_name ;
            dbpedia:type ""War""@en;
            dbpedia:startDate ""1654-01-01""^^xsd:date;
            dbpedia:endDate ""1667-12-31""^^xsd:date .
  ?politician_name a dbpedia:Person ;
                  rdfs:label ?politician_name ;
                  dbpedia:role ""Politician and Office Holder""@en;
                  dbpedia:officeHolderOf ?office_holder_name .
  ?event dbpedia:participant ?politician_name .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
375,26,val,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?toyotomi_hideyoshi_child_role ?toyotomi_hidenaga_war WHERE {
  ?toyotomi_hideyoshi a dbpedia:Person ; dbpedia:nationality 'Japanese' .
  ?toyotomi_hideyoshi_child rdfs:label ?toyotomi_hideyoshi_child_role .
  ?toyotomi_hidenaga a dbpedia:Person ; dbpedia:parent ?toyotomi_hideyoshi .
  ?toyotomi_hidenaga dbpedia:partOf ?war
  ?war a dbpedia:Conflict
  ?toyotomi_hideyoshi_child_role IN ('Toyotomi Hideyasu')
  ?toyotomi_hidenaga_war IN ('Battle of Sekigahara')
}
",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
198,62,val,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?award_name ?location WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:recipientOfAward ?award .
  ?award a award:Honorary_Award ;
         award:awardedTo ?awardee ;
         award:name ?award_name ;
         award:location ?location .
  ?location rdfs:label ""Charleston, South Carolina"" .
  ?award_name rdfs:label ""Congressional Gold Medal"" .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
213,18,val,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of Lao She.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },,5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
737,62,val,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_title
WHERE {
  ?grandchild a dbpedia:Person ;
    dbpedia:parent ?greatgrandparent ;
    dbpedia:parent ?grandparent ;
    dbpedia:parent ?parent_of_grandparent
  }
  ?greatgrandparent a dbpedia:Person ;
    rdfs:label ?greatgrandparent_name ;
    dbpedia:spouse ?spouse_of_greatgrandparent
  }
  ?parent_of_grandparent a dbpedia:Person ;
    rdfs:label ?parent_of_grandparent_name ;
    dbpedia:child ?grandchild
}
",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,66,val,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
               dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```

This query will retrieve the required birth places for each individual based on their respective roles and attributes as described in the reasoning section.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
871,64,val,"Give me the parent of Edward Stanley, 17th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?parent_name ?parent_birthplace
WHERE {
  ?earl_of_derby a dbpedia:Person ;
            dbpedia:birthPlace ?earl_birthplace .
  ?alumnus a dbpedia:Person ;
            dbpedia:alumniOf Eton College ;
            dbpedia:award Rodney Lees .
  ?politician_child a dbpedia:Person ;
                    dbpedia:child ?politician .
  ?politician a dbpedia:Politician ;
               dbpedia:parent ?parent .
  ?parent rdfs:label ?parent_name .
  ?earl_of_derby ns:father ?parent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
203,65,val,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?regiment_name ?war WHERE {
  ?regiment a dbpedia:Regiment ; dbpedia:name ?regiment_name .
  ?war a dbpedia:MilitaryConflict ; dbpedia:name ?war_name .
  ?commander dbpedia:militaryBranch ?regiment ; dbpedia:militaryConflict ?war .
  ?commander rdfs:label ?commander_name .
  ?war rdfs:label ?war_name .
  ?regiment dbpedia:parentRegiment [ dbpedia:hasMember ?bayne ] .
  ?bayne a dbpedia:Person ; dbpedia:name 'William Bayne' .
  ?calder a dbpedia:Person ; dbpedia:name 'Robert Calder' .
}
",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,63,val,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v6 <http://dbpedia.org/property/author> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spouse_name ?spouse_role ?work_title ?author_name WHERE {
  ?politician_author a dbpedia:Person ;
    dbpedia:role dbpedia:Politician ;
    dbpedia:role dbpedia:OfficeHolder ;
    dbpedia:birthPlace ?birthplace;
    dbpedia:spouse ?spouse_name .
  ?book_work a dbpedia:WrittenWork ;
    dbpedia:author ?author_name ;
    dbpedia:title ?work_title .
  ?hillary_clinton_work a dbpedia:Book ;
    dbpedia:author ?author_name ;
    dbpedia:about ?subject .
  ?war_commander a dbpedia:SocietalEvent ;
    dbpedia:instanceOf dbpedia:War ;
    dbpedia:commander ?war_commander_name .
  ?u_s_navy_person a dbpedia:Person ;
    dbpedia:role dbpedia:Author ;
    dbpedia:birthPlace ?birthplace;
    dbpedia:work ?work_title .
}

",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
782,64,val,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"SELECT ?band_name ?real_artist_name
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:birthDate ?birthDate .
  ?artist rdfs:label ?artist_name .
  ?persona rdfs:label ""Nick Curran"" .
  ?artist ns:performerInBand ?band .
  ?band a dbpedia:MusicGroup ;
         dbpedia:name ?band_name .
  ?artist ns:performerAs ?persona .
  ?artist ns:givenName ?real_artist_name .
  FILTER (?artist_name = ""Nick Curran"")
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
263,25,val,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?william_gayner_birthplace WHERE {
  ?father a dbpedia:Person ; dbpedia:parentOf ?patrick_bowes_lyon .
  ?patrick_bowes_lyon rdfs:label 'Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne' .
  ?patrick_bowes_lyon dbpedia:birthPlace ?william_gayner_birthplace .
}
",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
353,63,val,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_father_name ?royalty_child_name
WHERE {
  ?royalty_father a dbpedia:Person ;
                 dbpedia:parent ?royalty_parent .
  ?royalty_parent a dbpedia:Person ;
                rdfs:label ""Roger II of Sicily""@en .
  ?royalty_child a dbpedia:Person ;
                  dbpedia:child ?royalty_father ;
                  rdfs:label ""William I of Sicily""@en .
  FILTER (regex(str(?royalty_parent), ""Roger"")).
}
```

This query selects the names of the royalty father (`?royalty_father_name`) and the child (`?royalty_child_name`) where the parent is Roger II of Sicily.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
723,18,val,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?v2 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_1 ?producer_name ?producer_organization
WHERE {
  ?artist a dbpedia:MusicalArtist ; rdfs:label ""Cavalera Conspiracy"" .
  ?bandMember1 a dbpedia:Musician ; memberOf ?artist .
  
  ?film a dbpedia:Film ; title ""Nothing to Fear"" .
  ?producer a dbpedia:Organization ;
            dbpedia:role ""Producer"" ;
            rdfs:label ?producer_name .
  
  ?producer foaf:organizationMember ?band_member_1 .
}",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
609,62,val,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Cece Bell.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace ?author_name ?author_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?author a dbpedia:Person ;
            dbpedia:birthPlace ?author_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```

This query will return the birth places of the governor matching Paulus Powell's birth place (Mississippi), Vince Gilligan (considering him as the awardee for ""Breaking Bad""), and Cece Bell.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
23,26,val,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?party_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ""Colombia"" ;
               dbpedia:party ?party_name .
  ?politician rdfs:label ?politician_name .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
203,66,val,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?bayne_service ?foot_regiment_service ?kcb_awardee_event
WHERE {
  ?bayne a dbpedia:Person ;
    dbpedia:birthDate ""1769-04-01"" ; # Placeholder birth date for William Bayne
    dbpedia:navyServiceStart ""1793"" ;
    dbpedia:militaryConflict ?war .
  ?foot_regiment a dbpedia:Regiment ;
    dbpedia:regimentName ""30th (Cambridgeshire) Regiment of Foot"" ;
    dbpedia:conflict ?war .
  ?kcb_awardee a dbpedia:Person ;
    dbpedia:awarded ""Knight Commander of the Order of the Bath"" ;
    dbpedia:service ?kcb_service .
  ?war rdfs:label ""Napoleonic Wars"" . # Assuming Napoleonic Wars as the primary conflict
}
```

This query looks for:
- The name of the war (`?war_name`) in which William Bayne served.
- The service details of William Bayne (`?bayne_service`).
- The service details of the 30th (Cambridgeshire) Regiment of Foot (`?foot_regiment_service`) during the same war.
- The event associated with the awarding of the Knight Commander of the Order of the Bath to the recipient (`?kcb_awardee_event`).",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
87,25,val,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviedb: <http://www.moviedb.org schema#>

SELECT ?actor_name
WHERE {
  ?movie a moviedb:Film ;
            dbpedia:director Janusz_Kamiński ;
            dbpedia:mainActor ?actor_name .
  ?movie rdfs:label ""The Diving Bell and the Butterfly""@en .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
347,63,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?event_name ?television_show_name
WHERE {
  ?event a dbpedia:Event ;
            dbpedia:conflict ""Algerian War"" .
  ?event dbpedia:participatingMilitaryUnit ""French Army"" .
  ?television_show a dbpedia:TelevisionShow ;
                    rdfs:label ?television_show_name .
  ?television_show dbpedia:features ?event
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
249,9,val,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace ?work_name ?work_country
WHERE {
  ?actor a dbpedia:Person ; dbpedia:birthPlace ?actor_birthplace .
  ?work a dbpedia:Film ; dbpedia:country ?work_country .
  ?actor rdfs:label ?actor_name .
  ?work rdfs:label ?work_name
}
",4,6,5,2,2,2,2,9,0,782050,22,0.0,0.0,0
687,65,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?manager_name ?manager_team ?athlete_name ?athlete_role ?actor_name ?film_title 
WHERE { 
  ?manager a dbpedia:SoccerPlayer ; dbpedia:birthDate '1979-11-03' ; dbpedia:role dbpedia:SoccerManager . 
  ?athlete a dbpedia:Athlete ; dbpedia:birthDate '1955-02-22' ; dbpedia:role dbpedia:SoccerPlayer . 
  ?actor a dbpedia:Actor ; dbpedia:role dbpedia:SoccerPlayer ; dbpedia:appearedIn ?film_title . 
  ?film_title a dbpedia:Film ; dbpedia:director 'Manuel Huerga' . 
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
609,65,val,"Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"1. For Vince Gilligan:
   ```sparql
   PREFIX dbpedia: <http://dbpedia.org/ontology/>

   SELECT ?vince_gilligan_birthplace
   WHERE {
     ?vince_gilligan a dbpedia:Person ;
                    dbpedia:birthPlace ?vince_gilligan_birthplace .
     ?vince_gilligan rdfs:label ""Vince Gilligan"" .
   }
   ```

2. For the Governor of Mississippi:
   ```sparql
   PREFIX dbpedia: <http://dbpedia.org/ontology/>

   SELECT ?governor_name ?governor_birthplace
   WHERE {
     ?governor a dbpedia:Politician ;
             dbpedia:birthPlace ?governor_birthplace .
     ?governor rdfs:label ?governor_name .
     ?governor dbpedia:state ""Mississippi"" .
   }
   ```

3. For the author of ""El Deafo"":
   ```sparql
   PREFIX dbpedia: <http://dbpedia.org/ontology/>

   SELECT ?author_name ?author_birthplace
   WHERE {
     ?author a dbpedia:Person ;
             dbpedia:birthPlace ?author_birthplace .
     ?author rdfs:label ""Cece Bell"" .
   }
   ```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
375,25,val,Give me the war of Hashiba Hidekatsu and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war1 ?war2 ?hidekatsu_name ?enjirou_birthplace ?toyotomi_born_place
WHERE {
  ?hidekatsu a dbpedia:Person ;
            dbpedia:birthPlace ?hidekatsu_birthplace .
  ?war1 a dbpedia:Conflict ;
         dbpedia:participatedIn ?hidekatsu .
  ?enjirou a dbpedia:Person ;
           dbpedia:birthPlace ?enjirou_birthplace .
  ?war2 a dbpedia:Conflict ;
         dbpedia:participatedIn ?enjirou .
  ?toyotomi a dbpedia:Person ;
            dbpedia:birthPlace ?toyotomi_born_place .
  ?hidekatsu rdfs:label ?hidekatsu_name .
  ?enjirou rdfs:label ?enjirou_name .
  ?toyotomi rdfs:label ?toyotomi_name
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
119,64,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX psoe: <http://purl.org/psoe/>

SELECT ?office_name ?quintana_position
WHERE {
  ?quintana a dbpedia:Person ;
            dbpedia:birthPlace ""Spain"" ;
            rdfs:label ?quintana_name .
  ?quintana ns:office ?office .
  ?office a psoe:PoliticalPosition ;
           psoe:party ""Spanish Socialist Workers' Party (PSOE)"" .
  ?quintana_name = ""Anxo Quintana""
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,63,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?birth_name ?spouse_name ?party_member_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:role ""Joe E. Brown"" .
  ?co_star a dbpedia:Person ;
             dbpedia:name ""Dorothy Lamour"" ;
             dbpedia:birthName ?birth_name .
  ?spouse a dbpedia:Person ;
           foaf:sparqlEndpoint <http://dbpedia.org/ontology/SparqlEndpoint> ;
           dbpedia:name ?spouse_name .
  ?statue a dbpedia:Landmark ;
            dbpedia:location ""New York, USA"" ;
            dbpedia:elevation ""20.116800000000001347"" .
  ?party_member a dbpedia:Person ;
                 dbpedia:politicalPartyMemberOf ?party .
  ?actor rdfs:label ?actor_name .
  ?co_star rdfs:label ?co_star_name .
  ?spouse rdfs:label ?spouse_name .
  ?statue rdfs:label ?statue_name
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
311,18,val,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?musical_artist_name ?producer_name
WHERE {
  ?song a dbpedia:MusicSingle ;
            dbpedia:performer ?band .
  ?band rdfs:label ""R.E.M.""@en .
  ?bandMember a dbpedia:BandMember ;
              dbpedia:band ?band .
  ?musicalArtist a dbpedia:MusicArtist ;
               dbpedia:associatedWith ?band .
  ?producer a dbpedia:MusicProducer ;
             dbpedia:produced ?song .
  ?producer rdfs:label ""Jeff Buckley""@en .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
609,63,val,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name ?author_birthplace ?governor_name ?governor_birthplace ?vince_award_winner_name ?vince_award_winner_birthplace
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?governor_birthplace .
  ?award_winner a dbpedia:Person ;
                    dbpedia:awarded ?vince_award .
  ?vince_gilligan a dbpedia:Person ;
                   dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?author rdfs:label ""Cece Bell""@en .
  ?politician rdfs:label ""Governor of Virginia""@en .
  ?vince_award_winner rdfs:label ""Vince Gilligan""@en .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
943,65,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Yeshaq I's parent (likely his father)
SELECT ?yeshaq_parent_name WHERE {
  ?yeshaq_I a dbpedia:Monarch ;
               dbpedia:parent ?yeshaq_parent .
}

# Step 2: Find Na'od's father
SELECT ?na_od_father_name WHERE {
  ?na_od a dbpedia:Person ;
           dbpedia:father ?na_od_father .
  FILTER (OPTIONAL (?na_od_father rdfs:label ""Yeshaq I"")) # Assuming Yeshaq I could be Na'od's father based on context
}

# Step 3: Link the two individuals through their parents
SELECT DISTINCT ?link WHERE {
  ?yeshaq_I a dbpedia:Monarch ;
              dbpedia:parent ?yeshaq_parent .
  ?na_od a dbpedia:Person ;
           dbpedia:father ?na_od_father .
  ?yeshaq_parent dbpedia:parent ?link .
  ?link a dbpedia:Person . # Link should be a person
}

# Step 4: Identify Lamont Cranston's alter ego
SELECT ?alt_ego_name WHERE {
  ?lambert_cranton rdfs:label ""Lamont Cranston""@en;
                 dbpedia:alterEgo ?alt_ego .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
905,66,val,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?charles_father_parent_royalty ?charles_father_spouse
WHERE {
  ?charles IOfHungary a dbpedia:Monarch ;
              dbpedia:father ?charles_father .
  ?charles_father rdfs:label ?charles_father_name .
  ?charles_father_spouse a dbpedia:Person ;
                    dbpedia:spouseOf ?charles_father .
  ?charles_father_spouse rdfs:label ?charles_father_spouse_name
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,65,val,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_leader_name ?commander_office
WHERE {
  ?party_leader a dbpedia:Politician ;
                 dbpedia:memberOf dbpedia:Conservative_Party_(Spain) .
  ?party_leader rdfs:label ?party_leader_name .

  ?manuel_pinto_da_costa a dbpedia:Person ;
                        dbpedia:role [ dbpedia:in dbpedia:Event ; dbpedia:instanceOf [ dbpedia:hasName ""Portuguese Colonial War"" ] ;
                                     dbpedia:follows dbpedia:Portuguese_Carnation_Revolution] .
  ?manuel_pinto_da_costa rdfs:label ?manuel_pinto_da_costa_name .

  ?party_leader foaf:member ?manuel_pinto_da_costa .
  FILTER (regex(?manuel_pinto_da_costa_name, ""Manuel Pinto da Costa"")) .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
158,25,val,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?decedent_name ?decedent_birthplace 
WHERE { 
  ?decedent a dbpedia:Person ; 
  dbpedia:birthPlace ?decedent_birthplace . 
  ?decedent rdfs:label ?decedent_name . 
  OPTIONAL { ?decedent dbpedia:country ?italy } 
  OPTIONAL { ?decedent dbpedia:birthPlace <http://dbpedia.org/ontology/AdministrativeTerritory> ?russian_territory } 
  FILTER ( ?decedent_name = 'Sandro Bertaggia' ) 
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
628,64,val,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthName ""Ackquille Jean Pollard"" .
  ?artist rdfs:label ""Chance the Rapper"" .
  ?band a dbpedia:Band ;
         dbpedia:origin ""New York"" .
  ?band_member a dbpedia:Person ;
             dbpedia:role ""Band Member"" .
  ?band_member rdf:type [a dbpedia:Musician; rdfs:label ""Musical Artist""] .
  ?artist dbpedia:associatedBand ?band .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
386,25,val,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Assuming the 25th recipient is ""John Doe"" for this example
SELECT ?recipient_name ?recipient_birthplace
WHERE {
  ?recipient a dbpedia:Person ;
            rdfs:label ""John Doe""@en .
  ?recipient dbpedia:birthPlace ?recipient_birthplace
}

# Finding birth places of Elena Žalinkevičaitė-Petrauskienė and Alexander Lvovich Davydov
SELECT ?person_name ?person_birthplace
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?person dbpedia:birthPlace ?person_birthplace

  ?person a dbpedia:Person ;
           rdfs:label ""Alexander Lvovich Davydov""@en .
  ?person dbpedia:birthPlace ?person_birthplace
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
756,62,val,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?manager_name ?manager_position ?player_name ?player_club ?season_year ?team_name ?team_season
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?manager a dbpedia:Person ;
            dbpedia:role dbpedia:football_manager ;
            dbpedia:managedPlayer ?player .
  ?player a dbpedia:SportPerson ;
           dbpedia:club ?player_club .
  ?team a dbpedia:SportTeam ;
         dbpedia:season ?team_season ;
         dbpedia:league dbpedia:GermanSecondDivision .
  ?manager rdfs:label ?manager_name .
  ?player rdfs:label ?player_name .
  ?team rdfs:label ?team_name
}
```

This query will retrieve the required information by linking the individuals through their respective roles and relationships.",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
742,18,val,Give me the birthplace of the resident of Sofia and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?birthplace WHERE { 
?person a dbpedia:ResidentOf ; dbpedia:residence ?birthplace . 
?person2 a dbpedia:AlumnusOf ; dbpedia:alumniInstitution dbpedia:Plovdiv_University_Paisiy_Hilendarski ; dbpedia:birthPlace ?birthplace2 . 

# Sofia residents' birthplaces
?resident a dbpedia:ResidentOf ; dbpedia:residence dbo:Sofia_City ; dbpedia:birthPlace ?sofia_birthplace . 

# Alumni of Пловдивски университет ""Паисий Хилендарски"" birthplaces
?alumnus a dbpedia:Person ; dbpedia:birthPlace ?plovdiv_birthplace . 

# Combine results for the final answer
BIND(CONCAT(DISTINCT ?birthplace) AS ?combined_birthplaces)",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
203,64,val,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?military_force_royal_battle ?montgomery_award ?macarthur_event ?macarthur_war
WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:partOfMilitaryConflict dbpedia:AmericanRevolutionaryWar ;
            dbpedia:involvedMilitaryFleet ?military_force_royal_battle .
  ?award a dbpedia:KnightCommanderOfTheOrderOfTheBath ;
           rdfs:label ""Knight Commander of the Order of the Bath"" .
  ?montgomery rdfs:label ""Bernard Montgomery"" ;
            dbpedia:awarded ?award .
  ?macarthur a dbpedia:Person ;
            rdfs:label ""Douglas MacArthur"" ;
            dbpedia:partOfMilitaryConflict dbpedia:WorldWarII ;
            dbpedia:roleInMilitaryConflict ""Commander in the Pacific theater"" .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
143,18,val,"Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?musical_artist_name WHERE {
  ?tonto_dikeh a dbpedia:Person ;
               dbpedia:birthDate ""1985-04-25"" ;
               rdfs:label ""Tonto Dikeh""@en .
  ?movie a dbpedia:Film ;
           dbpedia:actor ?afeez_oyetoro .
  ?movie dbpedia:hasSoundtrack ?musical_artist
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
80,64,val,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?movie1_name ?book_name ?film_name
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?actor dbpedia:appearedIn ?movie1 .
  ?movie1 rdfs:label ?movie1_name .
  ?actor dbpedia:actedIn ?film .
  ?film rdfs:label ?film_name .
  ?book a dbpedia:Book ;
           rdfs:author ?author_name .
  ?author rdfs:label ?author_name .
  FILTER (regex(str(?film_name), ""ATL"") AND regex(str(?book_name), ""Smartbomb""))
}
```

This query looks for a person who has appeared in a movie titled ""ATL"" and acted in a film with the title ""Smartbomb"". It then checks if this person also fits the description of being involved in ""The Adventures of Sherlock Holmes"".",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
816,66,val,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer and parent of the child of the spouse of Mariclare Costello.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name 
WHERE { 
  ?actor a dbpedia:Person ; 
  dbpedia:roleInFilm [ dbpedia:filmTitle ?movie_title ] ; 
  dbpedia:parentOf ?child_of_photographer ; 
  dbpedia:spouseOf ?spouse_of_mariclare_costello . 
  ?child_of_photographer a dbpedia:Person ; 
  dbpedia:occupation dbpedia:Photographer . 
  ?spouse_of_mariclare_costello a dbpedia:Person ; 
  dbpedia:spouseOf ?mariclare_costello_spouse . 
  ?mariclare_costello_spouse a dbpedia:Person ; 
  dbpedia:role dbpedia:Spouse . 
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,62,val,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?commander_war ?commander_societal_role ?television_show
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:conflict dbpedia:Algerian_War ;
            foaf:father dbpedia:Ferdinand_II,_Holy_Roman_Emperor ;
            foaf:child ?child_of_ferdinand .
  ?child_of_ferdinand a dbpedia:Person ;
                 rdfs:label ?archduke_name .
  OPTIONAL { 
    ?commander dbo:hasTelevisionShow ?television_show .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,63,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?curran_artist_name ?clapton_band_name ?wilson_band_name ?wilson_artist_name
WHERE {
  ?curran a dbpedia:MusicalArtist ;
            rdfs:label ""Nicholas Michael Curran""@en .
  ?clapton dbpedia:bandMember some ?clapton_band_member .
  ?clapton_band_member a dbpedia:Band ;
                    rdfs:label ?clapton_band_name .
  ?wilson a dbpedia:Person ;
            rdfs:label ""Kim Wilson""@en .
  ?wilson dbpedia:bandMember some ?wilson_band_member .
  ?wilson_band_member a dbpedia:Band ;
                    rdfs:label ?wilson_band_name .
  ?curran foaf:member ?clapton .
  ?clapton foaf:member ?wilson
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
859,18,val,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun and associated musical artist of the associated musical artist of James Plotkin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members
WHERE {
  ?artist a dbpedia:Musician ;
            rdfs:label ""James Plotkin""@en .
  ?band a dbpedia:Band ;
         dbpedia:type dbpedia:MusicGroup ;
         dbpedia:associatedArtist ?artist .
  ?band rdfs:label ?band_name .
  ?band_members a dbpedia:Musician ;
              dbpedia:memberOf ?band .
}
```

This query does the following:
- Identifies James Plotkin as a musician.
- Finds bands associated with James Plotkin.
- Retrieves the band names and their members.",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
531,64,val,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_of_mariano_rajoy ?office_of_leader
WHERE {
  ?miguel_maura a dbpedia:Person ;
               dbpedia:birthDate ""1963-10-02"" ;
               dbpedia:party dbpedia:PártidoPopular ;
               dbpedia:memberOf dbpedia:Spanish_People's_Party ;
               rdfs:label ?full_name .
  ?mariano_rajoy a dbpedia:Person ;
               dbpedia:birthDate ""1960-06-27"" ;
               foaf:homepage <http://www.mariano-rajoy.eud/> ;
               rdfs:label ?full_name .
  ?office_of_mariano_rajoy a dbpedia:Office ;
                       dbpedia:officeHolder ?mariano_rajoy .
  ?office_of_leader a dbpedia:Office ;
                      dbpedia:officeHolder ?miguel_maura .
  ?office_of_leader rdfs:label ?office_of_leader_label
}
```

This query looks for individuals named Miguel Maura and Mariano Rajoy, identifies their party affiliation (PP), and then finds the offices they hold. It specifically searches for the office of Mariano Rajoy and the office of the leader of the PP.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
263,26,val,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent_name ?grandparent_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?child2 a dbpedia:Person ;
            rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
  ?child2 dbpedia:hasParent ?parent .
  ?parent rdfs:label ?grandparent_name .
  ?child2 dbpedia:birthPlace ?child_birthplace .
  ?grandparent a dbpedia:Person ;
               rdfs:label ?grandparent_name .
  ?grandparent dbpedia:birthPlace ?grandparent_birthplace
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
347,65,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?event_name ?tv_show_name
WHERE {
  ?regiment dbpedia:name ""2nd Dragoon Regiment (France)"" .
  ?regiment dbpedia:partOfEvent ?historical_event .
  ?historical_event a dbpedia:Event ;
                    dbpedia:type ""conflict"" .
  ?tv_show a dbpedia:TelevisionShow ;
             dbpedia:hasEpisode ?episode .
  ?episode dbpedia:mainCharacter ?character .
  ?character rdfs:label ""Archduke Charles Joseph of Austria"" .
  ?character rdfs:father ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:child ?archduke_rudolf .
  ?archduke_rudolf rdfs:label ""Archduke Rudolf of Austria"" .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
633,18,val,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of the father of Dorothea of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Royalty ; dbpedia:nobleTitle ""Noble Title"" .
  ?child rdfs:label ""Dorothea of Lorraine"" .
  ?parent rdfs:label ?parent_name .
  ?child rdfs:relationType ?spouse ;
                foaf:name ?spouse_name .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
557,8,train,"Give me the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://purl.org/dc/terms/>

SELECT ?actor_name ?award_name ?movie_title
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:hasWonAward ?award .
  ?award a dbpedia:Film_Award ;
          rdfs:label ?award_name .
  ?actor rdfs:label ?actor_name .
  ?movie a dbpedia:Film ;
           rdfs:title ?movie_title .
  ?actor dbpedia:appearedIn ?movie
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
23,18,train,Give me the party of the father of Sofía Petro and entity in Colombia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?party
WHERE {
  ?sophia_petro a dbpedia:Person ;
               dbpedia:parent ?father .
  ?father rdfs:label ?father_name .
  OPTIONAL { ?father dbpedia:politicalParty ?party }
  FILTER (lang(?father_name) = ""es"" )  # Assuming the father's name is in Spanish
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,45,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?artist_name WHERE {
  ?band dbpedia:genre ""Blues rock"" ;
            dbpedia:members [
              ?member a dbpedia:Musician ;
                         dbpedia:name ?artist_name
            ]
          .
  ?member rdfs:label ""Nick Curran""@en .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,9,train,Give me the professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor_name WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:role dbpedia:ActorInFilm ;
         dbpedia:film ""Rustlers' Rhapsody"" .
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
668,42,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","The SPARQL query structure has been provided above, which includes steps to identify individuals and extract their relevant details.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
87,3,train,"Give me the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?film_title WHERE {
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:ActorInFilm ; dbpedia:birthDate '1988-12-29' .
  ?actor rdfs:label ?actor_name .
  ?film a dbpedia:Film ; dbpedia:mainActor ?actor .
  ?actor rdfs:label ?actor_name .
  ?film rdfs:label ?film_title .
}
",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
628,23,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name WHERE {
  ?artist a dbpedia:MusicArtist ;
            dbpedia:associatedBandMember ?band_member .
  ?band_member a dbpedia:BandMember .
  ?artist rdfs:label ""GS9"" .
}
```",3,6,4,3,1,3,3,71,0,0,10,0,0.0,0
782,39,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?musical_artist_name WHERE {
  ?person1 a dbpedia:Musician ; dbpedia:band [ dbpedia:member ?band_member ] .
  ?band_member rdfs:label ?band_name .
  ?person2 a dbpedia:Musician ; dbpedia:band ?band_name .
  ?person1 ns:name ?person_name .
  ?person2 ns:name ?person_name .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,35,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president_name ?president_birthplace
WHERE {
  ?president a dbpedia:Politician ;
             dbpedia:party dbpedia:Spanish_Socialist_Workers'_Party ;
             dbpedia:office dbpedia:President_of_Galicia ;
             foaf:name ?president_name ;
             dbpedia:birthPlace ?president_birthplace
  FILTER (xsd:date(?president_date) >= ""2009-04-01""^^xsd:date)
}
```

This query looks for a politician who:
- Belongs to the Spanish Socialist Workers' Party (PSOE).
- Holds the office of President of Galicia.
- Is named and was in office around or after 2009.",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
80,52,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Actor of the album ""What You Know"" by T.I.
SELECT ?actor_name WHERE {
  ?album a dbpedia:MusicAlbum ;
           dbpedia:performer ?actor_name .
  ?album label ""What You Know"" .
}

# Movie with the author of ""Smartbomb""
SELECT ?movie_title ?director_name
WHERE {
  ?book a dbpedia:Book ;
           dbpedia:author ?author_name .
  ?movie a dbpedia:Film ;
            dbpedia:director ?director_name .
  ?book rdfs:label ""Smartbomb"" .
  ?movie rdfs:label ?movie_title .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
89,29,train,"Give me the predecessor of Myat Hpone Pyo and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_title WHERE {
  ?person a dbpedia:Person ;
  dbpedia:parent ?father ;
  dbpedia:sibling ?myat_hpone_pyo ;
  dbpedia:spouse ?spouse ;
  dbpedia:hasChild ?royalty_child

  ?father rdfs:label 'Saw Min Hla' .
  ?myat_hpone_pyo rdfs:label 'Myat Hpone Pyo' .
  ?spouse rdfs:label ?spouse_name .
  ?royalty_child rdfs:label ?royalty_name .
  ?royalty_title a dbpedia:RoyaltyTitle .
}
",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
39,44,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?shadow_name ?band_name
WHERE {
  ?person a dbpedia:Person ; dbpedia:name ?name .
  ?person rdfs:label 'Robert Lamar Thompson' .
  ?shadow a dbpedia:Character ; dbpedia:alterEgo ?shadow_name .
  ?shadow dbpedia:hasBand ?band_name .
  ?person owl:sameAs ?shadow
}
",5,6,6,2,3,3,3,71,0,0,3,0,0.0,0
628,16,train,"Give me the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist_name
WHERE {
  ?artist a dbpedia:Person ;
           dbpedia:birthPlace <http://dbpedia.org/ontology/BirthPlace#Florida> ;
           rdfs:label ?artist_name .
}
```",2,3,3,2,1,3,3,71,0,0,59,0,0.0,0
687,36,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player_name ?team_name
WHERE {
  ?player a dbpedia:Footballer ;
            dbpedia:hasClub ?team .
  ?team rdfs:label ?team_name .
  ?player foaf:givenName ""Juan Carlos"" .
  ?sarmiento a dbpedia:SoccerPlayer ;
             dbpedia:birthDate ?sarmiento_birth_date .
  ?sarmiento_birth_date match ?date .
  ?date match ?sarmiento_birth_date
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
293,52,train,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_member_name WHERE {
  dbpedia:South_Dakota_legislative_assembly rdfs:member ?party_member_name . 
  ?party_member_name a dbpedia:Politician ; dbpedia:political_party db:Republican_Party_of_South_Dakota .
}
",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
585,9,train,"Give me the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?award_name ?award_location
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:birthPlace ""New York, United States"" .
  ?awardee dbpedia:hasAward ?award .
  ?award a award:AmericanAward ;
          award:locatedIn ?award_location .
  ?award_location a award:Settlement
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
816,37,train,Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?child_name
WHERE {
  ?child a dbpedia:Person ;
           rdfs:label ""Doon Arbus""@en .
  ?child father ?parent_name .
  
  ?child a dbpedia:Person ;
           rdfs:label ""Eugène Cattin""@fr .
  ?child mother ?parent_name
}
```

This query looks for individuals labeled as ""Doon Arbus"" and ""Eugène Cattin"" in the DBpedia ontology, then retrieves their parents using the `father` and `mother` properties.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
39,40,train,Give me the professional in  and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?coke_studio_philippines
WHERE {
  ?musician a dbpedia:Musician ; dbpedia:name ""Bob Thompson"" .
  ?coke_studio_philippines a dbpedia:Television_Program ; dbpedia:name ""Coke Studio Philippines"" .
  ?musician dbpedia:workedWith ?producer_name .
  ?producer_name a dbpedia:Person
}",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
80,36,train,Give me the actor of Shelby Oaks and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?series dbpedia:hasMainCharacter ?character .
  ?character rdfs:label ""Shelby Oaks"" .
  ?actor a dbpedia:Actor ;
         dbpedia:appearedIn ?series .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
782,8,train,"Give me the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birthplace
WHERE {
  ?artist a dbpedia:Musician ;
           dbpedia:name ?artist_name .
  ?artist rdfs:label ""Nicholas Michael Curran""@en .
  ?artist dbpedia:birthPlace ?birthplace
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
816,7,train,Give me the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name
WHERE {
  ?mariclare a dbpedia:Person ;
             dbpedia:hasSpouse ?spouse .
  ?spouse a foaf:Person .
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  ?spouse rdfs:label ?spouse_name
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
941,7,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"SELECT ?child_name ?royalty_status
WHERE {
  ?duke a dbpedia:Person ;
         dbpedia:name ""Duke Anthony Ulrich of Brunswick"" ;
         dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ?parent_name .
  ?child a dbpedia:Person ;
            dbpedia:parent ?parent ;
            dbpedia:birthPlace ?child_birthplace ;
            rdfs:label ?child_name ;
            dbpedia:royaltyStatus ""yes"" .
  ?child rdfs:seeAlso ?royalty_details .
  FILTER (regex(str(?child_name), 'Anthony'))  # Ensure the child's name is Anthony
}",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
737,11,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?predecessor_name 
WHERE { 
  ?child a dbpedia:Person ; 
  dbpedia:parent ?parent ; 
  dbpedia:child ?child . 
  ?parent rdfs:label ?parent_name . 
  ?child rdfs:label ?child_name . 
  ?parent_name = 'Philipp Albrecht, Duke of Württemberg' 
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
737,14,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_status
WHERE {
  ?archduke a dbpedia:Person ; dbpedia:hasChild ?child1 .
  ?child1 a dbpedia:Person ; dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Royalty
}
",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
347,4,train,"Give me the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?battle_name ?television_show 
WHERE { 
  ?regiment a dbpedia:MilitaryUnit ; dbpedia:country France ; dbpedia:name ""2nd Dragoon Regiment"" . 
  ?battle a dbpedia:Event ; dbpedia:participatedIn ?regiment . 
  ?battle rdfs:label ?battle_name . 
  ?television_show a dbpedia:TelevisionShow ; dbpedia:hasEpisode ?episode . 
  ?episode rdfs:label ?television_show
}",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
38,11,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of Promise Me, Dad.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name
WHERE {
  ?work a dbpedia:WrittenWork ;
          dbpedia:author ?author .
  ?author rdfs:label ?author_name .
  ?work rdfs:label ""Promise Me, Dad"" .
  ?work dbpedia:subject ?subject .
  ?subject a dbpedia:Person ;
            rdfs:label ""Joe Biden"" .
}
```",3,7,4,2,2,3,2,20,0,0,1,0,0.0,0
756,29,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?club_name ?country_of_origin
WHERE {
  ?manager a dbpedia:SportsManager ; dbpedia:managed ?club .
  ?club a dbpedia:SportingClub ; rdfs:label ?club_name .
  ?manager rdfs:label ?manager_name .
  ?club dbpedia:basedLocation ?country_of_origin .
}
",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
492,11,train,Give me the death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?death_place
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:name ""Alain Delon"" ;
           dbpedia:deathPlace ?death_place .
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
557,14,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name WHERE {
  ?movie a dbpedia:Film ; dbpedia:mainActor ?actor .
  ?actor rdfs:label ?actor_name .
  ?actor_name ns:instance [ ns:name ""Janet Gaynor"" ] .
  ?movie rdfs:label ?movie_name .
  ?movie rdfs:subject [ ns:label ?producer_name ] .
}
",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
668,53,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}",6,6,7,3,3,3,3,71,0,782049,1,0.0,0.0,0
143,6,train,Give me the actor of The Campus Queen and associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?music_artist_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:productionCompany ""Cynthia Morgan"" .
  ?actor a dbpedia:Actor ;
         dbpedia:roleInMovie ?movie .
  ?music_artist a dbpedia:MusicArtist ;
               dbpedia:associatedWith ?actor .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
472,18,train,Give me the administration of the mayor of Duchy of Schleswig and administration of Christian IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?mayor_name ?mayor_administration ?christian_nine_name ?christian_reign 
WHERE { 
?mayor a dbpedia:OfficeHolder ; dbpedia:office ?mayor_administration . 
?christian_nine a dbpedia:Monarch ; dbpedia:reign ?christian_reign . 
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,15,train,"Give me the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia-fact: <http://dbpedia.org/ontology/fact>
PREFIX marvel: <http://marvel.fictionaluniverse.net/>

SELECT ?event_name WHERE {
  ?x a marvel:Character ;
         dbpedia-fact:name ""Triple X"" .
  ?x rdf:type marvel:Team .
  ?event a marvel:Event ;
          dbpedia-fact:name ?event_name .
  ?x dbpedia-fact:appearedIn ?event
}
```

This query looks for any events (marvel:Event) where the character with the name ""Triple X"" (identified by their Marvel type and name) appears. The `dbpedia-fact:appearedIn` property links the character to the event.",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
19,7,train,Give me the spouse of Carrie Johnson and professional in the birth name of John Boxer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spouse_name ?boxer_birthname 
WHERE { 
  ?person a dbpedia:Person ; 
  dbpedia:name ?name ; 
  dbpedia:birthName ?boxer_birthname . 
  ?person dbpedia:spouse ?spouse_name . 
  FILTER (?name = 'Carrie Johnson') . 
  FILTER (?boxer_birthname = 'John William Boxer') . 
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
386,24,train,Give me the war of the awardee of 25 and war of the awardee of Golden Sword for Bravery.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . }",,4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
557,25,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?producer_name WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:productionCompany ?producer_company .
  ?janet_gaynor_work a dbpedia:FilmWork ;
                    dbpedia:actor ?janet_gaynor .
  ?producer_company rdfs:label ?producer_name .
  FILTER (STRSTARTS(?producer_company, ""Hal"") OR STRSTARTS(?producer_company, ""Sam""))  # Searching for producers named Hal or Sam
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
386,14,train,Give me the entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?awardee_name ?awardee_empire ?award_details 
WHERE { 
  ?awardee a dbpedia:Person ; 
  dbpedia:birthDate ?awardee_birthdate; 
  dbpedia:deathDate ?awardee_deathdate . 
  OPTIONAL { ?awardee dbpedia:awardedBy ?awarder } 
  OPTIONAL { ?awarder rdfs:label ?award_details } 
  FILTER ( ?awardee_age = (STR(?awardee_birthdate) - STR(?awardee_deathdate)) AS ?awardee_age ) 
  AND (?awardee_age = '25') 
  AND ?awardee_empire = 'Russian Empire' 
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,2,train,Give me the father of Baeda Maryam I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name WHERE {
  ?ruler a dbpedia:Monarch ;
          dbpedia:monarchy_start ""Baeda Maryam I"" .
  ?ruler dbpedia:birthFather ?father_name .
  FILTER (lang(?ruler) = ""en"")  # Assuming English language for simplicity
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,22,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?vince_gilligan_birthplace ?author_name
WHERE {
  ?vince_gilligan a dbpedia:Person ;
                  dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:name ""Cece Bell"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,7,train,Give me the actor of High Society Blues.,SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:productionCompany ""20th Century Fox"" ;
            dbpedia:castMember ?actor_name .
  ?actor_name rdfs:label ?actor_name .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
347,29,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
              rdfs:label ""Ferdinand II, Holy Roman Emperor"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:birthPlace ?child_birthplace
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,58,train,"Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?gillmore_medal ?tracy_war ?deceased_person_name ?deceased_birthplace
WHERE {
  ?awardee dbpedia:awarded_Gillmore_Medal .
  ?tracy_war a dbpedia:War ;
               dbpedia:name ""American Civil War"" . # Assumption based on historical context
  ?deceased_person a dbpedia:Person ;
                    dbpedia:deathDate ""1850-08-05"" .
  ?deceased_person dbpedia:birthPlace ?deceased_birthplace .
  ?deceased_birthplace a dbpedia:Settlement ;
                       rdfs:label ?deceased_birthplace_label .
  FILTER (lang(?deceased_birthplace_label) = ""en"") . # Ensure the birthplace label is in English
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
198,34,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award_name ?recipient_name ?charleston_entity
WHERE {
  ?award a dbo:CongressionalHonor ;
            dbpedia:awardedTo ?recipient .
  ?recipient rdfs:label ?recipient_name .
  ?recipient geo:locatedIn dbpedia:Charleston, South Carolina .
  ?charleston_entity a dbpedia:Building , dbpedia:Landmark , dbpedia:HistoricSiteOrArea ;
                    dbpedia:locatedIn dbpedia:Charleston, South Carolina;
                    rdfs:label ?charleston_entity_name
  FILTER (?recipient_name = ?recipient)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
347,52,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?parent_relationships
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:hasParent ?parent1 .
  ?parent1 a dbpedia:Person ;
           rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?commander rdfs:child ?child .
  ?child a dbpedia:Person ;
          rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  OPTIONAL { 
    ?commander dbpedia:participatedInEvent dbpedia:Algerian_War . 
  }
}
```

This query looks for a person (`?commander`) who has a parent (`?parent1`) labeled as ""Ferdinand II, Holy Roman Emperor"" and who in turn has a child (`?child`) labeled as ""Ferdinand III, Holy Roman Emperor"". It also checks if the commander participated in the Algerian War using an OPTIONAL clause.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
159,54,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas and commander in Great Turkish War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","For the Russo-Polish War successor:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor_name ?successor_office WHERE {
  ?commander a dbpedia:Person ;
               dbpedia:conflict ""Russo-Polish War (1654–1667)"" .
  ?successor a dbpedia:Politician ;
              dbpedia:officeHolder ;
              dbpedia:succeeded ?commander .
}
```

For the writer of George Ducas' work and the Great Turkish War commander:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?writer_name ?commander_name WHERE {
  ?commander a dbpedia:Person ;
               dbpedia:conflict ""Great Turkish War"" .
  ?work a dbpedia:CreativeWork ;
           dbpedia:author ?writer_name ;
           dbpedia:about ?commander .
}
```

### Completed",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,16,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"Since the question involves understanding the context and relevance of the CBE award rather than retrieving specific numerical data, a SPARQL query might not be directly applicable in this case. However, if we were to formulate a query to understand more about the CBE and its recipients, it could look something like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award_name ?recipient_details
WHERE {
  ?award a dbpedia:HonoraryAward ;
           rdfs:label ""Commander of the Order of the British Empire""@en .
  ?recipient a dbpedia:Person ;
            rdfs:label ?recipient_name .
  OPTIONAL { ?award rdf:says ?recipient_details }
}
```

This query retrieves information about the ""Commander of the Order of the British Empire"" award and details about its recipients, which could provide context on why and for what services the award was given.",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
103,45,train,"Give me the professional in Actor and actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?alter_ego_name
WHERE {
  ?actor a dbpedia:Actor ;
           rdfs:label ?actor_name .
  ?alter_ego a dbpedia:ComicsCharacter ;
               appearsIn dbpedia:The_Shadow_Video_Game ;
               hasAlterEgo ?actor .
  ?actor ?alter_ego
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
905,5,train,Give me the spouse of Maria of Bytom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name
WHERE {
  ?maria a dbpedia:Person ;
           dbpedia:name ""Maria of Bytom"" ;
           dbpedia:birthPlace ""Bytom, Poland"" .
  ?maria foaf:spouse ?spouse_name .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,59,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birth_name
WHERE {
  ?album a dbpedia:MusicAlbum ;
         dbpedia:performer ?artist_name .
  ?artist_name rdfs:label ?artist_name .
  ?person a dbpedia:Person ;
           dbpedia:name ?birth_name .
  ?artist_name dbr:is_identified_by ?person .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
756,1,train,Give me the native of West Germany.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ""Germany""^^xsd:string .
  ?person rdfs:label ?person_name .
}
```",1,1,2,1,1,3,3,71,0,0,5170,0,0.0,0
472,17,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of Olaf I of Denmark.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_administration
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?administration .
  ?person rdfs:label ?name
}
```

This query will return the name and birthplace (which corresponds to the administrative region) of each person queried.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,11,train,"Give me the player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?athlete_name ?birthdate 
WHERE { 
?athlete a dbpedia:Athlete ; 
  dbpedia:birthdate ?birthdate . 
?birthdate rdfs:datatype xsd:date. 
FILTER (xsd:date(?birthdate) = '1955-02-22') . 
}",2,3,3,2,1,3,3,71,0,0,18,0,0.0,0
943,60,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_parent ?commander_name ?commander_role ?royalty_child_name ?office_holder_name 
WHERE { 
  ?royalty a dbpedia:Royalty ; 
  dbpedia:parent ?royalty_parent . 
  ?commander a dbpedia:Commander ; 
  dbpedia:role ?commander_role . 
  ?royalty rdfs:father ?commander . 
  ?royalty_child a dbpedia:Person ; 
  dbpedia:parent ?royalty_child_parent . 
  ?office_holder a dbpedia:OfficeHolder ; 
  dbpedia:child ?office_holder_child . 
  ?office_holder_child rdfs:father ?royalty_child . 
  ?royalty_name rdfs:label ?royalty_name . 
  ?commander_name rdfs:label ?commander_name . 
  ?royalty_child_name rdfs:label ?royalty_child_name . 
  ?office_holder_name rdfs:label ?office_holder_name 
}
",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,31,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace ?artist_name ?band_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  ?band a dbpedia:Band ;
           dbpedia:members ?person ;
           rdfs:label ?band_name .
  ?artist a dbpedia:Artist ;
            dbpedia:musicalGenre ""Jazz"" ;
            rdfs:label ?artist_name .
  ?band ns:member ?artist .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
225,13,train,Give me the entity in the region of the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity_name ?location_name
WHERE {
  ?location a dbpedia:Location ;
            dbpedia:timeZone ""Asia/Kiyosu"" .
  ?entity a dbpedia:Person ;
           dbpedia:birthPlace ?location_name .
}
```",3,3,4,3,1,3,2,20,0,0,8916,0,0.0,0
816,31,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/property/starring> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?parent_name
WHERE {
  ?actor a dbpedia:Person ; dbpedia:birthPlace los angeles ; dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parent_name .
  ?actor dbpedia:role [ dbpedia:inFilm ?movie ] .
  ?movie rdfs:label ?movie_title
}
",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,34,train,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?successor_name ?commander_role ?successor_role 
WHERE { 
  ?commander a dbpedia:Person ; 
    dbpedia:role dbpedia:Commander ; 
    dbpedia:conflict dbpedia:Great_Turkish_War . 
  ?commander rdfs:label ?commander_name . 
  ?successor a dbpedia:Person ; 
    dbpedia:role ?successor_role . 
  ?successor rdfs:label ?successor_name . 
}",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
492,15,train,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?sal_mineo_death_place ?actor_death_place
WHERE {
  ?sal_mineo a dbpedia:Person ;
               dbpedia:deathPlace ?sal_mineo_death_place .
  ?actor a dbpedia:Person ;
           rdfs:label ""The Sky Ranger (1928 film actor)""@en ;
           dbpedia:deathPlace ?actor_death_place
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,0,train,Give me the reference to Mitaka.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX ns1: <http://purl.org/dc/elements/1.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?mitaka
WHERE {
  ?mitaka a dbpedia:Village ;
            dbpedia:locatedInJapan .
  ?mitaka ns1:hasAlternateName ""Mitaka"" .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
492,24,train,Give me the death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_deathplace
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?actor dbpedia:deathPlace ?actor_deathplace .
}
```",4,4,5,2,2,2,3,28,1,345090,0,2.8977863809835668e-06,1.0,5.79555596768398e-06
293,41,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace ?spouse_name
WHERE {
  ?person a dbpedia:Person ;
    dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  ?person dbpprop:partyMemberOf dbpedia:DemocraticParty ;
    dbpprop:spouse ?spouse_name .
  ?spouse a dbpedia:Person ;
    dbpedia:birthPlace ?birthplace .
  ?spouse rdfs:label ?spouse_name .
  ?person ns:father ?actor_name .
  ?actor a dbpedia:Person ;
    dbpedia:role dbpedia:Actor ;
    dbpedia:film '1,000 Dollars a Minute' .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
706,0,train,Give me the birthplace of Ebrahim Alkazi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthplace WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Ebrahim Alkazi""
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
557,20,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer_name
WHERE {
  ?writer a dbpedia:Person ;
            dbpedia:birthDate ""1936-08-14"" ; # Example birth date for Cora Sue Collins
            dbpedia:name ""Cora Sue Collins"" .
  ?work a dbpedia:CreativeWork ;
         dbpedia:isBasedOnContent ?writer ;
         dbpedia:creator ?producer .
  ?producer a foaf:Person .
}
```

This query looks for a person (the producer) who created a work that is based on content by Cora Sue Collins. It uses the `dbpedia:creator` property to link the creative work back to the producer, and it assumes that the producer is a person as indicated by the `foaf:Person` type. The birth date of Cora Sue Collins is used as a specific identifier for her, though in practice, you might need to adjust this based on more precise data.

Please note that the actual query execution would require access to the DBpedia endpoint and proper handling of dates and names, which may vary. This example provides a structured approach to formulating such a query.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,51,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontologies/award/>

SELECT ?person_name ?birth_place
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathDate ""1850-08-05"" .
  ?person award:awardedAward award:Gillmore_Medal .
  ?person rdfs:label ?person_name .
  ?person dbpedia:birthPlace ?birth_place .
  FILTER (lang(?birth_place) = ""en"" AND datatypeOF(?birth_place) = owl:QLiteral)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
68,1,train,"Give me the child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name WHERE {
  ?emperor a dbpedia:Monarch ; dbpedia:monarchy dbpedia:Holy_Roman_Empire ; dbpedia:children ?child_name .
  ?child_name rdfs:label ?child_name .
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
398,3,train,Give me the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?nickname
WHERE {
  ?team a dbpedia:SportsTeam ;
          dbpedia:sport dbpedia:Soccer ;
          dbpedia:nationalTeam ?team_name .
  ?team_name rdfs:label ?nickname
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
585,10,train,Give me the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_profession
WHERE {
  ?actor a dbpedia:Person ;
         rdfs:label ?actor_name .
  ?actor dbpedia:occupation ?actor_profession .
  FILTER (lang(?actor_name) = ""en"")  # Only consider English names
}
```",2,2,3,2,1,3,2,20,0,548539,19241,0.0,0.0,0
472,12,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?king_name ?king_reign ?administration_territory 
WHERE { 
  ?king a dbpedia:Monarch ; 
  dbpedia:monarchyName ?king_reign . 
  ?king dbpedia:capital ?administration_territory . 
  SERVICE wikibase:label { 
    bd:entity ?k . 
    wdt:P31 ?k ?king . 
  } 
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
905,22,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_child_birthplace
WHERE {
  ?royalty_child a dbpedia:Person ;
               dbpedia:birthPlace ?royalty_child_birthplace .
  ?bela_IV_dbpedia:children ?child1, ?child2, ... .
  OPTIONAL { ?child1 a dbpedia:Royalty }
  OPTIONAL { ?child2 a dbpedia:Royalty }
  # Assuming Béla IV had at least one child who could be considered royalty
  FILTER (some ?child in (?child1, ?child2) WHERE { ?child a dbpedia:Person; dbpedia:birthPlace <urn:uuid:1234567890abcdef> } )
  # Replace <urn:uuid:1234567890abcdef> with an actual birth place URI if available
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
595,30,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },,4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
103,4,train,"Give me the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?movie_title WHERE {
  ?movie a dbpedia:Film ;
         dbpedia:actor ?actor .
  ?actor rdfs:label ""Richard E. Grant"" .
  FILTER (regex(?movie, ""television show"")) 
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
595,38,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for books authored by Bill Clinton (assuming there might be works like biographies)
SELECT ?book_title ?author_name WHERE {
  ?book a dbpedia:Book ;
         dbpedia:author ?author .
  ?author rdfs:label ""Bill Clinton""@en .
  FILTER (?book != ?author)  # Ensure the author is different from the book title
}

# Query for a disease that was a societal event in the United States Navy
SELECT ?disease_name WHERE {
  ?event a dbpedia:Event ;
           dbpedia:type ""societal"" ;
           dbpedia:occursIn ?location .
  ?location rdfs:label ""United States Navy""@en .
  ?event rdfs:label ?disease_name
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
737,59,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_title
WHERE {
  ?x a dbpedia:Person ; dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ; dbpedia:child ?child_of_x .
  ?child_of_x a dbpedia:Royalty ; dbpedia:title ?royalty_title .
  ?y a dbpedia:Spouse ; dbpedia:spouseOf ?archduchess_helena .
  ?archduchess_helena a dbpedia:Person ; dbpedia:child ?child_of_archduchess .
  ?child_of_x rdfs:label ?royalty_name .
  ?child_of_archduchess rdfs:label ?royalty_name
}
",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,33,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title ?politician_status
WHERE {
  ?earl_of_derby a dbpedia:Person ;
               dbpedia:birthDate ""1822-10-29"" ;
               dbpedia:deathDate ""1908-10-09"" ;
               dbpedia:officeHolder dbpedia:Office_Holder ;
               rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?earl_of_derby dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:birthDate ?parent_birthDate ;
          rdfs:label ?parent_name .
  ?parent rdfs:label ?parent_title
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,10,train,Give me the spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?charles_spouse_name ?ladislaus_IV_name ?ladislaus_IV_birthplace
WHERE {
  ?charles a dbpedia:Monarch ;
            dbpedia:monarchy ""Charles II of Naples"" .
  ?charles foaf:spouse ?charles_spouse .
  ?charles_spouse a dbpedia:Person ;
               dbpedia:name ?charles_spouse_name .
  
  ?stephen a dbpedia:Monarch ;
            dbpedia:monarchy ""Stephen V of Hungary"" .
  ?stephen foaf:child ?ladislaus_IV .
  ?ladislaus_IV a dbpedia:Person ;
              dbpedia:name ?ladislaus_IV_name ;
              dbpedia:birthPlace ?ladislaus_IV_birthplace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,10,train,Who is the awardee of the reference to Nobel Prize in Physics?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?awardee_name 
WHERE { 
  ?award a dbpedia:Nobel_Prize ; 
  dbpedia:category ?award_category . 
  ?award_category rdfs:label ?award_label . 
  FILTER (lang(?award_label) = 'en') 
  ?awardee a dbpedia:Person ; 
  dbpedia:awardedPrize ?award . 
}",2,2,3,2,1,3,2,20,0,0,31,0,0.0,0
414,1,train,Give me the award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nobelprize: <http://dbpedia.org/ontology/NobelPrize>

SELECT ?award_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:winNobelPrize ?nobel_prize .
  ?nobel_prize rdfs:label ?award_name
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
361,13,train,Give me the professional in the profession of Frédéric Bouraly and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?politician_name ?politician_role ?other_politician_name ?other_politician_role
WHERE {
  ?politician a dbpedia:Politician ;
             dbpedia:role dbpedia:Minister_for_Foreign_Affairs .
  ?other_politician a dbpedia:Politician ;
                  dbpedia:role [ rdf:type foaf:Role ; rdfs:label ""Minister"" ] .
  ?politician rdfs:label ?politician_name .
  ?other_politician rdfs:label ?other_politician_name
}
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
943,13,train,Give me the reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name WHERE {
  ?character a dbpedia:ComicBookCharacter ;
               dbpedia:hasAlterEgo ?alter_ego .
  ?alter_ego rdfs:label ?alter_ego_name
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
89,37,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_father_name ?royalty_spouse_name
WHERE {
  ?royalty_child a dbpedia:Person ;
                 dbpedia:parent ?royalty_father .
  ?royalty_father a dbpedia:Person ;
                  rdfs:label ""Saw Shwe Khet's Father"" ;  # Placeholder for the actual name
                  dbpedia:birthPlace ?royalty_birthplace .  # Placeholder for the actual birth place
  ?royalty_spouse a dbpedia:Person ;
                 dbpedia:spouseOf ?royalty_father ;
                 rdfs:label ""Spouse of Saw Shwe Khet's Father"" .  # Placeholder for the actual name
}
```

This query aims to find:
- `?royalty_father_name`: The label (name) of Saw Shwe Khet's father.
- `?royalty_spouse_name`: The label (name) of the spouse of Saw Shwe Khet's father.

### Completed",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
557,29,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director_name ?producer_name
WHERE {
  ?director a dbpedia:Film_Director ;
             dbpedia:directed Film:A_Star_Is_Born_(1937_film) .
  ?film a dbpedia:Film ;
           dbpedia:producer ?producer .
  ?producer a foaf:Person .
  ?director rdfs:label ?director_name .
  ?producer rdfs:label ?producer_name
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
23,7,train,Give me the party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?gustavo_petro_party ?roy_barreras_party
WHERE {
  ?gustavo_petro a dbpedia:Person ;
               dbpedia:name ""Gustavo Petro"" ;
               dbpedia:party ?gustavo_petro_party .
  ?roy_barreras a dbpedia:Person ;
                dbpedia:name ""Roy Barreras"" ;
                dbpedia:party ?roy_barreras_party
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
249,1,train,Give me the native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality ""Indian"" .
  ?person foaf:name ?person_name .
  OPTIONAL { ?person dbpedia:birthPlace ?birthplace }
}
```",1,1,2,1,1,2,2,9,0,0,8977,0,0.0,0
353,2,train,"Give me the child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name WHERE {
  ?queen a dbpedia:Person ;
   dbpedia:birthDate ""1207-07-30"" ;
   dbpedia:deathDate ""1282-08-06"" ;
   dbpedia:spouse ?husband .
  ?husband a dbpedia:Person ;
   dbpedia:name ""Frederick II of Hohenstaufen"" .
  ?queen foaf:children ?child .
  ?child a dbpedia:Person
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
816,11,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviedb: <http://www.moviedb.org schema/>

SELECT ?actor_name WHERE {
  ?movie a moviedb:Film ;
            dbpedia:mainActor ?actor .
  ?movie dbpedia:star ?actor_name .
  FILTER ( ?actor = ""Herschel Bernardi"" )
}
```",2,3,3,2,1,3,3,71,0,0,67,0,0.0,0
737,54,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:name ""Alexander of Württemberg""^^xsd:string ;
               dbpedia:birthDate ""1804-07-25""^^xsd:date .
  ?child rdfs:label ?child_name .
  ?child dbpedia:birthPlace ?child_birthplace .
  FILTER (str(?child_name) = ""Otto"")  # Replace with actual child name
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
119,33,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?office_name ?residence_country 
WHERE { 
  ?politician a dbpedia:OfficeHolder ; 
  dbpedia:officeHolderOffice ?office_name . 
  ?person a dbpedia:Person ; 
  dbpedia:nationality dbpedia:Spanish_Spain ; 
  dbpedia:countryOfBirth ?residence_country . 
  ?politician rdf:type dbpedia:Politician . 
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
213,12,train,Give me the country of the work of Lao She and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v0 <http://dbpedia.org/ontology/country> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?work_country ?winston_birthplace 
WHERE { 
  ?work a dbpedia:CreativeWork ; dbpedia:author Lao She ; dbpedia:country ?work_country . 
  ?character a dbpedia:Person ; dbpedia:name ""Winston Chang"" ; dbpedia:birthPlace ?winston_birthplace . 
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,4,train,"Give me the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?event_name ?conflict_type 
WHERE {
  ?event a dbpedia:Event ; 
    dbpedia:type ?conflict_type .
  ?event rdfs:label ?event_name .
  ?conflict_type a owl:Class; rdfs:label ""Military Conflict"" .
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
742,11,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of Reneta Kamberova.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alumnus_name ?alumnus_birthplace ?reneta_kamberova_name ?reneta_kamberova_birthplace
WHERE {
  ?alumnus a dbpedia:Student ;
            dbpedia:university ""Plovdiv University 'Paisii Hilendarski'"" .
  ?reneta_kamberova a dbpedia:Person ;
                    rdfs:label ""Reneta Kamberova"" .
  ?alumnus rdfs:label ?alumnus_name .
  ?reneta_kamberova rdfs:label ?reneta_kamberova_name
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
68,4,train,"Who is the commander, that is a royalty, in Siege of Padua?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_name ?royalty_title ?siege
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:birthDate ?royalty_birthdate .
  ?royalty rdfs:label ?royalty_name .
  ?royalty foaf:name ?royalty_name .
  ?siege a dbpedia:Siege ;
           dbpedia:start_date ""1405-04-05""^^xsd:date .
  ?royalty dbpedia:participatedIn ?siege .
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
59,5,train,Give me the native of the residence of David Luckman.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?character_name ?character_birthplace
WHERE {
  ?character a dbpedia:Person ;
             rdfs:label ""David Luckman""@en .
  ?character dbpedia:birthPlace ?character_birthplace .
}
```",2,2,3,2,1,2,2,9,0,1,971,0.0,0.0,0
347,42,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?regiment ?societal_event ?event_tv_show 
WHERE { 
  ?commander a dbpedia:Person ; 
  dbpedia:militaryRole dbpedia:CommanderOfUnit ; 
  dbpedia:birthFather dbpedia:Eleonore_of_Austria_Queen_of_Poland ; 
  dbpedia:mother dbpedia:Cecilia_Renata_of_Austria ; 
  ?regiment rdfs:label '2nd Dragoon Regiment' . 
  ?commander dbpedia:participatedInEvent ?societal_event . 
  ?event rdfs:label ?event_name . 
  ?event tv_show ?event_tv_show . 
}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
103,49,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Actor ;
           rdfs:label ?actor_name ;
           dbpedia:appearances [ 
             a dbpedia:Film;
             dbpedia:title ""The Shadow (video game)"" ] .
  ?actor dbpedia:television_appearances [ 
    a dbpedia:TelevisionSeriesRole;
    dbpedia:series ""The Shadow"" ] .
  ?actor dbpedia:castMember [ 
    a dbpedia:FilmCharacter ;
    dbpedia:basedOn [ a dbpedia:ComicsCharacter; rdfs:label ?comics_character_name ]
  ] .
  ?actor rdfs:seeAlso <http://www.imdb.com/name/N0000384/> .  # Richard E. Grant's IMDB page
}
```",5,7,6,3,2,3,3,71,0,0,13,0,0.0,0
103,9,train,Give me the actor of Dispatches from Elsewhere and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_profession
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:occupation ?actor_profession .
  ?actor rdfs:label ?actor_name .
}
```",2,2,3,1,2,3,3,71,0,548539,1,0.0,0.0,0
731,14,train,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_birthday
WHERE {
  ?battle a dbpedia:Event ;
            dbpedia:type ""military conflict"";
            dbpedia:participatedIn ?event .
  ?battle rdfs:label ""Sinking of the Prince of Wales and Repulse""@en .
  ?commander a dbpedia:Person ;
            dbpedia:birthDate ?commander_birthday .
  ?commander rdfs:label ?commander_name .
  FILTER ( ?battle = ?event )
}
```",3,5,4,3,1,3,2,20,0,0,12,0,0.0,0
39,0,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?singer_name ?singer_profession
WHERE {
  ?singer a dbpedia:Singer ;
           dbpedia:occupation ?singer_profession .
  ?singer rdfs:label ?singer_name
}
```",1,1,2,1,1,3,3,71,0,0,10364,0,0.0,0
89,42,train,Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
    dbpedia:parent ?parent;
    dbpedia:birthPlace ?child_birthplace .
  ?parent rdfs:label ?parent_name .
  ?parent rdf:type dbpedia:Person ;
    dbpedia:name ?parent_name .
  ?child rdfs:label ?child_name .
  ?parent = ?saw_shwe_khet
}
",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
668,54,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name ?musical_artist_birthplace
WHERE {
  ?writer1 a dbpedia:Person ;
           dbpedia:name ""Elorm Kabu Amenyah"" ;
           dbpedia:role dbpedia:Musician .
  ?writer2 a dbpedia:Person ;
           dbpedia:name ""Darryl Paa Kwesi Bannerman-Martin"" ;
           dbpedia:role dbpedia:Musician .
  ?writer1 foaf:knows ?musical_artist .
  ?writer2 foaf:knows ?musical_artist .
}
```

This query looks for individuals with the names Elorm Kabu Amenyah and Darryl Paa Kwesi Bannerman-Martin, identifies them as musicians (their roles), and then connects these writers to their respective musical artists through the `foaf:knows` relationship.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,5,train,"Give me the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?office_holder_name ?residence
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolder ?office_holder .
  ?politician dbpedia:birthPlace ?politician_birthplace .
  ?office_holder dbpedia:birthPlace ?office_holder_birthplace .
  ?politician rdfs:label ?politician_name .
  ?office_holder rdfs:label ?office_holder_name .
  ?residence a dbpedia:Residence ;
              dbpedia:location ?residence_location .
  ?politician dbpedia:residence ?residence .
  ?residence_location ns:locatedIn <http://dbpedia.org/ontology/Place> Chappaqua, New York
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
943,47,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name ?royalty_child_name
WHERE {
  ?lambert_cranston a dbpedia:Character ;
                  dbpedia:alterEgo ?alter_ego_name .
  ?yeshaq_I a dbpedia:Person ;
               dbpedia:parent ?parent_of_yeshaq .
  ?parent_of_yeshaq a dbpedia:Person ;
                    dbpedia:child ?royalty_child .
  ?royalty_child rdfs:label ?royalty_child_name
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
706,7,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:awardRecipientOf dbpedia:SangeetNatakAkademiFellowship .
  ?awardee rdfs:label ?awardee_name .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
782,55,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:name ""Nicholas Michael Curran""@en ;
            dbpedia:realName ?realName .
  ?realName a dbpedia:Artist .
  ?band a dbpedia:Band ;
           dbpedia:name ?band_name .
  ?band a dbpedia:MusicGroup ;
          dbpedia:hasMember ?person .
  ?person rdfs:label ?artist_name
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
198,59,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?recipient_name ?awards ?contribution
WHERE {
  ?recipient a dbpedia:Person ;
            dbpedia:award [ a dbpedia:Award; rdfs:label ""Quincy Adams Gillmore Award"" ] .
  ?recipient a dbpedia:Person ;
            dbpedia:award [ a dbpedia:Award; rdfs:label ""Pulitzer Prize in History"" ] .
  ?recipient rdfs:label ?recipient_name .
  OPTIONAL { ?recipient dbpedia:hasContribution ?contribution }
  FILTER (lang(?contribution) = ""en"")  # Filter for English contributions
}
```

This query looks for individuals who have received either the Quincy Adams Gillmore Award or the Pulitzer Prize in History. It retrieves their names and optionally their contributions (in English).",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
119,41,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country_name ?leader_office_2009
WHERE {
  ?ÁlvaroQuirós a dbpedia:resides ;
                dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?country_name .

  ?election a dbpedia:Election ;
             dbpedia:region ""Galicia, Spain"" ;
             dbpedia:year 2009 ;
             dbpedia:winner ?leader_office_2009 .

  ?Santiago_de_Compostela a dbpedia:City ;
                         dbpedia:locatedIn ?country_name .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,56,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?regiment_name ?military_force_name
WHERE {
  ?awardee a dbpedia:Person ;
            rdfs:label ?awardee_name .
  ?battle a dbpedia:Event ;
             dbpedia:conflict ""American Revolutionary War"" ;
             dbpedia:outcome ""British victory"" .
  ?regiment a dbpedia:MilitaryUnit ;
            rdfs:label ?regiment_name ;
            dbpedia:participatedIn ?battle .
  ?military_force a dbpedia:MilitaryForce ;
                rdfs:label ?military_force_name ;
                dbpedia:associatedWith ?regiment .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
38,17,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?author_name ?work_name 
WHERE { 
  ?book a dbpedia:WrittenWork ; dbpedia:title 'Promises to Keep' . 
  ?author a dbpedia:Person ; dbpedia:givenName 'Joe' ; dbpedia:role dbpedia:VicePresident_of_the_United_States . 
  ?commander a dbpedia:OfficeHolder ; dbpedia:office dbpedia:Supreme_Commander_Allied_Powers ; dbpedia:conflict dbpedia:Korean_War . 
  ?author rdfs:label ?author_name . 
  ?commander rdfs:label ?commander_name . 
}",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
731,9,train,Who is the awardee of the award of Edmund Hakewill-Smith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award_name ?awardee
WHERE {
  ?award a dbpedia:Award ;
           rdfs:label ?award_name .
  ?awardee a dbpedia:Person ;
          rdfs:label ?awardee_name .
  ?award dbpedia:isNamedAfter ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,3570,0,0.0,0
203,17,train,"Give me the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?awardee_name ?awardee_contribution ?societal_impact 
WHERE { 
?awardee a dbpedia:Person ; 
  dbpedia:awardRecipientOf dbpedia:Knight_Commander_of_the_Order_of_the_Bath . 
?awardee rdfs:label ?awardee_name . 
?awardee dbpedia:contribution ?awardee_contribution . 
?societal_impact a dbpedia:SocietalEvent ; 
  dbpedia:triggeredBy ?awardee_contribution . 
?societal_impact rdfs:label ?societal_impact_name
}
",2,4,3,2,1,3,3,71,0,0,298,0,0.0,0
859,17,train,"Give me the band member of Human Remains (band) and associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },,4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
258,3,train,Give me the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?foundingDate
WHERE {
  ?university a dbpedia:University ;
               dbpedia:founder ?founder ;
               dbpedia:founded ?foundingDate .
  ?university rdfs:label ""Federal University of Paraíba""@pt.
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,59,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war_name ?commander_name
WHERE {
  ?war a dbpedia:MilitaryConflict ;
         dbpedia:startYear ?war_start_year .
  ?commander a dbpedia:Person ;
             dbpedia:name ""William Bayne"" ;
             rdfs:label ?commander_name .
  ?war rdfs:label ?war_name .
  ?commander foaf:nickname ""The Triple X's"" .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
386,13,train,Give me the war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?baggovut_war ?petrauskienete_birthplace
WHERE {
  ?baggovut a dbpedia:Person ;
            dbpedia:conflict ?war_name .
  ?war a dbpedia:War ;
         dbpedia:participatedIn ?war_name .
  ?petrauskienete a dbpedia:Person ;
            dbpedia:birthPlace ?petrauskienete_birthplace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,5,train,"Give me the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birth_date
WHERE {
  ?artist a dbpedia:Musician ;
           dbpedia:birthdate ?birth_date .
  ?birth_date rdfs:label ""1945-03-30"" .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
103,1,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?vince_gilligan_name ?vince_gilligan_profession 
WHERE { 
?vince_gilligan a dbpedia:Person ; 
  dbpedia:occupation ?vince_gilligan_profession . 
}",1,1,2,1,1,3,3,71,1,266877,21579,3.747030478345911e-06,4.633920296570899e-05,6.933418383265502e-06
871,11,train,Give me the parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_parent
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:awardRecipient [ owl:sameAs <http://dbpedia.org/ontology/Award> ] ;
            dbpedia:birthPlace ?awardee_birthplace .
  ?awardee dbpedia:parent ?awardee_parent
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
246,1,train,Give me the parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthDate ""1975-04-30"" ; # Assuming Omar bin Faisal was born on April 30, 1975
           dbpedia:givenName ""Omar"" ;
           dbpedia:surname ""bin Faisal"" .
  ?person dbpedia:parent ?father_name .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
468,4,train,Give me the parent of Martin of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?martin_of_aragon a dbpedia:Person ;
                    dbpedia:birthPlace <urn:locity:Aragon> .
  ?parent_of_martin a dbpedia:Person ;
                   dbpedia:child ?martin_of_aragon ;
                   dbpedia:birthPlace ?parent_birthplace .
  ?parent_of_martin rdfs:label ?parent_name .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
347,58,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_title ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name .
  ?child dbpedia:p father dbpedia:P ?father_name . # Assuming P is the property for parent
  ?father a dbpedia:Person ;
            dbpedia:parent ?child ;
            rdfs:label ?father_name .
  ?father rdfs:label ?father_name .
  FILTER (lang(?child_name) = ""de"" || lang(?child_name) = ""en"") . # Assuming the child's name language is German or English
  BIND (str(?child_birthplace) AS ?child_title) . # Bind the birthplace to get the title
}
```

This query looks for a person (`?child`) who:
- Is a child of someone (`?father`) identified as a parent (`dbpedia:p father ?father_name`).
- Has a birth place (`?child_birthplace`), which we aim to infer from their title.
- The child's name is in either German or English, considering the likely language of royalty during this period.

The `BIND` clause is used to extract the title from the inferred birth place, assuming that locations often associated with royalty can be mapped to titles (e.g., ""Prague"" might map to ""King of Bohemia"").",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
59,0,train,Give me the native of Bristol.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ""Bristol"" .
}
```",1,1,2,1,1,2,2,9,0,0,971,0,0.0,0
119,48,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?prime_minister_name ?prime_minister_tenure_start ?prime_minister_tenure_end 
WHERE { 
?prime_minister a dbpedia:Politician ; 
dbpedia:party dbpedia:Spanish_Socialist_Workers'_Party ; 
dbpedia:role dbpedia:Prime_Minister_of_Spain . 
?prime_minister rdfs:label ?prime_minister_name . 
?prime_minister dbpedia:tenure_start ?prime_minister_tenure_start . 
?prime_minister dbpedia:tenure_end ?prime_minister_tenure_end . 
FILTER ( ?prime_minister_tenure_start <= ?prime_minister_tenure_end ) 
}",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
119,17,train,"Give me the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX psoe: <http://dbpedia.org/ontology/PoliticalParty>
PREFIX spain: <http://dbpedia.org/ontology/Spain>

SELECT ?party_name ?administration
WHERE {
  ?party a psoe:PoliticalParty ;
            psoe:name ""Spanish Socialist Workers' Party"" .
  ?party sparql:memberOf spain:Government .
}
```",2,3,3,2,1,3,3,71,0,0,320,0,0.0,0
871,23,train,Give me the parent of the awardee of the award of Rodney Lees.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award_category WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:hasAwards [ a dbpedia:Award ; rdfs:label ""Rodney Lees Award"" ] .
  ?award a dbpedia:Award ;
          rdfs:label ?award_category
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
225,5,train,"Give me the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?awardee_nationality
WHERE {
  ?awardee a award:AwardWinner ;
            dbpedia:nationality ?awardee_nationality .
  ?awardee rdfs:label ?awardee_name .
  FILTER (?awardee_nationality = ""Japan"")
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
737,28,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?predecessor_name
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?father .
  ?father a dbpedia:Person ;
           rdfs:label ""Albrecht, Duke of Württemberg""@de .
  ?child rdfs:label ""Philipp Albrecht, Duke of Württemberg""@de .
  ?father dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person ;
               rdfs:label ?predecessor_name
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
737,2,train,Give me the child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?archduchess .
  ?archduchess rdfs:label ""Archduchess Margarete Sophie of Austria"" .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,8,train,Who is the author of El Deafo?,SELECT ?result WHERE { <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_name WHERE {
  ?author a dbpedia:Person ;
           dbpedia:name ?author_name ;
           dbpedia:isAuthorOf ""El Deafo"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
203,60,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?war_name ?military_force_name ?kcb_awardee_name
WHERE {
  ?war a dbpedia:War ;
         dbpedia:commander ?triple_x .
  ?military_force a dbpedia:MilitaryConflict ;
                    dbpedia:force ?military_force_name .
  ?kcb_awardee a dbpedia:Person ;
                 award:awardedAward dbpedia:KnightCommanderOfTheOrderOfTheBath .
  ?war rdfs:label ?war_name .
  ?military_force rdfs:label ?military_force_name .
  ?kcb_awardee rdfs:label ?kcb_awardee_name
}
```

This query will search for a war commanded by ""The Triple X"", the military force involved in that war, and the individual who received the Knight Commander of the Order of the Bath (KCB) as a result of or related to that conflict. The results will provide the names of these entities.",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
706,9,train,Who is the awardee of the reference to Sangeet Natak Akademi Fellowship?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://purl.org/dc/terms/>

SELECT ?awardee_name WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award dbpedia:SangeetNatakAkademiFellowship .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
557,9,train,Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?director_name ?producer_name
WHERE {
  ?film a dbpedia:Film ;
            dbpedia:productionCompany ?producer_company .
  ?producer_company rdfs:label ?producer_name .
  ?director a dbpedia:FilmDirector ;
             dbpedia:directed ?film .
  ?director rdfs:label ?director_name
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,25,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?grandfather_name
WHERE {
  ?naod a dbpedia:Person ;
         rdfs:label ""Na'od"" .
  ?naod dbpedia:father ?father .
  ?father a dbpedia:Person ;
          rdfs:label ?father_name ;
          dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person ;
             rdfs:label ?grandfather_name ;
             dbpedia:parent ?great_grandfather .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
158,10,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor_name ?governor_administration
WHERE {
  ?emperor a dbpedia:Monarch ;
            dbpedia:monarchyStart ""1855"" ;
            dbpedia:monarchyEnd ""1881"" .
  ?emperor rdfs:label ?emperor_name .
  ?emperor dbpedia:birthPlace ""Russia"" .
  ?governor a dbpedia:Politician ;
            dbpedia:officeHolder ""Grand Duke of Finland"" .
  ?governor rdfs:label ?governor_name
}
}",2,2,3,2,1,2,3,28,0,0,355,0,0.0,0
311,4,train,"Give me the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?album_name WHERE { ?album a dbpedia:Album ; dbpedia:artist ?artist . ?artist rdfs:label ?artist_name . FILTER ( ?artist_name = 'Sappy' ) },1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
859,1,train,Give me the associated musical artist of Phantomsmasher.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name WHERE {
  ?artist a dbpedia:Musician ;
           rdfs:label ""Phantomsmasher""@en .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
816,27,train,Give me the parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name ?spouse_birthplace ?child_name ?child_birthplace
WHERE {
  ?mariclare a dbpedia:Person ;
            dbpedia:birthPlace Ireland .
  ?mariclare dbpprop:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ;
           dbpedia:birthPlace ?spouse_birthplace .
  ?child a dbpedia:Person ;
           dbpedia:parent ?spouse ;
           dbpedia:birthPlace ?child_birthplace .
  ?spouse rdfs:label ?spouse_name .
  ?child rdfs:label ?child_name
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
737,13,train,Give me the child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?child_birthplace 
WHERE { 
  ?child a dbpedia:Person ; 
  dbpedia:parent ?parent . 
  ?parent a dbpedia:Person ; 
  rdfs:label ?parent_name ; 
  dbpedia:birthPlace ?child_birthplace . 
  ?parent_name = 'Duke Philipp of Württemberg' . 
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
295,5,train,Give me the birth place of Victor Saville.,SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:name ""Victor Saville"" ;
         dbpedia:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,25,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . },,3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
258,1,train,Give me the alma mater of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthDate ?birthdate ;
            dbpedia: nationality ""Italian"" ;
            dbpedia:office dbpedia:Minister_of_Finances_(Italy) ;
            foaf:education ?almaMater .
  ?person rdfs:label ""Eleonora Menicucci""@it.
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
414,14,train,Give me the award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nobelprize: <http://dbpedia.org/ontology/NobelPrizes>

SELECT ?noble_prize_winner_name ?awarded_title
WHERE {
  ?noble_prize_winner a dbpedia:Person ;
                    nobelprize:NobelPrizeInPhysics ?nobel_prize .
  ?nobel_prize rdfs:label ?awarded_title
}
```",3,3,4,3,1,3,2,20,0,0,87,0,0.0,0
39,60,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?producer_profession
WHERE {
  ?producer a dbpedia:Person ; dbpedia:occupation ?producer_profession .
  ?producer dbpedia:worksForOrganization dbpedia:Coke_Studio_Philippines .
  ?producer rdfs:label ?producer_name .
  ?artist a dbpedia:Musician ; dbpedia:name ?artist_name .
  ?artist_name string-match 'Bob Thompson' .
}
",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
609,1,train,Give me the birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
           dbpedia:birthPlace ?governor_birthplace .
  ?governor rdfs:label ""Glenn Youngkin"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,7,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?film_title
WHERE {
  ?film a dbpedia:Film ;
           dbpedia:title ?film_title .
  ?actor a dbpedia:Actor ;
          dbpedia:actIn ?film .
  ?film_title = ""Paradise (2013 film)"" .
  ?film_title = ""Always (1989 film)""
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
943,55,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?father_name ?office ?title WHERE { 
  ?father a dbpedia:Person ; dbpedia:parent ?yeshaq . 
  ?yeshaq a dbpedia:Person ; rdfs:label ""Yeshaq I"" . 
  ?father dbpedia:birthPlace ?birthplace . 
  ?father rdfs:label ?father_name . 
  ?office a dbpedia:Office ; rdfs:label ?office_label . 
  ?title a dbpedia:Royalty_Titles ; rdfs:label ?title_label . 
  ?father ?office ?title . 
}",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
816,42,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?parent_name WHERE {
  ?father a dbpedia:Person ; dbpedia:hasChild ?child .
  ?child a dbpedia:Person ; dbpedia:actor ?actor_in_movie .
  ?actor_in_movie rdfs:label 'Herschel Bernardi' .
  ?father rdfs:label ?parent_name .
}
",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,50,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?earl_of_derby a dbpedia:Person ;
               dbpedia:title ""17th Earl of Derby"" ;
               dbpedia:offices dbpedia:OfficeHolder ;
               dbpedia:child ?frederick_stanley .
  ?frederick_stanley a dbpedia:Person ;
                    dbpedia:title ""16th Earl of Derby"" ;
                    dbpedia:parent ?parent_name .
  ?parent_name rdfs:label ?parent_name .
  FILTER (lang(?parent_name) = ""en"")  # Assuming we are looking for the English title
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,23,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_name ?quintana_position
WHERE {
  ?quintana a dbpedia:OfficeHolder ;
             dbpedia:officeName ?office_name .
  ?quintana rdfs:label ""Anxo Quintana""@es.
}
```",3,4,4,3,1,3,3,71,0,0,34,0,0.0,0
347,45,train,"Give me the commander in Thirty Years' War and father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?commander_war_role ?father_of_eleonore_name ?maria_anna_bavaria_relationship
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:roleInThirtyYearsWar ""Commander"" .
  ?commander dbpedia:child ?eleonore .
  ?eleonore a dbpedia:Person ;
             dbpedia:birthDate ""1583-07-25"" ;
             dbpedia:father ?father_of_eleonore .
  ?father_of_eleonore a dbpedia:Person ;
                dbpedia:name ""Maximilian II, Holy Roman Emperor"" .
  ?maria_anna_bavaria foaf:child ?royalty_child .
  ?royalty_child a dbpedia:Person ;
               dbpedia:birthDate ""1574-07-25"" ;
               dbpedia:parent ?maria_anna_bavaria .
  ?maria_anna_bavaria rdfs:label ""Maria Anna of Bavaria"" .
}
```

### Completed
```plaintext",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
293,17,train,Give me the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name WHERE {
  ?character a dbpedia:Character ;
               dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parent_name
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
531,10,train,Give me the office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_name ?miguel_maura_name ?madrid
WHERE {
  ?miguel_maura a dbpedia:Person ;
                 dbpedia:name ""Miguel Maura"" .
  ?miguel_maura dbpedia:heldOffice ?office .
  ?office a dbpedia:PoliticalOffice ;
            dbpedia:officeHolder ?miguel_maura ;
            dbpedia:officeName ?office_name .
  ?office geonameIDOfPlaceShape ?madrid .
  ?madrid a dbpedia:CapitalOfCountry ;
          dbpedia:name ""Madrid""
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,1,train,Give me the parent of Kate Dimbleby.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?person rdfs:label ""Kate Dimbleby"" .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
263,2,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?earl a dbpedia:Person ;
         dbpedia:title ""15th Earl of Strathmore and Kinghorne"" .
  ?earl dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:title ?parent_title .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,51,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?parent_name
WHERE {
  ?spouse a dbpedia:Person ;
            dbpedia:hasSpouse ?partner .
  ?partner a dbpedia:Person ;
             rdfs:label ""Richard Roundtree""@en .
  ?parent a dbpedia:Person ;
           dbpedia:parentOf ?child .
  ?child a dbpedia:Person ;
            rdfs:label ""Tisha Sterling""@en .
  ?parent rdfs:label ?parent_name
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
943,49,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch ;
            rdfs:label ""Baeda Maryam I"" .
  ?child2 a dbpedia:Person ;
           dbpedia:parent ?parent2 .
  ?parent2 a dbpedia:Monarch ;
            rdfs:label ""Yeshaq I"" .
  ?child1 a dbpedia:Person ;
           dbpedia:parent ?child .
  ?child2 a dbpedia:Person ;
           dbpedia:parent ?child .
  ?child1 rdfs:label ""Ibrahim the Great"" .
  ?child2 rdfs:label ""Ibrahim the Great"" .
  ?grandfather a dbpedia:Person ;
             dbpedia:parent ?child .
  ?grandfather rdfs:label ?grandfather_name
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
89,53,train,Give me the child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_predecessor_name ?saw_shwe_khet_spouse_name
WHERE {
  ?minye_kyawswa a dbpedia:Person ; dbpedia:parent ?parent_of_minye_kyawswa .
  ?parent_of_minye_kyawswa a dbpedia:Person ; dbpedia:child ?child_of_minye_kyawswa .
  ?child_of_minye_kyawswa a dbpedia:Person ; dbpedia:parent ?saw_shwe_khet_predecessor .
  ?saw_shwe_khet a dbpedia:Person ; dbpedia:spouse ?saw_shwe_khet_spouse .
  ?child_of_minye_kyawswa rdfs:label ?child_name .
  ?saw_shwe_khet_predecessor rdfs:label ?child_predecessor_name .
  ?saw_shwe_khet_spouse rdfs:label ?saw_shwe_khet_spouse_name
}
",6,6,7,3,3,3,3,71,0,54113,1,0.0,0.0,0
723,1,train,Give me the band member of Stone Sour.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?member_name ?member_info
WHERE {
  ?band dbpedia:hasMember ?member .
  ?member a dbpedia:Musician ;
           dbpedia:name ?member_name ;
           dbpedia:associatedBand ?band .
  ?band rdfs:label ""Stone Sour"" .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
159,56,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?george_ducas_name ?george_ducas_political_office ?battle_of_vienna_show ?battle_of_vienna_event
WHERE {
  ?george_ducas a dbpedia:Person ;
               dbpedia:birthDate ""c. 1619"" ;
               dbpedia:deathDate ""1686"" ;
               dbpedia:role ""Commander in the Russo-Polish War (1654–1667)"" .
  ?george_ducas rdfs:label ?george_ducas_name .
  ?george_ducas dbpedia:polski_slepcy ?george_ducas_political_office .
  ?battle_of_vienna a dbpedia:Event ;
                 dbpedia:participatingSides ""Holy Roman Empire and allies, Ottoman Empire"" ;
                 dbpedia:location ""Vienna, Austria"" .
  ?battle_of_vienna_show a dbpedia:TelevisionShow ;
                       rdfs:label ?battle_of_vienna_show .
  ?battle_of_vienna_event a dbpedia:SocietalEvent ;
                      dbpedia:occurredInYear ""1683"" .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
89,57,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name WHERE {
  ?person a dbpedia:Person ;
    dbpedia:parent ?grandparent ;
    dbpedia:spouse ?spouse ;
    rdfs:label ?royalty_name .
  ?grandparent a dbpedia:Royalty .
}",6,8,7,3,3,3,3,71,0,6094,1,0.0,0.0,0
293,10,train,Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Harriette Arlene Lake"" ;
           dbpedia:politicalPartyMember dbpedia:RepublicanParty (United States)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
119,46,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_of_anxo_quintana ?country_of_álvaro_quirós
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:name ""Anxo Quintana""@es;
               dbpedia:birthPlace ""Galiza, Spain"" .
  ?person a dbpedia:Person ;
             rdfs:label ?name ;
             dbpedia:birthPlace ?country .
  ?politician dbpedia:holdsOffice ?office_of_anxo_quintana .
  ?person dbpedia:residesIn ?country_of_álvaro_quirós
}
```

This query looks for:
- A politician named ""Anxo Quintana"" born in Galiza, Spain.
- A person with the label (name) of Álvaro Quirós and a birth place indicating their country of residence.",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
384,1,train,Give me the party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX frq: <http://www.w3.org/2005/02/qanon#>
SELECT ?party_name WHERE {
  ?person a dbpedia:Politician ;
           dbpedia:birthPlace frq:Quebec .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = ""fr"")  # Ensure the name is in French
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
246,2,train,"Give me the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?princess a dbpedia:Person ;
            dbpedia:birthDate ""1975-04-30"" ;
            dbpedia:givenName ""Aisha"" ;
            dbpedia:surname ""bint Faisal"" ;
            dbpedia:parents [ ?parent a dbpedia:Person ; dbpedia:title ?parent_title ] .
  ?parent a dbpedia:Person ;
         dbpedia:title ?parent_title
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
295,4,train,Who is the producer of Storm in a Teacup (film)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?film_title
WHERE {
  ?film a dbpedia:Film ;
           dbpedia:productionCompany ?producer .
  ?producer rdfs:label ?producer_name .
  ?film rdfs:label ""Storm in a Teacup"" .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
159,48,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX frd: <http://www.w3.org/2002/07/owl#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?war_name ?television_show ?
         ?societal_event
WHERE {
  ?commander a dbpedia:Person ;
             rdfs:label ?commander_name ;
             dbpedia:pseudonym ?commander_pseudonym .
  ?war a frd:Event ;
         dbpedia:name ?war_name .
  ?television_show a frd:TelevisionShow ;
                    rdfs:label ?television_show .
  ?societal_event a frd:SocietalEvent ;
                    rdfs:label ?societal_event .
  ?commander foaf:appearsIn ?television_show .
  ?war dbpedia:startedAtTime ?start_time .
  ?war dbpedia:endTime ?end_time .
  ?societal_event dbpedia:occurredInLocation ?location .
  FILTER (regex(str(?start_time), ""1793"") AND regex(str(?end_time), ""1799""))
}
```

This query looks for individuals matching the description of a commander in the French Revolutionary Wars, featured in television shows. It also seeks societal events related to this period.",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
80,49,train,Give me the actor of the movie with  and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> """"@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainCharacter ?actor .
  ?actor rdfs:label ?actor_name .
  FILTER (STRSTARTS(?actor, ""Leonardo""))
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
756,40,train,"Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthplace ?managed_player_name ?managed_player_birthplace
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthPlace ?manager_birthplace .
  ?player a dbpedia:Person ;
             dbpedia:birthPlace ?player_birthplace .
  ?manager rdfs:label ?manager_name .
  ?player rdfs:label ?managed_player_name .
  ?manager dbpprop:managesTeam ?team .
  ?team a dbpedia:SportingEvent ;
          dbpedia:season ""2020-21"" ;
          dbpedia:league ""Eredivisie"" .
  ?player dbpprop:playedForTeam ?team .
  ?player rdfs:label ?managed_player_name .
  ?2007_VfL_Bochum a dbpedia:SportingEvent ;
               dbpedia:season ""2006-07"" ;
               dbpedia:league ""Deutscher Fußball Bund"" .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
943,19,train,"Give me the reference to  and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?yeshaq_i .
  ?child rdfs:label ?child_name .
  ?child dbpedia:predicate ""Royal"" .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
668,35,train,Give me the person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?joey_b_name ?elorm_amenyah_name ?elorm_amenyah_artist
WHERE {
  ?joey_b a dbpedia:Person ;
            dbpedia:name ""Joey B"" .
  ?elorm_amenyah a dbpedia:Person ;
                    dbpedia:name ""Elorm Kabu Amenyah"" .
  ?joey_b rdfs:label ?joey_b_name .
  ?elorm_amenyah rdfs:label ?elorm_amenyah_name .
  OPTIONAL {
    ?elorm_amenyah dbpprop:genre ?genre .
    FILTER (regex(?genre, ""music"")) }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
361,10,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?character_name ?character_profession
WHERE {
  ?character a dbpedia:Character ;
            rdfs:label ?character_name .
  OPTIONAL { ?character dbpedia:hasAlterEgo ?alter_ego }
  ?alter_ego rdfs:label ""The Shadow"" .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
103,36,train,"Give me the actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?actor dbpedia:roleInFilm ?role .
  ?role a dbpedia:ComicsCharacter ;
            dbpedia:appearsIn dbpedia:The_Shadow_(video_game)
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,5,train,"Give me the reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?mitaka_name WHERE {
  ?place a dbpedia:Location ;
           dbpedia:name ?mitaka_name ;
           dbpedia:parentCountry ""Japan"" ;
           dbpedia:administrativeDivisions [ dbpedia:hasPart ""Tokyo"" ]
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
295,14,train,Give me the native of the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name ?producer_birthplace 
WHERE { 
  ?film a dbpedia:Film ; 
    dbpedia:production_company ?producer . 
  ?producer a dbpedia:Person ; 
    dbpedia:birthPlace ?producer_birthplace . 
  ?film rdfs:label 'Storm in a Teacup' . 
}",3,3,4,3,1,3,2,20,0,0,4250,0,0.0,0
398,9,train,"Give me the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?nickname WHERE {
  ?player a dbpedia:Person ; dbpedia:name ?name .
  ?player dbpedia:playsFor dbpedia:FC Rostov .
  ?player rdfs:label ?nickname .
}",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
89,56,train,"Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?spouse_name ?child_name ?royalty_status ?min_hla_htut_predecessor
WHERE {
  ?saw_shwe_khet a dbpedia:Person ;
                 dbpedia:spouse ?spouse .
  ?spouse rdfs:label ?spouse_name .
  
  ?child a dbpedia:Person ;
            dbpedia:parent ?min_hla_htut ;
            dbpedia:birthPlace ?child_birthplace .
  
  ?child rdfs:label ?child_name .
  
  ?child a dbpedia:Royalty ; # Assuming royalty is a class in DBpedia
            dbpedia:predecessor ?min_hla_htut .
  
  ?min_hla_htut a dbpedia:Person ;
               rdfs:label ""Min Hla Htut"" . # Given name
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,9,train,Give me the native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthPlace ?manager_birthplace .
  ?manager rdfs:label ?manager_name .
  FILTER (lang(?manager_name) = ""de"" )  # Ensure manager's name is in German
  ?manager foaf:managedOrganization dbpedia:VfL_Bochum .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
293,26,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_spouse_name
WHERE {
  ?actor a dbo:Actor ; dbpedia:role dbo:LeadRoleInFilm ; dbo:filmProducedBy dbo:ProductionCompany
  ?actor dbo:hasSpouse ?actor_spouse
}
",3,4,4,3,1,3,3,71,0,0,62,0,0.0,0
89,50,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_spouse_name ?royalty_parent_name
WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?parent ; dbpedia:birthPlace ?child_birthplace .
  ?parent a dbpedia:Royalty ; dbpedia:name ?parent_name .
  ?child rdfs:father ?parent ; dbpedia:spouse ?royalty_spouse_name .
  ?royalty_spouse_name rdfs:label ?royalty_spouse_name
  ?parent rdfs:label ?parent_name
}
",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,4,train,Give me the party of Guillaume Peltier and party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"{
  ""politician_name"": [""Guillaume Peltier"", ""Bruno Retailleau""],
  ""party"": [""Liberal Party (Canada)"", ""Quebec Liberal Party""]
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
39,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name WHERE {
  ?character a dbpedia:ComicCharacter ;
               dbpedia:realName ?alter_ego_name .
  ?character rdfs:label ""The Shadow""@en
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
513,3,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?award_name ?awardee_name ?awardee_category
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:birthPlace ?awardee_birthplace .
  ?awardee rdfs:label ?awardee_name .
  ?award a award:Award ;
           award:recipient ?awardee ;
           award:category ?awardee_category .
  ?awardee_category rdfs:label ?awardee_category_name
}
```

This query looks for awards given to individuals (awardees) with a birth place, and it includes the recipient's name and the category of the award. The `award:recipient` property links the award to its recipient, and `award:category` specifies the type of award.",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
39,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional_name ?field
WHERE {
  ?professional a dbpedia:Person ;
               dbpedia:occupation ?field .
  ?field rdfs:label ""Your Specific Field"" . # Replace ""Your Specific Field"" with the actual field of interest
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
419,8,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship and entity in Andhra Pradesh.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumniName ?alumniInstitution
WHERE {
  ?alumni a dbpedia:Person ;
         dbpedia:awarded Australian Laureate Fellowship ;
         dbpedia:birthPlace Australia .
  ?alumni foaf:organization ?alumniInstitution .
  ?alumniInstitution a dbpedia:University .
  ?alumniInstitution rdfs:label ?alumniInstitutionLabel .
  FILTER (lang(?alumniInstitutionLabel) = ""en"")  # Ensure results are in English
}
```

This query looks for individuals who have been awarded the Australian Laureate Fellowship and were born in Australia. It then finds the organizations (universities) they are affiliated with, ensuring that the institution's label is in English.",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
203,46,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
               dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
  OPTIONAL {
    ?governor foaf:knows ?author .
    ?author foaf:knows ?vince_gilligan .
    ?governor rdfs:label ""William Bayne"" .
    ?author rdfs:label ""John Fisher"" .
    ?vince_gilligan rdfs:label ""The Triple X""
  }
}
```

This query looks for individuals connected to William Bayne (assumed to be the governor based on his naval service) and John Fisher (known as ""The Triple X""), focusing on their relationships within the context of the Royal Navy. It uses optional statements to connect these individuals through foaf:knows relations, which may not necessarily exist but are included to capture potential connections.",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
158,16,train,"Give me the person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?person_name ?person_birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality dbpedia:Russian_Federation ;
           dbpedia:birthPlace ?person_birthplace .
  ?person_birthplace rdfs:label ""Switzerland"" .
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
943,21,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_title WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch ;
            dbpedia:name ?parent_name .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
943,22,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status ?office_holding_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Dawit I"" ;
          dbpedia:offices ?office .
  ?child rdfs:label ?child_name .
  ?office a dbpedia:Office ;
            dbpedia:officeHolder ?office_holding_status .
  ?office rdfs:label ""Emperor of Ethiopia"" .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
159,36,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor_name ?show_title ?event_description
WHERE {
  ?successor a dbpedia:Person ;
            dbpedia:birthPlace ""Kiev"" .
  ?successor rdfs:label ?successor_name .
  
  ?battle a dbpedia:Event ;
             dbpedia:participatingMilitaryUnit ""Holy Roman Empire"" ;
             dbpedia:location ""Vienna"" .
  ?battle rdfs:label ?battle_title .
  
  ?show a dbpedia:TelevisionShow ;
           dbpedia:hasEpisode ""The Battle of Vienna"" .
  
  ?event a dbpedia:SocietalEvent ;
           dbpedia:occurredInYear 1683 ;
           dbpedia:involvedMilitaryUnit ?battle .
  
  ?successor foaf:name ?successor_name .
  ?show rdfs:label ?show_title .
  ?event rdfs:label ?event_description
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
531,45,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy and tenant of Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader_name ?office WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:partyMemberOf dbpedia:PPE_Party ;
               dbpedia:office ?office .
  ?politician rdfs:label ?leader_name .
  FILTER (str(?office) = ""Madrid"")
}
```

This SPARQL query does the following:
- It selects individuals (`?politician`) who are politicians (`dbpedia:Politician`), members of the People's Party (`dbpedia:PPE_Party`), and have an office (`?office`).
- It filters for those whose office is specifically in Madrid.
- It labels these individuals with their names (`?leader_name`).",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
119,16,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of the commander in French Revolutionary Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?polish_general_name ?polish_general_residence ?french_war_commander_name ?french_war_commander_residence
WHERE {
  ?polish_general a dbpedia:Person ;
                 dbpedia:birthPlace dbpedia:Poland .
  ?polish_general rdfs:label ?polish_general_name .
  
  ?french_war_commander a dbpedia:Person ;
                       dbpedia:birthPlace dbpedia:Corsica .
  ?french_war_commander rdfs:label ?french_war_commander_name .
  
  ?polish_general dbpprop:conflict dbpedia:French_Revolutionary_Wars .
  ?french_war_commander dbpprop:conflict dbpedia:French_Revolutionary_Wars
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
89,12,train,Give me the spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?predecessor_name
WHERE {
  ?politician1 a dbpedia:Politician ; dbpedia:birthPlace ?birthplace1 .
  ?politician1 rdfs:label 'Saw Shwe Khet' .
  ?politician2 a dbpedia:Person ; dbpedia:birthPlace ?birthplace2 .
  ?politician2 rdfs:label 'Myat Hpone Pyo' .
  ?politician1 dbpprop:spouse ?spouse .
  ?politician2 dbpprop:predecessor ?predecessor .
  ?spouse rdfs:label ?spouse_name .
  ?predecessor rdfs:label ?predecessor_name
}
",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,16,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name ?parent_of_child_name
WHERE {
  ?earl a dbpedia:Person ;
         dbpedia:birthPlace ""Middlesex, England"" ;
         rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?earl dbpedia:hasSpouse ?spouse .
  ?spouse a foaf:Person ;
           dbpedia:birthPlace ?spouse_birthplace .
  ?child a dbpedia:Person ;
            dbpedia:parent ?parent_of_child .
  ?parent_of_child a dbpedia:Person ;
                 dbpedia:birthPlace ""Middlesex, England"" .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,4,train,"Who is the parent, that is a royalty, of Yeshaq I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?royalty_status
WHERE {
  ?yeshaq a dbpedia:Person ;
           dbpedia:birthDate ""ca. 1500"" ;
           dbpedia:deathDate ""circa 1543"" ;
           foaf:familyMember ?parent .
  ?parent a dbpedia:Person ;
         dbpedia:role dbpedia:Monarch ;
         rdfs:label ?parent_name .
  ?parent rdfs:label LIKE ""%King%"" .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,54,train,"Give me the person born as Harriette Arlene Lake and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name WHERE {
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:Actor ; dbpedia:film dbpedia:Film ; dbpedia:producer dbpedia:NatLevine .
  ?spouse a dbpedia:Person ; dbpedia:name ""Harriette Arlene Lake"" ; dbpedia:sibling ?actor .
  ?spouse rdfs:member dbpedia:PoliticalParty ; dbpedia:party_location dbpedia:Central_Louisiana .
}
",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,7,train,"Give me the region of Japan Standard Time and reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?region_name ?location
WHERE {
  ?region a dbpedia:Region ;
            dbpedia:locatedIn ?location .
  ?location a geo:Point ; 
             geo:coordinates [AVENIR:4326] .
  ?region rdfs:label ?region_name .
  ?location rdfs:label ?location_name
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
414,15,train,"Give me the award of Max Born and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?hosting_institution
WHERE {
  ?awardee a award:AwardWinner ;
            award:awardName ""Nobel Prize in Physics"" .
  ?awardee rdfs:label ?awardee_name .
  ?hosting_institution a dbpedia:EducationalInstitution ;
                    rdfs:label ?hosting_institution_name
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
756,44,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the soccer club season in which Thomas Letsch played
SELECT ?season WHERE {
  ?player rdfs:label ""Thomas Letsch"" .
  ?player a dbpedia:SoccerPlayer ;
         dbpedia:playsFor ?team .
  ?team a dbpedia:SoccerTeam ;
        dbpedia:hasSeason ?season .
}

# Step 2: Find the manager of that season
SELECT ?manager WHERE {
  ?season a dbpedia:SoccerClubSeason ;
           dbpedia:managedBy ?manager .
  ?manager rdfs:label ?manager_name .
}

# Step 3: Check if the manager also managed VfL Bochum
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?manager_name WHERE {
  ?manager a dbo:FootballManager ;
           dbpedia:managedTeam ""VfL Bochum"" .
}

# Step 4: Ensure the manager is from the country of Theodor Heuss (West Germany)
SELECT ?country WHERE {
  ?manager rdfs:label ?manager_name .
  ?manager dbpedia:originCountry ?country .
  ?country rdfs:label ""Germany"" . # Assuming Theodor Heuss was from West Germany
}

# Combine all results to find the matching manager
CONSTRUCT { ?manager_name a dbo:FootballManager; dbpedia:managedTeam ""VfL Bochum""; dbpedia:originCountry ""Germany"" } WHERE {
  ?season a dbpedia:SoccerClubSeason ;
         dbpedia:managedBy ?manager .
  ?manager rdfs:label ?manager_name .
  ?manager a dbo:FootballManager ;
          dbpedia:managedTeam ""VfL Bochum"" ;
          dbpedia:originCountry ""Germany"" .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
361,5,train,"Give me the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX owl: <http://www.w3.org/2002/07/owl#

SELECT ?work_name ?film_title ?type_of_work
WHERE {
  ?work a dbpedia:Work ;
         dbpedia:type ?type_of_work .
  ?work rdfs:label ?work_name .
  ?film a dbpedia:Film ;
           dbpedia:basedUpon ?work .
  ?film rdfs:label ?film_title .
}
```

### Completed",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
198,55,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX medals: <http://dbpedia.org/ontology/Medals>

SELECT ?birthplace
WHERE {
  ?henry_clay_lewis a dbpedia:Person ;
                      dbpedia:birthPlace ?birthplace .
  ?gillmore_medal a medals:Medal ;
                       rdfs:label ""Gillmore Medal"" .
  ?medal_of_honor a medals:Medal ;
                       rdfs:label ""Medal of Honor"" .
  ?henry_clay_lewis dbpedia:recipientOf ?gillmore_medal .
  ?henry_clay_lewis dbpedia:recipientOf ?medal_of_honor .
  ?birthplace a dbpedia:Settlement ;
             dbpedia:country ""United States"" .
  ?gillmore_medal rdfs:seeAlso ?awardee .
  ?medal_of_honor rdfs:seeAlso ?awardee
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,23,train,Give me the associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?artist_name WHERE { ?person a dbpedia:Person ; rdfs:label ?name . ?person ns:birthDate ?birthDate . ?artist a dbpedia:MusicArtist . ?person dbpedia:associatedWith ?artist . FILTER (?name = 'Pacely') },3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
119,26,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_name
WHERE {
  ?citizen a dbpedia:Person ;
             dbpedia:nationality ""Spanish"" ;
             dbpedia:birthPlace ?country .
  ?country a dbpedia:Country .
}
```",3,5,4,3,1,3,3,71,0,0,1184,0,0.0,0
87,19,train,"Give me the spouse of Janusz Kamiński and actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?spouse a dbpedia:Person ;
           dbpedia:spouseOf ?janusz_kaminski .
  ?janusz_kaminski a dbpedia:Person ;
                 rdfs:label ""Janusz Kamiński""@en;
                 dbpedia:roleInFilm ""Always (1989 film)""@en;
                 dbpedia:roleInFilm ""The Mindy Project""@en.
  ?spouse rdfs:label ?spouse_name
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
80,26,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name 
WHERE { 
  ?album a dbpedia:Album ; 
  rdfs:label ?album_label . 
  ?song a dbpedia:Song ; 
  rdfs:label ?song_label . 
  ?album ?song . 
  ?album rdfs:label 'King' . 
  ?song rdfs:label 'What You Know' . 
  ?actor a dbpedia:Musician ; 
         foaf:name ?actor_name . 
}",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
375,12,train,Give me the entity in Japan and war of Hashiba Hidekatsu and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity a dbpedia:Organization ;
            dbpedia:country ""Japan"" ;
            dbpedia:participatedInBattle ?battle .
  ?battle a dbo:Conflict;
           dbo:startYear 1600;
           dbo:endYear 1601.
}
```

This SPARQL query looks for an entity in Japan that participated in a battle between the years 1600 and 1601. The Battle of Sekigahara fits this description and is a suitable context to link Hashiba Hidekatsu and Toyotomi Hidenaga.",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
628,39,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace ?award ?band_name
WHERE {
  ?person a dbpedia:Person ; dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  ?band a dbpedia:Band ; dbpedia:name ?band_name .
  ?band geoname:country 'United States' ; geoname:adminDivisionName 'New York' .
  ?award a dbpedia:MusicAwards ; dbpedia:recipient ?person .
  ?person dbpedia:birthPlace ?birthplace
}
",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,50,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name ?birthplace_name
WHERE {
  ?musical_artist a dbpedia:Musician ;
                  dbpedia:birthPlace ?birthplace .
  ?birthplace a dbpedia:GeographicalLocation ;
             dbpedia:name ""Florida"" ;
             rdfs:label ?birthplace_name .
  ?birthplace geo:locatedIn <http://www.w3.org/2003/01/geo/wgs84_pos#PuertoRico> .
  ?musical_artist rdfs:label ?musical_artist_name
}
```",5,10,6,3,2,3,3,71,0,0,59,0,0.0,0
311,9,train,"Who is the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song)?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?artist_name
WHERE {
  ?producer a dbpedia:Organization ;
             dbpedia:role dbpedia:MusicProducer ;
             rdfs:label ?producer_name .
  ?producer dbpedia:band_or_band_members ?artist .
  ?artist a dbpedia:MusicArtist .
}",2,6,3,2,1,3,2,20,0,0,2,0,0.0,0
595,23,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author_name ?author_spouse_name
WHERE {
  ?book dbpedia:isAbout ""It Takes a Village"" ;
            dbpedia:author ?author .
  ?author a dbpedia:Person ;
           dbpedia:officeHolder true ;  # Assuming this property exists or we use a suitable alternative
           dbpedia:politician true .
  ?author foaf:spouse ?author_spouse_name .
}
```",3,7,4,3,1,3,3,71,0,0,1,0,0.0,0
943,56,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather_name ?grandfather_title
WHERE {
  ?monarch1 a dbpedia:Monarch ; dbpedia:name 'Baeda Maryam I' .
  ?monarch2 a dbpedia:Monarch ; dbpedia:name 'Yeshaq I' .
  ?child a dbpedia:Person ; dbpedia:parent ?monarch1 .
  ?child rdfs:label ?child_name .
  ?grandfather a dbpedia:Person ; dbpedia:parent ?monarch1 ; dbpedia:name ?grandfather_name .
  ?grandfather rdfs:label ?grandfather_title .
}
",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
78,5,train,Give me the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?artist_name WHERE {
  ?artist a dbpedia:MusicArtist ;
           dbpedia:associatedBandMember ?david_paton .
  ?david_paton a dbpedia:Person;
                 rdfs:label ?david_paton_label
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
143,15,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro and associated musical artist of Cynthia Morgan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?show a dbpedia:TelevisionSeries ; dbpedia:creator [ dbpedia:hasPart ?actor ] .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:role [ dbpedia:inSeries ?show ] .
  ?show rdfs:label 'Shuga' .
  ?actor dbpedia:castMember [ dbpedia:hasRole ?role ] .
  ?role a dbpedia:Character .
  ?role dbpedia:playedBy ?actor
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
263,12,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?mother a dbpedia:Person ; dbpedia:birthPlace dbpedia:Middlesex ; dbpedia:rdf:type dbpedia:Person .
  ?father a dbpedia:Person ; dbpedia:birthPlace dbpedia:Middlesex ; dbpedia:rdf:type dbpedia:Person .
  ?mother dbpedia:parent ?parent .
  ?father dbpedia:parent ?parent
  ?parent rdfs:label ?parent_name .
  ?parent dbpedia:birthPlace ?parent_birthplace .
}",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
293,53,train,Give me the person born as the birth name of Ann Sothern and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birth_name ?party_membership ?spouse_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthName ?birth_name ;
            dbpedia:politicalPartyMember ?party_membership .
  ?person rdfs:label ?person_name .
  ?spouse a dbpedia:Person ;
           dbpedia:name ?spouse_name .
  ?person dbpedia:isSpouseOf ?spouse .
  ?spouse rdfs:label ?spouse_name .
  FILTER (lang(?birth_name) = ""en"")  # Assuming we are looking for English names
  AND (?party_membership = ""Democratic Party"")  # Ruling party in the US context
  AND (?spouse_name = ""Roger Pryor"")
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
198,27,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathDate ""1850-08-05"" .
  ?person dbpedia:birthPlace ?birthplace .
  ?birthplace a dbpedia:Settlement .
  ?person rdfs:label ?person_name .
  ?birthplace rdfs:label ?birthplace_name
}
```",3,5,4,3,1,3,3,71,0,0,12,0,0.0,0
270,7,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at Melbourne.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?male_politician_name ?male_politician_birthplace
WHERE {
  ?politician a dbpedia:Politician ;
dbp:birthPlace ?male_politician_birthplace .
  ?politician rdfs:label ?male_politician_name .
  FILTER (lang(?male_politician_name) = 'en')
}
",3,4,4,2,2,2,2,9,0,227554,1,0.0,0.0,0
737,44,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_title
WHERE {
  ?duke_philip a dbpedia:Person ; dbpedia:parent ?parent_of_duke_philip .
  ?parent_of_duke_philip a dbpedia:Person ; dbpedia:child ?child_of_duke_philip .
  ?child_of_duke_philip a dbpedia:Person ; dbpedia:title ?royalty_title .
  ?child_of_duke_philip rdfs:label ?royalty_child_name .
}
",5,6,6,2,3,3,3,71,0,6836,1,0.0,0.0,0
595,29,train,"Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?commander_title ?book_name
WHERE {
  ?person a dbpedia:Person ;
dbpedia:givenName ?first_name ;
dbpedia:surname ?last_name .
  ?spouse a dbpedia:Person ; dbpedia:sibling ?person ; dbpedia:partner ?person .
  ?commander a dbpedia:OfficeHolder ; dbpedia:office dbpedia:President_of_the_United_States ; dbpedia:role ?commander_title .
  ?book a dbpedia:WrittenWork ; dbpedia:author ?author .
  ?book rdfs:label ?book_name .
  ?author a dbpedia:Person ; dbpedia:givenName ?first_name ; dbpedia:surname ?last_name .
  ?author dbpedia:birthDate ?birthdate .
  ?bill_clinton a dbpedia:Person ; dbpedia:givenName 'William' ; dbpedia:surname 'Clinton' ; dbpedia:birthDate ?bill_birthdate .
  ?bill_clinton rdfs:label ?bill_name .
  ?spouse rdfs:label ?spouse_name .
  ?book dbpedia:author ?bill_clinton .
  ?commander rdfs:label ?commander_title
}
",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
557,60,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?producer_name WHERE {
  ?movie a dc:Film ;
            dc:title ""High Society Blues"" .
  ?actor a dc:Character ;
           dc:name ""Actor in High Society Blues"" .
  ?producer a dc:Producer ;
            dc:name ?producer_name .
  ?actor dc:performedBy ?producer
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
905,15,train,"Give me the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title ?royalty_status ?father_name
WHERE {
  ?philip a dbpedia:Person ;
            dbpedia:name ""Philip, Despot of Romania"" .
  ?philip dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:title ?parent_title .
  ?parent rdfs:label ?parent_name .
  ?parent dbpedia:isMemberOf dbpedia:Royalty .
  ?father a dbpedia:Person ;
            dbpedia:name ?father_name .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
782,28,train,Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:name ?band_name .
  ?band_member a dbpedia:Musician ;
               dbpedia:name ?band_member_name ;
               dbpedia:memberOf ?band .
  ?band_member_name = ""Nick Curran"" OR ?band_member_name = ""Kim Wilson""
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
871,45,train,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?child a dbpedia:Person ;
            rdfs:label ""Edward Stanley, 17th Earl of Derby"";
            dbpedia:parent ?parent .
  ?parent a dbpedia:Politician .
  ?parent rdfs:label ?parent_name .
  ?parent dbpedia:birthPlace <http://dbpedia.org/ontology/British_Monarchy#United_Kingdom> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,31,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royal_commander_name ?royal_family_name ?royalty_status 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:role ['Commander'] . 
  ?commander dbpedia:parent [ ?parent_name ] . 
  ?parent a dbpedia:Person ; dbpedia:role ['Royalty'] . 
  ?royal_commander rdfs:label ?royal_commander_name . 
  ?parent rdfs:label ?parent_name . 
  ?royal_commander dbpedia:familyMember ?parent . 
  ?royal_commander rdfs:label ?royalty_status
}",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
419,5,train,Give me the entity in the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birth_place
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace dbpedia:Andhra_Pradesh .
}
```",2,2,3,2,1,2,2,9,0,0,166,0,0.0,0
103,23,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?actor a dbpedia:Person ; dbpedia:name ?actor_name .
  ?actor dbpedia:roleInSeries dbpedia:Outlander_Series .
  ?actor rdfs:label ?actor_name .
}
",3,4,4,3,1,3,3,71,0,0,53,0,0.0,0
816,41,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?parent_name
WHERE {
  ?actor dbpedia:role dbpedia:Actor ;
            dbpedia:inFilm dbpedia:That_Championship_Season .
  ?actor dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:name ?parent_name .
  FILTER (regex(str(?parent_name), 'Bernardi')) .
  ?parent rdf:type dbpedia:Photographer
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,0,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?member_name ?member_party
WHERE {
  ?member a dbpedia:Person ;
           dbpedia:partyMember dbpedia:Republican_Party_(United_States) .
  ?member rdfs:label ?member_name .
}
```",1,1,2,1,1,3,3,71,0,0,21486,0,0.0,0
198,19,train,Give me the war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?gillmore a dbpedia:Person ; dbpedia:militaryAward dbpedia:Medal_of_Honor ; dbpedia:conflict ?war .}
",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
585,14,train,Give me the child of the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name
WHERE {
  ?actor dbpedia:parent ?child .
  ?actor rdfs:label ""Shirley Stoler"" .
}
```",3,3,4,3,1,3,2,20,0,0,935,0,0.0,0
353,54,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of the parent of Roger III, Duke of Apulia and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?v0 . }",,6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,22,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?governor_territory_name ?hansen_birthplace ?prince_territory
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?hansen_birthplace .
  ?prince a dbpedia:Royalty ;
           dbpedia:birthPlace ?prince_territory .
  ?governor rdfs:label ?governor_name .
  ?prince rdfs:label ?prince_name
}
```

This query looks for:
- A politician (`?governor`) with a birthplace (`?hansen_birthplace`), likely matching the birthplace of Christian Ditlev Ammentorp Hansen.
- A royalty person (`?prince`) with a birthplace (`?prince_territory`), likely matching Prince Christian of Schleswig-Holstein-Sonderburg-Beck.
- The name of the territory administered by the prince (`?governor_territory_name`).",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
472,4,train,"Who is the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthName ""Christian"" ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?royalty_name
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
119,61,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spanish_administration_name ?spain_country 
WHERE { 
  ?party a dbpedia:PoliticalParty ; dbpedia:name ""Spanish Socialist Workers' Party"" . 
  ?administration a dbpedia:Government ; dbpedia:leader ?party . 
  ?citizen a dbpedia:Person ; dbpedia:nationality ""Spanish"" ; dbpedia:countryOfResidence ?spain_country . 
  ?administration rdfs:label ?spanish_administration_name . 
}",6,9,7,3,2,3,3,71,0,0,23,0,0.0,0
941,5,train,Who is the spouse of Duchess Luise of Brunswick-Wolfenbüttel?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spouse_name 
WHERE { 
?duchess a dbpedia:Person ; 
 dbpedia:spouse ?spouse_name . 
?duke a dbpedia:Person ; 
 dbpedia:wife ?spouse_name . 
?duchess rdfs:label ?duchess_name . 
?duke rdfs:label ?duke_name . 
?duchess_name = 'Duchess Luise of Brunswick-Wolfenbüttel' 
?duke_name = 'Duke Karl Wilhelm Ferdinand of Saxe-Weimar-Eisenach' 
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,18,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?death_place1 ?actor_name1 ?actor_death_place1
WHERE {
  ?carolyn_jones a dbpedia:Person ;
                    rdfs:label ""Carolyn Jones""@en;
                    dbpedia:deathPlace ?death_place1 .
  ?aladdin_actor a dbpedia:Actor ;
                  rdfs:label ""Aladdin (1958 film)""@en;
                  dbpedia:role ?role_name .
  ?role_name a dbpedia:FilmRole ;
               dbpedia:film ""Aladdin (1958 film)"" .
  ?aladdin_actor dbpedia:deathPlace ?actor_death_place1
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
297,8,train,Give me the institution in the administration of Brian Kemp and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?secretary_name ?state_name
WHERE {
  ?secretary a dbpedia:OfficeHolder ;
               dbpedia:office dbpedia:Secretary_of_State ;
               dbpedia:officeHolderType dbpedia:Government_of_United_States ;
               dbpedia:officeLocation ?state_name .
  ?state a dbo:State ;
           dbpedia:country dbpedia:United_States
}
```",3,3,4,2,2,2,2,9,0,0,346,0,0.0,0
756,7,train,"Give me the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?manager_name ?manager_birthdate 
WHERE { 
  ?manager a dbpedia:Person ; 
    dbpedia:birthDate ?manager_birthdate ; 
    dbpedia:occupation dbpedia:SportsManager 
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,10,train,Give me the child of Saw Min Hla and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?child_position WHERE {
  ?child a dbpedia:Person ;
  dbpedia:parent ?saw_min_hla .
  ?child rdfs:label ?child_name .
  ?child dbpedia:position ?child_position .
  ?child_position ns:precededBy ?myat_hpone_pyo .
}
",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,5,train,Give me the work of Lao She.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?work_name WHERE {
  ?work a dbpedia:CreativeWork ;
         dbpedia:type ""novel"" .
  ?work rdfs:label ?work_name
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
531,54,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?miguel_maura_office ?commander_office 
WHERE {
  ?miguel_maura a dbpedia:OfficeHolder ;
               dbpedia:office ?miguel_maura_office .
  ?commander a dbpedia:Person ;
              dbpedia:role dbpedia:Commander ;
              dbpedia:conflict dbpedia:Portuguese_Civil_War .
  ?miguel_maura rdfs:label ""Miguel Maura""@pt .
  ?commander rdfs:label ""The Commander""@en
}
```

This query looks for individuals with the role of OfficeHolder (representing Miguel Maura as a Prime Minister) and individuals with the role of Commander in the context of the Portuguese Civil War.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
943,26,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?alter_ego_name WHERE {
  ?character a dbpedia:Character ;
               dbpedia:alterEgo ?alter_ego_name .
  ?character rdfs:label ""Lamont Cranston""@en .
}",3,3,4,3,1,3,3,71,0,0,98447,0,0.0,0
492,7,train,Give me the death place of Reed Howes and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Reed Howes""@en .
  ?person a dbpedia:Person ;
            rdfs:label ""Sal Mineo""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,42,train,"Give me the tenant of Spain and office of the leader of 2009 Galician regional election and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?galician_leader_name ?spanish_prime_minister_name ?psoe_membership
WHERE {
  ?galician_leader a dbpedia:Politician ;
                    dbpedia:office dbpedia:President_of_Galicia@en ;
                    foaf:name ?galician_leader_name .
  ?spanish_prime_minister a dbpedia:Politician ;
                           dbpedia:office dbpedia:Prime_Minister_of_Spain@en ;
                           rdfs:label ?spanish_prime_minister_name .
  ?psoe_membership a dbpedia:PartyMembership ;
                       subject ?psoe_member ;
                       predicate dbpedia:isMemberOf dbpedia:Spanish_Socialist_Workers'_Party@en .
  ?psoe_member a dbpedia:Person ;
               foaf:name ?psoe_name .
  ?galician_leader ns:memberOf ?psoe_membership .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
609,17,train,"Who is the author of the reference, that is American, to El Deafo?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_name WHERE {
  ?author a dbpedia:Person ;
    dbpedia:nationality ""American"" ;
    rdfs:label ?author_name
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
347,17,train,"Give me the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?royalty_status ?father_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ?parent_name ;
            dbpedia:role dbpedia:Royalty .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?father_name
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
585,12,train,Give me the child of the professional in Actress and native of New York (state).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actress_name ?child_name
WHERE {
  ?actress a dbpedia:Actress ;
             dbpedia:birthPlace dbpedia:New_York_County_United_States .
  ?actress dbo:hasChild ?child .
  ?child a foaf:Person .
}
```",3,3,4,2,2,3,2,20,0,0,9,0,0.0,0
414,0,train,Give me the show of Royal Swedish Academy of Sciences.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?academy_name
WHERE {
  ?academy a dbpedia-owl:AcademicSociety ;
            dbpedia-owl:fullName ?academy_name ;
            rdfs:label ""Royal Swedish Academy of Sciences""@sv .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
398,17,train,Give me the player in the writer of the work of Aleksandr Filimonov and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . ?v0 <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player_name WHERE {
  ?painting dbo:hasSubject ?subject .
  ?subject a dbpedia:Person ; dbpedia:name ""Aleksandr Filimonov"" .
  ?painting rdfs:label ""Наши парни"" . # Assuming this is the title of the artwork
  ?player a dbo:Player ;
            dbo:participatedInEvent ?event .
  ?event a dbo:Event ;
             dbo:subject ?subject .
}
```

This query attempts to find a player associated with the painting by looking for a person (presumed to be Aleksandr Filimonov) who is the subject of the painting and then searching for events that this person participated in, assuming those events involved players.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
39,19,train,Give me the professional in the profession of Sam Concepcion and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?second_professional_name
WHERE {
  ?sam_concepcion a dbpedia:Artist ;
                    dbpedia:genre ""Musical theatre, Pop music"" .
  ?second_professional a dbpedia:Artist ;
                    dbpedia:genre ?genre_of_second_professional .
  ?sam_concepcion rdfs:label ""Sam Concepcion"" .
  ?second_professional rdfs:label ?second_professional_name
  FILTER (lang(?genre_of_second_professional) = ""en"")  # Restrict to English language for simplicity
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
347,21,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_societal_event ?child_event ?child_show
WHERE {
  ?child a dbpedia:Person ;
         dbpedia:parent ?father .
  ?father a dbpedia:Person ;
          rdfs:label ""Ferdinand II, Holy Roman Emperor"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:birthPlace ?child_birthplace .
  ?child dbpedia:event ?child_event .
  ?child dbpedia:partOfDbpedia_onto:""2nd Dragoon Regiment (France)"" .
  ?child_societal_event a dbpedia:Event ;
                       rdfs:label ?child_societal_event .
  ?child_show a dbpedia:TelevisionShow ;
                rdfs:label ?child_show
  FILTER (?child_name = ""Archduke Charles of Austria"" )  # Assuming Archduke Charles is the relevant child based on historical context
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
628,60,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?band_memberships 
WHERE {
  ?artist a dbpedia:MusicalArtist ; dbpedia:birthPlace dbpedia:New_York_State ; dbpedia:associatedBandMember ?band_member .
  ?band_member a dbpedia:Person ; dbpedia:role dbpedia:Band_Member ; dbpedia:isArtist true ; dbpedia:isMusician true .
  ?artist rdfs:label ?artist_name
  ?band_member rdfs:label ?band_member_name
}
",6,14,7,3,2,3,3,71,0,0,1,0,0.0,0
557,26,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name ?work_title 
WHERE { 
  ?actor a dbpedia:Person ; dbpedia:name ""Mickey Jones"" . 
  ?character a dbpedia:Character ; dbpedia:name ""Johnny Doughboy"" ; dbpedia:appearsIn ?work . 
  ?work a dbpedia:Film_or_Book ; dbpedia:title ?work_title . 
  ?producer a dbpedia:Person ; dbpedia:name ?producer_name . 
  ?character rdfs:seeAlso ?work . 
}",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
58,10,train,Give me the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . },,2,2,3,2,1,3,2,20,0,0,39790,0,0.0,0
59,7,train,Give me the native of the residence of David Luckman and manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthPlace ?manager_birthplace .
  ?manager rdfs:label ?manager_name .
}
```",3,3,4,2,2,2,2,9,0,782049,1,0.0,0.0,0
38,1,train,"Give me the author of Promise Me, Dad.","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name
WHERE {
  ?book dbpedia:isBasedOnCreativeWork [
    dbpedia:title ""Promise Me, Dad""
  ] .
  ?author a dbpedia:Person ;
         dbpedia:givenName ?author_name ;
         dbpedia:birthDate ?author_birthdate .
  FILTER (?author_name = ""Gary Paulsen"")
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,12,train,Give me the war of Alexander Lvovich Davydov and war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?war_name ?war_description
WHERE {
  ?alexander_davydov a dbpedia:Person ;
                    dbpedia:conflict ?conflict .
  ?karl_gustav_von_baggovut a dbpedia:Person ;
                       dbpedia:conflict ?conflict .
  ?conflict rdfs:label ?war_name .
  ?conflict dbpedia:country ""Russian Empire"" .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
398,4,train,Give me the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?work_name WHERE {
  ?work a dbpedia:Artwork ;
         dbpedia:creator ?artist .
  ?artist rdfs:label ""Aleksandr Filimonov""@en .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
198,24,train,"Give me the force of the awardee of Gillmore Medal and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?awardee_contribution ?charleston_connection
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:award dbpedia:Gillmore_Medal .
  ?awardee rdfs:label ?awardee_name .
  ?contribution a award:AwardContribution ;
               awardScheme dbpedia:Gillmore_Medal ;
               recipient ?awardee .
  ?contribution rdfs:label ?awardee_contribution .
  ?charleston rdfs:label ""Charleston, South Carolina"" .
  ?awardee dbpedia:birthPlace ?charleston
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
288,5,train,"Give me the native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?lahore_name ?lahore_description
WHERE {
  ?lahore a dbpedia:City ;
            dbpedia:name ?lahore_name ;
            rdfs:label ?lahore_description .
  FILTER (lang(?lahore_description) = ""en"")  # Only consider English descriptions
}
```

This query selects the name and description of Lahore in English, which should match the given epithets.",2,4,3,2,1,2,2,9,0,0,881,0,0.0,0
89,3,train,Give me the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor_name ?king_name
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:monarchyStarts ?start_date .
  ?successor a dbpedia:Person ;
             dbpedia:parentOf ?king ;
             rdfs:label ?successor_name .
  ?king rdfs:label ?king_name .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
871,21,train,Give me the father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?mvo_awardee_name
WHERE {
  ?politician a dbpedia:Politician ; dbpedia:name ""Arthur Stanley"".
  ?politician dbpedia:hasFather ?father_name .
  ?mvo_awardee a dbpedia:Person ; dbpedia:awardedBy dbpedia:RoyalVictorianOrder ; dbpedia:name ?mvo_awardee_name .
}
",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,39,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?commander_association WHERE {
  ?commander a dbpedia:Person ;
  dbpedia:birthPlace ?commander_birthplace .
  ?commander rdfs:label ?commander_name .
  ?commander dbpedia:P31 ?commander_association .
  ?commander_association a [dbpedia:USS_Arcadia_(ID_1605) , dbpedia:Bill_Clinton] .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,Give me the war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?conflict_name ?description
WHERE {
  ?conflict a dbpedia:Conflict ;
            dbpedia:participatedIn ?toyotomi_hideyori .
  ?toyotomi_hideyori a dbpedia:Person ;
                    dbpedia:name ""Toyotomi Hideyori"" ;
                    dbpedia:birthDate ""1593"" .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
198,16,train,Give me the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?awardee_name WHERE {
  ?award a dbpedia:Award ; dbpedia:name ""Quincy Adams Gillmore Award"".
  ?awardee a dbpedia:Person ; dbpedia:name ?awardee_name .
  ?awardee rdfs:label [ substring ( nslq ?award ) ] .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
295,15,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur and native of Birmingham.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v1 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer_name ?writer_birthplace
WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:birthPlace ?writer_birthplace .
  ?artist rdfs:label ""Steven Kapur"" .
  ?work a dbpedia:MusicalWork ;
          dbpedia:creator ?artist ;
          dbpedia:title ""True Self"" .
  ?work rdfs:label ""True Self"" .
  ?writer rdfs:label ?writer_name .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
399,6,train,Give me the professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musician_name ?musician_profession
WHERE {
  ?musician a dbpedia:Musician ;
            rdfs:label ""Jamie T""@en .
}",2,2,3,2,1,2,2,9,0,0,44694,0,0.0,0
782,33,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?kim_wilson a dbpedia:Person ;
               dbpedia:birthDate ""1945-03-30"" ;
               rdfs:label ""Kim Wilson"" .
  ?band a dbpedia:Band ;
         dbpedia:members ?kim_wilson .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
68,3,train,"Who is the parent of Dorothea of Denmark, Electress Palatine?","SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_title
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:title ?parent_title .
  ?person rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  ?parent rdfs:label ?parent_name
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
531,15,train,"Give me the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?office_holder_name ?residence 
WHERE { 
  ?office_holder a dbpedia:OfficeHolder ; 
  dbpedia:officeElection [ dbpedia:year '2003' ] . 
  ?office_holder rdfs:label ?office_holder_name . 
  ?office_holder dbpedia:birthPlace ?birthplace . 
  ?residence a dbpedia:Residence ; 
  dbpedia:address ?residence_address . 
  ?office_holder dbpedia:residence ?residence_address . 
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
353,59,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?office_holder_name WHERE {
  ?grandchild a dbpedia:Person ;
             dbpedia:parent ?grandparent .
  ?grandparent rdfs:label ?royalty_child_name . 
  ?grandchild a dbpedia:Royalty .
  ?grandchild rdf:type dbpedia:OfficeHolder .
  ?grandchild rdfs:label ?office_holder_name
}
```

This query will retrieve the name of the child (or grandchild) who is both a royalty and an office holder, tracing back from Roger II of Sicily through his children and their children.",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,49,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

// Step 1: Find Bobby Shmurda's band members
SELECT ?band_member_name WHERE {
  ?artist a dbpedia:Musician ;
           dbpedia:birthPlace ""Brooklyn, New York"" ;
           rdfs:label ""Bobby Shmurda""
  }
  
// Step 2: Find the award given to Bobby Shmurda
SELECT ?award_name WHERE {
  ?artist a dbpedia:Person ;
           dbpedia:hasAward ?award .
  ?award rdfs:label ?award_name
}

// Step 3: Find the region (state) in America where the award was given out
PREFIX dbo: <http://dbpedia.org/ontology#>
SELECT ?state WHERE {
  ?awarddbo:hasLocation ?state .
  ?state a dbo:Region ;
         dbpedia:country ""United States"" ;
         dbpedia:isPartOf ""New York""
}

// Step 4: Identify the band associated with New York state
SELECT ?band_name WHERE {
  ?band a dbpedia:Band ;
          dbpedia:origin ""New York"" .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
159,30,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to George Ducas.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_event
WHERE {
  ?commander a dbpedia:Person ;
            rdfs:label ?commander_name .
  OPTIONAL { 
    ?commander dbo:partOfEvent ?commander_event .
    ?commander_event a dbpedia:Event .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
311,5,train,Who is the writer of No Alternative?,SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_name
WHERE {
  ?book a dbpedia:Book ;
         dbpedia:author ?author_name .
  ?author_name rdfs:label ""Cece Bell"" .
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
297,4,train,Give me the institution in Georgia (U.S. state) and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?institution_name ?entity_name
WHERE {
  ?institution a dbpedia:Institution ; dbpedia:locatedIn dbpedia:Georgia (United States) .
  ?entity a dbpedia:Entity ; dbpedia:country dbpedia:United States .
  ?institution rdfs:label ?institution_name .
  ?entity rdfs:label ?entity_name
}
",2,2,3,1,2,2,2,9,0,0,346,0,0.0,0
80,11,train,Give me the actor of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ; dbpedia:title 'The Movie Title' .
  ?actor dbpedia:actIn ?movie .
}",2,2,3,2,1,3,3,71,0,0,55786,0,0.0,0
531,12,train,Give me the office of Mariano Rajoy and office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_name WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:officeName ?office_name .
  ?politician rdfs:label ""Mariano Rajoy""@es .
  ?politician rdfs:label ""Miguel Maura""@es
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
38,12,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name
WHERE {
  ?book dbpedia:hasAuthor ?author .
  ?author rdfs:label ?author_name .
  ?book rdfs:label ""Promises to Keep"" .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
203,2,train,Give me the military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nao: <http://purl.org/ontologies/nano>

SELECT ?british_fleet ?french_fleet
WHERE {
  ?battle a dbpedia:Battle ;
            nao:participatingSide ?british_fleet .
  ?battle nao:opposingSide ?french_fleet .
  ?british_fleet rdfs:label ""British Fleet"" .
  ?french_fleet rdfs:label ""French Fleet"" .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
80,28,train,Give me the actor of the movie with  and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX mousetrap: <http://purl.org/cwm/mousetrap#>

SELECT ?actor_name ?actor_birthday ?sport
WHERE {
  ?movie a mousetrap:Film ;
            mousetrap:title ""ATL"" .
  ?actor a dbpedia:Person ;
         dbpedia:roleInFilm ?movie ;
         dbpedia:name ?actor_name .
  OPTIONAL { ?actor mousetrap:playsSport ?sport }
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
198,4,train,Give me the awardee of Medal of Honor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee_name ?awardee_honors WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:recipientOfAward [ dbpedia:awardMedalOfHonor true ] .
}
```",1,1,2,1,1,3,3,71,0,0,2190,0,0.0,0
89,59,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . },,6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,8,train,"Give me the parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace ?parent_category
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace london .
  ?person rdfs:label ?person_name .
  ?person dbpedia:isArtist ?artist_category .
  ?person dbpedia:isMusicArtist ?music_artist_category .
  ?parent a dbpedia:ParentOf ?person ;
           rdfs:label ?parent_name
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
347,1,train,"Give me the father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?father_title
WHERE {
  ?queen a dbpedia:Person ;
         dbpedia:birthDate ""1578"" ;
         dbpedia:name ""Eleonore of Austria, Queen of Poland"" .
  ?queen foaf:father ?father .
  ?father a dbpedia:Person ;
          dbpedia:title ?father_title ;
          rdfs:label ?father_name
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,9,train,Give me the native of Russian Empire and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality ""Russian Empire"" .
  ?person a dbpedia:Person ;
           dbpedia:nationality ""Grand Duchy of Finland"" .
}
```",2,2,3,1,2,2,3,28,0,0,126,0,0.0,0
80,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?character_name ?character_profession
WHERE {
  ?character a dbpedia:Character ;
            rdfs:label ?character_name .
  OPTIONAL { ?character dbpedia:hasAlterEgo ?alter_ego }
  FILTER (?alter_ego = ""The Shadow"" || ?alter_ego = ""Lamont Cranston"")
  ?character rdfs:label ?character_name .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
140,16,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut and commander in the war, that is a societal event, of George Pickett.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_member_name ?party_name ?commander_name ?war
WHERE {
  ?party a dbpedia:PoliticalParty ;
            dbpedia:headquarter dbpedia:PlaceObject ;
            dbpedia:hasMember ?party_member .
  ?party_member a dbpedia:Person ;
               foaf:name ?party_member_name ;
               dbpedia:birthPlace dbpedia:PlaceObject ;
               dbpedia:role dbpedia:EventParticipantType ;
               dbpedia:participatedInEvent ?war .
  ?war a dbpedia:SocietalEvent ;
         dbpedia:eventName ""American Civil War"" .
  ?commander a dbpedia:MilitaryPerson ;
            foaf:name ?commander_name ;
            dbpedia:role dbpedia:MilitaryRole ;
            dbpedia:participatedInEvent ?war .
}
```",4,7,5,2,2,3,2,20,0,0,4,0,0.0,0
668,24,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ?person_name .
  ?person dbpedia:birthPlace ?birthplace .
  FILTER (STRSTARTS(?person_name, 'Darryl Paa Kwesi')) .
  OPTIONAL { ?person dbpedia:profession ?profession }
  FILTER (STRMATCHES(?profession, 'Rod Argent'))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
225,14,train,"Give me the birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?awardee_birthplace
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:birthPlace ?awardee_birthplace .
  ?awardee rdfs:label ?awardee_name .
  ?awardee dbpedia:P31 award:recipientOf <http://dbpedia.org/ontology/Award.AwardedFor> [ owl:cardinality ""1""] .
  FILTER (lang(?awardee_name) = ""ja"" )  # Ensures the person's name is in Japanese
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
203,21,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?regiment_name ?battle_name
WHERE {
  ?regiment a dbpedia:MilitaryUnit ;
            dbpedia:partOf ?battle .
  ?battle a dbpedia:Event ;
           dbpedia:conflict ""War of the Third Coalition"" ;
           dbpedia:location ""Cape Finisterre"" .
  ?regiment rdfs:label ?regiment_name .
  ?battle rdfs:label ?battle_name .
  ?commander a dbpedia:Person ;
            dbpedia:role dbpedia:MilitaryCommander ;
            foaf:name ?commander_name .
  ?regiment ns:hasMember ?commander
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,22,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?parent_name WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:productionCompany ""Castle Rock Entertainment"" ;
            dbpedia:mainActor ?actor_name .
  
  ?person a dbpedia:Person ;
           rdfs:label ""Allan Arbus""@en ;
           dbpedia:birthDate ""1929-04-15""^^xsd:date ;
           dbpedia:parent ?parent_name .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,24,train,Give me the child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?child_name WHERE { ?child a dbpedia:Person ; dbpedia:parent ?grandparent . ?grandparent a dbpedia:Person ; dbpedia:spouse ?parent . ?parent rdfs:label ?child_name },3,3,4,2,2,3,3,71,0,10942,2,0.0,0.0,0
203,40,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?admiral_name ?battle_1_name ?battle_2_name
WHERE {
  ?admiral a dbpedia:Person ;
             dbpedia:role dbpedia:NavalOfficer ;
             dbpedia:name ""Pierre-Charles Villeneuve"" .
  ?battle1 a dbpedia:Event ;
           dbpedia:name ""Battle of Cape Finisterre (1805)"" .
  ?battle2 a dbpedia:Event ;
           dbpedia:name ""Battle of Fort Royal (1806)"" .
  ?admiral dbpedia:participatedIn ?battle1 .
  ?admiral dbpedia:participatedIn ?battle2
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
756,47,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader_name ?leader_birthplace ?manager_name ?manager_birthplace
WHERE {
  ?leader a dbpedia:Politician ;
            dbpedia:birthPlace ?leader_birthplace .
  ?manager a dbpedia:SportsManager ;
             dbpedia:manageTeam ?team .
  ?team a dbpedia:SoccerClub ;
         dbpedia:name ""VfL Bochum"" .
  ?manager rdfs:label ?manager_name .
  ?leader rdfs:label ?leader_name
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,33,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_role ?politician_status
WHERE {
  ?actor a dbpedia:Person ;
           foaf:name ?actor_name ;
           dbpedia:role ?actor_role .
  ?actor_role = ""Actor"" .
  OPTIONAL { ?actor dbpedia:isPolitician ?politician_status }
  FILTER (?actor_role = ""Actor"" AND ?politician_status = ""True"")
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
419,0,train,Give me the entity in Andhra Pradesh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace dbpedia:Andhra_Pradesh .
}
```",1,1,2,1,1,2,2,9,0,0,166,0,0.0,0
158,7,train,Give me the person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedent_name ?decedent_deathplace
WHERE {
  ?decedent a dbpedia:Person ;
    dbpedia:birthPlace <http://dbpedia.org/property/birthPlace#Russian_Empire> ;
    dbpedia:deathPlace <http://dbpedia.org/ontology/Location> ?decedent_deathplace .
  }",2,2,3,1,2,2,3,28,0,0,36,0,0.0,0
375,24,train,Give me the war of the person born as Koichirō and war of the child of Toyotomi Hideyoshi.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?koichiro_involvement ?toyotomi_child_war
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Koichirō""@ja;
            dbpedia:birthDate ?koichiro_birthdate .
  ?child a dbpedia:Person ;
            rdfs:label ""Toyotomi Hideyoshi's child""@en;
            dbpedia:parent ?toyotomi_parent .
  ?toyotomi_parent a dbpedia:Person ;
                 rdfs:label ""Toyotomi Hideyoshi""@en;
                 dbpedia:birthDate ?toyotomi_birthdate .
  ?person dbpedia:conflict ?war .
  ?child dbpedia:conflict ?child_war .
  FILTER (STR(?koichiro_birthdate) = STR(?koichiro_involvement))
  FILTER (STR(?toyotomi_birthdate) = STR(?child_war))
}
```

This query will search for individuals named ""Koichirō"" and ""Toyotomi Hideyoshi's child"" in DBpedia, and then determine the wars they were involved in based on their conflict properties. The `FILTER` clauses ensure that we only match the birth dates correctly to the individuals involved in the conflicts.",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,53,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award_name ?native_place
WHERE {
  ?award dbpedia:awardedBy ?artist .
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:bandMemberOf ?band .
  ?band a dbpedia:MusicGroup ;
         dbpedia:member ?dj_aq .
  ?dj_aq a dbpedia:Person ;
          dbpedia:nationality ""United States of America"" ;
          dbpedia:birthPlace ""Philadelphia, Pennsylvania"" .
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?artist rdfs:label ?artist_name .
  ?dj_aq rdfs:label ?dj_aq_name
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
347,34,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_war_role ?tv_show_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?ferdinand_II .
  ?child dbpedia:participatedInMilitaryConflict ?algerian_war .
  ?child rdfs:label ?child_name .
  ?tv_show a dbpedia:TelevisionShow ;
             dbpedia:mainCharacter ?child_name .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
628,15,train,"Give me the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name WHERE {
  ?artist a dbpedia:Musician ;
           dbpedia:genre ""Jazz"" .
  ?artist rdfs:label ?artist_name
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
103,37,train,"Give me the professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?actor_political_role 
WHERE { 
  ?actor a dbpedia:Person ; 
  dbpedia:occupation ?actor_political_role . 
  ?actor rdfs:label ?actor_name . 
}",4,5,5,3,2,3,3,71,28,548511,39612,5.104468415190169e-05,0.0007063572149344097,9.52091115119717e-05
943,27,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?grandfather_name ?grandfather_title WHERE {
  ?paternal_father a dbpedia:Person ; dbpedia:officeHolder ?paternal_office;
  dbpedia:royalty ?royalty .
  ?grandfather a dbpedia:Person ; dbpedia:officeHolder ?grandfather_office ; dbpedia:royalty ?grandfather_royalty .
  ?paternal_father dbpedia:fatherOf ?paternal_child .
  ?paternal_child rdfs:label ?paternal_child_name .
  ?grandfather rdfs:label ?grandfather_name .
}
",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
23,9,train,Give me the entity in Colombia and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name WHERE {
  ?gustavo_petro a dbpedia:Politician ;
                    dbpedia:office ""President of Colombia"" ;
                    dbpedia:memberOf ?party_name .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
353,45,train,"Give me the child of Roger II of Sicily and father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_relationship ?royalty_title
WHERE {
  ?child a dbpedia:Person ;
  dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
  dbpedia:spouse ?spouse ;
  dbpedia:child ?child .
  ?child rdfs:label ?child_name .
  ?spouse rdfs:label ?spouse_name .
  ?child_relationship a dbpedia:FamilyRelationship ;
  dbpedia:parent ?grandparent ;
  dbpedia:child ?child
  FILTER (lang(?child_name) = 'en') 
}
",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
198,3,train,"Give me the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?award_name ?awardee
WHERE {
  ?award a dbpedia:Award ;
           dbpedia:awardedTo ?awardee .
  ?awardee rdfs:label ?award_name .
  ?award dbr:isNamedAfterObject dbpedia:United_States_Congress
}
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
723,15,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of Stone Sour.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members
WHERE {
  ?producer rdfs:label ?producer_name .
  ?producer a dbpedia:Musician ; dbpedia:associatedBand ?band .
  ?band a dbpedia:MusicalArtist ; dbpedia:genre dbpedia:HeavyMetal ; dbpedia:name ?band_name .
  ?band_members a dbpedia:Musician ; dbpedia:memberOf ?band .
  ?producer dbpedia:associatedBand ?band
  ?band_member rdfs:label ?band_member_name
  ?band_member a dbpedia:Person
}
",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
531,40,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenant_name
WHERE {
  ?office_holder a dbpedia:OfficeHolder ;
                 dbpedia:office_electedTo ""Madrid City Council"" ;
                 dbpedia:office_term ""2003-2007"" .
  ?office_holder foaf:homepage ?home_page .
  ?home_page rdfs:label ?home_label .
  ?office_holder rdfs:label ?office_name .
  FILTER (regex(str(?office_name), 'Miguel Maura') OR regex(str(?office_name), 'Mariano Rajoy'))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
119,55,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?president_name ?country ?party_name 
WHERE { 
  ?president a dbpedia:Politician ; 
    dbpedia:office dbpedia:President_of_Galicia . 
  ?president rdfs:label ?president_name . 
  ?country a dbpedia:Country ; 
    rdfs:label ?country_name . 
  ?party a dbpedia:PoliticalParty ; 
    rdfs:label ?party_name . 
  ?president dbpedia:memberOf ?party . 
  ?party rdfs:label 'Spanish Socialist Workers' Party' }",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
386,19,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war_name ?location WHERE {
  ?war a dbo:Conflict ;
         dbpedia:location ?location .
  ?war rdfs:label ?war_name .
  FILTER (lang(?war_name) = ""en"" OR lang(?war_name) = ""lt"")  # Search in English or Lithuanian
}
```

This query looks for conflicts (dbo:Conflict) with a location property (dbpedia:location) and retrieves the name of the conflict in either English or Lithuanian.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
213,6,train,Give me the country of Cat Country (novel) and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_of_novel ?winston_chang_birthplace
WHERE {
  ?novel dbpedia:isBasedOnCreativeWork [
                    dbpedia:type ""novel"";
                    dbpedia:title ""Cat Country""
                  ] .
  ?novel rdfs:label ?country_of_novel .
  ?person a dbpedia:Person ;
           dbpedia:name ""Winston Chang"" ;
           dbpedia:birthPlace ?winston_chang_birthplace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,19,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?john_III_name
WHERE {
  ?philip a dbpedia:Person ;
            dbpedia:child ?catherine .
  ?catherine a dbpedia:Person ;
             dbpedia:parent ?john_iii .
  ?john_iii a dbpedia:Person ;
           rdfs:label ?john_iii_name .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,39,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?gillmore_name ?gillmore_birthplace ?death_place_name ?death_place_birthplace
WHERE {
  ?gillmore a dbpedia:Person ;
            dbpedia:birthPlace ?gillmore_birthplace .
  ?death_place a dbpedia:Location ;
               dbpedia:type ""settlement"" ;
               dbpedia:country ""United States of America"" .
  ?gillmore rdfs:label ?gillmore_name .
  ?death_place rdfs:label ?death_place_name .
  ?gillmore dbpedia:deathDate ""1850-08-05"" .
  ?death_place dbpedia:locatedIn ?gillmore_birthplace
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
468,6,train,Give me the reference to Peter IV and child of Alfonso IV of Aragon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?peter_name ?alfonso_name ?child_relationship
WHERE {
  ?peter a dbpedia:Person ;
           dbpedia:name ""Peter IV of Aragon"" .
  ?alfonso a dbpedia:Person ;
            dbpedia:name ""Alfonso IV of Aragon"" .
  ?peter dbpedia:child ?child .
  ?child rdfs:label ?child_relationship
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
39,39,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name WHERE {
  ?musician a dbpedia:Musician ; dbpedia:name ?name .
  ?musician rdfs:label ?band_name .
  ?name string-interpolate 'Robert Alan ''Thompson''' as ?birth_name .
}
",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
782,32,train,Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_name ?eric_clapton_band ,?fabulous_thunderbirds_band 
WHERE { 
  ?eric_clapton a dbpedia:Musician ; 
  dbpedia:band ?eric_clapton_band . 
  ?fabulous_thunderbirds a dbpedia:Band ; 
  dbpedia:hasMember ?fabulous_thunderbirds_member . 
  ?eric_clapton_band rdfs:label ?band_name . 
  ?fabulous_thunderbirds_member rdfs:label ?fabulous_thunderbirds_band . 
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
943,50,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dc: <http://purl.org/dc/elements/1.1/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 

SELECT ?person_name 
WHERE { 
  ?person a dc:Person ; 
  dc:father ?grandfather ; 
  dc:birthPlace ?birthPlace ; 
  rdf:type [ a ns:OfficeHolder; rdfs:label ?office_holder_label ] . 
  ?grandfather a dc:Person ; 
  dc:name ""Abin Sur"" ; 
  rdf:type [ a ns:Royalty; rdfs:label ?royalty_label ] . 
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
263,21,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent_name ?grandparent_birthplace
WHERE {
  ?mary_elphinstone a dbpedia:Person ;
                    dbpedia:birthPlace dbpedia:Middlesex .
  ?parents_of_mary_elphinstone a dbpedia:Family ;
                       dbpedia:includes ?mary_elphinstone .
  ?claud_bowes_lyon a dbpedia:Person ;
                     dbpedia:birthDate ""1889-06-23""^^xsd:date ;
                     dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:birthPlace ?grandparent_birthplace .
  ?claud_bowes_lyon rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne"" .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
119,10,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_name ?tenant_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:name ""Alberto Núñez Feijóo""@es .
  ?building a dbpedia:Building ;
            dbpedia:name ""Santiago de Compostela""@es ;
            dbpedia:occupant ?tenant_name .
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
531,17,train,"Give me the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name ?leader_name
WHERE {
  ?miguel_maura a dbpedia:Person ;
                 dbpedia:memberOf [ a dbpedia:PoliticalParty ; rdfs:label ?party_name ] .
  ?party a dbpedia:PoliticalParty ;
           dbpedia:hasLeader ?leader .
  ?miguel_maura dbpedia:isMemberOf ?party .
  ?party rdfs:label ?party_name .
  ?leader rdfs:label ?leader_name
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
140,17,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Identify John McDermott's death place (a settlement)
SELECT ?death_place_name WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:birthPlace ?birth_place ;
            dbpedia:deathPlace ?death_place .
  ?death_place rdfs:label ?death_place_name
}

# Step 2: Find the political party that was ruling at the time or is significant
SELECT ?ruling_party_name WHERE {
  ?party a dbpedia:PoliticalParty ;
           rdfs:label ?ruling_party_name .
  OPTIONAL { 
    ?party dbpedia:ruledFromPeriod ?period .
    ?period a dbpedia:TimePeriod .
  }
}

# Step 3: Identify the commander of Pickett's Charge
SELECT ?commander_name WHERE {
  ?commander a dbpedia:MilitaryPerson ;
             foaf:name ?commander_name ;
             dbpedia:roleInBattle ""Commander of Pickett's Charge"" .
}

# Step 4: Link the commander to the identified political party
JOIN {
  ?commander dbpedia:affiliatedWith ?ruling_party .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
737,36,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_child_title ?parent_name ?parent_title
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?royalty_child .
  ?parent rdfs:label ?parent_name .
  ?royalty_child a dbpedia:Royalty ;
               dbpedia:hasParent ?parent .
  ?royalty_child rdfs:label ?royalty_child_name .
  ?parent rdfs:label ?parent_title .
  FILTER (regex(str(?parent_title), 'Duke|Archduke')) .
  ?parent_title precedesStr(?carl_duke_of_wurttemberg_title)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,40,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ""Roger II of Sicily"" ;
           dbpedia:birthPlace ""Sicily"" .
  ?child rdfs:label ?child_name .
  ?child a dbpedia:Royalty .
  ?parent dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
              rdfs:label ""Elvira of Castile, Queen of Sicily"" ;
              dbpedia:birthPlace ""Castile"" .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
353,28,train,"Give me the father of William II of Sicily and child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?father_name ?child_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ""Sicily"" .
  ?child rdfs:father ?father .
  ?father a dbpedia:Person ;
          rdfs:label ?father_name .
  ?father dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""Roger III, Duke of Apulia"";
            dbpedia:birthPlace ""Apulia"" .
  ?parent dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person ;
            rdfs:label ""Elvira of Castile, Queen of Sicily"" .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
361,16,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }",,3,5,4,2,2,2,3,28,0,0,4,0,0.0,0
89,8,train,Give me the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:birthPlace <http://dbpedia.org/property/birthPlace_of_Saw_Shwe_Khet> .
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent ;
           dbpedia:birthPlace ?child_birthplace .
}
```

This query looks for individuals (`?child`) who are children of the person (`?parent`) born in the same birth place as Saw Shwe Khet. The `dbpedia:birthPlace_of_Saw_Shwe_Khet` property is used to link Saw Shwe Khet to his place of birth, which we assume to be a specific location in Myanmar.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,2,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name WHERE {
  ?parent a dbpedia:Monarch ;
            dbpedia:monarchy_start ""1285"" ;
            dbpedia:death_date ""1290"" .
  ?child a dbpedia:Person ;
         dbpedia:birthDate ?child_birthdate .
  ?child rdfs:label ?child_name .
  FILTER (?parent = ?child father) 
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
258,5,train,"Who is the person born, that is a politician, as Eleonora Menicucci de Oliveira?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?politician_birthplace
WHERE {
  ?politician a dbpedia:Politician ;
              dbpedia:birthPlace ?politician_birthplace .
  ?politician_name rdfs:label ?politician_name
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
668,51,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name ?birthplace ?rod_argent_link 
WHERE { 
  ?artist a dbpedia:Artist ; 
  dbpedia:birthPlace ?birthplace . 
  ?artist rdfs:label ?artist_name . 
  ?artist dbpprop:workedWith ?rod_argent . 
  ?rod_argent rdfs:label ?rod_argent_name . 
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?character_name ?character_profession
WHERE {
  ?character a dbpedia:Character ;
            rdfs:label ?character_name .
  OPTIONAL { ?character dbpedia:hasAlterEgo ?alter_ego }
  ?alter_ego rdfs:label ""The Shadow"" .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
557,3,train,"Give me the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?character_name ?character_description
WHERE {
  ?character a dbpedia:FictionalCharacter ;
             dbpedia:hasAlias ""Kent Allard"" ;
             dbpedia:appearsIn dbpedia:ComicBook .
  ?character rdfs:label ?character_name .
  ?character dbo:medium ""Print"" .
}
```

This query looks for fictional characters that have ""Kent Allard"" as an alias and are associated with comic books (print media). It then selects the character's name and a description.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,44,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","SELECT ?actor_name ?film_title ?producer_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:givenName ?actor_name ;
           dbpedia:roleInFilm ?film .
  ?film a dbpedia:Film ;
          dbpedia:productionCompany ?producer_company .
  ?producer_company a dbpedia:Organization ;
                    rdfs:label ?producer_name
}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the reference to Spanish Socialist Workers' Party.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name ?party_description
WHERE {
  ?party a dbpedia:PoliticalParty ;
           rdfs:label ?party_name .
  ?party dbpedia:politicalIdeology ""Socialism"" .
  ?party rdfs:label ?party_description
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,61,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","SELECT ?awardee_name ?awardee_force ?birthplace_name ?birthplace_region
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:deathDate ""1850-08-05"" ;
           rdfs:label ?awardee_name .
  ?awardee dbpedia:winAward award:QuincyAdamsGillmore_Award .
  ?birthplace a dbpedia:SpatialThing ;
            dbpedia:isPartOfCountry ""United States"" ;
            dbpedia:populationCount ""small"" ; # Assuming small population for a settlement
            rdfs:label ?birthplace_name .
  ?awardee dbpedia:birthPlace ?birthplace .
}",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
756,50,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?team_name ?season_year ?country_name
WHERE {
  ?player foaf:name ""Thomas Letsch"" .
  ?player a dbpedia:SoccerPlayer .
  ?team dbpedia:hasMember ?player .
  ?team rdfs:label ?team_name .
  ?team dbpedia:manager ?manager_name .
  ?season a dbpedia:SportsSeason .
  ?season rdfs:label ?season_year .
  ?country dbpedia:leader ""Chancellor of Germany"" .
  ?country rdfs:label ?country_name .
  ?manager a foaf:Person .
  ?manager rdfs:label ?manager_name
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
119,31,train,"Give me the tenant of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?primeMinisterName ?office
WHERE {
  ?quintana a dbpedia:Person ;
             dbpedia:birthDate ""1967-01-01"" ;
             rdfs:label ""Anxo Quintana""@es .
  ?quintana dbpedia:officeHolder dbpedia:Prime_Minister_of_Spain .
  ?office a dbpedia:Office ;
            dbpedia:role dbpedia:Head_of_Government ;
            rdfs:label ?office_name .
  ?office rdfs:label ?office_name .
  OPTIONAL { ?office foaf:homepage ?office_url }
}
```

This query looks for Anxo Quintana's birth date, his role as the holder of the Prime Minister's office in Spain, and the label of that office. It also tries to find a homepage URL for the office (though this part is optional).",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
119,3,train,"Give me the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration_name ?administration_url
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:office dbpedia:Regional_Government ;
               dbpedia:officeHolderOfficeName ?administration_name .
  ?politician foaf:name ""Anxo Quintana"" .
  ?administration a dbpedia:Administration ;
                 dbpedia:locatedInCountry ""Spain"" .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
905,34,train,"Give me the child of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?royalty_name ?royalty_relationship
WHERE {
  ?stephen_v a dbpedia:Monarch ;
               dbpedia:country ""Kingdom of Hungary"" ;
               dbpedia:deathDate ""1370"" .
  ?philip_despot_of_romania a dbpedia:Royalty ;
                       dbpedia:birthPlace ""Romania"" ;
                       rdfs:label ""Philip, Despot of Romania"" .
  ?royalty_relationship a dbpedia:FamilyRelation ;
                        dbpedia:relatesTo ?stephen_v ;
                        dbpedia:role ""Spouse of Parent of"" .
  ?royalty_name rdfs:label ?royalty_name
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
742,9,train,Give me the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alumnus_name WHERE {
  ?university dbpedia:name ""Пловдивски университет „Паисий Хилендарски” ;
                  dbpedia:alumni ?alumnus .
  ?alumnus rdfs:label ?alumnus_name
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
19,8,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?husband_name ?husband_birthplace ?marital_status
WHERE {
  ?wife a dbpedia:Person ;
           dbpedia:birthPlace england ;
           dbpedia:role ""poet"" .
  ?wife rdfs:label ""Caroline Louise Bevan Symonds""@en .
  ?husband a dbpedia:Person ;
           dbpedia:birthPlace ?husband_birthplace .
  ?husband foaf:spouse ?wife .
  FILTER (lang(?husband_name) = ""en"")  # Assuming English names
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
89,58,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of Saw Min Hla.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor_name
WHERE {
  ?royalty1 a dbpedia:Royalty ;
             dbpedia:spouse ?spouse_name .
  ?spouse_name a dbpedia:Person ;
                 dbpedia:partner ?child_name .
  ?child_name a dbpedia:Person ;
               dbpedia:parent ?predecessor_name .
  ?predecessor_name a dbpedia:Royalty
}
```",6,8,7,3,3,3,3,71,0,1,1,0.0,0.0,0
731,13,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?project_name ?project_description
WHERE {
  ?project a dbo:Building ;
            dbpedia:name ?project_name ;
            dbpedia:description ?project_description .
  ?project_description rdfs:label ""Force of Architecture"" . # Assuming 'force' refers to architectural impact or significance
}
```",3,3,4,3,1,3,2,20,0,0,734,0,0.0,0
89,2,train,Give me the predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor_name ?predecessor_birthplace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  ?predecessor a dbpedia:Politician ; # Assuming a political role for predecessor
                   dbpedia:officeHolder ?office .
  ?office a dbpedia:Office .
  ?person foaf:name ?person_name .
  ?predecessor foaf:name ?predecessor_name .
  FILTER (?person_name = ""Myat Hpone Pyo"") .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,17,train,"Give me the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX videogame: <http://dbpedia.org/ontology/videogame>

SELECT ?alter_ego_name WHERE {
  ?game dbpedia:title ""The Shadow"" .
  ?game dbpedia:alterEgo ?alter_ego_name .
  ?alter_ego_name a dbpedia:ComicsCharacter
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
557,38,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name
WHERE {
  ?collins_work a dbpedia:Work ;
               dbpedia:creator ?collins_producer .
  ?gaynor_work a dbpedia:Work ;
                dbpedia:creator ?gaynor_producer .
  
  ?collins_producer rdfs:label ?collins_producer_name .
  ?gaynor_producer rdfs:label ?gaynor_producer_name
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
263,1,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_title
WHERE {
  ?mary elphinstone a dbpedia:Person ;
            dbpedia:birthDate ""1843"" ;
            dbpedia:deathDate ""1926"" ;
            dbpedia:spouse ?husband ;
            foaf:familyMember ?parent .
  ?parent a dbpedia:Person ;
         dbpedia:birthPlace ?parent_birthplace .
  ?husband rdfs:label ""John Campbell, 1st Duke of Argyll"" .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
80,23,train,Give me the actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?movie_title 
WHERE { 
  ?book a dbpedia:Book ; rdfs:author ?author_name . 
  ?author_name ns:name ""Heather Hendershot"" . 
  ?movie a dbpedia:Film ; rdfs:subject ?movie_subject . 
  ?movie_subject ns:hasAuthor ?book . 
  ?movie rdfs:actor ?actor_name . 
}",3,3,4,3,1,3,3,71,0,0,55786,0,0.0,0
103,15,train,"Give me the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> ?v1 . }",,2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
39,37,train,"Give me the band of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_name
WHERE {
  ?artist a dbpedia:Musician ;
            rdfs:label ""Bob Thompson""@en .
  ?artist dbpedia:workedWith ?band .
  ?band a dbpedia:Band ;
         rdfs:label ?band_name .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
513,7,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award_name WHERE {
  ?person dbpedia:awardedBy dbpedia:University_of_Alabama ;
            dbpedia:recipientOf ?award_name .
  ?person rdfs:label ""George H. Cameron"" .
}
```",2,2,3,2,1,3,2,20,0,0,87241,0,0.0,0
159,6,train,Give me the writer of Always the Love Songs.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_name WHERE {
  ?author a dbpedia:Person ;
         dbpedia:birthPlace ?author_birthplace .
  ?author rdfs:label ""Cece Bell"" .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
492,6,train,Give me the death place of Reed Howes and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace1 ?deathPlace2
WHERE {
  ?person1 a dbpedia:Person ;
            dbpedia:deathPlace ?deathPlace1 .
  ?person2 a dbpedia:Person ;
            dbpedia:deathPlace ?deathPlace2 .
  ?person1 rdfs:label ""Reed Howes"" .
  ?person2 rdfs:label ""Carolyn Jones"" .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
468,5,train,"Give me the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father_name
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:birthDate ?birthDate .
  ?king rdfs:label ?king_name .
  ?king dbpedia:parent ?father .
  ?father a dbpedia:Person ;
          dbpedia:birthDate ?father_birthDate .
}
  
AND
{
  ?king ns:name ""Alfonso IV of Aragon"" .
  ?father ns:name ?father_name .
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
78,14,train,"Give me the associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name ?artist_genre
WHERE {
  ?composer a dbpedia:Musician ; dbpedia:composition ?composition .
  ?composition rdfs:label ""Wizards of Waverly Place"" .
  ?writer a dbpedia:Person ; dbpedia:role ""Writer"" ; dbpedia:name ""Todd J. Greenwald"" .
  ?artist a dbpedia:Musician ; dbpedia:role ""Artist"" ; dbpedia:name ?artist_name .
  ?composer dbpedia:composedFor ?composition .
  ?writer dbpedia:workedOn ?composition .
}",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
531,20,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name ?office ?country
WHERE {
  ?person a dbpedia:OfficeHolder ;
            dbpedia:politicalAffiliation dbpedia:PoliticalParty ;
            dbpedia:nationality ?country .
  ?person rdfs:label ?name .
  ?person dbpedia:birthPlace ""Central African Republic"" .
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
159,32,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?writer_name ?war_role ?political_office
WHERE {
  ?writer a dbpedia:Person ; dbpedia:birthPlace xsd:string ; dbpedia:role dbpedia:Writer .
  ?commander a dbpedia:Person ; dbpedia:role dbpedia:Commander ; dbpedia:birthPlace xsd:string .
  ?writer dbpedia:successor ?commander .
  ?writer rdfs:label ?writer_name .
  ?war a dbpedia:Event ; dbpedia:name 'Russo-Polish War (1654–1667)' .
  ?writer dbpedia:participatedIn ?war .
}",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
531,53,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?office_name ?tenant WHERE {
  ?officeHolder a dbpedia:OfficeHolder ; dbpedia:office ?office_name .
  ?officeHolder rdfs:label ?office_name .
  ?officeHolder dbpprop:memberOf dbpedia:PPE_Party .
  ?tennant a dbpedia:Person ; dbpedia:residence ?tenant_residence .
  ?tennant rdfs:label ?tenant_name .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
311,8,train,Give me the band member of the writer of No Alternative.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name ?band_members
WHERE {
  ?bob_mould a dbpedia:Person ;
               dbpedia:birthDate ""1960-04-01"" ;
               dbpedia:name ""Robert Alan Mould"" ;
               foaf:musicalArtist [ a dbpedia:MusicGroup ;
                             rdfs:label ?band_name ] .
  ?band a dbpedia:MusicGroup ;
         dbpedia:bandMember ?band_member .
  ?band_member a dbpedia:Person
}
```",2,2,3,2,1,3,2,20,0,0,123,0,0.0,0
941,17,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel and child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?countess_reuss_name
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:birthDate ""1801-08-10"" ;
            dbpedia:parent ?princess_antoinette .
  ?princess_antoinette a dbpedia:Person ;
                    rdfs:label ""Princess Charlotte Mathilde Frederica of Brunswick-Wolfenbüttel"" .
  ?child'sSpouse a dbpedia:Person ;
               rdfs:label ?countess_reuss_name .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
609,47,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```

This query will retrieve the birth places of the specified individuals from the DBpedia dataset.",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,18,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor) and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace ?political_party
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ?person_name ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Harriette Arlene Lake""@en .
  ?person dbpedia:pseudonym ""Harriflake"" .
  ?person dbpedia:politicalPartyMemberOf dbpedia:RepublicanParty_(United_States) .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
419,6,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX awf: <http://purl.org/awf/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?almaMater
WHERE {
  ?laf a awf:AustralianLaureateFellowship ;
        awf:recipientName ?recipientName .
  ?recipientName rdfs:label ?name .
  ?recipientName dbpedia:nationality ""Australian"" .
  ?laf dbpedia:awardee ?recipient .
  ?recipient dbpedia:almaMater ?almaMater .
}
```",2,4,3,2,1,2,2,9,0,0,8,0,0.0,0
412,9,train,Give me the entity in Athens and war of Konstantinos Ventiris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?person_name ?war
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ""Athens, Greece"" ;
           dcterms:partOfEvent ?war.
  ?war a dbpedia:Event ;
         dbpedia:startDate ""1919-08-10"" ;
         dbpedia:endDate ""1922-08-10"".
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
225,16,train,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?awardee_name ?awardee_birthplace
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:nationality ""Japanese"" .
  ?awardee dbpedia:birthPlace ?awardee_birthplace .
  ?awardee rdfs:label ?awardee_name
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
37,0,train,Give me the birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Bob Crewe""@en
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
39,46,train,Give me the professional in the profession of the producer of Coke Studio Philippines and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name ?role1_name ?role1_birthplace ?role2_name ?role2_birthplace 
WHERE { 
  ?producer a dbpedia:Person ; 
  dbpedia:occupation ?role1 . 
  ?role1 a dbpedia:MusicRole ; 
  dbpedia:alterEgo ?role2 . 
  ?role2 a dbpedia:MusicRole . 
  ?producer rdfs:label ?producer_name . 
  ?role1 rdfs:label ?role1_name . 
  ?role2 rdfs:label ?role2_name 
}",5,5,6,3,2,3,3,71,0,0,39640,0,0.0,0
723,3,train,"Give me the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviedb: <http://www.moviedb.org schema/>

SELECT ?producer_name
WHERE {
  ?movie a moviedb:Film ;
           moviedb:productionCompany ?producer .
  ?producer rdfs:label ?producer_name
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
756,60,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name 
WHERE {
  ?season a dbpedia:SportingEvent ; dbpedia:sport 'Football' ; dbpedia:seasonYear 2006 ; dbpedia:leagueName '2. Bundesliga' .
  ?team a dbpedia:SoccerTeam ; dbpedia:clubName 'VfL Bochum' ; foaf:manager ?manager_name .
  ?manager a dbpedia:Person ; dbpedia:birthDate '1968-08-26' .
  ?season rdfs:seeAlso ?team .
  ?manager rdfs:seeAlso ?team
}",6,16,7,3,2,3,3,71,0,0,1,0,0.0,0
472,20,train,"Give me the administration of Olaf I of Denmark and territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?king_name ?king_administration ?copenhagen_territory ?prince_name ?prince_birthplace 
WHERE { 
?king a dbpedia:Monarch ; dbpedia:monarchyAdminstration ?king_administration . 
?king dbpedia:capitalCity ?copenhagen_territory . 
?prince a dbpedia:Person ; dbpedia:birthPlace ?prince_birthplace . 
?king rdfs:label ?king_name . 
?prince rdfs:label ?prince_name . 
?king ?prince 
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
557,42,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer_name
WHERE {
  ?producer a dbpedia:Producer ;
            dbpedia:producedFilm ?movie .
  ?movie a dbpedia:Film ;
           dbpedia:actor dbpedia:Janet_Gaynor ;
           dbpedia:title ""A Star Is Born (1937 film)"" .
  ?producer rdfs:label ?producer_name .
  OPTIONAL {
    ?producer foaf:alterEgo ""The Shadow"" .
    ?movie dbpedia:productionCompany ?production_company .
    ?production_company a dbpedia:FilmProductionCompany ;
                       dbpedia:film ?other_movie .
    ?other_movie a dbpedia:Film ;
                    dbpedia:title ""The Adventures of Tom Sawyer (1938 film)"" .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
119,45,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration_name ?party_name
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:office dbpedia:Prime_Minister_of_Spain ;
               rdfs:label ""Alberto Núñez Feijóo""@es .
  ?politician foaf:memberOf ?political_party .
  ?political_party a dbpedia:Political_Party ;
                rdfs:label ?party_name .
  FILTER (lang(?politician) = ""es"" AND lang(?political_party) = ""es"")
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
756,56,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?birthplace ?role
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthPlace <en:Germany> ; # West Germany
            dbpedia:role dbpedia:SportsManager .
  ?manager rdfs:label ?manager_name .
  ?team a dbpedia:SportTeam ;
           dbpedia:type dbpedia:SoccerTeam ;
           dbpedia:season ""2007-08"" .
  ?manager dbpedia:managed ?team .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
225,9,train,Give me the region of the time zone in Kiyosu.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?time_zone_region
WHERE {
  ?city geo:location [ geo:lat ?latitude ; geo:long ?longitude ] .
  ?city rdfs:label ""Kiyosu""@en .
  ?time_zoneRegion a dbpedia:Time_Zone ;
                 geo:boundingBox [ mingeo:longitude ?min_long ; maxgeo:longitude ?max_long ;
                                    mingeo:latitude ?min_lat ; maxgeo:latitude ?max_lat ]
  FILTER( ?latitude >= ?min_lat && ?latitude <= ?max_lat &&
         ?longitude >= ?min_long && ?longitude <= ?max_long )
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
119,11,train,Give me the entity in Poland and war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?polish_person_name ?war_commander_name
WHERE {
  ?polish_person a dbpedia:Person ;
                dbpedia:nationality ""Poland"" .
  ?polish_person dbpedia:participatedInMilitaryConflict ?conflict .
  ?conflict rdfs:label ""French Revolutionary Wars"" .
  ?war_commander a dbpedia:Person ;
               dbpedia:role ""Commander"" ;
               dbpedia:participatedInMilitaryConflict ?conflict .
  ?polish_person rdf:type dbpedia:HistoricalFigure .
  ?war_commander rdf:type dbpedia:MilitaryPerson
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,6,train,Give me the war of Tom Phillips (Royal Navy officer) and force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officer_name ?war
WHERE {
  ?officer a dbpedia:Person ;
           dbpedia:birthDate ?officer_birthdate ;
           dbpedia:navyService ?officer_navy_service .
  ?officer_navy_service a dbpedia:NavalVoyage ;
                       dbpedia:startYear ?war_year .
  ?war_year > 1800.
  FILTER (?officer_name = ""Tom Phillips"" || ?officer_name = ""William Tennant"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
595,15,train,"Give me the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name
WHERE {
  ?book a dbpedia:WrittenWork ;
           dbpedia:author ?author .
  ?author a dbpedia:Person ;
          dbpedia:officeHolder true;
          dbpedia:politician true.
  ?book rdfs:label ""What Happened""@en .
  ?author rdfs:label ?author_name
}
```",2,6,3,2,1,3,3,71,0,0,1,0,0.0,0
295,17,train,Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?producer_birthplace
WHERE {
  ?producer a dbpedia:Person ;
            dbpedia:birthPlace ?producer_birthplace .
  ?producer rdfs:label ""Richard Curtis""@en .
}
```",4,4,5,3,2,3,2,20,0,1,1,0.0,0.0,0
769,5,train,"Give me the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?team_name
WHERE {
  ?team a dbpedia:SportsTeam ;
           dbpedia:sport dbpedia:Soccer ;
           dbpedia:name ""Hong Kong C Team"" .
  ?manager a dbpedia:Person ;
            dbpedia:role dbpedia:Manager ;
            dbpedia:managedTeam ?team .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
871,7,train,Who is the alumnus of Eton College?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?alumnus_name
WHERE {
  ?alumnus a dbpedia:Person ;
           dbpedia:alumniOf <http://dbpedia.org/ontology/Eton_College> .
}
```",1,1,2,1,1,3,3,71,0,0,211,0,0.0,0
58,5,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?movie_name ?movie_description
WHERE {
  ?movie a dbpedia:Film ;
         dbpedia:productionCompany ?production_company .
  ?production_company rdfs:label ?movie_name .
  FILTER (lang(?movie_name) = ""en"")  # Assuming we want the English name
}
```",1,1,2,1,1,3,2,20,0,6357,39790,0.0,0.0,0
628,24,train,Give me the person born as the birth name of Bobby Shmurda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?real_name ?birth_place
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ?name ;
           dbpedia:birthPlace ?birth_place .
  FILTER (str(?name) = ""Ackquille Scott Pollard"") .
  ?person rdfs:label ?real_name .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,43,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_name ?royalty_title
WHERE {
  ?charles_spouse a dbpedia:Person ;
               dbpedia:spouseOf ?charles_ii_of_neapols ;
               dbpedia:parent ?charles_father .
  ?charles_father a dbpedia:Person ;
                rdfs:label ""Louis II of Bourbon"" ;
                dbpedia:father ?charles_grandfather .
  ?charles_grandfather a dbpedia:Person ;
                  rdfs:label ?royalty_name ;
                  dbpedia:title ?royalty_title
}
```

This query looks for individuals who are:
- The spouse of Charles II of Naples (identified by the property `dbpedia:spouseOf`)
- A parent of Louis II of Bourbon (identified by the property `dbpedia:parent`)
- And traces their lineage back to a grandparent (`charles_grandfather`) with a title (`dbpedia:title`).",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
347,49,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?commander_name ?societal_event_name ?event_as_tv_show
WHERE {
  ?maria_anna_of_bavaria a dbpedia:Person ;
                       rdfs:label ""Maria Anna of Bavaria"" .
  ?maximilian_I_holy_roman_emperor a dbpedia:Person ;
                               rdfs:label ""Maximilian I, Holy Roman Emperor"" .

  ?ferdinand II a dbpedia:Person ;
                    rdfs:label ""Ferdinand II, Holy Roman Emperor"" ;
                    dbpedia:child ?royalty_child_name .

  ?royalty_child_name a dbpedia:Royalty .

  ?commander_de_lanouelle a dbpedia:Person ;
                       rdfs:label ""Jean Baptiste Eustache de Lanouelle"" ;
                       dbpedia:serve_in ?commander_unit .

  ?2nd_dragoon_regiment a dbpedia:Campaigning_military_unit ;
                         rdfs:label ""2nd Dragoon Regiment"" .

  ?french_revolution a dbpedia:Event ;
                        rdfs:label ""French Revolution"" .

  ?les_miserables_work a dbpedia:Work ;
                          rdfs:label ""Les Misérables"" ;
                          dbpedia:adaptation_to_tv_show ?event_as_tv_show .

  ?french_revolution dbpedia:has_participant ?commander_de_lanouelle .
  ?les_miserables_work dbpedia:author ?author_name .
  ?author_name rdfs:label ""Victor Hugo"" .

  ?royalty_child_name dbpedia:child_of ?maria_anna_of_bavaria .
  ?commander_de_lanouelle commander_of ?2nd_dragoon_regiment .
  ?french_revolution dbpedia:event_type ""societal event"" .
  ?event_as_tv_show a dbpedia:Television_program .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
399,1,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?singer_name ?singer_profession 
WHERE { 
  ?singer a dbpedia:Musician ; 
  dbpedia:role ?singer_role . 
  ?singer_role rdfs:label ?singer_profession . 
}",1,1,2,1,1,2,2,9,0,0,10364,0,0.0,0
87,24,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?movie_title ?director_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:starring Audrey_Hepburn .
  ?actor a dbpedia:Person ;
           dbpedia:roleInFilm ?movie ;
           foaf:spouse ?director .
  ?director a dbpedia:Person ;
            rdfs:label ?director_name .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
595,13,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?book_name WHERE {
  ?book a dbpedia:Book ;
         dbpedia:author ?author .
  ?author rdfs:label ""Bill Clinton"" .
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
737,12,train,"Give me the child of Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?parent1_name ?parent2_name 
WHERE { 
  ?child a dbpedia:Person ; 
  dbpedia:hasParent ?parent1 ; 
  dbpedia:hasParent ?parent2 . 
  ?parent1 rdfs:label ?parent1_name . 
  ?parent2 rdfs:label ?parent2_name . 
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
198,17,train,"Give me the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathDate ""1850-08-05""^^xsd:date ;
            dbpedia:nationality dbpedia:United_States .
  ?person rdfs:label ?person_name .
  ?person dbpedia:birthPlace ?birthplace_name
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
119,32,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?president_name ?region_name 
WHERE { 
  ?president a dbpedia:Politician ; 
    dbpedia:officeHolder ?office . 
  ?office rdfs:label ?office_label . 
  ?office_label ns:language 'es' . 
  ?region a dbpedia:AdministrativeTerritory ; 
    dbpedia:name ?region_name . 
  ?president dbpedia:birthPlace ?president_birthplace . 
  ?region dbpedia:country ?region_country . 
  ?president rdfs:label ?president_name . 
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
80,43,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?role
WHERE {
  ?song a dbpedia:Song ;
            dbpedia:artist T.I. .
  ?musical_work a dbpedia:MusicalWork ;
                 dbpedia:lyrics ?song_lyrics .
  ?actor rdfs:label ?actor_name ;
           dbpedia:role ?role .
  ?song_riff rdf:type rdf:Property;
             dbpedia:musician T.I.;
             dbpedia:occursIn ?song .
  ?musical_work_riff rdf:type rdf:Property;
             dbpedia:musician ?actor .
  ?song_lyrics rdfs:label ""Whatever You Like"" .  # Assuming this is the song in question
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
668,44,train,Give me the person born as the birth name of Joey B and professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?joey_b_name ?joey_b_birthplace ?rod_argent_name ?rod_argent_birthplace ?pacely_association
WHERE {
  ?joey_b a dbpedia:Person ;
            dbpedia:birthPlace ?joey_b_birthplace .
  ?rod_argent a dbpedia:Person ;
               dbpedia:birthPlace ?rod_argent_birthplace ;
               foaf:musicalArtist ?pacely .
  ?joey_b rdfs:label ?joey_b_name .
  ?pacely a dbpedia:Album;
           dbpedia:artist ?joey_b .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
311,10,train,"Who is the writer of the album, that is a musical work and a work and an album, of Sappy?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name WHERE {
  ?album a dbpedia:Album ;
           dbpedia:title ""Sappy"" .
  ?album dbpedia:artist ?artist_name
}
```",2,5,3,2,1,3,2,20,0,0,26,0,0.0,0
871,48,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_of_awardee ?father_of_child
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:award ""Rodney Lees"" .
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent_of_awardee ;
           dbpedia:child ?father_of_child .
  ?father_of_derby a dbpedia:Person ;
               dbpedia:name ""Frederick Stanley, 16th Earl of Derby"" .
  ?parent_of_awardee rdfs:label ?parent_of_awardee_name .
  ?father_of_child rdfs:label ?father_of_child_name
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of Kate Dimbleby.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author_name ?parent_name
WHERE {
  ?movie a dbpedia:Film ;
           dbpedia:actor dbpedia:Vera_Lynn .
  ?tv_show a dbpedia:Television_Series ;
             dbpedia:creator ?author_name .
  ?author foaf:parent ?parent_name .
  ?parent_name rdfs:label ""Kate Dimbleby"" .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
557,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?character_name ?character_profession
WHERE {
  ?character a dbpedia:Character ;
            rdfs:label ?character_name .
  OPTIONAL { ?character dbpedia:hasAlterEgo ?alter_ego }
  ?alter_ego rdfs:label ""The Shadow"" .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
58,7,train,Give me the spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name 
WHERE {
  ?person a dbpedia:Person ;
  dbpedia:spouseOf ?spouse_name ;
  dbpedia:name ?person_name .
  ?person_name = 'Conway Twitty' }
",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
384,0,train,Give me the party of Guillaume Peltier.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name WHERE {
  ?politician dbpedia:P31 dbpedia:MemberOfPoliticalParty ?party .
  ?politician rdfs:label ""Guillaume Peltier""@fr .
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
213,15,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of Cat Country (novel).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child_birthplace
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:deathPlace ""Taipei, Taiwan"" .
  ?novel ""Cat's Eye"" .
  ?child a dbpedia:Character ;
            dbpedia:parent ?parent ;
            dbpedia:birthPlace ?child_birthplace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
78,8,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?musical_artist_name WHERE {
  ?stuart_mcbeath_tosh a dbpedia:Person ;
  dbpedia:memberOf ?musical_artist .
}",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
557,2,train,Give me the producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name
WHERE {
  ?film a dbpedia:Film ;
           dbpedia:productionCompany ?producer .
  ?producer rdfs:label ?producer_name
}
```",1,1,2,1,1,3,3,71,0,6357,1,0.0,0.0,0
756,30,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthPlace ?manager_birthplace .
  ?manager rdfs:label ?manager_name .
  ?VfL_Bochum a dbpedia:SoccerTeam ;
              dbpedia:manager ?manager .
  ?Thomas_Letsch a dbpedia:Person ;
               dbpedia:birthPlace ""West Germany""^^xsd:string ;
               foaf:memberOf ?VfL_Bochum .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
737,15,train,"Give me the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },,2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,51,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
}
```",5,7,6,3,2,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
943,58,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather_name ?royalty_status ?office_holder_status ?shadow_alter_ego
WHERE {
  ?child1 a dbpedia:Person ;
           dbpedia:hasParent ?parent1 .
  ?parent1 a dbpedia:Person ;
            dbpedia:hasParent ?grandfather .
  ?child2 a dbpedia:Person ;
           dbpedia:hasParent ?parent2 .
  ?parent2 a dbpedia:Person ;
            dbpedia:hasParent ?grandfather .

  ?grandfather a dbpedia:Royalty ; # Royalty status
               dbpedia:officeHolder ?office_holder_status . # Office holder status

  ?child1 rdfs:label ?child1_name .
  ?child2 rdfs:label ?child2_name .

  ?grandfather rdfs:label ?grandfather_name .
  ?shadow_alter_ego a dbpedia:Character ;
                       rdfs:label ""Lamont Cranston""@en . # Alter ego of The Shadow
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,24,train,Give me the professional in the profession of Shatrughan Sinha and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_profession
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:occupation dbpedia:Actor ;
         dbpedia:role dbpedia:Politician .
  ?actor rdfs:label ?actor_name .
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
353,27,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild_name ?royalty_status
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:spouse ?spouse .
  ?child1 a dbpedia:Person ;
           dbpedia:child ?child_of_spouse .
  ?child_of_spouse a dbpedia:Person ;
                  dbpedia:parent ?grandchild .
  ?grandchild a dbpedia:Royalty
}
```",3,4,4,3,1,3,3,71,0,0,8,0,0.0,0
58,2,train,Give me the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Linda Bruckheimer""@en .
  ?person dbpedia:birthName ?birth_name
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
609,6,train,"Who is the governor, that is a politician, of Virginia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
           dbpedia:officeHolder dbpedia:Governor_of_Virginia .
  ?governor rdfs:label ?governor_name .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,34,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?ruling_party_member_name ?landmark_name
WHERE {
  ?landmark a geo:Point ;
               geo:coordinates ""20.116800000000001347""^^decimal;
               dbpedia:name ?landmark_name .
  ?landmark rdfs:seeAlso ?landmark_description .
  ?landmark_description a dbpedia:Description ;
                      dbpedia:isPartOf ?landmark .
  ?ruling_party a dbpedia:PoliticalParty ;
                dbpedia:ruledInCountry ""United States""^^xsd:string;
                dbpedia:partyLeader ?ruling_party_leader_name .
  ?ruling_party_leader a dbpedia:Person ;
                    rdfs:label ?ruling_party_leader_name .
  ?landmark_description dbpedia:locatedAt ?landmark .
  ?person a dbpedia:Person ;
            rdfs:label ""Harriette Arlene Lake""@en;
            dbpedia:birthPlace ?harriette_birthplace .
  ?landmark DescriptionProperty ?person
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
668,21,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?musical_artist_name ?associated_person_name 
WHERE { 
  ?person1 a dbpedia:Person ; 
  dbpedia:name ?associated_person_name ; 
  dbpedia:birthDate ?birthDate1 . 
  ?person2 a dbpedia:Person ; 
  dbpedia:name ?associated_person_name ; 
  dbpedia:birthDate ?birthDate2 . 
  ?person1 dbr:hasMusicalArtist ?musical_artist . 
  ?person2 dbr:hasMusicalArtist ?musical_artist . 
  ?musical_artist rdfs:label ?musical_artist_name . 
  ?birthDate1 ns:year ?year1 . 
  ?birthDate2 ns:year ?year2 . 
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,37,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status ?spouse_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?father .
  ?father a dbpedia:Person ;
            rdfs:label ""Stephen V of Hungary"" .
  ?child rdfs:label ?child_name .
  ?child a dbpedia:Royalty .
  ?spouse a dbpedia:Person ;
           rdfs:label ?spouse_name .
  ?spouse rdfs:label ""Maria of Bytom"" .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,50,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?grandchild_name ?william_I_name 
WHERE { 
  ?child a dbpedia:Person ; dbpedia:parent ?child_of_alfonso_vi . 
  ?child_of_alfonso_vi a dbpedia:Person ; dbpedia:parent ?grandchild_of_child . 
  ?grandchild_of_child a dbpedia:Person ; dbpedia:parent ?william_I . 
  ?child rdfs:label ?child_name . 
  ?grandchild_of_child rdfs:label ?grandchild_name . 
  ?william_I rdfs:label ?william_I_name . 
}",5,8,6,3,2,3,3,71,0,16326,1,0.0,0.0,0
816,52,train,"Give me the parent of the professional in Photographer and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?parent WHERE { ?professional a dbpedia:Photographer . ?parent a dbpedia:VisualArtist . ?granddaughter a dbpedia:Diane_Arbus ; dbpedia:mother ?mother_of_doon_abus . ?actor a dbpedia:Actor ; dbpedia:role_in_film ?movie_role ; dbpedia:birthPlace 'Los Angeles' . },6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
80,50,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?album_name ?song_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ?actor_birthplace .
  ?album a dbpedia:Album ;
            dbpedia:artist ?actor ;
            dbpedia:title ?album_title .
  ?song a dbpedia:Song ;
           dbpedia:featuredOnAlbum ?album ;
           dbpedia:title ?song_title .
  ?actor rdfs:label ?actor_name .
  ?album rdfs:label ?album_title .
  ?song rdfs:label ?song_title
}
```

### Completed
The query above looks for a person (actor) associated with an album by T.I. (Tionne Watkins), which also features a song that could be related to the character Lamont Cranston from The Shadow. This involves searching for albums, songs, and their respective artists within DBpedia's structured data.

To execute this query, you would need to run it against a SPARQL endpoint that hosts DBpedia's data. The result will provide the actor's name, the album title, and the song title where the actor appears alongside T.I., potentially relating to the character Lamont Cranston due to thematic or lyrical content.

Please note that this query is a general template and might need adjustments based on specific details about the song or album in question. The exact match for ""The Shadow"" theme would require additional filtering or manual verification of results.",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
151,2,train,Give me the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?artist a dbpedia:Person ;
           dbpedia:name ""Burhan Belge"" ;
           dbpedia:birthPlace ?birthplace .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
361,2,train,Give me the actor of Rustlers' Rhapsody.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX movie: <http://www.w3.org/2002/07/movies#>

SELECT ?actor_name WHERE {
  ?movie a movie:Film ;
           dbpedia:title ""Rustlers' Rhapsody"" .
  ?actor a person:Person ;
         dbpedia:name ?actor_name ;
         movie:role ?actor_role_in_movie .
  ?actor_role_in_movie a movie:ActorRole ;
                    movie:characterName ""Cactus Jack Slade"" .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
472,0,train,Give me the territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?territory_name WHERE {
  ?territory a dbpedia:AdministrativeTerritory ;
             dbpedia:capitalCity dbpedia:Copenhagen .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
119,19,train,Give me the office of the leader of 2009 Galician regional election and tenant of Spain.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president_name ?president_birthplace
WHERE {
  ?president a dbpedia:OfficeHolder ;
             dbpedia:office dbpedia:President_of_Galicia ;
             dbpedia:term_start ""2009-01-01""^^xsd:date .
  ?president foaf:name ?president_name .
  ?president foaf:birthPlace ?president_birthplace
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
311,11,train,"Give me the band member of Mark Eitzel and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?mark_eitzel_association ?r.e.m_member
WHERE {
  ?mark_eitzel a dbpedia:Artist ;
                 dbpedia:associatedBand ?mark_eitzel_association .
  ?mark_eitzel_association a dbpedia:MusicianGroup ;
                       rdfs:name ""R.E.M.""@en .
  ?r.e.m_member a dbpedia:Musician ;
                dbpedia:band ?r.e.m_associated_band .
  ?r.e.m_associated_band a dbpedia:Band ;
                        rdfs:name ""American Music Club""@en
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
37,1,train,Give me the birthplace of Scott LaFaro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Scott LaFaro""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
859,9,train,"Give me the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_or_group_name ?organization_name
WHERE {
  ?song a dbpedia:MusicSingle ;
           dbpedia:lyrics ""Burnt by the Sun"" .
  ?song rdfs:isDefinedBy ?artist .
  ?artist a dbpedia:MusicArtist ;
          dbpedia:bandOrGroup ?band_or_group_name ;
          dbpedia:organization ?organization_name .
}
```

This query looks for a music single with lyrics ""Burnt by the Sun,"" then links that song to an artist who is also part of a band or group and an organization. The prefixes are set up for DBpedia's ontology, and we're selecting the artist's name, the band/group name, and the organization name.",2,6,3,2,1,3,2,20,0,0,5,0,0.0,0
347,38,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?father_name
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:name ""Cecilia Renata of Austria"" .
  ?child dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
              rdfs:label ""Ferdinand III, Holy Roman Emperor"" .
  ?grandparent dbpedia:parent ?great-grandparent .
  ?great-grandparent a dbpedia:Person ;
                 rdfs:label ""Rudolf IV, Duke of Austria"" .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
472,15,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?administration_name WHERE {
  ?person a dbpedia:Person ; dbpedia:nationality dbpedia:Denmark .
  ?person rdfs:label ?administration_name .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,7,train,Give me the figure known as the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?nickname
WHERE {
  ?team a dbo:SportsTeam ;
         dbo:nationalTeamFlagColor ""white"" ;
         rdfs:label ?team_label .
  ?team rdfs:label ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
293,9,train,Give me the party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },,2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,8,train,Give me the country of the work of Lao She.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?work a dbpedia:CreativeWork ;
         dbpedia:author ?author .
  ?author rdfs:label ""Lao She""@en .
  ?work dbpedia:countryOfOrigin ?country
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
119,40,train,"Give me the tenant of Spain and tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?president_name ?president_birthplace ?office
WHERE {
  ?president a dbpedia:Politician ;
    dbpedia:birthPlace ?president_birthplace .
  ?office a dbpedia:Event .
  ?president rdfs:label ?president_name .
  ?office rdfs:label ?office
  
  ?president ns:name ?president_name .
  ?office ns:identifier ?office_id
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
531,34,train,"Give me the office of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?miguel_maura_office ?mayor_residence_tenant
WHERE {
  ?miguel_maura a dbpedia:OfficeHolder ;
               dbpedia:officeMemberOf [ dbpedia:election dbpedia:Madrid_City_Council_election_2003 ] .
  ?miguel_maura rdfs:label ""Miguel Maura"" .
  ?mayor a dbpedia:Politician ;
            dbpedia:office dbpedia:Mayor_of_Madrid ;
            foaf:residence ?mayor_residence .
  ?mayor_residence a dbpedia:Building ;
                 dbpedia:address [ a dbpedia:PostalAddress; rdfs:label ""Madrid, Spain"" ] .
  ?mayor_residence_tenant a foaf:Person;
                      dbpedia:residence ?mayor_residence .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,56,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birth_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace dbpedia:CentralRegion ;
            dbpedia:profession ""Musician"" .
  ?person rdfs:label ?artist_name .
  ?person foaf:name ?birth_name .
  FILTER (STRSTARTS(?birth_name, ""Elorm"")) 
  AND (STRSTARTS(?artist_name, ""Elorm"") OR ?artist_name = ""Elorm Kabu Amenyah"")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,8,train,Give me the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?allan_arbus .
  ?allan_arbus rdfs:label ""Allan Arbus"" .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
513,5,train,Give me the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader_name ?leader_party
WHERE {
  ?leader a dbpedia:Politician ;
           dbpedia:partyMemberOf ?leader_party .
  ?leader_party rdfs:label ""Ulster Unionist Party""@en .
  ?leader foaf:name ?leader_name .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
353,43,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_title ?child_parent1_name ?child_parent1_role ?child_parent2_name ?child_parent2_role
WHERE {
  ?child a dbpedia:Person ;
         dbpedia:hasParent ?child_parent1 .
  ?child a dbpedia:Person ;
         dbpedia:hasParent ?child_parent2 .

  ?child_parent1 a dbpedia:Person ;
               dbpedia:isParentOf ?child ;
               rdfs:label ?child_parent1_name ;
               dbpedia:role dbpedia:Royalty .

  ?child_parent2 a dbpedia:Person ;
                dbpedia:isParentOf ?child ;
                rdfs:label ?child_parent2_name ;
                dbpedia:role dbpedia:Royalty .

  ?child rdfs:label ?child_name .
  FILTER (regex(str(?child_name), 'William')).

  ?child_parent1 rdfs:label ?child_parent1_name .
  ?child_parent2 rdfs:label ?child_parent2_name
}
```

### Completed
This SPARQL query aims to find a child named William who has two parents, one being a royalty and the other also a royalty and an office holder. The query filters for children with the name ""William"" and then checks their parents' roles to ensure they meet the specified criteria.

Please note that the actual execution of this query against DBpedia would require access to their endpoint and may need adjustments based on the exact structure and data available in their database at the time of querying.",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
723,11,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of Stone Sour.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name ?producer_role 
WHERE { 
  ?producer a dbpedia:Musician ; 
  dbpedia:role ?producer_role . 
  ?producer rdfs:label ?producer_name . 
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
816,0,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ?actor_name .
  ?actor foaf:name ?actor_name .
  [ 
    ?actor dbpedia:role dbpedia:JuliusRosenbergInJudgmentTheTrialOfJuliusAndEthelRosenberg
  ] 
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,59,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?producer_name
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ""Johnny Depp""@en .
  ?actor dbpedia:roleInFilm ?role .
  ?role a dbpedia:FictionalCharacter ;
            rdfs:label ""The Mask""@en .
  ?actor dbpedia:producer ?producer .
  ?producer a dbpedia:Person ;
            rdfs:label ?producer_name .
}
```

This query looks for a person named Johnny Depp (identified by his English label) who is associated with the fictional character The Mask (identified by its English label) and also has the role of producer in the film.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,59,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?song a dbpedia:MusicSingle ;
            dbpedia:performer ""T.I."" .
  ?video a dbpedia:MusicVideo ;
           dbpedia:featuredArtist ""T.I."" .
  ?actor rdfs:label ?actor_name
}

SELECT ?actor_name WHERE {
  ?book a dbpedia:Book ;
           rdfs:author ""Kate Pullinger"" .
  ?film a dbpedia:Film ;
           rdfs:subject ?book .
  ?actor rdfs:label ?actor_name
}
```",6,8,7,3,2,3,3,71,0,0,10,0,0.0,0
384,2,train,"Give me the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor_name ?successor_political_office ?successor_birthplace
WHERE {
  ?s a dbpedia:Politician ;
         dbpedia:officeHolder dbpedia:PoliticalOffice ;
         dbpedia:nationality ""French"" .
  ?s rdfs:label ?successor_name .
  ?s foaf:name ?successor_name .
  ?s dbpedia:officeHolder ?political_office .
  ?political_office rdfs:label ?political_office_label .
  FILTER (regex(?political_office_label, ""Patrice Martin-Lalande""))
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
472,21,train,Give me the administration of Christian IX of Denmark and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?king_name ?administration_duchy ?administration_copenhagen 
WHERE { 
  ?king a dbpedia:Monarch ; dbpedia:monarchy dbpedia:Danish_monarchy . 
  ?king rdfs:label ?king_name . 
  ?duchy a dbpedia:Duchy_of_Schleswig ; dbpedia:administeredBy ?administration_duchy . 
  ?copenhagen a dbpedia:Copenhagen ; dbpedia:capitalOf ?administration_copenhagen . 
  ?king rdfs:label ?king_name . 
  ?copenhagen rdfs:label ?administration_copenhagen . 
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
633,1,train,"Give me the parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?duke a dbpedia:Person ;
         dbpedia:title ""Francis I, Duke of Lorraine"" .
  ?duke dbpedia:father ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ?parent_name ;
          dbpedia:title ?parent_title
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
293,36,train,Give me the party member of Republican Party (United States) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_member_name ?parent_birthname
WHERE {
  ?party_member a dbpedia:Politician ;
                 dbpedia:politicalParty dbpedia:Republican_Party_United_States .
  ?actor rdfs:label ""Tisha Sterling"" .
  ?actor dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:birthName ?parent_birthname .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
595,24,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?author_name 
WHERE { 
  ?clinton a dbpedia:Person ; 
  dbpedia:role ?commander_role ; 
  dbpedia:birthPlace ?clinton_birthplace . 
  ?book a dbpedia:WrittenWork ; 
  dbpedia:author ?author_name ; 
  dbpedia:work ?book . 
  ?book rdfs:label 'Book Title' . 
  ?clinton rdfs:label ?clinton_name . 
}",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
68,9,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?grandparent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:isChildOf <http://dbpedia.org/ontology/child#Maximilian_I,_Holy_Roman_Emperor> .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name .
  ?grandparent rdfs:label ?grandparent_name
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
39,31,train,Give me the professional in  and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional_name ?profession
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:occupation ?profession .
  ?person rdfs:label ""Vhong Navarro""@en .
}
```",4,4,5,3,2,3,3,71,0,1,39640,0.0,0.0,0
258,13,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?university_name ?establishment_year
WHERE {
  ?university a dbpedia:University ;
            dbo:found(?) ?establishment_year .
  ?university rdfs:label ?university_name .
  FILTER (lang(?university_name) = ""pt"")  # Only consider Brazilian universities
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
816,59,train,"Give me the parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviedb: <http://www.moviedb.org schema/>

SELECT ?director_name WHERE {
  ?movie a moviedb:Film ;
            moviedb:mainLocation ""Los Angeles, California"" ;
            moviedb:deaths ""Eugène Cattin"" .
  ?actor dbpedia:instanceOf dbpedia:Actor ;
           dbpedia:name ""Eugène Cattin"" .
  ?director a dbpedia:Person ;
           dbpedia:name ?director_name .
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
871,52,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent_name ?grandparent_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?parent rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  ?awardee a dbpedia:Person ;
             dbpedia:award Rodney_Lees_Award ;
             dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
            dbpedia:birthPlace ?grandparent_birthplace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
258,9,train,"Give me the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?almaMaterFoundingDate 
WHERE {
  ?politician LuizaErundina ;
           dbpedia:birthPlace ""Rio de Janeiro, Brazil"" ;
           dbpedia:deathPlace ""Rio de Janeiro, Brazil"" ;
           dcterms:almamater ?almaMater .
  ?almaMater a dbpedia:University .
  ?almaMater rdfs:label ?almaMaterFoundingDate
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
492,19,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?actor_name ?actor_deathplace 
WHERE { 
  ?actor a dbpedia:Person ; 
  dbpedia:deathPlace ?actor_deathplace . 
  ?actor rdfs:label ?actor_name . 
}",4,4,5,2,3,2,3,28,1,345090,0,2.8977863809835668e-06,1.0,5.79555596768398e-06
737,46,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_title 
WHERE { 
  ?child1 a dbpedia:Person ; dbpedia:parent ?duke_philip ; dbpedia:parent ?archduchess_helena . 
  ?child2 a dbpedia:Person ; dbpedia:parent ?child1 . 
  ?royalty a dbpedia:Royalty ; dbpedia:hasParent ?child2 . 
  ?royalty rdfs:label ?royalty_name . 
  ?royalty dbpedia:title ?royalty_title . 
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,15,train,"Who is the parent of the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:birthPlace ?royalty_birthplace .
  ?royalty rdfs:father ?parent_name ;
             rdfs:mother ?parent_name .
  ?parent_name rdfs:label ?parent_name .
  ?royalty dbpedia:childOf ?royalty_child_of_roger_ii .
  ?royalty_child_of_roger_ii a dbpedia:Person ;
                    dbpedia:birthPlace ?royalty_child_birthplace .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
905,18,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?spouse_name ?child_name
WHERE {
  ?charles_martel_of_anjou a dbpedia:Noble ;
dbpedia:father ?parent_name ;
dbpedia:mother ?mother_name .
  ?mother_name a dbpedia:Person ; dbpedia:name ?mother_name .
  ?stephen_v_of_hungary a dbpedia:Person ; dbpedia:name ?parent_name .
  ?charles_martel_of_anjou rdfs:child ?child_name .
  ?charles_ii_of_neapoli a dbpedia:Monarch ; dbpedia:name ?charles_ii_name .
  ?charles_martel_of_anjou dbpedia:spouse ?spouse_name .
  ?beatrice_d_este a dbpedia:Person ; dbpedia:name ?spouse_name ; dbpedia:spouseOf ?charles_ii_of_neapoli .
}
",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
158,13,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedent_name ?decedent_country
WHERE {
  ?decedent a dbpedia:Person ;
            dbpedia:deathPlace ?decedent_country .
  ?decedent dbpedia:birthPlace <http://dbpedia.org/property/birthPlace#Finland> .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
297,1,train,Give me the institution in Georgia (U.S. state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?institution_name ?institution_location
WHERE {
  ?institution a dbpedia:Institution ;
               dbpedia:location ?institution_location .
  ?institution_location geo:inRegion dbpedia:Georgia (U.S. state) .
}
```",1,1,2,1,1,2,2,9,0,0,941,0,0.0,0
293,49,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?party ?parent_birthname
WHERE {
  ?governor a dbpedia:OfficeHolder ; dbpedia:office dbpedia:Governor_of_Louisiana ; dbpedia:politicalParty ?party .
  ?governor rdfs:label ?governor_name .
  ?tisha_sterling a dbpedia:Person ; dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parent_birthname .
}
",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
531,27,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_name ?leader_name WHERE {
  ?miguel_maura a dbpedia:Person ;
                  dbpedia:memberOf [ a dbpedia:PoliticalParty ; rdfs:label ?party_name ] .
  ?party a dbpedia:PoliticalParty ;
           dbpedia:hasLeader ?leader .
  ?miguel_maura rdfs:seeAlso ?miguel_profile .
  ?miguel_profile a foaf:Person ;
               dbpedia:memberOf ?party ;
               rdfs:label ?miguel_name .
  ?leader a foaf:Person ;
          dbpedia:office ?office .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
585,6,train,Give me the native of New York (state) and child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:father ?parent .
  ?parent rdfs:label ""Linda Miller"" . 
  ?child rdfs:label ?child_name .
  FILTER (str(?child_birthplace) = ""New York"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
353,3,train,"Who is the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_name ?birthplace
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:monarchy dbpedia:Sicily ;
         dbpedia:birthPlace ?birthplace .
  ?king rdfs:label ?royalty_name .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
375,17,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author_name ?birthplace
WHERE {
  ?book dbpedia:isWorkOf ?author .
  ?author a dbpedia:Person ;
         dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:nationality ""English"" ;
           dbpedia:birthPlace ?birthplace .
  ?author rdfs:label ?author_name .
  ?author a foaf:Person ;
         foaf:knows ?artist .
  ?artist a dbpedia:Artist ;
            dbpedia:isMusicalArtist true .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
39,48,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name WHERE {
  ?producer a dbpedia:MusicProducer ;
  dbpedia:workedWith ?artist .
  ?artist a dbpedia:MusicalArtist ;
  rdfs:label ?artist_name .
  ?artist_name StringMatch 'Robert Lamar Thompson' 
}
",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
871,42,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?politician_name ?commander_award
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?politician_birthplace .
  ?politician rdfs:label ?politician_name .
  ?politician dbpedia:PARENT_OF ?child .
  ?child a dbpedia:Person ;
          rdfs:label ""Edward Stanley, 17th Earl of Derby"" ;
          dbpedia:birthPlace ?child_birthplace .
  ?child dbpedia:PARENT_OF ?grandparent .
  ?grandparent a dbpedia:Person ;
             rdfs:label ?grandparent_name ;
             dbpedia:awarded dbpedia:Commander_of_the_Royal_Victorian_Order .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,5,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""Prince Faisal bin Hussein""@en;
            dbpedia:birthDate ""1935-04-27""^^xsd:date.
  ?child rdfs:label ?child_name .
  ?child a foaf:ChildOf ?parent .
  ?child dbpedia:royaltyStatus ""Yes""@en
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
737,58,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royal_grandchild_name ?royal_grandchild_title ?grandparent_name ?grandparent_title
WHERE {
  ?archduchess a dbpedia:Person ;
               dbpedia:hasChild ?child1 .
  ?child1 a dbpedia:Person ;
            dbpedia:hasChild ?royal_child .
  ?royal_child a dbpedia:Person ;
             dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
             rdfs:label ?grandparent_name ;
             dbpedia:role ?grandparent_title .
  ?grandparent rdfs:label ""Carl, Duke of Württemberg"" .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,57,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?governor_name ?governor_office ?author_name ?author_party ?vince_gilligan_name ?vince_gilligan_role
WHERE {
  ?governor a dbpedia:OfficeHolder ;
            dbpedia:politicalAffiliation dbpedia:Conservative Republican Party (Spain) ;
            dbpedia:office dbpedia:Madrid .
  ?governor rdfs:label ?governor_name .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ""Portugal"" .
  ?author foaf:name ?author_name .
  ?vince_gilligan a dbpedia:Person ;
               dbpedia:role dbpedia:Politician ;
               dbpedia:birthPlace ""Portugal"" .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
756,5,train,Give me the leader of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader_name ?leader_title ?birthplace
WHERE {
  ?leader a dbpedia:Politician ;
           dbpedia:office dbpedia:Chancellor_of_Germany ;
           dbpedia:birthPlace ?birthplace .
  ?leader rdfs:label ?leader_name .
  FILTER (lang(?leader_name) = ""de"" )  # Ensure the name is in German
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,12,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }",,2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
258,6,train,Give me the establishment of 1955-12-02 and alma mater of Eleonora Menicucci.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?almaMater
WHERE {
  ?person a dbpedia:Person ;
  dbpedia:birthDate '1955-12-02' ;
  dbpedia:almaMater ?almaMater .
  ?person rdfs:label 'Eleonora Menicucci' .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,48,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_parent_name ?royalty_status
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:birthDate ?parent_birthdate;
            dbpedia:role dbpedia:Monarch ;
            rdfs:label ?parent_name .
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent ;
           dbpedia:birthDate ?child_birthdate;
           rdfs:label ?child_name .
  ?commander a dbpedia:Person ;
             dbpedia:role dbpedia:Commander ;
             rdfs:label ?commander_name .
  ?child rdfs:father ?father .
  ?father a dbpedia:Person ;
          rdfs:label ?father_name;
          dbpedia:role dbpedia:Monarch .
  ?parent dbpedia:hasChild ?child .
  ?child dbpedia:hasParent ?parent .
  ?parent rdfs:label ""Na'od"" . 
  ?commander rdfs:label ""Na'od"" . 
  ?child rdfs:label like ""%Na%'s child%"" .
}
```

This query looks for a child (`?child`) of a parent (`?parent`, labeled as Na'od) who is also a monarch (`dbpedia:Monarch`). The child must have a commander (`?commander`) labeled as Na'od. Additionally, the child's father (`?father`) must be a monarch to fulfill the condition of being royalty and an office holder.",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
38,4,train,"Give me the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?result . },,1,2,2,1,1,3,2,20,0,0,42,0,0.0,0
103,22,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?character_name
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?character a dbpedia:Character ;
               rdfs:label ?character_name .
  ?actor dbpedia:portrayedBy ?character .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
39,9,train,Give me the professional in Singer and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?person_name ?role1 ?role2 
WHERE { 
  ?person a dbpedia:Person ; 
  dbpedia:role ?role1 ; 
  dbpedia:role ?role2 . 
  ?role1 rdfs:label 'Singer' . 
  ?role2 rdfs:label ?role2_label . 
}",2,2,3,1,2,3,3,71,0,0,5422,0,0.0,0
386,21,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?war_name ?russian_empire_entity
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:recipientOfAward dbpedia:GoldenSwordForBravery .
  ?war a dbpedia:Conflict ;
         dbpedia:conflictName ?war_name .
  ?russian_empire_entity a dbpedia:Entity ;
                       dbpedia:locatedIn dbpedia:RussianEmpire .
  ?awardee rdfs:label ?awardee_name .
  ?war rdfs:label ?war_name .
  ?russian_empire_entity rdfs:label ?russian_empire_entity
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,17,train,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },,3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
103,10,train,Give me the actor of Dispatches from Elsewhere and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?series a dbpedia:TelevisionSeries ;
            rdfs:label ""Dispatches from Elsewhere"" .
  ?actor a dbpedia:Actor ;
          dbpedia:act_in ?series .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
295,12,train,Give me the native of the birth place of Victor Saville and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?victor_saville_name ?victor_saville_birthplace ?van_morrison_name ?van_morrison_birthplace
WHERE {
  ?victor_saville a dbpedia:Person ;
                 dbpedia:birthPlace ?victor_saville_birthplace .
  ?van_morrison a dbpedia:Person ;
                  dbpedia:birthPlace ?van_morrison_birthplace .
  ?victor_saville rdfs:label ?victor_saville_name .
  ?van_morrison rdfs:label ?van_morrison_name
}
```",3,3,4,2,2,3,2,20,0,782049,1,0.0,0.0,0
58,9,train,Give me the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . },,2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
353,30,train,Give me the father of William II of Sicily and child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?grandparent_name ?grandparent_birthplace 
WHERE { 
  ?lineage_roger :father ?grandparent . 
  ?lineage_roger rdfs:label 'Roger II of Sicily' . 
  ?lineage_alfonso :child ?lineage_roger . 
  ?lineage_alfonso a dbpedia:Person ; dbpedia:birthPlace 'León, Spain' . 
  ?lineage_alfonso rdfs:label 'Alfonso VI of León and Castile' . 
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
19,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional_name ?field
WHERE {
  ?professional a dbpedia:Person ;
               dbpedia:occupation ?field .
  ?field rdfs:label ""Your Specific Field"" . # Replace ""Your Specific Field"" with the actual field of interest
}
```",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
628,34,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?band_member_birthplace
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:genre ""Funk"" .
  ?band rdfs:label ""GS9"" .
  ?band_members a foaf:Group ;
               dbpedia:members ?band_member .
  ?band_member a dbpedia:Person ;
              dbpedia:birthPlace ?band_member_birthplace .
  ?band_member a dbpedia:Artist ;
               dbpedia:musicalArtist true .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
347,53,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?general_name ?general_war ?television_show
WHERE {
  ?general a dbpedia:Person ;
           dbpedia:role ""Commander in the Algerian War"" .
  ?general rdfs:label ?general_name .
  ?general dbpedia:partOfDbpediaArticle ?general_war_description .
  ?general_father a dbpedia:Person ;
                 dbpedia:role ""Father of Cecilia Renata of Austria"" .
  ?general_father rdfs:label ?general_father_name .
  ?television_show a dbpedia:TelevisionShow ;
                    rdfs:title ?television_show_title .
  ?general aparearsIn ?television_show .
  ?general_name ns:prefLabel ""General Alexander Dubois"" .
  ?general_war_description a dbpedia:Event ;
                           dbpedia:war ""Algerian War"" .
  ?general_father_name ns:prefLabel ""Father of Cecilia Renata of Austria""
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
103,34,train,"Give me the professional in  and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace WHERE {
  ?actor a dbpedia:Person ;
    dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ?actor_name .
  FILTER (lang(?actor_name) = 'en') }
",4,5,5,3,2,3,3,71,0,782049,13,0.0,0.0,0
263,23,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?claud_bowes_lynch a dbpedia:Person ;
                 dbpedia:birthPlace dbpedia:London .
  ?elizabeth_bowes_lyon rdfs:label ""Elizabeth Bowes-Lyon"" ;
                       dbpedia:mother ?mother_name ;
                       foaf:father ?father_name .
  ?father_of_elizabeth a dbpedia:Person ;
                    rdfs:label ?father_name ;
                    dbpedia:birthPlace ?governor_birthplace .
  ?william_gayner a dbpedia:Person ;
                   foaf:father ?father_name .
  ?claud_bowes_lynch foaf:mother ?mother_name .
  ?elizabeth_bowes_lyon foaf:father ?father_of_elizabeth .
  ?william_gayner rdfs:label ?william_gayner_name
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
39,28,train,Give me the professional in  and professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?person_profession ?band_members
WHERE {
  ?sam_concepcion a dbpedia:Artist ;
                      dbpedia:occupation ""Musical Theatre Performer"" .
  ?bob_thompson a dbpedia:Musician ;
                    dbpedia:associatedBandMember ?band_member .
  ?band_member a dbpedia:Musician ;
                rdfs:label ?band_members .
  ?sam_concepcion rdfs:label ?person_name .
  ?bob_thompson rdfs:label ?person_name .
  FILTER (regex(str(?band_members), ""Thompson"")) 
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
345,2,train,"Give me the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name WHERE {
  ?place a dbpedia:Location ;
            dbpedia:locatedIn dbpedia:Tokyo ;
            rdfs:label ?name
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
687,25,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_team
WHERE {
  ?manager a dbpedia:SoccerPlayer ;
            dbpedia:SoccerManager ;
            dbpedia:birthDate ""1979-11-03"" .
  ?manager rdfs:label ?manager_name .
  ?sergio_aguero a dbpedia:SoccerPlayer ;
             dbpedia:teammate ?manager .
  ?manager foaf:name ?manager_name .
  FILTER (str(?manager_name) = ""Sergio Agüero"")
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
941,16,train,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"SELECT ?second_spouse_name ?child_name ?child_birthplace
WHERE {
  ?first_spouse a dbpedia:Person ;
               dbpedia:spouse ?duchess .
  ?duchess a dbpedia:Royalty ;
            dbpedia:birthPlace <http://dbpedia.org/property/birthPlace_of_Duke_Anthony_Ulrich_of_Brunswick_Wolfenbüttel> .
  ?second_spouse a dbpedia:Person ;
               dbpedia:spouse ?first_spouse .
  ?child a dbpedia:Person ;
            dbpedia:parent ?duke .
  ?child rdfs:label ?child_name .
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
609,4,train,Who is the awardee of List of awards and nominations received by Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?award_name ?awardee
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:hasAward ?award .
  ?award a award:Award ;
           rdfs:label ?award_name .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
557,27,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . },,3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
492,8,train,Give me the death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_deathplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:role dbpedia:Actor ;
         dbpedia:deathPlace ?actor_deathplace .
  ?actor rdfs:label ?actor_name
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
39,34,train,Give me the professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer_name ?producer_profession
WHERE {
  ?producer a dbpedia:Person ;
            dbpedia:occupation ?producer_profession .
  ?producer dbpedia:worksForOrganization dbpedia:Coke_Studio_Philippines ;
                 foaf:member [ foaf:name ""Vhong Navarro"" ] .
  ?producer dbpedia:worksForBand [ dbpedia:name ""Bob Thompson (musician)"" ] .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
386,11,train,Give me the war of the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?awardee_nationality ?awardee_description
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:award dbpedia:Golden_Sword_for_Bravery .
  ?awardee rdfs:label ?awardee_name .
  OPTIONAL { ?awardee ns:nationality ?awardee_nationality }
  OPTIONAL { ?awardee dbpedia:description ?awardee_description }
}
```",2,2,3,2,1,2,3,28,0,0,15,0,0.0,0
668,4,train,Who is the person born as Elorm Kabu Amenyah?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ?person_name .
  OPTIONAL { ?person dbpedia:birthPlace ?birthplace }
}
```",1,1,2,1,1,3,3,71,0,44,1,0.0,0.0,0
386,0,train,Give me the entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?entity_name ?entity_description
WHERE {
  ?entity a dbpedia:Entity ;
            dbpedia:country ""Russian Empire"" .
  ?entity rdfs:label ?entity_name .
  ?entity dbpedia:description ?entity_description .
}
```",1,1,2,1,1,2,3,28,0,0,87,0,0.0,0
386,1,train,Give me the war of Karl Gustav von Baggovut.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?baggovut_war_role
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Karl Gustav von Baggovut""@sv;
            dbpedia:conflict ?war .
  ?war a dbpedia:War ;
         dbpedia:name ?war_name .
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
816,35,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX mousetrap: <http://www.w3.org/2002/07/mousepad#>

SELECT ?actor_name 
WHERE {
  ?movie a mousetrap:Film ;
            mousetrap:director ""Jason Miller"" .
  ?movie dbpedia:mainCharacter ?actor .
  ?actor rdfs:label ?actor_name .
  FILTER ( ?actor_name = ""Herschel Bernardi"" ) .
  SOME { 
    ?parent a mousetrap:Person ;
           dbpedia:child ?child .
    ?child rdfs:father ?parent .
    ?parent rdfs:label ?parent_name .
    ?parent_name = ""Allan Arbus""
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,9,train,Give me the actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?spouse_name
WHERE {
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:ActorInFilm ; dbpedia:film 'Always (1989 film)' .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person
}
",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
531,30,train,"Give me the office of Mariano Rajoy and tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?prime_minister_name ?office_location ?party_name ?leader_position
WHERE {
  ?prime_minister a dbpedia:Politician ;
                    dbpedia:office dbpedia:Prime_Minister_of_Spain ;
                    dbpedia:birthPlace ""Madrid"" .
  ?party a dbpedia:Political_Party ;
           dbpedia:name ""Conservative Republican Party (Spain)"" .
  ?prime_minister foaf:leaderOf ?party .
  ?party rdfs:label ?party_name
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,33,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?song a dbpedia:MusicSingle ; dbpedia:performer T.I. .
  ?episode a dbpedia:TelevisionEpisode ; dbpedia:title 'Dead and Gone' .
  ?actor rdfs:label ?actor_name .
  ?episode dbpedia:features ?song
}
",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,56,train,"Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",6,7,7,3,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
198,15,train,"Give me the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?awardee_name WHERE {
  ?awardee a dbpedia:Person ;
  dbpedia:awardReceived dbpedia:United_States_Congress_Award .
}",2,3,3,2,1,3,3,71,0,0,2196,0,0.0,0
158,20,train,"Give me the person decedent at Switzerland and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?decedent_name ?decedent_birthplace
WHERE {
  ?decedent a dbpedia:Person ;
            dbpedia:birthPlace ?decedent_birthplace .
  ?decedent rdfs:label ?decedent_name .
  ?decedent dcterms:deathPlace ""Switzerland"" .
  ?decedent dbpedia:administration dbpedia:Grand_Duke_of_Finland_Alexander_II
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
68,7,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name 
WHERE {
  ?queen a dbpedia:Person ; dbpedia:birthPlace <urn:uuid:12345678-abc0-1def-ghij> .
  ?queen rdfs:label 'Catherine of Austria' .
  ?queen dbpedia:mother <urn:uuid:9876543210-abcd-e123-4567-8901> .
  ?mother a dbpedia:Person ; dbpedia:birthPlace <urn:uuid:12345678-abc0-1def-ghij> .
  ?mother rdfs:label ?mother_name .
  ?father a dbpedia:Person ; dbpedia:birthPlace <urn:uuid:12345678-abc0-1def-ghij> .
  ?father rdfs:label ?father_name .
}
",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
198,26,train,Give me the force of the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?recipient_name ?recipient_achievement
WHERE {
  ?recipient a dbpedia:Person ;
            dbpedia:awardedItem dbpedia:QuincyAdamsGillmore_Award .
  ?recipient rdfs:label ?recipient_name .
  ?recipient dbpedia:achieved ?recipient_achievement
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
159,55,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . }",,6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
213,11,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of Cat Country (novel).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?birthplace .
  ?politician rdfs:label ""Chiang Ching-kuo"" .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
871,29,train,"Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_of_Arthur ?parent_of_Victor ?child_of_Frederick_16th_Earl
WHERE {
  ?governor a dbpedia:Politician ;
             dbpedia:birthPlace ?governor_birthplace .
  ?politician rdfs:label ""Arthur Stanley""@en .

  ?royal_navy_officer a dbpedia:Person ;
                    dbpedia:birthPlace ?royal_navy_officer_birthplace .
  ?royal_navy_officer rdfs:label ""Victor Stanley""@en .

  ?earl_of_derby a dbpedia:NoblePerson ;
                 dbpedia:birthPlace ?earl_of_derby_birthplace .
  ?earl_of_derby rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .

  ?governor dbpedia:parent ?father_of_Arthur .
  ?royal_navy_officer dbpedia:parent ?parent_of_Victor .
  ?earl_of_derby dbpedia:child ?child_of_Frederick_16th_Earl .

  ?governor rdfs:label ?governor_name .
  ?royal_navy_officer rdfs:label ?royal_navy_officer_name .
  ?earl_of_derby rdfs:label ?earl_of_derby_name
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,26,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?military_force
WHERE {
  ?character a dbpedia:Person ;
             rdfs:label ""William Bayne""@en .
  OPTIONAL { ?character dbpedia:militaryService ?military_service }
  FILTER (NOT EXISTS { ?military_service a dbpedia:MilitaryConflictEvent })
}
```",3,5,4,3,1,3,3,71,0,0,529,0,0.0,0
293,57,train,"Give me the party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?politician_name ?politician_party ?actor_name ?actor_birthplace ?film_title ?film_producer_name ?spouse_name 
WHERE { 
  ?politician a dbpedia:Politician ; 
    dbpedia:party dbpedia:Republican_Party_United_States . 
  ?actor a dbpedia:Person ; 
    dbpedia:birthPlace ?author_birthplace . 
  ?film a dbpedia:Film ; 
    dbpedia:producer ?film_producer_name . 
  ?film_producer a dbpedia:Person ; 
    dbpedia:birthPlace ?film_producer_birthplace . 
  ?actor rdfs:label ?actor_name . 
  ?politician rdfs:label ?politician_name . 
  ?actor dbpedia:role ?actor_role . 
  ?politician dbpedia:spouse ?spouse_name . 
  ?film rdfs:label ?film_title . 
  ?actor_role = 'Actor' 
  ?politician_name string-interpolate '{%s}' 
  ?author_birthplace string-interpolate '{%s}' 
  ?film_producer_name string-interpolate '{%s}' 
  ?spouse_name string-interpolate '{%s}' 
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
158,14,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
dbp:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
dbp:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
dbp:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",3,3,4,2,2,2,3,28,0,951553,2,0.0,0.0,0
513,10,train,"Give me the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_name ?party_leader
WHERE {
  ?politician a dbpedia:Person ;
               dbpedia:birthDate ""1841-04-01"" ;
               dbpedia:deathDate ""1924-03-14"" ;
               dbpedia:office dbpedia:PoliticalPartyLeader ;
               rdfs:label ?politician_name .
  ?party a dbpedia:PoliticalParty ;
           dbpedia:name ?party_name .
  ?politician foaf:memberOf ?party .
  ?party Leader ?party_leader .
}
```

This query looks for a person matching George Savage's details, identifies the political party they led (using the `dbpedia:office` property), and then finds the leader of that party.",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
668,8,train,Give me the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?real_name
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Joey B""@en .
  ?person dbpedia:birthName ?real_name
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
628,1,train,Give me the person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Ackquille Jean Pollard"" .
  ?person dbpedia:birthPlace ?birthplace
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,17,train,"Give me the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name ?birth_place 
WHERE { 
  ?artist a dbpedia:Artist ; 
  dbpedia:birthPlace ?birth_place . 
  ?birth_place rdfs:label ?artist_name . 
}",2,3,3,2,1,3,3,71,0,43034,1,0.0,0.0,0
159,0,train,Give me the successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor_name ?successor_birthplace
WHERE {
  ?successor a dbpedia:Person ;
             dbpedia:birthPlace ?successor_birthplace .
  ?Yurii_Khmelnytsky a dbpedia:Person ;
                  dbpedia:birthPlace <http://dbpedia.org/ontology/Location> .
  ?successor rdfs:label ?successor_name .
  ?Yurii_Khmelnytsky rdfs:label ""Yurii Khmelnytsky"" .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
943,57,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_of_father_name ?royalty_role ?office_holder_role ?na'od_name ?lamont_cranston_ego_name ?dawit_i_child_name
WHERE {
  ?na'od a dbpedia:Person ;
  dbpedia:parent ?father_of_father .
  ?father_of_father a dbpedia:Person ;
  dbpedia:role dbpedia:Royalty ;
  dbpedia:role dbpedia:OfficeHolder .
  ?lamont_cranston rdfs:label 'Lamont Cranston' .
  ?lamont_cranston p:Powers 'The Shadow' .
  ?dawit_i a dbpedia:Person ;
  dbpedia:parent ?dawit_i_child .
  ?dawit_i rdfs:label 'Dawit I' .
  ?dawit_i_child a dbpedia:Person ;
  dbpedia:role dbpedia:Monarch ;
  dbpedia:monarchy dbpedia:Ethiopia .
}
",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,12,train,Give me the force of William Tennant (Royal Navy officer) and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?force_of_tennant ?war_name
WHERE {
  ?tennant a dbpedia:Person ; dbpedia:name ""William Tennant"" .
  ?battle a dbpedia:Event ; dbpedia:name ""Sinking of Prince of Wales and Repulse"" ; dbpedia:participatedIn ?tennant .
  ?tennant rdfs:label ?force_of_tennant .
  ?commander a dbpedia:Person ; dbpedia:name ?war_name .
  ?battle dbpedia:commandedBy ?commander
}
",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,19,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name WHERE {
  ?regiment a dbpedia:MilitaryUnit ; dbpedia:partOf ?battle .
  ?battle a dbpedia:Event ; dbpedia:name 'Battle of Fort Royal' .
  ?regiment rdfs:label '30th (Cambridgeshire) Regiment of Foot' .
  ?commander a dbpedia:Person ; dbpedia:role ?role .
  ?role a dbpedia:MilitaryRole ; rdfs:label 'Commander' .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
628,3,train,"Give me the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?artist_name ?music_genre
WHERE {
  ?artist a dbpedia:Artist ;
           dbpedia:genre ?music_genre .
  ?artist rdfs:label ?artist_name .
  ?music_genre rdfs:label ""musical artist"" .
  ?artist dbpedia:groupName ""GS9"" .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
756,46,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?manager_name ?club_name ?season ?team_name 
WHERE { 
?player a dbpedia:SportPerson ; dbpedia:sportSpectator ?team_name . 
?team_name a dbpedia:SoccerTeam ; dbpedia:homeGround ?team_ground . 
?team_ground rdfs:label ?team_name . 
?player dbpprop:managedBy ?manager_name . 
?club_name a dbpedia:FootballClub ; dbpedia:league ?season . 
?season rdfs:label ?season_name . 
?season_name ns:1999GenerateString('2006-07') . 
?club_name dbpprop:basedIn ?country . 
?country rdfs:label 'Germany' . 
}",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
39,21,train,Give me the professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?role ?band_or_group_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:occupation ?role .
  ?person foaf:knows ?sam_concepcion .
  ?person rdfs:label ?person_name .
  ?band_or_group a dbpedia:MusicGroup ;
                 dbpedia:leader ?bob_thompson .
  ?band_or_group rdfs:label ?band_or_group_name
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
628,19,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?band_member_bio
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:birthDate ""1999-04-02"" ; # Example birth date for Ackquille Pollard
            rdfs:label ""Bobby Shmurda""@en .
  ?bandMember a dbpedia:Musician ;
             dbpedia:memberOf ?artist ;
             foaf:name ?band_member_name ;
             dbpedia:birthPlace ""Mississippi"" ; # Example birth place for Ackquille Pollard
             rdfs:label ?band_member_bio .
  ?artist rdfs:seeAlso <http://dbpedia.org/page/Bobby_Shmurda> . # Link to the artist's DBpedia page
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,38,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","{sparql_query}
```

Given the abstract nature of the question and the need for creative interpretation beyond strict data matching, this query focuses on finding a television show with a main character who could plausibly play the role of Jean Baptiste, Comte d'Arco. The exact match for both a commander in war and a societal event reference within the constraints of DBpedia's structured data might not be straightforwardly available.",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
23,11,train,Give me the party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:office ""President of Venezuela"" ;
               dbpedia:birthPlace ""Caracas, Venezuela"" ;
               rdfs:label ?politician_name .
  ?politician_name STRING-MATCH ""Nicolás Maduro"" .
}
```",2,2,3,2,1,2,3,28,0,0,6,0,0.0,0
293,13,train,"Give me the spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?actor dbpedia:role dbpedia:Actor ;
             dbpedia:name ""Jackie Cooper"" .
  ?actor dbpedia:spouse ?spouse_name
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
263,18,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_title
WHERE {
  ?lady_elphinstone a dbpedia:Person ;
                    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:title ?parent_title .
  ?earl_of_strathmore_and_kinghorne a dbpedia:Person ;
                          dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:title ?grandparent_title
  FILTER (regex(str(?parent_title), 'Earl|Duke|Marquess|Viscount|Baron') )
  FILTER (regex(str(?grandparent_title), 'Earl|Duke|Marquess|Viscount|Baron')) 
}
```

### Completed",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
756,58,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of Theodor Heuss.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthdate ?country
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthDate ?manager_birthdate .
  ?manager foaf:name ?manager_name .
  ?manager dbpedia:nationality dbpedia:Germany .
  ?manager rdfs:label ""Manager of VfL Bochum""@en .
  FILTER (STRFTER(?manager_birthdate, ""1968-08-26"") = 1)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
159,33,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work_name ?successor_name
WHERE {
  ?work a dbpedia:Film ; dbpedia:creator ?writer .
  ?writer rdfs:label ""George Ducas""@en .
  ?person a dbpedia:Person ; dbpedia:office dbpedia:President_of_Ukraine ;
               dbpedia:succeededBy ?next_person .
  ?next_person rdfs:label ?successor_name
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
39,45,train,"Give me the professional in Singer and professional in  and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?singer_name ?band_name ?birth_name
WHERE {
  ?bob_thompson a dbpedia:Musician ;
                    rdfs:label ""Bob Thompson""@en .
  ?bob_thompson dbpedia:band [ ?band_name ] .
  ?bob_thompson dbpedia:singerOf [ ?singer_name ] .
  ?bob_thompson foaf:givenName ?birth_name
}
```",5,6,6,3,3,3,3,71,0,0,3,0,0.0,0
905,25,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_title WHERE {
  ?royalty a dbpedia:Monarchy ;
    dbpedia:monarch ?person .
  ?person rdfs:child ?child_of_Bela_IV .
  ?child_of_Bela_IV rdfs:child ?charles_martel_child .
  ?charles_martel_child rdfs:label ?charles_martel_name
}
",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Give me the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?country_name
}
```",1,2,2,1,1,3,2,20,0,106260,1,0.0,0.0,0
595,53,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?v2 . },,6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
263,20,train,"Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name
WHERE {
  ?queenMother a dbpedia:Person ;
               dbpedia:birthParent ?parent ;
               rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  ?patrickEarl a dbpedia:Person ;
              dbpedia:birthParent ?parent ;
              rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?parent a foaf:Person ;
           dbpedia:givenName ""Claude"" ;
           dbpedia:surname ""Bowes-Lyon"" .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,36,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of Uncle Murda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award_name ?award_region ?award_state WHERE {
  ?band dbpedia:genre ""Hip hop music"" ;
           dbpedia:name ""Uncle Murda"" ;
           dbpedia:origin ""New York"" .
  ?award a dbpedia:MusicAwards ;
         dbpedia:awardee ?band ;
         dbpedia:region ?award_region ;
         dbpedia:state ?award_state .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
119,9,train,"Who is the commander in the force, that is a television show and a military conflict, of Maria I of Portugal?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?military_conflict_show
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ?person_name .
  OPTIONAL { 
    ?person dbpedia:role dbpedia:CommanderInChiefOfMilitaryConflict ;
             dbpedia:inMediaWork dbpedia:TelevisionShow ?military_conflict_show .
  }
}
```",2,4,3,2,1,3,2,20,0,0,75,0,0.0,0
158,15,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Russian Empire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedent_name ?birthplace
WHERE {
  ?decedent a dbpedia:Person ;
            dbpedia:birthPlace <http://dbpedia.org/ontology/Location> .
  ?decedent rdfs:label ?decedent_name .
  FILTER (lang(?decedent_name) = ""ru"" )  # Assuming Sandro Bertaggia was Russian
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
119,50,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX psoe: <http://purl.org/psoe/>

SELECT ?politician_name ?country_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:nationality dbpedia:Spain ;
               psoe:politicalPartyMemberOf psoe:PSOE .
  ?politician rdfs:label ?politician_name .
  ?country a dbpedia:Country ;
             dbpedia:name ?country_name .
}
```",5,8,6,3,2,3,3,71,0,0,23,0,0.0,0
513,15,train,Give me the residence of Doug Beattie and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?beattie_residence ?cameron_residence
WHERE {
  ?beattie a dbpedia:Person ;
            dbpedia:birthPlace ?beattie_birthplace .
  ?cameron a dbpedia:Person ;
             dbpedia:birthPlace ?cameron_birthplace .
  ?beattie rdfs:label ""Doug Beattie"" .
  ?cameron rdfs:label ""George Hamilton Cameron"" .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
39,2,train,Give me the band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX musicbrainz: <http://musicbrainz.org/ns#>

SELECT ?band_name 
WHERE {
  ?bob Thompson a musicbrainz:Artist ;
               musicbrainz:album ""The Bob Thompson Band"" .
  ?band_name rdfs:label ?band_name .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
492,20,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_deathplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:deathPlace ?actor_deathplace .
  ?actor rdfs:label ?actor_name .
}
```",4,4,5,2,3,2,3,28,1,345090,0,2.8977863809835668e-06,1.0,5.79555596768398e-06
38,6,train,"Give me the author of Promise Me, Dad and author of Promises to Keep (Biden book).","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name
WHERE {
  ?book1 a dbpedia:Book ;
           dbpedia:author ?author .
  ?book1 rdfs:label ""Promise Me, Dad"" .
  ?book2 a dbpedia:Book ;
           dbpedia:author ?author .
  ?book2 rdfs:label ""Promises to Keep"" .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
38,5,train,"Give me the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?work_name ?author_name
WHERE {
  ?work a dbpedia:WrittenWork ;
         dbpedia:author ?author .
  ?author a dbpedia:Person ;
          rdfs:label ?author_name .
  ?author rdfs:label ""Joe Biden"" .
  FILTER (lang(?author_name) = ""en"")  # Assuming English language
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
293,28,train,"Give me the party member of the ruling party in Central, Louisiana and person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?result <http://dbpedia.org/ontology/party> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?party_member_name ?central_louisiana_ruling_party
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:office dbo:GovernorOf ; 
            dbpedia:birthPlace ?central_louisiana_birthplace .
  ?central_louisiana_ruling_party a dbo:PoliticalParty ;
                           rdfs:label ?central_louisiana_ruling_party_name .
  ?governor dbpedia:belongsTo ?party_member .
  ?party_member a dbpedia:Person ;
               dbpedia:birthPlace ?central_louisiana_birthplace;
               rdfs:label ?party_member_name .
  ?actor a dbpedia:Person ;
          dbpedia:hasSpouse ?spouse ;
          rdfs:label ""Roger Pryor""@en .
  ?spouse a dbpedia:Person ;
           rdfs:label ?spouse_name .
  ?central_louisiana_birthplace geo:location ?central_louisiana_location .
  ?central_louisiana_location geo:coordinates ?coordinates .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
78,9,train,Give me the band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band_member_name ?associated_artist_name
WHERE {
  ?band a dbpedia:Band ;
            dbpedia:hasMember ?band_member .
  ?band_member rdfs:label ?band_member_name .
  ?associated_artist a dbpedia:Artist ;
                       dbpedia:workedWith ?band .
  ?associated_artist rdfs:label ?associated_artist_name
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
687,20,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_role ?actor_birthplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ?actor_name .
  ?actor foaf:isA dbpedia:SoccerPlayer .
  FILTER (str(?actor_name) LIKE '%All or Nothing: Manchester City%' )
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,38,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_name ?commander_name ?party_leader_name ?party
WHERE {
  ?commander a dbpedia:OfficeHolder ; dbpedia:role dbpedia:Commander .
  ?commander dbpedia:polski:member dbpedia:Conservative_Party_of_Spain .
  ?party_leader a dbpedia:Politician ; dbpedia:office ?office_name .
  ?party_leader dbpedia:polski:member dbpedia:Conservative_Party_of_Spain .
  ?commander rdfs:label ?commander_name .
  ?party_leader rdfs:label ?party_leader_name
}
",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
68,18,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  FILTER (regex(str(?parent_name), ""Maximilian I, Holy Roman Emperor"") AND
          str(?child_name) LIKE ""%Philip%"")
}
```

This query selects the child's name (`?child_name`) and the parent's name (`?parent_name`) from individuals who are children of Maximilian I and have a parent with the label ""Maximilian I, Holy Roman Emperor"". The filter condition ensures that the parent's name matches ""Maximilian I"" and the child's name includes ""Philip"".",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,21,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of Pablo Aimar.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player_name ?birthplace ?team_name
WHERE {
  ?player a dbpedia:Athlete ;
           dbpedia:birthDate ""1955-02-22""^^xsd:date ;
           dbpedia:participantRole dbpedia:teammateOf ?pablo_aimar .
  ?pablo_aimar a dbpedia:Footballer ;
               dbpedia:teamMemberOf ?team_name .
  ?player rdfs:label ?player_name .
  ?team_name rdfs:label ?team_name
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
412,2,train,Give me the war of Konstantinos Ventiris.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX owl: <http://www.w3.org/2002/07/owl#

SELECT ?war_name ?greek_side
WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?conflict .
  ?conflict rdfs:label ?war_name .
  ?war dbpedia:involvedParty ?greek_side .
  ?greek_side a owl:Class ; rdfs:label ""Greece"" .
}
```",1,1,2,1,1,2,3,28,0,0,10,0,0.0,0
103,54,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?actor_profession ?richard_egrant_profession
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor ?actor_name .
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  OPTIONAL { 
    ?actor dbpedia:hasRole [ 
      a dbpedia:Occupation ; 
      rdfs:label ?actor_profession
    ] }
    
  ?richard_egrant a dbpedia:Person ;
               rdfs:label ""Richard E. Grant"" ;
               dbpedia:occupation ?richard_egrant_profession .
  
  FILTER ( ?actor_name = ?richard_egrant )
}
```",6,8,7,3,3,3,3,71,0,0,13,0,0.0,0
723,2,train,Give me the reference to Nothing to Gein.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?film_name ?film_description ?film_director
WHERE {
  ?film a dbpedia:Film ;
         dbpedia:productionCompany ""Rialto Pictures"" ;
         dbpedia:director ?film_director .
  ?film rdfs:label ?film_name .
  ?film_description rdfs:comment ?film_description .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,27,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?character_name ?character_profession
WHERE {
  ?character a dbpedia:ComicCharacter ;
            dbpedia:name ?character_name .
  ?character rdfs:label ""Lamont Cranston""@en .
  ?character dbpedia:alter_ego ?shadow_alter_ego .
  ?shadow_alter_ego a dbpedia:Person;
                  dbpedia:aliasName ""The Shadow""@en
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
628,48,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name WHERE {
  ?artist a dbpedia:MusicArtist ;
            dbpedia:origin dbpedia:Puerto_Rico .
  ?artist rdfs:label ""GS9"" .
  ?bandMember a dbpedia:Musician ;
             dbpedia:memberOf ?artist ;
             dbpedia:birthPlace dbpedia:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
213,3,train,"Who is the child, that is a politician, of Chiang Ching-kuo?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
         dbpedia:parent ?chiang_ching_kuo .
  ?child rdfs:label ?child_name .
  ?child dbpedia:birthPlace ?child_birthplace
}
```",1,2,2,1,1,3,2,20,0,17635,1,0.0,0.0,0
557,41,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?producer_name WHERE {
  ?producer a dbpedia:Person ; dbpedia:birthPlace ?producer_birthplace .
  ?producer rdfs:label ?producer_name .
  ?producer dbpedia:role dbpedia:Producer .
  ?producer dbpedia:work dbpedia:A_Star_Is_Born_Film_1937 .
  ?producer rdfs:label 'David O. Selznick' .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,45,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?battle_name ?television_show_name
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:givenName ""George"" ;
            dbpedia:surname ""Ducas"" ;
            dbpedia:role ""Commander"" ;
            dbpedia:conflict ""Battle of Vienna"" .
  ?battle a dbpedia:Event ;
           dbpedia:name ""Battle of Vienna"" .
  OPTIONAL { ?commander rdfs:label ?commander_name }
  OPTIONAL { ?battle rdfs:label ?battle_name }
  OPTIONAL { ?television_show a dbpedia:TelevisionShow ;
                       dbpedia:name ?television_show_name }
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,27,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name WHERE {
  ?ship a dbpedia:Ship ; dbpedia:name ""USS Arcadia (ID-1605)"" .
  ?commander a dbpedia:Person ; dbpedia:name ?commander_name .
  ?ship rdfs:seeAlso ?commander
}",3,5,4,3,1,3,3,71,0,0,18,0,0.0,0
737,26,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?greatGrandChildName ?greatGrandChildBirthplace
WHERE {
  ?parent a dbpedia:Person ; dbpedia:child ?child1 .
  ?child1 a dbpedia:Person ; dbpedia:child ?child2 .
  ?child2 a dbpedia:Person ; dbpedia:child ?child3 .
  ?child3 a dbpedia:Person ; dbpedia:name ?greatGrandChildName .
  ?greatGrandChildName rdfs:label ?greatGrandChildBirthplace
}
",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
472,16,train,Give me the territory administered from Copenhagen and administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?territory_name ?mayor_administration
WHERE {
  ?territory a dbpedia:Territory ;
               dbpedia:capitalCity Copenhagen .
  ?mayor a dbo:Mayor ;
            dbo:office ?mayor_office .
  ?mayor_office a dbo:LocalGovernmentOffice ;
                rdfs:label ""Mayor of the Duchy of Schleswig"" .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,11,train,Give me the reference to the real name of Peter IV of Aragon and child of Alfonso IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?peter_name ?alfonso_name
WHERE {
  ?peter a dbpedia:Person ;
         dbpedia:name ""Peter IV of Aragon"" .
  ?peter dbpedia:father ?alfonso .
  ?alfonso a dbpedia:Person ;
            dbpedia:name ""Alfonso IV of Aragon"" .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
297,2,train,"Give me the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_name
WHERE {
  ?character a dbpedia:FictionalCharacter ;
               dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?country_name
}
```",1,2,2,1,1,2,2,9,0,55,1,0.0,0.0,0
782,60,train,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name ?real_name
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:leader ?kim_wilson .
  ?kim_wilson rdfs:label ""Kim Wilson"" .
  ?band rdfs:label ?band_name .
  ?person a dbpedia:Person ;
            dbpedia:name ?real_name .
  ?person foaf:givenName ""Nick"" .
  ?person rdfs:label ?person_name
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
89,23,train,Give me the child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_name WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
905,26,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royal_parent_name ?royal_parent_title
WHERE {
  ?spouse a foaf:Person ;
            dbpedia:spouse ?maria .
  ?maria dbpedia:parent ?royal_parent .
  ?royal_parent a dbpedia:Royalty .
  ?royal_parent rdfs:label ?royal_parent_name .
}
```",3,4,4,3,1,3,3,71,0,4019,2,0.0,0.0,0
375,15,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18 and parent of Kate Dimbleby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?author_name
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:deathDate ""2020-06-18""^^xsd:date ;
           rdfs:label ?author_name ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Kate Dimbleby""@en .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
816,32,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX mousetrap: <http://www.w3.org/2002/07/mousepad#>
SELECT ?actor_name
WHERE {
  ?movie a mousetrap:Film ;
            dbpedia:title ""Photographer"" .
  ?movie cast [ a mousetrap:CastMember ;
                rdfs:label ?actor_name ] .
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ?actor_birthplace .
  ?actor dbo:hasChild [ a dbo:Profession ; rdfs:label ""Photography"" ] .
  FILTER ( ?actor_name = ""Herschel Bernardi"" )
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
468,2,train,"Give me the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_title
WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?alfonso_IV_of_Aragon .
  ?child rdfs:label ?royalty_child_name .
  ?child dbpedia:monarch ?royalty_title .
}
",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
353,8,train,Who is the child of Alfonso VI of León and Castile?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ?parent_name .
  ?child rdfs:label ?child_name
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
399,7,train,Give me the professional in Singer and band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_name
WHERE {
  ?artist a dbpedia:Musician ;
dbpedia:birthName 'Emilia Yancheva Valeva' .
  ?artist rdfs:label ?artist_name .
  ?band a dbpedia:Band ;
dbpedia:hasMember ?artist .
  ?band rdfs:label ?band_name .
}
",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
492,2,train,Give me the death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?death_place
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Sal Mineo"" ;
           dbpedia:deathPlace ?death_place .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
198,8,train,"Give me the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthplace_name ?birthplace_type
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality dbpedia:United_States .
  ?person dbpedia:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
             dbpedia:country dbpedia:United_States .
  ?person rdfs:label ""Henry Clay Lewis"" .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
706,5,train,Who is the actor of Akaler Shandhaney?,SELECT ?result WHERE { <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name
WHERE {
  ?film a dbpedia:Film ;
            dbpedia:productionCompany ""Dhaka Film Co."" ;
            dbpedia:mainActor ?actor_name .
  ?actor a foaf:Person ;
         dbpedia:birthDate ?actor_birthdate .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
595,10,train,Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name ?commander_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:spouse ?spouse_name .
  ?person a dbpedia:Person ;
            rdfs:label ""Hillary Clinton""@en;
            foaf:name ?person_name .
  ?commander a dbpedia:Person ;
             dbpedia:role ""Commander in the Third Taiwan Strait Crisis""@en;
             rdfs:label ?commander_name
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
295,13,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?writer_name WHERE {
  ?work a dbpedia:MusicalWork ;
         dbpedia:artist ?artist_name .
  ?artist_name rdfs:label ""Steven Kapur"" .
  ?work dbpedia:lyrics ?lyrics .
  ?lyrics rdfs:label ""True Self"" .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
353,56,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of William II of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_relationships
WHERE {
  ?spouse dbpedia:spouseOf ?constance .
  ?constance dbpedia:hasChild ?child_of_spouse .
  ?child_of_spouse a dbpedia:Person ;
                   dbpedia:parent ?grandparent_of_roger_III .
  ?grandparent_of_roger_III a dbpedia:Person ;
                       dbpedia:parent ?great-grandparent_of_roger_III .
  ?great-grandparent_of_roger_III a dbpedia:Person ;
                           rdfs:label ""Roger III, Duke of Apulia""  # Assuming great-grandparent is Roger III himself
}

SELECT ?royalty_name ?royalty_relationships
WHERE {
  ?child_of_spouse a dbpedia:Person ;
                  dbpedia:hasChild ?royalty .
  ?royalty a dbpedia:Royalty .
  FILTER (regex(str(?royalty_name), 'William'))  # Focusing on William II of Sicily as an example royalty
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,44,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in Photographer and parent of the child of Allan Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . }",,5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
38,7,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?author_name WHERE {
  ?work a dbpedia:WrittenWork ;
           dbpedia:author ?author_name ;
           dbpedia:isAbout dbpedia:Joe_Biden .
  ?author a dbpedia:Person ;
          dbpedia:nationality ""United States of America"" .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
731,3,train,Who is the awardee of Commander of the Order of the British Empire?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee_name
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award dbpedia:CBE .
}
```",1,1,2,1,1,3,2,20,0,0,853,0,0.0,0
159,8,train,"Give me the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?show_name ?war_description
WHERE {
  ?show a dbpedia:Television_series ;
         dbpedia:hasEpisodeCount ""greater than 1"" .
  ?show rdfs:label ?show_name .
  ?war a dbpedia:Societal_event ;
         dbpedia:conflictType ""War"" .
  ?war_description a rdf:Property ;
                    rdfs:label ""description of war"" .
  ?show dbo:has_war ?war .
  ?war dbo:name ?war_name .
  ?war_description rdf:value ?war_description_value .
  ?war_name = ""Garigliano""
}
```

This query looks for television series that have an episode count greater than one and are associated with the war known as Garigliano, which is a significant event in the context of Jean Baptiste, Comte d'Arco's life.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_name
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?country_name
}
```",2,3,3,2,1,3,3,71,0,106260,216,0.0,0.0,0
311,6,train,Give me the associated musical artist of Filthy Friends and band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_members
WHERE {
  ?band dbpedia:hasMember ?artist .
  ?artist rdfs:label ""Filthy Friends"" .
  ?band rdfs:label ?band_name .
  ?artist rdfs:label ?artist_name
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,39,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name ?author_birthplace ?politician_name ?politician_birthplace
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?politician a dbpedia:Person ;
               dbpedia:birthPlace ?politician_birthplace .
  ?author rdfs:label ""Cece Bell""@en .
  ?politician rdfs:label ""Glenn Youngkin""@en
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
246,8,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name WHERE {
  ?child a dbpedia:Person ;
   dbpedia:birthDate ""1952-08-02"" ;
   dbpedia:givenName ""Faisal"" ;
   dbpedia:familyName ""bin Hussein"" ;
   dbpedia:father ?parent_name .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
39,42,train,"Give me the professional in  and professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist_name ?band_name ?birthplace
WHERE {
  ?sam_concepcion a dbpedia:Musical_Artist ;
                    dbpedia:associatedBand ?band .
  ?band dbpedia:leader ?band_leader .
  ?band_leader a dbpedia:Person ;
                dbpedia:birthPlace ?thompson_birthplace .
  ?thompson rdfs:label ""Robert Lamar Thompson"" .
  ?thompson dbpedia:birthPlace ?thompson_birthplace .
}
```",5,6,6,2,3,3,3,71,0,0,4,0,0.0,0
213,13,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?politician_child_birthplace 
WHERE { 
  ?parent a dbpedia:Person ; dbpedia:deathPlace taipei . 
  ?child a dbpedia:Politician ; dbpedia:birthPlace ?politician_child_birthplace . 
}",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
258,4,train,Give me the birth name of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name WHERE {
  ?politician a dbpedia:Person ;
               dbpedia:nationality dbpedia:Italy ;
               rdfs:label ""Eleonora Menicucci""@it.
  ?politician dbpedia:birthName ?birth_name .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
59,1,train,Give me the manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?club a dbpedia:SportsTeam ;
           dbpedia:type ""football club"" ;
           dbpedia:name ""Hartlepool United F.C."" .
  ?manager a dbpedia:Person ;
           dbpedia:role ""manager"" ;
           dbpedia:birthPlace ?manager_birthplace .
  ?club dbpedia:hasManager ?manager
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
375,21,train,Give me the entity in Japan and war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity_name ?war_name
WHERE {
  ?entity a dbpedia:Person ;
            dbpedia:nationality ""Japan"" .
  ?entity dbpedia:participatedInBattle ?battle .
  ?battle rdfs:label ""Sekigahara"" . # Battle of Sekigahara
  OPTIONAL { ?entity dbpedia:participatedInBattle ?another_battle . }
  ?another_battle rdfs:label ""Siege of Osaka"" . # Siege of Osaka
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
756,18,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?manager_name ?birthplace 
WHERE { 
  ?manager a dbpedia:Person ; 
  dbpedia:birthPlace ?birthplace ; 
  dbpedia:manageTeam dbpedia:SVV_Eindhoven (2020-2021) . 
  ?manager rdfs:label ?manager_name . 
  ?manager also dbpedia:manageTeam dbpedia:VfL_Bochum . 
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
159,53,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?war1_name ?conflict1_type ?office ?successor_name ?conflict2_name ?conflict2_type 
WHERE { 
?commander a dbpedia:Person ; dbpedia:role dbpedia:Commander . 
?commander rdfs:label ?commander_name . 
?war1 a dbpedia:Event ; dbpedia:name ?war1_name ; dbpedia:type ?conflict1_type . 
?conflict1 a dbpedia:MilitaryConflict . 
?successor a dbpedia:Person ; dbpedia:role dbpedia:OfficeHolder ; rdfs:label ?successor_name . 
?conflict2 a dbpedia:Event ; dbpedia:name ?conflict2_name ; dbpedia:type ?conflict2_type . 
?conflict2 a dbpedia:MilitaryConflict . 
?commander dbpedia:participatedIn ?war1 . 
?successor dbpedia:predecessorOf ?commander . 

FILTER (lang(?commander_name) = 'en' ) 

# Reference to George Ducas
?commander rdfs:seeAlso ?george_ducas .",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
419,3,train,"Who is the awardee, that is australian and a scientist, of Australian Laureate Fellowship?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?laureate_name ?laureate_nationality ?awardee_fellowship
WHERE {
  ?laureate a dbpedia:Person ; 
  dbpedia:nationality ?laureate_nationality .
  ?laureate rdfs:label ?laureate_name .
  ?laureate dbpedia:hasAwards [ dbpedia:P141 ] .
  ?awardee_fellowship a dbpedia:Fellowship ; 
  rdfs:label ?awardee_fellowship_name ; 
  dbpedia:awardee ?laureate
}
",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
557,57,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?film_title ?director_name ?johnny_doughboy_actor_name ?actor_birthplace
WHERE {
  ?film a dbpedia:Film ;
         dbpedia:starring ?janet_gaynor .
  ?film rdfs:label ?film_title .
  ?director a dbpedia:Person ;
           dbpedia:directed ?film .
  ?film dbpedia:producer ?producer_name .
  ?actor a dbpedia:Person ;
          dbpedia:role ?johnny_doughboy_role .
  ?actor rdfs:label ?johnny_doughboy_actor_name .
  ?producer a dbpedia:Person ;
           dbpedia:producer ?film
  .
  ?janet_gaynor rdfs:label ""Janet Gaynor"" .
  ?johnny_doughboy_role rdfs:label ""Johnny Doughboy""
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,1,train,Give me the father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },,1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,1,train,Give me the spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?husband_name ?wife_name
WHERE {
  ?janusz_kaminski a dbpedia:Person ;
                    dbpedia:birthDate ""1973-04-10"" ; # Placeholder birth date, replace with actual value
                    dbpedia:fullName ""Janusz Kamiński"" .
  ?janusz_kaminski foaf:spouseOf ?wife .
  ?wife a dbpedia:Person ;
          dbpedia:fullName ?wife_name .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
756,53,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Thomas Letsch
SELECT ?thomas_letsch WHERE {
  ?thomas_letsch a dbpedia:Person ;
                 dbpedia:name ""Thomas Letsch"" .
}

# Step 2: Find the manager of the team Thomas Letsch played for
SELECT ?manager_name ?team WHERE {
  ?thomas_letsch dbpedia:playsFor ?team .
  ?team a dbpedia:SportTeam ;
         dbpedia:type ""football club"" .
  ?team dbpedia:manager ?manager_name .
}

# Step 3: Identify the 2006-07 VfL Bochum season
SELECT ?season WHERE {
  ?team rdfs:label ""VfL Bochum"" ;
          dbpedia:season ""2006-07"" .
}

# Step 4: Find the successor of the 2006-07 VfL Bochum season
SELECT ?successor_season ?successor_team WHERE {
  ?season rdfs:label ""2006-07"" ;
           dbpedia:seasonNext ""2007-08"" .
  ?successor_team a dbpedia:SportTeam ;
                 dbpedia:type ""football club"" ;
                 dbpedia:season ?successor_season .
}

# Step 5: Combine all the information
```

### Completed
The final answer, based on the reasoning and the constructed SPARQL query, is:

**[[ ## completed ## ]]** 

Thomas Letsch's manager from the team he played for is not directly identifiable through this query as it requires more specific data about his career moves. However, the query structure and approach are correct for extracting the other required information.

To find the exact manager of the team Thomas Letsch played for during the 2006-07 VfL Bochum season, additional data or a more detailed query might be needed, possibly involving external sources or more specific DBpedia properties related to player movements.",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
80,34,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?actor_birthplace 
WHERE { 
  ?movie a dbpedia:Film ; dbpedia:basedUpon dbpedia:Smartbomb . 
  ?actor a dbpedia:Person ; dbpedia:roleIn ?movie . 
  ?actor rdfs:label ?actor_name . 
}",4,4,5,3,2,3,3,71,0,0,7802,0,0.0,0
737,45,train,"Give me the predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor_name ?predecessor_title ?archduchess_sophie_parent_name
WHERE {
  ?archduchess a dbpedia:Person ;
    dbpedia:hasParent ?archduchess_sophie_parent ;
    dbpedia:hasChild ?carl_duke_of_wurttemberg .
  ?carl_duke_of_wurttemberg a dbpedia:Person ;
    dbpedia:hasParent ?archduchess_sophie_parent ;
    dbpedia:hasGrandchild ?predecessor .
  ?predecessor a dbpedia:Royalty
}
",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
68,12,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?birthplace
WHERE {
  ?catherine a dbpedia:Person ;
    dbpedia:name 'Catherine of Austria' ;
    dbpedia:birthPlace ?birthplace .
  ?maximilian_I a dbpedia:Person ;
    dbpedia:name 'Maximilian I, Holy Roman Emperor' ;
    dbpedia:father ?father_name .
  ?catherine dbpedia:child ?father_name .
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
941,0,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
         dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel"" .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
737,33,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?ancestor_name ?ancestor_birthplace
WHERE {
  ?lineage a dbpedia:FamilyRelationship ;
    dbpedia:parent ?child1 ;
    dbpedia:parent ?child2 ;
    dbpedia:parent ?grandchild .
  ?child1 a dbpedia:Person ;
    rdfs:label ?child_name .
  ?child2 a dbpedia:Person ;
    rdfs:label ?child_name .
  ?grandchild a dbpedia:Person ;
    rdfs:label ?ancestor_name .
    dbpedia:birthPlace ?ancestor_birthplace .
  ?child_name = 'Carl' 
}
",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
941,15,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?royalty_status ?parent_name ?parent_title
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:title ?parent_title .
  ?child dbpedia:birthDate ?child_birthdate .
  ?parent foaf:parentOf ?child .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name .
  ?parent_title rdfs:label ""Royalty"" . 
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
737,10,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  ?parent dbpedia:spouse [ resource ?spouse ] .
  ?spouse a dbpedia:Person ;
            rdfs:label ?spouse_name .
  ?child_siblings foaf:sibling ?carl .
  ?carl a dbpedia:Person ;
           rdfs:label ""Carl, Duke of Württemberg"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,34,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Pacely"" .
  ?person rdfs:label ?musical_artist_name .

  ?person a dbpedia:Person ;
           dbpedia:name ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person rdfs:label ?musical_artist_name .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
756,16,train,"Give me the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?chancellor_name ?chancellor_country
WHERE {
  ?chancellor a dbpedia:Politician ;
               dbpedia:office dbpedia:Chancellor_of_Germany ;
               dbpedia:birthPlace ?chancellor_birthplace .
  ?chancellor rdfs:label ?chancellor_name .
  ?chancellor_birthplace a dbpedia:Administrative_territory ;
                       rdfs:label ?chancellor_country
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,0,train,Give me the player in Juan Carlos Molina (footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player_name
WHERE {
  ?player a dbpedia:Footballer ;
           foaf:name ?player_name .
  ?player dbpedia:representativeTeam dbpedia:Argentina national football team .
  ?player rdfs:label ""Juan Carlos Molina""@en .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
816,56,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:starring Herschel_Bernardi .
  ?movie dbpedia:hasActor ?actor .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:parent ?parent_of_Amy_Arbus .
  ?parent_of_Amy_Arbus dbpedia:child ?child_of_Spouse_of_Mariclare_Costello
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,6,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name ?parent_names
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ?parent_name .
  ?parent ns:familyName ""Brunswick-Wolfenbüttel"" .
  ?parent ns:mariagePartner ?spouse .
  ?spouse a dbpedia:Person ;
            rdfs:label ""Prince Augustus William of Prussia"" .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
386,6,train,Give me the war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?war_name ?baggovut_war_entity
WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?war_name .
  ?baggovut rdfs:label ""Karl Gustav von Baggovut"" .
  ?war dbpedia:involvedEntity ?baggovut_war_entity .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
203,0,train,Give me the commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:birthPlace ""France"" ;
             rdfs:label ?commander_name .
  FILTER (lang(?commander_name) = ""fr"")  # Ensure the name is in French
}
```",1,1,2,1,1,3,3,71,0,0,48,0,0.0,0
80,42,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?actor dbpedia:role dbpedia:The_Shadow .
  ?actor dbpedia:role dbpedia:Neo .
  ?actor dbpedia:role dbpedia:Donald_Glover .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
609,48,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?vince_gilligan_birthplace ?cece_bell_birthplace WHERE { ?vince_gilligan a dbpedia:Person ; dbpedia:birthPlace ?vince_gilligan_birthplace . ?cece_bell a dbpedia:Person ; dbpedia:birthPlace ?cece_bell_birthplace . },5,5,6,3,2,3,3,71,1,109573,0,9.126252578166353e-06,1.0,1.8252338580880676e-05
225,2,train,Give me the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?time_zone
WHERE {
  ?city dbpedia:isPartOfCountry Japan ;
           dbpedia:locatedInCity ?kiyosu .
  ?kiyosu rdfs:label ""Kiyosu"" .
  ?time_zone a dbpedia:TimeZoneInfo .
  ?time_zone rdfs:label ?time_zone_label
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
80,54,train,"Give me the professional in  and actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v3 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/album> ?v5 . }","Given the limitations and focusing on the artist aspect:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?album_name ?actor_name WHERE {
  ?song a dbpedia:MusicSingle ;
           dbpedia:performer ?artist_name .
  ?artist_name rdfs:label ""T.I."" .
  OPTIONAL { ?song dbpedia:fromAlbum ?album_name }
  ?album_name rdfs:label ?album_name .
  
  # Assuming there's a movie related to T.I.'s work, we would add:
  OPTIONAL { ?movie a dbpedia:Film ;
               dbpedia:actor ?actor_name . }

  FILTER (lang(?artist_name) = ""en"")  # Filter for English language
}
```

This query looks for the artist (""T.I.""), the album from which the song ""What You Know"" was released, and any associated actors from a hypothetical movie related to T.I.'s work. However, since there's no direct movie adaptation of ""What You Know,"" this query will return information about T.I. as an artist and potentially other related entities if they exist in DBpedia.",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
557,10,train,Give me the professional in  and producer of A Star Is Born (1937 film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?director_name ?producer_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:productionCompany ?producer_company .
  ?producer_company rdfs:label ?producer_name .
  ?director a dbpedia:Person ;
             dbpedia:role ?director_role .
  ?director_role rdfs:label ?director_name
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,22,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?governor_birthplace .
  ?politician rdfs:label ?governor_name .
  OPTIONAL { ?politician dbpedia:PARENT ?parent }
  OPTIONAL { ?parent a dbpedia:Person ; dbpedia:birthPlace ?parent_birthplace }
}
```

This query attempts to capture the relationships between William Gayner and his family members, with the aim of inferring his birth location.",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
203,36,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardee_name ?british_military_force
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:awardRecipientOf dbpedia:Knight_Commander_of_the_Order_of_the_Bath ;
            dbpedia:participatedInMilitaryCampaign dbpedia:French_Campaign_in_Egypt_and_Syria .
  ?awardee foaf:name ?awardee_name .
  ?campaign a dbpedia:Military_campaign ;
             dbpedia:commander ?awardee ;
             dbpedia:location ""Egypt and Syria"" .
  ?campaign rdfs:label ""French Campaign in Egypt and Syria""@en .
  ?campaign dbpedia:involvedMilitaryUnit ?british_military_force
}
```

This query looks for a person who received the Knight Commander of the Order of the Bath and participated in the French campaign in Egypt and Syria. It then identifies the military unit (British military force) involved in the campaign they commanded.",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
557,33,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthDate ?actor_birthdate;
           rdfs:label ?actor_name .
  ?movie a dbpedia:Film ;
            dbpedia:mainActor ?actor_name ;
            dbpedia:director ?producer_name .
  ?actor rdfs:label ""Johnny Doughboy"" .
}
```

This query does the following:
- It selects the producer's name (`?producer_name`) of any film (`?movie`) directed by an actor (`?actor`) who was born on a specific date (represented by `?actor_birthdate`, which is not explicitly specified here but would be in a real scenario) and has the label ""Johnny Doughboy"".
- It assumes that the mainActor property links the movie to its lead actor, and the director property links the movie to its producer.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,3,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""Prince Faisal bin Hussein""@en ;
            dbpedia:birthDate ""1935-04-27""^^xsd:date .
  ?child rdfs:label ?child_name .
  ?child a foaf:ChildOf ?parent .
  ?child dbpedia:royaltyStatus ""Yes""@en
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
609,11,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Vince Gilligan"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,11,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },,2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
103,18,train,Give me the professional in Actor and professional in  and actor of Dispatches from Elsewhere.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?role
WHERE {
  ?actor a dbpedia:Actor ;
           rdfs:label ?actor_name .
  ?actor dbpedia:hasRole ?role .
  ?role rdfs:label ""Actor"" .
  ?actor ap:roleInSeries ""Dispatches from Elsewhere"" .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
375,10,train,Give me the war of the person born as Koichirō.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?koichiro_details
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Koichirō""@ja;
            dbpedia:birthPlace ""Japan"" .
  ?person dbpedia:conflict ?war .
  FILTER (lang(?war) = ""ja"")
}
```

This query looks for a person named Koichirō who was born in Japan and was involved in a conflict (war). The `FILTER` clause ensures that the war language is Japanese (`lang(?war) = ""ja""`).",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
782,17,train,"Give me the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },,2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
609,60,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?awardee_name ?awardee_birthplace ?author_name ?author_birthplace
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:awardWon [ dbpedia:hasAwardee ?awardee_name ] .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?awardee rdfs:label ?awardee_name .
  ?author rdfs:label ?author_name
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
293,19,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ""Central, Louisiana"" ;
           dbpedia:role dbpedia:Actor ;
           dbpedia:partyMember dbpedia:Republican_Party_of_the_United_States .
  ?actor foaf:spouse ?spouse_name .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,13,train,Give me the person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Bobby Shmurda""@en .
  ?person dbpedia:birthName ?birth_name .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
38,9,train,"Give me the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?work_name ?author_name WHERE {
  ?commander a dbpedia:Person ; dbpedia:rank dbpedia:Commander ; dbpedia:birthPlace <urn:loc:North Carolina> .
  ?commander rdfs:label ?author_name .
  ?work a dbpedia:WrittenWork ; dbpedia:isAbout ?work_subject .
  ?work_subject a dbpedia:OfficeHolder ; dbpedia:office dbpedia:Air National Guard of North Carolina .
  ?work rdfs:label ?work_name .
  ?work_language dbpedia:English
}",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
756,20,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country_name ?manager_birthplace
WHERE {
  ?theodor_heuss a dbpedia:Person ;
                    dbpedia:birthPlace ?heuss_birthplace .
  ?heuss rdfs:label ""Theodor Heuss""@de .

  ?vfLBochumManager a dbpedia:Person ;
                     dbpedia:birthPlace ?manager_birthplace .
  ?manager foaf:name ?manager_name .
  ?vfLBochumManager rdfs:label ""VfL Bochum""@de .

  ?theodor_heuss dbpprop:officeHolder ?heuss_office .
  ?vfLBochumManager dbpprop:memberOf ?bochum_club .

  ?heuss_office a dbpedia:PoliticalOffice ;
                  dbpedia:country ?country_name .
  ?bochum_club rdfs:label ""VfL Bochum""@de .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
140,14,train,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v2 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?party_member_name WHERE { ?party_member a dbpedia:PoliticalParty ; dbpedia:name ?party_member_name ; dbpedia:headquarter dbpedia:New_York_City . },3,6,4,3,1,3,2,20,0,0,21486,0,0.0,0
943,45,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . }","The provided SPARQL queries aim to identify Baeda Maryam I and Dawit I first, then trace their lineage backward to find their father.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,10,train,Give me the player in Juan Carlos Molina (footballer) and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?juan_carlos_molina_team ?pablo_aimar_team
WHERE {
  ?juan_carlos_molina a dbpedia:Footballer ;
                       dbpedia:playsFor ?juan_carlos_molina_team .
  ?pablo_aimar a dbpedia:Footballer ;
                dbpedia:playsFor ?pablo_aimar_team .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
419,2,train,Give me the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace WHERE {
  ?poet a dbpedia:Person ;
         dbpedia:name ""Yandamuri Veerendranath"" ;
         dbpedia:birthPlace ?birthplace .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
905,51,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_parent_name ?royalty_parent_title
WHERE {
  ?charles_I_predecessor a dbpedia:Monarch ;
                       rdfs:label ""Charles I of Hungary"" .
  ?sigismund a dbpedia:Person ;
             dbpedia:parent ?royalty_parent ;
             dbpedia:birthPlace <http://dbpedia.org/property/birthPlace_of_Sigismund_Louis_of_Hungary> .
  ?royalty_parent a dbpedia:Royalty ;
               rdfs:label ?royalty_parent_name .
  ?charles_I_predecessor dbpedia:predecessor ?stephen_V .
  ?stephen_V a dbpedia:Monarch ;
                rdfs:label ""Stephen V of Hungary"" .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
297,3,train,Give me the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration_name ?party affiliation ?key_event
WHERE {
  ?secretaryOfState a dbpedia:OfficeHolder ;
                   dbpedia:office dbpedia:Secretary_of_State_of_Georgia ;
                   dbpedia:officeHolderOfficeStart ""2021-01-10"" ;
                   foaf:name ""Brian Kemp"" .
  ?secretaryOfState rdfs:label ?administration_name .
  ?secretaryOfState dbpedia:politicalAffiliation ?party_affiliation .
  OPTIONAL { 
    ?secretaryOfState dbpedia:importantEvent ?key_event
  }
}
```",1,1,2,1,1,2,2,9,0,0,19,0,0.0,0
68,21,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_relationship_to_Maximilian ?parent_of_Isabella ?parent_of_Philip
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:childOf Maximilian_I_Holy_Roman_Emperor .
  ?parent_of_Isabella a dbpedia:Person ;
                  dbpedia:parentOf Isabella_of_Austria .
  ?parent_of_Philip a dbpedia:Person ;
                 dbpedia:parentOf Philip_I_of_Castile .
  ?child rdfs:label ?child_name .
  ?parent_of_Isabella rdfs:label ?parent_of_Isabella .
  ?parent_of_Philip rdfs:label ?parent_of_Philip
}
```

This query will help us identify the child of Maximilian I who is also a parent of Isabella of Austria and further, a grandparent or more distant ancestor of Philip I of Castile.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
39,22,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?singer_name ?band_name 
WHERE { 
  ?thompson a dbpedia:MusicalArtist ; 
    dbpedia:birthDate ?birthDate . 
  ?singer a dbpedia:Singer ; 
    dbpedia:associatedBand ?band . 
    ?band a dbpedia:MusicGroup . 
    ?band rdfs:label ?band_name . 
    ?thompson rdfs:label ?singer_name . 
  }",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
203,25,train,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?american_fleet_name ?calder_command 
WHERE { 
  ?battle a dbpedia:Event ; dbpedia:type ""conflict"" ; dbpedia:name ""Battle of Fort Royal"" . 
  ?battle dbpedia:participatedIn ?calder_event . 
  ?calder_event a dbpedia:SocietalEvent ; dbpedia:commander ?calder_name . 
  ?calder_name rdfs:label ?calder_name_label . 
  ?american_fleet a dbpedia:MilitaryUnit ; dbpedia:type ""Naval"" ; dbpedia:commandedBy ?calder_name_label . 
  ?calder_name_label ns:name ?american_fleet_name
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,20,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor_name ?predecessor_birthplace
WHERE {
  ?carl a dbpedia:Person ; dbpedia:name ?carl_name ; dbpedia:birthPlace ?carl_birthplace .
  ?philip a dbpedia:Person ; dbpedia:name ?philip_name ; dbpedia:birthPlace ?philip_birthplace .
  ?eugen a dbpedia:Person ; dbpedia:name ?eugen_name ; dbpedia:parent ?philip .
  ?carl rdfs:child ?eugen .
  ?eugen rdfs:child ?philip
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
80,12,train,Give me the actor of ATL (film) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }",,2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
595,25,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author_name ?health_campaigns ?navy_commander_name ?navy_commander_rank
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?author rdfs:label ?author_name .
  
  ?health_campaigns a dbpedia:SocietalEvent ;
                    dbpedia:topic ""Health"" .
  
  ?navy_commander a dbpedia:Person ;
                   dbpedia:rank ?navy_commander_rank ;
                   foaf:name ?navy_commander_name .
  
  ?health_campaigns dbpedia:ledBy ?navy_commander .
  
  ?author dbpedia:hasRole ?health_campaigns .
  
  ?navy_commander rdfs:label ""United States Navy"" .
}
```

### Completed
This query attempts to find an author who has been involved in significant health-related campaigns (interpreted as a disease) and also identifies a United States Navy commander who could metaphorically represent a disease or societal event. The results will provide the names of the individuals matching these criteria, along with their respective roles and ranks.

Please note that due to the complexity and potential ambiguity of the query, especially regarding the ""disease"" aspect, the results may not perfectly align with the intended interpretation. Adjustments to the query might be necessary for more precise outcomes.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
39,43,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?character_name ?creator_name ?band_membership
WHERE {
  ?character a dbpedia:ComicCharacter ;
             rdfs:label ?character_name .
  ?character dbo:createdBy ?creator .
  ?creator rdfs:label ?creator_name .
  OPTIONAL { ?character dbpprop:hasBandMember ?band_member }
  ?band_member a dbpedia:Musician ;
               rdfs:label ?band_member_name .
  FILTER (lang(?character_name) = ""en"" || lang(?band_member_name) = ""en"")
}
```

This SPARQL query looks for a comic character (`?character`) with the label (`?character_name`) created by someone (`?creator`) who could be identified as Walter B. Gibson (Maxwell Grant) based on their name (`?creator_name`). Additionally, it searches for any band members (`?band_member`) associated with the character, matching Bob Thompson (musician).",5,7,6,3,3,3,3,71,0,0,3,0,0.0,0
361,11,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX musicbrainz: <http://musicbrainz.org/ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#

SELECT ?actor_name
WHERE {
  ?album dbpedia:releaseDate ""2001-10-15"" .
  ?album musicbrainz:albumID ""MBID"" .
  ?film a dbpedia:Film ;
         dbpedia:starring ?actor_name .
  ?album dbpedia:artist Incubus .
  ?film dbpedia:basedOnAlbum ?album
}
```

This query does the following:
- Uses prefixes for DBpedia and MusicBrainz ontologies.
- Selects the name of the actor (`?actor_name`) from films (`?film`) that star the artist Incubus (`?album dbpedia:artist Incubus`).
- Checks if the film is based on the album ""Lasso the Moon"" with a release date of ""2001-10-15"" (`?album dbpedia:releaseDate ""2001-10-15""`).",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
347,33,train,Give me the commander in Thirty Years' War and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_birthplace ?archduke_joseph_parent_name ?archduke_joseph_parents
WHERE {
  ?archduke_joseph a dbpedia:Person ;
                 dbpedia:hasParent ?archduke_joseph_parents .
  ?archduke_joseph_parents a dbpedia:Person ;
                      dbpedia:parentOf ?archduke_joseph .
  ?archduke_joseph_parents rdfs:label ?archduke_joseph_parent_name .
  ?commander a dbpedia:MilitaryLeader ;
             dbpedia:lead ?archduke_joseph .
  ?commander rdfs:label ?commander_name .
  FILTER (lang(?archduke_joseph_parent_name) = ""en"")  # Assuming English language for simplicity
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
595,16,train,"Give me the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://dbpedia.org/property/author> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?book_title
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace dbpedia:Chappaqua, New York .
  ?politician rdfs:label ?politician_name .
  ?book a dbo:Book ;
          dbo:author ?politician .
  ?book rdfs:label ?book_title
}
```",2,7,3,2,1,3,3,71,0,0,10,0,0.0,0
80,58,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?character_name ?album_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:role ?character_name .
  ?album a dbpedia:MusicAlbum ;
            dbpedia:artist ?actor_name .
  ?actor rdfs:label ?actor_name .
  ?album rdfs:label ?album_name
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
731,10,train,"Who is the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse?","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name WHERE {
  ?event a dbpedia:Event ; dbpedia:type ""military conflict"" ; dbpedia:partOf 
    dbpedia:World_War_II .
  ?event dbpedia:involvedMilitaryUnit ?military_unit .
  ?military_unit a dbpedia:Naval_fleet ; dbpedia:commander ?commander_name .
  ?commander_name rdfs:label ?commander_name_str .
}
",2,4,3,2,1,3,2,20,0,0,6,0,0.0,0
414,13,train,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nobelprize: <http://dbpedia.org/ontology/NobelPrize>

SELECT ?host_educational_institution WHERE {
  ?award nobelprize:NobelPrizeAwardedTo ?recipient .
  ?recipient rdfs:label ""Rainer Weiss"" .
  ?recipient dbpedia:P31 ?host_educational_institution .
  ?host_educational_institution a dbpedia:EducationalInstitution
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
89,34,train,Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?minye_kyawswa a dbpedia:Person ;
                   dbpedia:birthPlace ?minye_birthplace .
  ?minye_kyawswa dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name
}

SELECT ?grandchild_name ?grandchild_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ?child_birthplace .
  ?child dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person ;
             dbpedia:birthPlace ?grandchild_birthplace .
  ?grandchild rdfs:label ?grandchild_name
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
293,6,train,"Give me the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?tv_series a dbpedia:TelevisionSeries ;
             dbpedia:hasMainActor ?actor .
  ?actor rdfs:label ?actor_name .
  FILTER (lang(?actor_name) = ""en"")  # Ensure the name is in English
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
143,9,train,"Give me the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?result <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?movie_name WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthDate ""1977-10-24"" ;
         dbpedia:roleIn ?movie .
  ?movie rdfs:label ?movie_name .
  FILTER (lang(?movie_name) = ""en"")  # Search for English movies
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
668,32,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?associated_artist_name WHERE {
  ?associated_artist a dbpedia:Musician ;
  dbpedia:collaborationWith ?elorm_kabu_amenyah .
  ?elorm_kabu_amenyah rdfs:label ""Elorm Kabu Amenyah""@en .
}
",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
633,5,train,Give me the father of Dorothea of Lorraine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name WHERE {
  ?dorothea a dbpedia:Person ;
             dbpedia:birthDate ""c. 1200"" ;
             dbpedia:deathDate ""c. 1230"" ;
             dbpedia:parents [ ?parent a dbpedia:Person ] .
  ?parent foaf:name ?father_name
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
782,6,train,Give me the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name
WHERE {
  ?bandMember a dbpedia:BandMember ;
               dbpedia:memberOf dbpedia:Eric_Clapton_Band .
  ?bandMember rdfs:label ?band_member_name .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
668,36,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist_name ?birth_name
WHERE {
  ?artist a dbpedia:MusicArtist ;
            dbpedia:birthDate ?birth_date .
  ?person a dbpedia:Person ;
            dbpedia:birthPlace dbpedia:CentralRegion_Ghana ;
            foaf:name ?birth_name .
  ?artist rdfs:label ?artist_name .
  ?person rdfs:label ?person_name
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
87,17,train,Give me the actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?spouse_name 
WHERE { 
  ?movie a dbpedia:Film ; dbpedia:title 'Always' ; dbpedia:year 1989 . 
  ?actor a dbpedia:Person ; dbpedia:roleInMovie ?movie . 
  ?actor rdfs:label ?actor_name . 
  ?award a dbpedia:Award ; dbpedia:name 'List of awards and nominations received by Janusz Kamiński' . 
  ?award rdfs:recipient ?awardee . 
  ?awardee a dbpedia:Person ; dbpedia:name ?spouse_name . 
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
87,14,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name
WHERE {
  ?janusz_kaminski a dbpedia:Person ;
                    dbpedia:birthDate ""1955-04-13"" ;
                    dbpedia:awards [ dbpedia:award ""List of awards and nominations received by Janusz Kamiński"" ] .
  ?janusz_kaminski foaf:spouse ?spouse_name .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
198,41,train,"Give me the entity in Charleston, South Carolina and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX medals: <http://dbpedia.org/ontology/Medals>

SELECT ?medal_winner_name ?war WHERE {
  ?medal_winner a dbpedia:Person ;
                 dbpedia:recipientOf medal:MedalOfHonor ;
                 dbpedia:birthPlace ""Charleston, South Carolina"" .
  ?medal_winner rdfs:label ?medal_winner_name .
  
  ?gillmore_awardee a dbpedia:Person ;
                dbpedia:recipientOf medal:Gillmore_Medal ;
                dbpedia:birthPlace ""Charleston, South Carolina"" .
  ?gillmore_awardee rdfs:label ?gillmore_awardee_name .

  ?medal_winner dbpedia:conflict ?war .
  ?gillmore_awardee dbpedia:conflict ?war
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
731,15,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?war
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award dbpedia:Edmund_Hakewill_Smith_Award .
  ?tom_phillips a dbpedia:Person ;
              dbpedia:conflict dbpedia:World_War_II .
  ?awardee rdfs:label ?awardee_name .
  ?tom_phillips rdfs:label ?tom_phillips_name
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
419,1,train,Give me the alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX edu: <http://www.w3.org/2000/10/ont#>
PREFIX dbpedia-core: <http://dbpedia.org/ontology/>

SELECT ?almaMater
WHERE {
  ?person a dbpedia-core:Person ;
           dbpedia-core:birthDate ?birthdate ;
           dbpedia-core:name ""Chennupati Jagadish"" .
  ?person edu:degree ?almaMater .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
375,3,train,Give me the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:officeHolderRole dbpedia:GovernorOf_Prefecture ;
            dbpedia:birthPlace ?governor_birthplace .
  ?governor rdfs:label ?governor_name
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
687,4,train,"Give me the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birth_date ?sport
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthDate ?birth_date .
  OPTIONAL { ?person dbo:hasOccupation ?sport }
  FILTER (?birth_date = ""1955-02-22"")
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
58,8,train,Give me the producer of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . }","PREFIX dbpedia-movie: <http://dbpedia.org/ontology/movies/>

SELECT ?producer_name
WHERE {
  ?movie a dbpedia-movie:Movie ;
           dbpedia-movie:title ""Your Movie Title Here"" .
  ?movie dbpedia-movie:producer ?producer .
}",2,2,3,2,1,3,2,20,0,0,10672,0,0.0,0
943,9,train,Give me the reference to  and child of Dawit I.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?emperor_name ?emperor_reference ?child_name ?child_reference
WHERE {
  ?emperor a dbpedia:Monarch ;
            dbpedia:monarchyStartYear 1384 ;
            dbpedia:monarchyEndYear 1412 .
  ?child a dbpedia:Person ;
           dbpedia:parent ?emperor .
  OPTIONAL { ?child rdfs:label ?child_name }
  OPTIONAL { ?child dbpedia:birthPlace ?child_reference }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
769,14,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://dbpedia.org/ontology/manager> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_role
WHERE {
  ?club a dbpedia:SportsClub ;
         dbpedia:sport dbpedia:Soccer .
  ?manager a dbpedia:Person ;
           dbpedia:role dbpedia:Manager ;
           dbpedia:organization ?club .
  ?manager rdfs:label ?manager_name .
  FILTER (lang(?manager_name) = ""en"")
}",3,9,4,3,1,3,2,20,0,0,4,0,0.0,0
80,15,train,Give me the movie with the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/starring> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?movie_title WHERE {
  ?book dbpedia:author ?author_name .
  ?author rdfs:label ?author_name .
  ?book label 'Smartbomb' .
  ?movie a dbpedia:Film ; dbpedia:basedUpon ?book .
}",2,2,3,2,1,3,3,71,0,0,39790,0,0.0,0
468,3,train,Give me the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?realName WHERE {
  ?king a dbpedia:Person ;
   dbpedia:monarchOf dbpedia:Kingdom_of_Aragon ;
   dbpedia:name ?name .
  ?name rdfs:label ?realName
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work_name ?author_name
WHERE {
  ?work a dbpedia:Film ;
         dbpedia:mainActor dbpedia:Vera_Lynn .
  ?work rdfs:label ?work_name .
  ?author rdfs:label ?author_name .
}
```

This query looks for films (dbpedia:Film) where Vera Lynn (dbpedia:Vera_Lynn) was the main actor and then selects the label (name) of both the work (dbpedia:work_name) and the author (dbpedia:author_name).",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
737,52,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?spouse_predecessor_name
WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?archduchess_helena .
  ?child_spouse a dbpedia:Person ; dbpedia:parent ?child .
  ?child_spouse rdfs:label ?spouse_name .
  ?spouse_predecessor a dbpedia:Person ; dbpedia:parent ?spouse_name .
  ?spouse_predecessor rdfs:label ?spouse_predecessor_name
}
",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
78,21,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name1 ?band_name1 ?member_name1 
WHERE {
  ?artist1 a dbpedia:MusicArtist ;
            dbpedia:associatedBand ?band_name1 .
  ?band_name1 rdfs:label ?band_name1_label .

  ?artist2 a dbpedia:MusicArtist ;
            dbpedia:associatedBand ?band_name2 .
  ?band_name2 rdfs:label ?band_name2_label .

  ?artist3 a dbpedia:MusicArtist ;
            dbpedia:bandMember ?member_name3 .
  ?member_name3 a dbpedia:Person ;
               dbpedia:name ?member_name3_name .

  ?artist1 ns:name ""Stuart Tosh"" .
  ?artist2 ns:name ""Billy Lyall"" .
  ?artist3 ns:name ""David Paton"" .
}",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
731,11,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?naval_rank ?service_details
WHERE {
  ?officer a dbpedia:Person ;
            dbpedia:birthDate ""1891-04-14"" ;
            dbpedia:deathDate ""1948-12-29"" ;
            dbpedia:serveIn ?naval_unit ;
            dbpedia:rank ?naval_rank .
  ?naval_unit a dbpedia:NavyVessel ;
               dbpedia:name ""Royal Navy"" .
  ?officer rdfs:label ?officer_name .
  FILTER (lang(?officer_name) = ""en"")  # restrict to English language
}
```

This query looks for a person named Tom Phillips born in 1891, died in 1948, who served in the Royal Navy and had a rank. It will return his naval rank (`?naval_rank`) and any details about his service (`?service_details`).",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
288,2,train,"Give me the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?lahore_name ?lahore_description
WHERE {
  ?lahore a dbpedia:City ;
            rdfs:label ?lahore_name .
  ?lahore rdfs:comment ?lahore_description .
  FILTER (lang(?lahore_name) = ""en"")  # Only consider English descriptions
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
668,41,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of Rod Argent.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?darryl_name ?darryl_birthplace ?elorm_name ?elorm_birthplace ?rod_argent_name ?rod_argent_birthplace
WHERE {
  ?darryl a dbpedia:Person ; dbpedia:name ?darryl_name ; dbpedia:birthPlace ?darryl_birthplace .
  ?elorm a dbpedia:Person ; dbpedia:name ?elorm_name ; dbpedia:birthPlace ?elorm_birthplace .
  ?rod_argent a dbpedia:Person ; dbpedia:name ?rod_argent_name ; dbpedia:birthPlace ?rod_argent_birthplace .
  ?darryl dbpedia:artistRole ?music_artist .
  ?elorm dbpedia:artistRole ?music_artist .
  ?music_artist rdfs:label 'Reuben and the Dark' .
  ?darryl rdfs:label ?rod_argent .
  ?elorm rdfs:label ?rod_argent
}
",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
468,17,train,"Give me the reference to Peter IV and child of the father, that is a royalty, of the parent of Martin of Aragon.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status ?peter_iv_father
WHERE {
  ?peter_iv a dbpedia:Person ;
            dbpedia:father ?peter_iv_father .
  ?peter_iv rdfs:label ""Peter IV"" . 
  ?child a dbpedia:Person ;
           dbpedia:parent ?peter_iv ;
           dbpedia:royaltyStatus ""Royalty"" .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
871,27,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?politician_name ?child_alumnus_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
         dbpedia:alumniOf Eton College .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
68,24,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royal_child_name ?royal_parent_name
WHERE {
  ?royal_parent a dbpedia:Person ;
               dbpedia:birthPlace <http://dbpedia.org/property/place_of_birth> ""Castile"" ;
               dbpedia:deathPlace <http://dbpedia.org/property/deathPlace> ""Castile"" ;
               rdfs:label ?royal_parent_name .
  ?royal_child a dbpedia:Person ;
               dbpedia:birthPlace <http://dbpedia.org/property/place_of_birth> ""Unknown"" ;  # Assuming the child's exact birthplace isn't specified
               foaf:father ?royal_parent .
  ?royal_child rdfs:label ?royal_child_name .
  ?royal_parent foaf:brother | foaf:sister | foaf:parent [ a dbpedia:Person; rdfs:label ?grandparent_name ] .
  FILTER (regex(str(?grandparent_name), ""Philip"")) .
}
```

This query looks for individuals who are descendants of Philip I of Castile, focusing on those who have children (`foaf:father`). It also filters for individuals whose grandparents include someone named ""Philip"", ensuring the connection to Philip I.",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
119,27,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?politician_name ?office
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:office ?office .
  ?politician rdfs:label ?politician_name .
  ?office a dbpedia:PoliticalOffice ;
            dbpedia:country ""Spain"" ;
            dbpedia:party dbpedia:Spanish_Socialist_Workers'_Party .
}
```",3,4,4,3,1,3,3,71,0,0,100,0,0.0,0
347,57,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather_name
WHERE {
  ?archduke a dbpedia:Person ;
             dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ""Emperor Francis I of Austria""@en .
  ?sister a dbpedia:Person ;
            dbpedia:hasParent ?parent ;
            rdfs:label ""Cecilia Renata of Austria""@en .
  ?archduke rdfs:label ?archduke_name .
  ?sister rdfs:label ?sister_name
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,5,train,"Give me the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?character_name ?type
WHERE {
  ?character a dc:Character ;
             dc:creator ""Walter B. Gibson"" .
  ?character rdfs:label ?character_name .
  ?character dc:type ?type
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
37,5,train,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?artist a dbpedia:Artist ;
           dbpedia:birthPlace ?birthplace .
  ?album a dbpedia:Album ;
            dbpedia:artist ?artist ;
            rdfs:label ""The Miseducation of Lauryn Hill"" .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
756,4,train,"Give me the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player_name ?player_info
WHERE {
  ?player a dbpedia:Person ;
            dbpedia:birthDate ?player_birthdate ;
            dbpedia:deathDate ?player_deathdate ;
            dbpedia:sport ?sport .
  ?player foaf:memberOf dbpedia:SportClub ;
           dbpedia:club ?team_name .
  ?team_name rdfs:label ""VfL Bochum"" .
  ?player rdfs:label ?player_name .
  FILTER (STRSTARTS (?player_birthdate, ""2007-08"")) 
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
78,18,train,Give me the band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?band_name
WHERE {
  ?person a dbpedia:Musician ;
            dbpedia:associatedBand ?band .
  ?band rdfs:label ""The Stranglers""@en .
  ?person rdfs:label ?band_member_name .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
687,47,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?soccer_player_name ?birthdate
WHERE {
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:SoccerPlayer .
  ?actor rdfs:label ?actor_name .
  ?film a dbpedia:Film ; dbpedia:producer ?producer_name .
  ?producer a dbpedia:Person ; dbpedia:name ?producer_name .
  ?film dbpedia:starring ?actor .
  ?actor dbpedia:birthDate ?birthdate
  ?producer rdfs:label ?producer_name
  ?producer dbpedia:role dbpedia:FilmProducer
  ?film rdfs:label ?film_name
  FILTER (STRSTARTS(?film_name, 'Manuel'))
}
",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,1,train,Give me the birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?s a dbpedia:Person ;
        dbpedia:givenName ""Reneta"" ;
        dbpedia:surname ""Kamberova"" .
  ?s dbpedia:birthPlace ?birthplace
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
39,12,train,Give me the professional in  and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_name WHERE {
  ?musician a dbpedia:Musician ; dbpedia:associatedBand ?band_name .
  ?musician rdfs:label ""Bob Thompson""@en .
}",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
159,22,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor_name ?tv_show_name ?event_name
WHERE {
  ?successor a dbpedia:Person ;
             dbpedia:role dbpedia:WarCommander ;
             dbpedia:birthPlace ""Ukraine"" .
  ?tv_show rdfs:label ?tv_show_name ;
              dbpedia:genre ""Historical Drama"" .
  ?event a dbpedia:Event ;
            dbpedia:occurredInTimePeriod ""17th century"" ;
            dbpedia:involvedPerson ?successor .
  ?tv_show ?event dbpedia:features ""Historical Accuracy""
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,60,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?war_name ?television_show_name 
WHERE { 
  ?royalty a dbpedia:Royalty ; 
  dbpedia:child ?child_of_royalty . 
  ?child_of_royalty a dbpedia:Person ; 
  dbpedia:parent ?father_of_child . 
  ?father_of_child a dbpedia:Person ; 
  dbpedia:child ?child_of_father . 
  ?child_of_father a dbpedia:HistoricalEvent ; 
  dbpedia:war ?war . 
  ?war rdfs:label ?war_name . 
  ?war a dbpedia:MilitaryConflict . 
  ?television_show a dbpedia:TelevisionShow ; 
  dbpedia:basedOn ?war . 
  ?television_show rdfs:label ?television_show_name . 
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
905,36,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_child_name ?charles_name 
WHERE { 
  ?charles a dbpedia:Person ; 
  dbpedia:parent ?charles_parent ; 
  dbpedia:child ?royalty_child . 
  ?charles_parent a dbpedia:Person ; 
  rdfs:label ?charles_name ; 
  dbpedia:predecessor ?stephen_v_of_hungary . 
  ?royalty_child a dbpedia:Person ; 
  rdfs:label ?royalty_child_name . 
}",4,5,5,3,2,3,3,71,0,7672,1,0.0,0.0,0
295,10,train,Give me the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Vince Gilligan""@en;
           dbpedia:birthPlace ?birthplace .
}
```",2,2,3,2,1,3,2,20,0,1,3,0.0,0.0,0
353,21,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?parent1 a dbpedia:Person ;
            dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
               rdfs:label ""Roger II of Sicily"" .
  ?parent2 a dbpedia:Person ;
            dbpedia:hasParent ?grandparent ;
            rdfs:label ""Elvira of Castile, Queen of Sicily"" .
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent1 .
  ?child rdfs:label ?child_name .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
38,2,train,"Give me the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?politician_role 
WHERE { 
  ?commander a dbpedia:Person ; 
    dbpedia:militaryRank ?rank ; 
    dbpedia:birthPlace ?commander_birthplace ; 
    dbpedia:serviceStartYear ?service_start_year ; 
    rdfs:label ?commander_name 
  
  ?commander ns:serviceMemberOf dbpedia:North Carolina Air National Guard 
  
  ?commander rdfs:label ?politician_role 
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
769,8,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?player_name ?player_birthplace 
WHERE { 
  ?player a dbpedia:Person ; 
    dbpedia:birthPlace ?player_birthplace ; 
    dbpedia:sport ?sport ; 
    dbpedia:role dbpedia:SoccerCoach 
  } 
  ?player rdfs:label ?player_name . 
}",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
531,47,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?gallardón_residence ?costa_office 
WHERE { 
  ?gallardón a dbpedia:Politician ; 
  dbpedia:office ?gallardón_residence . 
  ?costa a dbpedia:Person ; 
  dbpedia:role dbpedia:Officer ; 
  dbpedia:conflict dbpedia:Carnation_Revolution ; 
  dbpedia:role dbpedia:Political_leader . 
  ?gallardón rdfs:label ?gallardón_name . 
  ?costa rdfs:label ?costa_name . 
}",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
203,47,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX owl: <http://www.w3.org/2002/07/owl#

SELECT DISTINCT ?opposing_force_name ?war
WHERE {
  ?regiment a dbpedia:Regiment ;
               dbpedia:name ""30th (Cambridgeshire) Regiment of Foot"" .
  ?regiment dbpedia:engagedIn ?war .
  ?war a dbpedia:War ;
         dbpedia:conflictDate ?conflictDate .
  OPTIONAL { 
    ?war dbpedia:opposingForces ?opposing_forces .
    ?opposing_forces a dbpedia:MilitaryForce .
    ?opposing_forces rdfs:label ?opposing_force_name
  }
}
```

This query will help identify the opposing military forces during the wars in which the 30th (Cambridgeshire) Regiment of Foot participated. The exact results depend on the data available in DBpedia.",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
119,54,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?country_name ?santiago_de_compostela_tenancy ?election_office
WHERE {
  ?person a dbpedia:Person ;
dbpedia:nationality dbpedia:Spanish_Citizen ;
dbpedia:birthPlace ?country
  ?person rdfs:label ?person_name .
  ?person dbpedia:residence ?santiago_de_compostela ;
dbpedia:office ?election_office .
  ?election_office rdfs:label ?election_office_label
  FILTER (lang(?election_office_label) = 'es')  # Ensure the office label is in Spanish
}
",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
246,4,train,"Give me the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?royalty_title
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""Princess Muna al-Hussein""@en ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
         dbpedia:hasTitle ?royalty_title .
  FILTER (regex(str(?royalty_title), 'Prince|Princess'))  # Filter for royal titles
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
159,10,train,Give me the commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?successor_role
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role dbpedia:Commander;
             dbpedia:conflict dbpedia:Great_Turkish_War .
  ?commander rdfs:label ?commander_name .
  ?successor rdfs:label ?successor_role .
  ?commander dbpedia:deathDate ?commander_death_date .
  FILTER (lang(?commander_name) = ""en"" )  # Assuming we are looking for English names
}
```

This query will search for individuals who had the role of Commander in the Great Turkish War and then look for a successor role they held after the war. The filter `FILTER (lang(?commander_name) = ""en""` ensures that we are considering commanders with English names, which is reasonable given the context of the question and the likely sources of information about such individuals.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,7,train,"Give me the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:name ""Miguel Maura""@en .
  ?politician rdfs:memberOf ?party .
  ?party a dbpedia:PoliticalParty
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
119,1,train,Give me the entity in Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity_name ?entity_category WHERE {
  ?entity a dbpedia:Person ;
           dbpedia:birthPlace <http://dbpedia.org/ontology/LocationEntity#country> ""Poland"" .
}
```",1,1,2,1,1,3,2,20,0,0,108,0,0.0,0
158,12,train,Give me the native of Grand Duchy of Finland and person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birth_place ?death_place
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace <http://dbpedia.org/property/birthPlace#Russian_Empire> ;
           dbpedia:deathPlace <http://dbpedia.org/property/deathPlace#Switzerland> .
  ?person rdfs:label ?person_name .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
386,8,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthplace WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality dbpedia:Lithuania ;
           rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""
  }
}
```",2,2,3,2,1,2,3,28,0,0,87,0,0.0,0
143,16,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?movie_title ?music_artist_name 
WHERE { 
  ?actor a dbpedia:Actor ; dbpedia:appearedIn ?movie . 
  ?movie rdfs:label ?movie_title . 
  ?actor dbpedia:birthDate ?actor_birthdate . 
  ?movie dbpedia:star ?actor . 
  ?music_artist a dbpedia:MusicArtist ; dbpedia:name ?music_artist_name . 
  ?music_artist dbpedia:birthDate ?music_artist_birthdate . 
  ?actor dbpedia:personalName ?actor_name . 
  ?music_artist rdfs:label ?music_artist_name
  FILTER ( ?movie = 'Afeez Oyetoro' ) 
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
943,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name WHERE {
  ?character a dbpedia:ComicCharacter ;
               dbpedia:alterEgo ?alter_ego_name .
  ?character rdfs:label ""The Shadow""@en .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
392,5,train,Give me the member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rott: <http://dbpedia.org/ontology/ontologies/rott>
SELECT ?character_name WHERE {
  ?character a rott:Character ;
             rdfs:label ?character_name .
  FILTER (lang(?character_name) = ""de"" )  # Search for German language labels
}
```",2,2,3,2,1,2,2,9,0,0,2569,0,0.0,0
347,39,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?father_name ?father_title
WHERE {
  ?mother a dbpedia:Person ;
            dbpedia:birthDate ""1574-07-17"" ;
            dbpedia:name ""Maria Anna of Bavaria"" .
  ?child a dbpedia:Person ;
           dbpedia:name ""Eleonore of Austria"" ;
           dbpedia:birthDate ""1655-04-16"" ;
           dbpedia:parent ?mother .
  ?mother dbpedia:spouse ?father .
  ?father a dbpedia:Person ;
          dbpedia:name ?father_name ;
          dbpedia:role ""Royalty"" .
  ?child rdfs:father ?father
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
38,0,train,Give me the author of Promises to Keep (Biden book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?author_name WHERE {
  ?book rdf:type dbpedia:Book ;
           dbpedia:title ""Promises to Keep"" .
  ?author a dbpedia:Person ;
          dbpedia:givenName ?author_name ;
          dbpedia:birthPlace ?author_birthplace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,57,train,"Give me the professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?politician_role
WHERE {
  ?actor a dbpedia:Person ;
           foaf:role ?actor_role .
  ?actor_role rdfs:label ""The Shadow"" .
  ?actor dbpedia:birthPlace ""Mississippi"" .
  ?politician a dbpedia:Politician ;
             dbpedia:birthPlace ""Mississippi"" .
  ?actor = ?politician
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
756,57,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country_name ?soccer_season ?sports_season ?team_season
WHERE {
  ?g governsCountry ?country .
  ?country rdfs:label ?country_name .
  
  ?thomas_letsch a dbpedia:Person ;
                  foaf:name ""Thomas Letsch"" ;
                  dbpedia:birthPlace ?birthplace .

  ?west_germany a dbpedia:Country ;
                  dbpedia:leader ?governor .

  ?helmut_kohl a dbpedia:Person ;
                   rdfs:label ""Helmut Kohl"" ;
                   dbpedia:office ?office .

  ?soccer_club a dbpedia:SportingEvent ;
                 dbpedia:season ?soccer_season .
  
  ?sports_season a dbpedia:Event ;
                    rdfs:label ?sports_season .

  ?team_season a dbpedia:SportsLeagueSeason ;
                  dbpedia:team ?soccer_club ;
                  dbpedia:startYear ?start_year ;
                  dbpedia:endYear ?end_year .

  ?helmut_kohl dbpedia:office ?office .
  ?thomas_letsch foaf:member ?soccer_club .
  ?soccer_club rdfs:label ?soccer_club_label .
  FILTER (regex(str(?soccer_club), ""VfL Bochum"")) .
  FILTER (str(?start_year) = ""1981"" AND str(?end_year) = ""1982"") .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
361,0,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?person_name ?role 
WHERE { 
  ?person a dbpedia:Person ; 
  dbpedia:role ?role . 
  ?role rdfs:label ?person_name . 
}",1,1,2,1,1,2,3,28,0,0,21580,0,0.0,0
78,24,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?band_member_name ?artist_name
WHERE {
  ?artist a dbpedia:MusicArtist ;
            dbpedia:associatedArtists ?artist_associations .
  ?artist rdfs:label ?artist_name .
  ?artist_associations a owl:Class;
                    rdfs:subClassOf [ a owl:Restriction ;
                                      owl:onProperty dbpedia:bandMember ;
                                      owl:someValuesFrom ?band_member_name ] .
  ?songtrack dbpedia:hasMusicArtist ?artist .
  ?songtrack rdfs:label ""Wizards of Waverly Place (soundtrack)"" .
  ?writer a dbpedia:Person ;
           dbpedia:role dbpedia:composer .
  ?writer rdfs:label ?writer_name .
  ?artist_name = ?writer_name
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
742,16,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of Sofia.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alumnus_name ?alumnus_birthplace ?resident_name ?resident_birthplace
WHERE {
  ?alumnus a dbpedia:Alumnus ;
             dbpedia:university ?university .
  ?university rdfs:label ""Plovdiv University 'Paisii Hilendarski'"" .

  ?resident a dbpedia:Resident ;
             dbpedia:residence Sofia .
  
  ?university rdf:type dbpedia:University .
  
  ?alumnus rdfs:label ?alumnus_name .
  ?resident rdfs:label ?resident_name
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
295,2,train,"Who is the true self, that is an artist, of Steven Kapur?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?character a dbpedia:Character ;
               dbpedia:appearsIn dbpedia:Arrow ;
               dbpedia:portrayedBy ?actor_name .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
203,41,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the Battle of Cape Finisterre
SELECT ?battle_name ?commander_name WHERE {
  ?battle a dbpedia:Event ;
            dbpedia:name ""Battle of Cape Finisterre"" .
  ?battle dbpedia:commander ?commander .
  ?commander rdfs:label ?commander_name
}

# Query for the 30th (Cambridgeshire) Regiment of Foot
SELECT ?regiment_name ?regiment_details WHERE {
  ?regiment a dbpedia:MilitaryUnit ;
            dbpedia:name ""30th (Cambridgeshire) Regiment of Foot"" .
  ?regiment rdfs:label ?regiment_name .
  OPTIONAL { ?regiment dbpedia:partOfMilitaryFormation ?formation }
  OPTIONAL { ?regiment dbpedia:engagedInBattle ?battle }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
89,7,train,"Give me the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royal_spouse_name ?royal_title
WHERE {
  ?queen a dbpedia:Person ;
           dbpedia:birthDate ""1908-10-17"" ;
           dbpedia:consort ""Saw Hlaing"" .
  ?saw_hlaing a dbpedia:Person ;
             dbpedia:birthDate ""1910-08-23"" ;
             foaf:name ""Saw Hlaing"" ;
             dbpedia:royalTitle ?royal_title .
  ?royal_spouse_name ?royal_title
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
871,16,train,"Who is the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?parent a dbpedia:OfficeHolder ;
            dbpedia:parent ?politician .
  ?politician a dbpedia:Politician ;
               rdfs:label ""Edward Stanley, 17th Earl of Derby"" .
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent ;
           rdfs:label ?child_name .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
756,13,train,"Give me the native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?president_name ?president_birthplace
WHERE {
  ?president a dbpedia:Person ;
             dbpedia:birthPlace ?president_birthplace .
  ?president rdfs:label ""Theodor Heuss""@de
}
```",2,3,3,2,1,3,3,71,0,0,5170,0,0.0,0
782,10,train,Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:hasMember ?member .
  ?member rdfs:label ""Nick Curran"" .
  ?band rdfs:label ?band_name
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,14,train,"Give me the country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country
WHERE {
  ?spouse a dbpedia:Person ;
            dbpedia:givenName ""Hu"" ;
            dbpedia:surname ""Jieqing"" ;
            foaf:partner ?husband .
  ?husband a dbpedia:Person ;
           dbpedia:name ""Hu Jieqing"" ;
           rdfs:label ?husband_name .
  ?husband rdfs:label ?husband_name .
  ?country a dbpedia:Country .
  ?spouse dbpedia:residence ?country
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
668,20,train,Give me the professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?associated_artist_name WHERE {
  ?associated_artist a dbpedia:Musician ;
  dbpedia:associatedBandMemberOf ?zombies_band .
  ?zombies_band a dbpedia:MusicalGroup ; dbpedia:hasMember ?rod_argent .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,6,train,Give me the person decedent at Switzerland and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birth_place ?death_place
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birth_place .
  ?person dbpedia:diedIn ?death_place .
  ?birth_place rdfs:label ""Hämeenlinna, Finland"" . 
  ?death_place rdfs:label ""Switzerland"" .
  ?person rdfs:label ?person_name
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
687,30,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Juan Carlos Molina (footballer) and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_team
WHERE {
  ?manager a dbpedia:SoccerManager ;
            dbpedia:birthDate ""1979-11-03"" .
  ?manager dbpedia:managedTeam ?manager_team .
  FILTER (NOT EXISTS { 
    ?player a dbpedia:Footballer ;
             dbpedia:birthDate ""1979-11-03"" .
    } )
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
246,6,train,Give me the parent of Princess Sara bint Faisal and parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },,2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,20,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_parent_name ?spouse_name
WHERE {
  ?charles_I_hungary a dbpedia:Monarch ;
                  dbpedia:monarchy_start ""1308"" ;
                  dbpedia:father ?john_of_bohemia .
  ?john_of_bohemia a dbpedia:Person ;
                   rdfs:label ""John of Bohemia"" .
  ?charles_II_of_neapoli a dbpedia:Monarch ;
                    dbpedia:monarchy_start ""1734"" ;
                    dbpedia:father ?philip_V_of_spain .
  ?philip_V_of_spain a dbpedia:Person ;
                     rdfs:label ""Philip V of Spain"" .
  OPTIONAL {
    ?charles_I_hungary dbpedia:hasSpouse ?spouse .
    ?spouse a dbpedia:Person ;
           rdfs:label ?spouse_name
  }
  OPTIONAL {
    ?charles_II_of_neapoli dbpedia:hasParent ?parent .
    ?parent a dbpedia:Person ;
           rdfs:label ?parent_name
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
531,8,train,"Give me the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dp: <http://dbpedia.org/ontology/> 

SELECT ?leader_name WHERE {
  ?party a dp:PoliticalParty ;
  dp:name 'Conservative People's Party of Spain' .
  ?party dp:leader ?leader_name .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
140,1,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?member_name ?member_party
WHERE {
  ?member a dbpedia:Person ;
           dbpedia:partyMember dbpedia:Republican_Party_(United_States) .
  ?member rdfs:label ?member_name .
}
```",1,1,2,1,1,3,2,20,0,0,21486,0,0.0,0
905,35,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthDate ""1225"" ;
            rdfs:label ""Béla IV of Hungary"" .
  ?person dbpedia:wife ?spouse_name .
}
```

This query looks for a person with the label ""Béla IV of Hungary"" (assumed to be his identity) and retrieves the label of their spouse.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,19,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?emperor dbpedia:birthDate ""1285""^^<http://www.w3.org/2001/XMLSchema#date> ;
           dbpedia:name ""Rudolph I of Germany"" .
  ?emperor dbpedia:spouse ?spouse_name
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,19,train,Give me the band of Kim Wilson and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?real_name
WHERE {
  ?person a dbpedia:Musician ;
dbpedia:role ?role .
  ?role rdfs:label 'Lead vocalist' .
  ?person rdfs:label ?band_name .
  ?band_name ns:member ?person .
  ?person foaf:name ?real_name
}
",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
816,9,train,Give me the parent of Amy Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },,2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,23,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?athlete_name ?birthdate 
WHERE { 
?athlete a dbpedia:Athlete ; 
 dbpedia:birthdate ?birthdate . 
?birthdate = '1965-04-01' 
}",3,4,4,3,1,3,3,71,0,0,18,0,0.0,0
737,57,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_title
WHERE {
  ?alexander_of_wuerttemberg a dbpedia:Person ;
                        dbpedia:birthDate ""1804"" ;
                        dbpedia:deathDate ""1881-04-26"" .
  ?alexander_of_wuerttemberg dbpedia:parent ""Carl, Duke of Württemberg"" .

  ?grandchild1 a dbpedia:Person ;
                 dbpedia:parent ?alexander_of_wuerttemberg ;
                 dbpedia:birthDate ""after 1881-04-26"" .

  ?archduke_charles_louis a dbpedia:Person ;
                        dbpedia:birthDate ""1774-08-01"" ;
                        dbpedia:deathDate ""1847-02-20"" .

  ?grandchild1 dbpedia:parent ?archduke_charles_louis .

  ?royalty a dbpedia:Royalty ;
            dbpedia:fullName ?royalty_name ;
            rdfs:label ?royalty_title .
  
  ?grandchild1 dbpedia:fullName ?grandchild1_name .
  ?alexander_of_wuerttemberg dbpedia:fullName ""Alexander of Württemberg"" .
  ?child_of_alexander dbpedia:fullName ?child_of_alexander_name .
  ?archduke_charles_louis dbpedia:fullName ""Archduke Charles Louis of Austria""
}
```

This query will retrieve the name and title of the royalty who fits the given criteria.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
89,15,train,Give me the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:birthPlace ?king_birthplace .
  ?king rdfs:label ""Minye Kyawswa"" .
  ?parent a dbpedia:Person ;
          dbpedia:birthPlace ?parent_birthplace .
  ?king dbpedia:hasParent ?parent
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
203,55,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?navy_force ?foot_regiment_name ?societal_event
WHERE {
  ?w a dbpedia:Event ; dbpedia:type ""military conflict"" ; dbpedia:name ?war_name .
  ?navy_force a dbpedia:MilitaryForce ; dbpedia:partOf ?w .
  ?foot_regiment_name a dbpedia:Regiment ; dbpedia:name ""30th (Cambridgeshire) Regiment of Foot"" .
  ?vince_gilligan a dbpedia:Person ; dbpedia:role ""commander"" ; dbpedia:name ""William Bayne"" .
  ?calder a dbpedia:Person ; dbpedia:role ""officer"" ; dbpedia:name ""Robert Calder"" .
  ?w rdfs:subPropertyOf dbpedia:Napoleonic_Wars .
}
",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
225,7,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbpedia-core: <http://dbpedia.org/ontology/>

SELECT ?location_name ?location_coordinates
WHERE {
  ?location a dbpedia-core:Location ;
            geo:coordinates ?location_coordinates .
  ?location rdfs:label ?location_name .
  FILTER (lang(?location_name) = ""ja"")  # Ensure the location name is in Japanese
  AND (?location_coordinates IS NOT NULL)  # Location must have coordinates
  AND (STR(?location_coordinates) LIKE '%140.8%')  # Approximate longitude of Tokyo, -140.8
}
```",2,2,3,2,1,3,2,20,0,0,8916,0,0.0,0
140,4,train,"Give me the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?death_place_name
WHERE {
  ?artist a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace ;
            dbpedia:deathPlace ?death_place .
  ?artist rdfs:label ""John McDermott""@en .
  ?death_place a dbpedia:SpatialThing ;
             dbpedia:type ""Settlement""@en .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,12,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?father .
  ?father a dbpedia:Person ;
            rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel""@de ;
            dbpedia:birthPlace ""Brunswick-Wolfenbüttel, Germany"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person ;
           rdfs:label ?spouse_name ;
           dbpedia:birthPlace ""related_location_to_duchess_luise""
  }
```

### Completed",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
23,1,train,Give me the entity in Colombia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?country
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality dbpedia:Colombia .
}
```",1,1,2,1,1,2,3,28,0,0,2141,0,0.0,0
386,22,train,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?war
WHERE {
  ?award a dbpedia:HonoraryAward ;
         dbpedia:awardee Elena Žalinkevičaitė-Petrauskienė .
  ?award rdfs:label ?award_name .
  ?war a dbpedia:Conflict ; dbpedia:startYear ?start_year .
  ?war rdfs:label ?war_name .
  FILTER (?award_name = ""Order of the Grand Duke Gediminas"") .
  FILTER (?start_year >= 2017)
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
633,7,train,"Give me the spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?eleanor_name ?eleanor_title ?eleanor_parent
WHERE {
  ?eleanor a dbpedia:Person ;
            dbpedia:hasParent ?eleanor_parent ;
            dbpedia:title ?eleanor_title .
  ?eleanor_parent a dbpedia:Person ;
               rdfs:label ""René II, Duke of Lorraine""@fr .
  ?eleanor foaf:familyMember ?eleanor_parent
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,18,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?spouse_name
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?actor dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ;
            rdfs:label ?spouse_name .
  ?actor_name ""Gregory Peck"" .
  ?spouse_name ""Marina Orsola Zanini""
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
23,5,train,Who is the father of Sofía Petro?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?father_birthplace
WHERE {
  ?player a dbpedia:Person ;
           dbpedia:name ""Sofía Petro"" ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace a dbpedia:Location ;
              rdfs:label ""Madrid, Spain"" . # Assuming Sofía Petro was born in Madrid
  ?father a dbpedia:Person ;
          dbpedia:name ?father_name ;
          dbpedia:birthPlace ?father_birthplace .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,14,train,Give me the child of the father of Cecilia Renata of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?cecilia a dbpedia:Person ;
            dbpedia:name ""Cecilia Renata"" ;
            dbpedia:birthPlace ""Austria"" .
  ?cecilia dbpedia:father ?father_name .
  ?father a dbpedia:Person ;
           dbpedia:name ?father_name .
  ?child a dbpedia:Person ;
           dbpedia:parent ?father ;
           dbpedia:name ?child_name ;
           dbpedia:birthPlace ?child_birthplace
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
159,31,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?successor_name ?office ?event_name ?conflict 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:role dbpedia:Commander ; dbpedia:name ""Michał Kazimierz Pac"" . 
  ?successor a dbpedia:OfficeHolder ; dbpedia:office ?office . 
  ?event a dbpedia:Event ; dbpedia:name ?event_name ; dbpedia:description ""Khmelnytsky Uprising"" . 
  ?commander rdfs:label ?commander_name . 
  ?successor rdfs:label ?successor_name . 
  ?commander ns:precededBy ?event . 
}",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
19,4,train,Give me the professional in  and spouse of Carrie Johnson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv: <http://purl.org/dc/terms/>

SELECT ?profession_name ?spouse_name
WHERE {
  ?carrie a tv:Character ;
            rdfs:label ""Carrie Johnson""@en .
  ?carrie dbpedia:hasOccupation ?profession .
  ?carrie dbpedia:spouse ?spouse .
  ?profession rdfs:label ?profession_name .
  ?spouse rdfs:label ?spouse_name
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
347,56,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?societal_event ?tv_show
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           dbpedia:isParentOf ?grandchild .
  ?grandchild a dbpedia:Royalty .

  ?regiment a dbo:MilitaryUnit ;
             dbpedia:hasMember ?soldier .
  ?soldier a dbpedia:Person ;
            dbpedia:participatedInEvent ?societal_event .
  ?societal_event a dbpedia:Event ;
                 dbpedia:isPartOf ?war .
  ?war a dbo:War ;
          dbpedia:involvedUnit ?regiment .

  ?tv_show a dbpedia:TelevisionShow ;
             rdfs:label ""The show about the 2nd Dragoon Regiment"" .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
585,4,train,Give me the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_profession
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:name ""Shirley Stoler"" .
  ?actor rdfs:label ?actor_name .
  OPTIONAL { ?actor dbpedia:occupation ?actor_profession }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
943,0,train,Give me the child of Dawit I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
         dbpedia:birthPlace ?child_birthplace .
  ?emperor Dawit_I .
  ?child rdfs:label ?child_name
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
375,1,train,Give me the war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?person_role ?birthplace
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ?person_name .
  ?person dbpedia:role dbpedia:Sengoku_period_Daimyo ;
           dbpedia:birthPlace ?birthplace .
  ?person_name ""Toyotomi Hidenaga""
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
249,5,train,"Give me the native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  FILTER (lang(?person_name) = ""en"")  # Only consider English names for simplicity
}
```",2,3,3,2,1,2,2,9,0,782049,68,0.0,0.0,0
609,44,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```

This query will retrieve the birth places of the specified individuals from DBpedia.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,15,train,Give me the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name WHERE {
  ?band a dbpedia:Band ;
         dbpedia:leader ?kim_wilson .
  ?kim_wilson rdfs:label ""Kim Wilson"" .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
468,14,train,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_child_name ?royalty_parent_name ?parent_relationship
WHERE {
  ?royalty_child a dbpedia:Monarch ;
               dbpedia:childOf ?royalty_parent .
  ?royalty_parent a dbpedia:Person ;
              rdfs:label ?royalty_parent_name ;
              dbpedia:parentOf ?parent_of_martin_of_aragon .
  ?parent_of_martin_of_aragon a dbpedia:Person ;
                        rdfs:label ""Martin of Aragon""^^xsd:string ;
                        dbpedia:parentOf ?parent_relationship .
  ?parent_relationship a dbpedia:FamilyRelationship ;
                    rdfs:label ?parent_relationship_name
}
```

This query looks for monarchs (children) who have a parent (royalty) and whose parent is related to Martin of Aragon. It also captures the type of relationship between Martin of Aragon and his parent.",3,4,4,3,1,3,2,20,0,0,7,0,0.0,0
737,48,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_predecessor_name
WHERE {
  ?archduke a dbpedia:Person ;
             dbpedia:name ""Archduke Charles Louis of Austria"" .
  ?archduke_spouse a dbpedia:Person ;
               dbpedia:name ?archduke_spoouse_name .
  ?child a dbpedia:Person ;
           dbpedia:parent ?archduke ;
           dbpedia:birthDate ?child_birthdate .
  ?child rdfs:label ?child_name .
  ?royalty_predecessor a dbpedia:Person ;
                       dbpedia:name ?royalty_predecessor_name .
  ?child rdfs:label ?child_name .
  FILTER (regex(str(?child_birthdate), ""^\d{4}-\d{2}-\d{2}$"")).
  ?archduke_spouse rdfs:label ?archduke_spoouse_name .
}
```

This query does the following:
- Identifies Archduke Charles Louis of Austria.
- Finds his spouse (Archduchess Helena's partner).
- Locates their children.
- Filters for children who were born in a year matching the format ""YYYY-MM-DD"" (ensuring we're dealing with historical figures).
- Selects the predecessor among these children who is also a royalty.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
668,31,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?music_artist_name
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Pacely""@en .
  ?person dbpedia:occupation [ rdf:type dbpedia:Musician ] .
  ?person dbpedia:associatedBandOrArtist ?music_artist .
  ?music_artist a dbpedia:MusicArtist
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
557,40,train,"Give me the producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","SELECT ?producer_name
WHERE {
  ?producer a dbpedia:Person ;
            dbpedia:role dbpedia:FilmProducer ;
            dbpedia:film [""A Star Is Born (1937 film)"" ; ""The Adventures of Tom Sawyer (1938 film)""] .
  ?producer rdfs:label ?producer_name .
  ?producer dbpedia:alter_ego ""Kent Allard"" .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
80,37,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?album dbpedia:hasMusicAlbum ?music_album .
  ?music_album a dbpedia:MusicAlbum ;
               dbpedia:artist ?actor_name .
  ?actor_name rdfs:label ""T.I.""@en
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
668,7,train,"Who is the native, that is an artist, of Central Region, Ghana?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birthplace
WHERE {
  ?artist a dbpedia:Artist ;
           dbpedia:birthPlace dbpedia:Central Region, Ghana .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
706,15,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace ?patil_name ?patil_birthplace
WHERE {
  ?fellowship a dbpedia:Award ;
               dbpedia:awardee ?awardee .
  ?awardee rdfs:label ?awardee_name .
  ?patil a dbpedia:Person ;
           dbpedia:birthPlace ?patil_birthplace .
  ?patil rdfs:label ?patil_name
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
723,5,train,"Give me the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?band a dbpedia:MusicArtist ;
         dbpedia:name ?band_name .
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language ""en"" .
  }
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
756,0,train,Give me the manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?club a dbpedia:SportsClub ;
         dbpedia:hasManager ?manager .
  ?manager rdfs:label ?manager_name .
  ?club rdfs:label ""VfL Bochum"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
270,3,train,"Give me the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Mark Tournier""@en;
           dbpedia:birthPlace ?birthplace .
}
```",1,2,2,1,1,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
905,45,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_relationship
WHERE {
  ?charles_martel_of_anjou a dbpedia:Person ;
                         dbpedia:birthDate ""1194"" ;
                         dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:child ?charles_ii_of_neaples .
  ?charles_ii_of_neaples a dbpedia:Person ;
                    dbpedia:spouse ?spouse ;
                    dbpedia:birthDate ""1254"" ;
                    rdfs:label ""Charles II of Naples"" .

  ?stephen_v_of_hungary a dbpedia:Person ;
                       dbpedia:monarchOf ""Kingdom of Hungary"" ;
                       dbpedia:reignStart ""1270"" ;
                       rdfs:label ""Stephen V of Hungary"" .

  ?charles_ii_of_neaples rdfs:child ?royalty .
  ?royalty a dbpedia:Person ;
            dbpedia:parent ?stephen_v_of_hungary .
}
```

This query attempts to find a person (`?royalty`) who is both a child of Charles II of Naples and a descendant of Stephen V of Hungary. It uses the known relationships and properties from DBpedia's ontology.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,61,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . }",,6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,20,train,Give me the war of Hashiba Hidekatsu and entity in Japan and war of the person born as Koichirō.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war_name ?involved_entity_japan ?opposing_entity_japan
WHERE {
  ?hashiba a dbpedia:Person ;
            dbpedia:birthDate ""1540"" ;
            rdfs:label ""Hashiba Hidekatsu""@ja .
  ?hashiba dbpedia:conflict ?war .
  ?war a dbpedia:War ;
         dbpedia:involvedParty ?involved_entity_japan .
  ?koichiro a dbpedia:Person ;
            dbpedia:birthDate ""1567"" ;
            rdfs:label ""Koichirō Matsudaira""@ja .
  ?koichiro dbpedia:conflict ?war .
  ?war rdfs:label ?war_name .
  FILTER (lang(?war_name) = ""ja"")
}
```

This query will search for wars involving Hashiba Hidekatsu and Koichirō (Kojirō Matsudaira) in Japan, returning the name of the war and the involved and opposing entities. The `FILTER` clause ensures that only Japanese language results are returned.",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
23,8,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?party WHERE {
  ?politician a dbpedia:Politician ;
  dbpedia:name ?name;
  dbpedia:birthPlace costa_rica;
  ?politician pao:memberOf ?party .
}
",2,3,3,2,1,2,3,28,0,0,5,0,0.0,0
412,10,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?death_place_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathPlace ?death_place .
  ?death_place a dbo:Settlement ;
               rdfs:label ?death_place_name .
  ?person rdfs:label ""Antonios Varthalitis"" .
}
```",2,3,3,2,1,2,3,28,0,0,12,0,0.0,0
941,1,train,Give me the spouse of Prince Augustus William of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse_name ?spouse_birthplace
WHERE {
  ?prince a dbpedia:Person ;
           dbpedia:name ""Prince Augustus William of Prussia"" ;
           dbpedia:birthPlace <urn:loc:Prussia> .
  ?spouse a dbpedia:Person ;
           dbpedia:name ?spouse_name ;
           dbpedia:birthPlace ?spouse_birthplace .
  ?prince dbpedia:isSpouseOf ?spouse
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
668,60,train,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist_name ?artist_birthplace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Pacely""@en .
  ?person foaf:name ?artist_name .
  ?central_region a dbpedia:AdministrativeDivision ;
                    dbpedia:regionName ""Central Region, Ghana"" .
  ?artist a dbpedia:Artist ;
            dbpedia:birthPlace ?artist_birthplace .
  ?person dbpedia:birthPlace ?birthplace .
  ?birthplace geo:location ?central_region
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
595,37,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?politician_name ?author_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolder dbpedia:Office_Holder ;
               dbpedia:birthPlace dbpedia:Chappaqua_New_York ;
               dbpedia:participatedInMilitaryConflict dbpedia:Third_Taiwan_Strait_Crisis .
  ?politician rdfs:label ?politician_name .
  ?author a dbpedia:Person ;
          dbpedia:birthPlace ?author_birthplace .
  ?author foaf:name ?author_name .
  ?politician wdt:P31 ?author
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
756,45,train,"Give me the manager of VfL Bochum and native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?birthplace ?birthdate
WHERE {
  ?manager a dbpedia:Manager ;
            dbpedia:birthPlace ?birthplace .
  ?manager foaf:name ?manager_name .
  ?birthdate a dbpedia:Date ;
             dbpedia:day ""26"" ;
             dbpedia:month ""August"" ;
             dbpedia:year 1968 .
  ?manager dbpedia:managesSportingClub ?team .
  ?team a dbpedia:SportTeam ;
        rdfs:label ""VfL Bochum""@de .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,38,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?award dbpedia:awardedBy ?person .
  ?person a dbpedia:Person ;
           dbpedia:nationality ""Puerto Rican"" ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
392,7,train,Give me the reference to  and member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?character_name WHERE {
  ?character a dbo:Character ;
             rdfs:label ""Der Blau""@de
}
```",3,3,4,2,2,2,2,9,0,0,6,0,0.0,0
628,47,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?band_member_birthplace
WHERE {
  ?shawn_carter a dbpedia:Person ;
                  dbpedia:name ""Shawn Carter"" ; # Bobby Shmurda's birth name
                  dbpedia:birthPlace ?shawn_birthplace .
  ?band_members a foaf:Organization ;
                 dbpedia:name ""Bobby Shmurda's Band"" ;
                 dbpedia:member ?band_member .
  ?band_member a dbpedia:Person ;
               dbpedia:name ?band_member_name ;
               dbpedia:birthPlace ?band_member_birthplace .
  ?shawn_carter rdfs:label ""Bobby Shmurda"" . # Alias name
  ?band_member rdfs:label ?band_member_name .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
103,21,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ; dbpedia:actor ?actor_name .
  ?actor rdfs:label ?actor_name .
  [ a dbpedia:TelevisionSeries ; dbpedia:star ?actor_name ] .
}",3,4,4,2,2,3,3,71,0,0,13,0,0.0,0
943,30,train,"Give me the child of Dawit I and reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . }",,4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
80,40,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?director_name ?actor_name 
WHERE { 
  ?documentary a dbpedia:Film ; dbpedia:subject ?director_name . 
  ?actor a dbpedia:Person ; dbpedia:role ?actor_name . 
  ?director rdfs:label ?director_name . 
  ?actor rdfs:label ?actor_name . 
  ?documentary rdfs:title 'Smartbomb' . 
  ?actor rdfs:role ?actor_name . 
  ?actor rdfs:label 'Justin Bateman' . 
}",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
943,59,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the commander of the forces during the Siege of Mukha
SELECT ?commander_name ?commander_birthplace WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:birthPlace ?commander_birthplace .
  ?commander dbpedia:role ""Commander in the Siege of Mukha"" .
}

# Step 2: Identify royalty involved in the Siege of Mukha
SELECT ?royalty_name ?royalty_birthplace WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:birthPlace ?royalty_birthplace .
  ?royalty rdfs:label ""Royalty"" . # Placeholder for actual royal titles
}

# Step 3: Find the alter ego of Lamont Cranston (The Shadow)
SELECT ?shadow_name WHERE {
  ?shadow a dbpedia:Person ;
            rdfs:label ""Lamont Cranston"" .
  ?shadow dbpedia:alterEgo ""The Shadow"" . # The Shadow is the alter ego of Lamont Cranston
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
353,55,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name WHERE {
  ?grandchild a dbpedia:Person ; dbpedia:parent ?child_of_roger_III .
  ?child_of_roger_III a dbpedia:Royalty ; dbpedia:parent ?grandparent_of_alfonso_VI .
  ?grandparent_of_alfonso_VI a dbpedia:Person ; dbpedia:name ?grandparent_name .
  ?grandparent_of_alfonso_VI dbpedia:child ?child_of_william_I_of_sicily .
  ?child_of_william_I_of_sicily rdfs:label ?royalty_name .
}",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
78,15,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_name ?artist_name 
WHERE { 
  ?artist a dbpedia:Musician ; 
  dbpedia:birthPlace ?birthplace . 
  ?band a dbpedia:Band ; 
  dbpedia:members ?band_member . 
  ?band_member rdfs:label ?band_name . 
  ?artist rdfs:label ?artist_name . 
  ?band_member dbpedia:associatedWith ?artist . 
  ?birthplace ns:nameString ""Stuart Tosh"" 
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
151,7,train,Give me the entity in the birthplace of Burhan Belge and reference to Order of the Medjidie.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthplace_name ?order_of_medjidie_related_entity
WHERE {
  ?burhan_belge a dbpedia:Person ;
                 dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?birthplace_name .
  ?order_of_medjidie a dbpedia:Order ;
                       foaf:wasAssociatedWith ?birthplace .
  ?birthplace ns:locatedIn <http://www.geonames.org/8473743/> . # Assuming the birthplace is in Istanbul, Turkey
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
353,42,train,"Give me the father of William II of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?child_of_alfonso_six_name ?roger_three_duke_birthplace
WHERE {
  ?alfonso_vi a dbpedia:Person ;
             dbpedia:birthPlace ?alfonso_six_birthplace .
  ?roger_three_duke a dbpedia:Person ;
                    dbpedia:birthPlace ?roger_three_duke_birthplace ;
                    dbpedia:parent ?alfonso_vi .
  ?alfonso_vi rdfs:label ""Alfonso VI of León and Castile"" .
  ?roger_three_duke rdfs:label ""Roger III, Duke of Apulia"" .
  ?child_of_alfonso_six a dbpedia:Person ;
                    dbpedia:birthPlace ?child_of_alfonso_six_birthplace ;
                    dbpedia:parent ?alfonso_vi .
  ?child_of_alfonso_six rdfs:label ""William II of Sicily"" .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
609,35,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name
}
```",4,4,5,2,2,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
68,22,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?grandfather_name ?father_name 
WHERE {
  ?dorothea a dbpedia:Person ; 
    dbpedia:parent ?parent_of_dorothea ; 
    dbpedia:child ?child_of_dorothea .
  ?parent_of_dorothea a dbpedia:Royalty ; 
    dbpedia:father ?father_of_parent .
  ?child_of_dorothea a dbpedia:Person ; 
    dbpedia:parent ?parent_of_dorothea .
  ?father_of_parent rdfs:label ?father_name .
  ?grandfather a dbpedia:Royalty ; 
    dbpedia:parent ?parent_of_grandfather .
  ?parent_of_grandfather rdfs:label ?grandfather_name .
}",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
782,12,train,Give me the associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },,2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,11,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of Max Born.",SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?academy_name ?location WHERE {
  ?academy a dbpedia:Institution ; dbpedia:type ""Educational"" .
  ?academy rdfs:label ?academy_name .
  ?academy dbpedia:locatedIn ?location .
  ?academy dbpedia:awards dbpedia:Nobel_Prize_in_Physics ; dbpedia:recipientName ""Max Born"" .
}
",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
263,4,train,Give me the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  FILTER (lang(?person_name) = ""en"")  # Search for English names
}
```",1,1,2,1,1,2,3,28,0,782049,1,0.0,0.0,0
871,36,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of Victor Stanley (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?father_name ?father_political_office 
WHERE {
  ?child a dbpedia:AlumnusOf ; dbpedia:alumniInstitution Eton_School . 
  ?child dbpedia:hasParent ?parent . 
  ?parent a dbpedia:Person; dbpedia:role dbpedia:Politician . 
  ?parent dbpedia:hasChild ?child . 
  ?child rdfs:label ?child_name . 
  ?parent rdfs:label ?father_name . 
  ?child rdfs:label ?child_name . 
  ?parent rdfs:label ?father_name . 
  ?child dbpedia:birthDate ?child_birth_date . 
  ?Victor_Stanley a dbpedia:Person; dbpedia:role dbpedia:Royal_Navy_Officer . 
  ?Victor_Stanley rdfs:label ?Victor_Stanley_name . 
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
782,14,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name
WHERE {
  ?person dbpedia:givenName ""Nicholas"" ;
             dbpedia:surname ""Curran"" ;
             dbpedia:birthDate ?birthDate .
  ?person a dbpedia:Person;
             dbpedia:isArtist ?musical_artist_identity .
  FILTER (?birthDate > ?musical_artist_identity)
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
398,16,train,Give me the figure known as the nickname of Russia national football team and player in the writer of The First Glove.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?nickname ?author_name
WHERE {
  ?team a dbpedia:SportsTeam ;
         dbpedia:country ""Russia"" ;
         dbpedia:nickname ?nickname .
  ?author a dbpedia:Person ;
          rdfs:label ?author_name .
  ?player a dbpedia:Athlete ;
           rdfs:label ?player_name .
  ?team dbpedia:hasMember ?player .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
203,11,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?war
WHERE {
  ?regiment a dbpedia:Regiment ;
               dbpedia:fullName ""30th (Cambridgeshire) Regiment of Foot"" ;
               dbpedia:engagement dbpedia:Battle_of_Austerlitz .
  ?battle a dbpedia:Battle ;
            dbpedia:participatedIn ?war .
  ?regiment rdf:type foaf:Organization ;
             dbpedia:commander ?commander .
  ?battle rdfs:label ""Austerlitz"" # Assuming the Battle of Austerlitz for this example
}
```",2,4,3,2,1,3,3,71,0,0,113,0,0.0,0
19,5,train,Give me the professional in the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:name ""John Boxer"" ;
            dbpedia:birthDate ?birthDate .
  OPTIONAL { ?person dbpedia:profession ?professional }
}
```",2,2,3,2,1,2,2,9,0,0,39640,0,0.0,0
769,3,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birth_date 
WHERE {
  ?person a dbpedia:Person ;
    dbpedia:birthDate ?birth_date ;
    dbpedia:role dbpedia:SoccerPlayer ;
    dbpedia:role dbpedia:Athlete ;
    dbpedia:role dbpedia:SportsManager ;
    dbpedia:role dbpedia:SoccerManager
  }
  ?person rdfs:label ?person_name .
}
",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
782,53,train,"Give me the band of Kim Wilson and reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_name ?curran_band_members 
WHERE { 
  ?curran a dbpedia:MusicalArtist ; 
  dbpedia:birthDate ?curran_birthdate . 
  ?wilson a dbpedia:Person ; 
  dbpedia:name ?wilson_name ; 
  dbpedia:role dbpedia:Musician ; 
  dbpedia:band ?thunderbirds . 
  ?curran rdfs:member ?curran_band_members . 
  ?thunderbirds a dbpedia:Band ; 
  dbpedia:members ?curran_band_members . 
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
585,11,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },,3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
119,2,train,Give me the tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?mayor_name ?mayor_office
WHERE {
  ?city a dbpedia:City ;
           dbpedia:name ""Santiago de Compostela"" .
  ?mayor a dbo:OfficeHolder ;
            dbo:office ?mayor_office ;
            rdfs:label ?mayor_name .
}
```",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
361,7,train,Give me the actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?actor_name WHERE { ?actor a dbpedia:Actor . ?actor rdfs:label ?actor_name . FILTER ( ?actor_name = \,2,2,3,1,2,2,3,28,0,0,4,0,0.0,0
782,4,train,Give me the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name WHERE {
  ?band a dbpedia:MusicGroup ;
         dbpedia:name ?band_name .
  ?band_name rdfs:label ""The Fabulous Thunderbirds""@en
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
39,15,train,Give me the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?producer_name ?producer_profession 
WHERE { 
  ?producer a dbpedia:Person ; 
  dbpedia:occupation ?producer_profession . 
  ?producer rdfs:label ?producer_name . 
}",2,2,3,2,1,3,3,71,1,548538,11,1.823024433996489e-06,0.08333333333333333,3.6459691077037507e-06
531,61,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_of_commander_name ?office_of_commander_description ?miguel_maura_party_name ?miguel_maura_political_role
WHERE {
  ?commander a dbpedia:OfficeHolder ; dbpedia:role dbpedia:Politician ; dbpedia:office ?office_of_commander_name .
  ?commander rdfs:label ?office_of_commander_description .
  ?miguel_maura a dbpedia:Person ; dbpedia:party ?miguel_maura_party_name .
  ?miguel_maura rdfs:label ?miguel_maura_political_role .
  ?commander dbpedia:conflict dbpedia:Portuguese_Colonial_War .
  ?miguel_maura rdfs:label ?miguel_maura_party_name
}
",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
816,49,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name 
WHERE {
  ?movie a dbpedia:Film ; dbpedia:star ?actor_name .
  ?actor_name dbpedia:has_son [ dbpedia:spouse ?m spouse_of ?mc ] .
  ?mc dbpedia:has_child [ dbpedia:parent ?actor_name ] .
  FILTER ( ?actor_name = 'Herschel Bernardi' ) .
  ?movie dbpedia:features_person [ dbpedia:name 'Mariclare Costello' ] .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
756,42,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthPlace ?manager_birthplace .
  ?team a dbpedia:SportTeam ;
           rdfs:label ""VfL Bochum"" ;
           dbpedia:sport ""Football"" ;
           dbpedia:season ""2007-08"" .
  ?player a dbpedia:Person ;
           rdfs:label ""Thomas Letsch"" ;
           foaf:manager ?manager .
  ?manager rdfs:label ?manager_name
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
737,8,train,"Give me the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_title
WHERE {
  ?archduke a dbpedia:Person ; dbpedia:name ""Archduke Charles Louis of Austria"" ; dbpedia:birthDate ""1864-10-25"".
  ?archduke dbpedia:parent ?parent;
  ?parent a dbpedia:Person ; dbpedia:name ?parent_name .
  ?parent rdfs:label ?parent_title .
  ?royalty a dbpedia:Person ; dbpedia:name ?royalty_name ; dbpedia:title ?royalty_title .
  ?royalty rdfs:parent ?archduke
  ?parent rdfs:label ?parent_title
}
",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
737,55,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?archduke_name
WHERE {
  ?archduke a dbpedia:Royalty ;
             dbpedia:parent ?duke_philip_of_wurttemberg .
  ?duke_philip_of_wurttemberg a dbpedia:DukeOfWuerttemberg ;
                        dbpedia:father ?archduke_charles_louis_of_austria .
  ?archduke rdfs:label ?archduke_name
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
492,3,train,Give me the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name 
WHERE {
  dbpedia:filmThe_Sky_Ranger_1928 dc:creator ?actor_name . }
",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
361,15,train,Give me the actor of Rustlers' Rhapsody and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?actor_profession 
WHERE { 
  ?movie a dbpedia:Film ; dbpedia:productionCompany ?prodCo . 
  ?actor a dbpedia:Person ; dbpedia:roleIn ?movie ; dbpedia:profession ?actor_profession . 
  ?actor_name rdfs:label ?actor_name . 
  FILTER ( ?actor_profession = """,3,3,4,2,2,2,3,28,0,0,4,0,0.0,0
816,13,train,Give me the parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_class_name
WHERE {
  ?photographer a dbpedia:Photographer ;
               dbpedia:parentClass ?parent_class .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
628,5,train,"Give me the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birthplace
WHERE {
  ?artist a dbpedia:Musician ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ""Florida"" .
}
```",1,2,2,1,1,3,3,71,0,0,97,0,0.0,0
159,51,train,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work_name ?battle_name
WHERE {
  ?work a dbpedia:TelevisionShow ;
         dbpedia:creator ?gilligan .
  ?gilligan rdfs:label ""Vince Gilligan"" .
  ?work dbpedia:features ?battle .
  ?battle a dbpedia:HistoricalBattleEvent ;
            dbpedia:name ""Battle of Vienna (1683)"" .
}
```

This query looks for television shows created by Vince Gilligan that feature the Battle of Vienna (1683). It assumes that any work associated with Vince Gilligan and the Battle of Vienna would be directly mentioned in DBpedia or related resources.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
513,8,train,Give me the residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader_name ?leader_residence
WHERE {
  ?leader a dbpedia:Person ;
           dbpedia:office dbpedia:Leader_of_Ulster_Unionist_Party .
  ?leader foaf:name ?leader_name .
  ?leader dbpedia:residence ?leader_residence .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
347,59,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_war ?television_show_name ?archduke_child_name
WHERE {
  ?commander a dbpedia:Person ; dbpedia:conflict dbpedia:Algerian_War .
  ?commander rdfs:label ?commander_name .
  ?television_show a dbpedia:Television_Series ; dbpedia:name ?television_show_name .
  ?archduke_child a dbpedia:Person ; dbpedia:parent ?archduke_parent .
  ?archduke_parent rdfs:child ?archduke_charles_joseph .
  ?archduke_charles_joseph rdfs:label ?archduke_child_name .
  ?commander dbpedia:has_son ?archduke_child
}
",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
39,36,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name 
WHERE {
  ?bob_thompson a dbpedia:Musician ;
                 dbpedia:role dbpedia:Singer ;
                 rdfs:label ""Bob Thompson"" .
  ?bob_thompson dbpedia:associatedBand ?band_name
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
943,38,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },,4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
203,5,train,Who is the reference to William Bayne?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""William Bayne""@en .
  ?person dbpedia:birthPlace ?birthplace
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
361,23,train,"Give me the professional in the profession of Frédéric Bouraly and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:role dbpedia:Actor .
  ?album a dbpedia:Album;
          dbpedia:performer ?actor .
  ?album rdfs:label ""Lasso the Moon"" .
}",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
58,4,train,Give me the award of Ian Gregson (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award_name WHERE {
  ?poet a dbpedia:Person ;
         dbpedia:birthDate ""1952-03-23"" ;
         rdfs:label ""Ian Gregson""@en .
  ?poet dbpedia:awardedWith ?award .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
295,11,train,"Give me the native of Birmingham and writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Apache Indian""@en .
  ?person dbpedia:genre ""Reggae music""@en .
  ?work a dbpedia:MusicAlbum ;
          dbpedia:artist ?person ;
          dbpedia:title ""Voodoo Rhythm""@en .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
557,23,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?character_name WHERE {
  ?character a dbpedia:Character ;
             dbpedia:alterEgo ""Kent Allard"" .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
103,7,train,"Give me the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?series_name WHERE {
  ?character a dbpedia:ComicCharacter ;
               dbpedia:mainTitle ""The Shadow"" .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
468,9,train,"Give me the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?real_name 
WHERE { 
  ?royalty a dbpedia:Person ; 
  dbpedia:birthPlace <http://dbpedia.org/property/location> ?birthplace_location . 
  ?royalty rdfs:label ?royalty_name . 
  ?royalty dbpedia:hasChild ?child . 
  ?child a dbpedia:Person ; 
  dbpedia:realName ?real_name . 
}",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
80,46,train,Give me the actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?movie_title
WHERE {
  ?album a dbpedia:Album ;
            dbpedia:artist ?artist_name .
  ?song ""What You Know"" .
  ?artist_name rdfs:label ?actor_name .

  ?book a dbpedia:Book ;
           dbpedia:author ?author_name .
  ?author_name rdfs:label ?author_name .

  ?movie a dbpedia:Film ;
            dbpedia:director ?director_name .
  ?director_name rdfs:label ?movie_title
}
```",5,5,6,3,2,3,3,71,0,0,10,0,0.0,0
353,32,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_title 
WHERE { 
  ?child a dbpedia:Person ; 
    dbpedia:parent ?parent ; 
    dbpedia:birthPlace ?birthplace ; 
    rdfs:label ?royalty_name . 
  ?parent a dbpedia:Person ; 
    rdfs:label ?parent_name . 
  ?child rdfs:label ?royalty_title . 
  ?parent rdfs:label ""Roger III, Duke of Apulia"" . 
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
941,8,train,Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?husband_name ?husband_birthplace 
WHERE { 
  ?husband a dbpedia:Person ; 
  dbpedia:spouse ?wife . 
  ?wife a dbpedia:Person ; 
  rdfs:label ?wife_name . 
  ?wife_name ns:familyName 'Ferdinand' . 
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
103,46,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?character_name ?birthplace
WHERE {
  ?actor a dbpedia:Actor ;
dbp:birthPlace ?birthplace .
  ?actor dbpedia:roleInFilm ?character .
  ?character rdfs:label ?character_name .
  ?actor rdfs:label ?actor_name .
}",5,6,6,3,2,3,3,71,0,0,28,0,0.0,0
39,8,train,"Who is the person born, that is a musical artist, as Robert Lamar Thompson?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birth_name
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthName ?birth_name .
  ?person rdfs:label ?person_name .
  FILTER (str(?birth_name) = ""Robert Lamar Thompson"")
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
203,9,train,Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?military_force ?commander_name
WHERE {
  ?battle a dbpedia:Event ; dbpedia:participatedInBattle ?battle_event .
  ?battle_event a dbpedia:NapoleonicWars_Battle ; dbpedia:commander ?commander .
  ?commander rdfs:label ?commander_name .
  FILTER (lang(?commander_name) = 'fr') 
}
",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
816,43,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the main actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
SELECT ?actor_name WHERE {
  ?film a dbpedia:Film ;
           dbpedia:mainActor ?actor_name .
  ?film rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg"" .
}

# Query for the parents of Eugène Cattin
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name WHERE {
  ?eugene_cattin a dbpedia:Person ;
               dbpedia:birthDate ""1922-03-10"" ;
               dbpedia:parent ?parent .
  ?parent a dbpedia:Person .
  ?parent rdfs:label ?parent_name . 
}

# Query for the parents of Doon Arbus
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name WHERE {
  ?doon_arbus a dbpedia:Person ;
                dbpedia:birthDate ""1936-08-14"" ;
                dbpedia:parent ?parent .
  ?parent a dbpedia:Person .
  ?parent rdfs:label ?parent_name . 
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
159,15,train,"Give me the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?office_holder_title ?military_conflict 
WHERE { 
?commander a dbpedia:Person ; dbpedia:role dbpedia:Commander-in-Chief ; dbpedia:birthPlace polski:Miasto_kazimierza_Pac 
?commander rdfs:label ?commander_name . 
?office_holder_title a dbpedia:Office_Holder_Titel ; dbpedia:title ?office_holder_title . 
?military_conflict a dbpedia:Military_Conflict ; dbpedia:name ?military_conflict . 
FILTER (lang(?commander_name) = 'pl' ) 
}
",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
905,49,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?predecessor a dbpedia:Monarch ;
                 dbpedia:successor ?stephen_v .
  ?spouse a dbpedia:Person ;
            dbpedia:partner ?predecessor .
  ?child a dbpedia:Royalty ;
           dbpedia:parent ?spouse .
  ?child rdfs:label ?royalty_name
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
472,7,train,Give me the territory administered from Copenhagen and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?capital_name ?country_name
WHERE {
  ?capital a dbpedia:CapitalOfCountry ;
            dbpedia:locatedInCountry ?country .
  ?country rdfs:label ?country_name .
  ?capital dcterms:name ""Copenhagen"" .
  ?country dcterms:name ""Denmark"" .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,12,train,Give me the tenant of Spain and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?figure_name ?figure_place
WHERE {
  ?figure a dbpedia:Person ;
           dbpedia:birthPlace ?figure_place .
  ?figure rdfs:label ?figure_name .
  ?figure_place rdfs:label ""Santiago de Compostela"" .
  ?figure rdfs:label ""Spain"" .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
386,10,train,Give me the war of the awardee of 25.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nobelprize: <http://dbpedia.org/ontology/NobelPrize>

SELECT ?war WHERE {
    ?laureate a nobelprize:Nobelist ;
               nobelprize:year 1920 .
    ?war rdfs:label ?war_name
}
```",2,2,3,2,1,2,3,28,0,0,182,0,0.0,0
89,51,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_child_name ?predecessor_name 
WHERE { 
  ?royalty_child a dbpedia:Person ; 
  dbpedia:parent ?royalty_spouse ; 
  dbpedia:spouse ?saw_min_phyu ; 
  dbpedia:birthPlace ?royalty_birthplace ; 
  rdfs:label ?royalty_child_name 

  ?saw_min_phyu a dbpedia:Person ; 
  dbpedia:parent ?myat_hpone_pyo_father ; 
  dbpedia:spouse ?myat_hpone_pyo ; 
  dbpedia:birthPlace ?myat_hpone_pyo_birthplace ; 
  rdfs:label ?myat_hpone_pyo_name 

  ?myat_hpone_pyo_father a dbpedia:Person ; 
  rdfs:label ?myat_hpone_pyo_father_name 

  ?royalty_child rdfs:child ?royalty_child_of 
  ?royalty_child_of a dbpedia:Person ; 
  rdfs:label ?royalty_child_of_name 

  ?predecessor a dbpedia:Person ; 
  rdfs:parent ?royalty_child_of ; 
  rdfs:label ?predecessor_name 
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
347,40,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?father_name ?father_title ?algerian_war_description 
WHERE { 
  ?queen a dbpedia:Person ; dbpedia:name 'Eleonore of Austria, Queen of Poland' . 
  ?queen dbpedia:child ?child . 
  ?child a dbpedia:Person ; dbpedia:name 'Ferdinand II, Holy Roman Emperor' . 
  ?child rdfs:label ?child_name . 
  ?father a dbpedia:Person ; dbpedia:name ?father_name . 
  ?father rdfs:label ?father_title . 
  ?queen dbpedia:parent ?parent . 
  ?parent a dbpedia:Person ; dbpedia:name ?parent_name . 
  ?parent rdfs:label ?parent_title . 
  ?child rdfs:label ?child_name . 
  ?parent rdfs:label ?parent_title . 
  ?queen dbpedia:birthDate '1565' . 
  ?father dbpedia:role 'Emperor of Austria' . 
  ?father dbpedia:role 'Holy Roman Emperor' . 
  ?child dbpedia:role 'Commander in the war' . 
  ?war a dbpedia:Event ; dbpedia:name 'Algerian War' . 
  ?war rdfs:label ?algerian_war_description
}",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
668,43,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist_name ?birth_name
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:album ""The Live Anthology"" .
  ?artist foaf:name ?artist_name .
  ?artist dbpedia:birthDate ?birth_date .
  ?birth_date rdfs:label ?birth_name .
  ?artist rdfs:label ?artist_name .
  FILTER (STRSTARTS(?birth_name, ""Darryl Paa Kwesi"")) 
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
89,54,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?saw_shwe_khet a dbpedia:Person ;
                 dbpedia:name ""Saw Shwe Khet"" ;
                 dbpedia:parent ?parent_of_min_hla_htut .
  ?parent_of_min_hla_htut a dbpedia:Person ;
                       dbpedia:name ""Min Hla Htut of Pyakaung"" .
  ?saw_shwe_khet dbpedia:father ?father_of_saw .
  ?father_of_saw a dbpedia:Person ;
               dbpedia:name ""Saw Shwe Khet"" .
  ?father_of_saw rdfs:label ?spouse_name
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
585,0,train,Give me the native of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ""New York (State)"" .
}
```",1,1,2,1,1,3,2,20,0,0,7189,0,0.0,0
943,29,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow and child of Dawit I.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_of_Baeda_Maryam_I ?alter_ego_of_Shadow ?child_of_Dawit_I
WHERE {
  ?Baeda_Maryam_I a dbpedia:Person ;
                    rdfs:label ""Baeda Maryam I"" .
  ?father_of_Baeda_Maryam_I a dbpedia:FatherOf ;
                           dbpedia:child ?Baeda_Maryam_I .

  ?alter_ego_of_Shadow a dbpedia:Character ;
                       rdfs:label ""The Shadow (Lamont Cranston)"" .

  ?Dawit_I a dbpedia:Person ;
              rdfs:label ""Dawit I"" .
  ?child_of_Dawit_I a dbpedia:ChildOf ;
                      dbpedia:parent ?Dawit_I .
}

```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,43,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
         dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Ferdinand II, Holy Roman Emperor"" ;
          dbpedia:participatedInMilitaryConflict dbpedia:Thirty_Years'_War .
  ?child rdfs:label ?child_name .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,4,train,Give me the reference to Mitaka and region of Japan Standard Time.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?mitaka_name ?japan_region
WHERE {
  ?mitaka a dbpedia:City ;
            geo:location [ geo:lat ?lat ; geo:long ?long ] .
  ?japan a dbpedia:Country ;
           rdfs:label ""Japan"" .
  ?mitaka ns:locatedIn ?japan .
  ?japan rdfs:label ""Japan Standard Time""
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
297,7,train,"Give me the institution in Georgia (U.S. state) and entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?institution_name ?birthplace_country
WHERE {
  ?outlaw a dbpedia:Person ;
            dbpedia:name ""Little Hat Jones"" .
  ?outlaw dbpprop:operatedIn dbo:United_States .
  ?outlaw dbpprop:birthPlace ?birthplace .
  ?birthplace a dbo:AdministrativeDivision ;
             dbpedia:name ?birthplace_name ;
             dbpprop:country ?birthplace_country .
  ?institution a dbpedia:Organization ;
              rdfs:label ?institution_name .
  ?institution dbpprop:operatesIn ?birthplace .
}
```

This query looks for:
- A person named ""Little Hat Jones"" who operated in the United States.
- The administrative division (likely a county or similar) where this person was born, along with the country of that division.
- An organization (institution) that operates in the identified birthplace division.",3,4,4,2,2,2,2,9,0,0,346,0,0.0,0
871,18,train,"Give me the father of Arthur Stanley (politician) and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?parent_title
WHERE {
  ?politician1 a dbpedia:Person ; dbpedia:name ""Arthur Stanley"" ; dbpedia:parent ?parent1 .
  ?politician2 a dbpedia:Person ; dbpedia:name ""Edward Stanley, 17th Earl of Derby"" ; dbpedia:parent ?parent1 .
  ?politician3 a dbpedia:Person ; dbpedia:name ""Victor Stanley (Royal Navy officer)"" ; dbpedia:parent ?parent1 .
  ?parent1 rdfs:label ?parent_title .
}
",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,1,train,Give me the player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player_name ?birthplace
WHERE {
  ?player a dbpedia:Athlete ;
           dbpedia:birthPlace ?birthplace .
  ?player rdfs:label ?player_name .
}
```",1,1,2,1,1,3,3,71,0,443188,7,0.0,0.0,0
345,1,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?region_name
WHERE {
  ?region a dbo:Region ;
         dbpedia:name ?region_name .
  ?region rdfs:label ""Japan"" .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
203,12,train,Give me the military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?battle_name ?british_fleet ?french_fleet ?result
WHERE {
  ?battle1 a dbpedia:Battle ;
            dbpedia:name ""Cape Finisterre, Battle of"" .
  ?battle2 a dbpedia:Battle ;
            dbpedia:name ""Fort Royal, Battle of"" .

  ?battle1 rdfs:label ?battle_name .
  ?battle2 rdfs:label ?battle_name .

  ?battle1 dbpedia:combatant dbpedia:United_Kingdom .
  ?battle2 dbpedia:combatant dbpedia:France .

  ?battle1 dbpedia:outcome ""British victory"" .
  ?battle2 dbpedia:outcome ""French victory"" .

  ?battle1 dbpedia:participatingUnit ?british_fleet .
  ?battle2 dbpedia:participatingUnit ?french_fleet

  FILTER (lang(?battle1) = ""en"") .
  FILTER (lang(?battle2) = ""fr"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
87,6,train,Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?spouse_name
WHERE {
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:Actor ; dbpedia:inFilm dbpedia:Paradise (2013 film) .
  ?actor rdfs:label ?actor_name .
  OPTIONAL { ?actor dbpedia:spouse ?spouse . }
  ?spouse a dbpedia:Person .
  ?actor rdfs:label ?actor_name ; owl:sameAs ?spouse_name .
}
",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
37,6,train,"Give me the birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work_name ?work_birthplace
WHERE {
  ?work a dbpedia:Artwork ;
         dbpedia:creator [ a foaf:Person; rdfs:label ""Ethan Iverson"" ] .
  ?work rdfs:label ?work_name .
  ?work dbpedia:birthPlace ?work_birthplace
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
375,8,train,Give me the entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
           dbpedia:officeHolder dbpedia:GovernorOfHyogoPrefecture .
  ?governor rdfs:label ?governor_name .
}
```",2,2,3,2,1,2,3,28,0,0,104,0,0.0,0
89,21,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?parent_name WHERE {
  ?child a dbpedia:Person ; dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parent_name .
  ?parent dbpedia:parentOf ?min_hla_htut .
  ?child dbpedia:hasPredecessor ?myat_hpone_pyo .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
119,8,train,"Give me the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_name ?administration
WHERE {
  ?party a dbpedia:PoliticalParty ;
            dbpedia:country Spain ;
            rdfs:label ?party_name .
  ?party dbpedia:politicalIdeology ""Social democracy"" .
  ?party foaf:members [ dbpedia:memberOf ?psoe ] .
  ?psoe a dbpedia:PoliticalParty ;
          dbpedia:name ""Spanish Socialist Workers' Party"" .
}
```",1,2,2,1,1,3,3,71,0,0,320,0,0.0,0
633,14,train,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?father_birthplace
WHERE {
  ?child rdf:type dbpedia:Royalty ;
         dbpedia:name ""Francis I, Duke of Lorraine"" .
  ?child dbpedia:father ?father .
  ?father a dbpedia:Person ;
          dbpedia:birthPlace ?father_birthplace .
  ?father foaf:name ?father_name .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
756,37,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country_name ?governor_name
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:office dbpedia:Chancellor_of_Germany ;
            dbpedia:birthPlace ?country_name .
  ?governor foaf:name ?governor_name .
  
  ?manager a dbpedia:Person ;
            dbpedia:role dbpedia:Manager_of_SBV_Vitesse ;
            dbpedia:birthPlace ?country_name .
  ?manager foaf:name ?manager_name .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
595,33,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name 
WHERE {
  ?politician a dbpedia:OfficeHolder ; dbpedia:birthPlace dbpedia:Chappaqua, New York ; dbpedia:siblingProperty dbpedia:Hillary Clinton .
  ?book a dbpedia:WrittenWork ; dbpedia:author ?author_name .
}
",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,51,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?region_name WHERE {
  ?person a dbpedia:Person ; dbpedia:nationality dbpedia:United_States ; dbpedia:birthPlace ?birthplace .
  ?band a dbpedia:Band ; dbpedia:origin ?origin .
  ?origin rdfs:label ?region_name .
  ?person rdfs:label ?person_name .
  ?band rdfs:label ?band_name
  ?person ns:birthPlaceName ?birthplace.
}
",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
737,35,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?predecessor_name ?royalty_status 
WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Royalty ; dbpedia:name ?grandparent_name .
  ?child rdfs:label ?child_name .
  ?predecessor a dbpedia:Person ; dbpedia:parent ?child .
  ?predecessor rdfs:label ?predecessor_name .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,53,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in Actor.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?birthplace ?role
WHERE {
  ?actor a dbpedia:Person ;
    dbpedia:birthPlace ?birthplace ;
    dbpedia:role dbpedia:The_Shadow ;
    rdfs:label ?actor_name .
  ?actor dbpedia:hasActorRole dbpedia:Actor .
}
",6,7,7,3,3,3,3,71,0,0,9,0,0.0,0
386,20,train,Give me the war of Alexander Lvovich Davydov and war of the awardee of 25 and entity in Russian Empire.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war1_name ?davydov_war ?awardee_name ?awardee_honor ?russian_empire
WHERE {
  ?davydov a dbpedia:Person ;
            dbpedia:birthDate ""1820-01-01"" ; # Placeholder birth date for Alexander Lvovich Davydov
            dbpedia:deathDate ""1897-01-01"" ;
             dbpedia:serviceMemberOf dbpedia:Russian_Empire ;
             dbpedia:conflict ?davydov_war .
  ?awardee a dbpedia:Person ;
           dbpedia:award dbpedia:Order_of_St.George_25th ; # Assuming the 25th award is the Order of St. George
           dbpedia:birthDate ""19??-??-?"" ; # Placeholder birth date for the awardee
           dbpedia:serviceMemberOf dbpedia:Russian_Empire ;
                        dbpedia:awarded ?awardee_honor .
  ?war1 a dbpedia:Conflict ;
         dbpedia:conflictLabel ""Name_of_the_war"" . # Replace with the actual war name
}
```

### Completed
```plaintext",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
58,0,train,Give me the spouse of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name 
WHERE {
  ?linda_bruckheimer a dbpedia:Person ;
                       dbpedia:name ""Linda Bruckheimer"" .
  ?linda_bruckheimer wdt:P31 wd:tuple<urn:uuid:YOUR_GENERATED_UUID_HERE> .
  ?spouse a dbpedia:Person ;
            dbpedia:name ?spouse_name ;
            wdt:P18 ?linda_bruckheimer.
}
```

### Completed",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
258,12,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?establishment_name ?alma_mater
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace <urn:uuid:5f6d4ebe-8c5a-4b9a-a3c7-2f1f0f1fefa4> .
  ?politician rdfs:label ""Eleonora Menicucci de Oliveira""@pt .
  ?politician dbpedia:almaMater ?alma_mater .
  ?alma_mater a foaf:Organization ;
             dbpedia:name ?establishment_name .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
531,26,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_name ?office_holder_name ?military_conflict_name ?military_conflict_description
WHERE {
  ?office_holder a dbpedia:OfficeHolder ;
                 dbpedia:role dbpedia:Prime_Minister_of_Portugal .
  ?military_conflict a dbpedia:MilitaryConflict ;
                    dbpedia:name ?military_conflict_name .
  ?office_holder foaf:office ?office .
  ?office rdfs:label ?office_name .
  ?military_conflict rdfs:label ?military_conflict_name .
  ?office_holder dbpedia:birthDate ""1891-10-14""^^xsd:date .  # Placeholder birth date for Manuel Pinto da Costa
  FILTER (lang(?office_name) = ""pt"" )  # Filter results to Portuguese language
}
```",3,7,4,3,1,3,3,71,0,0,485,0,0.0,0
347,5,train,Give me the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?archduke a dbpedia:Person ;
            dbpedia:name ""Charles Joseph"" ; # Archduke Charles Joseph of Austria
            dbpedia:birthPlace ?archduke_birthplace .
  ?parent a dbpedia:Person ;
           dbpedia:name ?parent_name ;
           dbpedia:birthPlace ?parent_birthplace .
  ?archduke dbpedia:child ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,58,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name ?author_birthplace ?governor_name ?governor_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?author a dbpedia:Person ;
dbpedia:birthPlace ?author_birthplace .
  ?governor a dbpedia:Politician ;
dbpedia:birthPlace ?governor_birthplace .
  ?vince_gilligan a dbpedia:Person ;
dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?author rdfs:label ?author_name .
  ?governor rdfs:label ?governor_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",6,8,7,3,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
80,16,train,"Give me the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?album_name 
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthDate ""1980-09-25"" ;
            dbpedia:name ""T.I."" .
  ?song a dbpedia:MusicAlbum ;
         dbpedia:performer ?artist ;
         rdfs:label ?album_name .
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
58,14,train,Give me the producer of the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?movie_title ?producer_name 
WHERE { 
  ?movie a dbpedia:Film ; 
  rdfs:label ?movie_title . 
  ?movie dbpedia:award dbpedia:Poetry_Award . 
  ?producer a dbpedia:Person ; 
  dbpedia:role ?movie . 
  ?producer rdfs:label ?producer_name . 
}",3,3,4,3,1,3,2,20,0,0,10672,0,0.0,0
782,25,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name ?band_name 
WHERE { 
  ?person a dbpedia:Musician ; 
  dbpedia:birthName ?fullname . 
  ?fullname ns:prefLabel ?artist_name . 
  ?person dbpedia:bandMemberOf ?band . 
  ?band a dbpedia:Band ; 
  rdfs:label ?band_name . 
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
668,39,train,"Give me the professional in Musician and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?musician_name ?birthplace 
WHERE { 
  ?musician a dbpedia:Musician ; 
    dbpedia:birthPlace ?birthplace . 
  ?musician rdfs:label ?musician_name . 
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
769,11,train,"Give me the player in Lai Sun Cheung and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player_name ?birth_date ?role_athlete ?role_soccer_player ?role_sports_manager ?role_soccer_manager
WHERE {
  ?player a dbpedia:Person ;
           dbpedia:birthDate ?birth_date ;
           foaf:name ?player_name .
  ?player dbpedia:role dbpedia:athlete ;
          dbpedia:role dbpedia:soccerPlayer ;
          dbpedia:role dbpedia:sportsManager ;
          dbpedia:role dbpedia:soccerManager .
  ?player rdfs:label ?player_name .
  FILTER (?birth_date = ""1981-12-01"")
}
```",3,7,4,2,2,3,2,20,0,0,2,0,0.0,0
353,57,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""Alfonso VI of León and Castile""@en;
            dbpedia:birthPlace ""León, Spain"" .
  ?child rdfs:label ?child_name .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,13,train,"Give me the father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  FILTER (lang(?child) = ""en"")  # restrict to English language
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
375,2,train,"Give me the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?deceased_name ?role ?death_date 
WHERE { 
?deceased a dbpedia:Person ; 
 dbpedia:role dbpedia:Artist ; 
 dbpedia:role dbpedia:MusicalArtist ; 
 dbpedia:deathDate ?death_date . 
FILTER (lang(?death_date) = 'en') 
}
",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
143,0,train,Give me the actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviedb: <http://www.moviedb.org schema/>

SELECT ?actor_name WHERE {
  ?movie a moviedb:Film ;
            moviedb:productionCompany ""Rooftop Films"" ;
            moviedb:title ""The Campus Queen"" .
  ?actor a dbpedia:Person ;
         dbpedia:role ?actor_role .
  ?actor_role a moviedb:RoleType .
  ?actor rdfs:label ?actor_name
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
943,20,train,Give me the child of Dawit I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?shadow_alter_ego
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Dawit I"" .
  ?child rdfs:label ?child_name .
  ?shadow_alter_ego a dbpedia:Character ;
                       rdfs:label ""The Shadow (Lamont Cranston)"" .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
249,0,train,Give me the native of Jamshedpur.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?birthplace a geo:Point ; 
             geo:coordinates [stonewall@4326] . 
  ?person rdfs:label ?person_name .
}
```",1,1,2,1,1,2,2,9,0,0,68,0,0.0,0
595,7,train,Give me the owner of USS Arcadia (ID-1605).,SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?owner_name WHERE {
  ?ship dbpedia:hasOwner ?owner .
  ?ship dbpedia:name ""USS Arcadia (ID-1605)"" .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,9,train,"Give me the father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?father_title
WHERE {
  ?eleonore a dbpedia:Person ;
             dbpedia:birthDate ""1618-08-02"" ;
             dbpedia:role ""Queen of Poland"" ;
             dbpedia:role ""Commander in Thirty Years' War"" .
  ?father a dbpedia:Person ;
         dbpedia:givenName ?father_name ;
         dbpedia:title ?father_title .
  ?eleonore dbpedia:parent ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
203,28,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?regiment_name ?commander_name ?battle1_name ?battle2_name
WHERE {
  ?regiment a dbpedia:Regiment ; dbpedia:name ?regiment_name .
  ?battle1 a dbpedia:Battle ; dbpedia:name ?battle1_name ; dbpedia:participatingFaction dbpedia:UnitedKingdom .
  ?battle2 a dbpedia:Battle ; dbpedia:name ?battle2_name ; dbpedia:participatingFaction dbpedia:UnitedKingdom .
  ?regiment dbpedia:engagedIn ?battle1 .
  ?regiment dbpedia:engagedIn ?battle2 .
  ?commander a dbpedia:Person ; dbpedia:name ?commander_name ; dbpedia:rank 'Colonel' .
  ?battle1 rdfs:label 'Battle of Fort Royal' .
  ?battle2 rdfs:label 'Battle of Cape Finisterre (1805)' .
}
",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
398,12,train,Give me the player in the writer of The First Glove and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }",,3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
89,9,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?parent a dbpedia:Person ; dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ; dbpedia:name 'Saw Min Hla' .
  ?grandparent dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ; dbpedia:name 'Saw Shwe Khet' .
  ?child a dbpedia:Person ; dbpedia:hasParent ?parent .
  ?child rdfs:label ?child_name .
}
",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,38,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?grandparent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
             dbpedia:hasParent ?greatGrandparent .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name .
  ?grandparent rdfs:label ?grandparent_name
}
```

This query looks for individuals (`?child`, `?parent`, `?grandparent`) where each individual has a parent and each parent has a parent (grandparent), ultimately linking back to a great-grandparent (`?greatGrandparent`). The labels (`?child_name`, `?parent_name`, `?grandparent_name`) are used to identify the individuals in question.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
609,59,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?vince_award ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?governor rdfs:label ?governor_name .

  ?vince_gilligan a dbpedia:Person ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?vince_gilligan rdfs:label ?vince_gilligan_name .

  ?governor_name FILTER (lang(?governor_name) = ""en"") .
  ?vince_gilligan_name FILTER (lang(?vince_gilligan_name) = ""en"") .

  ?governor dbpedia:residesIn dbpedia:Mississippi .
  ?vince_gilligan dbpedia:awardedWith some ?award .
  ?award a dbpedia:Award
}
```

This query will retrieve the birth place of the governor from Mississippi and the award received by Vince Gilligan. The `FILTER` clauses ensure that we only consider English names, which is reasonable given the context.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
158,21,train,"Give me the person decedent at Switzerland and native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?person_name ?person_death_place ?person_birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?person_birthplace .
  ?person dcterms:deathPlace ?person_death_place .
  ?person rdfs:label ?person_name
}
```

This SPARQL query looks for individuals (`?person`) who:
- Are of type `Person` (ensuring we're looking for people).
- Have a birth place (`?person_birthplace`) in the Grand Duchy of Finland.
- Have a death place (`?person_death_place`) in Switzerland.

The `rdfs:label ?person_name` ensures we get the name of the person as output.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
78,11,train,Give me the band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band_member_name WHERE {
  ?artist rdfs:label ""David Paton"" .
  ?artist dbpedia:associatedBandMember ?band_member .
  ?band_member a dbpedia:Musician ;
               dbpedia:band ?band .
}
```",2,2,3,2,1,2,3,28,0,0,114,0,0.0,0
723,13,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?band_name ?band_members
WHERE {
  ?album a dbpedia:MusicAlbum ;
            dbpedia:artist ?producer .
  ?producer rdfs:label ?producer_name .
  ?band a dbpedia:Band ;
           dbpedia:hasMember ?band_member .
  ?band_member rdfs:label ?band_name .
}
```

This query first identifies the producer of the album ""Nothing to Gein"" using the `dbpedia:artist` property. Then it looks for bands associated with this producer and retrieves their names and members.",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
103,6,train,Give me the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?person_profession
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:occupation ?person_profession .
  ?person rdfs:label ?person_name
}
```",1,1,2,1,1,3,3,71,0,548539,3,0.0,0.0,0
140,8,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name ?member_name WHERE {
  ?party a dbpedia:PoliticalParty ;
            dbpedia:hasMember ?member .
  ?member rdfs:label ?member_name .
  ?party dbpedia:headquarter dbpedia:Connecticut .
  ?party dbpedia:ruledTerritory dbpedia:Westport, Connecticut
}
```

This query looks for a political party (`?party`) that:
- Has members (`?member`).
- Is based in Connecticut (`?party dbpedia:headquarter dbpedia:Connecticut`).
- Rules over Westport, Connecticut (`?party dbpedia:ruledTerritory dbpedia:Westport, Connecticut`).

It then selects the name of the party and its member.",2,4,3,2,1,3,2,20,0,0,21486,0,0.0,0
293,40,train,Give me the person born as Harriette Arlene Lake and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?political_party ?spouse_name ?spouse_profession
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Harriette Arlene Lake""@en .
  ?person rdfs:label ?person_name .
  ?person dbpedia:presentsForParty ?political_party .
  ?spouse a dbpedia:Person ;
           dbpedia:name ""Roger Pryor""@en ;
           foaf:partner ?person .
  ?spouse dbpedia:role ?spouse_profession .
  FILTER (str(?spouse_profession) = ""actor"")
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
203,35,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?war_name ?military_force 
WHERE { 
  ?regiment a dbpedia:Regiment ; dbpedia:name '30th (Cambridgeshire) Regiment of Foot' . 
  ?commander a dbpedia:Person ; dbpedia:name 'Robert Calder' . 
  ?regiment dbpedia:participatedIn ?war . 
  ?war a dbpedia:MilitaryConflict . 
  ?military_force a dbpedia:MilitaryForce ; dbpedia:participatedIn ?war . 
}",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
39,33,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in Singer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?singing_genre
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:role dbpedia:Sherlock_Holmes ;
         dbpedia:has_role dbpedia:Actor ;
         rdf:type dbpedia:Musician .
  ?actor rdfs:label ?actor_name .
  ?actor dbo:hasGenre ?singing_genre .
}
```",4,6,5,3,2,3,3,71,0,0,5422,0,0.0,0
731,1,train,Give me the war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?war_name ?engagement_details
WHERE {
  ?officer a dbpedia:Person ;
            dbpedia:birthDate ""1905"" ;
            dbpedia:deathDate ""1975"" ;
            dbpedia:navyServiceStart ""1930"" ;
            dbpedia:navyServiceEnd ""1946"" ;
            dcterms:identifier ""Tom Phillips"" .
  ?officer rdfs:label ?officer_name .
  ?war a dbpedia:Conflict ;
         dbpedia:startDate ""1939"" ;
         dbpedia:endDate ""1945"" .
  ?officer dbpedia:conflict ?war .
  ?officer rdfs:label ?war_name .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
595,54,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?admiral_birthplace 
WHERE { 
?commander a dbpedia:MilitaryPerson ; 
 dbpedia:conflict Third_Taiwan_Strait_Crisis . 
?commander rdfs:label ?commander_name . 
}",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
119,3,train,Who is the commander in French Revolutionary Wars?,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?commander_birthplace
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:birthPlace ?commander_birthplace .
  ?commander rdfs:label ?commander_name .
}
```",1,1,2,1,1,3,2,20,0,782049,58,0.0,0.0,0
386,17,train,Give me the war of the awardee of 25 and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?war_name ?davydov_battles
WHERE {
  ?davydov a dbpedia:Person ;
            dbpedia:birthDate ""1912-03-10"" ;
            dbpedia:deathDate ""1996-12-28"" ;
            dbpedia:awarded dbpedia:Hero_of_the_Soviet_Union ;
            dbpedia:conflict ?war .
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?davydov .
  OPTIONAL { ?war rdfs:label ?war_name }
  OPTIONAL { ?davydov dbpedia:engagement ?engagement }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,6,train,Give me the birthplace of Ebrahim Alkazi and birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:name ?actor_name ;
         dbpedia:birthPlace ?actor_birthplace .
  FILTER (lang(?actor_name) = ""en"")  # Assuming we are looking for English names
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
119,28,train,Give me the tenant of Santiago de Compostela and tenant of Spain and office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?tenant_of_santiago ?tenant_of_spain ?election_leader_name ?office_2009
WHERE {
  ?santiago a dbpedia:Monastery ;
             dbpedia:locatedIn dbpedia:Compostela .
  ?spain a dbpedia:Country ;
           dbpedia:capital ?capital .
  ?election_leader a dbpedia:Politician ;
                    dbpedia:office dbpedia:ElectedOffice ;
                    dbpedia:region dbpedia:Galicia ;
                    dbpedia:year db:2009 .
  ?election_leader rdfs:label ?election_leader_name .
  ?tenant_of_santiago rdfs:label ?tenant_of_santiago .
  ?tenant_of_spain rdfs:label ?tenant_of_spain .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,34,train,"Give me the military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?battle_name ?commander_name ?war_name ?figure_name
WHERE {
  ?battle a dbpedia:Event ;
            dbpedia:participatedIn ?war .
  ?war a dbpedia:MilitaryConflict .
  ?battle rdfs:label ?battle_name .
  ?commander a dbpedia:Person ;
             dbpedia:role ?commander_role .
  ?figure a dbpedia:Person ;
            rdfs:label ?figure_name .
  ?commander foaf:name ?commander_name .
  ?war rdfs:label ?war_name .
  ?figure foaf:name ?figure_name .
  ?commander dbpedia:participatedIn ?battle .
  ?figure dbpedia:associatedWith ?war
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,53,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?manager_name ?team_soccer_player_manager ?team_athlete_sergio_aguero ?team_athlete_birthday
WHERE {
  ?player a dbpedia:SportPerson ; dbpedia:birthDate ?player_birthdate .
  ?manager a dbpedia:Person ; dbpedia:role dbpedia:SoccerManager ; dbpedia:birthDate ?manager_birthdate .
  ?player rdfs:label ?player_name .
  ?manager rdfs:label ?manager_name .
  ?player dbpedia:sportSpectatorSport soccer
  ?manager dbpedia:sportManagementRole dbpedia:SoccerManager
  ?player_birthdate = ?manager_birthdate
  ?player dbpedia:birthDate ?athlete_birthdate .
  ?sergio_aguero a dbpedia:Person ; dbpedia:birthDate ?sergio_aguero_birthdate .
  ?athlete a dbpedia:Athlete ; dbpedia:birthDate ?athlete_birthdate .
  ?team_soccer_player_manager a dbpedia:SoccerTeam ; dbpedia:hasMember ?player
  ?team_athlete_sergio_aguero a dbpedia:SoccerTeam ; dbpedia:hasMember ?sergio_aguero
  ?team_athlete_birthday a dbpedia:SoccerTeam ; dbpedia:hasMember ?athlete
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
203,45,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?battle_name ?commander_name ?french_fleet_name ?british_military_force 
WHERE { 
  ?battle a dbpedia:Event ; dbpedia:name ?battle_name . 
  ?commander a dbpedia:Person ; dbpedia:name ?commander_name . 
  ?battle dbpedia:partOf ?campaign . 
  ?campaign a dbpedia:SocietalEvent ; dbpedia:awardee ?kcb_awardee . 
  ?kcb_awardee rdfs:label ?kcb_title . 
  ?british_fleet a dbpedia:MilitaryForce ; dbpedia:name ?british_fleet_name . 
  ?commander dbpedia:lead ?battle . 
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
23,0,train,Give me the party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Roy Barrera"" .
  OPTIONAL { ?person rdfs:label ?party_name }
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
731,7,train,Give me the force of the awardee of Commander of the Order of the British Empire.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },,2,2,3,2,1,3,2,20,0,0,162,0,0.0,0
687,38,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?actor_name ?soccer_team
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:role dbpedia:SoccerPlayer .
  ?actor dbpedia:birthDate ""1979-11-03""^^xsd:date .
  ?soccer_team a dbpedia:SoccerTeam ;
                 dbpedia:homeGround ""Manchester City F.C.""@en .
  ?actor rdfs:label ?actor_name .
  ?soccer_team rdfs:label ?soccer_team_name
}",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
859,2,train,"Give me the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?film_title ?film_category
WHERE {
  ?film a dbpedia:Film ;
         dbpedia:productionCompany ""Mosfilm"" ;
         dbpedia:title ?film_title .
  ?film_category rdfs:label ?film_category_name
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
687,8,train,"Give me the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?manager_name ?birthdate
WHERE {
  ?player a dbpedia:SoccerPlayer ;
            dbpedia:birthDate ?birthdate .
  ?manager a dbpedia:SoccerManager ;
             dbpedia:birthDate ?birthdate .
  ?birthdate rdfs:label ""1979-11-03"" .
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
39,18,train,Give me the professional in Singer and band of Bob Thompson (musician) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?singer_name ?band_name
WHERE {
  ?bob_thompson a dbpedia:Musician ;
                  dbpedia:associatedBandMember ?associated_band_member .
  ?associated_band_member a dbpedia:BandMember ;
                           rdfs:label ?band_name .
  ?bob_thompson rdfs:label ?bob_thompson_name .
  ?singer a dbpedia:Singer ;
             dbpedia:associatedWith ?singer_collaboration .
  ?singer_collaboration a dbpedia:MusicCollaboration ;
                    rdfs:label ?singer_name
}
```

This query looks for:
- Individuals (`?bob_thompson`) classified as `Musician` and associated with band members (`?associated_band_member`).
- Band members (`?associated_band_member`) labeled with the band's name (`?band_name`).
- Individuals (`?singer`) classified as `Singer` and associated with music collaborations (`?singer_collaboration`).
- Music collaborations (`?singer_collaboration`) labeled with the singer's name.",3,3,4,1,3,3,3,71,0,0,3,0,0.0,0
628,32,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?artist_name
WHERE {
  ?artist a dbpedia:MusicArtist ;
            rdfs:label ""Bobby Shmurda""@en .
  ?band_member a dbpedia:BandMember ;
               dbpedia:associatedMusicalArtist ?artist .
  ?artist rdfs:label ?artist_name .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
595,58,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/property/author> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?author_name 
WHERE { 
  ?book a dbpedia:Book ; 
  dbpedia:author ?author_name . 
  ?book rdfs:label 'It's Your Move: A Political Education' . 
  ?president a dbpedia:Person ; 
  dbpedia:office dbpedia:President_of_the_United_States ; 
  dbpedia:war dbpedia:Gulf_War . 
  ?president rdfs:label 'Bill Clinton' . 
}",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
412,6,train,Give me the entity in Athens and war of Napoleon Zervas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?napoleon_zervas_name ?athens_connection
WHERE {
  ?napoleon_zervas a dbpedia:Person ;
                    dbpedia:birthPlace greece:Athens .
  ?napoleon_zervas foaf:name ?napoleon_zervas_name .
  ?athens_connection a dbpedia:Location ;
                       dbpedia:name ""Athens"" ;
                       dbpedia:instanceOf greece:Region .
  ?napoleon_zervas rdfs:seeAlso ?athens_connection .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
412,0,train,Give me the war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?description WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Napoleon Zervas""@en .
  ?person dbpedia:conflict ?war .
  ?war a dbpedia:War ;
         dbpedia:participatedIn ?person .
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
871,5,train,"Who is the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent_name ?parent_title
WHERE {
  ?earl_of_derby a dbpedia:Person ;
               dbpedia:title ""17th Earl of Derby"" .
  ?earl_of_derby dbpedia:father ?parent_name ;
                   dbpedia:officeHolder ?parent_title .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
628,20,train,Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?shmurda_birthname
WHERE {
  ?artist1 a dbpedia:Musician ; dbpedia:birthName ?shmurda_birthname .
  ?artist2 a dbpedia:Musician ; dbpedia:name ?band_member_name .
  ?artist1 foaf:knows ?artist2 .
  FILTER (lang(?band_member_name) = 'en')
}
",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,45,train,"Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?producer_name
WHERE {
  ?film a dbpedia:Film ;
            dbpedia:productionCompany ?production_company .
  ?actor a dbpedia:Person ;
           dbpedia:roleInFilm ?role_in_film .
  ?role_in_film a dbpedia:FilmRole ;
                dbpedia:film ?famous_movie .
  ?producer_name rdfs:label ?producer_name_of_film .
  ?actor rdfs:label ?actor_name .
  ?famous_movie a dbpedia:FamousMovie
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
414,16,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of the awardee of Nobel Prize in Physics.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nobelprize: <http://dbpedia.org/ontology/NobelPrizes>

SELECT ?show_name ?educational_institution
WHERE {
  ?noble_prize a nobelprize:NobelPrize ;
             nobelprize:AwardedTo ?awardee .
  ?awardee a dbpedia:Person ;
           dbpedia:almaMater ?educational_institution .
  ?educational_institution rdfs:label ?show_name
}",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
198,37,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?governor_name ?governor_title ?charleston_birthplace 
WHERE { 
  ?governor a dbpedia:Politician ; 
    dbpedia:office dbpedia:Governor_of_South_Carolina ; 
    dbpedia:birthPlace ?charleston_birthplace . 
  ?governor rdfs:label ?governor_name . 
  ?governor dbpedia:P31 ?governor_title . 
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,58,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?battle_name ?societal_event_name ?author_name
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role dbpedia:Commander ;
             dbpedia:birthPlace ""Austria"" .
  ?battle a dbpedia:Event ;
            dbpedia:name ""Battle of Vienna (1683)"" .
  ?societal_event a dbpedia:Event ;
                 dbpedia:name ""Celebration of the 300th Anniversary of the Battle of Vienna, 1983"" .
  ?commander rdfs:label ?commander_name .
  ?battle rdfs:label ?battle_name .
  ?societal_event rdfs:label ?societal_event_name .
  ?commander foaf:author ?author .
  ?author rdfs:label ?author_name
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,55,train,"Give me the person born as the birth name of Ann Sothern and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?spouse_birthplace
WHERE {
  ?ann_sothern a dbpedia:Person ;
               dbpedia:name ""Ann Sothern""@en ;
               dbpedia:birthName ""Mary Frances Reynolds""@en .
  ?jackie_gleason a dbpedia:Person ;
                  dbpedia:name ""Jackie Gleason""@en ;
                  dbpedia:roleInProgram ""1,000 Dollars a Minute""@en .
  ?spouse a dbpedia:Person ;
           dbpedia:name ?spouse_name ;
           dbpedia:birthPlace ?spouse_birthplace .
  ?ann_sothern wifOf ?spouse .
  ?spouse rdfs:label ?spouse_name .
}
```

This query looks for individuals who are married to Ann Sothern (Mary Frances Reynolds) and matches the description of being an actor in ""1,000 Dollars a Minute"" by Jackie Gleason.",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
353,4,train,"Who is the parent of Roger III, Duke of Apulia?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?duke a dbpedia:Person ;
         dbpedia:title ""Duke of Apulia"" .
  ?duke dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:title ?parent_title .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
782,21,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?real_name WHERE {
  ?band a dbpedia:Band ; dbpedia:name ?band_name .
  ?band dbpedia:hasMember ?member .
  ?member rdfs:label ?real_name .
  ?band_name = 'The Fabulous Thunderbirds' 
}
",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,59,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"SELECT ?band_member_name ?birth_name
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:genre ""Funk and R&B"" ;
           dbpedia:origin ""Florida"" .
  ?bandMember a dbpedia:Musician ;
             dbpedia:role ""Band Member"" ;
             dbpedia:birthDate ?birth_date .
  ?bandMember rdfs:label ?band_member_name .
  FILTER (?bandMember = ?band) .
  BIND (STR(?birth_date) AS ?birth_name)
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,26,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_name
WHERE {
  ?artist a dbpedia:Person ;
            dbpedia:birthDate ""1945-03-30"" ;
            dbpedia:occupation dbpedia:musician .
  ?artist rdfs:label ?artist_name .
  ?band a dbpedia:Band ;
         dbpedia:hasMember ?artist .
  ?band rdfs:label ?band_name
}
```",3,4,4,3,1,3,3,71,0,0,14,0,0.0,0
398,11,train,Give me the player in Aleksandr Filimonov and figure known as the nickname of Russia national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player_name ?nickname
WHERE {
  ?player a dbpedia:Footballer ;
            dbpedia:hasName ?player_name .
  ?team a dbpedia:NationalTeam ;
           rdfs:label ""Russia national football team""@en ;
           foaf:nicknames ?nickname .
  ?player dbpedia:playsFor ?team
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
39,7,train,Give me the birth name of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?musician a dbpedia:Musician ;
               rdfs:label ""Bob Thompson""@en .
  ?musician dbpedia:birthName ?birthName
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,22,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?role
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:role ?role .
  ?role a dbpedia:Profession ;
           rdfs:label ""Detective"" .
  ?person a dbpedia:Person ;
            dbpedia:role ?role .
  ?role a dbpedia:Profession ;
           rdfs:label ""Reformed Convict"" .
}
```",4,4,5,2,2,2,3,28,0,0,4210,0,0.0,0
782,23,train,Give me the reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band_name WHERE {
  ?band a dbpedia:Band ;
         dbpedia:name ?band_name .
}
```",3,3,4,3,1,3,3,71,0,0,10,0,0.0,0
386,4,train,Give me the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?awardee_nobel_year
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:winAward ?award .
  ?award a award:NobelPrize ;
          awardCategory ""Physics"" ;
          awardYear ?awardee_nobel_year .
  ?awardee rdfs:label ?awardee_name
}
```",1,1,2,1,1,2,3,28,0,0,326,0,0.0,0
633,4,train,"Give me the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?francis .
  ?child foaf:name ?child_name .
  ?child dbpedia:royaltyStatus ?royalty_status .
  ?francis a dbpedia:Person ;
          rdfs:label ""Francis I, Duke of Lorraine""@en;
          dbpedia:birthDate ""1494-01-01""^^xsd:date.
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
557,31,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer_name ?producer_professional_alias
WHERE {
  ?film dbpedia:productionCompany ?producer .
  ?producer a dbpedia:Person ;
            dbpedia:birthDate ?producer_birthdate;
            foaf:knows ?fictional_character .
  ?fictional_character a dbpedia:FictionalCharacter ;
                    rdfs:label ""Kent Allard"" .
  FILTER (lang(?producer_name) = ""en"")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
816,23,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviedb: <http://www.moviedb.org schema#>

SELECT ?actor_name WHERE {
  ?movie a moviedb:Film ;
            moviedb:productionCompany ""Decedent's Company"" .
  ?actor a dbpedia:Person ;
         dbpedia:actorRole ?actor_role_in_movie .
  ?actor_role_in_movie a moviedb:ActorRole ;
                    moviedb:film ?movie .
  FILTER (?movie rdfs:label ""a work"") .
  FILTER (?actor_role_in_movie rdfs:label ?actor_name) .
  ?actor dbpedia:deathPlace ""Los Angeles"" .
}
```",3,4,4,3,1,3,3,71,0,0,10313,0,0.0,0
159,46,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?successor_name ?office ?event_name 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:role dbpedia:CommanderOf ; dbpedia:conflict dbpedia:Polish_Soviet_War . 
  ?successor a dbpedia:Politician ; dbpedia:officeHolder ?office . 
  ?event a dbpedia:Event ; dbpedia:name ?event_name ; dbpedia:type dbpedia:Military_conflict . 
  ?commander rdfs:label ?commander_name . 
  ?successor rdfs:label ?successor_name . 
  ?event rdfs:label ?event_name . 
}",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
119,12,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of Alexander Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_name WHERE {
  ?person a dbpedia:Person ;
            dbpedia:nationality ?country_name .
  [ OPTIONAL { ?person rdfs:label ?country_name } ]
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
59,4,train,Give me the manager of Hartlepool United F.C. and native of Bristol.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?manager_name ?manager_birthplace 
WHERE { 
  ?manager a dbpedia:Person ; 
    dbpedia:nationality dbpedia:Bristol ; 
    dbpedia:role dbpedia:FootballManagerOf Huddersfield Town F.C. 
  }",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
668,9,train,Give me the associated musical artist of $pacely and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }",,2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
905,56,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_name ?royalty_title
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:parent ?parent ;
            dbpedia:spouse ?spouse ;
            dbpedia:child ?child .
  ?parent rdfs:label ""Fulk V of Anjou""@en .
  ?spouse rdfs:label ""Matilda of England""@en .
  ?child rdfs:label ""Geoffrey II of Anjou""@en .
  FILTER (regex(?parent, ""Fulk V"") AND regex(?spouse, ""Matilda of England""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,46,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },,5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
414,3,train,"Give me the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nobel: <http://dbpedia.org/ontology/NobelPrize>

SELECT ?host_institution
WHERE {
  ?recipient a nobel:NobelPrizeWinner ;
             nobel:category ""Physics"" .
  ?recipient dbpedia:almaMater ?host_institution .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,13,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Lüneburg"" .
  ?child rdfs:label ?child_name .
  OPTIONAL { ?child dbpedia:royaltyStatus ?royalty_status }
}
```

This query:
- Selects the name (`?child_name`) and royalty status (`?royalty_status`) of individuals (`?child`) who are children (`?child a dbpedia:Person ; dbpedia:parent ?parent`) of Ferdinand Albert II.
- It also specifies that `?parent` is Ferdinand Albert II, identified by his label.
- The OPTIONAL clause allows for the inclusion of royalty status information if available.",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
782,47,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . }","@prefix dbpedia: <http://dbpedia.org/ontology/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

SELECT ?real_name WHERE {
  ?person a dbpedia:Person ; dbpedia:birthDate '1945-03-30' ; dbpedia:role dbpedia:Musician .
  ?person rdfs:label ?real_name .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
859,5,train,Give me the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist_name WHERE {
  ?artist a dbpedia:MusicalArtist ;
           dbpedia:associatedBandMember ?plotkin .
  ?plotkin rdfs:label ""James Plotkin"" .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
412,24,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?death_place_name ?is_settlement
WHERE {
  ?soldier a dbpedia:Person ;
            dbpedia:awardedDbpediaArticle ""War Cross 1st Class"" ;
            dbpedia:name ""Antonios Varthalitis"" .
  ?soldier dbpedia:deathPlace ?death_place .
  ?death_place a dbpedia:Settlement .
  ?death_place_name rdfs:label ?death_place_name .
  ?is_settlement a rdf:Property ; # Assuming we need to check explicitly if it's a settlement
                      rdf:value ?death_place
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
293,30,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?sothern_birthname ?republican_member_name ?republican_member_party
WHERE {
  ?actor a dbpedia:Actor ; dbpedia:birthName ?sothern_birthname .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:spouse ?spouse_name .
  ?politician a dbpedia:Person ; dbpedia:party dbpedia:RepublicanParty ; dbpedia:birthPlace xsd:string .
  ?politician rdfs:label ?republican_member_name
}
",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,26,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
           dbpedia:birthPlace ?governor_birthplace .
  ?governor rdfs:label ""Paulus Powell"" .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
668,52,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name WHERE {
  ?rod_argent a dbpedia:Musician ; dbpedia:associatedBandMember ?band_member .
  ?band_member a dbpedia:Musician ; dbpedia:name ?artist_name .
  ?darryl_paa_kwesi_bannerman-martin a dbpedia:Musician ; dbpedia:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?artist_name rdfs:label ?artist_name_lingu .
  ?darryl_paa_kwesi_bannerman-martin dbpedia:associatedBandMember ?band_member .
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
706,14,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?actor_birthplace 
WHERE { 
  ?movie a dbpedia:Film ; dbpedia:mainActor ?actor . 
  ?actor a dbpedia:Person ; dbpedia:birthPlace ?actor_birthplace . 
  ?actor rdfs:label ?actor_name . 
  FILTER (lang(?actor_name) = 'hi') 
}",3,5,4,3,1,3,2,20,0,0,13,0,0.0,0
737,1,train,"Give me the child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?albrecht .
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg"" .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
258,7,train,Give me the establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?university_name ?founding_date
WHERE {
  ?university a dbpedia:University ;
               dbpedia:name ""Federal University of Paraíba""@en .
  ?university dbpedia:foundingDate ?founding_date
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
668,27,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birth_name
WHERE {
  ?artist a dbo:Artist ;
            dbpedia:regionBorn ""Central Region, Ghana"" .
  ?artist rdfs:label ?artist_name .
  ?artist dbpedia:birthDate ?birth_date .
  BIND(str(?birth_date) AS ?birth_name)
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
159,39,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?commander_details ?tv_show ?societal_event
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role ""Commander in the Battle of Vienna"" .
  ?commander foaf:name ?commander_name .
  ?tv_show a dbpedia:Television_Series ;
            rdfs:label ?tv_show_label .
  ?societal_event a dbpedia:Event ;
                    rdfs:label ?societal_event_label .
  ?commander dbo:referencedIn ?tv_show .
  ?commander dbo:involvedIn ?societal_event
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,17,train,"Give me the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_title
WHERE {
  ?predecessor a dbpedia:Person ;
                 dbpedia:birthDate ""1225-04-15"" ;
                 dbpedia:parent ?king .
  ?king a dbpedia:Monarch ;
          dbpedia:name ?king_name .
  ?predecessor rdfs:label ?predecessor_name .
  ?child a dbpedia:Person ;
           dbpedia:birthDate ""before 1235"" ;
           dbpedia:parent ?predecessor ;
           dbpedia:role dbpedia:Monarch ;
           dbpedia:name ?royalty_child_name .
  ?child rdfs:label ?royalty_title
}
```

This query looks for a person who is the child of Stephen I (identified by his birth date and parent relationship to a monarch named Stephen) and who also has the role of Monarch, indicating royalty.",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
375,23,train,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace ?enjirō_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?hideyoshi .
  ?hideyoshi a dbpedia:Person ;
            rdfs:label ""Toyotomi Hideyoshi""@ja;
            dbpedia:birthPlace ""Nagoya Castle""@en.
  ?enjirō a dbpedia:Person ;
           dbpedia:birthPlace ?enjirō_birthplace .
  ?child rdfs:label ?child_name .
  ?enjirō rdfs:label ?enjirō_name
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
103,61,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name ?politician_name
WHERE {
  ?alter_ego a dbpedia:Character ;
               dbpedia:type dbpedia:ComicBookCharacter .
  ?politician a dbpedia:Person ;
              dbpedia:type dbpedia:Politician;
              dbpedia:roleIn ""Ab Kya Hoga"" .
  ?alter_ego_name rdfs:label ?alter_ego_name .
  ?politician_name rdfs:label ?politician_name
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
159,21,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?successor_name ?successor_role ?war1_start_date ?war1_end_date ?war2_start_date ?war2_end_date 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:role dbpedia:Commander ; dbpedia:conflict dbpedia:Russo_Polish_War_1654–1667 . 
  ?successor a dbpedia:Person ; dbpedia:role dbpedia:Politician ; dbpedia:role dbpedia:Office_Holder . 
  ?commander rdfs:label ?commander_name . 
  ?successor rdfs:label ?successor_name . 
  ?war1 a dbpedia:Conflict ; dbpedia:start_date ?war1_start_date ; dbpedia:end_date ?war1_end_date . 
  ?war2 a dbpedia:Conflict ; dbpedia:start_date ?war2_start_date ; dbpedia:end_date ?war2_end_date . 
  ?commander ns:inDataset <http://dbpedia.org/ontology/> . 
  ?successor ns:inDataset <http://dbpedia.org/ontology/> . 
  ?commander ns:namedBy ?commander_name . 
  ?successor ns:namedBy ?successor_name . 
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,2,train,Give me the office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_name WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:office ?office .
  ?office rdfs:label ?office_name .
  ?politician rdfs:label ""Miguel Maura"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
140,3,train,"Give me the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?battle_name WHERE {
  ?general a dbpedia:Person ;
           dbpedia:conflict ""American Civil War"" ;
           dbpedia:role ""General"" ;
           dbpedia:birthDate ""1825-01-16"" ;
           rdfs:label ?general_name
  FILTER (?general_name = ""George Pickett"")
  ?battle a dbpedia:Event ;
         dbpedia:type ""Battle"" ;
         dbpedia:participatedIn ?general .
  ?battle rdfs:label ?battle_name
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
353,9,train,Give me the child of Roger II of Sicily and father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Roger II of Sicily"" ;
          dbpedia:offspring ?child
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,12,train,Give me the father of Baeda Maryam I and reference to .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?father_birthplace
WHERE {
  ?ruler a dbpedia:Monarch ;
           dbpedia:monarchy_startYear 1508 ;
           dbpedia:birthPlace ?ruler_birthplace .
  ?ruler rdfs:label ""Baeda Maryam I""@en .
  ?familyMembers a foaf:FamilyMemberOf ?ruler ;
                    dbpedia:parent ?father .
  ?father a dbpedia:Person ;
          dbpedia:birthPlace ?father_birthplace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,18,train,Give me the father of Baeda Maryam I and reference to  and child of Dawit I.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?child_name
WHERE {
  ?emperor a dbpedia:Monarch ;
            dbpedia:monarchy_start ""1508"" ;
            dbpedia:monarchy_end ""1540"" .
  ?emperor rdfs:label ""Baeda Maryam I""@en .
  ?emperor dbpedia:father ?father_name .
  ?child a dbpedia:Person ;
           dbpedia:parent ?father_name ;
           dbpedia:birth_date ""before 1518"" . # Approximate birth year before Dawit I's reign
  ?child rdfs:label ?child_name .
  ?child dbpedia:monarch ?emperor
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
89,36,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },,4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
203,3,train,Give me the figure known as The Triple X's.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?team_name ?team_description
WHERE {
  ?team a dbo:WrestlingTagTeam ;
         rdfs:label ?team_name .
  ?team dbo:hasMember [ rdfs:label ?member1 ] ;
              dbo:hasMember [ rdfs:label ?member2 ] ;
              dbo:hasMember [ rdfs:label ?member3 ] .
  ?member1 rdfs:label ""Triple X"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,33,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ;
             rdfs:label ""Saw Min Hla"" .
  ?parent dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
          rdfs:label ?child_name ;
          dbpedia:isRoyalty ?royalty_status .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,25,train,Give me the predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_predecessor_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:name ""Saw Shwe Khet"" ;
            dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person ;
            dbpedia:name ""Saw Shwe Khet""'s spouse .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name .
  OPTIONAL { ?child dbpedia:hasChild ?child_of }
  OPTIONAL { ?child_of a dbpedia:Person ; rdfs:label ?child_of_name }
  FILTER (regex(str(?child_of_name), ""Saw""))  # Filter for children named Saw
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
375,16,train,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?parent_name ?parent_artist_type WHERE {
  ?artist a dbpedia:Artist ; dbpedia:birthPlace london ; dbpedia:genre musical .
  ?artist rdfs:label ?parent_name .
  ?parent a dbpedia:Person ; dbpedia:type musical_artist .
  ?parent rdfs:label ?parent_name .
}",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
531,23,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?mayor_name ?mayor_residence 
WHERE { 
?mayor a dbpedia:Politician ; dbpedia:officeHolderOffice ?office . 
?office rdfs:label 'Mayor of Madrid' . 
?office startdate 2003-04-01 . 
?mayor rdfs:label ?mayor_name . 
}",3,4,4,3,1,3,3,71,0,0,375,0,0.0,0
756,35,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?bochum_season ?letsch_team_name ?letsch_manager_name
WHERE {
  ?season dbpedia:sportsSeason dbpedia:2007-2008 .
  ?team a dbpedia:SoccerTeam ;
           dbpedia:hasManager ?manager .
  ?manager rdfs:label ?manager_name .
  ?player a dbpedia:Person ;
            dbpedia:hasMemberRole dbpedia:SoccerPlayer ;
             dbpedia:playedFor ?team .
  ?team rdfs:label ?team_name .
  ?season rdfs:label ?bochum_season .
  ?player rdfs:label ""Thomas Letsch"" .
  ?team ?player p:P31 dbo:isPartOf dbpedia:2007-08_DFB-Pokal
}
```

This query will retrieve the manager's name (`?manager_name`), the season of VfL Bochum (`?bochum_season`), the team name where Thomas Letsch played (`?letsch_team_name`), and the manager's name of that team during the 2007–08 season (`?letsch_manager_name`).",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
531,13,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?office ?country
WHERE {
  ?commander a dbpedia:OfficeHolder ;
             dbpedia:role dbpedia:PoliticalOfficer ;
             dbpedia:office dbpedia:CommanderOfTheArmedForces .
  ?commander foaf:name ?commander_name .
  ?country a dbpedia:Country ;
            dbpedia:name ""Central African Republic"" .
  ?commander dbpedia:country ?country .
}
```",2,4,3,2,1,3,3,71,0,0,485,0,0.0,0
39,10,train,Give me the band of Bob Thompson (musician) and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name ?band_url
WHERE {
  ?bob Thompson a dbpedia:Musician ;
               dbpedia:occupation ""Singer"" .
  ?band a dbpedia:Band ;
         dbpedia:members ?bob .
  ?band rdfs:label ?band_name .
  OPTIONAL { ?band foaf:weblogURL ?band_url }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
119,21,train,Give me the office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president_name ?president_office ?archbishop_name ?archbishop_title
WHERE {
  ?president a dbpedia:Politician ;
             dbpedia:office dbpedia:President_of_the_Xunta_de_Galicia ;
             dbpedia:term_start_date ""2009-01-01"" .
  ?archbishop a dbpedia:Person ;
               dbpedia:office foaf:role ;
               dbpedia:birthPlace ""Santiago de Compostela"" .
  ?president rdfs:label ?president_name .
  ?archbishop rdfs:label ?archbishop_name
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
737,32,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild_name ?grandchild_birthplace
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person ;
             dbpedia:birthPlace ?grandchild_birthplace .
  ?parent rdfs:label ""Philipp Albrecht, Duke of Württemberg"" .
  ?child rdfs:label ""Child of Duke Philipp of Württemberg"" .
  ?grandchild rdfs:label ?grandchild_name
}
```

### Completed
The query is designed to find the name (`?grandchild_name`) and birth place (`?grandchild_birthplace`) of the grandchild of Duke Philipp of Württemberg, who was also the predecessor of the child of Philipp Albrecht, Duke of Württemberg.

To execute this query, you would need to run it against a SPARQL endpoint for DBpedia or use a SPARQL processor. The result will provide the information about the specific individual fitting these criteria.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
23,12,train,Give me the entity in Colombia and party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name ?gustavo_petro_party ?roy_barreras_party
WHERE {
  ?gustavo_petro a dbpedia:Politician ;
                  dbpedia:politicalParty ?gustavo_petro_party .
  ?roy_barreras a dbpedia:Person ;
                    dbpedia:politicalParty ?roy_barreras_party .
  ?gustavo_petro rdfs:label ""Gustavo Petro""@en.
  ?roy_barreras rdfs:label ""Roy Barreras""@en.
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
225,6,train,Give me the entity in Japan and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality ""Japan"" ;
           rdfs:label ""Chieko Asakawa""@en .
  ?person dbpedia:birthPlace ?birthplace
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,16,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of Isabella of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },,3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
412,11,train,Give me the war of the awardee of 30.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war_name 
WHERE {
  ?recipient a dbpedia:Person ;
            dbpedia:awardedPrize dbpedia:NobelPeacePrize_1930 ;
            dbpedia:birthPlace ""United States"" .
  ?recipient rdfs:label ?recipient_name .
  OPTIONAL { ?recipient dbo:conflict ?war . }
  FILTER (?war rdfs:label ?war_name)
}
```",2,2,3,2,1,2,3,28,0,0,526,0,0.0,0
468,10,train,"Give me the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?royalty_status
WHERE {
  ?martin_of_aragon a dbpedia:Person ;
                    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?martin_of_aragon .
  ?parent rdfs:label ?parent_name .
  ?father a dbpedia:Person ;
           dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
              dbpedia:hasChild ?parent .
  ?grandparent rdfs:label ?grandparent_name .
  ?father rdfs:label ?father_name .
  ?father rdfs:type ""royalty""  # Assuming royalty is a type or role in DBpedia ontology
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
80,19,train,Give me the actor of the movie with  and actor of ATL (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name 
WHERE { 
  ?movie a dbpedia:Film ; 
  dbpedia:mainActor ?actor_name . 
  ?actor rdfs:label ?actor_name . 
}",3,3,4,2,2,3,3,71,0,0,10,0,0.0,0
89,35,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?saw_shwe_khet_name ?saw_shwe_khet_birthplace
WHERE {
  ?min_hla_htut a dbpedia:Person ;
    dbpedia:parent ?pyakaung .
  ?pyakaung a dbpedia:Person ;
    rdfs:label ?pyakaung_name .
  ?saw_shwe_khet a dbpedia:Person ;
    rdfs:child ?child_of_min_hla_htut .
    ?child_of_min_hla_htut a dbpedia:Person ;
      rdfs:parent ?saw_shwe_khet .
  ?saw_shwe_khet rdfs:label ?saw_shwe_khet_name
}
",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
756,34,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_season 
WHERE {
  ?player a dbpedia:Person ; dbpedia:sport ?sport ; dbpedia:club dbpedia:SoccerClub .
  ?player dbpedia:season ?player_season .
  ?team a dbpedia:SportsTeam ; dbpedia:leagueSeason ?league_season .
  ?team dbpedia:hasPlayer ?player .
  ?manager a dbpedia:Person ; dbpedia:role dbpedia:Manager ; dbpedia:season ?manager_season .
  ?player rdfs:label ?player_name .
  ?manager rdfs:label ?manager_name .
  ?league_season rdfs:label ?league_season_name
  FILTER (STRSTARTS(?league_season_name, '2006-07')) .
  FILTER (STRSTARTS(?player_season, '2020-21')) .
}
",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
80,30,train,Give me the actor of ATL (film) and professional in the alter ego of The Shadow and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:role dbpedia:Actor ;
           rdfs:label ?actor_name .
  FILTER (regex(str(?actor_name), ""Tip Harris"") || regex(str(?actor_name), ""Alec Baldwin"") || str(?actor_name) = ""Andre Royo"")
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
585,13,train,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award_name ?awardee_name ?awardee_birthplace
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:birthPlace ?awardee_birthplace .
  ?awardee rdfs:label ?awardee_name .
  ?awardee dbpedia:residencePlace ?award_place .
  ?award_place a dbo:Settlement ;
               dbpedia:country ""United States"" ;
               dbpedia:name ""New York""
}
```",3,5,4,3,1,3,2,20,0,0,8569,0,0.0,0
263,6,train,"Give me the native of Middlesex and parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?parent a dbpedia:Person ;
           dbpedia:birthPlace ?parent_birthplace .
  ?parent rdfs:label ?parent_name .
  ?parent_birthplace ns:hasType ""Middlesex, England"" .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
628,41,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?artist_name ?artist_birthplace
WHERE {
  ?artist a dbpedia:MusicArtist ;
            dbpedia:birthPlace ?artist_birthplace .
  ?artist rdfs:label ""Bobby Shmurda"" . 
  ?band_member a dbpedia:BandMember ;
               dbpedia:associatedMusicalArtist ?artist .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
258,15,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?foundingDate
WHERE {
  ?almaMater a dbpedia:University ;
            dbpedia:established ?foundingDate .
  ?almaMater rdfs:label ""Universidade Luiza Erundina""@pt .
  ?almaMater rdfs:label ""Universidade Eleonora Menicucci""@pt
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
375,14,train,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/postalCode> "","" . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?native_name ?native_birthplace
WHERE {
  ?native a dbpedia:Person ;
           dbpedia:birthPlace ?native_birthplace .
  ?native rdfs:label ?native_name .
  ?native BirthDateRange ""YYYY-YYYY"" .  # Placeholder for birth year range filtering
  ?native dbpedia:nationality dbpedia:English_Speaking_World .
  ?native dbpedia:occupation dbpedia:Artist .
  ?native dbpedia:occupation dbpedia:Musician .
}",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
531,3,train,"Give me the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX election: <http://dbpedia.org/ontology/Election>

SELECT ?office_holder_name ?office_holding
WHERE {
  ?election dbpedia:Election date ""2003-11-02"" ; # Assuming the election was held on November 2, 2003
  ?office_holder a dbpedia:OfficeHolder ;
                 dbpedia:office_electedTo ?office_holding .
  ?office_holding rdfs:label ""Madrid City Council"" .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
609,41,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?vince_award_winner_name ?vince_award_winner_birthplace ?author_name ?author_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:office ""Governor of Virginia"" .
  ?vince_award_winner a dbpedia:Person ;
                       dbpedia:awardWinnerOfSome [ dbpedia:hasAwardee ?vince_gilligan ] .
  ?vince_gilligan a dbpedia:Person ;
                    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?author a dbpedia:Person ;
            dbpedia:birthPlace ?author_birthplace .
  ?governor rdfs:label ?governor_name .
  ?vince_award_winner rdfs:label ?vince_award_winner_name .
  ?author rdfs:label ?author_name
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
270,1,train,Give me the person decedent at Melbourne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?person_name ?death_place
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathPlace ?death_place .
  ?death_place a geo:Location ;
               geo:isPartOfCountry ""Australia"" ;
               geo:name ""Melbourne"".
}
```",1,1,2,1,1,2,2,9,0,0,809,0,0.0,0
756,61,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_birthplace ?manager_native_country ?soccer_club_season
WHERE {
  ?manager a dbpedia:SportsManager ;
            dbpedia:birthDate ""1968-08-26"" ;
            dbpedia:nativeCountry ?manager_native_country .
  ?manager_native_country rdfs:label ""Germany (Administrative division)"" .
  ?manager dbpedia:sportsTeamMemberOf ?soccer_club .
  ?soccer_club a dbpedia:SoccerClubSeason .
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
557,34,train,"Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name ?character_name 
WHERE { 
  ?film a dbpedia:Film ; dbpedia:productionCompany ?producer_company . 
  ?actor rdfs:label ?character_name . 
  ?film dbpedia:starring ?actor . 
  ?producer_company rdfs:label ?producer_name . 
  ?character_name ns:prefLabel 'Kent Allard' . 
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,18,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace ?glenn_youngkin_name ?glenn_youngkin_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                   dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?glenn_youngkin a dbpedia:Person ;
                    dbpedia:birthPlace ?glenn_youngkin_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name .
  ?glenn_youngkin rdfs:label ?glenn_youngkin_name
}",3,3,4,1,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
119,56,train,"Give me the tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader_name ?office ?
       (CASE WHEN ?leader rdfs:label ""Presidente do Governo"" THEN ""President"" ELSE ""Other Role"" END) AS president_role
WHERE {
  ?party dbpedia:P31 dbpedia:Spanish_Socialist_Workers'_Party .
  ?election dbpedia:P31 dbpedia:2009_Galician_regional_election .
  ?leader a dbpedia:Person ;
           dbpedia:officeHolder ?office ;
           dbpedia:role dbpedia:Political_leader_of_region .
  ?office rdfs:label ""Presidente do Governo"" .
  ?leader rdfs:label ?leader_name
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
905,6,train,"Give me the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_father_name
WHERE {
  ?charles_I a dbpedia:Monarch ;
             dbpedia:monarchy_start ""1342"" ;
             dbpedia:monarchy_end ""1370"" .
  ?charles_I dbpedia:father ?royalty_father .
  ?royalty_father a dbpedia:Person ;
                rdfs:label ?royalty_father_name .
  FILTER (lang(?royalty_father_name) = ""en"")
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
159,24,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?writer_name ?commander_name 
WHERE { 
  ?writer a dbpedia:Person ; 
  dbpedia:birthPlace ?writer_birthplace . 
  ?commander a dbpedia:Person ; 
  dbpedia:birthPlace ?commander_birthplace . 
  ?writer rdfs:label ?writer_name . 
  ?commander rdfs:label ?commander_name . 
}",3,3,4,2,2,3,3,71,0,672475,1,0.0,0.0,0
78,23,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members WHERE {
  ?artist a dbpedia:MusicArtist ;
            dbpedia:associatedBand ?band .
  ?band rdfs:label ?band_name .
  ?band_members a dbpedia:BandMember ;
               dbpedia:band ?band .
  ?band_members rdfs:label ?band_members_label
}
```

This query will:
- Identify the band associated with David Paton's music artist.
- Extract the label (name) of this band.
- Retrieve the band members of this band.",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
492,13,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_deathplace ?carolyn_jones_name ?carolyn_jones_deathplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:role dbpedia:Actor ;
           dbpedia:deathPlace ?actor_deathplace .
  ?carolyn_jones a dbpedia:Person ;
                    dbpedia:name ""Carolyn Jones"" .
  ?actor_name rdfs:label ?actor_name .
  ?carolyn_jones_name rdfs:label ?carolyn_jones_name
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,13,train,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?royalty_name WHERE {
  dbo:child[dbo:parent """,3,4,4,3,1,3,2,20,0,0,17,0,0.0,0
412,5,train,Who is the awardee of 30?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_award
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:winAward ?awardee_award .
  ?awardee_award rdfs:label ""30"" .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
89,55,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_spouse_name ?royalty_status
WHERE {
  ?father a dbpedia:Person ; dbpedia:name 'Min Hla Htut' .
  ?mother a dbpedia:Person ; dbpedia:name ?royalty_spouse_name .
  ?mother dbpedia:parentOf ?child_of_Saw_Shwe_Khet .
  ?child_of_Saw_Shwe_Khet a dbpedia:Person ; dbpedia:name 'Saw Shwe Khet' .
  ?father dbpedia:spouseOf ?royalty_spouse_name .
  ?royalty_spouse_name a dbpedia:Royalty
}
",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
119,36,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration_name ?administration_leader
WHERE {
  ?administration a dbpedia:Government ;
               dbpedia:leader ?administration_leader .
  ?administration rdfs:label ?administration_name .
  ?administration_leader foaf:name ""Alberto Núñez Feijóo"" .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,8,train,Give me the reference to Mitaka and region of the time zone of Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?mitaka_region_name ?japan_time_zone
WHERE {
  ?mitaka a dbpedia:City ;
            geo:location [ geo:lat ?mitaka_lat ; geo:long ?mitaka_lon ] .
  ?japan a dbpedia:Country ;
           dbpedia:timeZone ?japan_time_zone .
  ?mitaka rdfs:label ""Mitaka"" .
  ?japan rdfs:label ""Japan"" .
  ?mitaka_region rdfs:subClassOf [ a geo:SpatialThing ; geo:regionName ?mitaka_region_name ] .
  ?japan_time_zone rdfs:label ?japan_time_zone_label
}
```

### Completed",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
398,15,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in Aleksandr Filimonov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?nickname
WHERE {
  ?player a dbpedia:Person ;
           dbpedia:hasClub [ a dbpedia:SoccerClub; rdfs:label ?soccer_club_label ] .
  ?player dbpedia:firstName ""Denis"" .
  ?player dbpedia:lastName ""Kolodin"" .
  ?player dbpedia:hasClub [ a dbpedia:SoccerClub; rdfs:label ?soccer_club_label ] .
  ?player dbpedia:firstName ""Aleksandr"" .
  ?player dbpedia:lastName ""Filimonov"" .
  ?player dbpedia:hasClub [ a dbpedia:SoccerClub; rdfs:label ?soccer_club_label ] .
  ?soccer_club_label = ?another_soccer_club_label
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
871,6,train,"Who is the child of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?son_name ?son_title
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasParent ?parent ;
            rdfs:label ?name .
  ?parent a dbpedia:Person ;
           rdfs:label ""Frederick Stanley, 16th Earl of Derby"" .
  ?son rdfs:label ?son_name .
  ?son a foaf:ChildOf ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
531,29,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?politician_name ?miguel_maura_office ?madrid_tenant 
WHERE { 
  ?politician a dbpedia:OfficeHolder ; 
  dbpedia:politicalAffiliation dbpedia:PParties ; 
  dbpedia:conflict dbpedia:CivilWar_in_Central_African_Republic_2012 . 
  ?politician rdfs:label ?politician_name . 
  ?politician dbpedia:birthPlace ?madrid_tenant . 
  ?miguel_maura a dbpedia:Person ; 
  dbpedia:office ?miguel_maura_office . 
  ?politician foaf:knows ?miguel_maura . 
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
769,10,train,"Give me the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?club_name
WHERE {
  ?club a dbpedia:SportsClub ;
           dbpedia:hasTeam ?team .
  ?team a dbpedia:SoccerTeam ;
          rdfs:label ""Hong Kong C"" .
  ?manager a dbpedia:Person ;
            dbpedia:role dbpedia:SportsManager ;
            dbpedia:manages ?club .
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
871,30,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?child_name ?child_role
WHERE {
  ?child a dbpedia:Person ;
           rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?child a dbpedia:Person ;
           rdfs:label ""Victor Stanley""^^xsd:string .
  ?child rdfs:father ?father .
  ?father a dbpedia:Person ;
          rdfs:label ?father_name .
  ?child rdfs:role ?child_role .
}
```

This query looks for individuals (`?child`) labeled as Edward Stanley and Victor Stanley, and their respective fathers (`?father`). It also checks for roles (`?child_role`) of the children to confirm their titles.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
633,15,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?maria_name ?maria_birthplace
WHERE {
  ?francis_I a dbpedia:Person ;
               dbpedia:title ""Francis I, Duke of Lorraine"" .
  ?francis_I dbpedia:parent ?parent .
  ?parent a dbpedia:Royalty ; # Assuming royalty is represented by this class
            dbpedia:nobleStatus ""Noble"" . # Assuming nobility is represented by this property
  ?parent foaf:spouse ?maria .
  ?maria a dbpedia:Person ;
          dbpedia:name ?maria_name ;
          dbpedia:birthPlace ?maria_birthplace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
213,7,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ""Chiang Ching-kuo""@en .
  ?child_birthplace a geo:PostalAddress ;
                    geo:addressLocality ""Ningbo"" ;
                    geo:administrativeTerritoryCode ""ZHE"" .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
595,45,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?disease_event ?societal_event 
WHERE { 
  ?commander a dbpedia:Person ; 
  dbpedia:warCombatant ?war . 
  ?war rdfs:label ?war_label . 
  ?commander rdfs:label ?commander_name . 
  ?disease_event a dbpedia:Disease ; 
  dbpedia:hasAffliction ?affliction . 
  ?societal_event a dbpedia:SocietalEvent ; 
  dbpedia:occurredInYear ?year . 
  ?commander dbpedia:owned ?ship . 
  ?ship dbpedia:id ?ship_id . 
  ?author a dbpedia:Person ; 
  dbpedia:birthPlace ?birthplace . 
  ?author rdfs:label ?author_name . 
  ?author dbpedia:spouse ?spouse_name . 
  ?spouse_name rdfs:label 'Hillary Clinton' . 
  ?ship dbpedia:name ?ship_name . 
  ?ship_name string-match 'USS Arcadia (ID-1605)' . 
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,57,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author_name
WHERE {
  ?politician a dbpedia:Politician ;
                dbpedia:birthPlace dbpedia:Chappaqua, New York ;
                dbpedia:siblingRelation dbpedia:Hilary Clinton ;
                dbpedia:conflict dbpedia:Operation Desert Storm .
  ?politician dbpedia:writtenWork dbpedia:Book ;
               dbpedia:author ?author_name .
  OPTIONAL { ?author a foaf:Person ; foaf:name ?author_name }
}
```

This query searches for a politician from Chappaqua, New York, who is a sibling of Hillary Clinton and was involved in Operation Desert Storm. It then looks for books written by this politician and retrieves the author's name. The optional part of the query checks if there is a foaf:Person with the same name to ensure we are getting the correct author.",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
668,22,train,Give me the associated musical artist of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?joey_b_birthname
WHERE {
  ?song a dbpedia:MusicSingle ;
            dbpedia:performer ?artist_name .
  ?person a dbpedia:Person ;
            rdfs:label ""Joey B""@en;
            dbpedia:birthName ?joey_b_birthname .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,18,train,Give me the spouse of Hillary Clinton and author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse_name ?book_author_name ?book_title ?crisis_role
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:givenName ""Bill"" ;
            dbpedia:surname ""Clinton"" .
  ?hillary_clinton a dbpedia:Person ;
                    dbpedia:name ""Hillary Clinton"" ;
                    dbpedia:spouse ?spouse_name .
  ?book a dbpedia:Book ;
           dbpedia:title ""Back to Work"" ;
           dbpedia:author ?book_author_name .
  ?crisis a dbpedia:Crisis ;
            dbpedia:role ?crisis_role ;
            dbpedia:involvedIn ?person .
  ?person rdfs:label ?person_name .
  ?book rdfs:label ?book_title .
  ?crisis rdfs:label ?crisis_role
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
513,12,train,Give me the residence of the leader of Ulster Unionist Party and entity in United Kingdom.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?first_minister_residence
WHERE {
  ?first_minister a dbpedia:OfficeHolder ;
                 dbpedia:office dbpedia:First_Minister_of_Northern_Ireland .
  ?first_minister foaf:residence ?first_minister_residence .
  ?first_minister_residence a dbpedia:Location ;
                       rdfs:label ?first_minister_residence_label
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
905,41,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_parent_name
WHERE {
  ?stephen_v a dbpedia:Person ;
            dbpedia:father ?charles_I ;
            dbpedia:spouse ?elizabeth_of_poland .
  ?elizabeth_of_poland a dbpedia:Person ;
                 rdfs:label ""Elizabeth of Poland"" .
  ?casimir_iii_the_great a dbpedia:Person ;
                    rdfs:label ""Casimir III the Great"" ;
                    dbpedia:parent ?royalty_parent .
  ?royalty_parent a dbpedia:Monarchy
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,56,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },,6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,19,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?athlete_name ?birthdate ?team
WHERE {
  ?athlete a dbpedia:Athlete ;
            dbpedia:birthDate ?birthdate .
  ?athlete rdfs:label ?athlete_name .
  ?team a dbpedia:SportsTeam ;
          dbpedia:hasPlayer ?athlete .
  ?team rdfs:label ?team_name .
  FILTER (?birthdate = ""1955-02-22"") .
  BIND (substring(str(?team_name), 0, 1) as ?firstLetter) .
  ?athlete_name LIKE ""Sergio%"" AND ?firstLetter = 'A'
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
158,3,train,"Give me the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country WHERE {
  ?player a dbpedia:Person ;
           dbpedia:nationality ?country .
  ?player rdfs:label ""Sandro Bertaggia""@it
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
203,53,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?siege_name ?calder_role
WHERE {
  ?siege a dbpedia:Event ;
            dbpedia:type ""conflict"" .
  ?commander a dbpedia:Person ;
             dbpedia:role ?commander_role ;
             rdfs:label ?commander_name .
  ?calder a dbpedia:Person ;
           rdfs:label ""Robert Calder"" .
  ?siege dbpedia:participatedIn ?calder .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,10,train,"Give me the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_organisation
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:hasMember ?musician .
  ?musician a dbpedia:Person ;
            rdfs:label ""Nate Newton""@en .
  ?band rdfs:label ?band_name .
}
```",2,5,3,2,1,3,2,20,0,0,15,0,0.0,0
742,7,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alumnus_name ?alumnus_birthplace
WHERE {
  ?alumnus a dbpedia:Student ;
            dbpedia:university ?university .
  ?university rdfs:label ""Plovdiv University \""Paisii Hilendarski\""""@en .
  ?alumnus rdfs:label ?alumnus_name .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
246,11,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of Prince Omar bin Faisal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_parent_name
WHERE {
  ?prince_faisal a dbpedia:Person ;
               dbpedia:parent ?royalty_parent_of_faisal .
  ?prince_omar a dbpedia:Person ;
               dbpedia:parent ?royalty_parent_of_omar .
  ?royalty_parent_of_faisal rdfs:label ?royalty_parent_name .
  ?royalty_parent_of_omar rdfs:label ?royalty_parent_name
}
```",3,4,4,2,2,3,2,20,0,29316,1,0.0,0.0,0
39,61,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band_name
WHERE {
  ?bob_thompson a dbpedia:Musician ;
                 dbpedia:name ""Bob Thompson"" .
  ?alter_ego a dbpedia:FictionalCharacter ;
               dbpedia:creator ""Walter B. Gibson"" .
  ?alter_ego rdfs:label ""Walter B. Gibson"" .
  ?band_name a dbpedia:Band ;
                dbpedia:hasMember ?bob_thompson .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
159,18,train,Give me the commander in Great Turkish War and reference to George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?commander_war ?successor_name ?successor_war 
WHERE {
  ?commander a dbpedia:Person ; dbpedia:conflict dbpedia:Great_Turkish_War .
  ?commander rdfs:label ?commander_name .
  OPTIONAL { ?commander dbpedia:war_sponsor dbpedia:Holy_Roman_Empire }.
  ?successor a dbpedia:Person ; dbpedia:conflict ?successor_war .
  ?successor rdfs:label ?successor_name .
  OPTIONAL { ?successor dbpedia:conflict dbpedia:Great_Turkish_War . }
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
386,23,train,Give me the war of the awardee of Golden Sword for Bravery and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award ""Golden Sword for Bravery"" .
  ?awardee dbpedia:birthPlace ?awardee_birthplace .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
595,17,train,"Give me the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name 
WHERE {
  ?ship a dbpedia:Ship ;
         dbpedia:identifier ""USS Arcadia (ID-1605)"" .
  ?war a dbpedia:Event ;
         dbpedia:type ""Conflict"" ;
         dbpedia:hasCause ""Disease"" .
  ?ship rdfs:label ?war_name
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
871,20,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:birthDate ""1861-08-10"" ; # Assuming Victor Stanley was born on August 10, 1861
            dbpedia:deathDate ""1948-07-09"" ;
            dbpedia:offspring ?offspring .
  ?offspring a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
         dbpedia:title ?parent_title .
  ?parent_title rdfs:label ?parent_name
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
59,2,train,Give me the residence of David Luckman.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv_series: <http://dbpedia.org/ontology/TvSeries>

SELECT ?character_name ?character_residence
WHERE {
  ?character a tv_series:Character ;
             rdfs:label ?character_name .
  ?character tv_series:hasSetting ?character_residence .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
119,47,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader_name ?country
WHERE {
  ?leader a dbpedia:OfficeHolder ;
            dbpedia:office dbpedia:Regional_Government_of_Galicia_2009 ;
            dbpedia:nationality foaf:primaryTopic ""Spanish"" .
  ?leader rdfs:label ?leader_name .
  ?country a dbpedia:Country .
  ?leader dbpedia:residence ?country .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,7,train,"Give me the party of Bruno Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v2 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_of_bruno_retailleau ?party_of_patrice_martin_lalande
WHERE {
  ?bruno_retailleau a dbpedia:Politician ; dbpedia:nationality dbpedia:France ; dbpedia:politicalParty ?party_of_bruno_retailleau .
  ?patrice_martin_lalande a dbpedia:Politician ; dbpedia:nationality dbpedia:France ; dbpedia:office dbpedia:Mayor of Saint-Malo .
  ?patrice_martin_lalande rdfs:label ?name .
  ?party_of_bruno_retailleau rdfs:label ?party_name .
  ?party_of_patrice_martin_lalande rdfs:label ?party_name
}
",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
89,48,train,Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?predecessor_name WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?parent_of_child .
  ?parent_of_child a dbpedia:Person ; dbpedia:child ?child_of_minye_kyawswa .
  ?child_of_minye_kyawswa a dbpedia:Person ; dbpedia:parent ?predecessor_of_child .
  ?predecessor_of_child rdfs:label ?predecessor_name .
}
",5,5,6,3,2,3,3,71,0,15727,1,0.0,0.0,0
119,20,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_name ?country_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:office ?office_name .
  ?character a dbpedia:Person ;
                dbpedia:nationality ?country_name .
  ?politician rdfs:label ""Alberto Núñez Feijóo"" .
  ?character rdfs:label ""Álvaro Quirós""
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
871,2,train,Give me the father of Arthur Stanley (politician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:office ""Governor of Madras"" ;
               dbpedia:term_start ""1836-04-03"" ;
               rdfs:label ?politician_name .
  ?politician dbpedia:birthFather ?father_name .
  ?politician foaf:name ""Arthur Stanley"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,27,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?manager_name ?manager_birthdate ?soccer_club_name ?soccer_season_start ?soccer_season_end
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthDate ?manager_birthdate .
  ?manager foaf:name ?manager_name .
  ?soccer_club a dbpedia:SoccerClub ;
             dbpedia:season ?soccer_season_start ;
             dbpedia:seasonEnd ?soccer_season_end .
  ?soccer_club rdfs:label ?soccer_club_name .
  FILTER (?manager_birthdate = ""1968-08-26"") .
  ?manager dbpedia:role [ a ns:Role; rdfs:label ""Manager"" ] .
  ?soccer_club dbpedia:managedTeam [ a ns:Organization; rdfs:label ?team_name ] .
  ?team a dbpedia:SportsTeam ;
         dbpedia:sport ""Soccer"" .
}",3,7,4,3,1,3,3,71,0,0,5,0,0.0,0
472,14,train,"Give me the territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?birthplace 
WHERE { 
  ?royalty a dbpedia:Royalty ; 
  dbpedia:birthPlace ?birthplace . 
  ?royalty rdfs:label ?royalty_name . 
}",3,4,4,2,2,2,3,28,0,402,1,0.0,0.0,0
399,4,train,Give me the professional in Singer and band member of Emilia (Bulgarian singer).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist_name ?band_or_group_name ?role
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthPlace bul;
            dbpedia:genre ""Pop music"";
            foaf:name ?artist_name .
  ?artist dbpedia:isMemberOf ?band_or_group .
  ?band_or_group a dbpedia:BandOrGroup ;
               rdfs:label ?band_or_group_name .
  ?artist rdfs:label ?artist_name;
           dbpedia:role ?role
}
```",2,2,3,1,2,2,2,9,0,0,3,0,0.0,0
89,0,train,Give me the child of Saw Min Hla.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           dbpedia:name ?child_name ;
           dbpedia:birthPlace ?child_birthplace .
  ?parent rdfs:label ""Saw Min Hla"" .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
585,15,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ""Linda Miller""@en .
  ?spouse a dbpedia:Person ;
           dbpedia:birthPlace ?spouse_birthplace .
  ?child a dbpedia:Person ;
            dbpedia:parent ?spouse ;
            dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name .
  ?spouse rdfs:label ?spouse_name .
  ?child birthplace ""New York""^^xsd:string .
  ?spouse birthplace ""New York""^^xsd:string .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
361,21,train,"Give me the professional in  and professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX musicbrainz: <http://musicbrainz.org/ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor_name ?film_title
WHERE {
  ?album a musicbrainz:Album ;
            dbpedia:releaseDate ""2012-04-24"" .
  ?album dbpedia:artist ?artist_name .
  ?artist_name rdfs:label ?actor_name .
  ?film a dbpedia:Film ;
           dbpedia:productionCompany ?production_company .
  ?actor_name rdfs:label ?actor_name .
  ?film rdfs:subject ?film_title .
  FILTER ( ?actor_name = ?artist_name )
}
```

This query does the following:
- It selects the actor's name (`?actor_name`) and the film title (`?film_title`).
- It identifies albums released on April 24, 2012, assuming ""Lasso the Moon"" was released then.
- It links each album to its artist using `musicbrainz:Artist`.
- It links each film to its production company using `dbpedia:Film` and `dbpedia:productionCompany`.
- It uses a filter to ensure that the actor's name (`?actor_name`) is the same as the artist's name (`?artist_name`), thereby linking the actor to both the album and the film.",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
392,6,train,Give me the reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?designer_name WHERE {
  ?designer a dbpedia:Person ;
             dbo:role ""Car designer"" .
  ?designer rdfs:label ?designer_name .
  FILTER (lang(?designer_name) = ""en"")  # Search for English names only
}
```",2,2,3,2,1,2,2,9,0,0,98447,0,0.0,0
89,26,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_saw_shwe_khet_spouse_name ?royalty_father_name
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?royalty_father .
  ?royalty_father a dbpedia:Person ;
                 dbpedia:birthPlace <http://dbpedia.org/property/birthPlace> ""Myanmar"" ;
                 rdfs:label ?royalty_father_name .
  ?child rdfs:label ""Saw Shwe Khet"" .
  ?royalty_father_spouse a foaf:Person ;
                    dbpedia:spouse ?royalty_saw_shwe_khet_spouse .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
782,54,train,"Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Nick Curran
SELECT ?curran_name WHERE {
  ?curran a dbpedia:Musician ;
           rdfs:label ""Nick Curran""@en .
}

# Step 2: The Fabulous Thunderbirds band information
SELECT ?band_name, ?band_member_name WHERE {
  ?band a dbpedia:Band ;
         rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band_members a dbpedia:Musician ;
               rdfs:label ?band_member_name ;
               dbpedia:birthDate ""1945-03-30""^^xsd:date .
}

# Step 3: Verify band member born on 1945-03-30 is associated with the band
WHERE {
  ?member a dbpedia:Person ;
         dbpedia:birthPlace ?birthplace ;
         rdfs:label ?band_member_name ;
         dbpedia:role ""Band Member""@en .
  ?band_members = ?member .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
609,57,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
    dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
    dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",6,9,7,3,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
557,37,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name WHERE {
  ?actor a dbpedia:Person ; dbpedia:role ?actor_role .
  ?film a dbpedia:Film ; dbpedia:producer ?producer_name .
  ?actor rdfs:label 'Johnny Doughboy' .
  ?film rdfs:label 'A Star Is Born (1937 film)' .
}
",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
288,1,train,Give me the theme of Dikhawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?theme_name WHERE {
  ?theme rdfs:label ?theme_name .
  FILTER (lang(?theme) = ""hi"" )  # Search for themes in Hindi
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
609,50,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_birthplace ?governor_birthplace
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author rdfs:label ""Cece Bell"" .
  ?governor rdfs:label ""Paulus Powell"" .
  ?author_birthplace geo:location [ a geo:Region; rdfs:label ""Mississippi"" ] .
  ?governor_birthplace geo:location [ a geo:Location; rdfs:label ""Mississippi"" ]
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
633,8,train,Give me the parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent_name ?grandparent_birthplace
WHERE {
  ?father a dbpedia:Person ;
           dbpedia:birthPlace ?father_birthplace .
  ?father dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
             dbpedia:birthPlace ?grandparent_birthplace .
  ?father rdfs:label ""Louis II, Duke of Bourbon"" .
  ?grandparent rdfs:label ?grandparent_name
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
23,14,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name ?governor_party
WHERE {
  ?president a dbpedia:Politician ;
               dbpedia:office dbpedia:President_of_Colombia ;
               dbpedia:birthPlace ""Colombia"" .
  ?president rdfs:label ?president_name .
  OPTIONAL { ?president dbpedia:party ?party }
  BIND(str(?party) AS ?party_name)
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
731,0,train,Give me the force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },,1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
723,4,train,"Give me the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_type WHERE {
  ?band a dbpedia:Band ;
         dbpedia:type ?band_type .
  ?band_name rdfs:label ?band_name .
  FILTER (?band_type = ""MusicGroup"")  # Ensuring it's a band
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
158,1,train,Give me the native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?finnish_person_name ?finnish_birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality dbpedia:Finnish;
           dbpedia:birthPlace ?finnish_birthplace .
}
```",1,1,2,1,1,2,3,28,0,0,355,0,0.0,0
89,45,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla and spouse of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor_name 
WHERE {
  ?parent a dbpedia:Person ; dbpedia:hasChild ?child .
  ?child a dbpedia:Person ; dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person ; dbpedia:parent ?parent .
  ?parent rdfs:label ?predecessor_name .
}
",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
468,1,train,Give me the child of Alfonso IV of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Alfonso IV of Aragon"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:birthPlace ?child_birthplace .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
140,7,train,"Give me the commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?battle_name ?commander_name
WHERE {
  ?battle a dbpedia:Event ;
            dbpedia:participatedInMilitaryConflict ?conflict .
  ?conflict a dbpedia:MilitaryConflict ;
             dbpedia:commandedBy ?commander .
  ?battle rdfs:label ?battle_name .
  ?commander rdfs:label ?commander_name
}
```",2,3,3,2,1,3,2,20,0,0,26,0,0.0,0
723,14,train,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:associatedBand ?band .
  ?band a dbpedia:Band ;
         dbpedia:organization ?band_organization .
  ?band_member rdfs:label ?band_member_name
  FILTER (lang(?band_member_name) = ""en"")
}
```",3,6,4,3,1,3,2,20,0,0,112,0,0.0,0
687,43,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find Juan Carlos Molina's football team
SELECT ?juan_carlos_molina_team WHERE {
  ?juan_carlos_molina a dbpedia:Footballer ;
                       dbpedia:club ?juan_carlos_molina_team .
}

# Step 2: Find the actor in the film of Manuel Huerga
SELECT ?actor_name WHERE {
  ?film a dbpedia:Film ;
            dbpedia:director Manuel_Huerga ;
            dbpedia:main_character ?actor_name .
}

# Step 3: Find Pablo Aimar's team
SELECT ?pablo_aimar_team WHERE {
  ?pablo_aimar a dbpedia:Athlete ;
                dbpedia:sport Soccer ;
                dbpedia:club ?pablo_aimar_team .
}

# Step 4: Combine results ensuring both are athletes and soccer players
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT {
  ?player1 a dbpedia:Athlete, dbpedia:SoccerPlayer ;
           dbpedia:club ?juan_carlos_molina_team .
  ?actor_name a dbpedia:Person;
               foaf:name ?actor_name .
  ?pablo_aimar_team a dbpedia:FootballClub;
                    dbpedia:hasMember ?pablo_aimar .
}
WHERE {
  ?juan_carlos_molina_team FILTER( EXISTS { ?player1 a dbpedia:Footballer; dbpedia:club ?juan_carlos_molina_team } )
  ?actor_name FILTER( EXISTS { ?film a dbpedia:Film; dbpedia:director Manuel_H",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
871,53,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?politician_name ?politician_birthplace ?awardee_name ?awardee_award
WHERE {
  ?politician a dbpedia:Politician ;
              dbpedia:birthPlace ?politician_birthplace .
  ?awardee a dbpedia:Person ;
             dbpedia:award ?awardee_award .
  ?politician foaf:children ?child .
  ?child a dbpedia:Person ;
         dbpedia:birthPlace ?child_birthplace ;
         dbpedia:awardedWith ?awardee_award .
  ?child rdfs:label ?child_name .
  ?politician rdfs:label ?politician_name
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,51,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spanish_administration_name ?quiros_country_of_residence
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:party dbpedia:Spanish_Socialist_Workers'_Party .
  ?politician rdfs:label ?spanish_administration_name .
  ?person a dbpedia:Person ;
             dbpedia:nationality dbpedia:Spain .
  ?person foaf:name ?quiros_name .
  ?politician foaf:member ?person .
  FILTER (?quiros_name = ?quiros)
}
```",5,7,6,3,2,3,3,71,0,0,23,0,0.0,0
103,30,train,Give me the actor of Dispatches from Elsewhere and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_profession ?shadow_ego_name ?shadow_ego_profession
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:roleInSeries ""Dispatches from Elsewhere"" .
  ?actor foaf:name ?actor_name .
  ?actor dbpedia:hasAlterEgo ?shadow .
  ?shadow a dbpedia:Character ;
            dbpedia:alterEgoName ?shadow_ego_name .
  ?shadow rdfs:label ?shadow_ego_profession .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,33,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?chancellor_name ?chancellor_birthplace ?manager_name ?manager_birthplace
WHERE {
  ?chancellor a dbpedia:Politician ;
               dbpedia:office ""Chancellor of West Germany"" .
  ?manager a dbpedia:Person ;
             dbpedia:role ""Manager of VfL Bochum"" .
  ?chancellor rdfs:label ?chancellor_name .
  ?manager rdfs:label ?manager_name
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,28,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?successor_name ?successor_role ?war1 ?war2 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:conflict russo-polish_war_1654-1667 . 
  ?commander rdfs:label ?commander_name . 
  ?politician a dbpedia:OfficeHolder ; dbpedia:type dbpedia:Politician . 
  ?war1 a dbpedia:Event ; dbpedia:name 'russo-polish_war_1654-1667' . 
  ?war2 a dbpedia:Event ; dbpedia:name 'great_turkish_war' . 
  ?commander dbpedia:conflict ?war1 . 
  ?commander dbpedia:conflict ?war2 . 
  ?successor a dbpedia:Person ; dbpedia:officeHolder ?successor_role . 
  ?successor rdfs:label ?successor_name . 
  ?successor_name ns:inScheme dbpedia:EuropeanHistoryPeople . 
  ?commander ns:inScheme dbpedia:EuropeanHistoryConflicts 
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
557,39,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name WHERE {
  ?actor a dbpedia:Person ; dbpedia:role ?role_in_high_society_blues .
  ?movie a dbpedia:Film ; dbpedia:director ?producer_name .
  ?movie rdfs:label 'High Society Blues' .
  ?movie rdfs:releaseYear 1938 .
  ?another_movie a dbpedia:Film ; dbpedia:director ?producer_name .
  ?another_movie rdfs:label 'The Adventures of Tom Sawyer (1938 film)' .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
668,47,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name ?album_name
WHERE {
  ?person dbpedia:birthName ""Elorm Kabu Amenyah"" ;
             dbpedia:profession ""Writer"" ;
             rdfs:label ?person_name .
  ?album a dbpedia:Album ;
           dbpedia:artist ?musical_artist .
  ?album rdfs:label ""The Live Anthology"" .
  ?person_name = ?album_artists
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
756,41,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_of_theodor_heuss ?manager_name
WHERE {
  ?theodor_heuss a dbpedia:Person ;
    dbpedia:birthPlace ?country_of_theodor_heuss .
  ?manager rdfs:label ?manager_name .
  ?manager dbpedia:role dbpedia:football_manager ;
    dbpedia:clubVfLBochum ?season_2007_2008
    a dbpedia:FederationscupTeam;
    dbpedia:country db:DE .
  ?manager dbpedia:role dbpedia:football_manager ;
    dbpedia:clubSBBV_Vitesse ?season_2020_2021
    a dbpedia:FederationscupTeam;
    dbpedia:country db:NL .
}
",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
198,18,train,"Give me the war of Amasa Tracy and force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/core/>

SELECT ?war_name ?charleston_entity
WHERE {
  ?tracy a dbo:Person ;
            dbpedia:participatedInMilitaryConflict ?war .
  ?gillmore a dbo:Person ;
             dbpedia:participatedInMilitaryConflict ?war .
  ?war rdfs:label ?war_name .
  ?war dbpedia:location ?charleston_entity .
  ?charleston_entity rdf:type dbo:Location ; 
                   dbpedia:name ""Charleston, South Carolina"" .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
595,59,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?author_name 
WHERE { 
  ?book a dbpedia:Book ; dbpedia:author ?author_name . 
  ?author a dbpedia:Person ; dbpedia:name ?author_name . 
  ?author dbpedia:birthPlace 'Chappaqua, New York' . 
  ?author'sSpouse a dbpedia:Person ; dbpedia:name 'Hillary Clinton' . 
}",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
742,12,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?player a dbpedia:Athlete ;
            dbpedia:nationality dbo:country ""Bulgaria"" .
  ?capital a dbpedia:Capital ;
            dbpedia:name ""Sofia"" .
  ?player dbpedia:birthPlace ?birthplace .
  ?capital dbpedia:locatedIn ?player
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
595,47,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:office dbpedia:President_of_the_United_States ;
               dbpedia:birthPlace ""Chappaqua, New York"" .
  ?politician rdfs:label ?politician_name .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ""Chappaqua, New York"" ;
           dbpedia:spouse ?politician .
  ?author rdfs:label ?author_name .
  FILTER (?politician_name = ""Bill Clinton"") .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
158,11,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country_name WHERE {
  ?emperor a dbpedia:Monarch ;
             dbpedia:monarchyName ""Russia"" .
}",2,3,3,2,1,2,3,28,0,0,5723,0,0.0,0
782,59,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_description
WHERE {
  ?kim_wilson a dbpedia:Musician ;
               dbpedia:birthDate ""1945-03-30"" .
  ?kim_wilson rdfs:member ?band .
  ?band a dbpedia:Band ;
         dbpedia:name ?band_name .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
871,43,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer) and father of Arthur Stanley (politician).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent_name ?grandparent_role ?grandparent_birthplace
WHERE {
  ?earl a dbpedia:Person ;
         dbpedia:birthPlace ?earl_birthplace .
  ?earl rdfs:label ""Edward Stanley"" .
  ?son1 a dbpedia:Person ;
          dbpedia:role dbpedia:Royal_Navy_officer ;
          dbpedia:parent ?earl .
  ?son2 a dbpedia:Person ;
          dbpedia:role dbpedia:Politician ;
          dbpedia:parent ?earl .
  ?grandparent a dbpedia:Person ;
             dbpedia:role dbpedia:Office_holder ;
             dbpedia:child ?son1 ;
             dbpedia:parent ?earl .
  ?grandparent rdfs:label ?grandparent_name .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
398,8,train,Give me the player in the writer of The First Glove.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ""United States"" ;
           rdfs:label ""Cece Bell""@en .
  ?work a dbpedia:CreativeWork ;
          dbpedia:isBasedUpon ?author ;
          dbpedia:hasParticipant ?player .
  ?player a dbpedia:Person .
}
```

This query looks for a person (participant) associated with the work ""The First Glove"" by Cece Bell, filtering for individuals who are from the United States.",2,2,3,2,1,3,2,20,0,0,17,0,0.0,0
723,12,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of Mudvayne.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?music_artist_name ?band_member_name
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:associatedMusicArtist ?music_artist .
  ?music_artist rdfs:label ?music_artist_name .
  ?band member ?band_member .
  ?band_member a dbpedia:Person ;
             rdfs:label ?band_member_name .
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
782,52,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?kim_wilson a dbpedia:Musician ; dbpedia:associatedBand ?band .
  ?nick_curran a dbpedia:Musician ; dbpedia:memberOf ?band .
  ?eric_clapton a dbpedia:Musician ; dbpedia:associatedBand ?band .
  ?band rdfs:label ?band_name .
  ?kim_wilson ns:name ?kim_name .
  ?nick_curran ns:name ?nick_name .
  ?eric_clapton ns:name ?eric_name
}
",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
353,48,train,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name WHERE {
  ?royalty a dbpedia:Royalty ;
  dbpedia:child ?child_of_roger_ii .
  ?child_of_roger_ii a dbpedia:Person ;
  dbpedia:parent ?roger_ii_parent .
  ?roger_ii_parent a dbpedia:Person ;
  dbpedia:child ?alfonso_vi_child .
}
",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
198,9,train,Give me the war of Amasa Tracy and force of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },,2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
249,3,train,"Give me the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_country
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ?actor_name .
  ?actor_birthplace a dbpedia:Country
}
```",1,2,2,1,1,2,2,9,0,366070,3,0.0,0.0,0
119,1,train,Give me the tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?monarch_name ?monarch_country
WHERE {
  ?monarch a dbpedia:Monarch ;
            dbpedia:country ?monarch_country .
  ?monarch rdfs:label ?monarch_name
}
```",1,1,2,1,1,3,3,71,0,0,216,0,0.0,0
89,41,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?royalty_status
WHERE {
  ?min_hla_htut a dbpedia:Person ; dbpedia:parent ?parent_of_min_hla_htut .
  ?parent_of_min_hla_htut a dbpedia:Person ; dbpedia:name ?myat_hpone_pyo .
  ?min_hla_htut rdfs:label ?min_hla_htut_name .
  OPTIONAL {
    ?min_hla_htut dbpedia:spouse ?spouse .
  }
  ?spouse a dbpedia:Person ; dbpedia:name ?spouse_name .
  ?myat_hpone_pyo a dbpedia:Person ; dbpedia:parent ?parent_of_min_hla_htut .
  ?parent_of_min_hla_htut rdfs:label ?parent_of_min_hla_htut_name .
  FILTER (lang(?min_hla_htut_name) = 'en' )
  FILTER (lang(?spouse_name) = 'en')
}
",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
103,43,train,"Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?politician_name
WHERE {
  ?actor a dbpedia:Actor ;
            dbpedia:roleInFilm ""Dispatches from Elsewhere"" .
  ?actor foaf:name ?actor_name .
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolder ""Prime Minister of India"" .
  ?politician foaf:name ?politician_name .
  FILTER (regex(str(?actor_name), ""Dev Patel"") AND regex(str(?politician_name), ""Narendra Modi""))
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
311,2,train,"Give me the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name 
WHERE { 
  ?song a dbpedia:MusicAlbum ; 
  dbpedia:lyrics ?lyric . 
  ?lyric rdfs:label 'Lotus' . 
  ?producer a dbpedia:Band ; 
  dbpedia:name ?producer_name . 
}",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
468,15,train,"Give me the child of Alfonso IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name ?royalty_title
WHERE {
  ?monarch a dbpedia:Monarch ;
             dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           rdfs:label ?child_name ;
           dbpedia:isRulerOf ?royalty_title .
  ?monarch rdf:sameAs <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
412,20,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Napoleon Zervas and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_deathplace ?author_name ?author_deathplace ?vince_gilligan_name ?vince_gilligan_deathplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?battle a dbpedia:Event ;
             rdfs:label ""War of Napoleon Zervas"" .
  ?governor rdf:type dbpedia:GreekWarOfIndependenceFighter ;
            participatedIn ?battle .
  ?governor rdfs:label ?governor_name .
  
  ?author a dbpedia:Person ;
          dbpedia:birthPlace ?author_birthplace .
  ?battle2 a dbpedia:Event ;
             rdfs:label ""War of Konstantinos Ventiris"" .
  ?author rdf:type dbpedia:GreekWarOfIndependenceFighter ;
           participatedIn ?battle2 .
  ?author rdfs:label ?author_name .

  ?vince_gilligan a dbpedia:Person ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?battle3 a dbpedia:Event ;
             rdfs:label ""War of Antonios Varthalitis"" .
  ?vince_gilligan rdf:type dbpedia:TelevisionProducer ;
                 participatedIn ?battle3 .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
198,2,train,"Give me the entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?entity_name ?entity_description
WHERE {
  ?entity a dbpedia:Location ;
            geo:locatedIn dbpedia:Charleston, South Carolina .
  ?entity rdfs:label ?entity_name .
  OPTIONAL { ?entity dbo:populationCount ?entity_description }
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
353,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_title
WHERE {
  ?child a dbpedia:Person ;
         dbpedia:isChildOf ?parent .
  ?parent a dbpedia:Monarch ;
           dbpedia:birthDate ""1027-09-10""^^xsd:date ;
           rdfs:label ""William I of England"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:royaltyStatus ""true"" .
}
```

This query looks for individuals (`?child`) who are children of a person (`?parent`) labeled as William I of England (`rdfs:label ""William I of England""`), and who have the royalty status (`dbpedia:royaltyStatus ""true""`).",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
361,19,train,Give me the professional in the profession of Frédéric Bouraly and professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace
WHERE {
  ?actor a dbpedia:Actor ;
         dbpedia:film [""Rustlers' Rhapsody""] .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,9,train,Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  FILTER (lang(?person_name) = ""en"")  # Only consider English names
}
```",2,2,3,1,2,3,3,71,0,782049,1,0.0,0.0,0
737,0,train,"Give me the predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor_name ?predecessor_birthplace
WHERE {
  ?duke a dbpedia:Monarch ;
         dbpedia:title ""Duke of Württemberg"" .
  ?duke rdfs:label ""Carl"" .
  ?predecessor a dbpedia:Person ;
               dbpedia:birthPlace ?predecessor_birthplace .
  ?predecessor rdfs:label ?predecessor_name
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
782,36,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?musical_artist_name WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Nick Curran""@en .
  ?band a dbpedia:MusicBand ;
          dbpedia:name ""The Fabulous Thunderbirds""@en .
  ?person dbpedia:memberOf ?band
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,8,train,"Who is the father, that is a royalty and an office holder, of Na'od?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?father_name ?title ?royalty_status
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:parent ?father .
  ?person rdfs:label ""Na'od""@en .
  ?father a dbpedia:OfficeHolder ;
          dbpedia:role dbpedia:Pharaoh .
  ?father rdfs:label ?father_name .
  ?person rdfs:label ?name
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
399,3,train,Give me the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?person_profession
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:genre ""punk rock"" .
  ?person rdfs:label ?person_name .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
119,60,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_name ?governor_name
WHERE {
  ?office a dbpedia:PoliticalOffice ;
            dbpedia:leader ?governor .
  ?governor a dbpedia:Politician ;
            rdfs:label ?governor_name ;
            foaf:nationality ""Spanish"" .
  ?office dbpedia:locatedIn dbpedia:Galicia .
  ?governor rdfs:seeAlso [ dbo:hasMember ?quintana ] .
  ?quintana a dbpedia:Person ;
           rdfs:label ""Anxo Quintana""@en;
           foaf:name ""Anxo Quintana""@en
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
871,49,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?politician_name ?politician_birthplace ?child_awardee_name ?child_awardee_honor 
WHERE { 
  ?child a dbpedia:Person ; 
    dbpedia:alumniOf dbpedia:Eton_School ; 
    dbpedia:hasParent ?parent . 
  ?parent a dbpedia:Person ; 
    rdfs:label ?politician_name ; 
    dbpedia:birthPlace ?politician_birthplace . 
  ?child dbpedia:awarded dbpedia:Commander_of_the_Royal_Victorian_Order . 
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
609,42,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
               dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```",5,5,6,2,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
531,37,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_holder_name ?office ?conflict_name ?event_type
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:office ?office .
  ?politician rdfs:label ?office_holder_name .
  ?politician dbpprop:conflict ?conflict .
  ?conflict a dbpedia:MilitaryConflict ;
            dbpprop:conflictName ?conflict_name .
  ?event_type a dbpedia:SocietalEvent ;
               dbpprop:eventType ?event_type_name .
  ?conflict rdfs:label ?conflict_name .
  ?event_type rdfs:label ?event_type_name
}
```

This query looks for office holders (politicians), their offices, the conflict they were involved in (Angolan Civil War), and the type of event it was (societal). It uses prefixes to ensure proper matching with DBpedia's ontology.",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
871,10,train,Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_profession
WHERE {
  ?victor_stanley a dbpedia:Person ;
                  dbpedia:birthDate ""1842"" ;
                  dbpedia:brother ?arthur_stanley .
  ?arthur_stanley a dbpedia:Politician ;
                 dbpedia:office ""Governor of Madras"" ;
                 rdfs:label ""Arthur Stanley"" .
  ?victor_stanley foaf:parent ?parent .
  ?parent a dbpedia:Person ;
         dbpedia:occupation ?parent_profession .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,11,train,"Give me the father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  FILTER (lang(?child) = ""en"" )  # Only consider English names
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
89,5,train,"Give me the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?royalty_child_name ?royalty_child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?saw_shwe_khet .
  ?child rdfs:label ?royalty_child_name .
  ?saw_shwe_khet a dbpedia:Person ;
                  dbpedia:name ""Saw Shwe Khet"" ;
                  dbpedia:birthPlace ?saw_shwe_khet_birthplace
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
151,4,train,Give me the entity in Ottoman Empire and reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?sultan_name ?ottoman_empire_reference
WHERE {
  ?sultan a dbpedia:Person ;
           dbpedia:birthPlace ?sultan_birthplace .
  ?sultan rdfs:label ?sultan_name .
  ?sultan dbpedia:monarchOf dbpedia:Ottoman_Empire .
  ?ottoman_empire_reference a dbpedia:Entity ;
                           dbpedia:name ?ottoman_empire_name
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
859,14,train,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?member_name ?artist_name
WHERE {
  ?band dbpedia:hasMember ?member .
  ?member a dbpedia:Musician ; dbpedia:isArtistOf ?band .
  ?band rdfs:label ""Khlyst"" .
  ?member rdfs:label ?member_name .
  ?artist a dbpedia:Musician ;
            dbpedia:hasAlbum ?album .
  ?album rdfs:label ?album_label .
}
```",3,4,4,3,1,3,2,20,0,0,34,0,0.0,0
595,42,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name ?governor_name ?vince_gilligan_name ?kathryn_janeway_name ?jackie_onassis_name
WHERE {
  ?author a dbpedia:Person ;
           rdfs:label ""Steve Jobs""@en .
  ?governor a dbpedia:Politician ;
           rdfs:label ""John F. Kennedy""@en .
  ?vince_gilligan a dbpedia:Person ;
           rdfs:label ""Vince Gilligan""@en .
  ?kathryn_janeway a dbpedia:Character ;
                   rdfs:label ""Kathryn Janeway""@en .
  ?jackie_onassis a dbpedia:Person ;
                  rdfs:label ""Jacqueline Kennedy Onassis""@en .
  ?author dbo:isSpouseOf ?governor .
  ?governor dbo:isPoliticianOf ?vince_gilligan .
  ?kathryn_janeway dbo:hasSpouse ?jackie_onassis .
  ?vince_gilligan a dbpedia:Person ;
               rdfs:label ""Vince Gilligan""@en .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
557,16,train,"Give me the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?work_title
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthDate ""9 April 1963"" ;
           rdfs:label ?actor_name .
  ?actor dbpedia:roleInFilm ?role .
  ?role rdfs:label ?work_title .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
595,51,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/property/author> ?result . },,5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
595,4,train,"Give me the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name 
WHERE {
  ?book dbpedia:mainSubject ""An Invitation to the White House"" .
  ?author a dbpedia:Person ;
         dbpedia:birthPlace ?author_birthplace .
  ?author rdfs:label ?author_name
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
143,12,train,Give me the actor of The Campus Queen and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?music_artist_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor ?actor_name .
  ?music_artist a dbpedia:MusicArtist ;
               dbpedia:name ""Cynthia Ikponmwenosa Morgan"" .
  ?actor foaf:givenName ?actor_name .
  ?music_artist foaf:givenName ""Cynthia Ikponmwenosa Morgan""
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
943,15,train,"Who is the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_parent_name ?royalty_status ?commander_name ?commander_status
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role dbpedia:CommanderInSiegeOfMukha .
  ?commander dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:royaltyStatus ""Royal"" .
  ?parent rdfs:label ?royalty_parent_name .
  ?commander rdfs:label ?commander_name .
}
```

This query looks for:
- A person (`?commander`) with the role of `CommanderInSiegeOfMukha`.
- That person's parent (`?parent`), who must be a `Person` with the property `royaltyStatus` set to `""Royal""`.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
80,7,train,Give me the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv_series: <http://purl.org/dc/terms/>

SELECT ?title WHERE {
  ?series a tv_series:TVSeries ;
            dbpedia:hasEpisode ""The Golden Master"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,51,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?office_holder_name ?child_name
WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?parent .
  ?parent a dbpedia:Person ; rdfs:label ?parent_name .
  ?parent rdfs:type dbpedia:Monarch .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?royalty_name .
  ?parent dbpedia:officeHolder ?office_holder .
}
",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
472,10,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration_name ?birthplace
WHERE {
  ?prince a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?birthplace_label .
  ?administration a dbpedia:PoliticalAdminstration ;
                 dbpedia:hasLocation ?birthplace .
  ?birthplace_label ns:prefLabel ?administration_name
}
```

This query looks for:
- A person (`?prince`) who is a royalty (`dbpedia:Person` with `foaf:knows` or similar relation to a monarch).
- The birth place (`?birthplace`) of this person.
- The label (`?birthplace_label`) of the birth place.
- An administration (`?administration`) that has this location as its `dbpedia:hasLocation`.
- Matching the label of the birth place with the name of the administration.",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
375,6,train,Give me the entity in Japan and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?toyotomi_hidenaga .
  ?toyotomi_hidenaga rdfs:label ""Toyotomi Hidenaga"" .
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
557,13,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name WHERE {
  ?work a dbpedia:CreativeWork ;
           dbpedia:creator ?producer_name .
  ?work rdfs:label ""Cora Sue Collins""@en .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
258,14,train,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?almaMater
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:name ?politician_name .
  ?politician rdfs:label ""Eleonora Menicucci""@en .
  ?politician dbpedia:birthPlace <urn:locity:Italy> . # Assuming Italy as the birth place of Eleonora Menicucci
  ?almaMater a dbpedia:University ;
             dbpedia:name ?almaMater_name .
  ?politician dbpedia:educatedAt ?almaMater .
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
375,4,train,Give me the person born as Koichirō.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Koichirō""@ja;
           dbpedia:birthPlace ?birthplace .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,3,train,Give me the birthday of Marty Pollio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthday
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Marty Pollio""@en .
  ?person dbpedia:birthDate ?birthday
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
89,14,train,Give me the predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor_name ?predecessor_birthplace
WHERE {
  ?saw_shwe_khet a dbpedia:Politician ;
                  dbpedia:birthPlace ""Yangon, Myanmar"" .
  ?saw_shwe_khet foaf:child ?child .
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ""Yangon, Myanmar"" .
  ?child dbpedia:predecessor ?predecessor .
  ?predecessor a dbpedia:Politician ;
              dbpedia:birthPlace ?predecessor_birthplace .
  ?predecessor rdfs:label ?predecessor_name
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
89,30,train,Give me the spouse of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Saw Shwe Khet's spouse
SELECT ?spouse_name WHERE {
  ?person a dbpedia:Person ;
            dbpedia:name ""Saw Shwe Khet"" .
  ?person dbpedia:spouse ?spouse_name
}

# Step 2: Find Saw Min Hla's child
SELECT ?child_name WHERE {
  ?parent a dbpedia:Person ;
             dbpedia:name ""Saw Min Hla"" ;
             dbpedia:child ?child_name
}

# Step 3: Determine the predecessor of Saw Min Hla's child
MATCH (a:Person {dbpedia:name ""Saw Min Hla""})-[:CHILD|:PARENT]->(b:Person)
WHERE {
  b rdfs:label ?child_name
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,38,train,"Give me the force of the awardee of Gillmore Medal and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?gillmore_medal_winner_force ?lewis_birthplace AS ?lewis_settlement
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:award dbpedia:Gillmore_Medal ;
            dbpedia:birthPlace ?awardee_birthplace .
  ?lewis a dbpedia:Person ;
           dbpedia:birthPlace ?lewis_birthplace .
  ?lewis rdfs:label ""Henry Clay Lewis""@en .
  ?awardee rdfs:label ?awardee_name .
  FILTER (lang(?lewis_birthplace) = ""en"" AND type(?lewis_birthplace) = dbpedia:Settlement AND region(?lewis_birthplace) = ""America"")
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
557,52,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?producer_name
WHERE {
  ?film a dbpedia:Film ;
           dbpedia:productionCompany ?producer .
  ?producer rdfs:label ?producer_name .
  FILTER (lang(?producer_name) = ""en"")  # Search for English names only
  AND ?film dbpedia:director ""William A. Wellman"" .
  AND ?film dbpedia:mainActor ""Fredric March"" .
  AND ?film dbpedia:releaseDate ""1937-01-01""^^xsd:date .
  AND ?producer rdfs:label ""Kent Allard"" .  # Cora Sue Collins' pseudonym
}
```

This SPARQL query looks for a film produced by a company (identified by the `dbpedia:productionCompany` property) with the director named ""William A. Wellman"", the main actor named ""Fredric March"", released in 1937, and produced by someone known as ""Kent Allard"" (Cora Sue Collins' pseudonym).",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
706,3,train,Who is the awardee of Sangeet Natak Akademi Fellowship?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:recipientOfAward [ owl:sameAs ""Sangeet Natak Akademi Fellowship"" ] .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
414,5,train,Who is the awardee of Nobel Prize in Physics?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee_name
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award dbpedia:Nobel_Prize_in_Physics .
  ?awardee rdfs:label ?awardee_name
}
```",1,1,2,1,1,3,2,20,0,0,31,0,0.0,0
293,20,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?actor dbpedia:birthName ""Jackie Cooper"" ;
             dbpedia:politicalPartyMember dbpedia:Republican_Party_(United_States) .
  ?actor dbpedia: spouse ?spouse_name .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,5,train,Give me the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
         dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name .
  ?alexander_of_wuerttemberg a dbpedia:Person ;
                      dbpedia:birthDate ""1804-07-06"" ;
                      dbpedia:deathDate ""1881-03-30"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
249,6,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:name ?actor_name ;
         dbpedia:birthPlace ?actor_birthplace .
  ?actor_name = ""Samarth Shobhna""
}
```",2,3,3,2,1,2,2,9,0,0,11051,0,0.0,0
687,51,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?soccer_player_team
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:role dbpedia:FootballPlayer ;
           foaf:name ?actor_name .
  ?soccer_player a dbpedia:SoccerPlayer ;
               dbpedia:birthDate ?sarmiento_birthday .
  ?sarmiento rdfs:label ""Marcelo Sarmiento"" . # Assuming Marcelo Sarmiento's birthday is known
  FILTER (STRFTER(?sarmiento_birthday, ""2005-05-15"") ) # Adjust the date as necessary
  ?soccer_player dbpedia:playsFor ?soccer_player_team .
}
```

This query looks for an actor who plays a football player in ""All or Nothing: Manchester City"", filters for those born on Marcelo Sarmiento's assumed birthday (2005-05-15), and then finds the soccer team they play for. The `STRFTER` function is used to check if the birthday matches the given date, which should be adjusted based on Marcelo Sarmiento's actual birth date.",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,51,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },,5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
293,35,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?party_member_name ?sothern_birthname
WHERE {
  ?central louisiana rdf:type dbo:PoliticalRegion .
  ?ruling_party a dbpedia:PoliticalParty ;
                 dbpedia:controls ?central louisiana .
  ?party_member a dbpedia:Person ;
                dbpedia:officeHolderOfPosition ?political_position;
                dbpedia:birthPlace ?birthplace .
  ?ann_sothern rdfs:label ?sothern_name .
  ?ann_sothern dbo:birthName ?sothern_birthname .
  ?party_member rdfs:label ?party_member_name .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
513,11,train,Give me the entity in the award of George H. Cameron and residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?cameron_award ?beattie_residence 
WHERE { 
  ?cameron a dbpedia:Politician ; 
  dbpedia:birthPlace <http://dbpedia.org/property/location#Mississippi> . 
  ?beattie a dbpedia:Person ; 
  dbpedia:birthPlace <http://dbpedia.org/property/location#Ireland> . 
  OPTIONAL { ?cameron dbpedia:awarded ?cameron_award } . 
  OPTIONAL { ?beattie dbpedia:residence ?beattie_residence } 
}",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,6,train,Give me the entity in United Kingdom and residence of Doug Beattie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?beattie_residence
WHERE {
  ?beattie a dbpedia:Person ;
            dbpedia:birthPlace ?beattie_birthplace .
  ?beattie rdfs:label ""Doug Beattie""@en .
  ?beattie foaf:residence ?beattie_residence .
  FILTER (lang(?beattie_residence) = ""en"")
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
943,16,train,"Give me the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?character_name ?alter_ego_name
WHERE {
  ?character a dbpedia:Character ;
            rdfs:label ""Lamont Cranston""@en .
  ?character dbpedia:hasAlterEgo ?alter_ego .
  ?alter_ego a dbpedia:Person ;
            rdfs:label ?alter_ego_name .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
158,18,train,"Give me the native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?finland_name ?russia_name 
WHERE { 
  ?nicholas a dbpedia:Person ; 
  dbpedia:birthPlace ?finland_name . 
  ?finland rdfs:label ?finland_name . 
  ?russia a dbpedia:Country ; 
  dbpedia:capital ?moscow . 
  ?russia ns:isPartOf ?administration . 
  ?nicholas ns:parent ?administration . 
  ?russia rdfs:label ?russia_name . 
}",3,4,4,2,2,2,3,28,0,0,126,0,0.0,0
158,17,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?emperor_name ?emperor_birthplace
WHERE {
  ?emperor a dbpedia:Monarch ;
           dbpedia:monarchyStartYear 1855 ;
           dbpedia:birthPlace ?emperor_birthplace .
  ?emperor rdfs:label ?emperor_name
}",3,3,4,2,2,2,3,28,0,0,126,0,0.0,0
943,10,train,Give me the child of Dawit I and father of Baeda Maryam I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?parent_name 
WHERE { 
  ?child a dbpedia:Person ; 
  dbpedia:hasParent ?parent . 
  ?parent a dbpedia:Person ; 
  rdfs:label ?parent_name . 
  ?child rdfs:label ?child_name . 
  ?parent dbpedia:monarchOf <http://dbpedia.org/ontology/Monarchy> 
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
311,17,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy and associated musical artist of Filthy Friends.",SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?writer_name
WHERE {
  ?album a dbpedia:Album ;
            dbpedia:artist ?associated_artist .
  ?associated_artist rdfs:label ""Filthy Friends"" .
  ?writer a dbpedia:Person ;
           dbpedia:authorOf ?album .
  ?album rdfs:label ""Sappy"" .
  ?writer rdfs:label ?writer_name .
  ?band_member a dbpedia:BandMember ;
               dbpedia:band ?associated_band .
  ?associated_band rdfs:label ?band_name
}",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
198,5,train,Give me the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?award_name WHERE {
  ?president a dbpedia:Politician ;
             dbpedia:office ""23rd President of the United States"" ;
             dbpedia:term_start ""1877-01-01"" ;
             rdfs:label ?president_name .
  ?award a dbpedia:Award ;
          rdfs:label ?award_name .
  ?president rdfs:seeAlso ?award .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
78,20,train,"Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_member_name ?artist_name WHERE {
  ?band a dbpedia:Band ; dbpedia:members ?band_member .
  ?band_member rdfs:label ?band_member_name .
  ?stuart_tosh a dbpedia:Musician ; dbpedia:associatedBand ?band .
  ?band rdfs:label ?band_name .
  ?artist a dbpedia:Artist ; dbpedia:work ?work .
  ?work rdf:type dbpedia:SoundtrackAlbum .
  ?work dct:creator ?artist_name .
  ?artist rdfs:label ?artist_name
  FILTER (lang(?band_name) = 'en' ) 
  FILTER (lang(?artist_name) = 'en' ) 
}",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
158,4,train,"Give me the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?emperor_name ?emperor_reign_start ?emperor_reign_end
WHERE {
  ?emperor a dbpedia:Monarch ;
            dbpedia:reignStart ?emperor_reign_start .
  ?emperor rdfs:label ?emperor_name .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
39,16,train,"Give me the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name
WHERE {
  ?character a dbpedia:FictionalCharacter ;
               dbpedia:creator ""Walter B. Gibson"" .
  ?character rdfs:label ?alter_ego_name .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
628,2,train,Give me the native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace <http://dbpedia.org/property/name> ""Florida"" .
}
```",1,1,2,1,1,3,3,71,0,0,971,0,0.0,0
756,32,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthPlace ?manager_birthplace .
  ?club a dbpedia:SportClub ;
         dbpedia:type ""Football club"" ;
         dbpedia:name ""VfL Bochum"" .
  ?season dbpedia:footballSeason ;
          dbpedia:startYear 2007 ;
          dbpedia:endYear 2008 .
  ?manager rdfs:label ?manager_name .
  ?club rdfs:member ?manager
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
412,1,train,Give me the entity in Athens.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?city_name ?city_geonameid
WHERE {
  ?city a dbpedia:City ;
         geo:locatedIn ?location .
  ?location a dbpedia:GeographicalLocation ;
            geo:name ""Greece"" ;
            geo:countryName ""Greece"" .
}
```",1,1,2,1,1,2,3,28,0,0,12,0,0.0,0
628,7,train,"Give me the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_location
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:basedIn ?band_location .
  ?band_location rdfs:label ""New York"" . # Ensure the location is New York (state)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
87,13,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of Janusz Kamiński.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:Actor .
  ?actor dbpedia:appearedIn dbpedia:The_Mindy_Project .
  ?actor ns:spouse ?spouse_name .
  ?spouse_name a dbpedia:Person .
  ?spouse_name ns:marriedTo Janusz_Kamiąski .
}
",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
198,40,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }",,5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
737,30,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name ?royalty_status ?predecessor_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?albrecht .
  ?child dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person ;
             dbpedia:parent ?archduke .
  ?archduke a dbpedia:Person ;
              rdfs:label ""Archduke Charles Louis of Austria"" .
  ?child rdfs:label ?child_name .
  ?grandchild rdfs:label ?grandchild_name .
  ?child dbpedia:royaltyStatus ?royalty_status .
  ?predecessor a dbpedia:Person ;
               rdfs:label ?predecessor_name .
  ?child dbpedia:hasPredecessor ?predecessor
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,5,train,"Give me the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX musicbrainz: <http://musicbrainz.org/ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?song_name ?work_name
WHERE {
  ?song a musicbrainz:Song ;
            musicbrainz:artist ?artist .
  ?artist rdfs:label ""T.I.""@en .
  ?song musicbrainz:releaseDate ?release_date .
  ?work a musicbrainz:Album ;
           musicbrainz:artist ?artist .
  ?work rdfs:label ?work_name .
  ?song mb:trackListMember ?work
}
```

This query searches for songs by T.I. (identified by the artist label) and checks if these songs are members of any album (identified by the work label) that T.I. is also associated with through the same artist label. This approach should return both song names and album names where T.I. is involved as either the artist or a contributing artist to the musical work.",1,3,2,1,1,3,3,71,0,0,44,0,0.0,0
159,59,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?successor_name ?office ?event WHERE { 
?commander a dbpedia:Person ; dbpedia:militaryRole dbpedia:MilitaryConflict ; dbpedia:event dbpedia:Event . 
?commander rdfs:label ?commander_name . 
?successor a dbpedia:Politician ; dbpedia:officeHolder ?office . 
?successor rdfs:label ?successor_name . 
?event rdfs:label ?event_name . 
?event_name = 'Kościuszko Uprising' . 

",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
513,14,train,"Give me the residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_name ?residence_area WHERE {
  ?politician a dbpedia:Person ;
               dbpedia:birthPlace ?birthplace ;
               rdfs:label ""George Savage""@en;
               dbpedia:polscore ?polscore .
  ?party a dbpedia:PoliticalParty ;
           dbpedia:leader ?politician ;
           rdfs:label ?party_name .
  OPTIONAL { ?politician foaf:based_near ?residence_area }
}
```

This query looks for George Savage's political party and attempts to find a `foaf:based_near` property which would indicate his residence area. If such a direct property is not available, we will rely on the geographical location inferred from his birthplace and typical political party locations during his era.",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
756,31,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?birthplace
WHERE {
  ?club dbpedia:hasManager ?manager .
  ?manager a dbpedia:Person ;
            dbpedia:birthPlace ""West Germany"" .
  ?club rdfs:label ""VfL Bochum"" .
  ?club dbpedia:season ""2006-07"" .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
472,23,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?administrative_territory_name ?mayor_name
WHERE {
  ?hansen a dbpedia:Person ;
           dbpedia:birthPlace ?hansen_birthplace .
  ?duchy_of_schleswig a dbpedia:Territory ;
                    dbpedia:administers ?administrative_territory_name .
  ?mayor a dbpedia:OfficeHolder ;
            dbpedia:office ?mayor_office .
  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen"" .
  ?duchy_of_schleswig rdfs:label ""Duchy of Schleswig"" .
  ?mayor rdfs:label ?mayor_name
}
```

This query looks for a person named Christian Ditlev Ammentorp Hansen, identifies the Duchy of Schleswig as his associated territory, and then finds the administrative territory within that duchy along with the name of the mayor who administered it.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
816,30,train,Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_parent
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:parent ?actor_parent .
  ?actor rdfs:label ?actor_name .
  FILTER (lang(?actor_name) = ""en"")  # Assuming English language for simplicity
}
```",4,4,5,2,3,3,3,71,1,62822,0,1.591773713448896e-05,1.0,3.183496752833312e-05
668,26,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?artist_name WHERE {
  ?album a dbpedia:Album ;
         dbpedia:performer ?artist_name .
  ?album rdfs:label ""The Live Anthology"" .
}
```",3,4,4,3,1,3,3,71,0,0,59565,0,0.0,0
143,2,train,Give me the reference to Afeez Oyetoro.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:givenName ""Afeez"" ;
         dbpedia:surname ""Oyetoro"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
347,35,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },,4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
782,31,train,Give me the reference to the real name of the band of Kim Wilson and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:name ?band_name .
  ?kim_wilson a dbpedia:Person ;
             dbpedia:name ""Kim Wilson"" .
  ?band rdfs:member ?kim_wilson
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
943,5,train,"Give me the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor_name ?role_name ?medium
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?actor dbpedia:appearedIn ?role_in_medium .
  ?role_in_medium a dbpedia:MediaType ;
                 rdfs:label ?medium .
  ?role rdfs:label ?role_name
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX fr: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?war
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:conflict ?war .
  ?war rdfs:label ""French Revolutionary Wars"" .
  ?commander foaf:name ?commander_name
}
```",2,2,3,2,1,3,2,20,0,0,121,0,0.0,0
198,22,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
               dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ""Henry Clay Lewis"" .
  ?author rdfs:label ""Amasa Tracy"" .
  ?vince_gilligan rdfs:label ""Vince Gilligan""
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
353,39,train,"Give me the father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_name ?royalty_relationship
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:birthPlace ?royalty_birthplace .
  ?royalty rdfs:child ?child_of_royalty .
  ?child_of_royalty a dbpedia:Person ;
               dbpedia:parent ?grandchild_of_constance .
  ?grandchild_of_constance a dbpedia:Person ;
                       dbpedia:parent ?spouse_of_constance .
  ?spouse_of_constance a dbpedia:Person ;
                      rdfs:label ""Constance of Burgundy"" .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,49,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?artist_birthplace
WHERE {
  ?artist a dbpedia:Artist ;
           dbpedia:birthPlace ?artist_birthplace .
  ?artist rdfs:label ?artist_name .
  ?elorm_kabu_amenyah a dbpedia:Person ;
                    dbpedia:birthPlace ?elorm_birthplace .
  ?artist dbpedia:associatedWith ?elorm_kabu_amenyah .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
742,13,train,Give me the birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alumnus_name ?alumnus_birthplace
WHERE {
  ?university dbpedia:hasAlumni ?alumnus .
  ?alumnus a dbpedia:Person ;
           dbpedia:birthPlace ?alumnus_birthplace .
  ?university rdfs:label ""Пловдивски университет „Паисий Хилендарски”""@en.
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
859,3,train,"Give me the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?band a dbpedia:MusicBand ;
         rdfs:label ?band_name .
  ?band ns:name ""Burnt by the Sun""
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
756,54,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?team a dbpedia:SportsTeam ;
         dbpedia:type ""Football club"" ;
         dbpedia:name ""VfL Bochum"" .
  ?team dbpedia:hasManager ?manager .
  ?manager a foaf:Person ;
           dbpedia:name ?manager_name ;
           dbpedia:birthPlace ?manager_birthplace .
  FILTER (STR(?manager_name) LIKE ""%%[2007-08]%%"") .
}

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?team a dbpedia:SportsTeam ;
         dbpedia:type ""Football club"" ;
         dbpedia:name ""SBV Vitesse"" .
  ?team dbpedia:hasManager ?manager .
  ?manager a foaf:Person ;
           dbpedia:name ?manager_name ;
           dbpedia:birthPlace ?manager_birthplace .
  FILTER (STR(?manager_name) LIKE ""%%[2020-21]%%"") .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
737,60,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_relationship 
WHERE {
  ?parent a dbpedia:Person ; dbpedia:offspring ?child .
  ?child a dbpedia:Royalty ; dbpedia:parent ?parent .
  ?grandchild a dbpedia:Person ; dbpedia:parent ?child .
  ?grandchild a dbpedia:Royalty
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
198,21,train,"Give me the war of the awardee of Medal of Honor and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX moh: <http://www.moh.gov/mohschema_v2#>
PREFIX dbp: <http://dbpedia.org/ontology/>

SELECT ?war ?charleston_entity
WHERE {
  ?moh_recipient a moh:MohRecipient ;
                  moh:recipientAwardDate ?award_date .
  ?award_date rdfs:label ?war_label .
  
  ?charleston_location a dbp:Location, dbp:City ;
                       dbp:name ""Charleston, South Carolina"" .
  
  ?moh_recipient moh:actionInConflict ?moh_action .
  ?moh_action a moh:ActionInConflict ;
              moh:conflict ?war .
  
  ?charleston_entity a ?charleston_location .
}
```

This query will:
1. Identify Medal of Honor recipients and their award dates.
2. Extract the conflict (war) from the award date labels.
3. Find all locations named ""Charleston, South Carolina"".
4. Link the Medal of Honor recipient to one of these Charleston locations.

By running this SPARQL query against a DBpedia endpoint, we should be able to find the war in which the Medal of Honor recipient was involved and identify the related entity in Charleston, South Carolina.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
943,3,train,"Who is the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_name ?royalty_title ?commander_name ?commander_role
WHERE {
  ?battle a dbpedia:Event ;
            dbpedia:participatedInConflict ""Siege of Mukha"" .
  ?commander a dbpedia:Person ;
             dbpedia:role ?commander_role .
  ?commander rdfs:label ?commander_name .
  ?royalty a dbpedia:Monarch ;
            foaf:name ?royalty_name ;
            dbpedia:country ""Sudan"" .
  ?battle dbpedia:involved ?royalty .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,6,train,"Give me the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?title
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:parent ?mother .
  ?mother a dbpedia:Person ;
           rdfs:label ""Myat Hpone Pyo""@en .
  ?person foaf:father ?father .
  ?father a dbpedia:Royalty ;
          rdfs:label ?father_name .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
37,2,train,"Who is the writer, that is an artist, of The Miseducation of Lauryn Hill?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?artist_name ?artist_birthplace
WHERE {
  ?artist a dbpedia:Artist ;
           dbpedia:birthPlace ?artist_birthplace .
  ?album a dbpedia:Album ;
            dbpedia:performer ?artist .
  ?album rdfs:label ""The Miseducation of Lauryn Hill""@en .
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
687,12,train,Give me the player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?agueroteam ?palamarteam WHERE {
  ?sergio_aguero a dbpedia:FootballPlayer ;
                  dbpedia:club ?agueroteam .
  ?pablo Aimar a dbpedia:FootballPlayer ;
               dbpedia:club ?palamarteam .
  ?agueroteam rdfs:label ""Sergio Agüero's team"" .
  ?palamarteam rdfs:label ""Pablo Aimar's team"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,18,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?child_birthplace ?successor_name ?successor_position 
WHERE { 
  ?child a dbpedia:Person ; 
    dbpedia:parent ?father ; 
    dbpedia:sibling ?sibling_of_saw_shwe_khet . 
  ?sibling_of_saw_shwe_khet a dbpedia:Person ; 
    dbpedia:spouse ?mother ; 
    dbpedia:role ?role_of_myat_hpone_pyo . 
  ?successor a dbpedia:Person ; 
    dbpedia:role ?role_of_saw_shwe_khet ; 
    dbpedia:succeededBy ?successor_of_saw_shwe_khet . 
  ?child rdfs:label ?child_name . 
  ?successor rdfs:label ?successor_name . 
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
557,12,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?film_title
WHERE {
  ?film a dbpedia:Film ;
            dbpedia:productionCompany ?producer .
  ?producer rdfs:label ?producer_name .
  ?film rdf:type dbpedia:Film ;
          dbpedia:title ?film_title
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,9,train,Give me the war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX sengoku: <http://dbpedia.org/ontology/SengokuPeriod>

SELECT ?war_name ?hidenaga_participation ?hidekatsu_participation
WHERE {
  ?war a sengoku:War ;
         dbpedia:name ?war_name .
  ?hidenaga a dbpedia:Person ;
           dbpedia:name ""Toyotomi Hidenaga"" ;
           sengoku:participatedIn ?war.
  ?hidekatsu a dbpedia:Person ;
            dbpedia:name ""Hashiba Hidekatsu"" ;
            sengoku:participatedIn ?war .
}
```

This query will retrieve the names of wars where both Toyotomi Hidenaga and Hashiba Hidekatsu participated. The reasoning behind this approach is to use the structured data available in DBpedia to identify conflicts and check for the participation of both individuals, thereby answering the question based on factual data from the DBpedia ontology.",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
816,17,train,Give me the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ;
             rdfs:label ""Mariclare Costello""@en .
  ?parent dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
          rdfs:label ?child_name ;
          dbpedia:birthPlace ?child_birthplace
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
941,3,train,"Who is the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?royalty_status
WHERE {
  ?duke a dbpedia:Person ;
         dbpedia:name ""Anthony Ulrich von Hohenzollern"" ;
         dbpedia:birthDate ""1774"" ;
         dbpedia:deathDate ""1847"" .
  ?parent a dbpedia:Person ;
           dbpedia:name ?parent_name ;
           dbpedia:birthPlace <http://dbpedia.org/ontology/Location> .
  ?parent rdfs:label ?royalty_status .
}
```

This query looks for the person named Anthony Ulrich von Hohenzollern (identified by his name and birth date), then finds their parents (`?parent`) and checks if those parents are labeled as a royalty (`?royalty_status`).",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
311,0,train,Give me the associated musical artist of Filthy Friends.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?artist_name WHERE {
  ?album a dbpedia:Album ;
           dbpedia:artist ?artist_name .
  ?album rdfs:label ""Filthy Friends""@en .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
119,39,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?politician_name ?country
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:office dbpedia:Prime_Minister_of_Spain ;
               dbpedia:party dbpedia:Spanish_Socialist_Workers'_Party .
  ?politician foaf:name ?politician_name .
  ?politician rdfs:label ?politician_name .
  ?politician dbpedia:country ?country .
  ?country a dbpedia:Country .
  ?country rdfs:label ?country_name .
  ?country_name ""Spain""
}
```",4,5,5,3,2,3,3,71,0,0,23,0,0.0,0
871,37,train,"Give me the father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?father_title ?governor_name ?office
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?governor rdfs:label ?governor_name .
  
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?author rdfs:label ?author_name .

  ?child a dbpedia:Person ;
            dbpedia:parent ?author ;
            dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name .

  ?politicianParent a dbpedia:OfficeHolder ;
                    dbpedia:office ?office ;
                    dbpedia:parent ?author .
  
  ?child rdfs:member ?politicianParent .
  
  ?governor ns:father ?father .
  ?author ns:parent ?father .
  
  ?politicianParent ns:child ?child .
}

```

### Completed",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,28,train,"Give me the child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?ladislaus_name ?ladislaus_birthplace
WHERE {
  ?stephen_v a dbpedia:Monarch ;
               dbpedia:reignStart ""1308"" ;
               dbpedia:deathDate ""1345"" .
  ?maria_laskarina a dbpedia:Person ;
                  dbpedia:birthPlace ?maria_birthplace .
  ?philip_i_prince_taranto a dbpedia:Person ;
                    dbpedia:birthPlace ?philip_birthplace .
  ?charles_martel_of_anjou a dbpedia:Person ;
                       dbpedia:birthPlace ?charles_birthplace .
  ?stephen_v rdfs:father ?stephen_father .
  ?maria_laskarina rdfs:spouse ?stephen_father .
  ?philip_i_prince_taranto rdfs:child ?ladislaus .
  ?ladislaus rdfs:child ?ladislaus_charles_martel_of_anjou .
  ?ladislaus_name rdfs:label ?ladislaus_name .
  ?ladislaus_birthplace rdfs:label ?ladislaus_birthplace
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,25,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?child_names
WHERE {
  ?eleonore a dbpedia:Person ;
             dbpedia:birthDate ""1718-04-13"" ;
             dbpedia:deathDate ""1780-06-17"" ;
             dbpedia:monarchTitle ""Queen of Poland"" .
  ?charles_vi a dbpedia:Person ;
            dbpedia:birthDate ""1685-03-25"" ;
            dbpedia:deathDate ""1740-10-20"" ;
            dbpedia:monarchTitle ""Holy Roman Emperor"" ;
            foaf:father ?father_name .
  ?cecilia_renata a dbpedia:Person ;
             dbpedia:birthDate ""1692-09-29"" ;
             dbpedia:deathDate ""1757-03-17"" ;
             dbpedia:monarchTitle ""Queen of Hungary and Bohemia"" ;
             foaf:father ?father_name .
  ?charles_vi rdfs:label ?father_name .
  ?cecilia_renata rdfs:label ?child_names
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,38,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?saw_shwe_khet .
  ?spouse a dbpedia:Person ; dbpedia:partner ?saw_shwe_khet .
  ?child rdfs:label ?child_name .
  ?royalty a dbpedia:Royalty ; dbpedia:parent ?saw_shwe_khet .
  ?child rdfs:label ?child_name .
  ?royalty rdfs:label ?royalty_name
}
",4,5,5,2,2,3,3,71,0,76,1,0.0,0.0,0
392,8,train,Give me the member of 1. FC Magdeburg and reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?footballer_name ?designer_name 
WHERE { 
  ?footballer a dbpedia:SportsTeam ; dbpedia:fullName '1. FC Magdeburg' . 
  ?designer a dbpedia:Person ; dbpedia:givenName 'Marek' ; dbpedia:familyName 'Reichman' . 
  ?footballer rdfs:label ?footballer_name . 
  ?designer rdfs:label ?designer_name . 
}",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
103,16,train,"Give me the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_profession
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:role ?actor_role .
  ?actor_role rdfs:label ""Politician"" .
  ?actor rdfs:label ?actor_name .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
742,5,train,Give me the resident of Sofia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?city_name ?city_coordinates
WHERE {
  ?city a dbpedia:City ;
         dbpedia:isPartOfCountry <http://dbpedia.org/property/isPartOf> ?country .
  ?city geo:location ?city_coordinates .
  ?country rdfs:label ""Bulgaria"" .
  ?city rdfs:label ?city_name
}
```",1,1,2,1,1,3,2,20,0,0,16,0,0.0,0
628,4,train,"Give me the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name WHERE {
  ?artist a dbpedia:MusicArtist ;
           dbpedia:associatedArtists [ rdfs:label ""Bobby Shmurda"" ]
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
103,44,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },,5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
905,46,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?spouse_name
WHERE {
  ?father a dbpedia:Person ;
            dbpedia:birthDate ""1832-10-15"" ;
            dbpedia:deathDate ""1899-07-13"" ;
            rdfs:label ?father_name .
  ?father dbpedia:parent ""Philip, Despot of Romania"" .
  ?spouse a dbpedia:Person ;
           dbpedia:birthDate ?spouse_birthdate ;
           dbpedia:deathDate ?spouse_deathdate .
  ?father rdfs:label ?father_name .
  ?spouse rdfs:label ?spouse_name
}
```

This query looks for a person (`?father`) who:
- Is a `Person` (as opposed to other types of entities),
- Has a birth date between 1832 and 1899 (based on the likely age of Michael I Ghica's father at the time of Philip's birth),
- Has the label `Michael I Ghica`,
- Is the parent of `Philip, Despot of Romania`.

For each such `?father`, it looks for a spouse (`?spouse`) who:
- Is also a `Person`,
- Has a birth date and death date (to narrow down the search to a specific individual),
- Has the label corresponding to the spouse's name.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,0,train,Give me the birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?winston_churchill a dbpedia:Person ;
                  dbpedia:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,3,109571,0,2.737875773449906e-05,1.0,5.475601631729286e-05
119,53,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_name ?event_description
WHERE {
  ?x a dbpedia:Office_Bearer ;
         dbpedia:officeEvent ?event .
  ?event rdfs:label ?event_description .
  ?x foaf:name ""Anxo Quintana"" .
  ?x dbpedia:politicalParty dbpedia:Spanish_Socialist_Workers'_Party .
}
```

This SPARQL query looks for individuals who held an office (`dbpedia:Office_Bearer`) and had an associated event (`dbpedia:officeEvent`). It filters for those who are named ""Anxo Quintana"" and are members of the Spanish Socialist Workers' Party. The `rdfs:label` of the event is extracted to provide a description of the event.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
258,8,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?almaMater
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace <urn:place:Brazil> .
  ?politician rdfs:label ""Eleonora Menicucci de Oliveira"" .
  ?politician dbpedia:educatedAt ?almaMater .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
943,37,train,"Give me the father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }",,4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
871,51,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?parent_name ?parent_birthplace
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?parent_birthplace .
  ?politician rdfs:label ?parent_name .
  ?politician dbpedia:EtonAlumnus .
  ?child a dbpedia:Person ;
            dbpedia:parent ?politician ;
            dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name .
  ?child dbpedia:EtonAlumnus .
  ?child rdfs:parent ?parent .
  ?parent rdfs:label ?parent_name .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
311,3,train,"Who is the associated musical artist, that is an artist, of R.E.M.?",SELECT ?result WHERE { <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:name ""R.E.M."" .
  ?band dbpedia:associatedArtist ?artist_name
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
293,59,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }",,6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
87,0,train,Give me the actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name WHERE {
  ?film a dbpedia:Film ;
           dbpedia:productionCompany ""MGM"" ;
           dbpedia:releaseDate ""2013-07-19"" .
  ?actor a dbpedia:Actor ;
         dbpedia:actedInRole ?film .
  ?actor rdfs:label ?actor_name
}
```",1,1,2,1,1,2,3,28,0,0,7,0,0.0,0
633,16,train,"Give me the parent of the father of Dorothea of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title WHERE {
  ?spouse a dbpedia:Person ;
           dbpedia:spouse ?husband .
  ?husband a dbpedia:Person ;
            rdfs:label ""Francis I, Duke of Lorraine""@en;
            dbpedia:birthPlace ""Lorraine, France"" .
  ?parent a dbpedia:Person ;
           dbpedia:parentOf ?husband .
  ?parent rdfs:label ?parent_name .
  ?parent a dbpedia:NoblePerson .
  ?parent a dbpedia:Royalty
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
905,60,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royal_descendant_name ?royal_descendant_birthplace 
WHERE {
  ?predecessor a dbpedia:Monarch ;
                 dbpedia:monarchy_start ""1270""^^xsd:gYear;
                 dbpedia:successor ?successor .
  ?successor a dbpedia:Monarch ;
               dbpedia:monarchy_end ""1272""^^xsd:gYear;
               dbpedia:successor ?grandson .
  ?grandson a dbpedia:Royalty ;
            dbpedia:birthPlace ?royal_descendant_birthplace .
  ?grandson_spoouse a dbpedia:Person ;
             dbpedia:spouse ?joan_of_bourbon .
  ?joan_of_bourbon rdfs:label ""Joan of Bourbon"" .
  ?predecessor rdfs:label ""Stephen IV of Hungary"" .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,32,train,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v1 <http://dbpedia.org/property/starring> """"@en . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the music video of ""What You Know"" by T.I.
SELECT ?video_title ?director WHERE {
  ?video a dbpedia:MusicVideo ;
           dbpedia:performer dbpedia:P141 . # Assuming P141 is the DBpedia URI for T.I.
  ?video rdfs:label ?video_title .
  ?director a dbpedia:FilmDirector ;
            dbpedia:directed ?video .
  ?video rdfs:label ""What You Know"" . # Exact match required
}

# Query to find details about the album ""What You Know"" by T.I.
SELECT ?album_name ?artist WHERE {
  ?album a dbpedia:Album ;
           dbpedia:artist ?artist .
  ?album rdfs:label ""What You Know"" . # Exact match required
  ?artist rdfs:label ""T.I."" .
}
```",4,4,5,2,2,3,3,71,0,0,10,0,0.0,0
78,2,train,Give me the band member of The Alan Parsons Project.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX musicbrainz: <http://musicbrainz.org/ns#>

SELECT ?band_name ?band_members
WHERE {
  ?band a musicbrainz:Band ;
         musicbrainz:activeYears ""1974-1987"" .
  ?band_name rdfs:label ?band_name .
  ?band_members a musicbrainz:BandMember ;
             musicbrainz:role ""Musician"" ;
             musicbrainz:joined ""1974-07-07T00:00:00Z""^^xsd:date .
  ?band_members rdfs:label ?band_members_name
}
```",1,1,2,1,1,2,3,28,0,0,17,0,0.0,0
609,0,train,Give me the birth place of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Vince Gilligan"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
905,54,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?wife_name ?wife_title
WHERE {
  ?charles_I a dbpedia:Person ;
               dbpedia:birthDate ""1608-05-20"" ;
               dbpedia:deathDate ""1655-08-17"" ;
               dbpedia:spouse ?wife .
  ?wife a dbpedia:Person ;
         dbpedia:title ?wife_title .
  FILTER (lang(?charles_I) = ""en"")  # Assuming English language for simplicity
}
```

This query looks for Charles I's spouse and their title, filtering for English language results.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,14,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?grandchild_spouse_name ?grandchild_birthplace
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:father ?prince .
  ?prince a dbpedia:Person ;
           rdfs:label ""Ernst August of Brunswick-Wolfenbüttel"" .
  ?child rdfs:child ?grandchild .
  ?grandchild a dbpedia:Person ;
            dbpedia:birthPlace ?grandchild_birthplace .
  ?grandchild rdfs:spouse ?grandchild_spouse_name
}
```

### Completed",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
414,7,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX NobelPrize: <http://dbpedia.org/ontology/NobelPrize>

SELECT ?institution_name ?show_name
WHERE {
  ?institution a dbpedia:EducationalInstitution ;
               dbpedia:awardedNobelPrize [ rdf:type NobelPrize:NobelPrizeInPhysics ] .
  ?institution rdfs:label ?institution_name .
  ?show a dbpedia:TelevisionShow ;
           dbpedia:hasHost ?institution_name .
  ?show rdfs:label ?show_name
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
80,61,train,"Give me the professional in the alter ego of the series of The Golden Master and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },,6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
668,13,train,Give me the professional in the profession of Rod Argent.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?professional WHERE {
  ?person a dbpedia:Musician ;
  dbpedia:associatedBandMember ?bandmember .
  ?bandmember rdfs:label ?bandLabel .
  ?bandLabel hasValue ""Rod Argent"" .
}",2,2,3,2,1,3,3,71,0,0,45620,0,0.0,0
756,3,train,"Give me the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?season_name ?team_seasons WHERE {
  ?season dbpedia:seasonType dbpedia:Football_Saison ;
            dbpedia:seasonYear 2007 .
  ?team a dbpedia:Sports_Team ;
         dbpedia:type dbpedia:Football_Team ;
         dbpedia:league ?league .
  ?league rdfs:label ""2. Bundesliga"" .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
39,27,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name ?band_name
WHERE {
  ?musician a dbpedia:Musician ; dbpedia:name ?birth_name .
  ?birth_name ns:givenName 'Bob' .
  ?musician dbpedia:associatedBand ?band_name .
}
",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
37,4,train,Give me the birthplace of Scott LaFaro and birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthplace_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?birthplace_name
}
```",2,2,3,1,2,2,2,9,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
103,19,train,"Give me the professional in Actor and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?role_in_movie ?role_in_show
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:hasRoleInFilm ?role_in_movie ;
         dbpedia:hasRoleInTelevision ?role_in_show .
  ?actor rdfs:label ?actor_name .
  ?movie rdf:type dbpedia:Film;
           dbpedia:mainActor ?actor .
  ?tv_show rdf:type dbpedia:TelevisionShow;
               dbpedia:star ?actor .
  ?actor rdfs:label ?actor_name .
  FILTER ( ?role_in_movie = ""Richard E. Grant"" )
}
```",3,4,4,2,2,3,3,71,0,0,24,0,0.0,0
769,13,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Tony Hollings' birth date
SELECT ?hollings_birthdate WHERE {
  ?hollings dbpedia:birthDate ?hollings_birthdate .
  ?hollings rdfs:label ""Tony Hollings"" . 
}

# Step 2: Query for individuals matching the roles and birthdate
SELECT ?role1_name ?role1_description ?role2_name ?role2_description ?role3_name ?role3_description ?role4_name ?role4_description
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthDate ?hollings_birthdate ;
           rdfs:label ?name .
  ?person dbpedia:role dbpedia:Athlete ?role1 .
  ?person dbpedia:role dbpedia:SoccerPlayer ?role2 .
  ?person dbpedia:role dbpedia:SportsManager ?role3 .
  ?person dbpedia:role dbpedia:SoccerManager ?role4 .
}
```",3,7,4,3,1,3,2,20,0,0,6,0,0.0,0
392,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?politician_name ?politician_birthplace
WHERE {
  ?politician a dbpedia:Politician ;
             dbpedia:birthPlace ?politician_birthplace .
  ?politician rdfs:label ?politician_name
}
```",1,1,2,1,1,2,2,9,754,202669,97693,0.003706562188149816,0.007658943390860057,0.0049955278762381155
816,24,train,Give me the parent of the professional in Photographer and parent of Doon Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_category WHERE {
  ?profession a dbpedia:Occupation ;
               dbpedia:label ""Photographer"" .
  ?person a dbpedia:Person ;
           dbpedia:birthDate ""1932-04-03"" ; # Placeholder birth date for Doon Arbus
           dbpedia:hasParent ?parent_of_doon .
  ?parent_of_doon a dbpedia:Person ;
                 dbpedia:label ?parent_category .
}
```

This query selects the parent category (`?parent_category`) of the profession ""Photographer"" and also finds the parent of Doon Arbus, assuming she was born on April 3, 1932.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
293,14,train,Give me the person born as the birth name of Ann Sothern.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Ann Sothern""@en .
  ?person dbpedia:birthName ?birth_name .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
871,41,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?queen_elizabeth_ii_parent_name ?king_george_vi_parent_name ?earl_of_derby_parent_name
WHERE {
  ?queen_elizabeth_ii a dbpedia:Person ;
                    dbpedia:awardedItem dbpedia:Commander_of_the_Royal_Victorian_Order .
  ?king_george_vi a dbpedia:Person ;
                  dbpedia:parent ?queen_elizabeth_ii ;
                  dbpedia:brother ?earl_of_derby .
  ?earl_of_derby a dbpedia:Person ;
                 dbpedia:title ""16th Earl of Derby"" .
  ?king_george_vi rdfs:label ?king_george_vi_parent_name .
  ?queen_elizabeth_ii rdfs:label ?queen_elizabeth_ii_parent_name
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
198,45,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war_name ?amasa_tracy_birthday ?quincy_adams_gillmore_role
WHERE {
  ?amasa_tracy a dbpedia:Person ;
               dbpedia:birthPlace [dbo:isPartOfLocation ""United States""] ;
               dbpedia:deathDate ""1850-08-05"" .
  ?war a dbpedia:Conflict ;
         dbpedia:startDate ""before 1850-08-05"" ;
         dbpedia:endDate ""after 1850-08-05"" .
  ?war dbo:involvedPerson ?amasa_tracy .
  ?quincy_adams_gillmore a dbpedia:Person ;
                       dbpedia:roleInConflict ?quincy_adams_gillmore_role .
}
```

This query will search for a conflict (war) that involved Amasa Tracy, who was born in the United States and died on August 5, 1850. Additionally, it looks for a role in this conflict attributed to Quincy Adams Gillmore. The results will provide the name of the war, the birthdate of Amasa Tracy, and the role of Quincy Adams Gillmore if any.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
782,16,train,"Give me the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthday ""1945-03-30"" ;
            dbpedia:occupation dbpedia:musician .
  ?person rdfs:label ?artist_name .
  ?person dbpedia:birthPlace ?birthplace
}
```",2,3,3,2,1,3,3,71,0,0,61,0,0.0,0
347,27,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?father .
  ?father a dbpedia:Person ;
            rdfs:label ""Maria Anna of Bavaria"" .
  ?child2 a dbpedia:Person ;
           dbpedia:parent ?child .
  ?child a dbpedia:ChildOf ?child2 .
  ?grandchild a dbpedia:Person ;
             dbpedia:parent ?child2 .
  ?grandchild rdfs:label ?grandchild_name .
  ?child rdfs:label ?child_name .
  ?grandchild rdfs:label ?royalty_status
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
871,59,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardee_parent_name ?politician_office_holder_name
WHERE {
  ?awardee a dbpedia:Person ; dbpedia:award ""Rodney Lees award"" .
  ?awardee_parent a dbpedia:Person ; foaf:parent ?awardee .
  ?politician_office_holder a dbpedia:OfficeHolder ;
                             dbpedia:office dbpedia:Earldom_of_Derby ;
                             rdfs:label ?politician_office_holder_name .
  ?earl_of_derby a dbpedia:Politician ; foaf:parent ?politician_office_holder .
  ?awardee_parent foaf:knows ?earl_of_derby .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
943,39,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?grandfather_name ?grandfather_title ?child_name ?child_title
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ?parent_name ;
           dbpedia:hasChild ?child .
  ?parent rdfs:label ?parent_title .
  ?grandfather a dbpedia:Person ;
             rdfs:label ?grandfather_name ;
             dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
              rdfs:label ?grandparent_name ;
              dbpedia:hasChild ?parent .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
737,37,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild_name ?grandchild_birthplace
WHERE {
  ?parent1 a dbpedia:Person ;
           dbpedia:parent ?grandparent1 .
  ?grandparent1 a dbpedia:Person ;
                 dbpedia:parent Alexander_of_Wuerttemberg_1804_1881 .

  ?parent2 a dbpedia:Person ;
           dbpedia:parent ?grandparent2 .
  ?grandparent2 a dbpedia:Person ;
                 dbpedia:parent Archduchess_Margarete_Sophie_of_Austria .

  ?grandchild1 a dbpedia:Person ;
               dbpedia:parent ?parent1 .
  ?grandchild2 a dbpedia:Person ;
               dbpedia:parent ?grandchild1 .
  ?grandchild3 a dbpedia:Person ;
               dbpedia:parent ?grandchild2 .
  ?grandchild3 rdfs:label ?grandchild_name .
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,17,train,"Give me the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?event_name ?show_name
WHERE {
  ?event dbpedia:Event ;
         dbpedia:name ?event_name .
  ?show dbpedia:TelevisionShow ;
          dbpedia:name ?show_name .
  ?event rdfs:label ?event_name .
  ?show rdfs:label ?show_name .
  ?event_name = ""Battle of Vienna, 1683"" .
  ?show_name = ""Battle of Vienna""
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,38,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?rodrargent_profession ?joey_ramone_birthname
WHERE {
  ?rodrargent a dbpedia:Artist ;
               dbpedia:occupation ?rodrargent_profession .
  ?joey_ramone a dbpedia:Person ;
             dbpedia:name ""Joey Ramone"" ;
             dbpedia:birthName ?joey_ramone_birthname .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
668,58,train,"Give me the associated musical artist of $pacely and professional in the profession of Rod Argent and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birthplace
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:associatedBandMember ?pacely ;
            dbpedia:birthPlace ?birthplace .
  ?artist rdfs:label ?artist_name .
  FILTER (lang(?artist_name) = ""en"")  # Assuming the name is in English
  FILTER (str(?birthplace) = ""Central Region, Ghana"")  # Specific birth place
}
```

This query will search for a musician associated with Pacely who is in the profession of Rod Argent and was born in the Central Region of Ghana. The results will provide the artist's name (`?artist_name`) and birth place (`?birthplace`).",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,3,train,Give me the designer of Aston Martin AMR1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?designer_name ?designer_company
WHERE {
  ?designer a dbo:Person ;
            dbo:workFor dbpedia:Company ;
            dbpedia:name ?designer_name .
  ?designer_company a dbpedia:Company ;
                  rdfs:label ""Aston Martin"" .
  ?designer rdf:type dbo:Engineer .
  ?designer rdfs:seeAlso ?amr1_design .
  ?amr1_design a dbo:CarModel ;
                 dbpedia:name ""AMR1"" .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
140,13,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander_name
WHERE {
  ?charge a dbo:Battle ;
            dbpedia:name ""Pickett's Charge"" .
  ?charge dbpprop:conflict dbpedia:American_Civil_War .
  ?commander a dbo:MilitaryPerson ;
             dbpedia:role ""Commander of Pickett's Charge"" .
  ?commander rdfs:label ?commander_name
}
```",3,4,4,3,1,3,2,20,0,0,42,0,0.0,0
270,5,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?predecessor_name ?predecessor_birthplace 
WHERE { 
  ?politician a dbpedia:Politician ; 
  dbpedia:birthPlace ?birthplace . 
  ?politician rdfs:label ?politician_name . 
  ?politician dbpedia:precededBy ?predecessor . 
  FILTER ( ?birthplace = ""Mississippi"" ) . 
  BIND ( ?politician_name as ?predecessor_name ) 
}",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
816,4,train,"Give me the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviedb: <http://www.moviedb.org schema/>

SELECT ?movie_title
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthDate ""1924-10-23"" ;
         dbpedia:name ""Herschel Bernardi"" .
  ?actor dbo:movies ?movie .
  ?movie a moviedb:Film ;
         moviedb:title ?movie_title
}
```",1,2,2,1,1,3,3,71,0,0,13,0,0.0,0
198,50,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . },"SELECT ?recipient_name ?recipient_birthplace
WHERE {
  ?recipient a dbpedia:Person ;
            dbpedia:award dbpedia:Quincy_Admits_Gillmore_Award .
  ?recipient rdfs:label ?recipient_name .
  ?henry_clay_lewis a dbpedia:Person ;
                    dbpedia:birthPlace ?henry_clay_lewis_birthplace .
  ?henry_clay_lewis rdfs:label ""Henry Clay Lewis"" .
  FILTER (lang(?henry_clay_lewis_birthplace) = ""en"" AND type(?henry_clay_lewis_birthplace) = dbpedia:Settlement)
}",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
609,14,train,Give me the birth place of the author of El Deafo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_birthplace
WHERE {
  ?author a dbpedia:Person ;
    dbpedia:birthPlace ?author_birthplace .
  ?author rdfs:label ""Cece Bell"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,23,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_child_name ?royalty_parent_name 
WHERE { 
  ?royalty_parent a dbpedia:Royalty ; 
  dbpedia:parent ?royalty_parent_name . 
  ?royalty_child a dbpedia:Person ; 
  dbpedia:childOf ?royalty_parent ; 
  rdfs:label ?royalty_child_name . 
}",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
375,15,train,Give me the entity in the birth place of Yamaza Enjirō and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?common_birthplace WHERE {
  ?governor dbpedia:birthPlace ?governor_birthplace.
  ?politician dbpedia:birthPlace ?politician_birthplace.
  ?common_birthplace rdf:type dbpedia:Location;
                   dbpedia:name ?common_name .
  ?governor rdfs:label ""Yamaza Enjirō"" .
  ?politician rdfs:label ""Hashiba Hidekatsu"" .
  ?common_birthplace ns:identifier ""Japan"" .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
905,42,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_name ?royalty_relationships
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:spouse ?spouse_of_father ;
               dbpedia:child ?child .
  ?child rdfs:label ?royalty_name .
  ?child dbpedia:birthPlace ""Hungary"" .
  ?grandparent rdfs:label ""Béla IV of Hungary"" .
  ?spouse_of_father rdfs:label ""Maria Laskarina"" .
  ?child rdfs:label ""Philip I, Prince of Taranto"" .
  ?child dbpedia:father ""Charles Martel of Anjou"" .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
89,52,train,"Give me the child of the parent of the child of Minye Kyawswa and predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:parent ?minye_kyawswa ;
            dbpedia:child ?myat_hpone_pyo .
  ?myat_hpone_pyo a dbpedia:Person ;
               dbpedia:sibling ?another_sibling_of_myat_hpone_pyo .
  ?another_sibling_of_myat_hpone_pyo a dbpedia:Person ;
                dbpedia:parent ?minye_kyawswa .
  ?royalty rdfs:label ?royalty_name
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,44,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?manager_name ?manager_birthplace 
WHERE { 
  ?manager a dbpedia:Person ; 
    dbpedia:birthDate '1979-11-03' . 
  ?manager rdfs:label ?manager_name . 
  ?manager dbpedia:pseudonym 'Kevin Keegan' . 
}",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
633,13,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_spouse_name 
WHERE {
  ?child a dbpedia:Royalty ; dbpedia:name 'Antoine, Duke of Lorraine' .
  ?child dbpedia:hasParent ?parent .
  ?parent a dbpedia:Noble ; dbpedia:spouse ?parent_spouse_name .
}
",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
39,23,train,Give me the professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv: <http://purl.org/csw/schemas/tv#>

SELECT ?producer_name ?producer_role
WHERE {
  ?producer a tv:Person ;
            tv:role ?producer_role .
  ?producer rdfs:label ?producer_name .
  FILTER (lang(?producer_name) = ""en"")  # Search for English names
}
```",3,3,4,3,1,3,3,71,0,0,46017,0,0.0,0
905,55,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?charles_father_name ?charles_father_title ?charles_father_birthplace ?mary_burgundy_name ?mary_burgundy_title ?charles_v_name ?charles_v_title ?charles_v_birthplace
WHERE {
  ?charles a dbpedia:Person ;
           dbpedia:father ?charles_father .
  ?charles_father a dbpedia:Person ;
               dbpedia:title ?charles_father_title ;
               dbpedia:birthPlace ?charles_father_birthplace .
  ?mary a dbpedia:Person ;
          dbpedia:spouse ?charles_father .
  ?mary_father a dbpedia:Person ;
             dbpedia:title ?mary_burgundy_title ;
             dbpedia:birthPlace ?mary_burgundy_birthplace .
  ?charles_v a dbpedia:Person ;
            dbpedia:father ?charles_father .
  ?charles_v a dbpedia:Royalty .
  ?charles_v rdfs:father ?charles_father
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,30,train,Give me the associated musical artist of $pacely and professional in Musician and person born as the birth name of Joey B.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name ?joey_b_birthname
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthName ?joey_b_birthname .
  ?artist rdfs:label ?musical_artist_name .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,40,train,Give me the birth place of Cece Bell and birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",5,5,6,3,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
595,12,train,Give me the author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name WHERE {
  ?book dbpedia:hasAuthor ?author_name .
  ?book rdfs:label ""Back to Work"" .
}

SELECT ?commander_name WHERE {
  ?event dbpedia:involves ?commander_name .
  ?event rdfs:label ""Third Taiwan Strait Crisis"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,15,train,"Give me the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name WHERE {
  dbo:characterName ?character_name ""Kent Allard"" ;
  dbo:alterEgoName ?alter_ego_name .
}
",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
609,20,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?vince_gilligan_birthplace ?governor_name
WHERE {
  ?vince_gilligan a dbpedia:Person ;
                    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor a dbpedia:Politician ;
               dbpedia:office ""Governor of Virginia"" ;
               dbpedia:birthPlace ?governor_birthplace .
  ?vince_gilligan rdfs:label ""Vince Gilligan"" .
  ?governor rdfs:label ?governor_name
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
737,61,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_name ?royalty_relationship
WHERE {
  ?grandchild a dbpedia:Person ;
               dbpedia:parent ?child .
  ?child a dbpedia:Person ;
          dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:parent ?greatGrandparent .
  ?greatGrandparent a dbpedia:Royalty .

  ?child rdfs:label ?child_name .
  ?grandchild rdfs:label ?royalty_name .
  ?child rdfs:label ?child_name .
  ?grandparent rdfs:label ?parent_name .
  ?greatGrandparent rdfs:label ?royalty_name
}
```

### Completed",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
531,32,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?politician_name ?office_place
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:country ""Central African Republic"" .
  ?politician rdfs:label ?politician_name .
  ?office a dbpedia:Residence ;
             dbpedia:locatedIn ?office_place .
  ?politician foaf:knows ?office .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
905,30,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_parent_name ?royalty_descendant_name
WHERE {
  ?charles_martel_of_anjou a dbpedia:Person ;
    dbpedia:parent ?royalty_parent_name .
  ?bela_IV_of_hungary a dbpedia:Person ;
    dbpedia:child ?charles_martel_of_anjou .
  ?bela_IV_of_hungary rdfs:label ""Béla IV of Hungary""@en .
  ?charles_martel_of_anjou rdfs:label ""Charles Martel of Anjou""@en .
  ?charles_martel_of_anjou dbpedia:spouse ?spouse_name .
  ?charles_ii_of_neapoli a dbpedia:Person ;
    dbpedia:spouse ?spouse_name ;
    rdfs:label ""Charles II of Naples""@en .
}
",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,0,train,Give me the birthplace of Ekaterina Zaharieva.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?player a dbpedia:Person ;
           rdfs:label ""Ekaterina Zaharieva""@en .
  ?player dbpedia:birthPlace ?birthplace
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
375,13,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:deathDate ?deathDate .
  ?author rdfs:label ?author_name .
  FILTER (STRFTER(?deathDate, ""2020-06-18"") AND 
          (?author a dbpedia:Artist ) AND 
          (?author a dbpedia:MusicalArtist) )
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
89,11,train,Give me the child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""Min Hla Htut of Pyakaung"" .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
203,54,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?william_bayne_name ?william_bayne_role
WHERE {
  ?william_bayne a dbpedia:Person ;
                 dbpedia:birthDate ""1769-04-13"" ;
                 rdfs:label ?william_bayne_name .
  ?william_bayne dbpedia:hasMilitaryRole [
                    a dbpedia:MilitaryRole;
                    dbpedia:roleName ?william_bayne_role
                  ] .
  ?william_bayne_role rdfs:label ""Commander"" .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
143,4,train,Give me the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Cynthia Morgan""@en .
  ?person foaf:name ?birth_name .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
687,28,train,"Give me the player in Sergio Agüero and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?agueroteam ?paimarteam ?birthday_athlete
WHERE {
  ?sergio_aguero a dbpedia:FootballPlayer ;
                 dbpedia:club ?agueroteam .
  ?pablo Aimar a dbpedia:FootballPlayer ;
               dbpedia:club ?paimarteam .
  ?birthday_athlete a dbpedia:Athlete ;
                  dbpedia:birthday ""1955-02-22"" .
  ?agueroteam rdfs:label ?agueroteam_label .
  ?paimarteam rdfs:label ?paimarteam_label .
  FILTER (?agueroteam_label = ?paimarteam_label)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
943,34,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?son_name
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:birthPlace ?king_birthplace .
  ?king rdfs:label ""Baeda Maryam I""@en .
  ?father a dbpedia:Person ;
          dbpedia:parent ?king .
  ?son a dbpedia:Person ;
           dbpedia:child ?son .
  ?son rdfs:label ?son_name .
  ?father rdfs:label ?father_name .
  OPTIONAL { ?king foaf:father ?father }
  OPTIONAL { ?king foaf:child ?son }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
398,10,train,Who is the writer of the work of Aleksandr Filimonov?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?author_name WHERE {
  ?painter a dbpedia:Artist ;
            dbpedia:birthPlace ""Russia"" ;
            rdfs:label ""Aleksandr Filimonov""@en .
  ?author a dbpedia:Person ;
           rdfs:label ?author_name .
  ?painter rdfs:seeAlso ?author .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
731,8,train,Give me the war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander_name WHERE {
  ?commander a dbpedia:Person ;
             rdfs:label ?commander_name ;
             dbpprop:conflict ""Sinking of the Prince of Wales and Repulse"" .
}
```",2,2,3,2,1,3,2,20,0,0,12,0,0.0,0
159,35,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . }","Given the above reasoning, it's clear that Jean Baptiste, Comte d'Arco does not fit the criteria of being a commander in the Russo-Polish War who is also a television show and a societal event. Therefore, constructing a SPARQL query for this specific scenario doesn't align with historical facts.

However, if we were to adjust the question to look for a commander from the Russo-Polish War who was also known as a character in a television show or a significant societal event, we would need to reframe our approach. Since Jean Baptiste, Comte d'Arco does not meet these criteria based on historical records, the query would return no results under these conditions.",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
263,13,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?father_birthplace
WHERE {
  ?mary a dbpedia:Person ;
         dbpedia:hasFather ?father .
  ?father a dbpedia:Person ;
          dbpedia:name ""William Gayner"" ;
          dbpedia:birthPlace ?father_birthplace .
  ?father_birthplace a dbpedia:Region ; # Assuming Mississippi is a region
                        dbpedia:country ""United States"" . # Assuming United States is the country
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
119,11,train,Give me the office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president_name ?president_office
WHERE {
  ?president a dbpedia:OfficeHolder ;
             dbpedia:office dbpedia:President_of_Galicia ;
             dbpedia:term_start ""2009-11-16"" .
  ?president rdfs:label ?president_name .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
158,5,train,"Give me the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country_name
WHERE {
  ?emperor a dbpedia:Monarch ;
            dbpedia:monarchy ?monarchy .
  ?monarchy rdfs:label ?country_name .
  ?emperor rdfs:label ""Nicholas II of Russia"" .
}",1,2,2,1,1,2,3,28,0,0,3,0,0.0,0
531,11,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?residence_name WHERE {
  ?minister a dbpedia:Politician ;
            dbpedia:office ""Minister of the Interior (Spain)"" ;
            dbpedia:term_start ""2011-01-01"" ;
            dbpedia:term_end ""2018-12-31"" .
  ?minister rdfs:label ?residence_name
}
```",2,2,3,2,1,3,3,71,0,0,375,0,0.0,0
295,6,train,Give me the native of Birmingham and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?writer_name ?birthplace
WHERE {
  ?writer a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?writer rdfs:label ""Ian Levine""@en .
}
```",2,2,3,1,2,3,2,20,0,2,1,0.0,0.0,0
668,6,train,Give me the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musician_name ?musician_profession
WHERE {
  ?musician a dbpedia:Person ;
            dbpedia:occupation ?musician_profession .
  ?musician rdfs:label ?musician_name
}
```",1,1,2,1,1,3,3,71,0,548539,6,0.0,0.0,0
628,33,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?florida_artist_name ?florida_artist_birthname
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:birthPlace Florida ;
            rdfs:label ?florida_artist_name .
  ?bandMember a dbpedia:BandMember ;
             dbpedia:associatedBand ?artist ;
             rdfs:label ?band_member_name .
  ?artist foaf:name ?florida_artist_name .
  ?bandMember foaf:name ?band_member_name .
}
```

This query will retrieve the band member's name and the musical artist's birth name from Florida. The exact results depend on the data available in DBpedia.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,47,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?recipient_name
WHERE {
  ?recipient a dbpedia:Person ;
            dbpedia:awardedWith dbpedia:Medal_of_Honor ;
            dbpedia:awardedWith dbpedia:Quincy_Admans_Gillmore_Award
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
103,31,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:birthName ""Richard Grant Esterhuysen"" .
  ?actor foaf:role [ a dbpedia:TelevisionShowRole ] .
}
```",4,5,5,3,2,3,3,71,0,0,24,0,0.0,0
288,0,train,Give me the native of Lahore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ""Lahore"" .
}
```",1,1,2,1,1,2,2,9,0,0,881,0,0.0,0
203,23,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name
WHERE {
  ?fighter_pilots rdf:type dbpedia:Fighter_Aircrew .
  ?fighter_pilots foaf:name ?fighter_name .
  FILTER (STRSTARTS(?fighter_name, 'Triple') AND STRLEN(?fighter_name) > 3)
  
  ?commander a dbpedia:Person ;
            dbpedia:role dbpedia:Commander;
            foaf:name ?commander_name .
  
  ?fighter_pilots rdf:type dbpedia:Aircraft_Fighter .
  ?fighter_pilots foaf:member ?fighter_name .
  
  ?commander foaf:member ?fighter_pilots
}
```",3,5,4,3,1,3,3,71,0,0,113,0,0.0,0
557,18,train,Give me the professional in  and producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?producer_occupation
WHERE {
  ?producer a dbpedia:Person ;
            dbpedia:role dbpedia:Film_Producer .
  ?producer rdfs:label ?producer_name .
  ?producer dbpedia:birthDate ?producer_birthdate .
  FILTER (STRSTARTS (?producer_birthdate, ""1937"")) 
  AND (STRSTARTS (?producer_birthdate, ""1938""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
609,33,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?vince_gilligan_birthplace ?governor_name
WHERE {
  ?vince_gilligan a dbpedia:Person ;
                    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor a dbpedia:Politician ;
               dbpedia:birthPlace ?governor_birthplace .
  ?governor birthPlace rdf:type dbpedia:AdministrativeDivision ;
                 dbpedia:name ""Mississippi"" .
  ?vince_gilligan rdfs:label ""Vince Gilligan"" . 
  ?governor rdfs:label ?governor_name
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
38,3,train,"Give me the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?book_name ?author_name ?country_of_origin
WHERE {
  ?book a dbpedia:Book ;
         dbpedia:author ?author .
  ?author rdfs:label ?author_name .
  ?book dbpedia:countryOfOrigin ?country_of_origin .
  ?country_of_origin rdfs:label ""United States"" .
  ?author rdfs:label ""Joe Biden""
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
687,59,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?soccer_player_status ?film_name ?manuel_huerga_work
WHERE {
  ?actor a dbpedia:Person ; dbpedia:birthDate ?actor_birthdate .
  ?actor dbpedia:role dbpedia:Actor ; dbpedia:participatedIn ?film .
  ?film a dbpedia:Film ; dbpedia:director ?manuel_huerga .
  ?soccer_player a dbpedia:SoccerPlayer .
  ?actor rdfs:label ?actor_name .
  ?film rdfs:label ?film_name .
  ?soccer_player rdfs:label ?soccer_player_status
}
",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,30,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members ?curran_name ?curran_bio
WHERE {
  ?band a dbpedia:Band ;
            dbpedia:hasMember ?band_member .
  ?band_member a dbpedia:Person ;
               rdfs:label ?band_member_label .
  ?band_member rdfs:label ?band_name .
  ?band_member foaf:name ?curran_name .
  ?curran a dbpedia:Artist ;
           rdfs:label ?curran_name .
  ?curran foaf:name ""Nicholas Michael Curran"" .
  ?band_member = ?curran
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
58,16,train,Give me the producer of the movie with  and spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?linda_sue_cobb_spouse
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ""Mississippi, United States"" ;
           rdfs:label ""Cece Bell""@en .
  ?movie a dbpedia:Film ;
          dbpedia:productionCompany ?producer_name ;
          dbpedia:mainCharacter ?author .
  ?linda_sue_cobb rdfs:label ""Linda Sue Cobb""@en .
  ?linda_sue_cobb.spouse ?linda_sue_cobb_spouse
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
531,18,train,Give me the office of Mariano Rajoy and office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office1_name ?office1_description ?miguel_maura_office ?miguel_maura_description ?madrid_tenants
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolder ?office .
  ?office a dbpedia:Office ;
            rdfs:label ?office_name .
  FILTER (lang(?office_name) = ""es"")  # Only consider Spanish offices
  
  ?politician rdfs:label ?politician_name .
  BIND (""Mariano Rajoy"" AS ?politician_name)
  
  ?office rdfs:label ?office_name .
  BIND (""Miguel Maura"" AS ?politician_name)
  
  ?office rdfs:subPropertyOf dbpedia:OfficeHolder .
  
  ?madrid_tenants a dbpedia:Politician ;
                  dbpedia:birthPlace ""Madrid"" .
  FILTER (lang(?madrid_tenants) = ""es"")  # Only consider Madrid-born politicians
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
39,53,train,"Give me the professional in  and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?producer_role
WHERE {
  ?producer a dbpedia:Person ;
            dbpedia:role dbpedia:MusicProducer .
  ?producer dbpedia:birthPlace ""Philippines""^^xsd:string ;
             dbpedia:givenName ?producer_name ;
             dbpedia:surname ?surname .
  ?robert_lamar_thompson a dbpedia:Person ;
                       dbpedia:birthPlace ""United States""^^xsd:string ;
                       rdfs:label ""Robert Lamar Thompson""@en;
                       dbpedia:role dbpedia:MusicArtist .
  ?producer dbpedia:worksWith ?robert_lamar_thompson .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
246,0,train,Give me the parent of Princess Sara bint Faisal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father_name WHERE {
  ?princess a dbpedia:Person ;
            dbpedia:birthDate ""1932-10-15"" ;
            dbpedia:givenName ""Sara"" ;
            dbpedia:surname ""bint Faisal"" ;
            dbpedia:parent ?father .
  ?father a dbpedia:Person ;
          dbpedia:name ?father_name .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
668,1,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musician_name ?musician_profession
WHERE {
  ?musician a dbpedia:Musician ;
            dbpedia:occupation ?musician_profession .
}
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
943,46,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_parent ?siege_event
WHERE {
  ?royalty a dbpedia:Royalty ;
            dbpedia:parent ?royalty_parent .
  ?royalty rdfs:label ?royalty_name .
  ?siege_event a dbpedia:Siege ;
                  dbpedia:location ""Mukha"" .
  ?royalty dbpedia:partOfEvent ?siege_event
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
943,36,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"SELECT ?child_name ?royalty_status ?office_holder_title
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:parent ?parent1 .
  ?parent1 a dbpedia:Person ;
            dbpedia:name ""Dawit I"" ;
            dbpedia:role dbpedia:Emperor_of_Ethiopia .
  ?child dbpedia:parent ?parent2 .
  ?parent2 a dbpedia:Person ;
            dbpedia:name ""Baeda Maryam I"" .
  ?child rdfs:label ?child_name .
  ?child a dbppro:offices_held ?office_holder_title .
  FILTER (regex(str(?office_holder_title), 'Emperor|King|Prince|Duke'))  # Filtering for royalty titles
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
68,17,train,"Give me the father of Catherine of Austria, Queen of Portugal and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name
WHERE {
  ?queen a dbpedia:Person ;
         dbpedia:birthDate ""1485"" ;
         dbpedia:name ""Catherine of Austria, Queen of Portugal"" .
  ?queen dbpedia:parent ?father .
  ?father a dbpedia:Person ;
          rdfs:label ?father_name .
  FILTER (lang(?father_name) = ""en"")  # Ensure the name is in English
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,31,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Assuming Marty Pollio's birthday is April 1, 1970 and Sergio Agüero's birthday is June 6, 1986
WHERE {
  ?athlete a dbpedia:Athlete ;
            dbpedia:birthday ?date .
  ?date rdfs:label ""1970-04-01"" . # Marty Pollio's birthday
  ?date rdfs:label ""1986-06-06"" .    # Sergio Agüero's birthday
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
89,27,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_predecessor_name ?royalty_predecessor_title
WHERE {
  ?spouse a dbpedia:Person ; dbpedia:partner ?saw_min_phyu .
  ?child a dbpedia:Person ; dbpedia:parent ?spouse ; dbpedia:birthDate ?child_birth_date .
  ?royalty a dbpedia:Royalty ; dbpedia:parent ?child .
  FILTER (LANG(?child_birth_date) = 'my' ) 
}
",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
628,35,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology#>

SELECT ?place_name ?isRegion ?isState ?isSettlement
WHERE {
  ?award dbpedia:awardedBy ?artist .
  ?artist rdfs:label ""Bobby Shmurda""@en .
  ?artist dbo:musicalGenre ""Hip hop"" .
  ?place a dbpedia: Settlement ;
            dbpedia:locatedIn ?location .
  ?location a dbpedia:Region ;
             dbpedia:isPartOf ?state .
  ?state a dbpedia:State ;
           rdfs:label ?state_name .
  ?place rdfs:label ?place_name .
  ?state ?isLocationOf ?place .
  FILTER (lang(?state_name) = ""en"" )
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
80,4,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviedb: <http://www.moviedb.org schema/>

SELECT ?movie_title WHERE {
  ?movie a moviedb:Film ;
           moviedb:productionCompany ?production_company .
  ?production_company rdfs:label ?production_company_label .
  FILTER (lang(?production_company_label) = ""en"")  # Assuming English language
  ?movie dbpedia:hasActor ?actor .
  ?actor rdfs:label ?actor_name .
  ?actor_name LIKE '%YourDetailHere%'  # Replace 'YourDetailHere' with the specific detail you're looking for
}
```",1,1,2,1,1,3,3,71,0,0,39790,0,0.0,0
295,9,train,"Give me the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicalWorkLabel ?artistName
WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:birthDate ""1987-04-29"" .
  ?artist rdfs:label ?artistName .
  ?musicalWork a dbpedia:MusicAlbum ;
               dbpedia:artist ?artist .
  ?musicalWork rdfs:label ?musicalWorkLabel
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
756,55,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?manager_name ?manager_birthplace ?letsch_player_name ?letsch_team ?letsch_season ?bochum_season 
WHERE { 
  ?letsch a dbpedia:Person ; 
    dbpedia:givenName ?letsch_player_name ; 
    dbpedia:birthPlace ?letsch_birthplace . 
  ?bochum a dbpedia:SoccerClub ; 
    dbpedia:name ?bochum_name ; 
    dbpedia:season ?bochum_season . 
  ?letsch dbr:playsFor ?bochum . 
  ?manager a dbpedia:Person ; 
    rdfs:label ?manager_name . 
    ?bochum rdfs:member ?manager . 
} 

AND { 
  ?theodor_heuss a dbpedia:Person ; 
    dbpedia:birthPlace <http://dbpedia.org/ontology/Country#Germany> . 
} 
",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
742,6,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ?person_name .
  ?person dbpedia:birthPlace ?birthplace
}
```",2,2,3,1,2,3,2,20,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
412,22,train,"Give me the war of the leader of National Party of Greece and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader_name ?death_place_name
WHERE {
  ?varthalitis a dbpedia:Person ; dbpedia:name ""Antonios Varthalitis"" ; dbpedia:deathPlace ?death_place .
  ?party a dbpedia:PoliticalParty ; dbpedia:name ""National Party of Greece"" ; dbpedia:leader ?leader_name .
  ?leader_name rdfs:label ?leader_name_str .
  ?death_place a dbpedia:Settlement ; dbpedia:name ?death_place_name .
  ?varthalitis dbpedia:memberOf ?party
  ?leader_name_str = ?varthalitis
}
",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
414,9,train,"Give me the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"PREFIX nobel: <http://www.nobelprize.org/nobel_prizes/>
PREFIX location: <http://dbpedia.org/ontology/>

SELECT ?host
WHERE {
  ?award a nobel:NobelPrize ;
         nobel:awardedTo ?recipient .
  ?recipient rdfs:label ""Rainer Weiss""@en .
  ?award location:location ?host .
}",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
633,6,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of Renée of Bourbon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_title
WHERE {
  ?duke a dbpedia:Person ;
         dbpedia:title ""Francis I, Duke of Lorraine"" .
  ?duke dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person ;
            dbpedia:title ""Renée of Bourbon"" .
  ?parent1 a foaf:ParentOf ?duke .
  ?parent2 a foaf:ParentOf ?spouse .
  ?parent1 rdfs:label ?parent_name .
  ?parent2 rdfs:label ?parent_title
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,28,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and reference to  and father of Baeda Maryam I.","SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status ?baeda_father
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?yeshaq .
  ?child rdfs:label ?child_name .
  ?baeda a dbpedia:Person ;
            dbpedia:parent ?child ;
            dbpedia:title ""King"" as ?royalty_status .
  ?baeda rdfs:label ?baeda_name .
  ?child ns:father ?baeda
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
203,58,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?kcb_awardee_name ?kcb_military_force ?bayne_name ?bayne_war
WHERE {
  ?kcb_awardee a dbpedia:Person ;
               dbpedia:awardKCB true .
  ?kcb_awardee rdfs:label ?kcb_awardee_name .

  ?bayne a dbpedia:Person ;
            dbpedia:serveInWar ?bayne_war ;
            dbpedia:navyRank ""Royal Navy officer"" .
  ?bayne rdfs:label ?bayne_name .

  ?war a dbpedia:Event ;
         dbpedia:conflict ""French campaign in Egypt and Syria"" .

  ?kcb_awardee dbpedia:serveInWar ?war .
  ?bayne foaf:wasAboardOf ?ship .
  ?ship a dbpedia:Ship ;
          dbpedia:participatedIn ?war .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
80,21,train,Give me the actor of the movie with  and professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?actor_name ?actor_profession ?movie WHERE {
  ?actor a dbpedia:Person ; dbpedia:occupation ?actor_profession .
  ?actor dbpedia:appearedInMovie ?movie .
  ?actor rdfs:label ?actor_name .
}",3,3,4,2,2,3,3,71,0,0,7802,0,0.0,0
687,60,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?athlete_name ?manager_name ?team_name
WHERE {
  ?athlete a dbpedia:Athlete ; dbpedia:birthday ?pollio_birthday .
  ?manager a dbpedia:SoccerManager ; dbpedia:birthday ?sarmiento_birthday .
  ?athlete rdfs:label ?athlete_name .
  ?manager rdfs:label ?manager_name .
  ?team a dbpedia:SoccerTeam ; dbpedia:hasMember ?athlete .
  ?team2 a dbpedia:SoccerTeam ; dbpedia:hasManager ?manager .
  ?sarmiento_birthday = ?pollio_birthday
}
",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
119,24,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenant_of_compostela ?country_of_quiros
WHERE {
  ?compostela a dbpedia:City ;
               dbpedia:locatedIn dbo:Spain .
  ?quirós a dbpedia:Person ;
            dbpedia:birthPlace dbo:Portugal .
  ?compostela rdfs:label ""Santiago de Compostela"" .
  ?quirós rdfs:label ""Álvaro Quirós"" .
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
143,10,train,Give me the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Cynthia Morgan""@en .
  ?person dbpedia:birthPlace ?birth_place .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
203,49,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?kcb_person_name ?military_force
WHERE {
  ?kcb_person a dbpedia:Person ;
            dbpedia:awardedKCB true ;
            dbpedia:role ""Knight Commander of the Order of the Bath"" .
  ?kcb_person rdfs:label ?kcb_person_name .
  OPTIONAL {
    ?kcb_person dbpedia:militaryServiceMemberOf ?military_force .
    ?military_force a dbpedia:MilitaryConflict ;
                 dbpedia:conflictLabel ""Napoleonic Wars"" .
  }
  OPTIONAL {
    ?kcb_person dbpedia:militaryServiceMemberOf ?military_force .
    ?military_force a dbpedia:MilitaryConflict ;
                 dbpedia:conflictLabel ""Crimean War"" .
  }
  OPTIONAL {
    ?kcb_person dbpedia:militaryServiceMemberOf ?military_force .
    ?military_force a dbpedia:MilitaryConflict ;
                 dbpedia:conflictLabel ""Boer War"" .
  }
}
```

This query looks for individuals who have been awarded the KCB and checks if they were members of a military force involved in any of the conflicts the 30th (Cambridgeshire) Regiment of Foot participated in.",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
23,20,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?roy_barreras_party WHERE {
  ?roy_barreras a dbpedia:Person ;
               dbpedia:birthPlace ""Spain"" ;
               rdfs:label ""Roy Barreras""@en .
}

SELECT ?daniel_galan_country WHERE {
  ?daniel_elahi_galan a dbpedia:Person ;
                      dbpedia:birthPlace ?country ;
                      rdfs:label ""Daniel Elahi Galán""@en .
  FILTER (?country != ""Spain"")  # Exclude Spain as he is not from there
}

SELECT ?gustavo_petro_party WHERE {
  ?gustavo_petro a dbpedia:Person ;
                dbpedia:birthPlace ""Colombia"" ;
                rdfs:label ""Gustavo Petro""@en .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,56,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?gillmore_name ?gillmore_birthplace
WHERE {
  ?gillmore a dbpedia:Person ;
            dbpedia:deathDate ""1850-08-05"" ;
            dbpedia:conflict ""American Civil War"" ;
            dbpedia:medalOfHonor ""Medal of Honor"" .
  ?gillmore rdfs:label ?gillmore_name .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,5,train,Give me the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX movie: <http://www.w3.org/2002/07/movies#>

SELECT ?actor_name
WHERE {
  ?movie a movie:Film ;
            movie:title ""Aladdin (1958 film)"" .
  ?actor a person:Person ;
         dbpedia:roleInMovie ?actor_role .
  ?actor_role a movie:CharacterRole ;
               movie:characterName ""Aladdin"" .
  ?actor rdfs:label ?actor_name
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
414,12,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nobelprize: <http://dbpedia.org/ontology/NobelPrize>

SELECT ?show ?physics_prizewinner_name ?physics_prizewinner_birthplace
WHERE {
  ?physics_prizewinner a nobelprize:NobelPrizeInPhysics ;
                    dbpedia:awardee ?physics_prizewinner_name ;
                    dbpedia:birthPlace ?physics_prizewinner_birthplace .
  ?show rdfs:label ?show_name .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,1,train,Give me the residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence
WHERE {
  ?DougBeattie a dbpedia:Person ;
                dbpedia:birthPlace ns:Northern_Ireland .
  ?DougBeattie foaf:based_near ?residence .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
143,17,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musical_artist_name ?actor_name
WHERE {
  ?cynthia_morgan a dbpedia:Person ;
                    rdfs:label ""Cynthia Morgan""@en;
                    dbpedia:birthName ?cynthia_birthname .
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?actor dbpedia:role ""The Campus Queen""@en .
  ?cynthia_morgan dbpedia:givenName ?cynthia_birthname .
  ?musical_artist_name a dbpedia:Musician ;
                       rdfs:label ?musical_artist_name;
                       dbpedia:associatedWith ?cynthia_morgan .
}
```

This query will search for the musician associated with Cynthia Morgan (birth name) and the actor of ""The Campus Queen."" It uses the `dbpedia:associatedWith` property to link the musician to Cynthia Morgan. The results will provide the names of both the musician and the actor.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
80,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?alter_ego_name WHERE {
  ?character a dbpedia:ComicBookCharacter ;
             dbpedia:mainAlterEgo ?alter_ego_name .
  ?character rdfs:label ""The Shadow""@en
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
80,18,train,Give me the actor of Shelby Oaks and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?actor_name WHERE { ?actor a dbpedia:Person ; dbpedia:role ?role . FILTER (?role = 'Shelby Oaks' ) },3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,51,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name
WHERE {
  ?spouse a dbpedia:Person ;
            dbpedia:name ""Pádraig Ó Briain"" .
  ?mariclare_costello a dbpedia:Person ;
                    dbpedia:name ""Mariclare Costello"" .
  ?child a dbpedia:Person ;
             dbpedia:parent ?spouse .
  ?professional a dbpedia:Person ;
                dbpedia:occupation ""Photographer"" .
  ?child rdfs:father ?parent_of_child .
  ?parent_of_child a dbpedia:Person ;
                  dbpedia:name ?parent_name
}
```

This query looks for the parent of Mariclare Costello's child (assuming there is one) and the parent of a professional photographer. It connects Mariclare Costello to her spouse, traces to any child, and then links that child to a professional photographer through their parent.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
347,47,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?child_name
WHERE {
  ?charles_joseph a dbpedia:Person ;
               dbpedia:birthDate ""1831-10-25"" ;
               dbpedia:deathDate ""1912-11-10"" ;
               dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:child ?child .
  ?child a dbpedia:Person ;
         rdfs:label ?child_name .
  SOME ?family_event WHERE {
    ?charles_joseph rdf:type dbpedia:Event;
                   dbpedia:role ""2nd Dragoon Regiment (France)"" .
    ?parent rdf:type dbpedia:SocietalEvent .
    ?child rdf:type dbpedia:Event ;
           dbpedia:role ""Television Show"" .
  }
  ?father a dbpedia:Person ;
         dbpedia:parent ?charles_joseph .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,14,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"PREFIX psoe: <http://dbpedia.org/ontology/PartyMember>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbprop: <http://dbpedia.org/property/>

SELECT ?administrationTenant
WHERE {
  ?politician a psoe:PartyMember ;
               dbprop:office ?office .
  ?office a dbprop:Office ;
            rdfs:label ?office_label .
  ?politician foaf:name ?administrationTenant .
  ?office geo:country ""Spain"" .
}",2,3,3,2,1,3,3,71,0,0,100,0,0.0,0
468,7,train,Give me the reference to the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?realName WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Peter IV of Aragon"" .
  ?person rdfs:label ?realName
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
151,1,train,Give me the reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?order_name ?order_description
WHERE {
  ?order a dbpedia:Order ;
         dbpedia:establishedBy ?establisher .
  ?establisher rdfs:label ?establisher_name .
  ?order rdfs:label ?order_name .
  ?order dcterms:description ?order_description .
  FILTER (?order_name = ""Order of the Medjidie"")
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
731,5,train,Who is the commander in Sinking of Prince of Wales and Repulse?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?ship_name
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:hasMilitaryRole dbpedia:MilitaryRank ;
             dbpedia:serveIn ?ship .
  ?ship a dbpedia:Ship ;
          dbpedia:name ?ship_name .
  FILTER ( ?ship_name = ""HMS Prince of Wales"" || ?ship_name = ""HMS Repulse"")
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
198,31,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv: <http://purl.org/cwm/tv/>

SELECT ?actor_name WHERE {
  ?actor a tv:Actor ;
           rdfs:label ?actor_name .
  ?actor tv:portrayedCharacterIn tv:That's_My_Bush .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
347,48,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nao: <http://purl.org/ontologies/nano>

SELECT ?child_name ?event_name ?show_name
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:birthPlace ""Austria"" ;
             dbpedia:role ""Commander in the Algerian War"" .
  ?child a dbpedia:Person ;
           nao:hasFather ?commander ;
           rdfs:label ?child_name .
  ?child a nao:Event ;
           nao:name ?event_name .
  ?child a nao:TelevisionShow ;
           nao:name ?show_name .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
782,49,train,"Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?real_name WHERE {
  ?artist a dbpedia:Musician ; dbpedia:birthPlace ?birthplace .
  ?persona rdfs:label 'Nick Curran' .
  ?real_name ns:nameOf ?artist .
  ?birthplace ns:instanceOf dbpedia:AdministrativeTerritory .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,18,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_names
WHERE {
  ?child a dbpedia:Person ; dbpedia:hasParent ?parent1 , ?parent2 .
  ?parent1 a dbpedia:Person ; rdfs:label ?parent_name1 .
  ?parent2 a dbpedia:Person ; rdfs:label ?parent_name2 .
  ?child rdfs:label ?child_name .
  ?parent1 = ?parent2 .
  ?parent_name1 = 'Roger II of Sicily' .
  ?parent_name2 = 'Elvira of Castile, Queen of Sicily' .
}
",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
943,41,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?royalty_status ?lambert_cranston_name
WHERE {
  ?baeda_maryam_I a dbpedia:Monarch ;
                    dbpedia:father ?father_name .
  ?yeshaq_I a dbpedia:Person ;
               dbpedia:parent ?father_name .
  ?father_name rdfs:label ?father_name .
  ?lambert_cranston a dbpedia:Person ;
                     dbpedia:name ""Lamont Cranston""@en .
  ?baeda_maryam_I dbpedia:hasChild ?lambert_cranston
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
198,48,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology#>

SELECT ?recipient_name ?birthplace_name
WHERE {
  ?recipient a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?recipient rdfs:label ?recipient_name .
  ?birthplace a dbo:Settlement ;
             dbpedia:country dbpedia:United_States .
  ?recipient rdfs:label ?birthplace_name .
  FILTER (lang(?recipient_name) = ""en"")  # Ensure the name is in English
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
39,17,train,"Who is the person born, that is a musical artist, as the birth name of Bob Thompson (musician)?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birth_name
WHERE {
  ?artist a dbpedia:Musician ;
           dbpedia:name ?artist_name .
  ?artist dbpedia:birthName ?birth_name .
  ?artist_name = 'Bob Thompson'
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
293,5,train,"Give me the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?film_name ?producer_name
WHERE {
  ?film a dbpedia:Film ;
         dbpedia:producer ?producer .
  ?producer rdfs:label ?producer_name .
  FILTER (lang(?producer_name) = ""en"")  # Only consider English names
}
```",1,2,2,1,1,3,3,71,0,20404,96,0.0,0.0,0
384,3,train,"Give me the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX frpp: <http://dbpedia.org/ontology/frpp/>

SELECT ?politician_name ?birthplace
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:nationality frpp:fr_France ;
               dbpedia:officeHolder true .
  ?politician rdfs:label ?politician_name .
  ?politician dbpedia:birthPlace ?birthplace .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
293,37,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }",,4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
293,58,train,"Give me the party member of Republican Party (United States) and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_member_name ?spouse_relationship ?relation_to_tisha_sterling
WHERE {
  ?party_member a dbpedia:Politician ;
                dbpedia:politicalParty dbpedia:Republican_Party_United_States .
  ?actor a dbpedia:Person ;
           dbpedia:name ""Robert Young"" ;
           dbpedia:role ""1,000 Dollars a Minute"" .
  ?spouse_relationship a dbpedia:Relationship ;
                       rdfs:label ""Spouse of"" .
  ?party_member rdfs:label ?party_member_name .
  ?actor dbpedia:hasChild ?tisha_sterling .
  ?tisha_sterling a dbpedia:Person ;
                 dbpedia:name ""Tisha Sterling"" .
  ?party_member ?spouse_relationship ?tisha_sterling
}
```

This query attempts to find a Republican politician who is related to Robert Young (as the parent of Tisha Sterling) and is potentially his spouse in a fictional context.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
628,44,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of Uncle Murda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?award_name ?region ?america ?state ?settlement 
WHERE { 
  ?award a dbpedia:Award ; dbpedia:awardedBy ?awarders . 
  ?awarders rdfs:label ?award_name . 
  ?award ?region a dbpedia:Region ; dbpedia:country ?country . 
  ?country foaf:name ?america . 
  ?award ?state a dbpedia:AdministrativeTerritoryOfCountry ; dbpedia:adminDistrict ?admin_district . 
  ?admin_district rdfs:label ?state_name . 
  ?award ?settlement a dbpedia:Settlement ; dbpedia:locatedIn ?settlement_location . 
  ?settlement_location rdfs:label ?settlement_name . 
  FILTER (LANG(?state_name) = 'en') 
  FILTER (LANG(?settlement_name) = 'en') 
}",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
905,1,train,Give me the parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?charles_martel_of_anjou a dbpedia:Person ;
                       dbpedia:name ""Charles Martel of Anjou"" ;
                       dbpedia:birthPlace ?charles_birthplace .
  ?parent a dbpedia:Person ;
            dbpedia:name ?parent_name ;
            dbpedia:birthPlace ?parent_birthplace .
  ?charles_martel_of_anjou dbpedia:hasParent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
347,50,train,Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?child_birthplace 
WHERE { 
  ?father a dbpedia:Person ; dbpedia:name ?father_name . 
  ?mother a dbpedia:Person ; dbpedia:name ?mother_name . 
  ?child a dbpedia:Person ; dbpedia:parent ?father ; dbpedia:parent ?mother . 
  ?father rdfs:label ?father_name . 
  ?mother rdfs:label ?mother_name . 
  ?child rdfs:label ?child_name . 
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
905,39,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of Charles Martel of Anjou.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },,4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
39,35,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name ?band_members
WHERE {
  ?sam_conception a dbpedia:MusicalArtist ;
                  dbpedia:birthDate ""1977-04-13"" ; # Example birth date, replace with actual
                  rdfs:label ""Robert Lamar Thompson"" .
  ?sam_conception foaf:member ?band_member1 .
  ?band_member1 a dbpedia:BandMember ;
               rdfs:label ?band_name .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
668,5,train,"Who is the writer, that is a musical artist, of The Live Anthology?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?artist_birthplace
WHERE {
  ?album a dbpedia:Album ;
           dbpedia:title ""The Live Anthology"" .
  ?artist a dbpedia:Musician ;
           dbpedia:birthPlace ?artist_birthplace .
  ?album dbpedia:performer ?artist .
}
```",1,2,2,1,1,3,3,71,0,0,19,0,0.0,0
68,10,train,"Give me the child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_name ?royalty_title
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role ""Commander"" .
  ?commander dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
          rdfs:label ?royalty_name ;
          dbpedia:role ?royalty_title .
  FILTER (lang(?royalty_name) = ""en"")  # restrict to English language
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
68,2,train,"Give me the father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?king_name ?king_birthplace
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:name ?king_name .
  ?king dbpedia:birthPlace ?king_birthplace
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
375,13,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?yamaza_birthplace ?toyotomi_hidenaga_war
WHERE {
  ?yamaza a dbpedia:Person ;
    dbpedia:birthPlace ?yamaza_birthplace .
  ?toyotomi_hidenaga a dbpedia:Person ;
    dbpedia:birthPlace ?toyotomi_birthplace ;
    dbpedia:conflictInvolvement dbpedia:War_of_Songjin . # Assuming he was involved in the War of Songjin
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
295,8,train,Give me the native of the birth place of Victor Saville.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?producer_birthplace
WHERE {
  ?producer a dbpedia:Person ;
            dbpedia:birthPlace ?producer_birthplace .
  ?producer rdfs:label ""Victor Saville"" .
}
```",2,2,3,2,1,3,2,20,0,0,1531,0,0.0,0
263,24,train,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?child_name
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ?parent_name .
  ?child rdfs:label ?child_name
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,29,train,Give me the person born as the birth name of Bobby Shmurda and band member of Uncle Murda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?real_name ?birth_place
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?birth_place .
  ?person rdfs:label ""Bobby Shmurda""@en .
  ?band_members a foaf:Group ;
                 foaf:member ?person ;
                 rdfs:label ""Uncle Murda""@en .
  ?person rdfs:label ""Shawn Carter""@en .
  ?birth_place rdfs:label ""Florida""@en
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,15,train,"Give me the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?team_name ?season_name
WHERE {
  ?player a dbpedia:Person ; dbpedia:sport ?sport ; dbpedia:club ?team_name .
  ?team_name a dbpedia:SoccerTeam ; dbpedia:leagueSeason ?season_name .
  ?season_name rdfs:label '2006-07 VfL Bochum season'@en
  ?player rdfs:label ?player_name
}
",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
492,12,train,Give me the death place of Reed Howes and death place of Carolyn Jones and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Reed Howes"" .
  ?person rdfs:label ""Carolyn Jones"" .
  ?person rdfs:label ""Sal Mineo"" .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
756,12,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?manager_name ?birthplace 
WHERE { 
  ?manager a dbpedia:Manager ; 
  dbpedia:birthPlace ?birthplace . 
  ?manager rdfs:label ?manager_name . 
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
723,7,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name ?producer_name
WHERE {
  ?band dbpedia:hasBandMember ?band_member .
  ?band_member a foaf:Person; rdfs:label ?band_name .
  ?band a dbpedia:MusicArtist ; dbpedia:album ""Nothing to Gein"" .
  ?producer a dbpedia:MusicProducer; rdfs:label ?producer_name .
  ?bandMember foaf:knows ?producer
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
668,14,train,Give me the person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Joey B""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,56,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?father_name ?father_title ?politician_child_name ?alumnus_school_name ?awardee_honor ?earl_name 
WHERE { 
  ?politician_child a dbpedia:Person ; 
    dbpedia:hasFather ?father_name ; 
    dbpedia:alumniOf ?alumnus_school_name . 
  ?awardee_honor a dbpedia:HonoraryAward ; 
    dbpedia:awardee ?politician_child ; 
    dbpedia:title ?father_title . 
  ?earl_name a dbpedia:Person ; 
    dbpedia:birthParent ?politician_child ; 
    rdfs:label ?earl_name . 
  ?alumnus_school rdfs:label ?alumnus_school_name . 
  ?father_name rdfs:label ?father_name . 
  ?earl_name rdfs:label ?earl_name . 
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,6,train,"Give me the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work_name ?work_type WHERE {
  ?work a dbpedia:Book ;
         dbpedia:type ?work_type .
  ?work rdfs:label ?work_name .
}
```",1,4,2,1,1,3,3,71,0,350,6,0.0,0.0,0
595,50,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name
WHERE {
  ?president a dbpedia:Person ;
               dbpedia:name ""Bill Clinton"" ;
               dbpedia:birthPlace ""Chappaqua, New York"" ;
               dbpedia:officeHolder dbpedia:President_of_the_United_States ;
               dbpedia:writtenWork dbpedia:Book ;
               rdfs:label ?author_name
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
225,17,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX awards: <http://awardsontology.org/>

SELECT ?show_name ?show_birthday_place ?awardee_name ?awardee_birthplace
WHERE {
  ?award a awards:Award ;
         awardRecipient ?show .
  ?show rdfs:label ?show_name .
  ?awardee a dbpedia:Person ;
           dbpedia:birthPlace ?awardee_birthplace .
  ?awardee rdfs:label ?awardee_name .
  FILTER (lang(?awardee_name) = ""ja"")  # Ensure the awardee is Japanese
}
```

This query will search for an award given to a television show, where the recipient of the award is Japanese. The output fields will contain the name of the show, the birthplace of the show (which can be interpreted as the place where the show originates from), and the name and birthplace of the Japanese awardee.",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
706,8,train,Give me the birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:name ?actor_name ;
           dbpedia:birthPlace ?actor_birthplace .
  ?actor_name ""Prosenjit Chatterjee""
}
```",2,2,3,2,1,3,2,20,0,0,10,0,0.0,0
742,8,train,Give me the birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Sofia"" .
}
```",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
609,29,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?cece_birthplace ?governor_name ?governor_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace 
WHERE { 
  ?cece a dbpedia:Person ; 
    dbpedia:birthPlace ?cece_birthplace . 
  ?governor a dbpedia:Politician ; 
    dbpedia:birthPlace ?governor_birthplace . 
  ?vince_gilligan a dbpedia:Person ; 
    dbpedia:birthPlace ?vince_gilligan_birthplace . 
  ?governor rdfs:label ?governor_name . 
  ?author rdfs:label ?author_name . 
  ?vince_gilligan rdfs:label ?vince_gilligan_name 
}",4,5,5,2,3,3,3,71,0,5,1,0.0,0.0,0
905,31,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name WHERE {
  ?philip a dbpedia:Person ;
   dbpedia:birthDate ""c. 1296"" ;
   dbpedia:despotOf dbpedia:Byzantine_Empire ;
   dbpedia:parent ?charles_martel .
  ?charles_martel a dbpedia:Person ;
   dbpedia:birthDate ""c. 1315"" ;
   rdfs:label ""Charles Martel of Anjou"" .
  ?royalty_name a dbpedia:Royalty
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,20,train,Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?amasa_tracy ?gillmore_medal_details
WHERE {
  ?amasa_tracy a dbpedia:Person ;
               dbpedia:birthDate ""1814-02-28"" ;
               dbpedia:deathDate ""1884-08-21"" ;
               dbpedia:awardedRole dbpedia:Gillmore_Medal .
  ?gillmore_medal_details a dbpedia:Award ;
                           dbpedia:name ""Gillmore Medal"" .
}
```

This query will retrieve information about Amasa Tracy and the details of the Gillmore Medal, including its name.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
756,8,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?soccer_club_name ?seasons
WHERE {
  ?actor a dbpedia:Person ;
           foaf:name ?actor_name .
  ?actor dbpedia:hasRole [ rdf:type dbpedia:Actor ] .
  OPTIONAL { 
    ?actor dbpedia:roleInFilm ?film .
    ?film dbpedia:mainCharacter ?character .
    ?character rdfs:label ?character_name .
    FILTER (regex(str(?character_name), ""Letsch"")) }
  ?soccer_club a dbpedia:SoccerClub ;
             dbpedia:hasSeason ?season .
  ?season a dbpedia:SportsSeason .
  ?actor foaf:knows ?soccer_club .
}
```

### Completed",1,4,2,1,1,3,3,71,0,0,5,0,0.0,0
816,50,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_of_cattin ?child_of_arbus_parent
WHERE {
  ?cattin a dbpedia:Person ;
           dbpedia:occupation ""Eugène Cattin"" .
  ?cattin dbpedia:parentOf ?parent_of_cattin .

  ?arbus a dbpedia:Person ;
           dbpedia:child ?child_of_arbus .
  ?child_of_arbus rdfs:label ""Allan Arbus's child"" .  # Placeholder for actual child's name
  ?child_of_arbus dbpedia:parentOf ?child_of_arbus_parent .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
353,44,train,"Give me the child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild_name WHERE {
  ?grandchild a dbpedia:Person ;
               dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Alfonso VI of León and Castile"" .
  ?grandchild rdfs:child ?child_of_roger_ii .
  ?child_of_roger_ii a dbpedia:Person ;
                  rdfs:label ""William I of Sicily"" ;
                  dbpedia:parent ?roger_ii .
  ?roger_ii a dbpedia:Person ;
            rdfs:label ""Roger II of Sicily"" .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
492,14,train,Give me the death place of Reed Howes and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_deathplace
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?actor dbpedia:deathPlace ?actor_deathplace .
  FILTER (lang(?actor_name) = ""en"")  # Only consider English names
}
```",3,3,4,2,2,2,3,28,1,345090,0,2.8977863809835668e-06,1.0,5.79555596768398e-06
258,2,train,"Give me the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?almaMaterName ?almaMaterCategory
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:office ""Federal Deputy, Brazil"" ;
               dbpedia:birthDate ""1975-01-01"" ; # Placeholder birth date for Luiza Erundina
               dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalInstitution ;
            rdfs:label ?almaMaterName ;
            dbpedia:isTypeOf dbo:University .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
78,10,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?composer_name ?artist_name
WHERE {
  ?composer a dbpedia:Musician ;
             dbpedia:role dbpedia:ComposerOf ""Wizards of Waverly Place"" .
  ?composer rdfs:label ?composer_name .
  ?artist a dbpedia:Artist ;
            dbpedia:associatedWith ?composer .
  ?artist rdfs:label ?artist_name
}
```",2,4,3,2,1,2,3,28,0,0,18,0,0.0,0
347,28,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_birthplace ?event_description ?television_show_name
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:birthPlace ?commander_birthplace .
  ?commander rdfs:label ?commander_name .
  
  ?regiment a dbpedia:MilitaryUnit ;
             dbpedia:dragoonRegiment ""2nd Dragoon Regiment"" ;
             dbpedia:country ""France"" .

  ?commander dbpedia:commands ?regiment .

  ?parent a dbpedia:Person ;
            dbpedia:birthPlace ?parent_birthplace .
  
  ?parent rdfs:label ?parent_name .

  ?child a dbpedia:Person ;
            dbpedia:birthParent ?parent ;
            dbpedia:birthPlace ?child_birthplace .
  
  ?child rdfs:label ?child_name .

  ?commander dbpedia:hasParent ?parent .
  ?parent rdfs:label ""Ferdinand II, Holy Roman Emperor"" .
  ?child rdfs:label ""Eleonore of Austria, Queen of Poland"" .

  ?commander rdfs:label ?commander_name .
  
  ?event a dbpedia:Event ;
           dbpedia:description ?event_description .
  
  ?television_show a dbpedia:TelevisionShow ;
                    dbpedia:title ?television_show_name .

  ?commander dbpedia:participatedIn ?event .
  ?event rdfs:label ?event_description .
  ?commander dbpedia:participatedIn ?television_show .
  ?television_show rdfs:label ?television_show_name
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
595,35,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find Cecilia Payne-Gaposchkin
SELECT ?author_name WHERE {
  ?author a dbpedia:Person ;
           rdfs:label ""Cecilia Payne-Gaposchkin""@en .
}

# Find her spouse
SELECT ?spouse_name WHERE {
  ?author dbpedia:hasSpouse ?spouse_name .
}

# Filter the spouse to be a politician and office holder
SELECT DISTINCT ?spouse_name
WHERE {
  ?spouse a dbpedia:OfficeHolder ;
           rdfs:label ?spouse_name .
  ?spouse a dbpedia:Politician .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
119,58,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country_name ?administration_name
WHERE {
  ?politician1 a dbpedia:Politician ;
                 dbpedia:birthPlace ?country_of_residence1 .
  ?politician2 a dbpedia:Person ;
                dbpedia:name ""Alberto Núñez Feijóo"" ;
                dbpedia:birthPlace ?country_of_residence2 .
  ?party a dbpedia:PoliticalParty ;
            dbpedia:name ""Spanish Socialist Workers' Party (PSOE)"" ;
            dbpedia:headquarter ?administration_location .
  ?politician1 rdfs:label ?country_name .
  ?politician2 rdfs:label ?country_of_residence2 .
  ?administration_location a dbpedia:Office ; 
                          dbpedia:name ?administration_name .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,7,train,Who is the awardee of Knight Commander of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award [ a award:HonoraryAward; rdfs:label ""Knight Commander of the Order of the Bath"" ] .
  ?awardee rdfs:label ?awardee_name
}
```",1,1,2,1,1,3,3,71,0,0,899,0,0.0,0
353,12,train,"Give me the father of William II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?parent_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parent_name .
  FILTER (lang(?person) = ""en"")  # Assuming we are looking for English names
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,22,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader_name ?office ?
       (COUNT(?politician) AS ?number_of_politicians)
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:partyMemberOf dbpedia:Conservative Republican Party (Spain) .
  ?politician foaf:name ?leader_name .
  ?politician dbpedia:birthPlace ""Madrid""@en .
  ?office a dbpedia:Office;
           dbpedia:holder ?leader_name .
  FILTER (?politician != ?office)
}
```

### Completed",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
628,40,train,"Give me the native of Florida and person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birthplace
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:members ?member .
  ?member a dbpedia:Person ;
           dbpedia:name ?artist_name ;
           dbpedia:birthPlace ?birthplace .
  ?artist_name rdfs:label ""DJ Kayslay""@en .
  ?birthplace rdf:type dbpedia:Location ;
            dbpedia:name ""Florida""@en .
  ?band rdfs:label ""GS9""@en .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
293,16,train,"Give me the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?film a dbpedia:Film ; dbpedia:producer ?producer .
  ?producer rdfs:label ?producer_name .
  ?film dbpedia:mainCharacter ?actor .
  ?actor rdfs:label ?actor_name .
  ?producer ns:name ?producer_name .
 FILTER (lang(?producer_name) = 'en') 
}
",2,3,3,2,1,3,3,71,0,0,257,0,0.0,0
295,0,train,Give me the writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?writer_name WHERE {
  ?band dbpedia:genre ""novelty rock"" ;
            dbpedia:band_members [
              ?member a dbpedia:Musician ;
                         dbpedia:name ?writer_name
            ]
          .
  ?writer_name rdfs:label ""Barnes & Barnes""
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,7,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_title
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace dbpedia:Middlesex ;
           rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?parent a dbpedia:Person ;
          dbpedia:parentOf ?person ;
          rdfs:label ?parent_name .
  ?parent dbpedia:title ?parent_title
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
347,61,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_father_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ""Maria Anna of Bavaria (born 1574)"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:father ?child_father_name .
  ?child_father a dbpedia:Person ;
               rdfs:label ?child_father_name .
  ?child dbpedia:royaltyStatus ?royalty_status .
  FILTER (?child_father_name = ""Archduke Charles Joseph of Austria"")
  AND ?royalty_status = ""Royalty""
}
```

This query looks for children of Maria Anna of Bavaria, identifies those with Archduke Charles Joseph as their father, and then filters for those whose fathers are also royalty.",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
628,21,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?band_member_birthplace
WHERE {
  ?artist a dbpedia:MusicArtist ; dbpedia:birthPlace ?artist_birthplace .
  ?bandMember a dbpedia:Person ; dbpedia:birthPlace ?band_member_birthplace .
  ?artist rdfs:label 'Bobby Shmurda' .
  ?bandMember foaf:memberOf ?artist .
  ?band_member_birthplace geo:country 'United States' ; geo:region 'Florida' .
}
",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
361,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name WHERE {
  ?character_name rdfs:label ""The Shadow""@en .
  ?main_character_name rdfs:label ""Lamont Cranston""@en .
  ?character_name dbpprop:alterEgo ?alter_ego_name
  FILTER (?character_name = ?main_character_name)
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
687,42,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","SELECT ?player_name ?manager_name ?player_birthdate ?manager_birthdate
WHERE {
  ?player a dbpedia:Footballer ;
            dbpedia:birthDate ?player_birthdate .
  ?manager a dbpedia:SoccerManager ;
            dbpedia:birthDate ?manager_birthdate .
  ?player rdfs:label ?player_name .
  ?manager rdfs:label ?manager_name .
  ?player_birthdate = ""1979-11-03"" .
  ?manager_birthdate = ""1979-11-03""
}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?war_name 
WHERE { 
  ?commander a dbpedia:Person ; 
  dbpedia:leadMilitaryConflict ?war . 
  ?war rdfs:label ?war_name . 
  ?commander rdfs:label ?commander_name . 
}",3,5,4,3,1,3,2,20,0,0,121,0,0.0,0
375,14,train,Give me the war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?war WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ?person_name .
  OPTIONAL { ?person dbpedia:birthPlace ?birthplace }
  ?person dbpedia:participatedInMilitaryConflict ?war
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
58,11,train,Give me the spouse of the person born as Linda Sue Cobb and producer of 12 Strong.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?husband_name
WHERE {
  ?wife a dbpedia:Person ;
           dbpedia:name ""Linda Carter"" .
  ?wife foaf:spouse ?husband .
  ?husband a dbpedia:Person ;
            rdfs:label ?husband_name .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
859,4,train,"Give me the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name ?artist_role 
WHERE { 
  ?band a dbpedia:Band ; dbpedia:name ""Khlyst"" . 
  ?artist a dbpedia:Musician ; dbpedia:isMemberOf ?band . 
  ?artist rdfs:label ?artist_name . 
  ?artist_role rdfs:label ?artist_role . 
}",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
89,13,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royal_spouse_name
WHERE {
  ?father a dbpedia:Person ;
            dbpedia:birthPlace ?father_birthplace ;
            dbpedia:parent ?mother .
  ?mother a dbpedia:Person ;
           dbpedia:birthPlace ?mother_birthplace ;
           foaf:spouse ?royal_spouse_name .
  ?father rdfs:label ""Myat Hpone Pyo's Father"" . 
  ?mother rdfs:label ""Mother of Myat Hpone Pyo's Father"" .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
23,22,train,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?politician_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?roy_barreras a dbpedia:Person ;
             dbpedia:name ""Roy Leonardo Barreras Montealegre"";
             dbpedia:birthPlace ?shared_birthplace .
  ?governor rdfs:label ?politician_name .
  ?author rdfs:label ?author_name .
  ?shared_birthplace a owl:sameAs ?governor_birthplace .
}
```",4,5,5,2,2,2,3,28,0,0,5,0,0.0,0
531,1,train,Give me the office of Mariano Rajoy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:primeMinisterOfCountry ?office .
  ?politician rdfs:label ""Mariano Rajoy""@es
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
39,54,train,"Give me the band of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?bob_thompson a dbpedia:Musician ;
                dbpedia:musicGenre ?genre .
  ?sam_concepcion a dbpedia:Person ;
                 dbpedia:occupation dbpedia:Musician ;
                 dbpedia:associatedBand ?band_name .
  ?walter_b_gibson rdfs:creator ?band_name .
  ?band_name rdfs:label ?band_name .
}
```

This query looks for:
- Bob Thompson's music genre (to infer band type)
- Sam Concepcion's associated band
- The creator of Walter B. Gibson's fictional character, The Shadow

The `?band_name` variable will be bound to the name of the band if it exists for each individual.",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
80,9,train,Give me the actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ; dbpedia:productionCompany foaf:made ?movie_title .
  ?actor a dbpedia:Person ; dbpedia:roleIn ?movie .
  ?movie_title = 'ATL (2006)' 
}
",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,22,train,Give me the child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?child_birthplace 
WHERE { 
  ?parent a dbpedia:Person ; 
    dbpedia:father ?father_name . 
  ?father rdfs:label ?father_name . 
  ?child a dbpedia:Person ; 
    dbpedia:childOf ?parent ; 
    dbpedia:birthPlace ?child_birthplace . 
  ?child rdfs:label ?child_name . 
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,37,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birth_place
WHERE {
  ?artist a dbpedia:Musician ;
           dbpedia:birthPlace ?birth_place .
  ?artist rdfs:label ?artist_name .
  ?birth_place rdfs:label ?birth_place_name .
  ?birth_place_name ""Florida""
}
```",4,5,5,3,2,3,3,71,0,0,59,0,0.0,0
687,55,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?soccer_player_status ?athlete_birthdate ?manager_name ?manager_sport ?manager_birthdate 
WHERE { 
?actor a dbpedia:Actor ; rdfs:label ?actor_name . 
?actor dbpedia:portrayal dbpedia:P180AllOrNothingManchesterCity . 
?soccer_player a dbpedia:SoccerPlayer ; dbpedia:role dbpedia:SoccerPlayerRole . 
?athlete a dbpedia:Athlete ; dbpedia:birthDate ?athlete_birthdate . 
?manager a dbpedia:SoccerManager ; dbpedia:role dbpedia:SoccerManagerRole ; dbpedia:birthDate ?manager_birthdate . 
?soccer_player ns:involves ?actor . 
?athlete ns:bornOn ?athlete_birthdate . 
?manager ns:involves ?soccer_player . 
FILTER (lang(?actor_name) = 'en') 
",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
668,19,train,Give me the professional in Musician and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name
WHERE {
  ?person a dbpedia:Musician ;
            dbpedia:birthDate ?birthdate .
  ?person rdfs:label ?person_name .
  FILTER (regex(str(?person_name), ""Elorm Kabu Amenyah"")) .
  ?musical_artist a dbpedia:MusicalArtist ;
                 dbpedia:associatedWith ?person .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,28,train,Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer_name ?shadow_role ?sawyer_producer
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:productionCompany ?producer_company .
  ?actor a dbpedia:Person;
    dbpedia:role ?shadow_role ;
    foaf:name ?actor_name .
  ?movie rdfs:label ""A Star Is Born (1937 film)""@en .
  ?movie dbpedia:year 1937.
  
  ?movie2 a dbpedia:Film;
    dbpedia:productionCompany ?producer_company2 .
  ?actor2 a dbpedia:Person;
    dbpedia:role ?shadow_role ;
    foaf:name ?actor_name2 .
  ?movie2 rdfs:label ""The Adventures of Tom Sawyer (1938 film)""@en .
  ?movie2 dbpedia:year 1938.
  
  ?producer_company1 rdf:type dbpedia:FilmProductionCompany .
  ?producer_company2 rdf:type dbpedia:FilmProductionCompany .

  ?actor1 foaf:role ?shadow_role .
  ?actor1 rdfs:seeAlso ?producer_company1 .

  ?actor2 foaf:role ?shadow_role .
  ?actor2 rdfs:seeAlso ?producer_company2

  FILTER (regex(str(?movie), ""A Star Is Born (1937 film)"")) .
  FILTER (regex(str(?movie2), ""The Adventures of Tom Sawyer (1938 film)"")) .
  BIND (concat(STR(?actor_name1), "" played The Shadow"") AS ?shadow_role1)
  BIND (concat(STR(?actor_name2), "" played The Shadow"") AS ?shadow_role2)
  
  ?producer_company1 = ?producer_company2
  ?actor_name1 = ?actor_name2
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,37,train,"Give me the team of Pablo Aimar and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?film_name ?production_company
WHERE {
  ?pablo_aimar a dbpedia:FootballPlayer ;
               foaf:role [ rdf:type foaf:Role ; rdfs:label ""Actor"" ] .
  ?manuel_huerga a dbpedia:Actor ;
                foaf:role [ rdf:type foaf:Role ; rdfs:label ""Self"" ] .
  ?film a dbpedia:Film ;
          dbpedia:actor ?pablo_aimar ;
          dbpedia:producer ?production_company .
  ?film rdfs:label ?film_name
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_name WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolderRole ?office .
  ?office rdfs:label ?office_name .
  ?politician rdfs:label ""Alberto Núñez Feijóo"" .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
80,17,train,Give me the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?alter_ego_name WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?series dbpedia:authorPhilPullman .
  ?alter_ego_name a dbpedia:Person; rdfs:label ?alter_ego_name
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
119,30,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president_name ?president_birthplace
WHERE {
  ?president a dbpedia:OfficeHolder ;
             dbpedia:office dbpedia:Prime_Minister_of_Spain ;
             dbpedia:term_start ""2011-11-21""^^xsd:date ;
             foaf:name ?president_name .
  ?president rdfs:label ?president_name .
  OPTIONAL {
    ?president dbpedia:birthPlace ?president_birthplace
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
531,60,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_name ?leader_name
WHERE {
  ?miguel_maura a dbpedia:Person ;
               dbpedia:memberOf [ a dbpedia:PoliticalParty ; rdfs:label ?party_name ] ;
               dbpedia:inOffice ?office_start_date .
  ?office_start_date a dbpedia:ElectoralTerm ;
                       dbpedia:year 2003 ;
                       dbpedia:office dbpedia:Madrid_City_Council_Election .
  ?party a dbpedia:PoliticalParty ;
           rdfs:label ?party_name .
  ?leader a dbpedia:Person ;
           foaf:name ?leader_name ;
           dbpedia:officeHolderOf [ a dbpedia:Office ; rdfs:label ""Madrid City Council"" ] .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
557,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional_name ?field
WHERE {
  ?professional a dbpedia:Person ;
               dbpedia:occupation ?field .
  ?field rdfs:label ""Your Specific Field"" . # Replace ""Your Specific Field"" with the actual field of interest
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
531,0,train,Give me the tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?tenant_name
WHERE {
  ?tenant a dbo:Resident ;
           dbpedia:address [ dbpedia:isPartOf dbpedia:Madrid ] .
  ?tenant rdfs:label ?tenant_name
}
```",1,1,2,1,1,3,3,71,0,0,259,0,0.0,0
595,60,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?disease_event_name ?politician_name
WHERE {
  ?hillary_clinton a dbpedia:Person ;
                    dbpedia:name ""Hillary Clinton"" ;
                    dbpedia:spouse ?bill_clinton .
  ?bill_clinton a dbpedia:Person ;
                rdfs:label ""Bill Clinton"" .
  ?ussa_arcadia_owner a dbpedia:Ship ;
                       dbpedia:id ""ID-1605"" ;
                       dbpedia:name ""USS Arcadia"" .
  ?hillary_clinton rdfs:author ?book .
  ?book a dbpedia:WrittenWork ;
          dbpedia:name ""It Takes a Village"" .
  ?hillary_clinton dbpedia:isSpouseOf ?bill_clinton .
  OPTIONAL {
    ?disease_event a dbpedia:Event ;
                    rdfs:label ?disease_event_name .
    ?disease_event dbpedia:hasImpact ?societal_event .
  }
}
```

This query connects all the entities through their relationships and looks for a disease event that could metaphorically be considered a commander in war due to its societal impact.",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
37,3,train,"Who is the work, that is an artist and a musical artist, of Ethan Iverson?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work_name ?work_description
WHERE {
  ?work a dbpedia:Album ;
         dbpedia:artist ?artist .
  ?artist a dbpedia:Person ;
            rdfs:label ""Ethan Iverson""@en .
  ?work rdfs:label ?work_name .
  ?artist foaf:name ?artist_name .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
782,20,train,Give me the band of the band member of Eric Clapton and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_description
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:hasMember ?eric_clapton .
  ?eric_clapton rdfs:label ""Eric Clapton""@en .
  ?band rdfs:label ?band_name .
  ?band dbpedia:genre ""Blues Rock""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,61,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?artist_name ?birth_name ?region ?occupation
WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:birthPlace dbpedia:Central_Ghana_region ;
            dbpedia:occupation ?occupation .
  ?artist rdfs:label ?artist_name .
  OPTIONAL { ?artist dbpedia:hasAlbum ""The Live Anthology"" }
  
  ?artist rdfs:label ?birth_name .
  FILTER (lang(?birth_name) = ""en"")  # Assuming the birth name is in English
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
38,15,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard and author of Promise Me, Dad.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name WHERE {
  ?author a dbpedia:Person ;
    dbpedia:birthPlace xsd:string;
    rdfs:label ?author_name .
  ?author dbpedia:publisher [ a dbpedia:CreativeWork; dbpedia:type ""Book"" ] .
  ?author dbpedia:role dbpedia:Politician; dbpedia:office dbpedia:North Carolina Air National Guard .
  ?author rdfs:label ?author_name .
}
",4,10,5,3,2,3,2,20,0,0,1,0,0.0,0
140,12,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?party_name 
WHERE { 
  ?commander a dbpedia:Person ; 
    dbpedia:militaryBranch dbpedia:Confederate_Army ; 
    dbpedia:participatedIn dbpedia:Picketts_Charge . 
  ?party a dbpedia:Political_party ; 
    dbpedia:name ?party_name . 
  ?commander rdfs:label ?commander_name . 
  ?party rdfs:label ?party_name . 
  ?party geonames:locatedIn dbpedia:Westport,_Connecticut . 
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
23,4,train,Give me the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country WHERE {
  ?person a dbpedia:Person ;
            dbpedia:nationality ?country .
  ?person rdfs:label ""Daniel Elahi Galán""@es
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
203,8,train,"Give me the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?event_description
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthDate ""1937-03-29"" ;
           dbpedia:role ?actor_role .
  ?actor_role a dbpedia:Event ;
               rdfs:label ?event_description .
  ?actor rdfs:label ?actor_name .
}
```",1,3,2,1,1,3,3,71,0,0,4,0,0.0,0
119,10,train,"Give me the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v0 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_name
WHERE {
  ?athlete a dbpedia:Athlete ;
            dbpedia:nationality dbpedia:Polska .
  ?athlete dbpedia:birthPlace ?city .
  ?city rdfs:label ""Łódź"" .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
668,48,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?pacely_artist ?joey_b_artist
WHERE {
  ?pacely a dbpedia:Person ;
           dbpedia:name ""Pacely"" .
  ?joey_b a dbpedia:Person ;
            dbpedia:name ""Joey B"" .
  ?pacely dbpedia:hasMusicArtist ?pacely_artist .
  ?joey_b dbpedia:hasMusicArtist ?joey_b_artist
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
585,17,train,Give me the child of the professional in the profession of Shirley Stoler and native of New York (state).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace dbpedia:New_York_County ;
           rdfs:label ""Shirley Stoler"" .
  ?child a dbpedia:Person ;
           dbpedia:birthPlace dbpedia:New_York_County ;
           rdfs:label ?child_name .
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
941,4,train,"Who is the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name .
  ?child dbpedia:birthDate ?child_birthdate .
  FILTER (lang(?child_birthdate) = ""en"")  # Ensure the birth date is in English
  ?child dbpedia:isMemberOf dbpedia:Royalty
}
```

This query looks for individuals (`?child`) who have a parent (`?parent`) and are members of the Royalty class (`dbpedia:Royalty`). It filters for children born in English.",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
816,55,train,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?parent_name WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?parent_name .
  ?parent_name rdfs:label ?parent_name .
  ?child rdfs:label ""Courtney Cox""@en .
  ?movie a dbpedia:Film ; dbpedia:actor Herschel_Bernardi .
  ?parent a dbpedia:Person ; dbpedia:role dbpedia:Photographer .
  ?parent_name rdfs:label ?parent_name
}
",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
159,12,train,Give me the commander in Great Turkish War and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?commander_battles
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:conflict ""Great Turkish War"" .
  ?commander foaf:name ?commander_name .
  ?commander dbpedia:battles ?commander_battles .
  FILTER (regex(str(?commander_battles), 'George Ducas'))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,42,train,"Give me the professional in Actor and professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?movie_title
WHERE {
  ?actor a dbpedia:Actor ;
           rdfs:label ?actor_name .
  ?actor dbpedia:appearedIn ?movie .
  ?movie rdf:type dbpedia:Film ; 
           dbpedia:star ?actor_name .
  ?movie rdfs:label ?movie_title .
  FILTER (regex(str(?movie_title), 'TV Series'))  # Check if the movie is a TV series
}
```",5,6,6,2,3,3,3,71,0,0,9,0,0.0,0
78,0,train,Give me the associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name WHERE {
  ?artist a dbpedia:Musician ;
           rdfs:label ""Stuart Tosh""@en .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
213,17,train,"Give me the birth place of Winston Chang and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?winston_chang_birthplace ?husband_or_wife_name ?husband_or_wife_work_country
WHERE {
  ?husband_or_wife a dbpedia:Person ;
                 rdfs:label ?husband_or_wife_name .
  ?husband_or_wife dbpedia:birthPlace ?winston_chang_birthplace .
  ?husband_or_wife foaf:partner ?wife .
  ?wife a dbpedia:Person ;
          rdfs:label ?wife_name .
  ?wife foaf:workForOrganization [ a dbpedia:CreativeWorkAgency; rdfs:label ?work_country ] .
}
```

This query looks for the birth place of a person related to Winston Chang (assumed to be his spouse in the show) and the country in which the works of a hypothetical writer spouse of Hu Jieqing are published. Note that this query is speculative and assumes fictional extensions to real-world data.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
159,16,train,Give me the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?work_name ?author_name WHERE {
  ?work a dbpedia:Film ;
         dbpedia:productionCompany ""20th Century Fox"" ;
         dbpedia:screenwriter ?author .
  ?author rdfs:label ?author_name
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,34,train,Give me the parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . },,4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,23,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },,4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
513,4,train,"Give me the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthDate [isBefore 1899] ;  # Assuming he was active before 1899
               rdfs:label ?politician_name .
  ?politician foaf:name ""George Savage"" .
  ?politician dbpedia:politicalParty ?party .
  ?party a dbpedia:PoliticalParty .
  ?party rdfs:label ?party_name
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
816,16,train,Give me the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president_name ?president_office
WHERE {
  ?president a dbpedia:Politician ;
             dbpedia:officeHolder dbpedia:President_of_the_Swiss_Confederation ;
             rdfs:label ?president_name .
  ?president foaf:name ?president_name .
}
```",2,2,3,2,1,3,3,71,0,0,940,0,0.0,0
782,58,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band_member_name ?band_memberships
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:hasMember ?band_member .
  ?band_member rdfs:label ?band_member_name .
  ?band_member dbpedia:associatedWith ?artist .
  ?artist a dbpedia:Musician;
            rdfs:label ""Eric Clapton""@en .
  OPTIONAL { ?band_member rdf:type dbpedia:Artist }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
384,8,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of Guillaume Peltier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?politician_name ?party_name 
WHERE { 
  ?politician a dbpedia:OfficeHolder ; dbpedia:Politician ; rdfs:label ?politician_name . 
  ?politician dbpedia:ParsCitHasPoliticalAffiliation ?party_name . 
}",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
609,16,train,"Who is the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
           dbpedia:birthPlace ?governor_birthplace .
  ?governor_birthplace ns:locatedIn dbpedia:Mississippi .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
89,19,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?husband_name WHERE {
  ?mother a dbpedia:Person ; dbpedia:hasChild ?child .
  ?child a dbpedia:Person ; dbpedia:parent ?parent .
  ?parent a dbpedia:Person ; dbpedia:name ""Min Hla Htut"" .
  ?mother rdfs:label ?mother_name .
  ?husband_name rdfs:label ?husband_name .
}
",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,46,train,Give me the band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?clapton_band
WHERE {
  ?clapton a dbpedia:Musician ;
            dbpedia:associatedBand ?clapton_band .
  ?clapton rdfs:label ""Eric Clapton"" .
}

SELECT ?band_name ?wilson_band
WHERE {
  ?wilson a dbpedia:Musician ;
             dbpedia:associatedBand ?wilson_band .
  ?wilson rdfs:label ""Kim Wilson"" .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
737,40,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child_name ?royalty_title
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?albrecht .
  ?albrecht a dbpedia:Person ;
            rdfs:label ""Albrecht, Duke of Württemberg"" .
  ?child_siblings a dbpedia:Person ;
               dbpedia:parent ?archduchess_helena .
  ?archduchess_helena a dbpedia:Person ;
                    rdfs:label ""Archduchess Helena of Austria"" .
  ?archduchess_margarete a dbpedia:Person ;
                    rdfs:label ""Archduchess Margarete Sophie of Austria"" .
  ?child_siblings rdfs:parent ?archduchess_margarete .
  ?child rdfs:parent ?child_siblings .
  ?child a dbpedia:Royalty
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
609,28,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```",4,4,5,2,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
347,19,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?regiment_name ?birthplace ?queen_name ?queen_birthplace
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:birthPlace ?birthplace .
  ?commander rdfs:label ?commander_name .
  ?regiment a dbpedia:MilitaryUnit ;
            dbpedia:name ?regiment_name .
  ?regiment rdfs:member ?commander .
  ?queen a dbpedia:Person ;
          dbpedia:birthPlace ?queen_birthplace .
  ?queen rdfs:label ?queen_name .
  ?queen dbpedia:monarchOf ?poland .
  ?commander dbpedia:parent ?queen
}
```

This query looks for:
- A person (`?commander`) who is a member of a military unit with the name ""2nd Dragoon Regiment"" (`?regiment_name`).
- This person's birth place (`?birthplace`).
- The commander's label (`?commander_name`).
- A person (`?queen`) who is a monarch in Poland (`?poland`).
- The queen's birth place (`?queen_birthplace`).
- The relationship between the commander and the queen as parent (`?commander dbpedia:parent ?queen`).",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
492,1,train,Give me the death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?death_place
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Carolyn Jones""@en .
  ?person dbpedia:deathPlace ?death_place
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,32,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?event_description ?tv_show
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?father_name .
  ?father_name a dbpedia:Person ;
               dbpedia:name ?father_name .
  ?child dbpedia:hasParent ?father_name .
  ?event a dbpedia:Event ;
            dbpedia:partOf ?societal_event .
  ?societal_event a dbpedia:SocietalEvent .
  ?regiment a dbpedia:MilitaryUnit ;
             dbpedia:name ""2nd Dragoon Regiment (France)"" .
  ?event dbpedia:involved ?regiment .
  ?event rdfs:label ?event_description .
  ?tv_show a dbpedia:TelevisionShow ;
              dbpedia:basedOn ?event .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
816,61,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_of_eugene_cattin ?parent_of_mariclare_costello
WHERE {
  ?eugene_cattin a dbpedia:Actor ; dbpedia:birthDate ?eugene_birthdate .
  ?mariclare_costello a dbpedia:Person ; dbpedia:spouse ?spouse_of .
  ?spouse_of a dbpedia:Person ; dbpedia:child ?child_of_spouse .
  ?child_of_spouse a dbpedia:Person ; dbpedia:parent ?parent_of_mariclare_costello .
  ?eugene_cattin rdfs:label 'Eugène Cattin' .
  ?mariclare_costello rdfs:label 'Mariclare Costello' .
}
",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
213,2,train,Who is the person decedent at Taipei?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?decedent_name ?decedent_birthplace
WHERE {
  ?decedent a dbpedia:Person ;
            dbpedia:birthPlace dbpedia:Taipei ;
            dcterms:deathDate ?deathDate .
  FILTER (xsd:date(?deathDate) < xsd:date(""2023-01-01""))
}
```",1,1,2,1,1,3,2,20,0,0,220,0,0.0,0
80,53,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?movie_title ?book_author_name ?book_title
WHERE {
  ?actor a dbpedia:Person ; dbpedia:role ?role .
  ?role a dbpedia:Alter_Ego ; dbpedia:name ?alter_ego_name .
  ?actor rdfs:label ?actor_name .
  ?movie a dbpedia:Film ; dbpedia:actor ?actor_name .
  ?movie dbpedia:hasAuthor ?book_author .
  ?book_author a dbpedia:Person ; dbpedia:name ?book_author_name .
  ?book_title a dbpedia:Book ; dbpedia:title 'Smartbomb' .
  ?actor rdfs:label ?actor_name .
  ?movie rdfs:label ?movie_title .
  ?alter_ego a dbpedia:Alter_Ego ; dbpedia:name 'The Shadow' .
}
",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
293,29,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake and party member of Republican Party (United States).","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse_name
WHERE {
  ?jackie_cooper a dbpedia:Person ;
                 dbpedia:birthName ""Harriette Arlene Lake"" ;
                 dbpedia:politicalPartyMember dbpedia:Republican Party (United States) .
  ?jackie_cooper rdfs:spouse ?spouse_name .
  ?spouse_name a dbpedia:Person ;
                dbpedia:birthPlace ?birthplace .
  FILTER (?birthplace = ""Mississippi"" )  # Assuming Jackie Cooper was born in Mississippi
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,6,train,Give me the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?awardee_name
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award dbpedia:Gillmore_Medal .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,24,train,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
          dbpedia:role dbpedia:The_Shadow .
  ?actor dbpedia:performIn dbpedia:Lasso_the_Moon.
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
905,33,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_name ?parent_royalty_name
WHERE {
  ?charles_spouse a dbpedia:Person ;
               dbpedia:spouse ?marie_louise ;
               dbpedia:father ?charles_father .
  ?marie_louise a dbpedia:Person ;
              dbpedia:parent ?parent_marie_louise .
  ?parent_marie_louise a dbpedia:Person ;
                 dbpedia:parent ?parent_royalty .
  ?parent_royalty a dbpedia:Royalty
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
140,5,train,"Give me the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name ?party_url
WHERE {
  ?party a dbpedia:PoliticalParty ;
         dbpedia:headquarter dbpedia:PlaceObject ;
         dbpedia:location dbpedia:City ;
         dbpedia:name ?party_name .
  ?party dbpedia:hasHQLocation dbpedia:Point ; 
         dbpedia:coordinates ""48.2222, -73.4429"" .
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language ""en"".
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,40,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name ?band_members
WHERE {
  ?kim_wilson a dbpedia:Musician ;
               dbpedia:birthDate ""1953-04-24"" ;
               dbpedia:name ""Kim Wilson"" .
  ?band a dbpedia:Band ;
         dbpedia:members ?band_members .
  ?kim_wilson dbpedia:isMemberOf ?band
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
687,9,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?team_name
WHERE {
  ?juan_carlos_molina a dbpedia:Footballer ; dbpedia:associatedTeam ?team_name .
  ?sergio_aguero a dbpedia:Footballer ; dbpedia:associatedTeam ?team_name .
}
",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,29,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of Rod Argent and associated musical artist of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?birth_name ?occupation ?artist_association
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthDate ?birth_date .
  ?person rdfs:label ?person_name .
  ?person foaf:name ?birth_name .
  ?person dbpedia:occupation ?occupation .
  ?artist_association a dbpedia:MusicArtist ;
                       dbpedia:associatedWith ?person .
  ?artist_association rdfs:label ?artist_name .
  FILTER (STRSTARTS(?artist_name, 'pacely') )
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
23,13,train,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace <urn:locity:Colombia> ;
               rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
  ?politician dbpedia:ParsCit <PRESIDIO_ANONYMIZED_URL>
}
```",3,4,4,2,2,2,3,28,0,0,5,0,0.0,0
737,22,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_parent_name ?parent_birthplace
WHERE {
  ?royalty_child a dbpedia:Person ;
               dbpedia:hasParent ?royalty_parent .
  ?royalty_parent a dbpedia:Person ;
                dbpedia:name ?royalty_parent_name ;
                dbpedia:birthPlace ?parent_birthplace .
  ?royalty_child rdfs:label ""Royalty Child Name"" . 
  ?royalty_parent rdfs:label ""Royalty Parent Name"" .
  FILTER (str(?parent_birthplace) = ""Mississippi"")  # Archduke Charles Louis was born in Mississippi
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,43,train,"Give me the entity in Charleston, South Carolina and war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?charleston_entity ?war_of_1812_role ?award_details
WHERE {
  ?charleston_entity a dbpedia:Location ;
                    dbpedia:locatedIn ""Charleston, South Carolina"" .

  ?war_of_1812 rdfs:label ""War of 1812"" .
  ?war_of_1812 dbpedia:participatedInBattle ?battle .
  ?battle a dbpedia:Battle .

  ?charleston_entity dbpedia:hasHistoricalRoleIn ?war_of_1812 .

  ?award_details a dbpedia:Award ;
                    rdfs:label ""Quincy Adams Gillmore Award"" .
  ?award_details gbox:awardedTo ?charleston_entity .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
816,48,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?movie_title
WHERE {
  ?allan_arbus a dbpedia:Person ;
                    dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""Allan Arbus""@en .
  ?allan_arbus dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           rdfs:label ""Child of Allan Arbus""@en .
  
  ?movie a dbpedia:Film ;
           dbpedia:starring ?actor .
  ?actor a dbpedia:Person ;
          rdfs:label ?actor_name .
  
  ?movie rdfs:isPartOf dbpedia:Production ;
                 dbpedia:productionLocation ""Los Angeles, California""@en .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
87,2,train,Give me the actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ;
           dbpedia:director ""Steven Spielberg"" ;
           dbpedia:starring ?actor_name .
  ?actor_name rdfs:label ?actor_name
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
288,8,train,Give me the theme of the show with Anumta Qureshi and native of Lahore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?v2 <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?show_name ?theme
WHERE {
  ?actor a dbpedia:Person ;
            dbpedia:birthPlace Lahore .
  ?actor rdfs:label ""Anumta Qureshi""@en .
  ?show a dbpedia:TelevisionShow ;
          dbpedia:mainActor ?actor ;
          dbpedia:theme ?theme .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
258,0,train,Give me the establishment of 1955-12-02.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?establishment_name ?establishment_date
WHERE {
  ?establishment a dbpedia:Event ;
               dbpedia:startDate ""1955-12-02"" .
  ?establishment rdfs:label ?establishment_name .
  ?establishment dcterms:identifier ?establishment_id .
  FILTER (lang(?establishment_name) = ""en"")  # Filter for English language
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,9,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?gustav_von_baggovut_war ?davydov_war 
WHERE { 
  ?gustav_von_baggovut a dbpedia:Person ; 
  dbpedia:birthPlace ?gustav_birthplace ; 
  dbpedia:militaryBranch ?military_branch ; 
  ?military_branch rdfs:label ?military_label . 
  ?davydov a dbpedia:Person ; 
  dbpedia:birthPlace ?davydov_birthplace ; 
  dbpedia:militaryBranch ?military_branch ; 
  ?military_branch rdfs:label ?military_label . 
  ?gustav_von_baggovut rdfs:label ?gustav_name . 
  ?davydov rdfs:label ?davydov_name . 
  ?military_label ns:inScheme dbpedia:military_branches . 
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
557,49,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?actor_name ?producer_works 
WHERE { 
  ?actor a dbpedia:Person ; 
  dbpedia:role ?role . 
  ?role rdfs:label 'The Shadow' . 
  ?actor rdfs:label ?actor_name . 
  ?actor dbpedia:filmProduced ?producer_works . 
  ?producer_works rdfs:label 'High Society Blues' . 
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,1,train,Give me the band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?band_name
WHERE {
  ?mark_eitzel a dbpedia:Person ;
                dbpedia:birthDate ""1967-03-01"" ;
                dbpedia:role dbpedia:Musician .
  ?mark_eitzel rdfs:label ?name .
  ?band a dbpedia:Band ;
           dbpedia:members ?band_member .
  ?band_member a foaf:Person ;
              foaf:name ?band_member_name ;
              dbpedia:role dbpedia:Musician .
  ?band rdfs:label ?band_name .
  ?mark_eitzel dbpedia:associatedWith ?band .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
353,33,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?father_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person ;
               rdfs:label ""Roger II of Sicily""@en ;
               dbpedia:birthPlace ""Sicily""^^xsd:string .
  ?child rdfs:label ?child_name .
  ?child dbpedia:parent ?father .
  ?father a dbpedia:Person ;
           rdfs:label ?father_name ;
           dbpedia:birthPlace ""England""^^xsd:string
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
361,18,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?actor_profession
WHERE {
  ?album dbpedia:hasAlbum ""Lasso the Moon"" .
  ?album a dbpedia:MusicAlbum .
  ?album dbpedia:isBasedOn ?film .
  ?film a dbpedia:Film .
  ?actor a dbpedia:Person ;
           dbpedia:hasRole ?role_in_film .
  ?role_in_film rdfs:label ""Actor"" .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:profession ?actor_profession
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
375,10,train,"Give me the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?native_name ?artist_type ?settlement_name 
WHERE { 
  ?native a dbpedia:Person ; 
  dbpedia:birthPlace ?settlement_name . 
  ?native rdfs:label ?native_name . 
  ?native dbpedia:pseudonym ?artist_name . 
  ?artist a dbpedia:MusicArtist ; 
  dbpedia:genre ?music_genre . 
  ?music_artist rdfs:label ?artist_name . 
  ?settlement rdfs:label ?settlement_name . 
  ?settlement language 'en' 
}",2,6,3,2,1,3,2,20,0,0,659,0,0.0,0
595,40,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouse_name WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:office dbpedia:President_of_the_United_States ;
               dbpedia:birthPlace dbpedia:United_States ;
               rdfs:label ?politician_name .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace dbpedia:United_States ;
           dbpedia:role dbpedia:Author ;
           dbpedia:writtenWork dbpedia:Living_History ;
           rdfs:label ?author_name .
  ?politician rdf:type dbpedia:Politician;
               dbpedia:spouse ?spouse_name .
  ?author dbpedia:subject ?politician .
  ?politician rdfs:label ""Bill Clinton"" .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
80,27,train,Give me the professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alter_ego_name ?alter_profession
WHERE {
  ?alter_ego a dbpedia:Character ;
               dbpedia:alterEgo ?alter_ego_name .
  ?alter_ego dbpedia:profession ?alter_profession .
  FILTER (?alter_ego_name = ""The Golden Master"")
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
871,44,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?father_title
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:birthDate ?birthDate;
            dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:title ?title .
  ?parent rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  ?parent ns:familyMember ?child .
  FILTER (?child_name = ""Victor Stanley"" AND ?parent_name = ""Frederick Stanley"")
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,43,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in Great Turkish War.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer_name ?successor_name ?turkish_war_commander_name ?turkish_war_commander_birthplace
WHERE {
  ?work a dbpedia:Book ;
           dbpedia:author ?writer_name .
  ?author foaf:name ?writer_name .
  
  ?khmelnytsky a dbpedia:Person ;
               dbpedia:successor ?successor_name .
  ?successor a dbpedia:Person ;
             dbpedia:birthPlace ?successor_birthplace .

  ?turkish_war_commander a dbpedia:Person ;
                       dbpedia:commanderInGreatTurkishWar true ;
                       dbpedia:birthPlace ?turkish_war_commander_birthplace .
  
  ?turkish_war_commander rdfs:label ?turkish_war_commander_name
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
737,21,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?parent_name 
WHERE { 
  ?child a dbpedia:Person ; 
  dbpedia:parent ?parent . 
  ?parent rdfs:label ?parent_name . 
  ?child rdfs:label ?child_name 
}",3,3,4,2,2,3,3,71,0,49494,1,0.0,0.0,0
531,59,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president_name ?residence_tenant
WHERE {
  ?president a dbpedia:OfficeHolder ;
             dbpedia:role dbpedia:President_of_Madrid_City_Council ;
             rdfs:label ""Manuel Pinto da Costa""@pt .
  ?president foaf:name ?president_name .
  ?residence a dbpedia:Building ;
            dbpedia:locatedIn Madrid ;
            dbpedia:role dbpedia:Official Residence of President of Madrid City Council .
  ?residence rdfs:tenant ?residence_tenant .
}
```

This query looks for a person named Manuel Pinto da Costa who held the role of President of the Madrid City Council, and then it identifies the tenant of the official residence associated with that role.",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
531,36,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?prime_minister_name ?office_in_madrid
WHERE {
  ?prime_minister a dbpedia:Politician ;
                    dbpedia:office dbpedia:Prime_Minister_of_Spain ;
                    dbpedia:party dbpedia:UCD ;
                    foaf:name ?prime_minister_name .
  ?office a dbpedia:Office ;
            dbpedia:location dbpedia:Madrid .
  ?office rdf:type [a dbpedia:Residence; rdfs:label ?office_in_madrid] .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,32,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_title 
WHERE { 
  ?charles_of_hungary a dbpedia:Person ; 
  dbpedia:parent ?charles_parent ; 
  dbpedia:spouse ?royalty_spouse . 
  ?charles_parent a dbpedia:Royalty ; 
  rdfs:label ?royalty_name . 
  ?royalty_spouse a dbpedia:Person ; 
  rdfs:label ?royalty_title . 
}",4,5,5,2,2,3,3,71,0,8010,1,0.0,0.0,0
871,40,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_title
WHERE {
  ?earl_of_derby a dbpedia:Person ;
               dbpedia:birthDate ""1824-10-29"" ;
               dbpedia:deathDate ""1908-01-09"" ;
               dbpedia:title ""17th Earl of Derby"" .
  ?son1 a dbpedia:Person ;
          dbpedia:name ""Arthur Stanley"" ;
          dbpedia:parent ?parent .
  ?awardee a dbpedia:Person ;
           dbpedia:name ""Rodney Lees"" ;
           foaf:award ?award .
  ?award a dbpedia:Award .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
89,4,train,Give me the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthDate ""1977-07-20"" ; # Example birth date for Min Hla Htut
           dbpedia:givenName ""Min Hla Htut"" .
  ?person dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parent_name
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,38,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?bela_iv .
  ?bela_iv a dbpedia:Person ;
            rdfs:label ""Béla IV of Hungary"" .

  ?grandchild a dbpedia:Person ;
             dbpedia:parent ?child .
  
  ?parent a dbpedia:Person ;
           dbpedia:child ?charles_i .
  ?charles_i a dbpedia:Person ;
               rdfs:label ""Charles I of Hungary"" .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
293,32,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?ruling_party_member_name ?spouse_name 
WHERE { 
  ?parish a dbpedia:AdministrativeDivision ; dbpedia:name ""Central, Louisiana"" . 
  ?ruling_party a dbpedia:PoliticalParty ; dbpedia:isDominantIn ?parish . 
  ?actor a dbpedia:Person ; dbpedia:name ""Kaley Cuoco"" . 
  ?spouse a dbpedia:Person ; dbpedia:name ?spouse_name . 
  ?actor dbpedia:hasSpouse ?spouse . 
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
782,38,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?band_name
WHERE {
  ?band_member a dbpedia:Musician ;
               dbpedia:associatedBand ?band .
  ?band a dbpedia:Band ;
           rdfs:label ?band_name .
  ?band_member foaf:name ?band_member_name .
  ?band_member ns:inDataset <http://dbpedia.org/> .
  ?author a dbpedia:Person ;
          rdfs:label ""Nicholas Michael Curran""@en;
          dbpedia:birthPlace ""London, United Kingdom""@en .
  ?band_member ns:inDataset <http://dbpedia.org/> .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
159,47,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?successor_name ?office_holder ?author_name 
WHERE { 
  ?commander a dbpedia:OfficeHolder ; dbpedia:type dbpedia:Politician ; dbpedia:role ?role . 
  ?role rdfs:label 'Commander' . 
  ?successor a dbpedia:Person ; dbpedia:officeHolder ?office_holder . 
  ?office_holder rdfs:label ?office_holder_name . 
  ?successor rdfs:label ?successor_name . 
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
80,41,train,Give me the professional in  and actor of the album of What You Know (T.I. song) and actor of the movie with .,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?movie_actor_name
WHERE {
  ?album a dbpedia:MusicAlbum ;
            dbpedia:performer ?artist_name .
  ?movie a dbpedia:Film ;
           dbpedia:actor ?movie_actor_name .
  ?artist_name = ""Tip"" @en .
  ?movie_actor_name = ""Keanu Reeves"" @en
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
213,4,train,"Who is the spouse, that is a writer, of Hu Jieqing?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?husband_name ?husband_birthplace ?husband_role ?husband_label
WHERE {
  ?hu_jieqing a dbpedia:Person ;
                 dbpedia:name ""Hu Jieqing"" .
  ?husband a dbpedia:Person ;
            dbpedia:name ?husband_name ;
            foaf:spouse ?hu_jieqing .
  ?husband a dbpedia:Writer .
  ?husband rdfs:label ?husband_label
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
103,5,train,"Give me the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name 
WHERE { 
  ?movie a dbpedia:Film ; 
  dbpedia:mainCharacter ?politician . 
  ?politician a dbpedia:Person ; 
  dbpedia:role dbpedia:Politician . 
  ?actor rdfs:label ?actor_name . 
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
668,10,train,Give me the associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birth_name
WHERE {
  ?song ""Pacely"" .
  ?artist a dbpedia:Musician ;
           dbpedia:hasSong ?song .
  ?person a dbpedia:Person ;
            rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en;
            dbpedia:birthDate ?birth_date .
  ?birth_date ex:givenName ?birth_name
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,29,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of Carl, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?grandparent_name 
WHERE { 
  ?child a dbpedia:Person ; 
  dbpedia:parent ?child_parent . 
  ?child_parent a dbpedia:Person ; 
  dbpedia:parent ?grandparent . 
  ?grandparent rdfs:label ?grandparent_name . 
  ?child rdfs:label ?child_name . 
  ?childParent dbpedia:childOf ?child_parent . 
  ?childParent dbpedia:childOf ?archduchess_margarete_sophie . 
  ?childParent dbpedia:childOf ?duke_philip . 
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,14,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX event: <http://dbpedia.org/ontology/eventProperty#>

SELECT ?manager_name ?team_name ?season_year ?sport_season
WHERE {
  ?movie dbpedia:mainActor ?actor .
  ?actor rdfs:label ""Thomas Letsch""@en .
  ?movie dbpedia:productionYear 2009 .
  ?movie dbpedia:genre ""Film"" .
  ?movie dbpedia:plot ""Set in a rural German village in 1913, 'The White Ribbon' tells the story of a series of unexplained and increasingly sinister events.""@en .
  ?team a dbpedia:SportTeam ;
         dbpedia:type ""Football team""@en .
  ?team rdfs:label ?team_name .
  ?season a dbpedia:Season ;
           dbpedia:type ""Soccer season""@en .
  ?season_startYear ?season_year .
  ?sport_season a dbpedia:SportSeason ;
                   dbpedia:type ""Football season""@en .
  ?sport_season startYear ?season_year .
  ?team dbpedia:managedBy ?manager .
  FILTER ( ?season_year = 2009 )
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
668,45,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist_name ?birth_name
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthPlace [ geonames:countryName ""Ghana"" ] ;
            rdfs:label ?artist_name .
  ?person a dbpedia:Person ;
            foaf:name ?birth_name ;
            dbpedia:birthPlace [ geonames:regionName ""Central Region, Ghana"" ] .
  ?artist ns:artistOf ?person .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
375,5,train,Give me the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?child_relationship_to_Hideyoshi
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?hideyoshi .
  ?hideyoshi a dbpedia:Person ;
             rdfs:label ""Toyotomi Hideyoshi""@en;
             dbpedia:birthPlace ""Nagoya Castle""^^xsd:string.
  ?child foaf:name ?child_name .
  OPTIONAL { 
    ?child dbpedia:hasChild ?child_relationship_to_Hideyoshi .
  }
}
```

This query looks for individuals (`?child`) who are the children of Toyotomi Hideyoshi (`?hideyoshi`). It also includes an optional clause to find any children that `?child` might have had, to capture a broader sense of ""child"" including descendants.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
668,11,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musical_artist_name
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Elorm Kabu Amenyah"" .
  ?person foaf:musicArtist ?musical_artist .
  ?musical_artist rdfs:label ?musical_artist_name
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
737,42,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?archduke_birthplace ?philipp_albrecht_child_name ?philipp_albrecht_birthplace
WHERE {
  ?archduke a dbpedia:Person ;
            dbpedia:birthPlace ?archduke_birthplace .
  ?royalty_child a dbpedia:Person ;
                dbpedia:child ?philipp_albrecht .
  ?philipp_albrecht a dbpedia:Person ;
                 dbpedia:child ?royalty_child .
  ?archduke rdfs:label ""Archduke Charles Louis of Austria"" .
  ?royalty_child rdfs:label ?royalty_child_name .
  ?philipp_albrecht rdfs:label ?philipp_albrecht_name
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
39,50,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?person a dbpedia:Musician ;
            dbpedia:name ""Robert Lamar Thompson"" .
  ?person rdfs:label ?band_name .
  ?person dbpedia:associatedBand ?band .
  ?band a dbpedia:Band
}
```

This query looks for individuals who are musicians named Robert Lamar Thompson and then associates those individuals with bands (identified by the `dbpedia:Band` property).",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
386,3,train,Give me the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality dbpedia:Lithuania ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Elena Žalinkevičaitė-Petrauskienė"" .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
353,60,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:birthDate ?birthDate .
  ?royalty dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
              dbpedia:child ?parent_of_roger_ii .
  ?parent_of_roger_ii a dbpedia:Person ;
                    dbpedia:spouse ?constance_burgundy .
  ?constance_burgundy a dbpedia:Person ;
                     dbpedia:birthDate ?constance_birth_date .
  ?royalty rdfs:label ?royalty_name
  FILTER (AND (?birthDate > ?constance_birth_date, ?birthDate < [math]2000-01-01[/math]))
}
```

This query looks for a person who is a descendant of Roger II and Constance of Burgundy, born after Constance's death (to ensure they are a grandchild) and before the year 2000 to limit the search to historical figures. The `FILTER` clause ensures we only get individuals fitting these criteria.

The exact individual found through this query would depend on the data available in DBpedia and might require further refinement based on more detailed genealogical records. However, this query structure provides a solid starting point for identifying such a person.",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
595,41,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?president_name ?role ?crisis_start ?crisis_end
WHERE {
  ?president a dbpedia:Person ;
             dbpedia:office dbpedia:President_of_the_United_States ;
             dbpedia:start_date ?crisis_start .
  ?president rdfs:label ?president_name .
  ?crisis a dbpedia:Event ;
            dbpedia:name ""Third Taiwan Strait Crisis"" ;
            dbpedia:start_date ?crisis_start ;
            dbpedia:end_date ?crisis_end .
  ?president dbpedia:participatedIn ?crisis
}
```

This query looks for a person with the role of President of the United States during the period of the Third Taiwan Strait Crisis (1995-1996). It will return the name of the president and confirm their involvement in the crisis.",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
353,53,train,"Give me the father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?parent_relationship ?child_relationship 
WHERE { 
  ?child a dbpedia:Person ; 
  dbpedia:parent ?parent ; 
  dbpedia:child ?child . 
  ?parent a dbpedia:Royalty ; 
  ?child a dbpedia:Monarch . 
  ?parent rdfs:label ?royalty_name . 
  ?child rdfs:label ?child_name . 
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
557,17,train,"Give me the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?movie_title ?work_title
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:roleInFilm ?role_in_film .
  ?role_in_film rdfs:label ""High Society Blues"" .
  ?actor foaf:name ?actor_name .
  ?actor dbpedia:filmWork ?work .
  ?work rdfs:label ?work_title
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
595,8,train,"Give me the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?war_name ?description WHERE {
  ?war a dbpedia:Conflict ;
         rdfs:label ?war_name .
  ?description a dbpedia:Description ;
               rdfs:label ?description_name .
  ?description ns:hasSubject ?war .
  ?description ns:propertyValue ""United States Navy"" .
  FILTER (lang(?description) = ""en"")  # Only consider English descriptions
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
89,61,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_surname ?royalty_name ?predecessor_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?spouse ;
           dbpedia:birthPlace ?royalty_birthplace .
  ?child rdfs:label ?royalty_name .
  ?spouse a dbpedia:Person ;
           dbpedia:parent ?saw_shwe_khet ;
           dbpedia:birthPlace ?spouse_birthplace .
  ?child dbpedia:hasPredecessor ?predecessor .
  ?predecessor a dbpedia:Person ;
             dbpedia:birthPlace ?predecessor_birthplace .
  ?spouse rdfs:label ?royalty_surname .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
595,31,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name
WHERE {
  ?author a dbpedia:Person ;
            dbpedia:birthPlace ?author_birthplace ;
            rdfs:label ""Hillary Clinton""@en .
  ?book a dbpedia:WrittenWork ;
           dbpedia:author ?author ;
           dbpedia:title ""Back to Work""@en .
  ?author foaf:spouse ?spouse_name .
  ?book rdfs:label ""Back to Work""@en .
  ?author dbpedia:birthPlace ""United States""^^xsd:string .
  ?author dbo:politicalAffiliation ""Democratic Party""^^xsd:string .
  ?spouse_name a foaf:Person .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
756,48,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?player_team ?season
WHERE {
  ?player a dbpedia:Person ; dbpedia:birthDate ?player_birthdate .
  ?player dbpedia:participantRole dbpedia:SoccerTeam ; dbpedia:team dbpedia:VfLBochum .
  ?player rdfs:label ?player_name .
  ?season a dbpedia:Event ; dbpedia:startDate '2007-07-01' ; dbpedia:endDate '2007-06-30' .
  ?team a dbpedia:SoccerClub ; dbpedia:name ?player_team .
  ?manager a dbpedia:Person ; dbpedia:role ?manager_role .
  ?team dbpedia:hasManager ?manager .
  ?manager rdfs:label ?manager_name .
}
",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
398,0,train,Give me the figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?title WHERE {
  ?show a dbpedia:Television_series ;
         dbpedia:hasBroadcaster ""Russia"" ;
         dbpedia:airDate ""2001""^^xsd:gYear ;
         rdfs:label ?title
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,10,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                   dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ""Vince Gilligan"" . 
  ?author rdfs:label ""Cece Bell"" .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,27,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name WHERE {
  ?nick_curran a dbpedia:Person ;
                 dbpedia:name ""Nick Curran"" ;
                 dbpedia:isArtist true .
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
905,50,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_child ?parent_royalty 
WHERE { 
  ?child a dbpedia:Person ; dbpedia:hasParent ?parent . 
  ?parent a dbpedia:Royalty ; dbpedia:hasSpouse ?spouse . 
  ?spouse a dbpedia:Person ; dbpedia:hasPartner ?partner . 
  ?partner a dbpedia:Royalty 
}
",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,9,train,"Who is the child, that is a politician, of the person decedent at Taipei?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child_name ?politician_name ?parent_deathplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:offspring ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:deathPlace ""Taipei""^^xsd:string ;
            rdfs:label ?parent_name .
  ?child rdf:type dbpedia:Politician .
  ?parent rdfs:label ?parent_name .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
609,54,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?cece_bell_birthplace ?governor_name ?governor_birthplace ?awardee_winner_name ?awardee_winner_birthplace
WHERE {
  ?cece a dbpedia:Person ;
         dbpedia:birthPlace ?cece_bell_birthplace .
  ?governor a dbpedia:Politician ;
           dbpedia:birthPlace ?governor_birthplace .
  ?paulus a dbpedia:Person ;
           dbpedia:birthPlace <http://dbpedia.org/ontology/Region>mw:Mississippi .
  ?vince_gilligan a dbpedia:Person ;
                    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?awardee_winner a dbpedia:Person ;
                   dbpedia:awardReceived [dbpedia:hasAwards [
                     a dbpedia:Award;
                     rdfs:label ?awardee_winner_name
                   ]]
  FILTER (lang(?awardee_winner_name) = ""en"")
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
375,3,train,"Give me the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?movie_title ?tv_show_name
WHERE {
  ?actor a dbpedia:Person ; dbpedia:name ""Vera Lynn"" .
  ?movie a dbpedia:Film ; dbpedia:star ?actor .
  ?tvShow a dbpedia:TelevisionSeries ; dbpedia:star ?actor .
  ?actor rdfs:label ?actor_name
}
",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
203,16,train,"Give me the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?war_description
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:participatedInMilitaryConflict ?war .
  ?war a dbpedia:MilitaryConflict ;
         dbpedia:name ?war_name ;
         dbpedia:description ?war_description .
  ?person rdfs:label ""William Bayne"" .
}
```

This query searches for a person named William Bayne who participated in a MilitaryConflict, and returns the name and description of that war.",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
871,28,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?earl_of_derby a dbpedia:Person ;
               dbpedia:birthDate ""1821-04-29"" ;
               dbpedia:title ""17th Earl of Derby"" .
  ?earl_of_derby dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:title ?parent_title
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
595,26,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?author_name WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolder ?office .
  ?office rdfs:label ""Chappaqua, New York"" .
  ?politician rdfs:label ?politician_name .
  ?book a dbpedia:WrittenWork ;
         dbpedia:author ?author_name .
  ?book rdfs:label ?book_title .
  FILTER (lang(?book_title) = ""en"")
}
```

This query searches for a politician from Chappaqua, New York, and then looks for books authored by them. It assumes that the book title is in English, which might need adjustment based on the actual language of the book title in DBpedia. The result will provide the author's name if such a match is found.",3,8,4,3,1,3,3,71,0,0,3,0,0.0,0
151,3,train,Give me the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?award_name WHERE {
  ?officer a dbpedia:Person ;
            dbpedia:birthDate ""1884-10-09"" ;
            dbpedia:deathDate ""1948-07-28"" ;
            dbpedia:serviceBranch dbpedia:BritishArmedForces ;
            rdfs:label ?officer_name .
  ?award a award:MilitaryAwards ;
         award:awardedTo ?officer ;
         award:name ?award_name
}
```

This query looks for a person born in 1884, died in 1948, who served in the British Armed Forces and finds any awards they received.",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
941,9,train,"Who is the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title ?child_name ?child_title
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:name ""Friederike Luise of Brunswick-Wolfenbüttel"" .
  ?child parents ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:title ?parent_title .
  ?parent rdfs:label ?parent_name
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
628,46,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birth_name WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthName ?birth_name ;
            rdfs:label ""Bobby Shmurda""@en .
  ?bandMember a dbpedia:BandMember ;
             dbpedia:band ?band ;
             dbpedia:memberOf ?artist .
  ?band a dbpedia:MusicalArtist ;
          rdfs:label ""GS9""@en .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
756,26,train,"Give me the native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_name
WHERE {
  ?leader a dbpedia:Politician ;
            dbpedia:office ""Chancellor of Germany (Federal Republic)"" ;
            dbpedia:birthPlace ?country_name .
}
```",3,4,4,3,1,3,3,71,0,0,5170,0,0.0,0
557,56,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?producer_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:roleInFilm ""High Society Blues"" .
  ?actor rdfs:label ?actor_name .
  
  ?actor dbpedia:filmProducers ?producer .
  ?producer a dbpedia:Person ;
            rdfs:label ?producer_name .
  
  ?actor dbpedia:roleInFilm ""The Shadow"" .
  ?actor rdfs:label ?actor_name .
  
  ?actor dbpedia:film ""The Adventures of Tom Sawyer (1938 film)"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
816,12,train,Give me the parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },,2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
737,50,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Define variables for each generation
?grandchild1 a dbpedia:Person; dbpedia:parent ?child1.
?grandchild2 a dbpedia:Person; dbpedia:parent ?child2.
?royalty a dbpedia:Royalty; dbpedia:hasParent ?descendant.

# Starting with Alexander of Württemberg and Archduke Charles Louis of Austria
SELECT ?grandchild1_name ?grandchild2_name ?royalty_name
WHERE {
  ?alexander a dbpedia:Person;
             dbpedia:parent ?father.
  ?father a dbpedia:Person; rdfs:label ""Alexander of Württemberg"";
            dbpedia:parent ?archduke_charles_louis.
  
  ?archduke_charles_louis a dbpedia:Person; rdfs:label ""Archduke Charles Louis of Austria"".

  OPTIONAL {
    ?child1 a dbpedia:Person; dbpedia:parent ?alexander.
    ?child2 a dbpedia:Person; dbpedia:parent ?alexander.
    
    ?child1 rdfs:label ?child1_name.
    ?child2 rdfs:label ?child2_name.
    
    OPTIONAL {
      ?grandchild1 a dbpedia:Person; dbpedia:parent ?child1.
      ?grandchild1 rdfs:label ?grandchild1_name.
      
      OPTIONAL {
        ?grandchild2 a dbpedia:Person; dbpedia:parent ?child2.
        ?grandchild2 rdfs:label ?grandchild2_name.
        
        ?royalty a dbpedia:Royalty; dbpedia:hasParent ?grandchild2.
      }
    }
  }
}
```

This query starts by identifying the children of Alexander and Archduke Charles Louis, then looks for their children (the grandchildren), and finally checks if any of these grandchildren are labeled as royalty. The `OPTIONAL` keyword allows for gaps in the data, making it robust against missing information.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
386,2,train,Give me the war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?davidov_war_involvement
WHERE {
  ?person a dbpedia:Person ;
  dbpedia:conflict ?war.
  ?war rdfs:label ?war_name .
  ?person rdfs:label 'Alexander Lvovich Davydov' .
}
",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
756,36,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_birthdate ?manager_bio
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthDate ?manager_birthdate ;
            rdfs:label ?manager_name ;
            dbpedia:pseudonym ?manager_pseudonym .
  
  ?manager_pseudonym = ""VfL Bochum manager"" .
  
  FILTER (?manager_birthdate >= ""1968-08-26"")
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,57,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX medals: <http://dbpedia.org/ontology/Medals>

SELECT ?recipient_name ?recipient_award ?war
WHERE {
  ?recipient a dbpedia:Person ;
            dbpedia:awardedMedal ?recipient_award .
  ?recipient dbpedia:conflict ?war .
  ?recipient_award a medals:UnitedStatesMilitaryHonor ;
                 medals:awardedTo ?recipient .
  ?war rdfs:label ""American Civil War"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
668,0,train,Give me the associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX musicbrainz: <http://musicbrainz.org/ns#>

SELECT ?artist_name WHERE {
  ?song a musicbrainz:Album ;
            musicbrainz:title ""Pacely"" .
  ?song dbpedia:performer ?artist_name
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
89,47,train,"Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . },,5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,41,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?person_name ?birthplace ?role 
WHERE { 
  ?person a dbpedia:Person ; 
  dbpedia:birthPlace ?birthplace ; 
  dbpedia:role dbpedia:CommanderInWar . 
  OPTIONAL { ?person rdfs:label ?person_name } . 
  OPTIONAL { ?person dbpedia:conflict dbpedia:RussoPolishWar_1654-1667 . } 
  OPTIONAL { ?person dbpedia:conflict dbpedia:GreatTurkishWar . } 
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
633,3,train,"Give me the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_classification
WHERE {
  ?francis_dbpedia a dbpedia:Person ;
               dbpedia:name ""Francis I, Duke of Lorraine"" .
  ?francis_dbpedia dbpedia:hasParent ?parent .
  ?parent a dbpedia:NoblePerson .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,3,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band_name WHERE {
  ?kim_wilson a dbpedia:Musician ;
               dbpedia:associatedBand ?band_name .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
737,27,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_relationship 
WHERE {
  ?parent a dbpedia:Person ; dbpedia:name ""Archduke Rudolf of Austria"".
  ?child1 a dbpedia:Person ; dbpedia:name ?child_name .
  ?parent dbpedia:offspring ?child1 .
  ?child1 a dbpedia:Person ; dbpedia:name ""Crown Prince Rudolf"" .
  ?grandchild a dbpedia:Person ; dbpedia:name ?royalty_name .
  ?child1 dbpedia:offspring ?grandchild .
}",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
347,15,train,"Give me the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?television_show_name
WHERE {
  ?war a dbpedia:SocietalEvent ;
         dbpedia:name ""Algerian War"" .
  ?television_show a dbpedia:TelevisionShow ;
                    dbpedia:name ?television_show_name ;
                    dbpedia:features ?war.
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
628,14,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?award_name ?region_name ?country_name ?locality_name
WHERE {
  ?award dcterms:hasAwards ?award_name ;
            dbpedia:awardedTo ?recipient .
  ?recipient a dbpedia:Person ;
             dbpedia:nationality ?country_name ;
             dbpedia:birthPlace ?region_name .
  ?region_name rdfs:label ?region_name .
  ?country_name rdfs:label ?country_name .
  ?locality_name rdfs:label ?locality_name
}
```",2,6,3,2,1,3,3,71,0,0,8569,0,0.0,0
737,9,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name WHERE {
  ?parent a dbpedia:Person ; dbpedia:hasChild ?child .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name .
  ?parent_name = 'Albrecht, Duke of Württemberg' 
}
",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,47,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?producer_name WHERE {
  ?producer a dbpedia:Person ;
            dbpedia:birthPlace ?producer_birthplace .
  ?actor rdfs:label ""Joe Yule"" .
  ?actor dbpedia:roleInFilm ?role .
  ?role rdf:type dbpedia:FilmRole .
  ?producer dbpedia:workIncludes ?role
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
293,48,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of Ann Sothern.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?party_member_name ?ruling_party
WHERE {
  ?landmark a dbpedia:Landmark ;
               geo:height ""20.116800000000001347""^^xsd:double ;
               dbpedia-owl:locatedIn <http://dbpedia.org/ontology/Location> .
  ?landmark rdfs:label ?landmark_name .
  ?ruling_party a dbpedia:PoliticalParty ;
                dbpedia:country <http://dbpedia.org/ontology/Country> .
  ?landmark dbpedia-owl:hasMember ?party_member .
  ?ruling_party rdfs:label ?ruling_party_name .
  FILTER (STRSTARTS(?landmark_name, ""Statue_of_liberty"") OR STRSTARTS(?landmark_name, ""Empire_State_Building""))
  BIND (?party_member_name AS ?party_member_name)
  BIND (?ruling_party_name AS ?ruling_party)
}
```

This query looks for a landmark with the specified elevation and checks if its name matches either ""Statue of Liberty"" or ""Empire State Building"". It then finds the ruling party of the country where this landmark is located and associates any members of that party with the landmark. The `FILTER` clause ensures we only consider landmarks in the United States, given Ann Sothern's nationality.

Please note that DBpedia's data might not be fully comprehensive or up-to-date, so the results may vary based on the current state of the dataset.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,21,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?director_name
WHERE {
  ?actor1 a dbpedia:Actor ;
           dbpedia:film ""The Man Who Loved Cat Dancing"" .
  ?actor2 a dbpedia:Actor ;
           dbpedia:film ""The Man Who Loved Cat Dancing"" .
  ?actor1 rdfs:label ?actor_name .
  ?actor2 rdfs:label ?actor_name .
  OPTIONAL { 
    ?actor1 foaf:wasDirectedBy ?director .
    ?actor2 foaf:wasDirectedBy ?director .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
89,43,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?queen_name ?royalty_status ?father_name ?father_royalty_status ?mother_name
WHERE {
  ?predecessor a dbpedia:Monarch ; dbpedia:birthPlace ?predecessor_birthplace .
  ?child a dbpedia:Royalty ; dbpedia:parent ?child_parent .
  ?child_parent a dbpedia:Person ; dbpedia:birthPlace ?mother_birthplace .
  ?father a dbpedia:Person ; dbpedia:parent ?father_parent .
  ?father_parent a dbpedia:Monarch ; dbpedia:birthPlace ?father_birthplace .
  ?mother a dbpedia:Person ; dbpedia:spouse ?mother_spouse
  ?father rdfs:label ?father_name .
  ?mother rdfs:label ?mother_name .
  ?mother_spouse rdfs:label ?queen_name .
  ?father_royalty_status rdfs:label 'Royalty' .
  ?child_royalty_status rdfs:label 'Royalty' .
}
",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
353,5,train,"Who is the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?king_name ?title WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:monarchy ?title .
  ?king rdfs:label ?king_name .
  ?title a dbpedia:Office;
          dbpedia:title ?title_name .
  ?title rdfs:label ?title_name
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
151,5,train,Give me the entity in the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?artist a dbpedia:Person ;
           dbpedia:name ""Burhan Belge""@en ;
           dbpedia:birthPlace ?birthplace .
}
```",2,2,3,2,1,2,2,9,0,0,249,0,0.0,0
386,18,train,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?war_of_kgb_von_baggovut ?golden_sword_winner_war
WHERE {
  ?kgb_von_baggovut a dbpedia:Person ;
                    dbpedia:birthDate ""1869-10-28"" ;
                    dbpedia:nationality ""German"" ;
                    dbpedia:deathDate ""1941-08-21"" .
  ?kgb_von_baggovut dbpedia:participatedInBattle ?war_of_kgb_von_baggovut .
  ?golden_sword_winner a award:GoldenSwordForBravery ;
                       rdfs:label ?golden_sword_winner_war .
  FILTER (?war_of_kgb_von_baggovut = ?golden_sword_winner_war)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
263,0,train,Give me the native of Middlesex.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ""Middlesex"" .
}
```",1,1,2,1,1,2,3,28,0,0,935,0,0.0,0
293,31,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }",,4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,24,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?grandparent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?grandparent .
  ?grandparent rdfs:label ""Stephen V of Hungary"" .
  ?child rdfs:label ?child_name .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
756,59,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_birthplace ?player_name ?player_birthplace ?team_name ?team_season ?team_leader_name ?team_leader_birthplace
WHERE {
  ?player a dbpedia:SportPerson ; dbpedia:birthPlace ?player_birthplace .
  ?team a dbpedia:SportClub ; dbpedia:type dbpedia:SoccerTeam ; dbpedia:season ?team_season .
  ?team rdfs:label ?team_name .
  ?player rdf:type dbpedia:SportTeamMember ; dbpedia:memberOf ?team .
  ?team leader dbpedia:country ?team_leader_country .
  ?team_leader a dbpedia:Person ; dbpedia:birthPlace ?team_leader_birthplace .
  ?manager a dbpedia:Manager ; dbpedia:managed ?player .
  ?manager rdfs:label ?manager_name .
  ?team rdfs:label ?team_name .
  ?team_leader rdfs:label ?team_leader_name
}
",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
288,6,train,Give me the theme of the show with Anumta Qureshi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv: <http://purl.org/dc/terms/>

SELECT ?show_name ?theme
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ""Anumta Qureshi""@en .
  ?actor tv:role ?actor_role .
  ?show a tv:TelevisionShow ;
         rdfs:label ?show_name ;
         tv:hasRole ?actor_role .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
557,24,train,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?film_title ?work_title
WHERE {
  ?film a dbpedia:Film ;
            dbpedia:producer ?producer_name .
  ?collins_work a dbpedia:FilmEditorialWork ;
               dbpedia:editedFilm ?film_title .
  ?film_title rdfs:label ""A Star Is Born"" .
  ?collins_work rdfs:label ""Cora Sue Collins' Work Title"" .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
513,17,train,"Give me the entity in United Kingdom and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_name ?leader_residence
WHERE {
  ?politician a dbpedia:Person ;
               dbpedia:birthPlace ?birthplace ;
               dbpedia:affiliatedPoliticalParty ?party .
  ?party a dbpedia:PoliticalParty ;
          dbpedia:name ?party_name .
  ?leader a dbpedia:Person ;
           dbpedia:role dbpedia:PartyLeader ;
           foaf:name ?leader_name ;
           dbpedia:birthPlace ?leader_birthplace .
  ?politician rdfs:label ""George Savage"" .
  ?party rdfs:member ?politician .
  FILTER (lang(?politician) = ""en"")  # Ensure we're looking at an English-speaking politician
}
```

This query will search for a person named George Savage who was affiliated with a political party in the United Kingdom. It will then identify the leader of that party and their residence. The `FILTER` clause ensures we are only considering English-speaking politicians to match historical records accurately.",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
39,4,train,Give me the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?person_profession
WHERE {
  ?person a dbpedia:Person ;
           foaf:name ?person_name .
  OPTIONAL { ?person dbpedia:occupation ?person_profession }
}
```",1,1,2,1,1,3,3,71,2,947540,5,2.1107243794998007e-06,0.2857142857142857,4.221417573128144e-06
585,8,train,Give me the child of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actress_name ?child_name
WHERE {
  ?actress a dbpedia:Actress ;
             dbpedia:hasChild ?child .
  ?child a dbpedia:Person
}
```",2,2,3,2,1,3,2,20,0,0,935,0,0.0,0
80,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional_name ?field
WHERE {
  ?professional a dbpedia:Person ;
               dbpedia:occupation ?field .
  ?field rdfs:label ""Your Specific Field"" . # Replace ""Your Specific Field"" with the actual field of interest
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
905,40,train,"Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:parent ?grandparent .
  ?child a dbpedia:Person ;
           dbpedia:child ?parent ;
           dbpedia:birthPlace ""Kingdom of Hungary (1000–1946)"" .
  ?grandparent a dbpedia:Person ;
              dbpedia:spouse ?spouse_name ;
              dbpedia:child ?parent .
  ?child_name rdfs:label ?child_name
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
492,17,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?death_place1 ?death_place2
WHERE {
  ?person1 a dbpedia:Person ; dbpedia:deathPlace ?death_place1 .
  ?person2 a dbpedia:Person ; dbpedia:deathPlace ?death_place2 .
  ?person1 rdfs:label 'Sal Mineo' .
  ?person2 rdfs:label 'Richard Egan' .
}
",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
89,49,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_predecessor_name 
WHERE {
  ?royalty a dbpedia:Monarch ; dbpedia:country 'Myanmar' ; dbpedia:reignStart ?start_date .
  ?child a dbpedia:Person ; dbpedia:parent ?parent ; dbpedia:birthDate ?child_birthdate .
  ?parent a dbpedia:Person ; dbpedia:name 'Min Hla Htut' .
  ?child rdfs:label ?child_name .
  ?royalty rdfs:label ?royalty_name .
  ?child ns:timeFilteredBefore ?start_date .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
89,31,train,Give me the spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name WHERE {
  dbpedia:Anawrahta a dbpedia:Person ;
  dbpedia:wife ?spouse_name . }
",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,3,train,"Give me the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?philip a dbpedia:Person ;
           dbpedia:name ""Philip"";
           dbpedia:birthDate ""1882-10-25"" ;
           dbpedia:offspring [ dbpedia:parent ?parent ] .
  ?parent a dbpedia:Person ;
          dbpedia:title ?parent_title .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
198,11,train,Give me the war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?awardee_name ?war WHERE {
  ?awardee a dbpedia:Person ;
  dbpedia:recipientOf dbpedia:Medal_of_Honor .
  ?awardee dbpedia:conflict ?war .
}",2,2,3,2,1,3,3,71,0,0,611,0,0.0,0
225,4,train,"Give me the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award_name WHERE {
  ?award a dbpedia:Award ;
           dbpedia:awardedToOrganization dbpedia:Anita_Borg_Institute .
  ?award rdfs:label ?award_name
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
80,24,train,Give me the actor of the album of What You Know (T.I. song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?director_name
WHERE {
  ?video a dbpedia:MusicVideo ;
            dbpedia:director ?director .
  ?actor a dbpedia:Person ;
          dbpedia:roleIn ?video .
  ?actor rdfs:label ?actor_name .
  ?director rdfs:label ?director_name
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
103,28,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?actor a dbpedia:Person ;
  dbpedia:role dbpedia:Actor ;
  dbpedia:role2 dbpedia:Actor .
  ?actor rdfs:label ?actor_name .
}
",4,5,5,2,3,3,3,71,0,0,9,0,0.0,0
905,61,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_relationship
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:parent ?parent ;
            dbpedia:child ?grandchild .
  ?parent a dbpedia:Royalty ;
           rdfs:label ?parent_name .
  ?grandchild a dbpedia:Person ;
              rdfs:label ?royalty_name .
  FILTER (lang(?parent_name) = ""en"" )  # Assuming English labels for simplicity
}
```

This query looks for individuals (`?person`) who have a parent (`?parent`) labeled as royalty (`?parent_name`) and a child (`?grandchild`) also labeled as royalty. It will return the name of the royalty individual (`?royalty_name`) and the relationship (`?royalty_relationship`).",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
668,57,train,"Give me the person born as the birth name of Joey B and associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birth_name ?artist_name ?artist_genre
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthName ?birth_name ;
            dbpedia:associatedBand/Artist ?artist .
  ?artist a dbpedia:MusicArtist ;
           dbpedia:genre ?artist_genre .
  ?person rdfs:label ""Joey B""@en .
  ?artist rdfs:label ?artist_name
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,57,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office ?residence WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:office ?office .
  ?politician rdfs:label ""Alberto Núñez Feijóo""@es .
  ?party a dbpedia:PoliticalParty ;
            dbpedia:name ""Spanish Socialist Workers' Party""@es ;
            dbpedia:politicalIdeology ""Social democracy"" .
  ?residence a dbpedia:Building ;
               dbpedia:locatedIn <http://dbpedia.org/ontology/Location> ;
               rdfs:label ?residence_label .
  ?politician dbpedia:party ?party .
  ?politician dbpedia:birthPlace <http://dbpedia.org/ontology/Spain> .
  ?residence dbpedia:locatedIn <http://dbpedia.org/ontology/Spain> .
}
```

This query looks for a politician named Alberto Núñez Feijóo, his office (which is inferred to be the Prime Minister's office), the party he belongs to (PSOE), and his residence (assumed to be the Moncloa Palace). It also ensures that both the politician and the residence are located in Spain.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,31,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }",,4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
769,15,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in Lai Sun Cheung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?player_name ?birthdate ?role1 ?role2 ?match_name 
WHERE { 
  ?player a dbpedia:Person ; 
    dbpedia:birthDate ?birthdate ; 
    dbpedia:role dbpedia:SoccerPlayer . 
  ?player dbpedia:role dbpedia:SportsManager . 
  ?player dbpedia:role dbpedia:SoccerManager . 
  ?match a dbpedia:Match ; 
    dbpedia:participants [ ?participant a dbpedia:Person ; dbpedia:role dbpedia:Player ] ; 
    dbpedia:player ?player_name . 
  ?match dbpedia:involved ?player . 
  ?player rdfs:label ?player_name . 
  FILTER ( ?birthdate = '1967-04-14' ) 
}",4,8,5,3,2,3,2,20,0,0,2,0,0.0,0
412,21,train,Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity_name ?entity_description
WHERE {
  ?entity a dbpedia:Entity ;
            rdfs:label ?entity_name .
  ?entity dbo:partOfLocation ""Athens"" .
  ?entity dbpedia:is_part_of ""Greek War of Independence"" .
  OPTIONAL { ?entity dbpedia:associatedWith ""Napoleon Zervas"" }
  OPTIONAL { ?entity dbpedia:associatedWith ""War of 1822"" }
  OPTIONAL { ?entity dbpedia:associatedWith ""AWARD"" }
  OPTIONAL { ?entity dbpedia:associatedWith ""Military Valor Recognition"" }
}
```

This query looks for entities in Athens that are associated with the Greek War of Independence (which includes the War of 1822), Napoleon Zervas, and awards or military valor recognition. It uses optional statements to capture related information.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,17,train,Give me the war of Hashiba Hidekatsu and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?hashiba_participation ?koichiro_participation
WHERE {
  ?hashiba a dbpedia:Person ;
            dbpedia:name ""Hashiba Hidekatsu"" .
  ?koichiro a dbpedia:Person ;
             dbpedia:name ""Koichirō""@en .
  ?hashiba rdfs:label ?hashiba_participation .
  ?koichiro rdfs:label ?koichiro_participation .
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?hashiba_participation, ?koichiro_participation .
}
```

This query will return the name of any wars in which Hashiba Hidekatsu and individuals named Koichirō participated. The exact results depend on the data available in DBpedia.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
905,21,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse_name
WHERE {
  ?charles_I a dbpedia:Person ;
             dbpedia:birthDate ""1316-07-15"" ;
             dbpedia:father ?charles_Father ;
             dbpedia:wife ?spouse .
  ?charles_Father a dbpedia:Person ;
               rdfs:label ""Charles I of Hungary"" .
  ?spouse a dbpedia:Person ;
           rdfs:label ?spouse_name
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
263,15,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name
WHERE {
  ?earl_of_strathmore a dbpedia:NobleTitle ;
                  dbpedia:holder ?holder .
  ?holder rdfs:label ?parent_name .
  ?earl_of_strathmore foaf:familyMember ?holder
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
203,20,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?military_force_name
WHERE {
  ?campaign a dbpedia:Conflict ;
               dbpedia:participatedIn dbpedia:Napoleonic_Wars ;
               dbpedia:location ""Egypt and Syria"" .
  ?commander a dbpedia:Person ;
             dbpedia:role ?role ;
             rdfs:label ?commander_name .
  ?military_force a dbpedia:MilitaryForce ;
                  dbpedia:participatedIn ?campaign ;
                  rdfs:label ?military_force_name .
  ?commander foaf:name ?commander_name .
  ?military_force foaf:name ?military_force_name
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
782,29,train,Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band_name ?band_members
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:hasMember ?member .
  ?member rdfs:label ?band_member_label .
  ?band_member_label LIKE '%Eric Clapton%' .
  ?band_member_label LIKE '%Nick Curran%' .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
225,10,train,"Give me the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?awardee_name WHERE {
  ?awardee a dbpedia:Person ; 
  dbpedia:nationality dbpedia:Japan ; 
  dbpedia:award dbpedia:Anita_Borg_Institute_Women_of_Vision_Awards .
}",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
78,22,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX musicbrainz: <http://musicbrainz.org/ns#>

SELECT ?writer_name ?artist_name ?artist_uri
WHERE {
  ?work a musicbrainz:Album ;
            musicbrainz:albumArtist ?artist_name .
  ?work rdfs:label ""Wizards of Waverly Place (soundtrack)""@en .
  ?artist a dbpedia:Musician;
           dbpedia:birthDate ?birth_date .
  ?writer a dbpedia:Person;
           dbpedia:givenName ""Alex"" ;
           dbpedia:surname ""Zucker"" ;
           rdfs:label ?writer_name .
  ?writer foaf:composes ?work .
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
293,61,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_birthname
WHERE {
  ?parent a dbpedia:Person ; dbpedia:name ?parent_name .
  ?parent dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ; dbpedia:name ?grandparent_name .
  ?grandparent rdfs:label 'Albert S. D'Allesandro'@en .
  ?parent dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person ; dbpedia:name 'Nat Levine'@en .
  ?film a dbpedia:Film ; dbpedia:productionCompany 'Universal Pictures'@en ; dbpedia:title 'The Flying Deuces'@en
}
",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
492,0,train,Give me the death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?death_place
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace ;
            dbpedia:deathPlace ?death_place .
  ?person rdfs:label ""Reed Howes""@en .
  ?birthplace geo:coordinates ?coordinates .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
871,9,train,"Give me the parent of Victor Stanley (Royal Navy officer) and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?officer a dbpedia:Person ;
            dbpedia:birthDate ?birthDate ;
            dbpedia:navyService ?navyService .
  ?officer rdfs:label ""Victor Stanley"" .
  ?earl a dbpedia:Person ;
           dbpedia:birthDate ?birthDate ;
           dbpedia:title ?title .
  ?earl rdfs:label ""Edward Stanley, 17th Earl of Derby"" .
  ?officer dbpedia:parent ?parent .
  ?earl dbpedia:parent ?parent
}
```

This query looks for individuals named Victor Stanley and Edward Stanley, 17th Earl of Derby, and then finds their parents using the `dbpedia:parent` relationship.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,16,train,Give me the war of the child of Toyotomi Hideyoshi and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_war
WHERE {
  ?toyotomi_hideyoshi a dbpedia:Person ;
                    dbpedia:parent ?parent .
  ?parent rdfs:label ""Toyotomi Hideyoshi""@en .
  ?child a dbpedia:Person ;
            dbpedia:childOf ?parent ;
            rdfs:label ?child_name .
  OPTIONAL { ?child dbpedia:participatedIn ?child_war }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
87,16,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and actor of Paradise (2013 film).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:appearedInFilm ""Paradise (2013 film)"" .
  ?actor rdfs:label ?actor_name .
  FILTER (
    EXISTS { 
      ?film a dbpedia:Film ;
               dbpedia:mainActor ?actor .
      OPTIONAL {
        ?film2 a dbpedia:Film ;
                   dbpedia:starringAudreyHepburn .
        ?actor rdf:type dbpedia:Person;
                 dbpedia:actedInFilm ?film2 .
      }
    }
  )
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
159,49,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_role ?successor_name ?successor_role 
WHERE {
  ?commander a dbpedia:Person ; dbpedia:role dbpedia:Commander ; dbpedia:partOfEvent dbpedia:Russo_Polish_War_1654–667 .
  ?commander rdfs:label ?commander_name .
  ?successor a dbpedia:Person ; dbpedia:role dbpedia:Politician ; dbpedia:officeHolder .
  ?successor rdfs:label ?successor_name .
  ?commander rdfs:label ?commander_name .
  ?successor rdfs:label ?successor_name .
  ?commander dbpedia:birthPlace ?commander_birthplace .
  ?successor dbpedia:birthPlace ?successor_birthplace
  FILTER (lang(?commander_name) = 'en' OR lang(?successor_name) = 'en')
}
",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
203,43,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805) and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?military_force_cape_finisterre ?commander_name
WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:partOfMilitaryConflict [ a dbpedia:Event; rdfs:label ""Battle of Cape Finisterre (1805)""] .
  ?battle dbpedia:commandedBy ?commander .
  ?commander a dbpedia:Person;
           dbpedia:role ""Commander"";
           rdfs:label ?commander_name
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
531,33,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_holder_name ?office_place ?conflict_name ?event_description
WHERE {
  ?office_holder a dbpedia:OfficeHolder ;
                 dbpedia:role dbpedia:Politician ;
                 dbpedia:birthPlace ""Madrid"" .
  ?office_holder rdfs:label ?office_holder_name .
  ?conflict a dbpedia:MilitaryConflict ;
            dbpedia:startYear 1936 ;
            dbpedia:endYear 1939 .
  ?event_description a dbpedia:SocietalEvent ;
                    dbpedia:description ""Spanish Civil War"" .
  ?office_holder dbpedia:participatedIn ?conflict .
  ?office_holder dbpedia:participatedIn ?event_description
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
557,58,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?vince_gilligan_name WHERE { ?vince_gilligan a dbpedia:Person ; dbpedia:birthPlace ?vince_gilligan_birthplace . },6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
723,17,train,"Give me the band member of Mudvayne and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX musicBrainz: <http://musicbrainz.org/ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?band_member1 ?band_name ?organization_band_member
WHERE {
  ?nate_newton a dbpedia:Person ;
               dbpedia:name ""Nate Newton"" .
  ?nate_newton dbpedia:isMemberOf musicBrainz:band [ musicBrainz:artistID ?band_id ] .
  ?band_id a musicBrainz:Band ;
             dbpedia:name ?band_name .
  ?band_member1 a dbpedia:Person ;
               dbpedia:role ""Band member"" .
  ?band_member1 dbpedia:memberOf ?organization_band .
  ?organization_band a dbpedia:Organization ;
                    dbpedia:type ""Music band""
  FILTER (?band_id = ?band_id_of_mudvayne)
}
```

### Completed
By executing this SPARQL query on a DBpedia endpoint or a compatible service, we would obtain the band members of Mudvayne and the organization they belong to. The exact individuals would depend on the data available in DBpedia at the time of the query. However, based",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
353,22,train,Give me the child of the child of Alfonso VI of León and Castile and child of Roger II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_relationships
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent1 .
  ?parent1 a dbpedia:Person ;
            rdfs:label ""Alfonso VI of León and Castile"" .
  ?child2 a dbpedia:Person ;
           dbpedia:hasParent ?parent2 .
  ?parent2 a dbpedia:Person ;
            rdfs:label ""Roger II of Sicily"" .
  ?child1 rdfs:label ?child_name .
  ?child2 rdfs:label ?child_name .
  ?child1 dbpedia:isChildOf ?child_relationships_to_Alfonso .
  ?child2 dbpedia:isChildOf ?child_relationships_to_Roger
}
```

This query looks for individuals who are children of both Alfonso VI and Roger II, thereby identifying a common child between the two royal lines.",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
80,51,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . },,5,5,6,3,2,3,3,71,0,0,4,0,0.0,0
633,17,train,"Give me the spouse of Renée of Bourbon and parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spouse_name ?parent_of_father 
WHERE { 
  ?person a dbpedia:Royalty ; 
  dbpedia:father ?father ; 
  ?father rdfs:label ?father_name . 
  ?spouse rdfs:label ?spouse_name . 
  ?father dbpedia:parent ?parent_of_father . 
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
723,9,train,"Give me the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:productionCompany ?producer .
  ?movie rdfs:label ""Nothing to Lose (1994)"" .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
816,18,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },,3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
249,2,train,"Give me the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work_name
WHERE {
  ?work a dbpedia:CreativeWork ;
         dbpedia:creator ?creator .
  ?creator a dbpedia:Person ;
            dbpedia:name ""Jamsetji Nusserwanji Tata"" .
  ?work rdfs:label ?work_name .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
816,58,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . }",,6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
609,61,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?author dbpedia: nationality ""American"" .
  ?governor_birthplace = ?author_birthplace
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
80,13,train,Give me the actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name WHERE {
  ?video a dbpedia:MusicVideo ;
            dbpedia:featuredArtist [ a dbpedia:Person; rdfs:label ""T.I."" ] .
  ?video rdf:about <http://www.youtube.com/watch?v=7lX9qB5YRmg> . # Example URL for the music video
  ?actor a dbpedia:Person;
          dbpedia:role ?actor_role .
  ?video dbpedia:features ?actor .
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
375,0,train,Give me the author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_name
WHERE {
  ?book a dbpedia:Book ;
         dbpedia:author ?author_name .
  ?author_name rdfs:label ""Cece Bell"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
723,16,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_band_member ?cc_band_members
WHERE {
  ?producer a dbpedia:MusicProducer ; dbpedia:associatedBand Nothing to Gein .
  ?cc a dbpedia:MusicalArtist ; dbpedia:name 'Cavalera Conspiracy' .
  ?producer rdfs:member ?producer_band_member .
  ?cc dbpedia:bandMember ?cc_band_members .
}",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
756,11,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?player a dbpedia:SoccerPlayer ;
            dbpedia:club dbpedia:VfL_Bochum ;
            dbpedia:season 2007-08 .
  ?player foaf:name ?player_name .
  ?manager a dbpedia:Manager ;
            dbpedia:managedTeam dbpedia:VfL_Bochum ;
            dbpedia:startYear ?manager_start_year .
  ?manager rdfs:label ?manager_name .
  FILTER (?player_start_year <= ?manager_start_year)
}
```

This query will retrieve the manager's name and birth place who managed VfL Bochum during the 2007-08 season. The filter ensures that the manager started managing before or in that specific season.",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
531,39,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name ?office
WHERE {
  ?miguel_maura a dbpedia:Politician ;
               dbpedia:memberOf ?miguel_party .
  ?miguel_party a dbpedia:PoliticalParty ;
                rdfs:label ?party_name .
  ?mariano_rajoy a dbpedia:Politician ;
               dbpedia:memberOf ?mariano_party .
  ?mariano_party a dbpedia:PoliticalParty ;
                rdfs:label ?party_name .
  ?miguel_party rdfs:label ?miguel_party_label .
  ?mariano_party rdfs:label ?mariano_party_label
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,3,train,Give me the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award_name ?award_description
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Vince Gilligan""@en .
  ?person dbpedia:awardedWith ?award .
  ?award a dbpedia:Award
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,22,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office ?party_name
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:office ?office .
  ?politician rdfs:label ?politician_name .
  ?office rdfs:label ?office_name .
  ?politician dbpprop:politicalParty ?party .
  ?party a dbpedia:PoliticalParty ;
          dbpedia:name ?party_name .
  ?politician foaf:name ?politician_name .
  ?party dbpprop:member ?politician
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
472,1,train,Give me the administration of Christian IX of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration_name ?start_year ?end_year
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:reignStart ?start_year .
  ?king dbpedia:name ""Christian IX of Denmark"" .
  ?king dbpedia:reignEnd ?end_year .
  FILTER (?start_year <= 1863 && ?end_year > 1863)
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
58,12,train,Give me the spouse of Linda Bruckheimer and producer of the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name ?movie_title
WHERE {
  ?wife a foaf:Person ;
           dbpedia:name ""Linda Bruckheimer"" .
  ?husband a foaf:Person ;
            dbpedia:name ""Jerry Bruckheimer"" ;
            dbpedia:role dbpedia:producer .
  ?movie a dbpedia:Film ;
           dbpedia:director ?director_name ;
           dbpedia:producer ?husband_name ;
           rdfs:label ?movie_title .
  ?director a foaf:Person ;
           dbpedia:name ""Rob Marshall"" .  # Example director, replace with actual
  FILTER (str(?movie_title) = ""Pirates of the Caribbean"")
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
585,7,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?award_name ?location
WHERE {
  ?award a dbpedia:Award ;
           dcterms:name ?award_name .
  ?award dcterms:isPartOf ?location .
  ?location rdfs:label ?location_name
}
```",2,4,3,2,1,3,2,20,0,0,8569,0,0.0,0
263,9,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthDate ?birthdate ;
           dbpedia:spouse ?spouse_name .
  ?spouse_name a dbpedia:Person ;
               dbpedia:birthDate ?spouse_birthdate .
  ?parent a dbpedia:Person ;
          dbpedia:birthPlace ?parent_location .
  ?person rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
  ?person rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
}
```

This query looks for individuals named Mary Elphinstone and Patrick Bowes-Lyon, extracts their spouse's names, then finds the birthdates and locations of those spouses to infer their parents.",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
782,13,train,Give me the band of the band member of Eric Clapton.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name WHERE {
  ?eric_clapton a dbpedia:Musician ;
                  dbpedia:associatedBand ?band_name .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
258,10,train,"Who is the person born, that is a politician, as the birth name of Eleonora Menicucci?",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?politician_birthplace
WHERE {
  ?politician a dbpedia:Politician ;
             dbpedia:name ?politician_name ;
             dbpedia:birthPlace ?politician_birthplace .
  ?politician_name rdfs:label ""Eleonora Menicucci""@en
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,7,train,Give me the birthday of Marcelo Sarmiento.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthday
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthday ?birthday .
  ?person rdfs:label ""Marcelo Sarmiento""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
816,2,train,Give me the parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?child a dbpedia:Character ;
           dbpedia:appearsIn ""A Wrinkle in Time"" .
  ?child dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:birthPlace ?parent_birthplace .
  ?parent rdfs:label ?parent_name .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
159,52,train,"Give me the commander in Great Turkish War and reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?successor_name ?office ?event_name 
WHERE { 
  ?pac a dbpedia:Person ; dbpedia:name ""Michał Kazimierz Pac"" ; dbpedia:role ""Commander"" . 
  ?pac2 a dbpedia:OfficeHolder; dbpedia:office ?office . 
  ?pac2 dbpedia:successor ?successor_name . 
  ?event a dbpedia:Event ; dbpedia:name ""Great Turkish War"" . 
  ?successor_name rdfs:label ?successor_name . 
  ?office rdfs:label ?office . 
  ?event rdfs:label ?event_name",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
225,11,train,Give me the birthplace of Chieko Asakawa and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?birthplace_name ?region_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?birthplace_name .
  ?birthplace geo:location ?location .
  ?location rdfs:label ?region_name .
  ?person rdfs:label ""Chieko Asakawa"" .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
871,19,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commonParent
WHERE {
  ?awardee1 a dbpedia:Person ; dbpedia:birthDate ?awardee_birthdate1 .
  ?awardee1 rdfs:label ?awardee_name1 .
  ?awardee1 dbpedia:commander_of_Royal_Victorian_Order .
  ?stanley a dbpedia:Person ; dbpedia:birthDate ?stanley_birthdate1 .
  ?stanley rdfs:label ?stanley_name1 .
  ?awardee1 dbpedia:parent ?commonParent .
  ?stanley dbpedia:parent ?commonParent .
  FILTER (?awardee_name1 = ?stanley_name1) }
",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,44,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?elisabeth_name ?elisabeth_birthplace ?charles_ii_of_neaples_marriage
WHERE {
  ?elisabeth a dbpedia:Person ;
             dbpedia:birthPlace ?elisabeth_birthplace .
  ?charles_ii_of_neaples a dbpedia:Person ;
                 dbpedia:name ""Charles II of Naples"" ;
                 dbpedia:wife ?elisabeth .
  ?charles_ii_of_neaples rdfs:label ""Charles II of Naples""
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
557,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name WHERE {
  ?shadow a dbpedia:Character ;
            dbpedia:appearsIn ""The Shadow (radio drama)"" .
  ?alter_ego_name rdfs:label ?alter_ego_name .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
103,35,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor_name ?actor_birthplace ?role_in_the_shadow
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name ;
           dbpedia:birthPlace ?actor_birthplace .
  ?actor dbpedia:roleInSeries ""The Shadow""^^xsd:string .
  ?actor dbpedia:roleInMovie ""The Rite""^^xsd:string .
  ?actor rdfs:label ?role_in_the_shadow .
  FILTER ( ?actor_name = ""Richard E. Grant"" )
}",4,5,5,2,2,3,3,71,0,0,13,0,0.0,0
609,49,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name ?author_birthplace WHERE {
  ?author a dbpedia:Person ;
    dbpedia:birthPlace ?author_birthplace .
  ?author rdfs:label 'Cece Bell' .
}
",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,13,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?father_title
WHERE {
  ?emperor a dbpedia:Monarch ;
           dbpedia:name ""Ferdinand III"" ;
           dbpedia:reignStart ""1659"" .
  ?son a dbpedia:Person ;
         dbpedia:name ""Ferdinand IV"" ;
         dbpedia:parent ?father .
  ?father a dbpedia:Person ;
          dbpedia:title ?father_title .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
80,31,train,Give me the actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor_name
WHERE {
  ?author dbpedia:hasBook ""Smartbomb"" .
  ?movie a moviedb:Film ;
           dbpedia:mainActor ?actor_name .
  ?movie rdfs:label ""ATL"" . 
}",4,4,5,3,2,3,3,71,0,0,10,0,0.0,0
39,20,train,Give me the professional in the alter ego of The Shadow and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?shadow_name ?singer_name
WHERE {
  ?shadow a dbpedia:Character ;
            dbpedia:alter_ego ""Lamont Cranston"" .
  ?singer a dbpedia:Artist ;
            rdfs:label ?singer_name .
}
```",3,3,4,2,2,3,3,71,0,0,5422,0,0.0,0
293,45,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_birthplace ?father_name ?father_birthplace
WHERE {
  ?tisha_sterling a dbpedia:Person ;
                  dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:birthPlace ?parent_birthplace .
  ?parent rdfs:label ?parent_name .
  ?father a dbpedia:Person ;
           dbpedia:birthPlace ?father_birthplace .
  ?father rdfs:label ?father_name .
  ?tisha_sterling dbpedia:hasParent ?father .
  ?parent foaf:parentOf ?father
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,3,train,Give me the time zone of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?time_zone
WHERE {
  ?country a dbpedia:Country ;
            dbpedia:locatedIn dbpedia:Asia ;
            dbpedia:standardTimeZone ?time_zone .
  ?country rdfs:label ""Japan"" .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
871,58,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?politician_name ?politician_birthplace 
WHERE { 
  ?alumnus a dbpedia:Person ; dbpedia:alumniOf Eton College . 
  ?politician a dbpedia:Politician ; dbpedia:child ?child . 
  ?child rdfs:label 'Victor Stanley' . 
  ?child a dbpedia:Person ; dbpedia:parent ?politician . 
  ?alumnus rdfs:label ?alumnus_name . 
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
68,8,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?father_birthplace
WHERE {
  ?dorothea a dbpedia:Person ;
            dbpedia:name ""Dorothea of Denmark, Electress Palatine"" ;
            dbpedia:birthPlace ?dorothea_birthplace .
  ?dorothea dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:name ?parent_name ;
           dbpedia:birthPlace ?parent_birthplace .
  ?parent rdfs:label ?parent_name .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
756,21,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?vitesse_manager ?bochum_manager
WHERE {
  ?vitesse_manager a dbpedia:Manager ; dbpedia:managedTeam dbpedia:SBV_Vitesse .
  ?bochum_manager a dbpedia:Manager ; dbpedia:managedTeam dbpedia:VfL_Bochum .
  ?vitesse_manager rdfs:label ?manager_name .
  ?bochum_manager rdfs:label ?manager_name
}
",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
472,2,train,Give me the administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration_name ?administration_description
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:monarchyName ?administration_name .
  ?king rdfs:label ""Olaf I of Denmark""@en .
  ?administration a dbpedia:PoliticalAdminstration ;
               dbpedia:inPowerFrom ?start_date .
  ?start_date a date-time.
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
628,26,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?person_name ?birth_place WHERE { ?person a dbpedia:Person ; dbpedia:birthPlace ?birth_place . ?person dbpedia:musicGenre music . ?birth_place rdfs:label ?person_name },3,4,4,3,1,3,3,71,0,0,59,0,0.0,0
213,10,train,"Give me the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?work WHERE {
  ?spouse a dbpedia:Person ; dbpedia:occupation dbpedia:Writer .
  ?spouse wdt:P31 ?husband .
  ?husband a dbpedia:Person ; dbpedia:name ""Hu Jieqing"" .
  ?spouse rdfs:seeAlso ?work .
}",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
871,60,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?politician_status
WHERE {
  ?alumnus a dbpedia:EtonCollegeAlumnus ;
  ?alumnus rdfs:label ?alumnus_name .
  ?politician a dbpedia:Politician ;
  ?politician dbpedia:hasChild ?child;
  ?child a dbpedia:Person ;
  ?child rdfs:label ?child_name .
  ?alumnus rdfs:father ?parent ;
  ?parent a dbpedia:Person ;
  ?parent rdfs:label ?parent_name .
  ?child rdfs:father ?grandparent ;
  ?grandparent a dbpedia:Person
}
",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,51,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_title 
WHERE { 
  ?child a dbpedia:Person ; 
  dbpedia:parent ?grandparent . 
  ?grandparent a dbpedia:Person ; 
  dbpedia:parent Archduchess Margarete Sophie of Austria ; 
  ?child rdfs:label ?royalty_name . 
  ?child dbpedia:hasParent ?parent_of_child . 
  ?parent_of_child a dbpedia:Person ; 
  dbpedia:parent ?child_of_archduke_rudolf . 
  ?child_of_archduke_rudolf rdfs:label ?royalty_title . 
}",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
353,19,train,"Give me the child of the parent of Roger III, Duke of Apulia and father of William II of Sicily.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_name ?grandparent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
              dbpedia:name ?grandparent_name .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name .
  ?grandparent rdfs:label ?grandparent_name
}
```

This query starts from a person (Roger III) and follows the 'hasParent' relationship to find his parent (Richard III), then follows the 'hasParent' relationship from Richard III to find his parent (likely a figure not explicitly named in DBpedia, but inferred as his father, which would be Richard III's father, William the Conqueror).",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,4,train,"Give me the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?war_name WHERE {
  ?regiment a dbpedia:MilitaryUnit ;
               dbpedia:fullName ""30th (Cambridgeshire) Regiment of Foot"" .
  ?regiment dcterms:partOfEvent ?war .
  ?war rdfs:label ?war_name
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
103,20,train,Give me the actor of Dispatches from Elsewhere and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_profession
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthDate ?actor_birthdate .
  ?actor foaf:name ?actor_name .
  ?actor dbpedia:occupation ?actor_profession .
  ?actor rdfs:label ?actor_name .
  FILTER (STRSTARTS (?actor_birthdate, ""1973-10-05""))  # Assuming Shatrughan Sinha's birth date is October 5, 1973
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
492,16,train,Give me the death place of Reed Howes and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?death_place_reed_howes ?death_place_aladdin_actor
WHERE {
  ?reed_howes a dbpedia:Person ;
               dbpedia:deathPlace ?death_place_reed_howes .
  ?aladdin_actor a dbpedia:Person ;
                  dbpedia:role dbpedia:Aladdin (1958 film) ;
                  dbpedia:deathPlace ?death_place_aladdin_actor
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
905,7,train,Give me the predecessor of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor_name ?predecessor_birthplace
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:monarchyStartYear ?year .
  ?king rdfs:label ""Stephen V of Hungary""@en .
  ?king dbpedia:birthPlace ?birthplace .
  ?precedingMonarch a dbpedia:Monarch ;
                    dbpedia:predecessor ?predecessor .
  ?precedingMonarch rdfs:label ?predecessor_name .
  FILTER (?year < ?king dbpedia:monarchyStartYear)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
80,10,train,Give me the professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace
WHERE {
  ?actor a dbo:Person ;
         dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ?actor_name .
  FILTER (lang(?actor_name) = ""en"")  # Ensure the name is in English
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,42,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist_name ?band_name
WHERE {
  ?person a dbpedia:Musician ;
             dbpedia:birthDate ""1954-10-24"" ; # Nicholas Michael Curran's birth date
             rdfs:label ?person_name .
  ?band a dbpedia:Band ;
           dbpedia:name ?band_name .
  ?person foaf:member ?band .
  ?band rdfs:label ?band_name .
  ?person_name = ""Nick Curran"" .
  FILTER (lang(?person_name) = ""en"")  # Assuming English language for simplicity
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
905,14,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_title
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:parent ?great-grandparent .
  ?great-grandparent a dbpedia:Person ;
                dbpedia:title ?royalty_title .
  ?child rdfs:label ?royalty_name
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
119,15,train,"Who is the leader of the administration, that is an event, of Anxo Quintana?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?president_name ?president_administration
WHERE {
  ?president a dbpedia:Politician ;
             dbpedia:office dbpedia:President_of_Galicia .
  ?president rdfs:label ?president_name .
}
```",2,3,3,2,1,3,3,71,0,0,9,0,0.0,0
816,33,train,Give me the parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ""Eugène Cattin""@fr .
  ?actor dbpedia:roleInFilm dbpedia:Judgment_The_Trial_of_Julius_and_Ethel_Rosenberg .
  ?parent a dbpedia:Person ;
         dbpedia:birthPlace ?parent_birthplace .
  ?actor dbpedia:hasParent ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,44,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_of_nunez_feijo'o ?residence_country_of_quiros ,?psoe_name ?quiros_tenancy_in_psoe
WHERE {
  ?nunez_feijo'o a dbpedia:Politician ;
                 dbpedia:office ?office_of_nunez_feijo'o .
  ?office_of_nunez_feijo'o rdfs:label ?office_of_nunez_feijo'o .

  ?quiros a dbpedia:Person ;
            dbpedia:residence ?residence_country_of_quiros .
  ?residence_country_of_quiros rdfs:label ?residence_country_of_quiros .

  ?psoe a dbpedia:PoliticalParty ;
           dbpedia:name ?psoe_name .
  ?quiros rdfs:member ?psoe .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
871,0,train,Give me the parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX naval_officer: <http://purl.org/dc/terms/#navalOfficer>

SELECT ?parent_name WHERE {
  ?victor_stanley a naval_officer ;
                  dbpedia:birthDate ""1841-04-01"" ;
                  rdfs:label ""Victor Stanley"" .
  ?parent a naval_officer ;
           dbpedia:birthPlace ?parent_birthplace .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
347,6,train,"Give me the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?emperor .
  ?emperor rdfs:label ""Ferdinand III, Holy Roman Emperor"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:birthPlace ?child_birthplace
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
87,23,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ; dbpedia:mainActor ?actor_name .
  ?movie rdfs:label ?movie_title .
  ?actor_name rdfs:label ?actor_name .
  FILTER (lang(?movie_title) = 'en') 
}",4,8,5,2,2,2,3,28,0,0,1,0,0.0,0
769,0,train,Give me the player in Ye Jia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv_series: <http://purl.org/dc/elements/1.0/>

SELECT ?actor_name WHERE {
  ?actor a tv_series:Character ;
           tv_series:appearsIn tv_series:The_Untamed ;
           dbpedia:realName ?actor_name
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
311,15,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of Mark Eitzel.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?artist_name WHERE {
  ?song rdfs:label ""Lotus"" .
  ?song dbpedia:performer [ a dbpedia:Band ; dbpedia:name ?band_name ] .
  ?band_name ns:member ?artist_name .
  ?artist_name a dbpedia:Musician .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
103,58,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . },,6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
375,6,train,Give me the parent of Kate Dimbleby and author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""Kate Dimbleby""@en .
  ?parent a dbpedia:ParentOf ?person .
  ?parent rdfs:label ?parent_name .
  FILTER (lang(?person) = ""en"")
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
143,14,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Cynthia Morgan""@en .
  ?person dbpedia:musicalArtist ?artist_name
}
```",3,3,4,3,1,3,2,20,0,0,6,0,0.0,0
159,4,train,"Give me the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?office ?war WHERE {
  ?commander a dbpedia:Person ; dbpedia:officeHolder ?office .
  ?commander rdfs:label ?commander_name .
  ?war a dbpedia:Event ; dbpedia:name ""Russo-Polish War (1654-1667)"".
}",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
595,9,train,Give me the spouse of Hillary Clinton and author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouse_name ?author_name WHERE {
  ?person a dbpedia:Person ;
            dbpedia:givenName ""Hillary Clinton"" ;
            dbpedia:sibling [ dbpedia:familyRelation ""Spouse of"" ] .
  ?book a dbpedia:Book ;
           dbpedia:title ""Back to Work"" ;
           dbpedia:author ?author_name .
  ?author a dbpedia:Person ;
          dbpedia:name ?author_name .
  OPTIONAL { ?book dbpedia:author [ a dbpedia:Person; dbpedia:name ?spouse_name ] }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the person decedent at Switzerland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedent_name ?decedent_deathplace
WHERE {
  ?decedent a dbpedia:Person ;
            dbpedia:deathPlace ?decedent_deathplace .
  ?decedent_deathplace rdfs:label ""Switzerland"" .
}
```",1,1,2,1,1,2,3,28,0,0,906,0,0.0,0
706,4,train,"Give me the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?movie_name ?movie_language WHERE {
  ?actor a dbpedia:Person ; dbpedia:givenName ""Dipankar"" ; dbpedia:surname ""De"" .
  ?movie a dbpedia:Film ; dbpedia:language ?movie_language .
  ?actor dbpedia:actedIn ?movie .
}
",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
531,48,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_holder_name ?office ?
       ?politician_name ?politician_office
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:party dbpedia:Partido_Popolario (Conservative Republican Party) .
  ?politician dbpedia:term_start_date ""2003-01-01""^^xsd:date .
  ?office_holder a dbpedia:Office_Holder ;
                  dbpedia:office ?office .
  ?office_holder rdfs:label ?office_holder_name .
  ?politician rdfs:label ?politician_name .
  ?office a dbpedia:Political_Office ;
            dbpedia:location Madrid;
            dbpedia:year ""2003""^^xsd:gYear .
}
```

This query looks for:
- A politician (`?politician`) who is a member of the Conservative Republican Party (`dbpedia:Partido_Popolario`).
- An office holder (`?office_holder`) who held an office in Madrid in the year 2003.
- The label of the politician (`?politician_name`) and the office holder (`?office_holder_name`).",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . },,3,7,4,3,1,3,2,20,0,0,28,0,0.0,0
609,55,train,"Give me the birth place of the author of El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name ?author_birthplace ?governor_name ?governor_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?author rdfs:label ""Cece Bell""@en .
  ?governor rdfs:label ?governor_name .
  ?vince_gilligan rdfs:label ""Vince Gilligan""@en
}
```

This query uses the following reasoning:
- We use `dbpedia:Person` to ensure we're looking at individuals.
- We filter for the specific authors, governors, and Vince Gilligan using their names.
- The `rdfs:label` property is used to match the given names in English.",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
731,2,train,Give me the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://purl.org/ontology/bio/award>

SELECT ?award_name WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthDate ""1820-04-01""^^xsd:date ;
            rdfs:label ""Edmund Hakewill-Smith""@en .
  ?person dbpedia:field_honours ?award .
  ?award a award:Award
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
87,10,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name WHERE {
  ?janusz_kaminski a dbpedia:Person ;
                       dbpedia:name ""Janusz Kamiński"" ;
                       dbpedia:spouse ?spouse_name .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
816,6,train,Give me the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Photographer""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?photographer_name ?photographer_profession 
WHERE { 
  ?photographer a dbpedia:Person ; 
  dbpedia:occupation ?photographer_profession . 
  ?photographer rdfs:label ?photographer_name . 
}",1,1,2,1,1,3,3,71,0,548539,937,0.0,0.0,0
687,40,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?player_name ?birthplace ?team_name 
WHERE { 
?player a dbpedia:Athlete ; dbpedia:birthDate '1970-04-01' . 
?player dbpedia:hasTeammate ?teammate . 
?teammate a dbpedia:Person; rdfs:label ?team_name . 
?team_name ns:memberLogics some ?player . 

FILTER ( ?player != ?teammate ) 
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,53,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },,6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
782,35,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musical_artist_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthDate ""1953-03-24"" ; # Nicholas Michael Curran's birth date
            rdfs:label ""Nicholas Curran""@en .
  ?person foaf:name ?musical_artist_name .
  FILTER (regex(str(?musical_artist_name), ""Fabulous Thunderbirds"")) # Search for the band name
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
531,9,train,Give me the tenant of Madrid and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?prime_Minister_name ?residence
WHERE {
  ?prime_Minister a dbpedia:Politician ;
                    dbpedia:office dbpedia:Prime_Minister_of_Spain .
  ?prime_Minister foaf:name ?prime_Minister_name .
  ?residence a dbpedia:Building ;
              dbpedia:locatedIn <http://dbpedia.org/ontology/Place> ""Madrid"" .
  ?prime_Minister dwc:hasResidence ?residence .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
143,1,train,Give me the associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?associated_artist_name WHERE {
  ?artist a dbpedia:MusicArtist ;
            dbpedia:hasAlbum ""Cynthia Morgan EP"" .
  ?cynthia_morgan a dbpedia:Person ;
               dbpedia:givenName ""Cynthia"" ;
               dbpedia:familyName ""Morgan"" ;
               rdfs:label ""Cynthia Morgan""@en .
  ?artist dbpedia:collaborationWith ?cynthia_morgan .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
585,2,train,Give me the awardee of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?awardee_category ?awardee_award
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award ?awardee_award .
  ?awardee rdfs:label ?awardee_name .
  ?awardee_award a award:Award .
  ?awardee_award schema:locatedIn dbpedia:New_York
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,60,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }",,6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
151,0,train,Give me the entity in Ottoman Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity_name ?entity_description
WHERE {
  ?entity a dbpedia:Entity ;
            dbpedia:type ""Location"" .
  ?entity rdfs:label ?entity_name .
  OPTIONAL { ?entity dbpedia:country ""Ottoman Empire"" }
}
```",1,1,2,1,1,2,2,9,0,0,247,0,0.0,0
143,11,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of Cynthia Morgan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?movie_title ?music_artist_name 
WHERE { 
  ?movie a dbpedia:Film ; 
  dbpedia:star ?actor . 
  ?actor rdfs:label ?actor_name . 
  ?movie dbpedia:associatedWith ?music_album . 
  ?music_album a dbpedia:MusicAlbum ; 
  dbpedia:artist ?music_artist . 
  ?music_artist rdfs:label ?music_artist_name . 
  FILTER ( ?actor = ""Afeez Oyetoro"" ) 
  AND ?music_artist = ""Cynthia Morgan"" 
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
595,21,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spouse_name WHERE {
  ?author a dbpedia:Person ; dbpedia:birthPlace ?author_birthplace .
  ?author rdfs:label 'Joan Didion' .
  ?author dbpedia:marriedTo ?spouse_name .
  ?spouse_name a dbpedia:OfficeHolder ; dbpedia:politicalAffiliation 'United States' .
  ?spouse_name rdfs:label ?spouse_name_label .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,57,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?governor_name ?author_name ?parent_name ?child_name ?parent_of_child_name
WHERE {
  ?actor a dbpedia:Actor ; dbpedia:role ?actor_role .
  ?actor_role P31S some dbpedia:FilmRole ; dbpedia:filmTitle 'Judgment: The Trial of Julius and Ethel Rosenberg'.
  ?governor a dbpedia:Politician ; dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ; dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ; dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?actor rdfs:label ?actor_name .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
  ?actor dbpedia:hasParent ?parent_of_actor .
  ?parent_of_actor a dbpedia:Person ; dbpedia:birthPlace ?parent_birthplace .
  ?author dbpedia:hasParent ?parent_of_author .
  ?parent_of_author a dbpedia:Person ; dbpedia:birthPlace ?parent_author_birthplace .
  ?child a dbpedia:Person ; dbpedia:parent ?child_parent .
  ?child_parent a dbpedia:Person ; dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name .
  ?child_parent rdfs:label ?parent_of_child_name
}
",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,30,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?singer_name ?band_name
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ""Robert Lamar Thompson""@en .
  ?person dbpedia:occupation dbpedia:musician ;
             dbpedia:genre ""Pop music""@en .
  ?person dbpedia:birthPlace ?birthplace .
  ?band a dbpedia:Band ;
           dbpedia:leader ?singer .
  ?singer rdfs:label ?singer_name .
  ?band rdfs:label ?band_name
}
```",4,5,5,2,3,3,3,71,0,0,3,0,0.0,0
158,23,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?emperor_name ?emperor_birthplace ?footballer_name ?footballer_birthplace ?footballer_deathplace
WHERE {
  ?emperor a dbpedia:Monarch ;
            dbpedia:birthPlace ?emperor_birthplace .
  ?footballer a dbpedia:Person ;
             dbpedia:birthPlace ?footballer_birthplace ;
             dbpedia:diedIn ?footballer_deathplace .
  ?emperor rdfs:label ?emperor_name .
  ?footballer rdfs:label ?footballer_name
}
```",4,6,5,2,2,2,3,28,0,0,36,0,0.0,0
531,14,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX pp: <http://dbpedia.org/ontology/> 

SELECT ?leader_name WHERE {
  ?leader a pp:Politician ;
  pp:office ?office .
  ?office rdfs:label ?office_label
}
",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
706,17,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of Ebrahim Alkazi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_birthplace
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:director Dipankar_De .
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ?actor_birthplace .
  ?actor foaf:role [ rdf:type foaf:Role ; rdfs:label ""Actor"" ] .
  ?actor rdfs:label ?actor_name .
  ?movie dbpedia:mainCharacter ?actor .
  ?actor_birthplace geo:location [ a geo:Location; rdfs:label ""Lucknow, Uttar Pradesh, India"" ] .
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
375,22,train,Give me the war of the person born as Koichirō and entity in the birth place of Yamaza Enjirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?koichiro_name ?war WHERE {
  ?koichiro a dbpedia:Person ;
             rdfs:label ""Koichirō""@ja;
             dbpedia:nationality ?nationality .
  ?war a dbpedia:Conflict ;
         dbpedia:startYear ?start_year ;
         dbpedia:endYear ?end_year .
  ?nationality geo:locatedIn ?birth_place_region .
  ?birth_place_region rdfs:label ""Yamaza Enjirō""@ja .
}
```

This query does the following:
- Filters for individuals named Koichirō.
- Looks for conflicts (wars) with a start and end year.
- Links the nationality of Koichiro to a geographic location (birth place region).
- Matches the birth place region to Yamaza Enjirō.",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
668,3,train,Give me the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
           dbpedia:birthPlace ?governor_birthplace .
  ?governor rdfs:label ?governor_name
}
```",1,1,2,1,1,3,3,71,0,203423,1,0.0,0.0,0
769,4,train,"Give me the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?result <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?organization_name ?sport_club_name ?sports_team_name ?soccer_club_name
WHERE {
  ?organization a dbpedia:Organization ;
               dbpedia:type ""Sports club"" .
  ?organization rdfs:label ?organization_name .

  ?sports_club a dbpedia:SportsClub ;
                dbpedia:type ""Football club"" .
  ?sports_club rdfs:label ?sports_club_name .

  ?sports_team a dbpedia:SportsTeam ;
               dbpedia:type ""Football team"" .
  ?sports_team rdfs:label ?sports_team_name .

  ?soccer_club a dbpedia:SoccerClub ;
                dbpedia:type ""Football club"" .
  ?soccer_club rdfs:label ?soccer_club_name .
  
  ?organization ns:member ?sports_club .
  ?sports_club ns:hasTeam ?sports_team .
  ?soccer_club ns:hasTeam ?sports_team .
}

```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
293,11,train,"Give me the party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_member_name ?party_name
WHERE {
  ?central louisiana rdf:type dbpedia:PoliticalRegion .
  ?ruling_party a dbpedia:PoliticalParty ;
               dbpedia:controls ?central louisiana .
  ?party_member a dbpedia:Person ;
                dbpedia:isMemberOf ?ruling_party ;
                dbpedia:name ?party_member_name .
  ?ruling_party rdfs:label ?party_name
}",2,2,3,2,1,3,3,71,0,0,21486,0,0.0,0
595,61,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?book_title ?author_name
WHERE {
  ?politician a dbpedia:Politician ; dbpedia:officeHolder ?office ; dbpedia:birthPlace dbpedia:Chappaqua, New York .
  ?politician rdfs:label ?politician_name .
  ?war a dbpedia:Disease ; dbpedia:eventType 'World War I' .
  ?politician dbpedia:participatedIn ?war .
  ?book a dbpedia:WrittenWork ; dbpedia:type [ dbpedia:literature#Book ] .
  ?book rdfs:author ?author .
  ?author rdfs:label ?author_name .
}
",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
119,59,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },,6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
609,19,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?governor rdfs:label ""Glenn Youngkin"" @en
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,30,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?producer_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:starring ?actor .
  ?movie dbpedia:producer ?producer .
  ?actor rdfs:label ?actor_name .
  ?producer rdfs:label ?producer_name .
  FILTER ( ?actor = ""Janet Gaynor"" )
  AND ( ?movie = ""The Adventures of Tom Sawyer"" )
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
23,21,train,Give me the party of Roy Barreras and entity in Colombia and party of the father of Sofía Petro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party_name ?colombia_entity
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:nationality ""Colombia"" ;
               dbpedia:politicalParty ?party_name .
  ?entity a dbpedia:Entity ;
            dbpedia:locatedIn ""Colombia"" .
  ?politician foaf:name ?party_name .
  ?entity rdfs:label ?colombia_entity
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,12,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name
WHERE {
  ?book dbpedia:title ""A Picture of Britain"" .
  ?author a dbpedia:Person ;
         dbpedia:birthPlace london .
  ?author rdfs:label ?author_name .
  ?author dbpedia:parentOfSome ?child .
  ?child a dbpedia:Person ;
          dbpedia:birthPlace london ;
          rdfs:label ?child_name
  FILTER (regex(?child_name, 'London'))  # Ensure the child is from London
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
103,25,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_profession
WHERE {
  ?actor a dbpedia:Person ;
         rdfs:label ?actor_name .
  ?actor dbpedia:occupation ?actor_profession .
  FILTER (?actor_name = ""Alec Baldwin"") 
}
```",3,3,4,2,2,3,3,71,0,0,4210,0,0.0,0
119,16,train,"Give me the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE { 
  ?citizen a dbo:Person ; dbo:nationality dbo:Spain . 
  ?citizen dwc:residence ?country . 
}",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
39,24,train,Give me the band of Bob Thompson (musician) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name WHERE {
  ?bob_thompson a dbpedia:Person ;
                 dbpedia:birthDate ""1977-06-27"" ;
                 dbpedia:name ""Bob Thompson"" ;
                 dbpedia:role ""The Shadow"" .
  ?bob_thompson rdfs:member ?band .
  ?band a dbpedia:Band
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
347,44,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent1_name ?parent1_birthplace ?parent2_name ?parent2_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent1 .
  ?parent1 a dbpedia:Person ;
            dbpedia:name ?parent1_name ;
            dbpedia:birthPlace ?parent1_birthplace .
  OPTIONAL { ?child a dbpedia:Person ; dbpedia:hasParent ?parent2 }
  ?parent2 a dbpedia:Person ;
           dbpedia:name ?parent2_name ;
           dbpedia:birthPlace ?parent2_birthplace .
}
```

This query will return the child's name, the name and birth place of the first parent (Ferdinand III), and an optional field for the second parent if available.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
737,17,train,"Give me the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?parent_name 
WHERE { 
  ?royalty a dbpedia:Person ; 
  dbpedia:child ?parent . 
  ?parent rdfs:label ?parent_name . 
  ?parent rdf:type dbpedia:Royalty 
}",2,3,3,2,1,3,3,71,0,9537,1,0.0,0.0,0
943,14,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather_name ?office ?royalty_status
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:hasParent ?parent ;
           dbpedia:isDescendantOf ?grandparent .
  ?parent a dbpedia:Person ;
          dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:OfficeHolder ;
             dbpedia:isRoyalty true .
  ?person rdfs:label ""Na'od""@en .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
39,52,train,Give me the professional in the alter ego of The Shadow and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?producer_role ?shadow_character_name ?shadow_role
WHERE {
  ?producer a dbpedia:Person ; dbpedia:role dbpedia:Producer ; dbpedia:work dbpedia:Coke_Studio_Philippines .
  ?shadow_character a dbpedia:Character ; dbpedia:role dbpedia:The_Shadow .
  ?band_member a dbpedia:Musician ; dbpedia:memberOf dbpedia:The_Shadows .
  ?producer rdfs:label ?producer_name .
  ?shadow_character rdfs:label ?shadow_character_name .
  ?band_member rdfs:label ?band_member_name
}
",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
58,13,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:name ""Linda Bruckheimer"" ;
            dbpedia:birthName ?birthName .
  ?spouse a dbpedia:Person ;
           dbpedia:name ?spouse_name ;
           dbpedia:isSpouseOf ?person .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
203,37,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?military_force1 ?military_force2
WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:partOfMilitaryConflict dbo:MilitaryConflicts_of_the_Napoleonic_Wars .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)"" .
  ?william_bayne a dbpedia:Person ;
                 dbpedia:role dbpedia:Naval_Officer ;
                 dbpedia:engagement ?battle .
  ?military_force1 a dbo:MilitaryForce;
                  dbpedia:partOf ?battle .
  ?military_force2 a dbo:MilitaryForce;
                  dbpedia:partOf ?battle .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
119,29,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?tenant_of_compostela ?quiro_residence_country ?feijo_office
WHERE {
  ?compostela a dbpedia:Building ;
               dbpedia:tenants ?tenant_of_compostela .
  ?quirós a dbpedia:Person ;
           dbpedia:residenceCountry ?quiro_residence_country .
  ?feijoo a dbpedia:Person ;
            dbpedia:office ?feijo_office .
  ?compostela rdfs:label ""Santiago de Compostela"" .
  ?quirós rdfs:label ""Álvaro Quirós"" .
  ?feijoo rdfs:label ""Alberto Núñez Feijóo""
}
```

This query will retrieve the required information from DBpedia's dataset.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
89,22,train,Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?common_child_name ?common_child_predecessor_name
WHERE {
  ?child1 a dbpedia:Person ;
           dbpedia:parent ?saw_shwe_khet .
  ?child2 a dbpedia:Person ;
           dbpedia:parent ?saw_min_hla .
  
  ?child1 rdfs:label ?common_child_name .
  ?child2 rdfs:label ?common_child_name .
  
  ?common_child_predecessor a dbpedia:Person ;
                           dbpedia:parent ?common_child_name .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
419,7,train,Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?poet a dbpedia:Person ;
         dbpedia:birthPlace ?birthplace .
  ?musician a dbo:EducationalInstitution ;
             dbpedia:name ""Chennupati Jagadish"" .
  ?birthplace rdfs:label ?birthplace_label .
  FILTER (STRSTARTS(?birthplace_label, ""Andhra Pradesh"") AND STRSTARTS(?birthplace_label, ""Karnataka""))
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
756,43,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?country_of_birth WHERE {
  ?manager a dbpedia:Manager ; dbpedia:managedTeam ?team .
  ?team rdfs:label 'SBV Vitesse' .
  ?manager rdfs:label ?manager_name .
  ?team rdfs:label 'VfL Bochum' .
  ?country a dbpedia:Country ; dbpedia:name ?country_name .
  ?manager dbpedia:birthPlace ?country_of_birth .
  ?country_of_birth rdfs:label ?country_name
}
",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
258,17,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?establishment_date ?alma_mater
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace <urn:lipn:it:Lazio> .
  ?politician rdfs:label ""Eleonora Menicucci""@it .
  ?politician dbpedia:establishedDate ?establishment_date .
  ?politician foaf:educatedAt ?alma_mater .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
557,61,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?actor a dbpedia:Actor ;
          rdfs:label ""Johnny Doughboy""@en .
}

SELECT ?producer_name WHERE {
  ?movie a dbpedia:Film ;
           rdfs:title ""High Society Blues""@en ;
           dbpedia:producer ?producer_name .
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
412,12,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war_name ?location
WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?war_of_ventiris_or_zervas .
  ?war dba:locatedIn ?location .
  ?location rdfs:label ""Athens"" .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
782,51,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"The corresponding SPARQL query is:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?artist_name WHERE {
  ?band_member a dbpedia:Musician ;
               dbpedia:associatedBand ?clapton_band .
  ?clapton_band rdfs:label ""Eric Clapton"" .

  ?band_member a dbpedia:Musician ;
               dbpedia:associatedArtist ?artist .
  ?artist a dbpedia:MusicalArtist .

  ?artist a dbpedia:Person ;
           rdfs:label ?artist_name .
  ?artist rdf:type dbpedia:Character .
  ?artist_name ""Nick Curran"" .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
159,37,train,Give me the reference to the writer of the work of George Ducas and commander in Great Turkish War.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?author_name ?work_title
WHERE {
  ?biography a dbpedia:Biography ;
               dbpedia:subject ?person ;
               rdfs:label ?title .
  ?person a dbpedia:Person ;
           rdfs:label ""George Ducas""@en .
  ?biography rdf:about ?person .
  ?work a dbpedia:Work ;
          dbpedia:author ?author .
  ?author rdfs:label ?author_name .
  ?work rdf:about ?biography .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,59,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?father_spouse_name
WHERE {
  ?philip dbpedia:despotOf ""Romania"" .
  ?philip dbpedia:parent ?parent .
  ?parent a dbpedia:Person; rdfs:label ?parent_name .
  ?parent dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person; rdfs:label ?spouse_name
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
297,5,train,"Give me the entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX scoobydoovocabulary: <http://purl.org/dc/elements/1.0/>

SELECT ?country_name
WHERE {
  ?character a scoobydoovocabulary:Character ;
               dbpedia:birthPlace ?country .
  ?character rdfs:label ""Little Hat Jones"" .
}
```",2,3,3,2,1,2,2,9,0,0,63421,0,0.0,0
213,1,train,Give me the country of Cat Country (novel).,SELECT ?result WHERE { <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?novel a dbpedia:Book ;
           dbpedia:author ?author .
  ?author a dbpedia:Person ;
          rdfs:label ?author_name .
  ?author rdfs:label ?author_name .
  OPTIONAL { ?novel dbpedia:country ?country }
}
```",1,1,2,1,1,3,2,20,1,348,0,0.0028653295128939827,1.0,0.005714285714285714
58,15,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?producer a dbpedia:Person ;
            dbpedia:birthName ""Linda Bruckheimer"" ;
            rdfs:label ""Linda Bruckheimer""@en .
  ?spouse a dbpedia:Person ;
           dbpedia:spouseOf ?producer .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
816,1,train,Give me the parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent_name WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Amy Arbus""@en .
  ?person dbpedia:parent ?parent_name
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
472,11,train,Give me the administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?mayor_name ?mayor_office 
WHERE { 
  ?m a dbpedia:OfficeHolder ; 
    dbpedia:office ?office . 
  ?office rdfs:label ?office_label . 
  ?office_label match('Mayor of Schleswig') 
}",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
159,50,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }",,5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
633,9,train,"Give me the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_title
WHERE {
  ?child a dbpedia:Royalty ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Noble ;
            dbpedia:hasChild ?child .
  ?parent rdfs:label ?parent_name .
  ?child rdfs:label ""Antoine, Duke of Lorraine"" .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
737,31,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . }",,4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,34,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_name
WHERE {
  ?royalty a dbpedia:Royalty ;
            dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
              dbpedia:child ?child .
  ?child a dbpedia:Monarch ;
           dbpedia:father ?roger_ii ;
           dbpedia:mother ?elvira_of_castile .
  ?elvira_of_castile a dbpedia:Person ;
                    dbpedia:birthPlace ""Castile, Spain"" .
  ?roger_ii a dbpedia:Monarch ;
              dbpedia:name ""Roger II of Sicily"" .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
80,38,train,Give me the actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name WHERE {
  ?song ""What You Know"" .
  ?artist a dbpedia:Musician ;
            dbpedia:birthPlace ?birthplace ;
            rdfs:label ?actor_name .
  FILTER (?actor_name = ""T.I."") .
}
```

This query looks for the artist of the song ""What You Know"" by T.I., assuming that the artist is directly related to the song title.",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
628,6,train,Give me the birth name of Bobby Shmurda.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?real_name WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:birthName ?real_name .
  ?artist rdfs:label ""Bobby Shmurda""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,24,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?lambert_name
WHERE {
  ?emperor a dbpedia:Monarch ;
            dbpedia:monarchy_startYear 1508 ;
            dbpedia:monarchy_endYear 1540 ;
            dbpedia:name ""Baeda Maryam I"" .
  ?father a dbpedia:Person ;
           dbpedia:givenName ?father_name ;
           dbpedia:familyName ?father_surname .
  ?emperor dbpedia:hasFather ?father .
  ?lambert a foaf:Person ;
            foaf:name ?lambert_name ;
            foaf:knows ?emperor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
140,10,train,"Give me the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?ruling_party_name ?death_place
WHERE {
  ?john_mcdermott a dbpedia:Person ;
                    dbpedia:birthDate ""1872-04-28"" ;
                    dbpedia:deathPlace ?death_place .
  ?death_place a dbo:Settlement ;
               dbpedia:name ?death_place_name .
  ?ruling_party a dbpedia:PoliticalPartyOrganization ;
               dbpedia:ruledCountry ?country .
  ?country dbpedia:name ?country_name .
  ?death_place_name rdfs:label ?death_place_label .
  FILTER (lang(?death_place_label) = ""en"")  # Assuming English language for simplicity
}
```

This query looks for:
- John McDermott's death place (`?death_place`).
- The name of the settlement where he died (`?death_place_name`).
- A political party organization that ruled in the country corresponding to this settlement (`?ruling_party_name`).",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
375,4,train,"Give me the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?settlement_name ?settlement_type
WHERE {
  ?settlement a dbpedia:SpatialThing ;
             dbpedia:type ?settlement_type .
  ?settlement rdfs:label ?settlement_name .
  FILTER (lang(?settlement_name) = ""en"")  # Ensures the name is in English
}
```",1,3,2,1,1,3,2,20,0,0,6,0,0.0,0
687,18,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player_name ?club_name ?team_name
WHERE {
  ?player a dbpedia:Footballer ;
            dbpedia:hasClub ?club .
  ?club rdfs:label ?club_name .
  ?team a dbpedia:FootballTeam ;
           dbpedia:hasPlayer ?player .
  ?team rdfs:label ?team_name .
}
```

This query will return the names of players (as individuals), their clubs, and the teams those clubs are associated with.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
103,52,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_movie ?actor_tv_show
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:name ""Richard Grant Esterhuysen"" .
  ?actor dbo:hasProfession dbpedia:Actor .
  ?actor foaf:knows ?shatrughan_sinha .
  ?shatrughan_sinha a dbpedia:Person ;
                    dbpedia:name ""Shatrughan Sinha"" .
  OPTIONAL { ?actor dbo:actedIn ?actor_movie }
  OPTIONAL { ?actor dbo:actedIn ?actor_tv_show }
}
```

This query does the following:
- It filters for individuals named ""Richard Grant Esterhuysen"".
- It ensures that these individuals are actors (using `dbo:hasProfession dbpedia:Actor`).
- It checks if there is a relationship between the individual and Shatrughan Sinha (using `foaf:knows`).
- It optionally looks for movies (`dbo:actedIn`) and television shows (`dbo:actedIn`) that the actor has been associated with.",6,7,7,3,3,3,3,71,0,0,13,0,0.0,0
492,21,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film) and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person ;
  dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
",4,4,5,2,3,2,3,28,1,53947,0,1.8536368354711943e-05,1.0,3.707204952825817e-05
361,3,train,Give me the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?footballer_name ?footballer_profession
WHERE {
  ?footballer a dbpedia:Person ;
            dbpedia:occupation dbpedia:sport;
            rdfs:label ?footballer_name .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,17,train,"Give me the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?manager_name ?birthdate
WHERE {
  ?player a dbpedia:SoccerPlayer ;
            dbpedia:birthDate ?birthdate .
  ?manager a dbpedia:SoccerManager ;
             dbpedia:birthDate ?birthdate .
  ?birthdate rdf:type rdf:Datatype .
  ?birthdateSTR literal[@value '1977-03-10'] .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
375,2,train,Give me the war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war_name ?war_description
WHERE {
  ?war a dbo:Conflict ;
         dbpedia:participatedIn ?war_name .
  ?war dbpedia:involvedParty ?party1 .
  ?party1 a dbo:Person ; rdfs:label ?war_name .
}
```

This query searches for conflicts (dbo:Conflict) that involved a person with the label matching ""Hashiba Hidekatsu"" and returns the name of the war and a description. It assumes that the label of the person in DBpedia corresponds to their name, which is a common practice but might not always be accurate without additional context or verification.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
742,10,train,"Give me the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?result <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/> 

SELECT ?resident_name ?resident_region 
WHERE { 
  ?region a dbo:Region ; dbpedia:timeZone dbpedia:EET . 
  ?resident a dbo:Person ; dbpedia:residence ?resident_region . 
}",2,3,3,2,1,3,2,20,0,0,159,0,0.0,0
585,5,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actress_name ?actress_role 
WHERE { 
  ?actress a dbpedia:Person ; 
  dbpedia:role ?actress_role . 
  ?actress_role rdfs:label ?actress_name . 
}",1,1,2,1,1,3,2,20,0,0,19241,0,0.0,0
633,0,train,Give me the spouse of Renée of Bourbon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?husband_name ?husband_birthplace
WHERE {
  ?wife a dbpedia:Person ;
   dbpedia:name ""Renée of Bourbon"" ;
   dbpedia:birthPlace <urn:locity:FR:Marseille> .
  ?husband a dbpedia:Person ;
   dbpedia:name ?husband_name ;
   dbpedia:birthPlace ?husband_birthplace .
  ?wife dbpedia:spouse ?husband .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,11,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandparent_name ?grandparent_title
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
              dbpedia:title ?grandparent_title .
  ?child rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?parent rdfs:label ?parent_name .
  ?grandparent rdfs:label ?grandparent_name
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
595,3,train,"Give me the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?book_name ?work_type
WHERE {
  ?book a dbpedia:Book ;
         rdfs:label ?book_name .
  ?book dbr:author [ a dbpedia:Person ;
                    rdfs:label ?author_name ] .
  ?author rdfs:label ?author_name .
  FILTER (?book_name = ""It Takes a Village"" || ?book_name = ""Living History"" || ?book_name = ""Hard Choices"")
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
595,0,train,Give me the spouse of Hillary Clinton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Bill Clinton"" .
  ?person rdfs:spouse ?spouse_name
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,33,train,"Give me the associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?artist_name WHERE {
  ?album a dbpedia:Album ;
            dbpedia:performer ?artist_name .
  ?album rdfs:label ""The Live Anthology""@en .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
943,11,train,"Give me the child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_parent_name
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:parent ?royalty_parent .
  ?royalty rdfs:label ?royalty_child_name .
  ?royalty_parent a dbpedia:Monarch ;
               dbpedia:name ?royalty_parent_name .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
399,2,train,Give me the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Emilia Yancheva Valeva"" .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,28,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Doon Arbus and parent of Amy Arbus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX mousetrap: <http://purl.org/cinema/theatrical_release#>

SELECT ?actor_name
WHERE {
  ?movie a mousetrap:Film ;
            mousetrap:productionCompany ""Hal B. Wallis Productions"" ;
            mousetrap:releaseDate ""1973-01-01"" .
  
  ?movie dbpedia:hasActor ?actor .
  
  ?actor rdfs:label ?actor_name .
  
  ?actor dbpedia:parentOf ?child1 .
  ?actor dbpedia:parentOf ?child2 .
  
  ?child1 rdfs:label ""Doon Arbus"" .
  ?child2 rdfs:label ""Amy Arbus"" .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,6,train,Give me the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?album_name WHERE {
  ?song a dbpedia:MusicSingle ;
           dbpedia:performer ?artist .
  ?artist rdfs:label ""T.I."" .
  ?song rdfs:label ""What You Know"" .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
263,19,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?common_parent_name ?common_parent_region ?common_parent_country
WHERE {
  ?mary_elphinstone_dbpedia:parent1 rdfs:label ?common_parent_name .
  ?patrick_bowes_lyon_dbpedia:parent rdfs:label ?common_parent_name .
  ?william_gayner_dbpedia:parent rdfs:label ?common_parent_name .
  ?common_parent a dbpedia:NoblePerson ;
               dbpedia:hasParent ?mary_elphinstone_dbpedia:parent1 .
  ?common_parent a dbpedia:NoblePerson ;
               dbpedia:hasParent ?patrick_bowes_lyon_dbpedia:parent .
  ?common_parent dbpedia:birthPlace ?common_parent_region .
  ?common_parent dbpedia:birthCountry ?common_parent_country
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
871,12,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title ?earl_of_derby_birthplace ?author_name ?author_title ?politician_name ?politician_title
WHERE {
  ?earl_of_derby a dbpedia:Person ;
               dbpedia:title ""17th Earl of Derby"";
               dbpedia:birthPlace ?earl_of_derby_birthplace .
  ?parent a dbpedia:Person ;
            dbpedia:title ?parent_title;
            dbpedia:child ?earl_of_derby .
  ?author a dbpedia:Person ;
          dbpedia:birthPlace ?author_birthplace;
          rdfs:label ?author_name .
  ?politician a dbpedia:Person ;
               dbpedia:birthPlace ?politician_birthplace;
               rdfs:label ?politician_name;
               dbpedia:office ""Prime Minister of the United Kingdom"".
  ?earl_of_derby ns:father ?parent .
  ?author ns:child ?politician .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
225,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality ""Japan"" .
  ?person dbpedia:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,0,0,8916,0,0.0,0
375,18,train,Give me the war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?conflict_name ?person_name ?person_birthplace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?person_birthplace .
  ?person rdfs:label ?person_name .
  OPTIONAL { 
    ?person dbpedia:partOfMilitaryConflict ?conflict .
    ?conflict a dbpedia:MilitaryConflict ;
               dbpedia:involvedIn ?person_name .
  }
}
```

This query looks for individuals (`?person`) who match the names of Toyotomi Hidenaga and Toyotomi Hideyoshi, along with their birthplaces. It then checks if these individuals are part of any military conflicts (`?conflict`), and if so, it retrieves the name of that conflict.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
159,7,train,Give me the military force of Battle of Vienna.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?military_force_name ?military_strength
WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:participatedInEvent dbpedia:Event_1683_Vienna_Battle .
  ?military_force a dbpedia:MilitaryForce ;
                 dbpedia:strength ?military_strength .
  ?battle rdfs:label ""Battle of Vienna"" .
  ?military_force rdfs:label ?military_force_name
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
414,2,train,Give me the award of Rainer Weiss.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthDate ""1943-03-18"" ;
           rdfs:label ""Rainer Weiss""@en .
  ?person dbpedia:awardedWith ?award
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
198,10,train,"Give me the war of Amasa Tracy and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rev: <http://dbpedia.org/ontology/ontologies/revolution/>

SELECT ?tracy_name ?war_description WHERE {
  ?tracy a dbpedia:Person ;
           dbpedia:birthPlace ""Charleston, South Carolina"" ;
           rev:role ""American Revolutionary War"" .
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?tracy .
  ?war rdfs:label ?war_description
}
```

This SPARQL query looks for a person born in Charleston, South Carolina, who participated in the American Revolutionary War (using the `rev:role` property to denote this). It then selects the label of the war they participated in.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
871,54,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

// Step 1: Find the awardee of Commander of the Royal Victorian Order
SELECT ?awardee_name ?awardee_birthday
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:awardRecipientOf dbpedia:Commander_of_the_Royal_Victorian_Order .
  ?awardee rdfs:label ?awardee_name .
  ?awardee dbpedia:P31 ?awardee_birthday
}

// Step 2: Determine the parents of the awardee
SELECT ?parent_name ?parent_birthday
WHERE {
  ?awardee pfather ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ?parent_name ;
          dbpedia:P31 ?parent_birthday
}

// Step 3: Identify the parent(s) of Edward Stanley, 17th Earl of Derby
SELECT ?earl_parent_name ?earl_parent_birthday
WHERE {
  ?earl a dbpedia:Person ;
         rdfs:label ""Edward Stanley"" ;
         dbpedia:P31 ?earl_birthday .
  ?earl dbpedia:PARENT ?earl_parent .
  ?earl_parent a dbpedia:Person ;
             rdfs:label ?earl_parent_name ;
             dbpedia:P31 ?earl_parent_birthday
}

// Step 4: Find common parents
SELECT DISTINCT ?common_parent_name ?common_parent_birthday
WHERE {
  ?awardee_pfather ?common_parent .
  ?earl_parent ?common_parent .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
295,7,train,"Give me the writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?writer_name WHERE {
  ?work a dbpedia:MusicalWork ;
          dbpedia:lyrics ""Apache Indian"" .
  ?writer a dbpedia:Person ;
           dbpedia:role dbpedia:composer_of_work ; 
           dbpedia:birthPlace ?writer_birthplace .
  ?work dbpedia:composer ?writer .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
595,32,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author_name ?spouse_name
WHERE {
  ?book a dbpedia:WrittenWork ;
         dbpedia:mainSubject ""An Invitation to the White House"" .
  ?book dc:creator ?author_name .
  ?author_name foaf:marriedTo ?spouse_name .
  ?spouse_name a dbpedia:Politician ;
                dbpedia:officeHolder ?office_holding
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
103,41,train,"Give me the professional in  and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . }",,5,6,6,2,3,3,3,71,0,0,13,0,0.0,0
353,36,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild_name ?royalty_status
WHERE {
  ?child_of_roger a dbpedia:Person ;
                  dbpedia:parent ?roger_ii .
  ?grandchild_of_child_of_roger a dbpedia:Person ;
                           dbpedia:parent ?child_of_roger ;
                           dbpedia:royalty true .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
23,2,train,Give me the party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_name WHERE {
  ?politician dbpedia:officeHolderOfOffice [ dbpedia:powers ""President of Colombia"" ] ;
                   dbpedia:birthDate ""1955-10-21"" ;
                   rdfs:label ?politician_name .
  ?politician_name ns:name ""Gustavo Petro"" .
  ?politician a dbpedia:Person ;
             dbpedia:memberOf ?party .
}
```",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
89,1,train,Give me the spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse_name WHERE {
  ?person a dbpedia:Person ;
            dbpedia:name ""Saw Shwe Khet"" ;
            dbpedia:spouse ?spouse_name .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
531,56,train,"Give me the office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_of_mariano_rajoy ?tenant_residence_of_alberto_ruiz_gallardón ?leader_office ?party_name
WHERE {
  ?mariano_rajoy a dbpedia:Politician ;
                 dbpedia:office ?office_of_mariano_rajoy .
  ?ruiz_gallardón a dbpedia:Person ;
                dbpedia:office ?tenant_residence_of_alberto_ruiz_gallardón .
  ?miguel_maura a dbpedia:Politician ;
                 dbpedia:party ?party_name .
  ?party_name rdfs:label ?party_name_label .
  ?leader a dbpedia:Politician ;
            dbpedia:office ?leader_office .
  ?leader foaf:member ?party_name .
}
```

This query looks for:
- The office of Mariano Rajoy.
- The office of Alberto Ruiz-Gallardón, which is inferred to be his political position.
- The party of Miguel Maura.
- A leader of a party that Miguel Maura belongs to.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,20,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_title
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?father .
  ?father a dbpedia:Person ;
            rdfs:label ""Saw Min Hla"" .
  ?child dbpedia:birthPlace ""Myat Hpone Pyo"" .
  ?child a dbpedia:Royalty .
  ?child rdfs:label ?child_name .
  ?royalty_title a dbpedia:Title .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
39,32,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?person_profession
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:occupation ?person_profession .
  ?person rdfs:label ?person_name
}
```",4,4,5,2,2,3,3,71,28,548511,39612,5.104468415190169e-05,0.0007063572149344097,9.52091115119717e-05
68,6,train,"Give me the father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father_name ?child_of_maximilian_1
WHERE {
  ?isabella a dbpedia:Person ;
            dbpedia:hasParent ?father_name ;
            dbpedia:hasSpouse ?archduke_philip .
  ?archduke_philip a dbpedia:Person ;
               dbpedia:hasFather ?maximilian_1 .
  ?maximilian_1 a dbpedia:Person ;
               rdfs:label ""Maximilian I, Holy Roman Emperor""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
737,16,train,Give me the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?grandchild_name 
WHERE { 
  ?parent a dbpedia:Person ; dbpedia:hasChild ?child1 . 
  ?child1 a dbpedia:Person ; dbpedia:hasChild ?child2 . 
  ?child2 a dbpedia:Person ; rdfs:label ?grandchild_name . 
  ?parent rdfs:label ""Alexander of Württemberg (1804-1881)"" . 
  ?child1 rdfs:label ""Duke Paul Frederick of Württemberg (1837-1890)"" . 
  ?child2 rdfs:label ""Duke Albrecht of Württemberg (1853-1928)"" . 
}",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
39,29,train,Give me the professional in the alter ego of The Shadow and professional in Singer and band of Bob Thompson (musician).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?lambont_cranston_profession ?bob_thompson_band_name
WHERE {
  ?lambont_cranston a dbpedia:Person ;
                       dbpedia:alter_ego ""Lamont Cranston"" ;
                       dbpedia:profession ?lambont_cranston_profession .
  ?bob_thompson a dbpedia:Person ;
               dbpedia:birthDate ""1948-10-22"" ;
               dbpedia:band ?bob_thompson_band_name .
  ?bob_thompson_band_name a dbpedia:MusicBand ;
                       dbpedia:name ""Climax Blues Band"" .
}
```",4,4,5,2,3,3,3,71,0,0,3,0,0.0,0
871,25,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?father_title ?father_birthplace
WHERE {
  ?earl_of_derby a dbpedia:Person ;
               dbpedia:birthPlace ?earl_birthplace .
  ?earl_of_derby rdfs:label ""Edward Stanley"" .
  ?father a dbpedia:Politician ;
            dbpedia:birthPlace ?father_birthplace .
  ?father rdfs:label ?father_name .
  ?father_title rdfs:label ""Earl of Derby"" .
  ?earl_of_derby dbpedia:parent ?father .
  FILTER (?father_name = ""Edward Stanley"")
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
398,1,train,Give me the player in Aleksandr Filimonov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?player_name WHERE {
  ?player a dbpedia:IceHockeyPlayer ;
           dbpedia:hasMemberRole ?role .
  ?role rdfs:label ""Aleksandr Filimonov""@en
}
```",1,1,2,1,1,3,2,20,0,0,17,0,0.0,0
89,44,train,"Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_title 
WHERE { 
  ?lineage a dbpedia:FamilyLineage ; 
  dbpedia:parent ?parent . 
  ?parent a dbpedia:Person ; 
  dbpedia:child ?child . 
  ?child a dbpedia:Royalty ; 
  dbpedia:title ?royalty_title . 
  ?lineage dbpedia:includesSiblings [ 
    ?sibling a dbpedia:Person ; 
    dbpedia:parent ?parent . 
  ] 
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,50,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?military_force WHERE {
  ?person a dbpedia:Person ; dbpedia:conflict ?war .
  ?war rdfs:label ?war_name .
  OPTIONAL { ?person rdfs:label ?person_name }.
  FILTER (lang(?person_name) = 'en') .
}
",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
531,46,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find council members from the 2003 Madrid City Council election
SELECT ?council_member_name ?council_member_residence
WHERE {
  ?council_member a dbpedia:OfficeHolder ;
               dbpedia:officeMemberOf dbpedia:Madrid_City_Council ;
               dbpedia:termStarts ""2003-01-01"" .
}

# Step 2: Identify the mayor or equivalent leader from the council
SELECT DISTINCT ?leader_name ?leader_residence
WHERE {
  ?leader a dbpedia:Politician ;
           dbpedia:officeHolder ?council_member .
  FILTER (fn:contains(?council_member, ""Madrid City Council""))
}

# Step 3: Find a commander in the Central African Republic Civil War who was a politician
SELECT ?commander_name ?commander_residence
WHERE {
  ?commander a dbpedia:Politician ;
             dbpedia:officeHolder ?central_african_republic_commander_office .
  ?central_african_republic_commander_office a dbpedia:Office;
                                 dbpedia:war ""Central African Republic Civil War"" .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
58,3,train,Give me the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ?person_name ;
           dbpedia:birthPlace ?birthplace .
  ?person_name = ""Linda Sue Cobb""
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,Give me the war of Hashiba Hidekatsu and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?description WHERE {
  ?hidekatsu a dbpedia:Person ;
               dbpedia:birthDate ""1506"" ;
               dbpedia:nationality ""Japanese"" ;
               dbpedia:deathDate ""1578"" .
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?hidekatsu .
  ?war rdfs:label ?war_name .
  FILTER (lang(?war_name) = ""en"")  # Only consider English descriptions
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
737,43,train,"Give me the child of Archduchess Margarete Sophie of Austria and child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?grandparent_name ?great_grandparent_name 
WHERE { 
  ?child a dbpedia:Person ; 
  dbpedia:hasParent ?parent . 
  ?parent a dbpedia:Person ; 
  dbpedia:hasParent ?grandparent . 
  ?grandparent a dbpedia:Person ; 
  dbpedia:hasParent ?great_grandparent . 
  ?child rdfs:label ?child_name . 
  ?parent rdfs:label ?parent_name . 
  ?grandparent rdfs:label ?grandparent_name . 
  ?great_grandparent rdfs:label ?great_grandparent_name . 
  ?child ns:childOf ?parent . 
  ?parent ns:childOf ?grandparent . 
  ?grandparent ns:childOf ?great_grandparent }}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
119,6,train,Give me the entity in Poland and war of Alexander Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?polish_entity WHERE {
  ?polish_entity a dbpedia:Country ;
                    dbpedia:partOf ?region .
  ?region rdfs:label ""Poland"" .
  ?alexander_suvorov a dbpedia:Person ;
                    dbpedia:birthDate ""1729-04-15""^^xsd:date ;
                    dbpedia:deathDate ""1788-02-18""^^xsd:date ;
                    dbpedia:conflict ""Russo-Polish War"" .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
816,20,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_class_name WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:role dbpedia:Photographer .
  ?actor rdfs:subClassOf ?parent_class .
}
```

This SPARQL query looks for the class (`?parent_class_name`) that `Actor` (representing the role of a photographer and actor) is a subclass of.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,57,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthPlace dbpedia:Florida ;
            rdfs:label ""Uncle Murda""@en .
  ?bandMember a dbpedia:BandMember ;
             dbpedia:memberOf ?artist ;
             rdfs:label ?band_member_name
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the war of Alexander Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?suvorov_description ?start_year ?end_year
WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:participatedInBy ?suvorov .
  ?suvorov a dbpedia:Person ;
             dbpedia:name ""Alexander Suvorov"" .
  OPTIONAL { ?war rdfs:label ?war_name }
  OPTIONAL { ?war dbpedia:startYear ?start_year }
  OPTIONAL { ?war dbpedia:endYear ?end_year }
}
```",1,1,2,1,1,3,2,20,0,0,28,0,0.0,0
531,52,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Miguel Maura's office in the 2003 Madrid City Council election
SELECT ?miguel_maura_office WHERE {
  ?miguel_maura a dbpedia:OfficeHolder ;
               dbpedia:officeMemberOf dbpedia:Madrid_City_Council_2003 .
}

# Query for the Commander's office during the Central African Republic Civil War
SELECT ?commander_office WHERE {
  ?commander a dbpedia:Politician ;
              dbpedia:officeMemberOf dbpedia:Office_(Central_African_République)_Civil_War .
}

# Query for the leader of the 2003 Madrid City Council election
SELECT ?madrid_leader_office WHERE {
  ?madrid_leader a dbpedia:OfficeHolder ;
                  dbpedia:officeMemberOf dbpedia:Madrid_City_Council_2003 .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
905,11,train,"Give me the spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mother_name ?mother_birthplace
WHERE {
  ?father a dbpedia:Person ;
            dbpedia:name ""Father of Philip I, Prince of Taranto""@en .
  ?mother a dbpedia:Person ;
           dbpedia:name ?mother_name ;
           dbpedia:birthPlace ?mother_birthplace .
  ?father dbpedia:spouse ?mother
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
412,3,train,Who is the leader of National Party of Greece?,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leader_name ?leader_party
WHERE {
  ?party a dbpedia:PoliticalParty ;
            dbpedia:name ""National Party of Greece"" .
  ?leader a dbpedia:Person ;
           dbpedia:memberOf ?party .
  ?leader rdfs:label ?leader_name
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
270,8,train,"Give me the predecessor of Ada Watson and person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor_name ?decedent_name ?decedent_birthplace
WHERE {
  ?successor a dbpedia:Politician ; dbpedia:officeHolderOffice ?ada_watson_office .
  ?predecessor a dbpedia:Politician ; dbpedia:officeHolderOffice ?successor .
  ?decedent a dbpedia:Person ; dbpedia:birthPlace ?decedent_birthplace .
  ?decedent rdfs:label ?decedent_name
  ?decedent_birthplace = ?mark_tournier_birthplace
}
",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
119,9,train,Give me the tenant of Spain and office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_name ?tenancy_start ?tenancy_end
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolder dbpedia:Prime_Minister_of_Spain ;
               dbpedia:termStartYear ?tenancy_start .
  ?politician rdfs:label ""Alberto Núñez Feijóo""@es.
  FILTER (?tenancy_start <= STRFTIME(""YYYY"", NOW()) && ?tenancy_start >= STRFTIME(""YYYY"", DATE(NOW()-365*4)))  # Approximation for recent past
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,4,train,Give me the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviedb: <http://www.moviedb.org schema/>

SELECT ?actor_name WHERE {
  ?movie a moviedb:Film ;
           moviedb:primaryProductionCompany ""Rooftop Films"" ;
           moviedb:title ""Color Me Dead"" .
  ?actor a dbpedia:Person ;
         dbpedia:actorRole ?actor_role .
  ?actor_role a moviedb:CharacterRole ;
              moviedb:film ?movie .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,1,train,Give me the spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?spouse_name
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:hasSpouse ?spouse .
  ?actor rdfs:label ?actor_name .
  ?spouse rdfs:label ?spouse_name
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
353,61,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?office_holder_name 
WHERE {
  ?royalty a dbpedia:Royalty ; dbpedia:offices ?office_holder .
  ?office_holder a dbpedia:OfficeHolder .
  ?royalty rdfs:label ?royalty_name .
  ?office_holder rdfs:label ?office_holder_name .
  ?royalty ns:child ?child_royalty ; dbpedia:spouse ?spouse_royalty .
  ?child_royalty a dbpedia:Person ; dbpedia:offices ?office_child_holder .
  ?office_child_holder a dbpedia:OfficeHolder .
  ?child_royalty rdfs:label ?child_royalty_name .
  ?office_child_holder rdfs:label ?office_child_holder_name .
  ?spouse_royalty ns:child ?child_spouse_royalty .
  ?child_spouse_royalty a dbpedia:Person ; dbpedia:birthPlace 'Mississippi' 
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
687,50,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v4 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?manager_name ?manager_team ?actor_name ?actor_role ?film_name 
WHERE { 
  ?manager a dbpedia:Person ; dbpedia:birthDate '1979-11-03' ; dbpedia:role dbpedia:SoccerManager . 
  ?player a dbpedia:Person ; dbpedia:birthDate '1979-11-03' ; dbpedia:role dbpedia:SoccerPlayer . 
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:Actor ; dbpedia:role dbpedia:SoccerPlayer . 
  ?film a dbpedia:Film ; dbpedia:mainCharacter ?actor ; dbpedia:title 'Manuel Huerga' . 
}",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
140,11,train,"Give me the party member of Republican Party (United States) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?general_name ?general_party ?pickett_connection
WHERE {
  ?general a dbpedia:Person ;
           dbpedia:role dbpedia:General ;
           dbpedia:conflict dbpedia:American_Civil_War .
  ?general rdfs:label ?general_name .
  ?pickett a dbpedia:Person ;
            dbpedia:role dbpedia:Confederate_General ;
            dbpedia:conflict dbpedia:American_Civil_War .
  ?general dbpedia:partyMemberOf dbpedia:Republican_Party_(United_States) .
  ?pickett rdfs:label ""George Pickett"" .
  ?general dbpedia:associatedWith ?pickett
}
```

This query looks for individuals who:
- Are generals in the American Civil War (identified by the `dbpedia:role dbpedia:General` and `dbpedia:conflict dbpedia:American_Civil_War` properties)
- Are members of the Republican Party (identified by the `dbpedia:partyMemberOf dbpedia:Republican_Party_(United_States)` property)
- Are associated with George Pickett (identified by the `dbpedia:associatedWith` property)",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
816,36,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?spouse_name ?child_name ?parent_name
WHERE {
  ?document a dbpedia:Film ;
               dbpedia:main_subject ""Judgment: The Trial of Julius and Ethel Rosenberg"" .
  ?actor a dbpedia:Person ;
           dbpedia:role ?actor_role .
  ?actor_role a dbpedia:FilmRole ;
              rdfs:label ?actor_name .
  ?spouse a dbpedia:Person ;
           dbpedia:partner ?mariclare_costello .
  ?mariclare_costello rdfs:label ?mariclare_costello_name .
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:spouse ?spouse .
  ?child rdfs:label ?child_name
}
```

This query will help us identify the actor, their spouse (the parent of the child), and the child's name.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
706,12,train,Give me the birthplace of Ebrahim Alkazi and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?actor_name ?actor_birthplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ?actor_name .
  FILTER (lang(?actor_name) = ""bn"" )  # Search for a Bengali name
  AND (?actor_name IN [ 'Ritvik Chakraborty', 'Prosenjit Chatterjee', 'Indraneil Sengupta' ])  # Possible actors in Akaler Shandhaney
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
78,19,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_member_name ?artist_name 
WHERE { 
  ?band a dbpedia:Band ; dbpedia:members ?band_member . 
  ?band_member rdfs:label ?band_member_name . 
  ?artist a dbpedia:Artist ; dbpedia:associatedWith ?band_member . 
  ?band_member rdfs:label 'The Alan Parsons Project' . 
  ?artist rdfs:label ?artist_name . 
  ?band_member ns:involves ?stuart_mcbeath_tosh . 
  ?billy_lyall a dbpedia:Person ; dbpedia:associatedWith ?artist . 
  ?stuart_mcbeath_tosh rdfs:label 'Stuart McBeath Tosh' . 
  ?billy_lyall rdfs:label 'Billy Lyall' . 
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
293,15,train,Give me the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/leaderParty> ?result . }",,2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
198,29,train,"Give me the entity in Charleston, South Carolina and force of the awardee of Gillmore Medal and war of Amasa Tracy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?charleston_birthplace ?gillmore_medal_awarded ?war_of_1812_participation
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?charleston_birthplace .
  ?person foaf:name ?person_name .
  ?person dbpedia:awardedGillmoreMedal ?gillmore_medal_awarded .
  ?person dbpedia:participatedInMilitaryConflict dbpedia:War_of_1812 ;
                           dbpedia:conflictParticipant ?war_of_1812_participation
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
386,5,train,Give me the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?award_name
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:recipientOf ?award .
  ?award rdfs:label ""Golden Sword for Bravery"" .
  ?award rdfs:isDefinedBy dbpedia:AwardSchema .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
39,14,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?band_name ?band_description
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthDate ""1950-03-19"" ; # Assuming Robert Palmer's birth date
            rdfs:label ?artist_name .
  ?band a dbpedia:Band ;
           dbpedia:hasMember ?artist ;
           rdfs:label ?band_name .
  ?artist ns:name ""Robert Palmer"" . # Using the given name
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
769,12,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in Ye Jia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?team_name ?soccer_manager_status ?player_name ?player_location
WHERE {
  ?team dbpedia:hasManager ?manager .
  ?manager a dbpedia:Person ;
            dbpedia:role dbpedia:SoccerManager .
  ?team rdfs:label ""Hong Kong C Team"" .
  ?player a dbpedia:Person ;
           dbpedia:birthPlace ""Ye Jia"" ;
           dbpedia:sport dbpedia:Soccer .
  ?manager rdfs:label ?manager_name .
  ?player rdfs:label ?player_name .
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
225,3,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?region_name
WHERE {
  ?region a dbo:Region ;
         dbpedia:name ?region_name .
  ?region rdfs:label ""Japan"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,55,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?shadow_name ?concepcion_name ?band_name
WHERE {
  ?shadow a dbpedia:Musician ;
            dbpedia:birthName ""Robert Lamar Thompson"" .
  ?shadow rdfs:label ?shadow_name .
  ?concepcion a dbpedia:Person ;
             dbpedia:name ""Sam Concepcion"" .
  ?concepcion rdfs:label ?concepcion_name .
  ?band a dbpedia:Band ;
            dbpedia:members [ ?member a dbpedia:Musician; foaf:name ?shadow_name ] .
  ?band foaf:member ?concepcion .
  ?shadow ns:performAs ""The Shadow""
}
```",6,7,7,2,3,3,3,71,0,0,4,0,0.0,0
756,39,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?birthplace ?soccer_season ?sport_season ?team_season
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?manager rdfs:label ?manager_name .
  ?soccer_season a dbpedia:SoccerSeason ;
                 dbpedia:startYear 1968 ;
                 dbpedia:endYear 1969 .  # Example season, adjust years as necessary
  ?sport_season a dbpedia:SportSeason ;
                dbpedia:startMonth ""August"" ;
                dbpedia:endMonth ""September"" .  # Example season, adjust months as necessary
  ?team_season a dbpedia:SportsTeamSeason ;
                 dbpedia:seasonType ""soccer"" ;
                 dbpedia:team ?manager .
  ?manager rdfs:label ?manager_name .
}
```

This query looks for:
- A person (`?manager`) born in West Germany (`?birthplace`).
- A soccer season (`?soccer_season`) starting in 1968 and ending in 1969.
- A sport season (`?sport_season`) starting in August and ending in September.
- A sports team season (`?team_season`) for a soccer team managed by the person identified above.",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
782,34,train,Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_real_name
WHERE {
  ?track dbpedia:performer [ dbpedia:hasArtist ?artist ] .
  ?artist a dbpedia:Musician ; rdfs:label ?artist_name .
  
  ?album dbpedia:hasPerformers [ dbpedia:includes ?track ] .
  ?album dbpedia:band ?band .
  ?band a dbpedia:Band ; rdfs:label ?band_real_name
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
628,0,train,Give me the band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX musicbrainz: <http://musicbrainz.org/ontology#>

SELECT ?band_name ?band_members
WHERE {
  ?artist dbpedia:name ""Uncle Murda""@en .
  ?artist musicbrainz:group ?band_name .
  ?band_name musicbrainz:members ?band_members
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
103,55,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of Shatrughan Sinha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?show_name ?shatrughan_sinha_appearance
WHERE {
  ?actor a dbpedia:Actor ;
         rdfs:label ?actor_name .
  ?actor dbpedia:appearedIn ?show .
  ?show a dbpedia:TelevisionShow ;
          rdfs:label ?show_name .
  ?show dbpedia:includesActress Shatrughan_Sinha .
  ?actor rdfs:label ?actor_name .
  FILTER (regex(str(?actor_name), 'Shatrughan Sinha')) .
  ?actor dbpedia:roleIn ?role .
  ?role a dbpedia:Character ;
          rdfs:label ?role_name .
  ?role_name = 'The Shadow'
}
```

### Completed
This SPARQL query is designed to find an actor named Shatrughan Sinha who played the role of The Shadow in a television show. It filters for shows that include Shatrughan Sinha and checks if one of his roles is The Shadow. The `FILTER` clause ensures we only get results where the actor's name matches 'Shatrughan Sinha'. Once executed against DBpedia's dataset, it should return the actor's name, the television show's name, and the episode or appearance where Shatrughan Sinha played The Shadow.

Please note that this query assumes that the DBpedia ontology and data are up-to-date and comprehensive enough to include detailed information about television shows and actors' roles within them. If such specific data is not available, the query might need adjustments or additional resources for a complete answer.",6,7,7,2,3,3,3,71,0,0,13,0,0.0,0
492,9,train,Give me the death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_deathplace
WHERE {
  ?actor a dbpedia:Person ;
dbpedia:name ?actor_name .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:deathPlace ?actor_deathplace
}
",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
595,34,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author_name ?author_spouse_name
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace ;
           rdfs:label ""Hillary Clinton""@en .
  ?book a dbpedia:WrittenWork ;
          dbpedia:author ?author .
  ?author foaf:spouse ?author_spouse .
  ?book rdfs:label ""Living History""@en .
  ?author dbpedia:officeHolder true .
  ?author dbpedia:politician true .
  ?author dbpedia:birthPlace ""United States""^^xsd:string .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,13,train,Give me the force of the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?recipient_name ?contribution_description
WHERE {
  ?recipient a dbpedia:Person ;
             dbpedia:awardedWith dbpedia:Gillmore_Medal .
  ?recipient rdfs:label ?recipient_name .
  OPTIONAL { ?recipient dbpedia:hasDescription ?description }
  FILTER (lang(?description) = ""en"")  # Filter for English descriptions
  ?description rdfs:comment ?contribution_description
}
```

This query looks for individuals who have been awarded the Gillmore Medal and retrieves their names and any available descriptions that might hint at their contributions.",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
293,27,train,Give me the person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?tisha sterlingParents ?parent .
  ?parent a dbpedia:Person ;
         dbpedia:birthPlace ?parent_birthplace .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
859,0,train,Give me the band member of Human Remains (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?member_names
WHERE {
  ?band a dbpedia:MusicBand ;
         dbpedia:name ?band_name .
  ?band dbpedia:hasMember ?member .
  ?member rdfs:label ?member_names
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
668,28,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musical_artist
WHERE {
  ?dbanj a dbpedia:Musician ;
         dbpedia:birthDate ""1987-03-15"" ;
         dbpedia:name ""D'Banj (Darryl Paa Kwesi Bannerman-Martin)"" .
  ?stonebwoy a dbpedia:Musician ;
            dbpedia:birthDate ""1990-07-17"" ;
            dbpedia:name ""Elorm Kabu Amenyah"" .
  ?dbanj foaf:isFriendOf ?musical_artist .
  ?stonebwoy foaf:isFriendOf ?musical_artist .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,57,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?actor a dbpedia:Person ; dbpedia:birthPlace ?place .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:role dbpedia:The_Shadow .
  ?actor dbpedia:role dbpedia:ActorInTVSeries Shelby_Oaks_in_Parenthood .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
628,22,train,"Give me the band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology#>

SELECT ?band_member_name ?birthplace
WHERE {
  ?bandMember a dbpedia:Musician ;
               dbpedia:genre ""Hip hop"" ;
               dbpedia:background ?birthplace .
  ?birthplace a dbo:Location ;
             rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@es.
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
472,5,train,Who is the mayor of Duchy of Schleswig?,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mayor_name ?mayor_office
WHERE {
  ?mayor a dbpedia:OfficeHolder ;
           dbpedia:office dbpedia:Mayor_of_Schleswig .
  ?mayor rdfs:label ?mayor_name .
  FILTER (lang(?mayor_name) = ""da"" )  # Assuming the mayor's name is in Danish
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
159,26,train,Give me the reference to the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work_name ?author_name
WHERE {
  ?work a dbpedia:Film ;
         dbpedia:writtenBy ?author .
  ?author rdfs:label ?author_name
}
```",3,3,4,3,1,3,3,71,0,0,98450,0,0.0,0
159,5,train,Give me the work of George Ducas.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work_name ?work_description
WHERE {
  ?work a dbpedia:Film_or_TV_Series ;
         dbpedia:has_main_character ?actor .
  ?actor rdfs:label ""George Ducas"" .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,6,train,"Give me the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_name WHERE {
  ?person dbpedia:name ""Álvaro Quirós"" ;
           dbpedia:nationality ?country_name
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
943,52,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow and father of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#

-- Commander in the Siege of Mukha
SELECT ?commander_name WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role ""Commander in the Siege of Mukha"" .
}

-- Royalty related to the commander
SELECT ?royalty_name ?royalty_relationship WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role ""Commander in the Siege of Mukha"" .
  ?royalty a dbpedia:Royalty ;
            dbpedia:parentOf ?royalty_name .
  ?royalty_name foaf:brother | foaf:sister | dbpedia:childOf ?commander_name .
}

-- Alter ego of The Shadow
SELECT ?alter_ego_name WHERE {
  ?shadow a dbpedia:Character ;
           dc:creator ?alter_ego_name .
}

-- Baeda Maryam I's father
SELECT ?father_name WHERE {
  ?baeda_maryam_I a dbpedia:Person ;
                    dbpedia:parent ?father_name .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,59,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?actor_name ?politician_name 
WHERE { 
  ?actor a dbpedia:Actor ; 
    rdfs:label ?actor_name . 
  ?actor dbpedia:birthPlace ?birthplace . 
  ?politician a dbpedia:Politician ; 
    rdfs:label ?politician_name . 
  ?actor dbpedia:birthPlace ?birthplace . 
  ?actor rdfs:label ?actor_real_name . 
  ?politician rdfs:label ?politician_real_name . 
}",6,8,7,3,2,3,3,71,0,198437,28,0.0,0.0,0
347,2,train,"Give me the child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?ferdinand_II .
  ?ferdinand_II a dbpedia:Person ;
              rdfs:label ""Ferdinand II, Holy Roman Emperor"" .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
609,24,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?governor rdfs:label ?governor_name .
  
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?author rdfs:label ?author_name
}

WHERE {
  ?governor_name ""Virginia Governor""
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
905,0,train,Give me the spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse_name ?spouse_birthplace
WHERE {
  ?charlesII a dbpedia:Monarch ;
               dbpedia:monarchyStartYear 1630 ;
               dbpedia:birthPlace Naples (Italy) .
  ?charlesII rdfs:label ?charlesII_name .
  ?spouse a dbpedia:Person ;
           dbpedia:birthPlace ?spouse_birthplace .
  ?charlesII ns:marriedTo ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
78,17,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX owl: <http://www.w3.org/2002/07/owl#

SELECT ?composer_name ?composer_artist_role ?composer_band_member_role
WHERE {
  ?composer a dbpedia:Person ;
            dbpedia:role dbpedia:Composer;
            dbpedia:birthPlace ?composer_birthplace .
  ?composer rdfs:label ?composer_name .
  OPTIONAL { 
    ?composer owl:sameAs ?artist . 
    ?artist a dbpedia:Musician; 
           dbpedia:role dbpedia:Artist .
  }
  OPTIONAL { 
    ?composer owl:sameAs ?band_member . 
    ?band_member a dbpedia:Person; 
               dbpedia:role dbpedia:Band member of dbpedia:The Alan Parsons Project .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
347,7,train,"Give me the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_title WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Maria Anna of Bavaria"" .
  ?child rdfs:label ?child_name .
  OPTIONAL { ?child dbpedia:birthDate ?child_birthdate }
  FILTER ( ?child_birthdate > 1574 )
  ?child dbpedia:hasRoyalTitle ?royalty_title
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
871,17,train,"Who is the child, that is a politician, of the alumnus of Eton College?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?politician_name ?parent_alumnus_name 
WHERE { 
  ?politician a dbpedia:Politician ; 
  dbpedia:alumniParent ?parent_alumnus . 
  ?parent_alumnus a dbpedia:Person ; 
  dbpedia:graduateInstitution dbpedia:Eton_School . 
}",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
782,57,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band_name ?band_members WHERE {
  ?curran a dbpedia:MusicalArtist ;
            dbpedia:birthDate ""1945-03-30"" .
  ?associated_artists a dbpedia:MusicGroup ;
                    dbpedia:hasMember ?band_member .
  ?band_member a dbpedia:Person ;
                rdfs:label ?band_name .
  ?curran rdfs:label ?curran_name .
  ?associated_artists rdfs:member ?band_member .
  ?band_name ns:exactMatch ""The Fabulous Thunderbirds"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
288,7,train,"Give me the theme of Dikhawa and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?figure_name ?origin
WHERE {
  ?figure a dbpedia:City ;
            rdfs:label ""The Heart of Pakistan"" | ""Paris of the East"" | ""City of Gardens"" | ""City of Literature"".
  ?figure dbpedia:capitalOf ?origin .
  ?origin a dbpedia:Settlement ;
           rdfs:label ?origin_name .
  ?origin_name = ""Islamabad""
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
756,2,train,Give me the manager of 2020–21 SBV Vitesse season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name WHERE {
  ?team dbpedia:hasManager ?manager .
  ?team rdfs:label ""SBV Vitesse"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
531,16,train,"Give me the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?event_name ?commander_name
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:role dbpedia:Prime_Minister_of_Portugal .
  ?politician rdfs:label ""Manuel Pinto da Costa""@pt.
  
  ?event a dbpedia:MilitaryConflict ;
            dbpedia:eventType dbpedia:SocietalEvent .
  ?event rdfs:label ?event_name .
  
  ?commander a dbpedia:Person ;
             dbpedia:role dbpedia:Commander .
  ?commander rdfs:label ?commander_name .
  
  ?politician dbpedia:partOfEvent ?event .
  ?event dbpedia:involvedInConflict ?conflict .
  ?conflict a dbpedia:MilitaryConflict
}
```

This query looks for individuals who were both Prime Ministers of Portugal (Manuel Pinto da Costa) and involved in events that are both MilitaryConflicts and SocietalEvents. It then extracts the names of these politicians, the event names, and the names of the commanders associated with those events. The specific results will depend on the data available in DBpedia regarding these individuals and events.",2,6,3,2,1,3,3,71,0,0,179,0,0.0,0
531,42,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?leader_name ?leader_office WHERE {
  ?politician a dbpedia:Politician ;
   dbpedia:party dbpedia:Conservative_People's_Party_of_Spain ;
   dbpedia:office dbpedia:Prime_Minister_of_Spain .
  ?politician rdfs:label ?leader_name .
  ?politician dbpedia:residence <http://dbpedia.org/property/address> ?address1 .
  ?address1 rdfs:label ?address_label .
  ?address2 rdfs:label ?address2_label .
  ?address1 ns:shareA ?address2 .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,12,train,"Give me the parent of Princess Sara bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?king_name ?king_title 
WHERE { 
  ?princess a dbpedia:Person ; dbpedia:parent ?king_name . 
  ?prince a dbpedia:Person ; dbpedia:child ?prince_faisal . 
  ?king a dbpedia:Monarch ; dbpedia:title ?king_title . 
  ?king_name ns:father ?prince_faisal . 
  ?king_name = ?princess
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,10,train,Give me the death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?death_place
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:name ""Paul Michael Glaser"" .
  ?actor dbpedia:deathPlace ?death_place
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
119,8,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality ?country_name
}
WHERE {
  ?person rdfs:label ""Dawid Olejniczak"" .
}",2,3,3,2,1,3,2,20,0,0,108,0,0.0,0
225,8,train,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace
WHERE {
  ?award a dbpedia:Award ;
            dbpedia:awardedTo ?awardee .
  ?awardee a dbpedia:Person ;
           dbpedia:nationality ""Japan"" .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
943,54,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?shadow_name ?royalty_connection
WHERE {
  ?shadow a dbpedia:Character ;
            rdfs:label ""Lamont Cranston"" .
  ?shadow dbpedia:hasAlterEgo ?shadow_alter_ego .
  ?alter_ego a dbpedia:Person ;
             rdfs:label ?shadow_name .
  ?shadow rdfs:isDefinedBy dbpedia:Work ;
                 dbpedia:workTitle ""The Shadow"".
  ?royalty a dbpedia:Person ;
            rdfs:label ""Yeshaq I"" .
  ?royalty_dbpediaRelation a dbpedia:ParentOf ;
                       rdfs:label ""child of"" .
  ?baeda maryam a dbpedia:Person ;
               rdfs:label ""Baeda Maryam I"" .
  ?baeda maryam_dbpediaRelation a dbpedia:SpouseOf ;
                         rdfs:label ""married to"" .
  ?royalty_dbpediaRelation2 a dbpedia:ParentOf ;
                          rdfs:label ""of Yeshaq I"" .
  ?shadow_alter_ego rdfs:seeAlso ?connection_to_royalty .
  FILTER (?connection_to_royalty = ""child of Yeshaq I"" OR ?connection_to_royalty = ""married to Baeda Maryam I"")
}
```

This SPARQL query attempts to find any connections between Lamont Cranston (The Shadow) and royalty, specifically linking him to Yeshaq I or Baeda Maryam I through either being a child of Yeshaq I or being married to Baeda Maryam I. However, as reasoned in the reasoning section, such connections do not exist in the canonical narratives of The Shadow.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,55,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },,6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
905,53,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_person_name
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:child ?charles_martel_of_anjou .
  ?charles_martel_of_anjou a dbpedia:Person ;
                       dbpedia:child ?royalty_child .
  ?person rdfs:label ?royalty_person_name .
  ?grandparent rdfs:label ?spouse_name .
  ?spouse_name rdfs:label ""Philip, Despot of Romania"" @lang=en.
}
```

### Completed",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
119,38,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country_name ?psoe_administration
WHERE {
  ?person a dbpedia:Person;
            dbpedia:birthPlace ?country ;
            rdfs:label ""Álvaro Quirós""@es.
  ?party a dbpedia:PoliticalParty;
           rdfs:label ""Spanish Socialist Workers' Party""@es .
  ?party dbpedia:ledBy ?psoe_administration .
}
```",4,6,5,2,2,3,3,71,0,0,23,0,0.0,0
103,12,train,Give me the professional in  and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_profession ?other_profession_name ?other_profession
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:occupation ?actor_profession .
  ?actor rdfs:label ?actor_name .
  
  OPTIONAL { 
    ?actor dbpedia:P31 ?other_profession .
    ?other_profession a dbpedia:Profession ;
                    rdfs:label ?other_profession_name
  }
}
```

This query will search for individuals who have an occupation related to acting and optionally another profession. The `P31` property is used to express the ""is a"" relationship, allowing us to find the other profession if it's explicitly stated in the dataset. The `rdfs:label` properties are used to retrieve the names of these individuals.",2,2,3,1,2,3,3,71,0,0,4210,0,0.0,0
293,46,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name
WHERE {
  ?jackie_cooper a dbpedia:Person ;
                  dbpedia:birthDate ""1908-09-03"" ;
                  dbpedia:role ""Actor"" ;
                  dbpedia:politicalParty dbpedia:Republican Party .
  ?empire_state_building a dbpedia:Building ;
                       dbpedia:location ""New York City, United States"" ;
                       dbpedia:elevation ""20.1168"" .
  ?jackie_cooper foaf:spouse ?spouse_name .
  ?empire_state_building dbpedia:ownedBy ?spouse_name
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
78,4,train,"Give me the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?writer_name ?artist_bio
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:role dbpedia:Artist ;
            dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?writer_name .
  FILTER (regex(str(?writer_name), ""Wizards of Waverly Place"")) 
}",1,3,2,1,1,2,3,28,0,0,13,0,0.0,0
782,1,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?band_name WHERE {
  ?kim_wilson a dbpedia:Musician ;
               dbpedia:associatedBand ?band_name .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
249,8,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of Jamshedpur.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?actor_name ?actor_birthplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ?actor_name .
  FILTER (lang(?actor_name) = ""en"")  # Only consider English names for simplicity
}
```",3,4,4,2,2,2,2,9,0,782049,22,0.0,0.0,0
361,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional_name ?field
WHERE {
  ?professional a dbpedia:Person ;
               dbpedia:occupation ?field .
  ?field rdfs:label ""Your Specific Field"" . # Replace ""Your Specific Field"" with the actual field of interest
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
103,40,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?birth_name ?television_show
WHERE {
  ?actor a dbpedia:Actor, dbpedia:TelevisionPerson ;
           dbpedia:birthDate ?birth_date .
  ?actor foaf:name ?actor_name .
  ?actor rdfs:label ?actor_label .
  ?actor dbpedia:appearIn ?television_show .
  ?birth_date ns:prefLabel ?birth_name .
  FILTER (?birth_name = ""Richard Grant Esterhuysen"")
}
```",5,6,6,3,3,3,3,71,0,0,9,0,0.0,0
159,60,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor_name ?successor_role ?battle_of_vienna_event
WHERE {
  ?commander a dbpedia:Person ;
               dbpedia:role dbpedia:Commander ;
               dbpedia:conflict dbpedia:Battle_of_Vienna .
  ?commander rdfs:label ""Michał Kazimierz Pac"" .
  ?successor a dbpedia:Person ;
             dbpedia:role dbpedia:OfficeHolder;
             dbpedia:conflict dbpedia:Battle_of_Vienna .
  ?successor rdfs:label ?successor_name .
  FILTER (lang(?commander) = ""en"")
}
```

This query will search for a successor of Michał Kazimierz Pac who was involved in the Battle of Vienna and holds an office or political role. The results will include their name and the specific role they held during this event.",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
782,18,train,Give me the band of Kim Wilson and associated musical artist of Nick Curran and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_name ?artist_name WHERE {
  ?band a dbpedia:Band ; dbpedia:name ?band_name .
  ?artist a dbpedia:Musician ; dbpedia:name ?artist_name .
  ?band rdfs:member ?artist .
  ?artist rdfs:label 'Nick Curran' .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
78,12,train,Give me the associated musical artist of Stuart Tosh and band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthDate ?birthDate;
           rdfs:label ?musical_artist_name .
  FILTER (lang(?birthDate) = ""en"")  # Assuming English language for birth date
  ?person dbpedia:role [dbpedia:hasMemberOf dbpedia:Band/The Alan Parsons Project] .
  ?person rdfs:label ""Stuart Tosh"" .
}
```

For Billy Lyall:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthDate ?birthDate;
           rdfs:label ?musical_artist_name .
  FILTER (lang(?birthDate) = ""en"")  # Assuming English language for birth date
  ?person dbpedia:role [dbpedia:hasMemberOf dbpedia:Band/The Alan Parsons Project] .
  ?person rdfs:label ""Billy Lyall"" .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
943,53,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather_name ?father_name ?naod
WHERE {
  ?naod a dbpedia:Person ;
         dbpedia:birthDate ""before 1587"" ; # Approximate birth date before the siege
         dbpedia:deathDate ""after 1587"" ;
         dbpedia:role ""Commander in Siege of Mukha"" .
  ?father a dbpedia:Person ;
         dbpedia:parent ?naod ;
         dbpedia:birthPlace ""Ethiopia"" ; # Assuming Na'od's father was born in Ethiopia
         dbpedia:role ""Royalty"" .
  ?grandfather a dbpedia:Person ;
         dbpedia:parent ?father ;
         dbpedia:birthPlace ""Ethiopia"" ; # Assuming Na'od's paternal grandfather was born in Ethiopia
         dbpedia:role ""Royalty"" .
  ?naod rdfs:label ""Na'od"" . # Na'od's name
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,0,train,Give me the band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX musicbrainz: <http://musicbrainz.org/ns#>
SELECT ?band_name ?band_members
WHERE {
  ?band a dbpedia:Band ;
           dbpedia:genre ""Heavy metal"" .
  ?band rdfs:label ?band_name .
  ?band dbmusicbrainz:members ?band_members .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
119,2,train,"Give me the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX starwars: <http://swsdl.org/ontologies/starwars/>

SELECT ?monarch_name ?conflicts
WHERE {
  ?monarch a dbpedia:Monarch ;
            dbpedia:monarchy_start ""1737"" .
  ?conflict a dbpedia:Conflict .
  ?monarch dbpedia:participatedIn ?conflict .
  OPTIONAL { ?conflict rdfs:label ?conflict_name }
  FILTER (lang(?conflict_name) = ""en"") .
  ?conflict_name rdf:type starwars:GalacticConflict .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
353,51,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""William I of Sicily""@en ;
            dbpedia:birthPlace ""Falaise, France"" .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  ?parent rdfs:type ""Monarch""@en .
  ?child rdfs:type ""Royalty"" .
}
```

This SPARQL query looks for a person (`?child`) who has a parent (`?parent`) labeled as William I of Sicily and is also labeled as a royalty. The query filters for individuals who are both children of a monarch (William I) and labeled as royalty themselves.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
737,3,train,"Give me the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_surname ?royalty_title WHERE {
  ?archduchess a dbpedia:Person ; dbpedia:birthDate '1872-08-23' ; dbpedia:deathDate '1959-08-09' .
  ?archduchess dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person ; dbpedia:birthPlace ?royalty_birthplace .
  ?spouse rdfs:label ?royalty_surname .
  ?spouse dbpedia:title ?royalty_title .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,45,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as Ackquille Jean Pollard and band member of Uncle Murda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award_name ?awardee_name ?awardee_birthplace
WHERE {
  ?band a dbo:MusicBand ;
         dbpedia:bandMember ?awardee .
  ?awardee a dbo:Person ;
           dbpedia:name ""Ackquille Jean Pollard""@en ;
           dbpedia:birthPlace ?awardee_birthplace .
  ?awardee rdfs:label ""Mase""@en .
  ?awardee dbpedia:stateOrRegion ""New York""@en .
  ?award a dbo:Award ;
         dbpedia:name ?award_name .
  ?award rdfs:domain dbo:MusicAward .
  ?award rdfs:range dbo:Entity .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
293,24,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?actor dbpedia:birthName ""Jackie Cooper"" ;
             dbpedia:roleIn ""[[1,000 Dollars a Minute]]"" .
  ?mother dbpedia:birthName ""Harriette Arlene Lake"" .
  ?actor dbpedia:sibling ?sibling .
  ?sibling dbpedia:birthName ""Nancy Cartwright"" .
  ?spouse a dbpedia:Person ;
           dbpedia:familyMember ?actor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,57,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?calder_military_force ?bayne_war ?egypt_syria_campaign
WHERE {
  ?calder a dbpedia:Person ; dbpedia:militaryBranch ?calder_military_force .
  ?bayne a dbpedia:Person ; dbpedia:role ?bayne_role .
dbr:roleMatches ?bayne_role dbpedia:Event; dbpedia:type dbpedia:MilitaryConflict
  ?evidence a dbpedia:Event ; dbpedia:type dbpedia:MilitaryConflict ; dbpedia:partOf ?bayne_war .
  ?evidence rdfs:label 'French campaign in Egypt and Syria' .
}
",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,57,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?soccer_player_name ?manager_name ?manager_birthdate 
WHERE { 
  ?film a dbpedia:Film ; dbpedia:producer ?manuel_huerga . 
  ?actor a dbpedia:Person ; dbpedia:role ?actor_role . 
  ?actor_role rdf:type dbpedia:SoccerPlayer . 
  ?soccer_player a dbpedia:SoccerPlayer ; dbpedia:role ?actor_role . 
  ?film dbpedia:starring ?actor . 
  ?soccer_player rdfs:label ?soccer_player_name . 
  ?manager a dbpedia:Person ; dbpedia:birthDate ?manager_birthdate . 
  ?manager rdf:type dbpedia:SoccerManager . 
  ?manager rdfs:label ?manager_name . 
}",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
628,28,train,"Give me the person born as Ackquille Jean Pollard and native of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?birthplace ?musical_artist_name
WHERE {
  ?band_member a dbpedia:Musician ;
               dbpedia:birthPlace ?birthplace .
  ?band_member rdfs:label ?band_member_name .
  ?musical_artist a dbpedia:Artist ;
                  dbpedia:associatedBandMember ?band_member .
  ?musical_artist rdfs:label ?musical_artist_name
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
628,43,train,"Give me the band member of Uncle Murda and native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?birth_name ?musical_artist_name ?florida_birthplace
WHERE {
  ?band a dbpedia:MusicGroup ;
         dbpedia:hasMember ?band_member .
  ?band_member a dbpedia:Person ;
               dbpedia:birthPlace ?florida_birthplace .
  ?band_member rdfs:label ?band_member_name .
  ?musical_artist a dbpedia:Artist ;
                 dbpedia:birthPlace ?florida_birthplace .
  ?band_member rdfs:label ?musical_artist_name .
  ?band_member = ?musical_artist
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,20,train,Give me the actor of Rustlers' Rhapsody and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the main actor of ""Rustlers' Rhapsody""
SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor ?actor_name .
  FILTER (str(?movie) = ""Rustlers' Rhapsody"")
}

# Step 2: Find professional roles in acting
SELECT ?role WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:hasRole ?role .
  ?actor dbpedia:isMainActorOf ?movie .
  FILTER (str(?movie) = ""Rustlers' Rhapsody"") AND (?role = ""Actor"")
}

# Step 3: Find alter ego role
SELECT ?alter_ego WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:hasRole ?alter_ego .
  ?actor dbpedia:isMainActorOf ?movie .
  FILTER (str(?movie) = ""Rustlers' Rhapsody"")
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
723,8,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band_name
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:genre ""Heavy Metal"" .
  ?band rdfs:label ?band_name
}",2,3,3,2,1,3,2,20,0,0,89,0,0.0,0
80,20,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?album_name 
WHERE { 
  ?actor a dbpedia:Person ; dbpedia:birthPlace ?place . 
  ?place rdfs:label ?name . 
  ?album a dbpedia:MusicAlbum ; dbpedia:artist ?actor . 
  ?album_name rdfs:label ?album_name . 
  ?actor rdfs:label ?actor_name 
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,2,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ?person_name .
  OPTIONAL { ?person foaf:givenName ""Darryl"" }
  OPTIONAL { ?person foaf:middleName ""Paa Kwesi"" }
  OPTIONAL { ?person foaf:surname ""Bannerman-Martin"" }
}
```",1,1,2,1,1,3,3,71,0,44,1,0.0,0.0,0
159,57,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }",,6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
412,8,train,Give me the war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?leader_name ?war
WHERE {
  ?leader a dbpedia:Person ; dbpedia:birthPlace GR 
  ?leader rdfs:label ?leader_name .
  ?war a dbpedia:Event ; dbpedia:name ""Greco-Turkish War (1919-1922)"".
  ?leader dbpedia:participatedIn ?war .
}",2,2,3,2,1,2,3,28,0,0,13,0,0.0,0
871,39,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent_name ?parent_title
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?parent_birthplace .
  ?alumnus a dbpedia:Person ;
             rdfs:label ""Edward Stanley, 17th Earl of Derby"" ;
             dbpedia:EtonAlumnus .
  ?politician rdfs:father ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:birthPlace ?parent_birthplace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
58,1,train,Give me the producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviedb: <http://www.moviedb.org schema/>

SELECT ?producer_name
WHERE {
  ?movie a moviedb:Film ;
           moviedb:productionCompany ?producer .
  ?producer rdfs:label ?producer_name
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
87,4,train,Who is the awardee of List of awards and nominations received by Janusz Kamiński?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://purl.org/dc/terms/>

SELECT ?awardee_name ?award
WHERE {
  ?janusz_kaminski a dbpedia:Person ;
                    dbpedia:birthDate ""1954-10-31"" ;
                    dbpedia: nationality ""Polish"" ;
                    award:hasAwards [
                      ?award rdf:type award:FilmAward ;
                            award:awardedTo ?awardee_name
                    ] .
  ?awardee_name rdfs:label ?awardee_name .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
737,41,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?grandchild_name
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person
}
```

This query looks for individuals (`?parent`, `?child`, and `?grandchild`) where there is a parent-child relationship and a child-grandchild relationship, effectively tracing lineage from Duke Philipp to a grandchild.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
203,52,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nao: <http://purl.org/ontologies/nano#>
SELECT ?commander_name ?battle_name ?war_name
WHERE {
  ?battle a nao:Battle ;
            nao:name ""Battle of Cape Finisterre"" .
  ?commander a dbpedia:Person ;
            dbpedia:role ?commander_role .
  ?commander_role a dbpedia:MilitaryRole ;
                rdfs:label ""Commander in the battle""@en .
  ?war a dbpedia:War ;
           nao:name ""Napoleonic Wars""@en .
  ?battle ns:partOf ?war .
  ?commander ns:combatIn ?battle
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,34,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?player_name ?team_name 
WHERE { 
  ?player a dbpedia:Person ; dbpedia:birthDate ?pollio_birthdate . 
  ?aimar a dbpedia:Person ; dbpedia:birthDate ?aimar_birthdate . 
  ?player rdfs:label ?player_name . 
  ?aimar foaf:memberOf ?team . 
  ?team rdfs:label ?team_name . 
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Who is the citizen, that is Spanish, of Spain?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?citizen_name ?nationality
WHERE {
  ?citizen a dbpedia:Person ;
            dbpedia:nationality spain ;
            dbpedia:country_of_citizenship spain .
  ?citizen foaf:name ?citizen_name .
  ?citizen dbpedia:language ""es"" .
}
```",1,2,2,1,1,3,3,71,0,0,1550,0,0.0,0
816,60,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor_name ?birthplace
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainCharacter ?actor .
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ?birthplace .
  ?actor rdfs:label ?actor_name .
  ?spouse a dbpedia:Person ;
           dbpedia:spouseOf ?actor ;
           dbpedia:child ?child_of_spouse .
  ?child_of_spouse a dbpedia:Person ;
                 dbpedia:parent ?spouse .
  ?spouse rdfs:label ?spouse_name .
  FILTER (STR(?birthplace) = ""Los Angeles"" AND STR(?spouse_name) = ""Mariclare Costello"")
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,46,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_rodney_award ?parent_frederick_stanley
WHERE {
  ?awardee dbpedia:award ""Rodney Lees"" .
  ?awardee dbpedia:recipientOf [ a dbpedia:Event; rdfs:label ""Rodney Lees Award"" ] .
  ?frederick_stanley dbpedia:birthDate ""1821-04-29"" .
  ?frederick_stanley dbpedia:parent ?parent_frederick_stanley .
  ?earl_of_derby dbpedia:child ?child_of_earl .
  ?child_of_earl a dbpedia:Person; dbpedia:birthDate ""1839-04-09"" . # Assuming the child's birth date based on typical earl succession
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
361,8,train,Give me the professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?footballer_name ?footballer_profession
WHERE {
  ?footballer a dbpedia:Person ;
            dbpedia:occupation ?footballer_profession .
  ?footballer rdfs:label ?footballer_name
}
```",2,2,3,2,1,2,3,28,1,548538,21579,1.823024433996489e-06,4.633920296570899e-05,3.5080395496378822e-06
80,35,train,Give me the actor of the movie with  and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainCharacter ?shadow_alter_ego .
  ?actor rdfs:label ?actor_name .
  ?shadow_alter_ego rdf:type dbpedia:Alter_Ego .
  ?actor dbpedia:roleIn ?movie
}
```",4,4,5,2,2,3,3,71,0,0,7802,0,0.0,0
398,6,train,Give me the figure known as Наши парни / Nashi parni and player in Aleksandr Filimonov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv_series: <http://purl.org/dc/elements/1.1/>

SELECT ?actor_name ?character_name
WHERE {
  ?tv_series a tv_series:TelevisionSeries ;
               tv_series:name ""Наш парни"" .
  ?actor a dbpedia:Person ;
         dbpedia:role ?character_name in tv_series:main_character_of .
  ?actor rdfs:label ?actor_name .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,32,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```",4,5,5,2,2,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
905,4,train,"Give me the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name
WHERE {
  ?prince a dbpedia:Person ;
           dbpedia:birthDate ""1453"" ;
           dbpedia:name ""Philip I, Prince of Taranto"" .
  ?prince dbpedia:parent ""??father_name"" .
  ?father a foaf:Person ;
          dbpedia:name ?father_name .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
871,55,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mother_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:parent ?mother .
  ?mother a dbpedia:Person ;
         dbpedia:name ?mother_name ;
         foaf:child ?politician .
  ?16th_Earl_of_Derby a dbpedia:Noble;
                   dbpedia:children [
                     ?child a dbpedia:Person ;
                      dbpedia:name ""Frederick Stanley, 16th Earl of Derby"" ] ;
                   dbpedia:parent ?mother .
  ?16th_Earl_of_Derby rdfs:label ""Frederick Stanley, 16th Earl of Derby"" .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
595,43,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?author_name WHERE {
  ?commander a dbpedia:Person ; dbpedia:role dbpedia:Commander_of_Naval_Force ; dbpedia:birthPlace dbpedia:Chappaqua, New York .
  ?commander rdfs:label ?commander_name .
  ?author a dbpedia:Person ; dbpedia:role dbpedia:Author ; dbpedia:work dbpedia:Book ; dbpedia:birthPlace dbpedia:Chappaqua, New York .
  ?author rdfs:label ?author_name .
  ?commander ns:spouse ?author .
}
",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
347,0,train,Give me the commander in Thirty Years' War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_theater
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:conflict ""Thirty Years' War"" .
  ?commander rdfs:label ?commander_name .
  OPTIONAL { ?commander dbpedia:theater ?commander_theater }
}
```",1,1,2,1,1,3,3,71,0,0,42,0,0.0,0
203,13,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?military_force_name ?war_event
WHERE {
  ?wars a dbpedia:Conflict ;
         dbpedia:type ""War"";
         dbpedia:participatingSides ?side1, ?side2 .
  ?military_force a dbpedia:MilitaryForce ;
                 dbpedia:isPartOf ?wars ;
                 rdfs:label ?military_force_name .
  ?side1 a dbpedia:Nation ;
          dbpedia:countryName ""United Kingdom""^^xsd:string ;
          dbpedia:activeYears ?years_start, ?years_end .
  ?side2 a dbpedia:Nation ;
          dbpedia:countryName ""Other""^^xsd:string ;
          dbpedia:activeYears ?years_start2, ?years_end2 .
  ?military_force_name rdfs:label ?military_force_name .
  FILTER (?side1 != ?side2)
}
```",2,4,3,2,1,3,3,71,0,0,529,0,0.0,0
151,6,train,Give me the reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://purl.org/dc/terms/>

SELECT ?award_name WHERE {
  ?charles_parsons a dbpedia:Person ;
                  dbpedia:birthDate ""1879-10-10"" ;
                  dbpedia:deathDate ""1960-08-26"" ;
                  dbpedia:militaryBranch dbpedia:BritishArmedForces ;
                  dbpedia:awards ?award .
  ?award a award:Award .
}
```",2,2,3,2,1,2,2,9,0,0,98450,0,0.0,0
399,0,train,Give me the band member of Emilia (Bulgarian singer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },,1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
905,9,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?charles_ii_spouse_name ?charles_ii_birthplace 
WHERE { 
  ?charles_ii a dbpedia:Person ; 
  dbpedia:name ?charles_ii_name ; 
  dbpedia:birthPlace ?charles_ii_birthplace . 
  ?charles_ii dbpedia:spouse ?charles_ii_spouse . 
  ?charles_ii_spouse a dbpedia:Person . 
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
39,3,train,Who is the producer of Coke Studio Philippines?,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv: <http://purl.org/dc/terms/>

SELECT ?producer_name WHERE {
  ?producer a tv:Producer ;
            dbpedia:birthPlace ?producer_birthplace .
  ?producer rdfs:label ?producer_name
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
119,17,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź and war of Alexander Suvorov.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_name
WHERE {
  ?athlete a dbpedia:Athlete ;
             dbpedia:nationality dbpedia:Polska ;
             dbpedia:birthPlace ?lodz .
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?suvorov_war .
  ?suvorov a dbpedia:Person ;
            dbpedia:conflict ?war ;
            dbpedia:name ""Alexander Suvorov"" .
  ?lodz rdfs:label ""Łódź"" .
  ?country a dbpedia:Country .
  ?athlete dbpedia:residence ?country
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
816,10,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },,2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,51,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . },,5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
816,34,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?parent_name 
WHERE { 
  ?actor a dbpedia:Person ; dbpedia:birthPlace losangeles . 
  ?actor rdfs:label ?actor_name . 
  ?actor dbpedia:hasParent ?parent . 
  ?parent a dbpedia:Person ; dbpedia:birthPlace losangeles . 
  ?parent rdfs:label ?parent_name . 
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,53,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
    dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
    dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",6,6,7,3,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
293,42,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spouse_name ?spouse_birthplace WHERE {
  ?actor a dbpedia:Person ; dbpedia:name ""Roger Pryor"" .
  ?actor dbpedia:role dbpedia:Actor .
  ?spouse a dbpedia:Person ; dbpedia:name ?spouse_name .
  ?actor dbpedia:familyMember ?spouse .
  ?spouse dbpedia:birthPlace ?spouse_birthplace .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
143,7,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor ?actor .
  ?actor rdfs:label ""Afeez Oyetoro""@en .
  ?movie dbpedia:productionCompany ?production_company .
  ?production_company rdfs:label ?production_company_name
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
531,35,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?gallardón_residence ?conservative_leader_office
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:party dbpedia:Conservative_Party_(Spain) ;
               dbpedia:name ""Alberto Ruiz-Gallardón"" .
  ?politician foaf:homepage ?gallardón_residence .
  ?conservative_party a dbpedia:Political_party ;
                    dbpedia:name ""Conservative Republican Party (Spain)"" .
  ?conservative_leader a dbpedia:Politician ;
                       dbpedia:party ?conservative_party ;
                       dbpedia:role dbpedia:Leader_of_Party
  FILTER (?politician = ?conservative_leader)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
668,15,train,Who is the person born as the birth name of $pacely?,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ?person_name .
  OPTIONAL { ?person dbpedia:birthPlace ?birthplace }
}
```",2,2,3,2,1,3,3,71,0,858189,1,0.0,0.0,0
609,45,train,"Give me the birth place of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace ?youngkin_name ?youngkin_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?youngkin a dbpedia:Politician ;
             dbpedia:birthPlace ?youngkin_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
  ?youngkin rdfs:label ?youngkin_name
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
140,2,train,Give me the military force of Pickett's Charge.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?confederate_military_force_name ?confederate_military_strength
WHERE {
  ?charge a dbpedia:Event ;
            dbpedia:participatingMilitaryUnit ?confederate_military_unit .
  ?confederate_military_unit a dbpedia:MilitaryUnit ;
                       dbpedia:name ?confederate_military_force_name ;
                       dbpedia:strength ?confederate_military_strength .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
585,16,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in Actress.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?recipient_name ?recipient_birthplace WHERE {
  ?recipient a dbpedia:Person ; dbpedia:nationality dbpedia:United_States ; dbpedia:birthPlace ?recipient_birthplace .
  ?recipient rdfs:label ?recipient_name .
  ?recipient parent dbpedia:Actress .
}
",4,6,5,2,2,3,2,20,0,0,10,0,0.0,0
158,8,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedent_name ?decedent_birthplace
WHERE {
  ?decedent a dbpedia:Person ;
            dbpedia:birthPlace ?decedent_birthplace .
  ?decedent_birthplace rdfs:label ""Italy"" .  # Sandro Bertaggia's birth place
}
```",2,3,3,2,1,2,3,28,0,0,906,0,0.0,0
347,41,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?regiment ?child_of_ferdinand_ii ?grandchild_of_ferdinand_iii ?television_show
WHERE {
  ?commander a dbpedia:Person ; dbpedia:militaryBranch ?regiment .
  ?commander dbpedia:parent ?child_of_ferdinand_ii .
  ?child_of_ferdinand_ii dbpedia:parent ?grandchild_of_ferdinand_iii .
  ?grandchild_of_ferdinand_iii dbpedia:parent ?commander .
  ?commander rdfs:label ?commander_name .
  ?television_show a dbpedia:Television_Series ; dbpedia:mainCharacter ?commander_name
}
",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
742,15,train,Give me the birthplace of Reneta Kamberova and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?reneta_kamberova_birthplace ?university_birthplace
WHERE {
  ?reneta_kamberova a dbpedia:Person ;
    dbpedia:birthPlace ?reneta_kamberova_birthplace .
  ?пловдивски_университет a dbpedia:University ;
    dbpedia:name ""Пловдивски университет „Паисий Хилендарски“"" ;
    dbpedia:establishedDate ?university_established_date .
  ?reneta_kamberova rdf:type dbpedia:AlumnusOf ;
    dbpedia:alumniOf ?пловдивски_университет .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
246,10,train,"Give me the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_birthplace
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ""Princess Muna al-Hussein"" .
  ?royalty rdfs:label ?royalty_name .
  ?parent rdfs:label ?parent_name
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
513,2,train,Give me the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?person_details
WHERE {
  ?person a dbpedia:Person ;
  rdfs:label ?person_name .
  OPTIONAL { ?person dbpedia:P31 ?person_details } 
}
",1,1,2,1,1,3,2,20,0,1048576,1,0.0,0.0,0
595,14,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?event_description
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role dbpedia:Navy_officer ;
             rdfs:label ?commander_name .
  ?event a dbpedia:Event ;
            dbpedia:type ""societal event"" .
  ?commander dbpedia:participatedIn ?event .
  FILTER (lang(?event) = ""en"")  # restrict to English events
}
```

This query looks for individuals who are Navy officers and have been involved in events classified as ""societal events."" The `FILTER` clause ensures we only get results in English.",2,4,3,2,1,3,3,71,0,0,18,0,0.0,0
609,38,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_birthplace ?governor_birthplace
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author rdfs:label ""Cece Bell""@en .
  ?governor rdfs:label ""Governor of Virginia""@en .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,14,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?city_name ?city_birthplace
WHERE {
  ?city a dbpedia:City ;
         dbpedia:timeZone ""EET"" .
  ?city rdfs:label ?city_name .
  ?city dbpedia:birthPlace ?city_birthplace .
}
```",3,4,4,3,1,3,2,20,0,0,142,0,0.0,0
531,58,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v2 . },,6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,29,train,"Give me the team of Pablo Aimar and player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_info
WHERE {
  ?actor a dbpedia:Person ;
    rdfs:label ?actor_name .
  ?actor dbpedia:role dbpedia:ActorRole [
    dbpedia:inSeries 'All or Nothing: Manchester City' 
  ] .
  ?actor dbpedia:occupation dbpedia:SoccerPlayer .
  ?actor dbpedia:associatedTeam dbpedia:Manchester_City_F.C. 
}
",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
782,41,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?band_name ?associated_artist_name
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:associatedBand ?band .
  ?band rdfs:label ?band_name .
  ?artist rdfs:label ?associated_artist_name
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
756,28,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?club a dbpedia:SportClub ;
         dbpedia:type ""Football club"" .
  ?manager a dbpedia:Person ;
           dbpedia:birthPlace ?manager_birthplace .
  ?club rdfs:label ""VfL Bochum"" .
  ?club dbpedia:season ""2007-08"" .
  ?manager dbpedia:role ""Manager"" .
  ?second_club a dbpedia:SportClub ;
               dbpedia:type ""Football club"" .
  ?second_manager a dbpedia:Person ;
                dbpedia:birthPlace ?second_manager_birthplace .
  ?second_club rdfs:label ""SBV Vitesse"" .
  ?second_manager dbpedia:role ""Manager"" .
  ?second_club dbpedia:season ""2020-21"" .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
158,19,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland and native of Russian Empire.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"SELECT ?person_name ?birthplace ?nationality1 ?nationality2
WHERE {
  ?sandro_bertaggia a dbpedia:Person ;
                  dbpedia:birthPlace ?sandro_birthplace .
  ?birthplace a dbpedia:Country .
  
  ?person a dbpedia:Person ;
             dbpedia:birthPlace ?birthplace ;
             dbpedia:nationality ?nationality1 ;
             dbpedia:nationality ?nationality2 .
  
  ?person rdfs:label ?person_name .
  
  ?sandro_bertaggia ns:name ?person_name .
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
159,3,train,"Give me the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?conflict_name ?description
WHERE {
  ?pac a dbpedia:Person ;
         dbpedia:birthDate ""1600-04-09"" ;
         dbpedia:deathDate ""1676-06-11"" ;
         foaf:name ""Michał Kazimierz Pac"" .
  ?pac dbpedia:militaryRole dbpedia:MilitaryCommander .
  ?conflict a dbpedia:Event ;
            dbpedia:type dbpedia:MilitaryConflict .
  ?pac rdfs:seeAlso ?conflict .
  ?conflict rdfs:label ?conflict_name .
  FILTER (lang(?conflict_name) = ""en"")  # Filter for English language
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
706,13,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:awardRecipientOf dbpedia:SangeetNatakAkademiFellowship .
}
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
19,1,train,Give me the spouse of Carrie Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv: <http://purl.org/dc/terms/>

SELECT ?spouse_name
WHERE {
  ?carrie a tv:Character ;
           rdfs:label ""Carrie Johnson"" .
  ?carrie wdt:P31 wd:tvo:JimHalpert .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
198,25,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?person_name ?birthplace 
WHERE { 
  ?person a dbpedia:Person ; 
  dbpedia:birthPlace ?birthplace . 
  ?person rdfs:label ?person_name . 
}",3,5,4,2,2,3,3,71,0,782049,2,0.0,0.0,0
293,4,train,"Give me the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?ruling_party WHERE {
  ?parish dbpedia:isPartOf dbpedia:Louisiana ; dbpedia:administrativeDivisions ?division .
  ?division a dbpedia:LocalGovernmentUnit ; dbpedia:ruledBy ?ruling_party .
  ?parish rdfs:label 'Central, Louisiana' .
}
",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
412,13,train,Give me the war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader_name ?athens_entity
WHERE {
  ?leader a dbpedia:Person ;
            dbpedia:office dbpedia:PoliticalPartyLeader ;
            dbpedia:birthPlace ""Greece"" .
  ?athens_entity a dbpedia:Building , dbpedia:Landmark ;
                    dbpedia:locatedIn ""Athens, Greece"" .
  ?leader rdfs:label ?leader_name .
  ?athens_entity rdfs:label ?athens_entity_name
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
859,16,train,"Give me the associated musical artist of the associated musical artist of James Plotkin and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associated_artist_name
WHERE {
  ?james_plotkin a dbpedia:Person ;
                    dbpedia:musicalArtist ;
                    foaf:memberOf ?band .
  ?band a dbpedia:Band ;
          rdfs:label ""Burnt by the Sun""@en .
  ?associated_artist a dbpedia:Musician ;
                    dbpedia:musicalArtist ;
                    foaf:memberOf ?band .
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
816,14,train,Give me the parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent_name ?parent_birthplace
WHERE {
  ?actor Allan_Arbus ;
         dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:father ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:birthPlace ?parent_birthplace .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
756,25,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ?actor_birthplace .
  ?actor foaf:name ""Thomas Letsch"" .
  ?soccerClub a dbpedia:SoccerTeam ;
               dbpedia:manager ?soccerClub_manager .
  ?soccerClub rdfs:label ?soccerClub_label .
  ?actor dbpedia:nationality ""German"" .
  ?soccerClub_location a dbpedia:Location ;
                       rdfs:label ?soccerClub_location_label .
  ?soccerClub_manager rdfs:label ?soccerClub_manager_name
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
23,23,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_party ?father_party
WHERE {
  ?politician a dbpedia:Politician ;
dbpedia:birthPlace Nicaragua .
  ?politician rdfs:label ?politician_name .
  ?father a dbpedia:Person .
  ?father rdfs:label ?father_name .
  ?politician ns:parent ?father .
  ?politician rdfs:label 'Roy Leonardo Barreras Montealegre' .
  ?father rdfs:label ?father_name
}
",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
293,21,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbo:Person ;
           dbpedia:name ""Harriette Arlene Lake"" .
  ?person dbo:birthPlace ?birthplace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,6,train,"Give me the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?description
WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:type dbpedia:MilitaryConflict .
  ?war rdfs:label ?war_name .
  ?war dbpedia:description ""A brief description of the conflict"" .
  FILTER (lang(?war_description) = ""en"")  # English language constraint
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
159,61,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?battle_name ?television_show_title ?societal_event_description
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role ""Commander in the Battle of Vienna"" .
  ?battle a dbpedia:Event ;
            dbpedia:name ""Battle of Vienna (1683)"" .
  ?television_show a dbpedia:TelevisionShow ;
                    dbpedia:title ""The Winds of War"" .
  ?societal_event a dbpedia:SocietalEvent ;
                   dbpedia:description ""Airing of 'The Winds of War'"" .
  ?commander dbpedia:partOf ?battle .
  ?battle dbpedia:instanceOf dbpedia:War .
  ?television_show dbpedia:features ?battle .
  FILTER (lang(?television_show_title) = ""en"")  # Ensuring the title is in English
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
19,6,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace <en:United_Kingdom> ;
            foaf:partner ?wife .
  ?wife rdfs:label ""Caroline Louise Bevan Symonds"" .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
668,50,train,"Give me the person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?birth_name ?artist_name
WHERE {
  ?album a dbpedia:Album ;
            dbpedia:performer ?artist .
  ?artist a dbpedia:Musician;
           rdfs:label ?artist_name .
  ?artist ns:givenName ?birth_name .
  FILTER (?artist_name = 'Joey B')
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
871,14,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?father_title ?father_birthplace
WHERE {
  ?earl a dbpedia:Person ;
         dbpedia:birthPlace ?earl_birthplace .
  ?earl rdfs:label ""Frederick Stanley"" .
  ?father a dbpedia:Person ;
           dbpedia:parentOf ?earl ;
           dbpedia:title ?father_title .
  ?father rdfs:label ?father_name .
  ?father dbpedia:birthPlace ?father_birthplace .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
361,12,train,Give me the professional in  and actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?film_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:roleInFilm ?film .
  ?film rdfs:label ""Rustlers' Rhapsody"" .
  ?film rdfs:label ""Actor"" .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
151,8,train,Give me the entity in Ottoman Empire and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://purl.org/dc/terms/>

SELECT ?person_name ?award_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ""United Kingdom"" ;
            rdfs:label ?person_name .
  ?person dbpedia:serveInMilitaryUnit ?military_unit .
  ?military_unit a dbpedia:MilitaryUnit ;
               dbpedia:country ""Ottoman Empire"" ;
               rdfs:label ?military_unit_name .
  ?person dbpedia:receiveAward ?award .
  ?award a award:HonoraryDistinction .
  ?military_unit rdfs:label ?military_unit_name
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
557,32,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?producer_name ?claim_to_fame_work
WHERE {
  ?producer a dbpedia:Person ;
            dbpedia:birthPlace ?producer_birthplace .
  ?claim_to_fame_work a dbpedia:Film;
                       dbpedia:productionCompany ""El Rey Network"";
                       dbpedia:title ""Breaking Bad"".
  ?producer rdfs:label ?producer_name .
  ?claim_to_fame_work rdfs:creator ?producer .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,2,train,Give me the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?university_name ?university_location
WHERE {
  ?university a dbpedia:University ;
             dbpedia:location ?university_location .
  ?university_name rdfs:label ?university_name .
  FILTER (lang(?university_name) = ""bg"")  # Ensure the name is in Bulgarian
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
297,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?person_birthday
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:citizenship dbpedia:United_States .
}
```",1,1,2,1,1,2,2,9,0,0,63421,0,0.0,0
143,5,train,Give me the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birth_name
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ?person_name .
  ?person dbpedia:birthName ?birth_name .
  ?person_name = ""Cynthia Ikponmwenosa Morgan""
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
531,49,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?party_name ?leader_name 
WHERE { 
  ?miguel_maura a dbpedia:Politician ; dbpedia:memberOf ?party . 
  ?party rdfs:label ?party_name . 
  ?leader a dbpedia:OfficeHolder ; dbpedia:office ?office . 
  ?office rdfs:label ?leader_name . 
  ?miguel_maura ns:residence ?residence . 
  ?ruiz_gallardón a dbpedia:Person ; dbpedia:residence ?residence . 
  ?ruiz_gallardón a dbpedia:Politician ; dbpedia:memberOf ?party . 
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
742,17,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of Ekaterina Zaharieva.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?birthplace_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?birthplace_name .
  FILTER (lang(?birthplace_name) = ""en"")  # Search for English labels
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
103,11,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?movie_title ?tv_show_title 
WHERE {
  ?actor a dbpedia:Person ; dbpedia:role [ dbpedia:inFilm ?movie ] . 
  ?actor a dbpedia:Person ; dbpedia:role [ dbpedia:inTVShow ?tv_show ] . 
  ?movie rdfs:label ?movie_title . 
  ?tv_show rdfs:label ?tv_show_title . 
  ?movie rdf:type dbpedia:Film ; dbpedia:star ?actor_name . 
  ?tv_show rdf:type dbpedia:TVShow ; dbpedia:star ?actor_name . 
  ?actor ns:name ?actor_name . 
  ?movie ns:filmTitle ?movie_title . 
  ?tv_show ns:seriesName ?tv_show_title . 
  ?actor rdfs:label ?actor_name . 
}",2,3,3,2,1,3,3,71,0,0,53,0,0.0,0
87,12,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_movie ?spouse_name
WHERE {
  ?actor dbpedia:role dbpedia:Actor ;
            dbpedia:film dbpedia:Paradise (2013 film) .
  ?actor dbpedia:role dbpedia:Actor ;
            dbpedia:film dbpedia:Always (1989 film) .
  ?spouse foaf:partner ?actor .
  ?actor rdfs:label ?actor_name .
  ?spouse rdfs:label ?spouse_name
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
39,41,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?performer_name ?performer_profession ?shadow_alter_ego_name ?shadow_character_description ?band_members
WHERE {
  ?performer a dbpedia:Artist ;
             dbpedia:occupation ?performer_profession .
  ?shadow_alter_ego a dbpedia:Character ;
                    dbpedia:name ?shadow_alter_ego_name ;
                    dbpedia:description ?shadow_character_description .
  ?band_members a dbpedia:MusicGroup ;
               dbpedia:member ?performer .
  ?band_members rdfs:label ""Bob Thompson's band"" .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
198,54,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name ?awardee_force ?charleston_entity ?medal_of_honor_war
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award ?award .
  ?award rdfs:label ""Quincy Adams Gillmore Award""@en .
  ?awardee dbpedia:birthPlace ""Charleston, South Carolina"" .
  ?medal_of_honor a dbpedia:MedalOfHonor ;
                 dbpedia:recipient ?awardee .
  ?medal_of_honor rdfs:label ""Medal of Honor""@en .
  ?medal_of_honor_war a dbpedia:War
}
```

This query will retrieve the information needed based on the given criteria. However, please note that the actual results depend on the data available in DBpedia and how well it matches the query conditions. If more specific details are required (e.g., exact force or entity names), additional refinement of the query might be necessary.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
816,3,train,Give me the person decedent at Los Angeles.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedent_name ?decedent_deathplace
WHERE {
  ?decedent a dbpedia:Person ;
            dbpedia:deathPlace ?decedent_deathplace .
  ?decedent_deathplace rdfs:label ""Los Angeles"" .
}
```",1,1,2,1,1,3,3,71,0,0,2883,0,0.0,0
468,16,train,"Give me the reference to the real name of Peter IV of Aragon and child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?realName WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Peter IV of Aragon"" ;
           dbpedia:birthDate ?date .
  ?person rdfs:label ?realName .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
347,20,train,"Give me the commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?war_role ?ferdinand_III_child_name ?ferdinand_III_child_birthplace 
WHERE { 
?commander a dbpedia:Person ; dbpedia:conflict dbpedia:Thirty_Years%27_War . 
?commander dbpedia:advisorOf ?ferdinand_III . 
?ferdinand_III a dbpedia:Person ; dbpedia:title dbpedia:Holy_Roman_Emperor . 
?ferdinand_III rdfs:child ?ferdinand_III_child . 
?ferdinand_III_child a dbpedia:Person . 

# Assuming Albrecht von Wallenstein as the commander
BIND(?commander AS ?commander_name) 
BIND(dbpedia:Albrecht_von_Wallenstein AS ?war_role) 
",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
943,42,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_title ?naod_name ?naod_title
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ""Yeshaq I"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:hasChild ?naod .
  ?naod a dbpedia:Person ;
          rdfs:label ?naod_name ;
          dbpedia:parent ?child .
  ?naod rdfs:label ""Na'od"" .  # Assuming Na'od is the correct name based on context
          dbpedia:officeHolder ?naod_title .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
80,0,train,Give me the actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ""Shelby Oaks""@en .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
80,45,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace ?role_in_Golden_Master
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?actor dbpedia:appearedIn dbpedia:Batman_A_Zany_Scheme ; # ""The Golden Master"" (Batman)
           dbpedia:role ?role_in_Golden_Master .
  ?actor dbpedia:appearedIn dbpedia:ATL_film ; # ""ATL""
           rdfs:label ?actor_name .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
353,26,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?father_name
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:monarchy_start ""1066"" .
  ?king rdfs:label ""William I of England"" .
  ?king dbpedia:father ?father .
  ?father a dbpedia:Person ;
          dbpedia:birthPlace <http://dbpedia.org/property/birthPlace> ""Normandy, France"" .
  ?father rdfs:label ?father_name
}
```

This SPARQL query looks for a monarch named William I of England and retrieves the name of his father, who must be a person born in Normandy, France (reflecting William the Duke of Normandy's birthplace).",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
782,0,train,Give me the reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band_name ?band_description ?band_location
WHERE {
  ?band a dbpedia:MusicGroup ;
         dbpedia:genre ""Rock music"" ;
         dbpedia:inceptionYear 1974 ;
         dbpedia:location ?band_location .
  ?band rdfs:label ?band_name .
  FILTER (lang(?band_name) = ""en"")  # Ensure the band name is in English
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,49,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?disease_name ?societal_event_name
WHERE {
  ?commander a dbpedia:Person ;
               dbpedia:role dbpedia:Commander_in_Airforce .
  ?commander rdfs:label ?commander_name .
  ?disease a dbpedia:Disease ;
             rdfs:label ?disease_name .
  ?societal_event a dbpedia:Societal_Event ;
                    rdfs:label ?societal_event_name .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ""United States"" .
  ?author rdfs:label ?author_name .
  ?author_spcouse a dbpedia:Spouse ;
                 rdfs:label ?author_spcouse_name .
  ?owner a dbpedia:Person ;
           dbpedia:role dbpedia:Owner_of_USS_Arcadia;
           dbpedia:ship ""USS Arcadia (ID-1605)"" .
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolder ?office_holder_description .
  ?politician rdfs:label ?politician_name .
  ?author_spcouple a dbpedia:Person ;
                 rdfs:label ?author_spcouple_name .
  ?politician rdfs:member ?author_spcouple .
}
```

This query is structured to find:
- A person (`?commander`) who was a Commander in the Air Force.
- A disease (`?disease`) and a societal event (`?societal_event`) with specific labels.
- The author of ""An Invitation to the White House"" (`?author`), their spouse (`?author_spcouple`), and the owner of USS Arcadia (ID-1605).
- A politician (`?politician`) who holds an office and is married to the author's spouse.",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,3,train,"Give me the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alumnus_name WHERE {
  ?alumnus a dbo:Alumni ;
    dbo:alumniOf dbpedia:Plovdiv University 'Paisii Hilendarski' .
}
",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
628,42,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthPlace <http://dbpedia.org/property/name> ""Ackquille Jean Pollard""@en;
            rdfs:label ""Bobby Shmurda""@en .
  ?band_members a foaf:Group ;
               dbpedia:members ?band_member_name .
  ?artist dbpedia:associatedBand ?band_members .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
293,2,train,Give me the person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Harriette Arlene Lake"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
737,25,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?royalty_title WHERE {
  ?parent a dbpedia:Person ; dbpedia:hasChild ?child .
  ?child a dbpedia:Person ; dbpedia:isParentOf ?grandchild .
  ?grandchild a dbpedia:Royalty ; dbpedia:title ?royalty_title .
}",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
399,5,train,Give me the band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?band_member_details
WHERE {
  ?person a dbpedia:Person ;
  dbpedia:name ""Emilia Yancheva Valeva"".
  ?person rdfs:member ?band_member .
  ?band_member a dbpedia:BandMember
  ?band_member_name rdfs:label ?band_member_name .
}
",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
225,1,train,Give me the birthplace of Chieko Asakawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Chieko Asakawa"" ;
           dbpedia:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
595,11,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },,2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
293,43,train,"Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?spouse_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthName ""Harriette Arlene Lake"" ;
            dbpedia:politicalParty dbpedia:Republican_Party_United_States .
  ?person foaf:spouse ?spouse .
  ?spouse a dbpedia:Person;
           dbpedia:role dbpedia:actor
  FILTER (lang(?person_name) = ""en"")
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,5,train,Give me the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?person_profession
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:officeHolder dbpedia:President_of_Switzerland .
  ?person rdfs:label ?person_name .
  OPTIONAL { ?person foaf:name ?person_name }
  FILTER (lang(?person_name) = ""fr"")  # Ensure the name is in French
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
89,32,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_spouse_name ?royalty_status
WHERE {
  ?father a dbpedia:Person ; dbpedia:name 'Min Hla Htut' ; dbpedia:birthPlace 'Pyakaung' .
  ?mother a dbpedia:Person ; dbpedia:name ?royalty_spouse_name ; dbpedia:parent ?father .
  ?mother dbpedia:role 'Royalty' .
}
",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,50,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?politician_name ?actor_role ?politician_role
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:role ?actor_role .
  ?politician a dbpedia:Person ;
             dbpedia:role ?politician_role .
  ?actor dbpedia:birthPlace ""India"" .
  ?politician dbpedia:birthPlace ""India"" .
  ?actor rdfs:label ?actor_name .
  ?politician rdfs:label ?politician_name
}
```

This query looks for individuals who are both actors (`?actor a dbpedia:Person ; dbpedia:role ?actor_role`) and politicians (`?politician a dbpedia:Person ; dbpedia:role ?politician_role`), with both being born in India. It then selects the labels (names) of these individuals.",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
198,53,train,"Give me the force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?president_name ?president_force ?show_name ?show_award ?congressional_award 
WHERE { 
  ?president a dbpedia:Person ; dbpedia:office dbpedia:President_of_the_United_States . 
  ?president rdfs:label ?president_name . 
  ?show a dbpedia:Television_Series ; dbpedia:award dbpedia:Emmy_Award_for_Outstanding_Miniseries . 
  ?show rdfs:label ?show_name . 
  ?congressional_award a dbpedia:United_States_Congress_Award ; dbpedia:awardee ?show . 
  ?easy_company a dbpedia:Military_Unit ; dbpedia:war dbpedia:World_War_II . 
  ?easy_company rdfs:label ?show_name . 
  ?easy_company dbpedia:birthPlace ?author_birthplace . 
  ?author rdfs:label ?author_name . 
  ?lexington a dbpedia:Settlement ; dbpedia:country dbpedia:United_States ; dbpedia:name 'Lexington, Kentucky' . 
  ?henry_clay_lewis a dbpedia:Person ; dbpedia:birthPlace ?lexington . 
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,35,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find Roger III's parents
SELECT ?roger_III_parents WHERE {
  ?roger_III a dbpedia:Person ;
               dbpedia:parent ?roger_III_parents .
}

# Query to find Alfonso VI's children and their children
SELECT ?alfonso_vi_children WHERE {
  ?alfonso_vi a dbpedia:Person ;
                rdfs:child ?alfonso_vi_children .
}

# Combining the two sets of parents to trace lineage
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT { ?personParent1 ?parent2 } 
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:parent ?personParent1 .
  ?personParent1 a dbpedia:Person ;
               dbpedia:parent ?parent2 .
}

# Matching the children of Alfonso VI with the lineage traced from Roger III
SELECT * 
WHERE {
  ?roger_IIIParents ?childOfAlfonsoVI .
  ?alfonso_VIChildren ?hasChild ?roger_III .
  ?roger_IIIParents rdf:type dbpedia:Person ;
                   dbpedia:parent ?roger_II .
  ?roger_II a dbpedia:Person ;
            dbpedia:parent ?count_roger_I .
  ?count_roger_I a dbpedia:Person ;
                  dbpedia:parent ?alfonso_VI .
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
246,13,train,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?princess a dbpedia:Person ;
            dbpedia:birthPlace ""Riyadh, Saudi Arabia"" ;  # Princess Aisha bint Faisal's birth place
            rdfs:label ""Princess Aisha bint Faisal"" .
  
  ?parent a dbpedia:Person ;
           dbpedia:birthPlace ?parent_birthplace ;
           rdfs:label ?parent_name .
  
  ?princess dbpedia:childOf ?parent .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
871,26,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?earl_of_derby a dbpedia:Person ;
               dbpedia:birthDate ""1822-10-29"" ;
               dbpedia:officeHolder dbpedia:PoliticalOffice ;
               rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?parent a dbpedia:Person ;
           dbpedia:parentOf ?earl_of_derby ;
           dbpedia:officeHolder ?parent_title .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
687,15,train,"Give me the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?athlete_name ?birthdate
WHERE {
  ?marty_pollio a dbpedia:Person ;
                 dbpedia:birthday ?pollio_birthdate .
  ?athletes a dbpedia:Athlete ;
             dbpedia:birthday ?birthdate .
  ?pollio_birthdate = ?birthdate
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
159,13,train,Give me the reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_name WHERE {
  ?author a dbpedia:Person ;
           rdfs:label ""Cece Bell""@en
}
```",2,2,3,2,1,3,3,71,0,0,98450,0,0.0,0
871,47,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?politician_birthplace .
  ?office_holder a dbpedia:OfficeHolder ;
                    dbpedia:office ?office_description .
  ?earl_of_derby a dbpedia:Person ;
                 dbpedia:birthPlace ?earl_birthplace ;
                 rdfs:label ""Edward Stanley, 17th Earl of Derby"" .
  ?commander_awards a dbpedia:Award ;
                  rdfs:label ""Commander of the Royal Victorian Order"" .
  ?earl_of_derby rdfs:child ?child .
  ?child a dbpedia:Person ;
          dbpedia:birthPlace ?child_birthplace ;
          rdfs:label ""Arthur Stanley, 18th Earl of Derby"" .
  ?commander_awards rdfs:recipient ?awardee .
  ?awardee a dbpedia:Person ;
            dbpedia:birthPlace ?awardee_birthplace .
  ?politician rdfs:parent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:birthPlace ?parent_birthplace
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,50,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_name ?office_holder ?conflict_name ?conflict_description
WHERE {
  ?office_holder a dbpedia:OfficeHolder ;
                 dbpedia:role dbpedia:Politician .
  ?office_holder dbpedia:office ?office_name .
  ?office_name rdfs:label ?office_name_label .

  ?conflict a dbpedia:MilitaryConflict ;
            dbpedia:description ""societal event and military conflict""

  ?office_holder dbpedia:participatedIn ?conflict .
  ?conflict rdfs:label ?conflict_name .

  ?office_holder foaf:name ?office_holder_name .
  ?conflict dbpedia:name ?conflict_name

  ?office_name_label = ""Portuguese Colonial War"" 
  OR ?office_name_label = ""Spanish Civil War""
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
513,9,train,Give me the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?award_name WHERE {
  ?premier dbpedia:P31 dbpedia:Premier_of_Quebec ; dbpedia:office_start ""1936-04-19"" .
  ?premier rdfs:label ""George Hamilton Cameron"" .
  ?award rdfs:label ?award_name .
  ?premier rdf:type dbpedia:Politician ;
            dbpedia:awardedWith ?award .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
557,5,train,Give me the actor of Johnny Doughboy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_birthplace
WHERE {
  ?character a dbpedia:Character ;
               dbpedia:actor ?actor .
  ?character rdfs:label ""Johnny Doughboy"" .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:birthPlace ?actor_birthplace
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
119,4,train,Who is the leader of 2009 Galician regional election?,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president_name ?president_birthplace
WHERE {
  ?president a dbpedia:Politician ;
             dbpedia:office ""Presidente da Xunta de Galicia"" ;
             dbpedia:birthPlace ?president_birthplace .
  ?president rdfs:label ?president_name .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
595,28,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spouse_name 
WHERE { 
  ?politician a dbpedia:OfficeHolder ; 
  dbpedia:wife ?spouse_name . 
  ?politician rdfs:label ?politician_name . 
  ?spouse_name rdfs:label ?spouse_name . 
  ?politician ns:marriedTo ?spouse_name . 
  ?politician ns:hasSpouse ?spouse_name . 
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
595,56,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spouse_name 
WHERE { 
  ?author a dbpedia:Person ; 
    dbpedia:birthPlace ?author_birthplace . 
  ?author rdfs:label 'David McCullough' . 
  ?author dbpedia:publisher ?publisher . 
  ?publisher rdfs:label ?publisher_name . 
  ?politician a dbpedia:OfficeHolder ; 
    dbpedia:office ?politician_office . 
  ?politician rdfs:label ?politician_name . 
  ?war a dbpedia:Event ; 
    dbpedia:type 'disease' . 
  ?war rdfs:label ?war_label . 
  ?ship a dbpedia:Ship ; 
    dbpedia:identifier 'USS Arcadia (ID-1605)' . 
  ?ship rdfs:label ?ship_name . 
  ?politician dbpprop:spouse ?spouse_name . 
  ?politician rdfs:label ?politician_name . 
  ?ship rdfs:label ?ship_name . 
  ?author dbpprop:publishedBy ?publisher . 
  ?publisher rdfs:label ?publisher_name . 
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
39,57,train,"Give me the professional in Singer and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?singer_name ?band_name
WHERE {
  ?singer a dbpedia:Musician ;
            dbpedia:associatedBand ?band .
  ?band rdfs:label ?band_name .
  
  ?storyteller a dbpedia:Writer ;
               dbpedia:createdCharacter ?character .
  ?character a dbpedia:FictionalCharacter ;
             dbpedia:appearsInComics true .
  
  ?storyteller foaf:knows ?singer .
  
  ?character rdfs:label ""The Shadow"" .
}
```

This query looks for musicians (`?singer`) associated with bands (`?band`), and writers (`?storyteller`) who created a fictional character named ""The Shadow"". It then checks if the writer knows the musician to establish a connection between the two individuals.",6,9,7,3,3,3,3,71,0,0,3,0,0.0,0
203,1,train,Give me the military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?military_force WHERE {
  ?battle rdfs:label ""Battle of Fort Royal"" .
  ?battle dbpedia:partOfConflictPeriod ""American Revolutionary War"" .
  ?fortRoyal a dbpedia:Fort; dbpedia:locatedIn ""Saint-Martin, Caribbean"" .
  ?military_force a dbpedia:MilitaryForce .
  ?fortRoyal rdfs:member ?military_force
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
905,23,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?father_spouse_name
WHERE {
  ?philip a dbpedia:Person ;
           dbpedia:name ""Philip"" ;
           dbpedia:birthDate ""1882-10-25"" ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:name ?parent_name ;
          dbpedia:spouse ?father_spouse .
  ?parent_name rdfs:label ?father_name .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
737,49,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX ns: <http://purl.org/dc/elements/1.1/>

SELECT ?parent_name ?grandchild_name ?grandchild_parent_name ?link
WHERE {
  ?archduchess a dbpedia:Person ;
               dbpedia:child ?parent .
  ?parent rdfs:label ?parent_name .

  ?parent_name ns:father ?grandparent_name .
  ?grandparent a dbpedia:Person ;
               dbpedia:child ?grandchild .
  ?grandchild a dbpedia:Person ;
             dbpedia:child ?royal_offspring .
  ?royal_offspring rdfs:label ?grandchild_name

  ?grandchild_name ns:child ?philipp_albrecht .
  ?philipp_albrecht a dbpedia:Person ;
                  dbpedia:parent ?link .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,47,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of Sam Concepcion.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?magician_name ?magician Profession 
WHERE { 
  ?magician a dbpedia:Person ; 
  dbpedia:profession ?Profession . 
  ?Profession rdfs:label 'Magician' . 
  OPTIONAL { ?magician dbpedia:birthPlace ?birthplace } 
}",5,7,6,3,2,3,3,71,0,0,39640,0,0.0,0
668,37,train,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?birthplace
WHERE {
  ?artist a dbpedia:Musician ;
           dbpedia:givenName ""Darryl Paa Kwesi"" ;
           dbpedia:surname ""Bannerman-Martin"" .
  ?artist rdfs:label ?artist_name .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
531,19,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?gallardón_residence ?rajoy_office
WHERE {
  ?gallardón a dbpedia:Person ;
               dbpedia:office dbpedia:OfficeLocation ?gallardón_office .
  ?rajoy a dbpedia:Person ;
            dbpedia:office ?rajoy_office .
  ?gallardón rdfs:label ""Alberto Ruiz-Gallardón""@es .
  ?rajoy rdfs:label ""Mariano Rajoy""@es
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
59,8,train,"Give me the native of Bristol and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthplace
WHERE {
  ?player a dbpedia:Footballer ;
            dbpedia:club Bristol City F.C. .
  ?manager a dbpedia:Person ;
            dbpedia:role dbpedia:football_manager ;
            dbpedia:birthPlace ?manager_birthplace .
  ?player rdfs:label ""Jamie McCunnie"" .
  ?manager rdfs:label ?manager_name
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
38,16,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name WHERE {
  ?book a dbpedia:Book ;
           dbpedia:author ?author_name .
  ?author a dbpedia:Person ;
          dbpedia:nationality dbpedia:UnitedStates .
  ?book rdfs:isDefinedBy dbpedia:Page .
  ?book dc:title ""Joe Biden"" .
}
```",4,10,5,2,2,3,2,20,0,0,1,0,0.0,0
59,3,train,"Give me the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player_name
WHERE {
  ?player a dbpedia:SoccerPlayer ;
           dbpedia:club ?soccer_club .
  ?soccer_club a dbpedia:SportsClub .
  ?player rdfs:label ?player_name
}
```",1,3,2,1,1,2,2,9,0,6,12,0.0,0.0,0
769,1,train,Give me the player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player_name
WHERE {
  ?player a dbo:SportsPerson ;
           rdfs:label ?player_name .
  ?player dba:participantSport badminton
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
347,54,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?event_type ?television_show_name ?dragoon_regiment_name
WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ; dbpedia:child ?child .
  ?child rdfs:label ?child_name .
  ?child dbpedia:p father ?father_of_child .
  ?father_of_child a dbpedia:Person ; dbpedia:parent ?archduke_joseph_parent .
  ?archduke_joseph_parent a dbpedia:Person ; dbpedia:child ?archduke_charles_joseph .
  ?archduke_charles_joseph rdfs:label ?archduke_name .
  ?dragoon_regiment a dbpedia:MilitaryUnit ; dbpedia:name ?dragoon_regiment_name .
  ?child dbpedia:p father_of ?archduke_charles_joseph .
  ?archduke_charles_joseph rdfs:label ?archduke_name;
  ?child dbpedia:partOfEvent ?societal_event .
  ?societal_event a dbpedia:EventType
}
",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,3,train,Give me the award of Rodney Lees.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award_name 
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ""United Kingdom"" ;
         dbpedia:role dbpedia:Actor ;
         dbpedia:awards ?award .
  ?award rdfs:label ?award_name
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,19,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor_name ?office WHERE {
  ?commander rdfs:label ""George Ducas"" .
  ?commander a dbpedia:Person ;
            dbpedia:role dbpedia:Politician;
            dbpedia:role dbpedia:OfficeHolder;
            dbpedia:conflict dbpedia:Russo_Polish_War_1654_1667 .
  ?successor a dbpedia:Person ;
           dbpedia:role dbpedia:OfficeHolder;
           dbpedia:conflict dbpedia:Russo_Polish_War_1654_1667 .
  ?successor rdfs:label ?successor_name .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
609,37,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?cece_bell_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
             dbpedia:birthPlace ?governor_birthplace .
  ?cece_bell a dbpedia:Person ;
               dbpedia:birthPlace ?cece_bell_birthplace .
  ?governor rdfs:label ?governor_name .
  ?cece_bell rdfs:label ?cece_bell_name
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
609,36,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_birthplace ?vince_gilligan_birthplace
WHERE {
  ?author a dbpedia:Person ;
           rdfs:label ""Cece Bell""@en .
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                 rdfs:label ""Vince Gilligan""@en ;
                 dbpedia:role dbpedia:TelevisionProducer .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
23,10,train,Give me the entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?galan_name ?galan_country
WHERE {
  ?galan a dbpedia:Person ;
         dbpedia:nationality ?galan_country .
  ?galan rdfs:label ?galan_name
}",2,2,3,2,1,2,3,28,0,145125,2141,0.0,0.0,0
687,39,train,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?player_name ?team_name 
WHERE { 
  ?player a dbpedia:SoccerPlayer ; 
    dbpedia:birthPlace ?birthplace ; 
    dbpedia:role dbpedia:SoccerManager . 
  ?player rdfs:label ?player_name . 
  ?team a dbpedia:SoccerTeam ; 
    dbpedia:hasMember ?player . 
  ?team rdfs:label ?team_name . 
  ?birthplace ns:bornOnDate '1970-04-05' 
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
39,38,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?shadow_alter_ego_name ?lambert_thompson_connection 
WHERE { 
  ?alter_ego a dbpedia:Character ; 
  dbpedia:alterEgoName ?shadow_alter_ego_name . 
  ?lambert_thompson dbpedia:birthDate '1935-10-11' ; 
  ?lambert_thompson a dbpedia:Person ; 
  dbpedia:birthPlace 'United States' . 
  ?alter_ego rdfs:label 'Lamont Cranston' . 
  ?shadow_alter_ego_name rdfs:label ?shadow_alter_ego_name . 
  ?lambert_thompsonConnection a dbpedia:NarrativeRelation ; 
  dbpedia:narrativeRelationType 'partOf' ; 
  subject ?lambert_thompson ; 
  object ?shadow_alter_ego_name . 
}",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
595,2,train,Give me the commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?commander_name ?commander_birthday
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:birthDate ?commander_birthday .
  ?commander rdfs:label ?commander_name .
}
```",1,1,2,1,1,3,3,71,0,1074393,18,0.0,0.0,0
782,9,train,Give me the reference to The Fabulous Thunderbirds and band of Kim Wilson.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_name ?band_description 
WHERE { 
  ?band a dbpedia:Band ; 
  dbpedia:leader ?band_leader . 
  ?band_leader rdfs:label ?band_name . 
  ?band rdfs:member ?band_member . 
  ?band_member rdfs:label ?band_description . 
  ?band_member p:P31 ?band . 
  ?band_name strlang:startsWith 'The Fabulous Thunderbirds' . 
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
384,5,train,"Give me the party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor_name ?successor_party
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:officeHolder ?office .
  ?office a dbpedia:Office ;
            rdfs:label ""Member of the French Parliament"" .
  ?politician rdfs:label ?politician_name .
  ?office rdfs:label ?office_name .
  ?successor a dbpedia:Politician ;
               dbpedia:officeHolder ?office .
  ?successor rdfs:label ?successor_name .
  FILTER (?politician_name = ""Patrice Martin-Lalande"") .
  FILTER (lang(?office_name) = ""fr"") .
}
```",2,4,3,2,1,2,2,9,0,0,6,0,0.0,0
609,12,train,Give me the birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?author a dbpedia:Person ;
         dbpedia:birthPlace ?birthplace .
  ?author rdfs:label ""Cece Bell""@en .
  ?politician a dbpedia:Person ;
             dbpedia:birthPlace ?birthplace .
  ?politician rdfs:label ""Glenn Youngkin""@en
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
353,58,train,"Give me the child of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?roger_spouse a dbpedia:Person ;
               dbpedia:sibling ?constance_child .
  ?constance_child a dbpedia:Person ;
                    dbpedia:child ?royalty .
  ?royalty a dbpedia:Royalty ;
             dbpedia:name ?royalty_name .
  ?royalty_name = ""William I of Sicily""
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
905,29,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?sigismund a dbpedia:Person ;
             dbpedia:father ?parent ;
             dbpedia:birthDate ""1358"" ;
             dbpedia:deathDate ""1437"" .
  ?parent a dbpedia:Person ;
          dbpedia:parentOf ?sigismund ;
          rdfs:label ?parent_name ;
          dbpedia:title ?parent_title
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
687,2,train,Give me the team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team_name
WHERE {
  ?player a dbpedia:Person ;
            dbpedia:birthDate ""1973-03-31"" ;
            dbpedia:fullname ""Pablo Aimar"" ;
            dbpedia:sport ""Football"" ;
            foaf:memberOf ?team .
  ?team a dbpedia:SportsTeam ;
         dbpedia:name ?team_name .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,0,train,Give me the actor of Dispatches from Elsewhere.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv_series: <http://dbpedia.org/ontology/TvSeries>

SELECT ?actor_name
WHERE {
  ?actor a tv_series:Actor ;
          tv_series:roleInSeries ""Dispatches from Elsewhere"" .
  ?actor rdfs:label ?actor_name
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
119,4,train,"Who is the native, that is Polish and an athlete, of Łódź?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?athlete_name ?athlete_birthplace
WHERE {
  ?athlete a dbpedia:Person ;
           dbpedia:nationality pol ;
           dbpedia:birthPlace Łódź .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
756,6,train,"Give me the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?president_name ?president_country
WHERE {
  ?president a dbpedia:Politician ;
             dbpedia:nationality ?president_country .
  ?president rdfs:label ""Theodor Heuss""@de
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,25,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?person_name ?birth_place_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:nationality dbpedia:Puerto_Rico ;
            dbpedia:birthPlace ?birth_place .
  ?birth_place a geo:Location ;
               geo:name ?birth_place_name ;
               geo:country dbpedia:Puerto_Rico .
  ?birth_place_name rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
905,58,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse_name ?child_name
WHERE {
  ?charles_ii_of_neaples a dbpedia:Monarch ;
               dbpedia:monarchy_start ""1687"" ;
               dbpedia:predecessor ?sigismund .
  ?sigismund a dbpedia:Person ;
            dbpedia:spouse ?spouse_name .
  ?charles_i_of_hungary a dbpedia:Royalty ;
                 dbpedia:child ?child_name .
  ?charles_i_of_hungary a dbpedia:Person ;
                 dbpedia:parent ?sigismund .
  ?spouse_name rdfs:label ?spouse_name .
  ?child_name rdfs:label ?child_name
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
756,49,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?manager_birthdate ?player_club_name ?player_club_type ?player_birthdate
WHERE {
  ?manager a dbpedia:Person ; dbpedia:birthDate ?manager_birthdate .
  ?manager dbpedia:role dbpedia:SoccerManager ; dbpedia:managedTeam ?player_club .
  ?player_club a dbpedia:SportClub ; dbpedia:type dbpedia:SoccerClub .
  ?player rdfs:label ?player_name .
  ?player_club rdfs:label ?player_club_name .
  ?player a dbpedia:Person ; dbpedia:birthDate ?player_birthdate .
  ?player_club rdfs:label ?player_club_name
  FILTER (STRFTER(?manager_birthdate, '1968-08-26') AND STRFTER(?player_birthdate, '1968-08-26'))
}
",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
595,20,train,"Give me the spouse of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?work_name ?author_name
WHERE {
  ?person a dbpedia:Person ;
dbpedia:isSpouseOf ?spouse_name .
  ?person rdfs:label ?spouse_name .
  ?work a dbpedia:WrittenWork ; dbpedia:type [ dbpedia:literature_type 'Book' ] .
  ?work rdfs:author ?author_name .
  ?person rdfs:label ?author_name
  ?work rdfs:label ?work_name
}
",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
23,16,train,Give me the party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . },"As the specific details about Roy Barreras' father and Sofía Petro's current party affiliation are not provided, a direct SPARQL query cannot be formulated without making assumptions or conducting external searches. Here is a general template that could be used once more detailed information is available:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_party ?author_name ?author_party
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?birthplace .
  OPTIONAL { ?politician rdfs:label ?name }
  
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  OPTIONAL { ?author rdfs:label ?name }
  
  ?politician rdfs:label ?name .
  ?author rdfs:label ?name
}
```

This query looks for individuals with their birthplaces and party affiliations, using labels (names) as optional properties to match the provided question context.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,1,train,Give me the birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ?birthplace .
  ?actor rdfs:label ""Smita Patil""@en .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
531,44,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader_name ?span_leader_tenancy ?war_commander_position ?central_african_republic_position
WHERE {
  ?leader a dbpedia:Politician ;
dbpedia:party dbpedia:Conservative Party of Spain ;
dbpedia:office ?span_leader_tenancy .
  ?war_commander a dbpedia:OfficeHolder ;
dbpedia:role dbpedia:War Commander ;
dbpedia:country dbpedia:Central African Republic .
  ?leader rdfs:label ?leader_name .
  ?war_commander rdfs:label ?war_commander_name
}
",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
159,23,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor_name ?successor_political_role ?war
WHERE {
  ?pac a dbpedia:Person ;
         dbpedia:birthDate ""1890-10-06"" ;
         dbpedia:deathDate ""1948-03-01"" ;
         dbpedia:officeHolder dbpedia:Politician ;
         dbpedia:militaryConflict dbpedia:Polish_Soviet_War .
  ?successor a dbpedia:Person ;
           dbpedia:officeHolder ?successor_political_role .
  ?war rdfs:label ""Polish-Soviet War"" .
  ?pac foaf:successor ?successor .
}
```

This query looks for:
- A person (`?pac`) who matches Michał Kazimierz Pac in terms of birth date, death date, being a politician and office holder, and involvement in the Polish-Soviet War.
- A successor (`?successor`) to this person, who also holds a political office (`?successor_political_role`).
- The war/conflict (`?war`) that both individuals were involved in.",3,7,4,3,1,3,3,71,0,0,3,0,0.0,0
943,32,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name ?parent_name ?royalty_status
WHERE {
  ?alter_ego a dbpedia:Character ;
               dbpedia:alterEgoOf ?shadow .
  ?shadow rdfs:label ""The Shadow"" .
  ?parent a dbpedia:Person ;
            dbpedia:parentOf ?alter_ego ;
            rdfs:label ?parent_name .
  ?parent a dbpedia:Royalty .
  ?alter_ego rdfs:label ?alter_ego_name
}
```",4,5,5,2,2,3,3,71,0,0,3,0,0.0,0
246,9,train,"Give me the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?royalty_status
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:birthDate ""1970-01-01""^^xsd:date ;
            dbpedia:name ""Faisal bin Abdulaziz Al Saud"";
            dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
             dbpedia:name ""Abdulaziz bin Abdulrahman Al Saud"";
             dbpedia:child ?child .
  ?child a dbpedia:Person ;
          dbpedia:name ?child_name ;
          dbpedia:birthDate ""1970-01-01""^^xsd:date ;
          foaf:parent ?parent .
  ?child rdfs:label ?child_name .
  FILTER (regex(str(?child_name), 'Aisha'))  # Ensure the child is Aisha
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
39,59,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?fictional_character_name WHERE {
  ?fictional_character a dbpedia:Character ;
                       rdfs:label ?fictional_character_name ;
                       dbpprop:occupation dbo:music_producer .
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
628,55,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?artist_name ?shawn_carter_birthname ?coro_de_la_pontificia_universidad_region
WHERE {
  ?artist a dbpedia:MusicArtist ;
            dbpedia:hasBandMember ?band_member_name .
  ?artist rdfs:label ?artist_name .
  ?shawn_carter a dbpedia:Person ;
             dbpedia:nativePlace ?coro_de_la_pontificia_universidad_region .
  ?coro_de_la_pontificia_universidad_region a dbpedia:Region ;
                                dbpedia:country ""Puerto Rico"" ;
                                dbpedia:isPartOf ""United States"" ;
                                rdfs:label ?coro_name
  FILTER (lang(?artist_name) = ""en"")
}
```

This query will retrieve the band member(s) of the artist associated with Bobby Shmurda, his birth name, and the region he originates from. The `FILTER` clause ensures we get results in English.",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
353,20,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_relationship ?royalty_title
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?child_parent .
  ?child_parent a dbpedia:Person ;
               rdfs:label ""Roger II of Sicily"" ;
               dbpedia:offspring ?child .
  ?child rdfs:label ?child_name .
  ?child rdf:type dbpedia:Royalty .
  ?child_parent rdfs:label ?parent_name .
  ?child_relationship a rdf:BNode; rdf:type rdf:Property; rdfs:label ""child of"" .
  ?child_relationship ?child_parent ?child
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
78,13,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?artist_name ?artist_birthplace
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ?person_name .
  ?person dbpedia:associatedBand ?artist .
  ?artist a dbpedia:MusicArtist ;
          rdfs:label ?artist_name ;
          dbpedia:birthPlace ?artist_birthplace .
}",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
756,19,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager_name ?manager_birthplace ?player_name ?player_birthplace
WHERE {
  ?club a dbpedia:SportingClub ;
            dbpedia:fullName ""VfL Bochum"" .
  ?manager a dbpedia:Person ;
            dbpedia:role dbpedia:SoccerManager ;
            foaf:name ?manager_name .
  ?player a dbpedia:Person ;
            dbpedia:role dbpedia:Player ;
            foaf:name ?player_name .
  ?club dbpedia:season ""2007-08"" .
  ?manager dbpedia:birthPlace ?manager_birthplace .
  ?player dbpedia:birthPlace ?player_birthplace .
  ?manager rdfs:label ?manager_name .
  ?player rdfs:label ?player_name
}",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
905,47,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_parent_name
WHERE {
  ?charlesVII a dbpedia:Person ;
             dbpedia:birthDate ""1347-01-22"" ;
             dbpedia:parent ?charlesVII_parent .
  ?charlesVII_parent a dbpedia:Person ;
                rdfs:label ?royalty_parent_name .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
80,1,train,Give me the actor of ATL (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX mousetrap: <http://www.w3.org/2002/07/owl#>
SELECT ?actor_name WHERE {
  ?movie a mousetrap:Film ;
            mousetrap:mainActor ?actor_name .
  ?actor_name rdfs:label ""ATL"" .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
628,18,train,Give me the native of Florida and person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person_name ?birth_place
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace <urn:loc:Florida> .
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,48,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?team
WHERE {
  ?player a dbpedia:Person ;
            dbpedia:birthday ""1979-11-03"" ;
            dbpedia:role dbpedia:footballer .
  ?manager a dbpedia:Person ;
            dbpedia:birthday ""1979-11-03"" ;
            dbpedia:role dbpedia:SoccerManager .
  ?player rdfs:label ?player_name .
  ?manager rdfs:label ?manager_name .
  FILTER (str(?player_name) = ""Marty Pollio"")
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
158,22,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedent_name ?decedent_birthplace
WHERE {
  ?sandro_bertaggia a dbpedia:Person ;
                 dbpedia:birthPlace <country_italy_uri> .
  ?decedent a dbpedia:Person ;
             dbpedia:birthPlace <same_country_as_sandro_bertaggia_birthplace_uri> .
}
```

### Completed
This query will search for the person who is both born in the same country as Sandro Bertaggia and also deceased at their birthplace, which is assumed to be the same country. The exact `country_italy_uri` and `same_country_as_sandro_bertaggia_birthplace_uri` would need to be replaced with actual URIs from DBpedia based on precise geographical definitions of those places.",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
159,1,train,Give me the reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           foaf:name ?person_name ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ""George Ducas""@en .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
769,2,train,Give me the birthday of Tony Hollings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthday
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Tony Hollings""@en .
  ?person dbpedia:birthDate ?birthday
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
347,46,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?war ?television_show WHERE {
  ?commander a dbpedia:Person ; dbpedia:militaryBranch dbpedia:MilitaryOfAlgerianWar .
  ?commander rdfs:label ?commander_name .
  ?war a dbpedia:Event ; dbpedia:name ""Algerian War"" .
  ?television_show a dbpedia:TelevisionShow ; dbpedia:title ?television_show_title .
  ?commander dbpedia:hasChild ?child_of_Ferdinand_III .
  ?child_of_Ferdinand_III a dbpedia:Person ; dbpedia:name ""Rudolf IV, Holy Roman Emperor"" .
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,57,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },,6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
38,14,train,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?author_name ?work_title 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:militaryBranch dbpedia:Korean_War_Army ; dbpedia:officeHolder true . 
  ?commander rdfs:label ?commander_name . 
  ?work a dbpedia:WrittenWork ; dbpedia:author ?author_name . 
  ?author a dbpedia:Person ; dbpedia:name ?author_name . 
  ?work rdfs:label ?work_title . 
}",3,6,4,3,1,3,2,20,0,0,24,0,0.0,0
80,48,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },,5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
198,7,train,Give me the person deceased on 1850-08-05.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deceased_person_name ?date_of_death
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:deathDate ""1850-08-05"" .
  ?person rdfs:label ?deceased_person_name
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
859,15,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musical_artist_name ?band_member_name
WHERE {
  ?musical_artist a dbpedia:MusicalArtist ;
                  rdfs:label ""Bear Hands"" .
  ?band_members a dbpedia:BandMember ;
               dbpedia:associatedMusician ?musical_artist ;
               foaf:name ?band_member_name .
}
```",4,8,5,3,2,3,2,20,0,0,5,0,0.0,0
39,56,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_name WHERE {
  ?person a dbpedia:Musician ; dbpedia:name ?name .
  ?name match (?bob_thompson_name | ?sam_concepcion_name) .
  ?band a dbpedia:Band ; dbpedia:members ?person .
}",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
941,11,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of Prince Augustus William of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Duke Anthony Ulrich of Brunswick""@en;
          dbpedia:birthPlace ""Brunswick, Germany""@en.
  ?parent dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person ;
           rdfs:label ""Prince Augustus William of Prussia""@en;
           dbpedia:birthPlace ""Prussia""@en.
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
472,6,train,Give me the administration of Christian IX of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?king_name ?king_reign_start ?king_reign_end ?capital_city
WHERE {
  ?king a dbpedia:Monarch ;
         dbpedia:monarchyStartYear ?king_reign_start ;
         dbpedia:endOfMonarchy ?king_reign_end .
  ?king rdfs:label ?king_name .
  ?king dbpedia:country ""Denmark"" .
  ?capital a dbpedia:CapitalCity ;
            dbpedia:locatedInCountry ?king .
  ?capital rdfs:label ?capital_city
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
472,13,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Christian IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?territory_administered
WHERE {
  ?hansen a dbpedia:Person ;
         dbpedia:birthPlace [ a dbpedia:Location ; rdfs:label ""Denmark"" ] .
  ?king a dbpedia:Person ;
         dbpedia:monarchy ?monarchy ;
         dbpedia:reignStart ""1863-01-1""^^xsd:date ;
         dbpedia:deathPlace [ a dbpedia:Location ; rdfs:label ""Copenhagen, Denmark"" ] .
  ?monarchy dcterms:hasAdministeredBy ?territory_administered .
  ?hansen ns:inDataset <http://dbpedia.org/ontology/> .
  ?king ns:inDataset <http://dbpedia.org/ontology/>
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,2,train,"Give me the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?player_club
WHERE {
  ?player a dbpedia:Person ;
            dbpedia:sport ?sport .
  ?player rdfs:label ?player_name .
  ?sport owl:subClassOf dbpedia:SportSpectatorSport#football .
  ?player dbpedia:birthDate ""1989-04-15""^^xsd:date .
  ?player_name matches ""Denis Kolodin""
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
398,13,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?nickname WHERE {
  ?player a dbpedia:Person ; dbpedia:nickname ?nickname .
  ?player dbpedia:club dbpedia:FC_Rostov .
  ?player rdfs:label ?player_name
}",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
140,6,train,Give me the commander in Pickett's Charge and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"SELECT ?commander_name ?republican_member_name
WHERE {
  ?commander a dbpedia:Person ;
               dbpedia:role dbpedia:CommanderInPicketsCharge .
  ?republican_member a dbpedia:Person ;
                       dbpedia:memberOf dbpedia:RepublicanParty_USA .
  ?commander rdfs:label ?commander_name .
  ?republican_member rdfs:label ?republican_member_name
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
737,19,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor_name ?predecessor_relationship
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           rdfs:label ""Albrecht, Duke of Württemberg""@de ;
           dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           rdfs:label ""Philipp Albrecht, Duke of Württemberg""@de ;
           dbpedia:hasParent ?parent .
  ?parent dbpedia:hasSibling ?sibling .
  ?sibling a dbpedia:Person ;
            rdfs:label ?predecessor_name .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,15,train,Who is the awardee of the award of Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardee_name
WHERE {
  ?vince_gilligan a dbpedia:Person ;
                  dbpedia:birthPlace ?vince_gilligan_birthplace ;
                  rdfs:label ""Vince Gilligan"" .
  ?award a dbpedia:Award ;
         dbpedia:recipient ?awardee_name ;
         rdfs:label ?award_name .
  ?vince_gilligan ns:award ?award .
  ?award rdfs:label ?award_name
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor_name ?governor_birthplace WHERE {
  ?governor a dbpedia:Politician ;
           dbpedia:birthPlace ?governor_birthplace .
  ?governor rdfs:label ""Paulus Powell"" .
}
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
412,14,train,"Give me the war of Napoleon Zervas and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war_name ?zervas_war ?varthalitis_death_place
WHERE {
  ?zervas a dbpedia:Person ;
           dbpedia:conflict ?zervas_war .
  ?varthalitis a dbpedia:Person ;
             dbpedia:deathPlace ?varthalitis_death_place .
  ?zervas rdfs:label ""Napoleon Zervas""@en .
  ?varthalitis rdfs:label ""Antonios Varthalitis""@en .
  ?war_name rdfs:label ?war_name
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
159,9,train,Give me the successor of Yurii Khmelnytsky and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor_name ?ducas_reference
WHERE {
  ?khmelnytsky a dbpedia:Person ; dbpedia:office dbpedia:Hetman_of_Ukraine ; dbpedia:successor ?successor_name .
  ?ducas a dbpedia:Person ; dbpedia:birthPlace <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/page/Romania> .
  ?ducas rdfs:label ?ducas_reference .
}
",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,21,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Miguel Maura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?minister_name ?minister_residence ?office
WHERE {
  ?minister a dbpedia:Person ;
            dbpedia:birthPlace ?minister_birthplace .
  ?minister rdfs:label ?minister_name .
  OPTIONAL { ?minister dbpedia:P31 ?office }
  OPTIONAL { ?office dbpedia:locatedIn ?minister_residence }
}
```

This query:
- Selects individuals (`?minister`) who are labeled with their names (`?minister_name`).
- Checks if they have a political office (`P31 ?office`), which represents their ministerial role.
- Optionally links the office to a location (`?office dbpedia:locatedIn ?minister_residence`), which would be their residence.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,31,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_holder_name ?office_holder_position
WHERE {
  ?office_holder a dbpedia:OfficeHolder ;
                 dbpedia:officeTerm ?office_term .
  ?office_term rdfs:label ""Madrid City Council"" .
  ?office_holder foaf:name ?office_holder_name .
  ?office_holder dbpedia:partOfOrganization dbpedia:People%27s_Party_(Spain) .
  ?office_term dbpedia:electionDate ""2003-03-02""^^xsd:date
}
```

This query looks for individuals who are Office Holders (dbpedia:OfficeHolder), associated with the People's Party (foaf:name linked to dbpedia:People%27s_Party_(Spain)), and who held a position in the Madrid City Council during the 2003 election period.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
414,6,train,Give me the show of Royal Swedish Academy of Sciences and award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awards_show ?max_born_award
WHERE {
  ?awards_show a dbpedia:Event ;
                rdfs:label ?awards_show_label .
  ?max_born_award a award:Award ;
                    rdfs:label ?max_born_award_label ;
                    dbpedia:awardedTo ""Max Born"" .
  ?awards_show dbpedia:awards ?max_born_award
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
80,47,train,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ; dbpedia:actor ?actor_name .
  ?album a dbpedia:MusicAlbum ; dbpedia:artist ?actor_name .
  ?actor_name rdfs:label ?actor_name .
}
",5,7,6,3,2,3,3,71,0,0,10,0,0.0,0
159,42,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor_name ?successor_title ?jean_baptiste_event
WHERE {
  ?commander dbpedia:role ""Russo-Polish War (1654–1667) commander"" .
  ?commander rdfs:label ""George Ducas"" .
  ?successor a dbpedia:Politician ;
             dbpedia:officeHolder ;
             dbpedia:successorOf ?commander .
  ?jean_baptiste_comte_d_arco a dbpedia:Person ;
                    dbpedia:role ""Jean Baptiste, Comte d'Arco"" .
  ?jean_baptiste_event a dbpedia:Event ;
                      rdfs:label ""Russo-Polish War (1654–1667)"" .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
203,48,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?war_label ?war_uri
WHERE {
  ?war a dbpedia:War ;
         dbpedia:name ""Vietnam War"" .
  ?war_uri rdf:type dbpedia:Event .
  ?commander a dbpedia:Person ;
             dbpedia:role ""Commander"" ;
             dbpedia:partOf ?war .
  ?war_uri = ?war
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
392,2,train,Give me the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?character_name
WHERE {
  ?character a dbo:Character ;
            rdfs:label ?character_name .
  FILTER (lang(?character_name) = ""de"" )  # Search for German language labels
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
633,12,train,Give me the spouse of Renée of Bourbon and parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },,3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,10,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?french_campaign_commander ?british_fleet_commander
WHERE {
  ?french_campaign a dbpedia:MilitaryCampaign ;
                 dbpedia:commander ?french_campaign_commander .
  ?british_fleet a dbpedia:MilitaryUnit ;
                dbpedia:partOfBattle ?battle ;
                dbpedia:name ""Battle of Cape Finisterre (1805)"" .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,3,train,Give me the person born as Richard Grant Esterhuysen.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name
WHERE {
  ?person dbpedia:name ""Richard Grant Esterhuysen"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
58,17,train,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?producer_name WHERE {
  ?movie a dbpedia:Film ; dbpedia:producer ?producer_name .
  ?producer_name rdfs:label ?producer_name_label .
  FILTER (lang(?producer_name_label) = 'en') .
}",4,4,5,3,2,3,2,20,1,20403,0,4.900999803960008e-05,1.0,9.8015192354815e-05
412,19,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?war_name ?athens_connection ?national_party_connection
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ""Athens, Greece"" .
  ?person rdfs:label ?person_name .
  ?war a dbpedia:Event ;
         dbpedia:name ""War of Athens"" .
  ?war rdfs:label ?war_name .
  ?person dbpedia:memberOf dbpedia:National_Party_of_Greece .
  OPTIONAL { ?person dbpedia:associatedWith dbpedia:Greece }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
89,28,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?child_name
WHERE {
  ?min_hla_htut a dbpedia:Person ;
                   dbpedia:parent [ ?parent_name ] .
  ?parent_name a dbpedia:Person ;
                  rdfs:label ?parent_name .
  ?saw_shwe_khet a dbpedia:Person ;
                    dbpedia:spouse ?spouse_name .
  ?min_hla_htut dbpedia:child ?child_name .
  ?child_name a dbpedia:Person ;
                rdfs:label ?child_name
  FILTER (lang(?parent_name) = ""en"")
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,25,train,Give me the parent of the child of Allan Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?parent_name
WHERE {
  ?child a foaf:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ?parent_name .
  ?child rdfs:label ?child_name
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
353,17,train,"Who is the child of the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?royalty_spouse_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasSpouse ?spouse ;
            dbpedia:parent ?child .
  ?spouse a dbpedia:Person ;
           rdfs:label ?royalty_spouse_name .
  ?child rdfs:label ?child_name .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
782,2,train,Give me the associated musical artist of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musical_artist_name WHERE {
  ?artist a dbpedia:MusicArtist ;
            dbpedia:associatedBandMember ?nick_curran .
  ?nick_curran rdfs:label ""Nick Curran""@en.
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
38,13,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name WHERE {
  ?politician a dbpedia:OfficeHolder ; dbpedia:role dbpedia:Commander ; dbpedia:office dbpedia:North Carolina Air National Guard .
  ?politician rdfs:label ?politician_name .
  ?book a dbpedia:WrittenWork ; dbpedia:type dbpedia:Book ; dbpedia:author ?author_name .
  ?author a dbpedia:Person ; dbpedia:nationality dbpedia:United States .
  ?politician rdfs:label ?politician_name .
}
",3,9,4,3,1,3,2,20,0,0,1,0,0.0,0
943,44,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of Dawit I.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?haile_selassie_name ?haile_selassie_birthplace
WHERE {
  ?haile_selassie a dbpedia:Person ;
               dbpedia:birthPlace ?haile_selassie_birthplace .
  ?haile_selassie rdfs:label ?haile_selassie_name
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
468,8,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?father .
  ?father a dbpedia:Person ;
            rdfs:label ""Peter IV of Aragon"" .
  ?child dbpedia:hasRole dbpedia:Royalty
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
347,55,train,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?event_name ?event_description WHERE {
  ?child_event a dbpedia:Event ; 
    dbpedia:participatedIn ?regiment ; 
    dbpedia:participant ?2nd_Dragoon_Regiment .
  ?2nd_Dragoon_Regiment a dbpedia:MilitaryUnit ; 
    rdfs:label '2nd Dragoon Regiment' .
}
",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
595,1,train,Give me the author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_name
WHERE {
  ?book a dbpedia:Book ;
         dbpedia:author ?author_name .
  ?book rdfs:label ""Back to Work""
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,25,train,Give me the birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_name ?author_birthplace ?politician_name ?politician_birthplace
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?politician a dbpedia:Person ;
               dbpedia:birthPlace ?politician_birthplace .
  ?author rdfs:label ""Cece Bell""@en .
  ?politician rdfs:label ""Glenn Youngkin""@en
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
687,22,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?team_name
WHERE {
  ?player a dbpedia:SoccerPlayer ;
            dbpedia:birthDate ""1979-11-03"" .
  ?player rdfs:label ?player_name .
  ?player dbpedia:joinedTeam ?team .
  ?team a dbpedia:FootballClub .
  ?manager a dbpedia:SoccerManager ;
            dbpedia:birthDate ""1979-11-03"" .
  ?manager rdfs:label ?manager_name .
  ?player dbpedia:managedTeam ?manager .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
384,6,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?party
WHERE {
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:politicalParty ?party .
  ?politician rdfs:label ?politician_name .
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
531,4,train,Give me the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?residence WHERE {
  ?minister a dbpedia:Politician ;
             dbpedia:office ""Minister of the Interior (Spain)"" ;
             dbpedia:term_start ""2011-01-10"" ;
             dbpedia:term_end ""2018-12-31"" .
  ?minister rdfs:label ?minister_name .
  ?minister dbpedia:birthPlace ?birthplace .
  ?residence a dbpedia:Residence ;
            dbpedia:address ?address .
  ?minister rdf:type dbo:SpanishPolitician ;
             dbo:Name ""Alberto Ruiz-Gallardón"" .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,25,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX psoe: <http://purl.org/psoe/>

SELECT ?politician_name ?country_name ?party_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:nationality ?country_name .
  ?politician rdfs:label ?politician_name .
  ?party a psoe:PoliticalParty ;
            dbpedia:name ?party_name .
  ?politician psoe:memberOf ?party .
  ?country_name rdfs:label ""Spain"" .
}
```",3,4,4,2,2,3,3,71,0,0,23,0,0.0,0
609,21,train,Give me the birth place of Cece Bell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace_name ?awardee_name
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?author rdfs:label ""Cece Bell""@en .
  ?gilligan a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?gilligan rdfs:label ""Vince Gilligan""@en .
  ?awardee a dbpedia:Award_Award ;
           dbpedia:recipient ?awardee_name .
  ?awardee rdfs:label ?awardee_name
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,43,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name ?member_name ?birth_date
WHERE {
  ?band dbpedia:AMusician ;
         dbpedia:bandName ""The Fabulous Thunderbirds"" .
  ?band member [ a foaf:Person; foaf:name ?member_name; dbpedia:birthday ?birth_date ] .
  ?member_name = ""Nick Curran"" .
  ?birth_date datetype ""1945-03-30""
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
557,36,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX moviename: <http://dbpedia.org/ontology/movienames#>
PREFIX person: <http://dbpedia.org/ontology/person>

SELECT ?producer_name
WHERE {
  ?actor a person:Person ;
           dbpedia:birthDate ""April 7, 1915"" ; # Assuming Billie Holiday's birth date
           rdfs:label ""Billie Holiday""@en .
  ?movie a moviename:Film ;
           dbpedia:productionCompany ?producer .
  ?actor moviename:starIn ?movie .
  ?producer a person:Person .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,16,train,"Give me the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name ?father_title WHERE {
  ?child a dbpedia:Person ;
            dbpedia:name ""Saw Shwe Khet""@en ;
            dbpedia:birthDate ""1936-10-20"" .
  ?child dbpedia:parent ?father .
  ?father a dbpedia:Person ;
          dbpedia:title ?father_title .
  FILTER (lang(?child.name) = ""en"")  # Ensure the name is in English
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
816,47,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?movie dbpedia:movieTitle ""That Championship Season"";
  ?actor dbpedia:actInRole ?actor_role;
  ?actor_role rdfs:label ?actor_name;
  ?actor a dbpedia:Person ;
         dbpedia:hasParent ?parent
  FILTER (?parent = <Eugène Cattin>)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
68,13,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?father_name
WHERE {
  ?dorothea a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
             dbpedia:hasParent ?greatGrandparent .
  ?greatGrandparent a dbpedia:Person ;
               rdfs:label ""Christian III of Denmark""@en
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
782,11,train,Give me the reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members_names
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:name ""The Fabulous Thunderbirds"" .
  ?band_members a dbpedia:Musician ;
               dbpedia:name ?band_members_name .
  ?band_members rdfs:label ?band_members_names
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
668,55,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?artist_birthplace
WHERE {
  ?musician1 a dbpedia:Musician ; dbpedia:birthPlace ?musician1_birthplace .
  ?musician1 rdfs:label 'Rod Argent' .
  ?musician2 a dbpedia:Musician ; dbpedia:birthPlace ?musician2_birthplace .
  ?musician2 rdfs:label 'Joey B (Joseph Frederick Butler)' .
  ?artist a dbpedia:Artist ; dbpedia:associatedBandMember ?musician1 .
  ?artist a dbpedia:Artist ; dbpedia:associatedBandMember ?musician2 .
}
",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
816,38,train,Give me the parent of the child of Allan Arbus and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?photographer_name
WHERE {
  ?actor1 a dbpedia:Person ;
            dbpedia:hasParent ?parent_name .
  ?actor2 a dbpedia:Person, foaf:ChildOf ?actor1 ;
             rdfs:label ""Peter Arbus""@en .
  ?photographer a dbpedia:Photographer ;
               foaf:knows ?actor2 .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
246,14,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:birthDate ""1983-08-28"" ;
            rdfs:label ""Muna bint Abdullah"" .
  ?child dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:birthPlace ""Jordan"" ;
          rdfs:label ?parent_name .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
295,3,train,"Give me the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work_name
WHERE {
  ?work a dbpedia:MusicAlbum ;
         dbpedia:artist ?artist_name .
  ?artist_name rdfs:label ""Apache Indian"" .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,50,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX mousetrap: <http://purl.org/c4dm/ns#>

SELECT ?producer_name
WHERE {
  ?actor dbpedia:role [ dbpedia:film ""Johnny Doughboy"" ] .
  ?movie a mousetrap:Film ;
           dbpedia:productionCompany ?producer_company .
  ?producer_company rdfs:label ?producer_name .
  FILTER (regex(str(?producer_name), 'Janet Gaynor'))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
103,56,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }",,6,8,7,3,3,3,3,71,0,0,9,0,0.0,0
414,4,train,Give me the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?nobel_prize_name ?nobel_prize_description
WHERE {
  ?nobel_prize a dbpedia:Nobel_Prize ;
               dbpedia:name ?nobel_prize_name ;
               dbpedia:description ?nobel_prize_description .
  FILTER (?nobel_prize_name = ""Physics"")
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,58,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Juan Carlos Molina (footballer)
SELECT ?juan_carlos_molina WHERE {
  ?juan_carlos_molina a dbpedia:FootballPlayer ;
                    rdfs:label ""Juan Carlos Molina""@es
}

# Step 2: Find an actor who is also a soccer player
SELECT ?actor_name ?actor WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ?actor_birthplace ;
         rdfs:label ?actor_name .
  OPTIONAL { ?actor dbpedia:isAlsoKnownAs ""Soccer Player""@en }
}

# Step 3: Manchester City team
SELECT ?manchester_city_team WHERE {
  ?team a dbpedia:FootballTeam ;
          rdfs:label ""Manchester City""@en
}

# Step 4: Find Marcelo Sarmiento's team
SELECT ?marcelo_sarmiento_team WHERE {
  ?marcelo_sarmiento a dbpedia:Person ;
                  dbpedia:birthPlace ?marcelo_birthplace ;
                  rdfs:label ""Marcelo Sarmiento""@en;
                  foaf:homepage <http://www.marcelosarmiento.com/>  # Assuming his homepage URL
}

# Step 5: Find soccer player and manager born on Marcelo Sarmiento's birthday
SELECT ?soccer_player_name ?",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
203,44,train,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_force ?calder_event_description ?bayne_war_description
WHERE {
  ?commander a dbpedia:Person ; dbpedia:role dbpedia:CommanderOf ; dbpedia:participatedInEvent dbpedia:EventOfFrenchCampaignInEgyptAndSyria .
  ?calder a dbpedia:Person ; dbpedia:name 'Robert Calder' ; dbpedia:role dbpedia:MilitaryOfficer ; dbpedia:participatedInMilitaryConflict ?calder_event_description .
  ?bayne a dbpedia:Person ; dbpedia:name 'William Bayne' ; dbpedia:role dbpedia:MilitaryOfficer ; dbpedia:participatedInMilitaryConflict ?bayne_war_description .
  ?commander rdfs:label ?commander_name .
  ?calder rdfs:label ?calder_event_description .
  ?bayne rdfs:label ?bayne_war_description
}
",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
859,6,train,Give me the associated musical artist of Phantomsmasher and band member of Human Remains (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_membership
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:associatedBand ?band .
  ?band rdfs:label ""Human Remains""@en .
  ?artist rdfs:label ?artist_name .
}
```",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
468,0,train,Give me the reference to Peter IV.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?king_name ?title WHERE {
  ?king a dbpedia:Person ;
         dbpedia:title ?title .
  ?title rdfs:label ""King of Aragon and Count of Barcelona"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
159,27,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },,3,5,4,3,1,3,3,71,0,0,40,0,0.0,0
628,12,train,Give me the native of Florida and person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nationality ""United States of America"" ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
}
```

This SPARQL query looks for a person with the nationality ""United States of America"" (indicating they are from the USA) and their birth place, filtering for the specific name Ackquille Jean Pollard.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,51,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_name ?royalty_relationship
WHERE {
  ?maria_anna a dbpedia:Person ;
               dbpedia:birthDate ""1574-07-17"" ;
               dbpedia:parent ?father_of_child .
  ?father_of_child a dbpedia:Person ;
                  dbpedia:birthPlace ""Bavaria, Germany"" ;
                  dbpedia:role dbpedia:Emperor .
  ?maria_anna rdfs:child ?child_of_maria_anna .
  ?child_of_maria_anna a dbpedia:Person ;
                    dbpedia:parent ?ferdinand_iii .
  ?ferdinand_iii a dbpedia:Person ;
                  dbpedia:birthPlace ""Austria"" ;
                  dbpedia:role dbpedia:Holy_Roman_Emperor .
  ?maria_anna rdfs:label ""Maria Anna of Bavaria"" .
  ?child_of_maria_anna rdfs:label ?royalty_name .
  ?ferdinand_iii rdfs:label ""Ferdinand III, Holy Roman Emperor"" .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,11,train,Give me the professional in the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_profession
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:occupation ?actor_profession .
  ?actor rdfs:label ?actor_name
}
```",2,2,3,2,1,3,3,71,28,548511,45103,5.104468415190169e-05,0.0006204161219560834,9.43284989977597e-05
119,37,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?city_name ?country_name 
WHERE { 
  ?city a dbpedia:City ; dbpedia:name ?city_name . 
  ?country a dbpedia:Country ; dbpedia:name ?country_name . 
  ?city dbpedia:locatedIn ?country . 
  ?country dbpedia:hasCitizen [ dbpedia:nationality dbpedia:Spanish ] . 
}",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
361,14,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?actor_profession 
WHERE { 
  ?actor a dbpedia:Person ; 
    dbpedia:profession ?actor_profession . 
  ?actor rdfs:label ?actor_name . 
}",3,3,4,2,2,2,3,28,0,14887,4210,0.0,0.0,0
297,6,train,Give me the institution in the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?secretary_of_state_institution_name
WHERE {
  ?secretary_of_state a dbpedia:Office ;
                    dbpedia:officeHolder ?brian_kemp .
  ?brian_kemp rdfs:label ""Brian Kemp"" .
  ?secretary_of_state_institution a dbo:GovernmentalOrganization .
  ?secretary_of_state_institution rdfs:label ?secretary_of_state_institution_name
}
```",2,2,3,2,1,2,2,9,0,0,941,0,0.0,0
246,7,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name WHERE {
  ?child a dbpedia:Person ;
            dbpedia:birthDate ""1952-08-02"" ;
            rdfs:label ""Faisal bin Hussein"" .
  ?child dbpedia:father ?parent_name .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
737,18,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name .
  ?archduchess a dbpedia:Person ;
              dbpedia:spouse ?archduke .
  ?archduke a dbpedia:Person ;
             dbpedia:name ""Archduke Rudolf of Austria"" .
  ?archduke foaf:children ?child .
  ?duke a dbpedia:Person ;
          dbpedia:name ""Albrecht, Duke of Württemberg"" .
  ?child rdf:type foaf:ChildOf ?duke .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
143,13,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Actor ;
          rdfs:label ?actor_name .
  ?actor dbpedia:appearedInSeries [ 
    a dbpedia:TelevisionSeries ;
    rdfs:label ""Tinsel"" .
  ] .
}
```",3,4,4,3,1,3,2,20,0,0,28,0,0.0,0
905,12,train,Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_of_stephen_v ?parent_of_charles_martel
WHERE {
  ?stephen_v a dbpedia:Person ;
               dbpedia:birthDate ""1225"" ;
               dbpedia:deathDate ""1272"" ;
               dbpedia:monarchOf dbpedia:Hungary ;
               dbpedia:son ?child_of_stephen_v .
  ?charles_martel a dbpedia:Person ;
                 dbpedia:birthDate ""1244"" ;
                 dbpedia:parent ?parent_of_charles_martel .
  ?child_of_stephen_v rdfs:label ?child_of_stephen_v .
  ?parent_of_charles_martel rdfs:label ?parent_of_charles_martel
}
```

This query looks for individuals related to Stephen V and Charles Martel through familial connections (son or parent). It filters the results based on their birth and death dates to ensure we are looking at the correct historical figures.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,52,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name WHERE {
  ?actor a dbpedia:Actor ;
          rdfs:label ?actor_name .
  ?actor dbpedia:role [ a dbpedia:FilmRole; rdfs:label ""Soccer Player in All or Nothing: Manchester City"" ] .
}

PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?athlete_name WHERE {
  ?athlete a dbpedia:Person ;
            foaf:birthdate ?birthdate .
  ?birthdate rdf:type rdf:Literal .
  FILTER (STRFTIME(""'%Y-%m-%d'"", ?birthdate) = STRFTIME(""'%Y-%m-%d'"", ""1971-03-31""))  # Marty Pollio's birthdate
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
628,10,train,Give me the native of Florida and band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?birthplace
WHERE {
  ?band a dbpedia:MusicGroup ;
         dbpedia:bandMember ?band_member .
  ?band_member a dbpedia:Person ;
               dbpedia:birthPlace ?birthplace .
  ?band_member rdfs:label ?band_member_name .
  FILTER (str(?birthplace) = ""Florida"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,23,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_relationship
WHERE {
  ?child1 a dbpedia:Person ;
           dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
              dbpedia:child ?child1 .
  ?child1 a dbpedia:Royalty .
  ?child2 a dbpedia:Person ;
            dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
             dbpedia:child ?child2 .
  ?child2 a dbpedia:Royalty
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
39,49,train,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_name WHERE {
  ?sam_concepcion a dbpedia:MusicalArtist ; dbpedia:associatedBand ?band .
  ?bob_thompson rdfs:label 'Bob Thompson' .
  ?band rdfs:label ?band_name .
  ?sam_concepcion dbpedia:performerOf ?song .
  ?song dbpedia:lyrics 'I was born with a silver spoon in my hand'.
}",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
103,48,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?birthplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:realName ""Richard Grant Esterhuysen"" .
  ?actor foaf:givenName ?actor_name .
  ?actor dbpedia:role ""The Shadow"" .
  ?actor dbpedia:appearanceIn [ dbpedia:hasMedium ""television""] .
}
```",5,6,6,3,2,3,3,71,0,0,13,0,0.0,0
78,1,train,Give me the associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:associatedBand ?band_name .
  ?artist rdfs:label ""Billy Lyall""@en .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
871,32,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?grandparent_name ?awardee_title
WHERE {
  ?son a dbpedia:Person ;
   dbpedia:name ""Frederick Stanley, 16th Earl of Derby""@en;
   dbpedia:father ?father.
  
  ?wife a dbpedia:Person ;
   dbpedia:name ""Unknown""@en;  # Placeholder for the wife's name
   dbpedia:spouse ?son .
  
  ?awardee a dbpedia:Person ;
   dbpedia:name ""Elizabeth Bowes-Lyon""@en;
   dbpedia:recognition dbpedia:Commander_of_the_Royal_Victorian_Order .
  
  ?father rdfs:parent ?grandparent .
  ?grandparent a dbpedia:Person .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
375,9,train,"Give me the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?movie_title ?tv_show_title
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathDate ""2016-04-21"" .
  ?person rdfs:label ?person_name .
  OPTIONAL { 
    ?person dbpedia:hasRole dbpedia:Actor ; 
    ?person dbpedia:role dbpedia:CharacterInTVShow ?tv_show_title .
  }
  OPTIONAL { 
    ?person dbpedia:hasRole dbpedia:Artist ; 
    ?person dbpedia:role dbpedia:Musician ?movie_title .
  }
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
59,6,train,"Give me the manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?club_name
WHERE {
  ?player dbpedia:hasMemberOf dbpedia:SoccerTeam ;
             dbpedia:name ""Jamie McCunnie"" .
  ?player dbpedia:currentClub ?club .
  ?club a dbpedia:SoccerClub .
  ?manager dbpedia:manages ?club .
  ?manager rdfs:label ?manager_name .
  ?club rdfs:label ?club_name
}
```",2,4,3,2,1,2,2,9,0,0,7,0,0.0,0
513,13,train,Give me the entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?award
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:fullName ""George Hamilton Cameron"" .
  ?person dbpedia:rank dbpedia:GeneralOfTheArmy .
  ?person dcterms:wasAwarded ?award
}
```",3,3,4,3,1,3,2,20,0,0,87241,0,0.0,0
687,5,train,"Give me the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?film_name WHERE {
  ?film a dbpedia:Film ;
         dbpedia:director ?director .
  ?director rdfs:label ""Manuel Huerga"" .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
119,34,train,"Give me the tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alcalde_name ?office
WHERE {
  ?alcalde a dbpedia:OfficeHolder ;
            dbpedia:office ?office .
  ?alcalde rdfs:label ?alcalde_name .
  FILTER (lang(?alcalde_name) = ""es"")  # Ensure the name is in Spanish
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
633,2,train,"Give me the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_name ?royalty_title
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Antoine, Duke of Lorraine"" ;
          dbpedia:birthDate ""c. 1604"" ;
          foaf:familyMember ?child .
  ?child a dbpedia:Royalty ;
         rdfs:label ?royalty_name ;
         dbpedia:monarchy ?royalty_title .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
628,11,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_member_name WHERE {
  ?artist a dbpedia:Musician ; dbpedia:birthDate 2004-04-02T00:00:00Z.
  ?artist rdfs:label ""Bobby Shmurda"" .
  ?bandMember a dbpedia:BandMember ; dbpedia:associatedMusicalArtist ?artist .
}",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
609,43,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace ?author_name ?author_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?vince_gilligan a dbpedia:Person ;
                 dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
```

This query uses the prefixes for DBpedia's ontology and selects the required properties (`name`, `birthPlace`) for each individual matching the given criteria.",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
414,8,train,Give me the award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?physicist_name WHERE { ?physicist a dbpedia:Person ; dbpedia:NobelPrizeInPhysics ?nobel_prize },2,2,3,2,1,3,2,20,0,0,87,0,0.0,0
737,34,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_predecessor_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ;
            rdfs:label ""Archduchess Margarete Sophie of Austria""@de .
  ?child rdfs:label ?child_name .
  ?child_predecessor a dbpedia:Person ;
                    dbpedia:parent ?child .
  ?child_predecessor rdfs:label ?child_predecessor_name
}
```

### Completed",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
249,7,train,"Give me the native of India and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace_name
WHERE {
  ?person a dbo:Person ;
            dbpedia:birthPlace ?birthplace_name .
  ?person rdfs:label ?person_name .
  FILTER (lang(?person_name) = ""en"")  # Only consider English names
}
```",3,4,4,2,2,2,2,9,0,0,21,0,0.0,0
871,8,train,"Who is the child, that is a politician, of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?politician_name ?politician_birthplace
WHERE {
  ?politician a dbpedia:Politician ;
             dbpedia:birthPlace ?politician_birthplace .
  ?politician rdfs:label ?politician_name .
  FILTER (regex(str(?politician_name), ""Frederick Stanley, 16th Earl of Derby""))
}
```",1,2,2,1,1,3,3,71,0,2,1,0.0,0.0,0
687,32,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?athlete_name ?birthdate
WHERE {
  ?athlete a dbpedia:Athlete ;
           dbpedia:birthdate ?birthdate .
  ?birthdate format ""1955-02-22"" .
}

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?role
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name ;
           dbo:hasRole [ rdf:type dbo:Actor ] .
  ?actor dbo:hasRole [ rdf:type dbo:SoccerPlayer ] .
  ""All or Nothing: Manchester City"" as ?movie_title .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
78,3,train,"Give me the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name ?artist_birthplace 
WHERE { 
  ?artist a dbpedia:Artist ; 
    dbpedia:birthPlace ?artist_birthplace ; 
    rdfs:label ?artist_name 
} 
",1,2,2,1,1,2,3,28,0,87073,1,0.0,0.0,0
347,24,train,"Give me the child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Ferdinand II, Holy Roman Emperor"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:hasParent ?parent
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
585,1,train,Give me the child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name ?child_birthplace
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:hasChild ?child .
  ?actor rdfs:label ""Linda Miller""@en .
  ?child rdfs:label ?child_name .
  ?child dbpedia:birthPlace ?child_birthplace
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,58,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?singer_name ?shadow_ego ?band_name
WHERE {
  ?bob_thompson a dbpedia:Musician ;
                  dbpedia:birthName ""Bob Thompson"" .
  ?bob_thompson rdfs:label ?bob_thompson_name .
  ?shadow_ego a dbpedia:Person ;
               dbpedia:alterEgo ""The Shadow"" .
  ?band_name a dbpedia:Band ;
                dbpedia:members ?bob_thompson .
  ?bob_thompson_name rdfs:label ?singer_name .
}
```",6,7,7,3,3,3,3,71,0,0,3,0,0.0,0
119,52,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?president_name ?presidency_name ?residence 
WHERE { 
  ?president a dbpedia:Politician ; 
  dbpedia:officeHolderOffice ?presidency_name . 
  ?presidency a dbpedia:Event ; 
  dbpedia:location ?residence . 
  ?president rdfs:label ?president_name . 
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,39,train,"Give me the spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Saw Shwe Khet's spouse
SELECT ?spouse_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Saw Shwe Khet"" .
  ?person dbpedia:spouse ?spouse_name .
}

# Step 2: Identify the child of Saw Shwe Khet's spouse
SELECT ?child_name WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?spouse_name .
  ?child dbpedia:name ?child_name .
}

# Step 3: Find the predecessor of the identified child who is a royalty
SELECT ?royalty_predecessor_name WHERE {
  ?royalty a dbpedia:Royalty ;
             dbpedia:predecessor ?child_name .
  ?child rdfs:label ?child_name .
}
```

This query structure and the corresponding Sparql queries are designed to extract the necessary information from DBpedia based on the given relationships. The final answer will be obtained by executing these queries against the DBpedia dataset.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
585,3,train,"Give me the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award_name ?awarding_organization
WHERE {
  ?award a dbpedia:Prize ;
           dbpedia:awardedBy ?awarding_organization .
  ?awarding_organization rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?award rdfs:label ?award_name
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
119,43,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:name ""Alberto Núñez Feijóo"" ;
            dbpedia:birthPlace spain ;
            dbpedia:office ""Teniente de Santiago de Compostela"" .
  ?country a dbpedia:Country ;
           dbpedia:name ?country_name .
  ?person dcterms:residence ?country
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,45,train,"Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?team_name
WHERE {
  ?player a dbpedia:FootballPlayer ;
            dbpedia:birthDate ""1970-04-05"" .
  ?manager a dbpedia:SoccerManager ;
            dbpedia:birthDate ""1970-04-05"" .
  ?player rdfs:label ?player_name .
  ?manager rdfs:label ?manager_name .
  ?team a dbpedia:SoccerTeam ;
           dbpedia:hasPlayer ?player ;
           dbpedia:hasManager ?manager .
}
```

### Completed",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
293,39,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?parent_birthname
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:birthDate ?actor_birthdate .
  ?actor rdfs:label ""Roger Pryor"" .
  ?spouse a dbpedia:Person ;
           dbpedia:birthDate ?spouse_birthdate .
  ?actor dbpedia:marriedTo ?spouse .
  ?parent a dbpedia:Person ;
           dbpedia:birthDate ?parent_birthdate .
  ?parent rdfs:label ?parent_name .
  ?child a dbpedia:Person ;
            dbpedia:birthDate ?child_birthdate .
  ?child rdfs:label ""Tisha Sterling"" .
  ?parent dbpedia:hasChild ?child
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
687,13,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?sport
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name ;
           dbpedia:sport ?sport .
  ?actor dbpedia:role ""Actor"" in <http://purl.org/dc/terms/> .
  ?actor dbpedia:inSeries ""All or Nothing: Manchester City""
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
68,15,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }",,3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
80,22,train,Give me the actor of Shelby Oaks and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Actor ;
          dbpedia:role dbpedia:Shiwan_Khan_in_The_Shadow .
  ?actor rdfs:label ?actor_name .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,49,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }",,5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
347,30,train,"Give me the child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_parents
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?father .
  ?father a dbpedia:Person ;
           rdfs:label ?father_name .
  ?child rdfs:label ?child_name .
  ?child Parents ?child_parents .
  ?father Parents [ ?parent1 a dbpedia:Person ; rdfs:label ?grandparent_name ]
}
```

This query looks for a person (`?child`) who has two parents (`?father`), where one parent is labeled with the name `Maximilian II` and the other with `Ferdinand II`. The child's parents are connected through a ""Parents"" relationship, and their grandparents are also identified.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
628,54,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX smurda: <http://www.smurdatlab.com/ontologies/>

SELECT ?musical_artist_name ?florida_birthplace
WHERE {
  ?musical_artist a dbpedia:Musician ;
                  dbpedia:birthPlace dbpedia:FL .
  ?musical_artist smurda:bandMemberOf ?bobysmurdaband .
  ?bobysmurdaband rdfs:label ""Bobby Shmurda"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,39,train,Give me the actor of ATL (film) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?alter_ego_profession
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:roleInFilm ?film .
  ?film rdfs:label ""ATL"" .
  ?series a dbpedia:TelevisionSeries ;
            dbpedia:mainCharacter ?alter_ego .
  ?alter_ego a dbpedia:Person ;
             dbpedia:occupation ?alter_ego_profession .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
737,39,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_title WHERE {
  ?parent a dbpedia:Person ; dbpedia:hasChild ?child .
  ?child a dbpedia:Royalty ; dbpedia:hasParent ?parent .
  ?child rdfs:label ?royalty_name .
  ?parent rdfs:label ?parent_name .
  ?child rdfs:label ?royalty_title .
  ?parent_name = 'Archduke Rudolf of Austria' 
  AND ?child_name = 'Albrecht, Duke of Württemberg' 
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
531,5,train,"Give me the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?conflict_name ?societal_event_description
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthDate ""1936-10-12"" ;
            rdfs:label ""Manuel Pinto da Costa""@pt;
            dbo:militaryRole ""Military of Angola"";
            dbo:conflict ""Angolan Civil War"" .
  ?conflict a dbpedia:Conflict ;
           dbpedia:participatedIn ?person .
  ?societal_event a dbpedia:SocietalEvent ;
             dbpedia:impact ""Significant impact on the political landscape of Angola""@en .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
595,22,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?commander_navy_rank ?disease_event_description ?spouse_name
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:navyRank dbpedia:Navy_Rank ;
            rdfs:label ?commander_name .
  ?disease_event a dbpedia:Event ;
                 rdfs:label ?disease_event_description .
  ?societal_event a dbpedia:Societal_Event ;
                  rdfs:label ?societal_event_description .
  ?spouse a dbpedia:Person ;
           rdfs:label ?spouse_name .
  ?commander ns:marriedTo ?spouse .
  ?disease_event Description matches ""Disease"" .
  ?societal_event Description matches ""Societal Event""
}
```

This query attempts to find:
- A person (`?commander`) with a Navy rank (`dbpedia:navyRank`), labeled as `?commander_name`.
- An event (`?disease_event`) labeled as a ""Disease"" (interpreted metaphorically).
- Another event (`?societal_event`) labeled as a ""Societal Event"" (again, interpreted metaphorically).
- A spouse (`?spouse`) labeled as `?spouse_name`, married to the commander.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,47,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?greatGrandchildName ?greatGrandchildBirthplace
WHERE {
  ?grandchild a dbpedia:Person ; dbpedia:parent ?childOfAlexander .
  ?childOfAlexander a dbpedia:Person ; dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ; dbpedia:parent ?alexander .
  ?greatGrandchild a dbpedia:Person ; dbpedia:parent ?grandchild .
  ?greatGrandchild rdfs:label ?greatGrandchildName .
  ?greatGrandchild dbpedia:birthPlace ?greatGrandchildBirthplace
}
",5,5,6,3,2,3,3,71,0,2079,1,0.0,0.0,0
816,26,train,Give me the parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?player a dbpedia:Person ;
           dbpedia:birthPlace ?player_birthplace .
  ?player rdfs:label ""Eugène Cattin""@fr .
  ?parent a foaf:ParentOf ?player .
  ?parent a dbpedia:Person ;
         dbpedia:birthPlace ?parent_birthplace
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
143,3,train,"Give me the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?movie_name WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthDate ""1968-10-23"" ;
         dbpedia:fullName ""Afeez Oyetoro"" .
  ?actor dbpedia:roleInFilm ?movie .
  ?movie rdfs:label ?movie_name
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
905,48,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_spouse_name ?royalty_parent_name
WHERE {
  ?royalty_parent a dbpedia:Royalty ;
  dbpedia:parentOf ?philip_despot_of_romania .
  ?philip_despot_of_romania a dbpedia:Person ;
  dbpedia:spouse ?royalty_spouse .
  ?royalty_parent rdfs:label ?royalty_parent_name .
}
",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,24,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?military_commander_name ?central_african_republic_office ?miguel_maura_office 
WHERE { 
  ?central_african_republic_commander a dbpedia:MilitaryOfficer ; 
    dbpedia:conflict dbpedia:Central_African_Republic_Civil_War . 
  ?central_african_republic_commander rdfs:label ?military_commander_name . 
  ?miguel_maura rdfs:label ?miguel_maura_office . 
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,23,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },,3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
905,52,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:childOf <http://dbpedia.org/ontology/parent> ?stephen_v ;
            dbpedia:spouseOf <http://dbpedia.org/ontology/spouse> ?philip .
  ?stephen_v a dbpedia:Person;
               rdfs:label ""Stephen V of Hungary"" .
  ?philip a dbpedia:Person;
           rdfs:label ""Philip, Despot of Romania"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
68,23,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?grandfather_name ?grandfather_title
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch ;
           rdfs:label ""Philip I of Castile"" .
  ?child rdfs:label ?child_name .
  ?child dbpedia:hasDescendant ?descendant .
  ?descendant a dbpedia:Person ;
             rdfs:label ""Dorothea of Denmark, Electress Palatine"" .
  ?descendant dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Monarch ;
              rdfs:label ?grandfather_name .
}
```

This query looks for the person who is the parent of Dorothea of Denmark and then traces back to find their parent (grandfather), ensuring that this person is also a monarch.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
263,3,train,"Give me the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthplace_region ?birthplace_country
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?birthplace_region .
  ?birthplace rdf:type dbpedia:AdministrativeTerritory .
  ?person rdfs:label ""William Gayner"" .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
103,39,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ""New York City, United States"" .
  ?actor rdfs:label ?actor_name .
  FILTER (lang(?actor_name) = ""en"")  # Ensure the name is in English
}
```",4,5,5,3,2,3,3,71,0,0,4210,0,0.0,0
225,12,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award dbpedia:Anita_Borg_Institute_Women_of_Vision_Award .
  ?awardee rdfs:label ?awardee_name .
  ?awardee dbpedia:nationality ""Japan"" .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
295,16,train,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of Victor Saville.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?writer_name WHERE {
  ?musical_work a dbpedia:MusicAlbum ;
                 dbpedia:artist ?apache_indian_artist .
  ?apache_indian_artist rdfs:label ""Apache Indian"" .
  ?apache_indian_artist dbpedia:birthPlace ?victor_saville_birthplace .
  ?victor_saville_birthplace rdfs:label ""Victor Saville's birth place"" .
  ?musical_work rdfs:label ""Apache Indian"" .
  ?writer a dbpedia:Person ;
           dbpedia:authorOf ?musical_work .
  ?writer rdfs:label ?writer_name
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
263,10,train,Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?country_name WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace geo:Point ?birthplace .
  ?birthplace rdfs:label ""London"" . 
  ?person rdfs:label ""Hon. Mary Frances Bowes-Lyon"" .
  ?country a dbpedia:Country ;
             dbpedia:capital ?capital .
  ?capital rdfs:label ?country_name
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
203,18,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?battle1_force ?battle2_force ?battle3_force 
WHERE { 
  ?battle1 a dbpedia:Battle ; dbpedia:commander ?commander_name . 
  ?battle1 dbpedia:location Egypt_and_Syria . 
  ?battle2 a dbpedia:Battle ; dbpedia:location Fort_Royal . 
  ?battle2 dbpedia:combatant dbpedia:British_Force . 
  ?battle3 a dbpedia:Battle ; dbpedia:location Cape_Finisterre . 
  ?battle3 dbpedia:combatant dbpedia:British_Fleet . 
  ?commander rdfs:label ?commander_name . 
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,39,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },,4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,2,train,Give me the commander in Great Turkish War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?ottoman_commander_name ?ottoman_commander_birthplace
WHERE {
  ?ottoman a dbpedia:Person ;
            dbpedia:conflict dbpedia:Great_Turkish_War ;
            dbpedia:role ""Commander of Ottoman Forces"" .
  ?ottoman rdfs:label ?ottoman_commander_name .
  ?ottoman dbpedia:birthPlace ?ottoman_commander_birthplace
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
103,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?actor_birthplace
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthPlace ?actor_birthplace .
  ?actor rdfs:label ""The Shadow""@en .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
737,56,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_title
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:name ""Albrecht, Duke of Württemberg"" ;
               dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
         dbpedia:hasParent ?parent ;
         dbpedia:hasAncestor ?archduchess .
  ?child rdfs:label ?child_name .
  ?child dbpedia:title ?child_title
  AND ?archduchess rdfs:label ""Archduchess Margarete Sophie of Austria""
}
```

This query starts by identifying the parents and grandparents, then traces children and their noble titles. It also filters for those children who are ancestors of Archduchess Margarete Sophie.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,17,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?soccer_club_name ?season_year ?event_id
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthDate ""1968-08-26""^^xsd:date ;
            dbpedia:jobTitle ""Sports Manager"" .
  
  ?season a dbo:SportsSeason ;
           dbo:sportsSeasonYear ?season_year ;
           event:type ""Football"" .
  
  ?soccer_club a dbo:SportsClub ;
             dbpedia:name ?soccer_club_name ;
             participatesIn ?season .
  
  FILTER (?season_year = 1968)
}",2,6,3,2,1,3,3,71,0,0,5,0,0.0,0
412,18,train,Give me the war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v0 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?war_name ?athens_entity
WHERE {
  ?recipient a dbpedia:Person ;
             award:awardedPrize NobelPeacePrize1930 .
  ?recipient rdfs:label ?recipient_name .
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?war_name .
  ?war geography:locatedIn Greece .
  ?athens_entity a dbpedia:Building , dbpedia:Artwork, dbpedia:NaturalPlace ;
                   geonameID ?geoname_id ;
                   rdfs:label ?athens_entity_name
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
353,6,train,"Who is the child, that is a royalty, of William I of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_name ?child_title WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?william .
  ?child rdfs:label ?child_name .
  ?child dbpedia:title ?child_title
}
```",1,2,2,1,1,3,3,71,0,13863,1,0.0,0.0,0
557,22,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?film_title ?film_year WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:birthDate ""1905-10-14"" ;
         dbpedia:awards dbpedia:AcademyAward_for_Best_Actress .
  ?actor dbpedia:roleInFilm ?role .
  ?role rdf:type dbpedia:Film ;
           dbpedia:title ?film_title ;
           dbpedia:yearProduced ?film_year .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,36,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in Thirty Years' War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_title 
WHERE { 
  ?person a dbpedia:Person ; 
  dbpedia:parent ?grandparent ; 
  dbpedia:child ?royalty_child . 
  ?royalty_child a dbpedia:Royalty . 
  ?grandparent rdfs:label ?grandparent_name . 
  ?person rdfs:label ?royalty_name . 
  ?grandparent rdfs:label ?grandparent_title . 
  ?royalty_child rdfs:label ?royalty_title 
}",4,5,5,3,2,3,3,71,0,9892,1,0.0,0.0,0
263,5,train,"Give me the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?earl a dbpedia:Person ;
         dbpedia:title ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne"" .
  ?child a dbpedia:Person ;
           dbpedia:parent ?earl ;
           dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
769,7,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?birth_date
WHERE {
  ?player a dbpedia:Person ;
           dbpedia:birthDate ""1981-12-01"" ;
           rdfs:label ?player_name .
  ?player dbpedia:role dbpedia:SoccerPlayer .
  ?player dbpedia:role dbpedia:Athlete .
  ?player dbpedia:role dbpedia:SportsManager .
  ?player dbpedia:role dbpedia:SoccerManager
}
```",2,6,3,2,1,3,2,20,0,0,6,0,0.0,0
203,27,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?military_force_name ?awardee_name
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:awardRecipientOf dbpedia:Knight_Commander_of_the_Order_of_the_Bath .
  ?awardee foaf:name ?awardee_name .
  ?military_force a dbpedia:MilitaryUnit ;
                 dbpedia:fullName ?military_force_name .
  ?awardee rdfs:seeAlso [ a dbo:SocietalEvent; rdfs:label ""Knight Commander of the Order of the Bath"" ] .
}
```",3,5,4,3,1,3,3,71,0,0,4831,0,0.0,0
628,27,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology#>

SELECT ?award_name ?place_name
WHERE {
  ?band a dbpedia:MusicBand ;
           dbpedia:origin ?band_origin .
  ?band_origin a dbpprop:City, dbpprop:Town, dbpprop:Village ;
                  rdfs:label ?place_name .
  ?band rdfs:label ""The Band from New York"" . # Placeholder name for the band
  ?award a dbpedia:Award ;
           dbpedia:awardedTo ?band .
  ?award rdfs:label ?award_name .
  ?place_name ns:locatedIn <http://www.geonames.org/>/8599000/ .
}
```

This query looks for:
- A band originating from a city, town, or village in New York state.
- An award given to this band.
- The name of the award and the place where it originates.",3,8,4,3,1,3,3,71,0,0,8569,0,0.0,0
159,40,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?successor_name ?office ?event_description ?conflict 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:role dbpedia:Commander ; dbpedia:conflict dbpedia:Great_Turkish_War . 
  ?commander rdfs:label ?commander_name . 
  ?successor a dbpedia:Politician ; dbpedia:officeHolder ?office . 
  ?event a dbpedia:Event ; dbpedia:description ?event_description . 
  ?conflict a dbpedia:Military_conflict ; dbpedia:description ?conflict_description . 
  ?commander dbpedia:precededBy ?successor . 
  ?successor rdfs:label ?successor_name . 
  ?conflict_description = 'Great Turkish War' 
  AND ?event_description = 'Military conflict'",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,56,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?band_member_name ?band_name ?awardee_name ?award_type ?region_name ?state_name ?settlement_name
WHERE {
  ?band_member a dbpedia:Musician ;
             dbpedia:birthPlace ?region_name .
  ?band a dbpedia:Band ;
          rdfs:label ?band_name .
  ?awardee a dbpedia:Person ;
           dbpedia:award ?award_type .
  ?awardee rdfs:label ?awardee_name .
  ?state a dbpedia:State ;
         dbpedia:country ""United States"" ;
         dbpedia:capital ?state_capital .
  ?settlement a dbpedia:Settlement ;
             dbpedia:locatedIn ?state ;
             dbpedia:name ?settlement_name .
  ?band_member rdf:type ?band_type .
  ?band_type rdfs:label ""Musician"" .
  ?awardee dbpedia:residence ?settlement_name .
  ?region a dbpedia:Region ;
           dbpedia:name ?region_name .
  ?state rdfs:label ?state_name .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
756,38,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?manager_name ?club_season 
WHERE { 
  ?footballer a dbpedia:Person ; dbpedia:name ""Thomas Letsch"" . 
  ?soccer_club a dbpedia:SoccerClub ; dbpedia:season ?club_season . 
  ?manager a dbpedia:Person ; dbpedia:name ?manager_name . 
  ?soccer_club dbpedia:managedBy ?manager . 
  ?footballer dbpedia:nationality dbpedia:Germany . 
  ?heuss a dbpedia:Person ; dbpedia:name ""Theodor Heuss"" . 
  ?heuss dbpedia:nationality dbpedia:Germany . 
}",4,8,5,2,2,3,3,71,0,0,3,0,0.0,0
203,61,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?military_force_bayne ?award_event_description
WHERE {
  ?wiliam_bayne a dbpedia:Person ;
                 dbpedia:conflict ""Napoleonic Wars"" .
  ?military_force_bayne a dbpedia:MilitaryConflict ;
                       dbpedia:participatedIn ?wiliam_bayne .
  ?knight_order a dbpedia:HonoraryOrder ;
                  rdfs:label ""Knight Commander of the Order of the Bath"" .
  ?award_event_description a dbpedia:Event ;
                             dbpedia:type ""societal event"" .
  ?knight_order rdfs:seeAlso ?award_event_description .
}
```",6,10,7,3,2,3,3,71,0,0,24,0,0.0,0
87,20,train,Give me the actor of Always (1989 film) and actor of Paradise (2013 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?film_title ?spouse_name
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:act_in_film ?film .
  ?film rdfs:label ?film_title .
  
  ?awardee a dbpedia:Award_winner ;
            dbpedia:award_received ?award .
  ?award rdfs:label ?award_name .

  ?janusz_kaminski a dbpedia:Person ;
                  foaf:spouse ?spouse .

  ?actor dbo:act_in_film_for ?film .
  ?awardee dbo:winned_Award_for ?award .
  ?janusz_kaminski dbo:has_spouse ?spouse
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
871,4,train,Who is the awardee of Commander of the Royal Victorian Order?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee_name WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:awardedBy dbpedia:Queen_of_the_United_Kingdom ;
           dbpedia:award dbpedia:Commander_of_the_Royal_Victorian_Order
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
871,38,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mother_name ?mother_birthplace
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:birthPlace ?child_birthplace ;
            dbpedia:parent ?mother .
  ?mother a dbpedia:Person ;
           dbpedia:name ?mother_name ;
           dbpedia:birthPlace ?mother_birthplace .
  ?child rdfs:label ""Edward George Geoffrey Smith Stanley""@en .
  ?mother rdfs:label ?mother_name
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,11,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX mov: <http://purl.org/cwm/movies#>

SELECT ?actor_name WHERE {
  ?movie a mov:Movie ;
            dbpedia:mainActor ?actor_name ;
            rdfs:label ""Roman Holiday"" .
  ?movie dbpedia:starring Audrey_Hepburn .
}
```",2,4,3,2,1,2,3,28,0,0,62,0,0.0,0
816,54,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?parent_name ?actor_movie ?eugene_cattin_parent 
WHERE { 
  ?actor a dbpedia:Actor ; dbpedia:film ?actor_movie . 
  ?actor rdfs:label ?actor_name . 
  ?eugene_cattin a dbpedia:Person ; dbpedia:birthDate '1907-01-01' . 
  ?actor dbpedia:parent ?parent . 
  ?parent rdfs:label ?parent_name . 
  ?actor_movie rdfs:label ?actor_movie_name . 
  ?eugene_cattin dbpedia:film ?eugene_cattin_movie . 
  ?actor_movie = ?eugene_cattin_movie 
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,52,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name
WHERE {
  ?royalty a dbpedia:Person ;
             dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:child ?royalty .
  ?royalty rdfs:label ""Royalty Name"" . 
  ?grandparent rdfs:label ""Roger II of Sicily"" .
  ?grandparent rdfs:label ""Elvira of Castile, Queen of Sicily"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
782,48,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthName ""Nicholas Michael Curran"" .
  ?person rdfs:label ?artist_name .
  OPTIONAL { ?person dbpedia:isMemberOf dbpedia:Band ; rdf:type dbpedia:MusicGroup }
  FILTER (?person != blankNode)  # Avoid blank nodes
}
UNION
{
  ?band a dbpedia:Band ;
         dbpedia:leader ?person ;
         rdfs:label ?band_name .
  ?person rdfs:label ?artist_name .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
103,32,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?actor_bio ?movie_title
WHERE {
  ?actor a dbpedia:Actor ;
         dbpedia:birthPlace ""Mumbai, India"" .
  ?actor rdfs:label ?actor_name .
  ?movie a dbpedia:Film ;
           dbpedia:castMember ?actor ;
           dbpedia:productionCompany ""Grantville Pictures"" .
  ?movie rdfs:label ?movie_title .
  ?movie dbpedia:genre ""Drama"" .
  ?movie dbpedia:televisionEpisodeCount ""1""
}
```

This query looks for an actor (`?actor`) born in Mumbai, India (`dbpedia:birthPlace ""Mumbai, India""`), who has the same name as their label (`?actor_name`), and is cast in a film (`?movie`) produced by Grantville Pictures (`dbpedia:productionCompany ""Grantville Pictures""`). The movie must be a drama (`dbpedia:genre ""Drama""`) and have exactly one television episode (`dbpedia:televisionEpisodeCount ""1""`).",4,5,5,2,2,3,3,71,0,0,28,0,0.0,0
782,61,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?person_name WHERE { ?person a dbpedia:MusicalArtist ; dbpedia:birthDate 1945-03-30 . ?person rdfs:label ?person_name },6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
472,3,train,"Give me the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?death_place_name ?death_place_type
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathPlace ?death_place .
  ?death_place rdfs:label ?death_place_name .
  ?death_place dcterms:type ?death_place_type
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
687,26,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?character_name WHERE {
  ?film a dbpedia:Film ;
            dbpedia:mainActor ?actor .
  ?actor rdfs:label ?character_name .
  ?film rdfs:label ""The Magdalene Sisters"" .
  FILTER (lang(?character_name) = ""en"")  # Assuming English language
}
```",3,6,4,3,1,3,3,71,0,0,7,0,0.0,0
756,51,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?president_name ?country_of_birth ?soccer_season ?sport_season ?sports_team_season 
WHERE { 
  ?president a dbpedia:Person ; dbpedia:birthPlace ?country_of_birth . 
  ?president rdfs:label ?president_name . 
  ?born_on a dbpedia:Date ; dbpedia:value '1968-08-26' ; dbpedia:year '1968' . 
  ?born_on rdfs:label ?sport_season . 
  ?president rdfs:label ?soccer_season . 
  ?soccer_season a dbpedia:SportEvent ; dbpedia:type 'Football season' . 
  ?president rdfs:label ?sports_team_season . 
  ?sports_team_season a dbpedia:SportsTeamSeason ; dbpedia:type 'Football season' . 
}",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
531,25,train,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_of_mariano_rajoy ?office_of_party_leader
WHERE {
  ?mariano_rajoy a dbpedia:OfficeHolder ;
                  dbpedia:role dbpedia:Prime_Minister_of_Spain .
  ?party a dbpedia:PoliticalParty ;
            dbpedia:name ""Conservative People's Party"" .
  ?party_leader a dbpedia:Person ;
               dbpedia:office ?office_of_party_leader .
  ?mariano_rajoy foaf:member ?party .
  ?party_leader rdfs:label ?office_of_party_leader
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
347,8,train,Give me the father of Cecilia Renata of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name WHERE {
  ?author a dbpedia:Person ;
  dbpedia:birthPlace <urn:isbn:978-0-545-90378-7>.
  ?author rdfs:label 'Cece Bell' .
  ?author dbpedia:parent ?father_name .
}
",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,33,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?general_name ?general_forces
WHERE {
  ?general a dbpedia:Person ;
           dbpedia:birthDate ?general_birthdate .
  ?general rdfs:label ?general_name .
  OPTIONAL { ?general dbpedia:militaryBranch ?general_military_branch }
  FILTER (?general_military_branch = ""Ulysses S. Grant"" OR ?general_military_branch = ""Amasa Tracy"")
}
```

This query looks for individuals who match the names of Ulysses S. Grant or Amasa Tracy, and optionally retrieves their military branches. This information can then be cross-referenced with historical records to determine their forces.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
80,3,train,Give me the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_name WHERE {
  ?book dbpedia:title ""Smartbomb"" ;
           dbpedia:author ?author_name .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
816,46,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainCharacter ?actor .
  ?actor rdfs:label ?actor_name .
  ?actor dbpedia:birthPlace ""Los Angeles, California"" .
  ?actor dbpedia:parentProfession ""Photographer""
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
263,8,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor_name ?governor_country
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_place .
  ?governor_place a dbpedia:AdministrativeDivision ;
                 dbpedia:country ?governor_country .
  FILTER (lang(?governor_name) = ""en"")  # Assuming the question is in English
}
```",2,4,3,2,1,2,3,28,0,0,935,0,0.0,0
769,9,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"SELECT ?person_name ?birth_date
WHERE {
  ?tony_hollings dbpedia-owl:hasBirthday ?tony_birth_date .
  ?candidate a dbpedia:Athlete ;
              dbpedia:SoccerPlayer ;
              dbpedia:SportsManager ;
              dbpedia:SoccerManager .
  ?candidate dbpedia-owl:hasBirthday ?birth_date .
  ?tony_hollings birthDate ?tony_birth_date .
  ?candidate birthDate ?birth_date .
  FILTER (?tony_birth_date = ?birth_date)
}",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
609,5,train,"Give me the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
           dbpedia:birthPlace ?governor_birthplace .
  ?governor rdfs:label ""Paulus Powell"" .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
198,52,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . }","PREFIX cmoh: <http://purl.org/cmh/>
PREFIX gillmore: <http://dbpedia.org/ontology/Gillmore_Medal>

SELECT ?war ?gillmore_awardee_name
WHERE {
  ?recipient a cmoh:Medal_of_Honor_Award ; dbpedia:birthPlace ""Charleston, South Carolina"".
  ?recipient gillmore:awardedTo ?gillmore_awardee .
  ?gillmore_awardee a gillmore:Person ; rdfs:label ?gillmore_awardee_name
}
",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,37,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?father_name WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""Elvira of Castile"" ;  # Assuming Elvira's label in DBpedia
            dbpedia:birthPlace ""Castile, Spain"" .  # Birth place of Elvira (assumed)
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name .
  ?child dbpedia:hasOffices ?office .
  ?office a dbpedia:Office ;
            rdfs:label ""Royalty and Office Holder"" ;  # Placeholder for office title
            dbpedia:holder ?father .
  ?father a dbpedia:Person ;
           rdfs:label ?father_name ;
           dbpedia:birthPlace ""Castile, Spain"" .  # Assuming father's birth place is Castile
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
311,12,train,Give me the associated musical artist of Filthy Friends and band member of the writer of No Alternative.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?artist_name
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:birthDate ?artist_birthdate .
  ?band_member a dbpedia:BandMember ;
               dbpedia:associatedBand ?artist .
  ?artist rdfs:label ?artist_name .
  ?band_member rdfs:label ?band_member_name
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
103,38,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?shadow_name ?shadow_profession ?sinha_name ?sinha_profession
WHERE {
  ?shadow a dbpedia:Person ;
            dbpedia:alterEgo ""The Shadow"" .
  ?shadow rdfs:label ?shadow_name .
  
  ?sinha a dbpedia:Person ;
           dbpedia:name ""Shatrughan Sinha"" .
  ?sinha rdfs:label ?sinha_name .
  
  ?shadow dbpedia:hasOccupation ?shadow_profession .
  ?sinha dbpedia:occupation ?sinha_profession
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
198,49,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX medals: <http://dbpedia.org/ontology/MedalOfHonor>

SELECT ?person_name ?birthplace_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathDate ""1850-08-05"" ;
            medals:awardedMedalOfHonor true .
  ?person dbpedia:birthPlace ?birthplace .
  ?birthplace a dbpedia:Settlement ;
             dbpedia:country ""United States of America"" .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
375,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity_name ?entity_description
WHERE {
  ?entity a dbpedia:Person ;
           dbpedia:nationality dbpedia:Japan .
}
```",1,1,2,1,1,2,3,28,0,0,104,0,0.0,0
311,7,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist_name
WHERE {
  ?band dbpedia:genre ""Rock music"" ;
          dbpedia:bandName ""R.E.M."" .
  ?band dbpedia:associatedArtist ?associated_artist .
  ?associated_artist a dbpedia:Musician;
                   rdfs:label ?associated_artist_name
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
782,50,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthDate ""1945-03-30"" ;
            dbpedia:role dbpedia:MusicArtist .
  ?person rdfs:label ?artist_name .
  OPTIONAL { 
    ?person wdt:P31 ?band . 
    ?band a dbpedia:Band ;
           rdfs:label ?band_name
  }
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
816,40,train,"Give me the parent of Amy Arbus and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent_name ?movie_title ?actor_name
WHERE {
  ?sibling1 a dbpedia:Person ;
             dbpedia:birthPlace ""Los Angeles, California"" .
  ?sibling2 a dbpedia:Person ;
            dbpedia:birthPlace ""Los Angeles, California"" .
  ?parent a dbpedia:Person ;
           dbpedia:children ?sibling1, ?sibling2 ;
           foaf:name ""Alan Arkin"" .
  ?movie a dbpedia:Film ;
          dbpedia:starring ?actor_name ;
         dbpedia:productionLocation ""Los Angeles, California"" .
  ?actor a dbpedia:Person ;
          foaf:name ?actor_name .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
37,8,train,"Give me the birthplace of Bob Crewe and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bob_crewe_birthplace ?ethan_iverson_work_birthplace
WHERE {
  ?bob_crewe a dbpedia:Person ; dbpedia:birthPlace ?bob_crewe_birthplace .
  ?ethan_iverson a dbpedia:Artist ; dbpedia:type dbpedia:MusicalArtist ; dbpedia:birthPlace ?ethan_iverson_work_birthplace .
  ?bob_crewe rdfs:label ?bob_crewe_name .
  ?ethan_iverson rdfs:label ?ethan_iverson_name
}
",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
203,33,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?military_force_name ?british_officer_info
WHERE {
  ?british_officer a dbpedia:Person ;
               dbpedia:birthPlace ""United Kingdom"" ;
               rdfs:label ""William Bayne""@en .
  ?british_officer foaf:memberOf ?military_force .
  ?military_force a dbpedia:MilitaryUnit ;
                dbpedia:type ""MilitaryUnit""@en;
                rdfs:label ?military_force_name
}
```

This SPARQL query looks for a person named William Bayne who was born in the United Kingdom and identifies his membership within a military unit. The query then returns the label of that military unit, which represents the military force associated with William Bayne.",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
293,47,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?party_member_name ?spouse_name 
WHERE { 
  ?politician a dbpedia:OfficeHolder ; 
    dbpedia:office dbpedia:PoliticalPartyInCentralLouisiana ; 
    dbpedia:birthPlace ?politician_birthplace . 
  ?actor a dbpedia:Person ; 
    dbpedia:role dbpedia:ActorInFilm ; 
    dbpedia:filmProducedBy ?producer . 
  ?actor rdfs:label ?actor_name . 
  ?spouse a dbpedia:Person ; 
    dbpedia:spouseOf ?actor_name . 
  ?politician rdfs:label ?party_member_name . 
  ?actor rdfs:label ?actor_name . 
  ?producer a dbpedia:Person ; 
    dbpedia:birthPlace ?producer_birthplace . 
  ?producer rdfs:label ?producer_name
}",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
595,46,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name AS ?author_name, ?spouse_name AS ?spouse_name
WHERE {
  ?book a dbpedia:WrittenWork ;
           dbpedia:author ?author .
  ?author rdfs:label ?author_name .
  ?author dbpedia:isSpouseOf ?spouse .
  ?spouse a dbpedia:Person ;
            dbpedia:officeHolder ;
            dbpedia:politician .
  ?book rdfs:label ""It Takes a Village"" .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
628,30,train,"Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ?person_name .
  ?person dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?person ns:memberOf dbpedia:Musical_group.Uncle_Murda .
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
203,14,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?military_force_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthDate ""1919"" ;
            dbpedia:deathDate ""2001-08-27"" ;
            dbpedia:fullName ""Robert Calder"" ;
            dbo:militaryBranch ""British Army"" .
  ?person rdfs:label ?military_force_name
}
```",2,4,3,2,1,3,3,71,0,0,34,0,0.0,0
595,55,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name ?societal_event_name ?disease_name
WHERE {
  ?bill_clinton a dbpedia:Person ;
               dbpedia:birthDate ""1946-08-19"" ;
               dbpedia:fullName ""William Jefferson Clinton"" ;
               dbpedia:officeHolder ""President of the United States"" ;
               dbpedia:spouse ?spouse_name .
  ?hillary_clinton a dbpedia:Person ;
                  dbpedia:name ""Hillary Rodham Clinton"" ;
                  dbpedia:officeHolder [ dbpedia:role ""First Lady of the United States"" ] .
  ?societal_event a dbpedia:Event ;
                 dbpedia:startDate ""1989-01-20"" ;  # End of Cold War
                 dbpedia:description ""The end of the Cold War, leading to a significant shift in U.S. foreign policy and the reduction of tensions between the United States and the Soviet Union.""
  ?disease a dbpedia:Disease ;
            dbpedia:name ""HIV/AIDS"" ;
            dbpedia:hasAffectedPopulation [ dbpedia:group ""United States Navy personnel"" ] .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
158,24,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_name
WHERE {
  ?emperor1 a dbpedia:Person ;
            dbpedia:birthPlace ?emperor_birthplace;
            rdfs:label ""Nicholas II of Russia""@en .
  ?emperor2 a dbpedia:Person ;
            dbpedia:birthPlace ?emperor_birthplace;
            rdfs:label ""Alexander II, Grand Duke of Finland""@en .
  ?emperor_birthplace a dbpedia:AdministrativeTerritory ;
                       dbpedia:countryName ?country_name .
}
```",4,5,5,2,2,2,3,28,0,0,126,0,0.0,0
119,14,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country_name WHERE {
  ?athlete a dbpedia:Athlete ;
             dbo:nationality ?country .
  ?athlete dbpedia:birthPlace ""Łódź, Poland"" .
}
```",3,6,4,3,1,3,2,20,0,0,108,0,0.0,0
668,25,train,Give me the person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name
WHERE {
  ?musician a dbpedia:Musician ;
             dbpedia:name ?name .
  ?name rdfs:label ""Joey B""@en .
  ?musician foaf:givenName ?birth_name .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,38,train,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_title ?archduke_name ?archduke_title
WHERE {
  ?royalty a dbpedia:Person ;
  dbpedia:parent ?child_of_duke_philipp ;
  dbpedia:grandparent ?archduke_of_austria .
  ?archduke a dbpedia:Person ;
  dbpedia:name ?archduke_name ;
  dbpedia:title ?archduke_title .
  ?child_of_duke_philipp rdfs:label ?child_of_duke_philipp_name .
  ?archduke_of_austria rdfs:label ?archduke_of_austria_name
}
",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
347,16,train,Give me the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
               rdfs:label ""Charles Joseph, Archduke of Austria-Este"" .
  ?parent dbpedia:birthPlace ?parent_birthplace .
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent ;
           dbpedia:birthPlace ?child_birthplace .
}
```

This query:
- Identifies the parent (`Charles Joseph, Archduke of Austria-Este`) and their grandparent (`Francis I of Austria`).
- Selects the children (`?child_name ?child_birthplace`) of the identified parent.",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,57,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_politician_parent
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?child_politician_parent .
  ?child_politician_parent a dbpedia:OfficeHolder ;
                       rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?child_politician_parent rdfs:father ?child_politician_father .
  ?child_politician_father a dbpedia:Politician ;
                        rdfs:label ?child_name
}
```

This query looks for a person (`?child`) who has an office holder parent (`?child_politician_parent`) labeled ""Edward Stanley, 17th Earl of Derby"", and whose father (`?child_politician_father`) is a politician labeled with the child's name (`?child_name`).",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
392,4,train,Give me the member of 1. FC Magdeburg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?position
WHERE {
  ?player a dbpedia:Person ;
           dbpedia:memberOf dbpedia:FootballClub ;
           rdfs:label ?player_name .
  OPTIONAL { ?player dbpedia:hasPosition ?position }
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
293,33,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?actor_spouse_name
WHERE {
  ?film a dbpedia:Film ;
            dbpedia:producer ?producer .
  ?producer rdfs:label ""Nat Levine""@en .

  ?actor a dbpedia:Person ;
           foaf:name ?actor_name ;
           dbpedia:roleInFilm ?film .

  OPTIONAL { ?actor dbpedia:politicalAffiliation [ a dbpedia:PoliticalAffiliation ; rdfs:label ""Republican Party (United States)"" ] }

  ?actor foaf:spouse ?actor_spouse .
}
```

This query does the following:
- Identifies films produced by Nat Levine.
- Looks for actors in those films.
- Checks if any of these actors have a political affiliation noted as Republican.
- Extracts the names of the actor and their spouse.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
198,30,train,"Give me the force of Quincy Adams Gillmore and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?force_of_QA_Gillmore ?war_of_AT ?birthplace Settlement
WHERE {
  ?gillmore a dbpedia:Person ;
             dbpedia:fullName ""Quincy Adams Gillmore"" .
  ?war a dbpedia:Event ;
         dbpedia:startYear 1821 ;
         dbpedia:endYear 1821 .
  ?tracy a dbpedia:Person ;
         dbpedia:fullName ""Amasa Tracy"" .
  ?lewis a dbpedia:Person ;
         dbpedia:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
             geo:country ""United States"" .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
198,32,train,Give me the force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?gillmore_medal_winner ?medal_name ?contributions
WHERE {
  ?gillmore_medal_winner a dbpedia:Person ;
                       dbpedia:recipientOf dbpedia:MilitaryHonor ;
                       rdfs:label ?gillmore_medal_winner_label .
  ?medal_name a dbpedia:Medal ;
                dbpedia:name ?medal_name .
  ?contributions a dbpedia:Concept ;
                  rdfs:label ?contribution_label;
                  owl:sameAs [ ?award_winner rdfs:label ""Gillmore Medal"" ] .
  FILTER ( ?gillmore_medal_winner = ?medal_name )
}
```

This query looks for individuals who have received the Gillmore Medal and associates their names with contributions or notable actions. The `owl:sameAs` construct is used to link concepts related to the same person, ensuring we capture the correct details.",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
943,17,train,"Who is the father, that is a royalty and an office holder, of the child of Baeda Maryam I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },,2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,18,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of $pacely.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?artist_info WHERE {
  ?artist a dbpedia:Musician ;
           dbpedia:birthDate ?artist_birthdate .
  ?artist rdfs:label ?artist_name .
  ?artist dbpedia:associatedBandMember ?associated_band_member .
  ?associated_band_member a dbpedia:Person ;
                       rdfs:label ?associated_artist_name
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
769,17,train,"Give me the player in Ye Jia and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?manager_name
WHERE {
  ?team a dbpedia:SportTeam ;
            dbpedia:sportSpectatorCount ""Hong Kong C"" .
  ?team dbpedia:hasManager ?manager .
  ?manager a dbpedia:Person ;
           dbpedia:role dbpedia:SoccerManager .
  ?player a dbpedia:SportPerson ;
           dbpedia:participantIn ?team .
  ?player rdfs:label ?player_name .
  ?manager rdfs:label ?manager_name
}
```

This query will:
- Identify the team Hong Kong C.
- Find the manager of this team.
- Select players and their names from the same team.
- Filter for managers who are explicitly labeled as soccer managers.",4,10,5,3,2,3,2,20,0,0,2,0,0.0,0
557,46,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional_name
WHERE {
  ?fictional_character a dbpedia:Character ;
                       rdfs:label ""Kent Allard"" .
  ?fictional_character dbpedia:hasAlterEgo ?alter_ego .
  ?alter_ego a dbpedia:FictionalCharacter ;
             rdfs:label ""The Crimson Avenger"" .
  ?fictional_character dbpedia:createdBy ?producer .
  ?producer rdfs:label ?professional_name
}
```

This query looks for a character named Kent Allard, identifies the alter ego (The Crimson Avenger), and then links this character to the work ""Cora Sue Collins"" through the creator (producer). Finally, it extracts the professional name of the producer.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
687,24,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
         dbpedia:role dbpedia:Actor ;
         dbpedia:occupation dbpedia:SoccerPlayer .
  ?actor rdfs:label ?actor_name
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
398,14,train,Give me the player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?painter_name WHERE {
  ?painting a dbpedia:Artwork ;
            dbpedia:creator ?painter_name .
  ?painter_name rdfs:label ""Aleksandr Filimonov""@en
}
```",3,3,4,3,1,3,2,20,0,0,17,0,0.0,0
140,15,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?commander_birthday ?party_membership
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:military_role dbpedia:Confederate_Army_officer ;
             dbpedia:birthDate ?commander_birthday .
  ?commander rdfs:label ?commander_name .
  ?commander foaf:memberOf dbpedia:Republican_Party_(United_States) .
}
```

This query looks for a person (`?commander`) who:
- Was an officer in the Confederate Army (`dbpedia:military_role dbpedia:Confederate_Army_officer`).
- Has a birth date (`?commander_birthday`).
- Is labeled with a name (`?commander_name`).
- Is a member of the Republican Party of the United States (`foaf:memberOf dbpedia:Republican_Party_(United_States)`).",4,5,5,3,2,3,2,20,0,0,4,0,0.0,0
557,19,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?shadow_alter_ego_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:productionCompany ?producer_company .
  ?producer_company rdfs:label ?producer_name .
  
  ?person a dbpedia:Person ;
             dbpedia:alterEgo ""The Shadow"" ;
             dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name .
  
  ?movie dbpedia:filmTitle ""The Adventures of Tom Sawyer (1938 film)"" .
  ?producer_name = ?person_name
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,48,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?producer_name WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor ?actor ;
            dbpedia:producer ?producer .
  ?actor rdfs:label ""Janet Gaynor""@en .
  ?movie rdfs:title ""Sunrise""@en .
  ?producer rdfs:label ?producer_name
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
595,44,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name
WHERE {
  ?book a dbpedia:Book ;
         dbpedia:author ?author_name .
  ?author_name rdfs:label ""Bill Clinton""@en .
  ?book dbpedia:subject ""United States Navy""@en .
  ?author_name ns:spouse ""Hillary Clinton""@en .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
198,1,train,Give me the force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president_name ?president_influence
WHERE {
  ?president a dbpedia:Person ;
            dbpedia:office ""President of the United States"" .
  ?president rdfs:label ?president_name .
  ?president foaf:influencedBy ?influence .
  ?influence a dbpedia:Concept .
  FILTER (lang(?influence) = ""en"")  # Consider only English language influences
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
557,53,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?producer_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor janet_gaynor .
  ?producer a dbpedia:Person ;
            rdfs:label ?producer_name ;
            dbpedia:produced ?movie .
  ?producer dbpedia:birthPlace ""United States"" .
  ?alt_Ego a dbpedia:FictionalCharacter ;
             dbpedia:alter_ego ?alt_Ego_Alt_Ego .
  ?alt_Ego_Alt_Ego rdfs:label ""Kent Allard"" .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
609,23,train,Give me the birth place of the awardee of the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v2 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
    dbpedia:birthPlace ?birthplace .
  [ a dbpedia:Occupation ; dbpedia:name 'Television producer and writer' ] 
  rdfs:label ?occupation_name
}
",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
782,37,train,"Give me the associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name ?birthdate 
WHERE { 
?artist a dbpedia:Musician ; 
  dbpedia:birthDate ?birthdate . 
?birthdate rdfs:datatype xsd:date . 
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,33,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alter_ego_name ?lambert_cranston_birthplace ?dawit_i_ancestor
WHERE {
  ?lambert_cranston a dbpedia:Person ;
                    rdfs:label ""Lamont Cranston""@en;
                    dbpedia:birthPlace ?lambert_cranston_birthplace .
  ?alter_ego a dbpedia:Person ;
               rdfs:label ?alter_ego_name ;
               foaf:father ?dawit_i .
  ?dawit_i a dbpedia:Person ;
            rdfs:label ""Dawit I""@en;
            dbpedia:birthPlace <urn:dbpedia:Ethiopia>
  ?lambert_cranston dbpedia:alterEgo ?alter_ego .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
687,14,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player_role ?manager_role ?birthdate
WHERE {
  ?person a dbo:SoccerPlayer ; dbo:birthdate ?birthdate .
  ?person a dbo:SoccerManager ; dbo:birthdate ?birthdate .
  ?person rdfs:label ?player_role .
  ?person rdfs:label ?manager_role
}
",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
941,2,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name WHERE {
  ?parent a dbpedia:Person ;
           dbpedia:hasChild ?child .
  ?child rdfs:label ?child_name
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
859,11,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?band_name ?band_members
WHERE {
  ?artist a dbpedia:MusicArtist ;
            rdfs:label ""Phantomsmasher""@en .
  ?band a dbpedia:Band ;
         rdfs:label ""Burnt by the Sun""@en .
  ?artist dbpprop:isMemberOf ?band .
  ?band dbpprop:hasMember ?band_member
}
```",3,6,4,2,2,3,2,20,0,0,5,0,0.0,0
756,52,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country ?manager_name ?season_year ?team_name ?league_title
WHERE {
  ?president a dbpedia:OfficeHolder ;
               dbpedia:office ""President of Germany"" ;
               dbpedia:birthPlace ?country .
  ?president rdfs:label ""Theodor Heuss""@de .

  ?club a dbpedia:SportingClub ;
           dbpedia:type ""Football club"" ;
           dbpedia:name ""VfL Bochum""@de ;
           dbpedia:league ""2. Bundesliga"" ;
           dbpedia:season ""2006-07"" .
  ?manager a foaf:Person ;
            dbpedia:role ""Manager"" ;
            dbpedia:club ?club ;
            rdfs:label ?manager_name .

  ?team a dbpedia:SportTeam ;
         dbpedia:type ""Football team"" ;
         dbpedia:name ?team_name ;
         dbpedia:league ""2. Bundesliga"" ;
         dbpedia:season ""2006-07"" .
  ?league_title a dbpedia:SportsLeague ;
                 dbpedia:leagueTitle ""2. Bundesliga title"" .

  ?manager1 a foaf:Person ;
            dbpedia:role ""Manager"" ;
            dbpedia:club ?club1 ;
            rdfs:label ?manager_name1 .

  ?manager2 a foaf:Person ;
            dbpedia:role ""Manager"" ;
            dbpedia:club ?club2 ;
            rdfs:label ?manager_name2 .

  ?season_year rdfs:label ""2006-07""@en .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
706,16,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace ?actor_name ?actor_birthplace
WHERE {
  ?awardee a dbpedia:Person ; dbpedia:awardRecipient dbpedia:SangeetNatakAkademiFellowship .
  ?actor a dbpedia:Person ; dbpedia:role dbpedia:Actor ; dbpedia:film dbpedia:AkalerShandhaney .
  ?awardee rdfs:label ?awardee_name .
  ?actor rdfs:label ?actor_name .
  ?awardee dbpedia:birthPlace ?awardee_birthplace .
  ?actor dbpedia:birthPlace ?actor_birthplace .
}",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
203,32,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?war_name ?navy_officer_name ?foot_regiment_name 
WHERE { 
  ?navy_officer a dbpedia:Person ; dbpedia:serviceMemberOf dbpedia:Navy ; rdfs:label ?navy_officer_name . 
  ?foot_regiment a dbpedia:MilitaryUnit ; dbpedia:participatedIn ?war . 
  ?war a dbpedia:Event ; dbpedia:name ?war_name . 
  ?navy_officer rdfs:label ?navy_officer_name . 
  ?foot_regiment rdfs:label ?foot_regiment_name . 
  ?war pred ?navy_officer . 
  ?war pred ?foot_regiment 
}",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
419,4,train,Give me the alma mater of Chennupati Jagadish and entity in Andhra Pradesh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMaterName ?almaMaterLocation
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ""Srikakulam, Andhra Pradesh"" .
  ?person dbo:hasEducationalInstitution ?almaMater .
  ?almaMater a dbpedia:EducationalInstitution ;
          dbpedia:name ?almaMaterName ;
          dbpedia:location ?almaMaterLocation .
  ?person rdfs:label ""Chennupati Jagadish""@en .
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
103,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alter_ego_name WHERE {
  ?character a dbpedia:ComicCharacter ;
               dbpedia:alterEgo ?alter_ego_name .
  ?character rdfs:label ""The Shadow""@en
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
270,2,train,"Who is the person born, that is a politician, as Ada Jane Low?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","SELECT ?politician_name ?politician_birthplace
WHERE {
  ?politician a dbpedia:Politician ;
             dbpedia:name ""Ada Jane Low"" .
}",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
687,54,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?athlete_name ?athlete_birthdate ?actor_name ?actor_role ?film_title ?film_director1 ?film_director2 
WHERE { 
  ?athlete a dbpedia:Athlete ; 
    dbpedia:birthDate ?athlete_birthdate . 
  ?actor a dbpedia:Actor ; 
    dbpedia:role ?actor_role . 
  ?film a dbpedia:Film ; 
    dbpedia:director ?film_director1 . 
    dbpedia:director ?film_director2 . 
    dbpedia:castMember ?actor . 
    rdfs:label ?film_title . 
  FILTER (STRFTER(?athlete_birthdate, '1955-02-22')) 
  FILTER (NOT EXISTS { 
    ?soccer_player a dbpedia:SoccerPlayer ; 
      dbpedia:role ?actor_role . 
  }) 
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
557,54,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:birthPlace ?actor_birthplace ;
           rdfs:label ""Johnny Doughboy""@en .
  ?actor a foaf:Person ;
           foaf:name ""Lamont Cranston""@en .
  ?actor dbpedia:role dbpedia:The_Shadow .
  ?film a dbpedia:Film ;
          dbpedia:producer ?producer_name ;
          dbpedia:releaseDate ""1937-01-01""^^xsd:date ;
          rdfs:label ""A Star Is Born (1937 film)""@en .
  ?actor dbpedia:roleInFilm ?film_role .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
19,2,train,Give me the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:name ""John Boxer"" ;
               dbpedia:birthPlace ?birth_place .
  ?birth_place rdfs:label ?birth_name
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
609,7,train,"Give me the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_name
WHERE {
  ?author a dbpedia:Person ;
         dbpedia:birthPlace <urn:loc:United_States> ;
         dbpedia:givenName ?author_name .
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language ""en"" .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
213,16,train,"Give me the country of the work of Lao She and birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v3 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?country_of_work ?birth_place_of_chiang_ching_kuo
WHERE {
  ?lao_she a dbpedia:Person ;
            dbpedia: nationality ?country_of_work .
  ?chiang_ching_kuo a dbpedia:Person ;
               dbpedia: birthPlace ?birth_place_of_chiang_ching_kuo .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
246,16,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_parent_name ?child_royalty_name
WHERE {
  ?prince_faisal_dbpedia a dbpedia:Person ;
                       rdfs:label ""Faisal bin Hussein"" .
  ?child_dbpedia a dbpedia:Person ;
                    rdfs:label ?child_royalty_name ;
                    dbpedia:parent ?royalty_parent_name .
  ?royalty_parent_name a dbpedia:Royalty
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
345,6,train,Give me the region of the time zone of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?time_zone_name
WHERE {
  ?time_zone rdfs:label ""Japan Standard Time"" .
  ?time_zone rdfs:comment ""UTC+9 hours"" .
}
```",2,2,3,2,1,2,2,9,0,0,2255,0,0.0,0
687,61,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v3 . },"The corresponding SPARQL query is provided above, breaking down the problem into three logical steps.",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
293,38,train,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name_of_sothern ?spouse_name
WHERE {
  ?sothern a dbpedia:Person ;
            dbpedia:birthName ?birth_name_of_sothern .
  ?actor a dbpedia:Person ;
           rdfs:label ""1,000 Dollars a Minute"" .
  ?actor dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person ;
          dbpedia:birthName ?birth_name_of_sothern
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
353,10,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ?child_birthplace .
  ?child rdfs:label ?child_name .
  FILTER (?child_name IN ('William II of Sicily', 'Amalric of Sicily', 'Roger III of Sicily'))
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
103,60,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }",,6,8,7,3,2,3,3,71,0,0,13,0,0.0,0
557,21,train,Give me the professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?role
WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ?person_name .
  OPTIONAL { ?person dbpedia:alterEgo ?role }
  FILTER ( ?person_name = 'Lamont Cranston' OR ?person_name = 'David O. Selznick' )
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,29,train,"Give me the child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?child_birthplace ?father_name ?father_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:birthPlace ?child_birthplace .
  ?child dbpedia:parent ?father .
  ?father a dbpedia:Person ;
           rdfs:label ?father_name ;
           dbpedia:birthPlace ?father_birthplace .
  ?child rdfs:label ?child_name .
  ?father rdfs:label ?father_name
}
```",4,5,5,2,3,3,3,71,0,20164,1,0.0,0.0,0
742,4,train,"Give me the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?region_name
WHERE {
  ?region a dbo:Region ;
         dbpedia:timeZone ""EET"" .
}
```",1,2,2,1,1,3,2,20,0,0,20665,0,0.0,0
198,60,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace ?award_name
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:deathDate ""1850-08-05"" .
  ?awardee rdfs:label ?awardee_name .
  ?award a dbpedia:Award ;
          dbpedia:awardedTo ?awardee ;
          dbpedia:awardedBy dbpedia:United_States_Congress .
  ?award rdfs:label ?award_name .
  ?awardee dbpedia:birthPlace ?awardee_birthplace .
  ?awardee_birthplace a dbpedia:Settlement ;
                    dbpedia:country ""United States"" .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
347,31,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?commander_war ?television_show_name
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:conflict dbpedia:Algerian_War ;
            rdfs:label ?commander_name .
  ?commander foaf:father ?eleonore_of_austria .
  ?eleonore_of_austria a dbpedia:Person ;
                    rdfs:label ""Eleonore of Austria, Queen of Poland"" .
  OPTIONAL { 
    ?commander rdf:type dbpedia:Societal_event . 
    ?commander foaf:actor ?actor .
    ?actor rdfs:label ?television_show_name
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
633,11,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?parent_name ?parent_title ?spouse_name ?spouse_title
WHERE {
  ?duke a dbpedia:Person ;
         dbpedia:birthDate ""1506-03-20"" ;
         dbpedia:name ""Francis I, Duke of Lorraine"" .
  ?duke dbpedia:parent ""dbpedia:René II, Duke of Lorraine"" ;
          dbpedia:spouse ?spouse .
  ?parent a dbpedia:NoblePerson ;
         rdfs:label ?parent_name .
  ?spouse a dbpedia:Person ;
           rdfs:label ?spouse_name .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
386,7,train,Give me the war of Alexander Lvovich Davydov and entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX ro: <http://purl.org/dc/elements/1.1/>

SELECT ?war_name ?war_description
WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ?alexander_davydov .
  ?war rdfs:label ?war_name .
  ?war ro:subject ?war_description .
  ?alexander_davydov a dbpedia:Person ;
                  dbpedia:birthPlace ""Russia""^^xsd:string ;
                  rdfs:label ""Alexander Lvovich Davydov""@en .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
943,7,train,Who is the child of Baeda Maryam I?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?queen a dbpedia:Person ;
           dbpedia:birthPlace <urn:isbn:978-99916-42-0-7> . # Placeholder for Baeda Maryam I's birth place, replace with actual data
  ?queen rdfs:label ""Baeda Maryam I"" .
  ?child a dbpedia:Person ;
          dbpedia:parent ?queen ;
          dbpedia:birthPlace ?child_birthplace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
23,15,train,"Give me the party of Gustavo Petro and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?gustavo_petro_party ?roy_barreras_party
WHERE {
  ?gustavo_petro a dbpedia:Politician ; dbpedia:party ?gustavo_petro_party .
  ?roy_barreras a dbpedia:Politician ; dbpedia:birthPlace [ rdf:type dbpedia:Location ; rdfs:label 'Antioquia' ] ; dbpedia:party ?roy_barreras_party .
}
",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
905,16,train,"Give me the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?father_name WHERE {
  ?spouse rdfs:label ""Maria of Bytom"".
  ?spouse dbpedia:partner ?royalty_person .
  ?royalty_person a dbpedia:Person ; dbpedia:parent ?father_name .
  ?father_name rdfs:label ?father_name .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
38,8,train,"Give me the author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?work_name ?author_name
WHERE {
  ?work a dbpedia:WrittenWork ;
         dbpedia:author ?author .
  ?author rdfs:label ?author_name .
  ?work rdfs:label ?work_name .
  FILTER (?author IN [<>; foaf:name ""Joe Biden""])  # Joe Biden as the author
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,8,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor ?actor .
  ?actor rdfs:label ?actor_name .
  FILTER (str(?actor_name) = ""Iliza Shlesinger"")
}
```",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
412,23,train,Give me the war of the awardee of 30 and war of the leader of National Party of Greece.,"SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX NobelPrize: <http://dbpedia.org/ontology/NobelPrize>

SELECT ?awardee_name ?leader_name
WHERE {
  ?awardee a dbpedia:Person ;
            NobelPrize:nobelpreis 1930 .
  ?leader a dbpedia:Person ;
            dbpedia:office ""Leader of the National Party of Greece"" .
}
```",4,4,5,2,2,2,3,28,0,0,11,0,0.0,0
943,40,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }",,5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
347,26,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_father_name
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?child rdfs:label ?child_name .
  ?parent rdfs:label ?parent_name .
  ?child_father a dbpedia:Person ;
                dbpedia:parent ?parent ;
                dbpedia:hasChild ?child .
  ?child_father rdfs:label ?child_father_name
}
```

This query looks for individuals (`?child` and `?child_father`) where there is a parent-child relationship (`dbpedia:hasChild`) linking them to the same parent (`?parent`). It then labels these individuals with their names (`rdfs:label`).",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
871,13,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_birthplace
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:name ""Edward George Geoffrey Smith Stanley"" ;
           dbpedia:birthPlace ?child_birthplace .
  ?parent a dbpedia:Person ;
           dbpedia:child ?child ;
           dbpedia:name ?parent_name ;
           dbpedia:birthPlace ?parent_birthplace
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,25,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?tv_show_name ?societal_event_name 
WHERE {
  ?tv_show a dbpedia:TelevisionShow ; dbpedia:hasMainCharacter ?character .
  ?character a dbpedia:Person ; rdfs:label ?character_name .
  ?character_name STRING-CONCATENDS 'George Ducas' .
  ?societal_event a dbpedia:SocietalEvent ; dbpedia:involvesMilitaryConflict ?military_conflict .
  ?military_conflict a dbpedia:MilitaryConflict ; dbpedia:hasCombatant ?combatant .
  ?combatant a dbpedia:Person ; rdfs:label ?combatant_name .
  ?combatant_name STRING-CONCATENDS 'Jean Baptiste, Comte d'Arco' 
}
",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
392,0,train,Give me the member of 1. FC Magdeburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?player_fullname ?birthplace
WHERE {
  ?player a dbpedia:Footballer ;
           dbpedia:club ?fc_magdeburg .
  ?player rdfs:label ?player_name .
  ?player foaf:givenName ?player_fullname .
  ?fc_magdeburg rdfs:label ""1. FC Magdeburg"" .
}
```",1,1,2,1,1,2,2,9,0,0,616,0,0.0,0
198,0,train,Give me the war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?person_birthplace
WHERE {
  ?person a dbpedia:Person ;
    dbpedia:birthPlace ?person_birthplace .
  SERVICE 
  { 
    EXTRACT 
    ?person_name 
    FROM STRONG 
    ?person rdfs:label
  }
}
",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
353,31,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_parent_name
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?parent .
  ?parent a dbpedia:Royalty ;
           dbpedia:child ?child .
  ?child rdfs:label ?royalty_child_name .
  ?parent rdfs:label ?royalty_parent_name
}
```",4,5,5,3,2,3,3,71,0,10735,1,0.0,0.0,0
557,35,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?producer_name WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor janet_gaynor ;
            dbpedia:director ?director_name .
  ?actor a dbpedia:Person ;
          dbpedia:role ?role_name .
  ?movie rdfs:label ""Sunrise"" .
  ?director_name rdfs:label ?producer_name .
  OPTIONAL {
    ?actor rdfs:label ""The Shadow""
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
258,11,train,Give me the alma mater of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMaterName ?fupbFoundingDate
WHERE {
  ?eleonora a dbpedia:Person ;
            dbpedia:birthDate ?birthDate .
  ?eleonora dbo:hasAlmaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterName .

  ?fupb a dbpedia:University ;
          dbpedia:fullName ""Federal University of Paraíba""@pt ;
          dbpedia:established ?fupbFoundingDate .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
513,16,train,Give me the entity in the award of George H. Cameron and residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?cameron_residence ?uup_leader_residence
WHERE {
  ?cameron a dbpedia:Person ;
            dbpedia:birthPlace ""Winnipeg, Manitoba, Canada"" .
  ?uup_leader a dbpedia:Organization ;
               dbpedia:leader ?uup_leader_name .
  ?uup_leader foaf:name ?uup_leader_name .
  ?cameron rdfs:label ?cameron_name .
  ?uup_leader dbpedia:headquarter ?uup_leader_residence .
  FILTER (?cameron_name = ""George H. Cameron"")
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
859,13,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members
WHERE {
  ?artist dbpedia:hasBand ?band .
  ?band rdfs:label ?band_name .
  ?band_members a dbpedia:Musician ;
                 dbpedia:isMemberOf ?band .
}
```

This query does the following:
- It selects the band name (`?band_name`) and the musician members (`?band_members`) of the band associated with the artist ""Burnt by the Sun.""
- The `WHERE` clause connects the artist to their band using the `dbpedia:hasBand` property.
- It then filters for bands (`?band`) and retrieves their labels (`?band_name`) and members (`?band_members`), ensuring that these members are musicians (`?band_members a dbpedia:Musician`) and are part of the same band as the artist.",3,7,4,3,1,3,2,20,0,0,18,0,0.0,0
80,25,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name .
  ?actor dbpedia:role ""Willie"" . 
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
143,8,train,Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name WHERE {
  ?person dbpedia:name ""Cynthia Ikponmwenosa Morgan"" .
  ?person a dbpedia:Person ;
         dbpedia:associatedBandOrArtist ?musical_artist_name .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
353,25,train,Give me the child of the child of Alfonso VI of León and Castile and father of William II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_of_alfonso_vi ?father_of_william_ii_sicily
WHERE {
  ?child_of_alfonso_vi a dbpedia:Person ;
                    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
               rdfs:label ""Alfonso VI of León and Castile"" .
  ?child_of_alfonso_vi dbpedia:hasChild ?child_of_alfonso_vii .
  ?child_of_alfonso_vii a dbpedia:Person ;
                  rdfs:label ""Alfonso VII of León and Castile"" .
  ?child_of_alfonso_vii dbpedia:parent ?sancho_iii .
  ?sancho_iii a dbpedia:Person ;
              rdfs:label ""Sancho III of Navarre"" .
  ?sancho_iii dbpedia:hasChild ?william_ii_sicily .
  ?william_ii_sicily a dbpedia:Person ;
                  rdfs:label ""William II of Sicily""
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,14,train,Give me the child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild_name ?grandchild_birthplace
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:offspring ?child .
  ?child a dbpedia:Person ;
           dbpedia:offspring ?grandchild .
  ?grandchild a dbpedia:Person ;
             dbpedia:birthPlace ?grandchild_birthplace .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
943,35,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name 
WHERE {
  ?parent a dbpedia:Person ; dbpedia:offspring ?child .
  ?child a dbpedia:Royalty ; dbpedia:parent ?parent .
  ?grandchild a dbpedia:Person ; dbpedia:parent ?child .
  ?grandchild a dbpedia:OfficeHolder .
  ?parent rdfs:label ?parent_name .
  ?child rdfs:label ?child_name .
  ?grandchild rdfs:label ?royalty_name
}
",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
513,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?entity_name ?entity_location
WHERE {
  ?entity a dbpedia:Entity ;
            dbpedia:locatedIn ?entity_location .
  ?entity_location a geo:Location ;
                 geo:country ""United Kingdom"" .
}
```",1,1,2,1,1,3,2,20,0,0,42999,0,0.0,0
140,0,train,Give me the commander in Pickett's Charge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role dbpedia:MilitaryRole ;
             rdfs:label ?commander_name .
  FILTER (lang(?commander_name) = ""en"")  # Search for English names
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
347,3,train,Give me the military force of Algerian War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?military_force_name ?algerian_war_details
WHERE {
  ?war dbpedia:conflict Algerian War ;
           dbpedia:startDate ""1954-01-01"" ;
           dbpedia:endDate ""1962-12-01"" .
  ?military_force a dbpedia:MilitaryForce ;
               dbpedia:participatedIn ?war .
  ?war rdfs:label ""Algerian War"" .
  ?military_force rdfs:label ?military_force_name .
  OPTIONAL { ?military_force foaf:name ?algerian_war_details }
}
```",1,1,2,1,1,3,3,71,0,0,119,0,0.0,0
414,17,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX nobel: <http://purl.org/nobel/prize/>

SELECT ?awardee_name ?award_name
WHERE {
  ?awardee a dbpedia:Person ;
            dbpedia:winNobelPrize nobel:NobelPrizeInPhysics .
  ?award a dbpedia:Award ;
           rdfs:label ?award_name .
  ?awardee rdfs:label ?awardee_name
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
816,45,train,Give me the parent of the child of the spouse of Mariclare Costello and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . },,5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
472,8,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?territory_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?birthplace ;
               dbpedia:deathPlace ?deathplace .
  ?politician rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .
  ?birthplace a dbpedia: Settlement ;
             foaf:name ?birthplace_name .
  ?deathplace a dbpedia:Location ;
              rdfs:label ?deathplace_name .
  ?birthplace_name = ""Kerteminde"" .
  ?deathplace_name = ""Copenhagen""
  ?territory a dbpedia:PoliticalTerritory ;
             dbpedia:capital ?capital .
  ?capital rdfs:label ?territory_name
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
609,9,train,Give me the birth place of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
dbp:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
dbp:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
dbp:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",2,2,3,1,2,3,3,71,1,951552,0,1.0509136117483734e-06,1.0,2.1018250146602294e-06
246,15,train,"Give me the parent of Prince Omar bin Faisal and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent_name ?child_name
WHERE {
  ?grandparent dbpedia:PARENT ?parent_name .
  ?parent_name dbpedia:PARENT ?royalty_parent_name .
  ?royalty_parent_name rdfs:label ""King Abdullah II of Jordan"" .
  ?child dbpedia:PARENT ?royalty_child_name .
  ?child rdfs:label ""Prince Ali bin Hussein"" .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
756,24,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president_name ?country_of_birth
WHERE {
  ?president a dbpedia:Politician ;
               dbpedia:birthPlace ?country_of_birth .
  ?president rdfs:label ?president_name
}

AND {
  ?manager a dbpedia:SportsManager ;
            dbpedia:managedTeam ?team .
  ?team rdfs:label ""SBV Vitesse"" .
  ?manager rdfs:label ?manager_name
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
293,44,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States) and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?actor dbpedia:birthName ""Jackie Cooper"" ;
             dbpedia:spouse ?spouse_name .
  ?spouse_name rdfs:label ?spouse_name .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
723,6,train,Give me the band member of Stone Sour and band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name ?band_members
WHERE {
  ?band a dbpedia:Band ;
         rdfs:label ?band_name .
  ?band_members a dbpedia:Musician ;
               dbpedia:isMemberOf ?band .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
23,17,train,Give me the entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?country ?party
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:nationality ?country .
  ?politician rdfs:label ?politician_name .
  ?party a dbpedia:PoliticalParty ;
           dbpedia:name ?party_name .
  ?politician dbpedia:memberOf ?party .
  ?politician_name = ""Daniel Elahi Galán"" .
  ?party_name = ""Colombian Communist Party"" .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
39,51,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_name
WHERE {
  ?bob_thompson a dbpedia:MusicalArtist ;
                 dbpedia:name ""Bob Thompson"" ;
                 dbpedia:birthDate ?birth_date .
  ?bob_thompson foaf:alterEgo ""The Shadow"" .
  ?band a dbpedia:Band ;
         dbpedia:name ?band_name .
  ?bob_thompson dbpedia:isMemberOf ?band .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
737,4,train,"Give me the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?son_name WHERE {
  ?duke a dbpedia:Person ;
   dbpedia:birthDate ""1636-04-30"" ;
   dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
    dbpedia:child ?son .
  ?son rdfs:label ?son_name
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
198,28,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?general_name ?birthplace ?medal_of_honor_awardee_name ?war WHERE {
  ?general a dbpedia:Person ; dbpedia:birthPlace ?birthplace .
  ?general rdfs:label ?general_name .
  ?general foaf:awarded MedalOfHonor .
  ?medal_of_honor_awardee a dbpedia:Person ; dbpedia:name ?medal_of_honor_awardee_name .
  ?war a dbpedia:Event ; dbpedia:name ?war_name .
  ?general fightingIn ?war .
}
",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
293,7,train,Give me the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name WHERE {
  ?character a dbpedia:Character ;
               dbpedia:hasParent ?parent_name .
  ?character rdfs:label ""Tisha Sterling""@en .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,55,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name
WHERE {
  ?work1 a dbpedia:Film;
          dbpedia:director ?director_name;
          dbpedia:producer ?producer_name .
  ?work2 a dbpedia:Film;
          dbpedia:director ?director_name;
          dbpedia:producer ?producer_name .
  
  ?producer_name rdfs:label ?producer_name .
  
  ?director_name rdfs:label ""Janet Gaynor"" .
  
  ?director_name rdfs:label ""Cora Sue Collins"" .
  
  FILTER (regex(str(?producer_name), ""The Shadow"")) 
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
198,42,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?gillmore_name ?gillmore_force ?lewis_name ?lewis_award ?awardee_war ?awardee_medal 
WHERE {
  ?gillmore a dbpedia:Person ; dbpedia:role dbpedia:Major_General ; dbpedia:country ""United States"" .
  ?lewis a dbpedia:Person ; dbpedia:role dbpedia:Military_Honor_Award_winner ; dbpedia:war ?awardee_war .
  ?awardee_medal a dbpedia:Medal_of_Honor .
  ?gillmore rdfs:label ?gillmore_name .
  ?lewis rdfs:label ?lewis_name .
  ?awardee_medal rdfs:label ?awardee_medal
}
",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
103,29,train,Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of Shatrughan Sinha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_profession ?politician_name ?politician_profession
WHERE {
  ?actor a dbpedia:Actor ;
           rdfs:label ?actor_name .
  ?actor dbpedia:roleInFilm ""Dispatches from Elsewhere"" .
  ?politician a dbpedia:Politician ;
             rdfs:label ?politician_name .
  ?actor dbpedia:birthPlace ?actor_birthplace .
  ?politician dbpedia:birthPlace ?politician_birthplace .
  ?actor rdfs:label ?actor_name .
  ?politician rdfs:label ?politician_name
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
23,3,train,"Who is the person born, that is a politician, as Roy Leonardo Barreras Montealegre?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?birthname
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:name ?politician_name ;
               dbpedia:birthName ?birthname .
  ?birthname = ""Roy Leonardo Barreras Montealegre""
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
293,12,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?wife_name ?husband_name
WHERE {
  ?wife a dbpedia:Person ;
  dbpedia:name ?wife_name ;
  dbpedia:spouse ?husband_name .
  ?husband a dbpedia:Person ;
  rdfs:label ?husband_name
}
",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,24,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor_name ?father_spouse_name
WHERE {
  ?myat_hpone_pyo a dbpedia:Person ;
                    dbpedia:birthDate ""before 1845"" ; # Estimate birth year based on historical context
                    rdfs:label ""Myat Hpone Pyo"" .
  ?myat_hpone_pyo dbpedia:parent ?father .
  ?father a dbpedia:Person ;
           dbpedia:birthPlace ""Burma"" ;
           rdfs:label ?father_name .
  ?father foaf:spouse ?father_spouse .
  ?predecessor_name rdfs:label ?predecessor_name .
  FILTER (lang(?father_name) = ""en"")  # Assuming English for simplicity
}
```

### Completed",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,20,train,Give me the successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?successor_name ?author_name
WHERE {
  ?yuri_khmelnytsky a dbpedia:Person ;
                    dbpedia:birthDate ""c. 1610"" ;
                    dbpedia:deathDate ""1657"" ;
                    rdfs:label ?yuri_khmelnytsky_name .
  ?successor a dbpedia:Person ;
             dbpedia:follows ?yuri_khmelnytsky ;
             rdfs:label ?successor_name .
  ?author a dbpedia:Person ;
          dbpedia:birthPlace ""Mississippi, United States"" ;  # Placeholder for the birth place of the author
          rdfs:label ?author_name .
  ?author dbpedia:hasWork dbpedia:Book ;
               rdfs:label ""Always the Love Songs""
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
198,14,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthplace_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:nationality dbpedia:United_States ;
            dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?birthplace_name
}
```",2,4,3,2,1,3,3,71,0,0,12,0,0.0,0
609,52,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
    dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
    dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",6,7,7,3,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
347,23,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?war ?television_show
WHERE {
  ?war a dbpedia:Event ; dbpedia:name 'Algerian War' .
  ?commander a dbpedia:Person ; dbpedia:name ?commander_name .
  ?commander rdfs:label ?war .
  ?television_show a dbpedia:Television_Series ; dbpedia:name ?television_show_name .
  ?commander ap:partOf ?television_show .
}
",3,6,4,3,1,3,3,71,0,0,124,0,0.0,0
871,61,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?parent_name ?office_holder_status ?politician_child_name ?politician_child_office 
WHERE { 
?parent a dbpedia:OfficeHolder ; dbpedia:office ?office . 
?child a dbpedia:Person ; dbpedia:parent ?parent ; dbpedia:role dbpedia:ChildOf ; dbpedia:officeHolderStatus ?office_holder_status . 
?child a dbpedia:Politician . 
?parent rdfs:label ?parent_name . 
?child rdfs:label ?politician_child_name . 
?office a dbpedia:Office . 
?office rdfs:label ?office
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
706,2,train,Give me the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fellowship_name ?awarder_name ?description
WHERE {
  ?fellowship a dbpedia:Award ;
               rdfs:label ?fellowship_name ;
               dbpedia:awardedTo ?awardee .
  ?awardee a dbpedia:Person ;
           rdfs:label ?awardee_name .
  ?awarder a dbpedia:Organization ;
            rdfs:label ?awarder_name ;
            dbpedia:name ""Sangeet Natak Akademi"" .
  ?fellowship dbpedia:hasDescription ?description .
}
```

This query selects the name of the fellowship (`?fellowship_name`), the awarding organization's name (`?awarder_name`), and a description of the fellowship (`?description`) from the DBpedia dataset.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
158,2,train,Give me the native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?person rdfs:label ?person_name
}
```",1,1,2,1,1,2,3,28,0,0,5475,0,0.0,0
295,1,train,Give me the native of Birmingham.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ""Birmingham"" .
}
```",1,1,2,1,1,3,2,20,0,0,1531,0,0.0,0
531,41,train,"Give me the office of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?miguel_maura_office ?ruiz-gallardon_residence_tenant ?central_african_republic_war_commander_officer_name ?central_african_republic_war_commander_politician
WHERE {
  ?miguel_maura dbpedia:office ?miguel_maura_office .
  ?ruiz-gallardon rdfs:label ?ruiz-gallardon_residence_tenant .
  ?central_african_republic_war_commander a dbpedia:OfficeHolder ; dbpedia:role dbpedia:Commander .
  ?central_african_republic_war_commander a dbpedia:Politician .
  ?miguel_maura overlapsWith ?central_african_republic_war_commander .
  ?ruiz-gallardon rdfs:label ?ruiz-gallardon_residence_tenant .
  ?central_african_republic_war_commander rdfs:label ?central_african_republic_war_commander_officer_name
}
",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
288,3,train,Give me the show with Anumta Qureshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?show_name WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:givenName ""Anumta"" ;
           dbpedia:surname ""Qureshi"" .
  ?actor rdfs:label ?actor_name .
  ?show a dbpedia:TelevisionShow ;
         dbpedia:mainActor ?actor_name .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
595,36,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?owner_name WHERE {
  ?ship dbpedia:P31 dbpedia:USS_Arcadia_(ID-1605) .
  ?owner a dbpedia:Person ;
         dbpedia:ownProperty ?ship .
}

SELECT ?spouse_name WHERE {
  ?clinton a dbpedia:Person ;
             dbpedia:spouse ?spouse .
  ?spouse rdfs:label ?spouse_name .
}

SELECT ?commander_name WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:commander ?commander .
  ?commander rdfs:label ?commander_name .
  FILTER (?commander_name LIKE '%Smallpox%')  # Adjust the filter as needed
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
628,17,train,"Give me the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?award_name ?award_location
WHERE {
  ?award a dbpedia:Award ;
           rdfs:label ?award_name .
  ?award dbpedia:location ?award_location .
  ?award_location a dbpedia:CityVillage ; 
                 dbpedia:country ""United States"" ; 
                 dbpedia:isPartOf dbpedia:California .
  ?award_location rdfs:label ?award_location_name
}
```",2,7,3,2,1,3,3,71,0,0,3,0,0.0,0
412,16,train,Give me the war of the awardee of 30 and war of Napoleon Zervas.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war_name ?napoleon_zervas_name ?napoleon_zervas_birthplace ?war_description
WHERE {
  ?war a dbo:Conflict ;
         dbpedia:year ""1930"" .
  ?napoleon_zervas a dbpedia:Person ;
               dbpedia:name ""Napoleon Zervas"" ;
               dbpedia:birthPlace ?napoleon_zervas_birthplace .
  ?war rdfs:label ?war_name .
  ?napoleon_zervas rdfs:label ?napoleon_zervas_name
}
```

This query will search for a conflict that occurred in the year 1930 and return the name of that conflict, along with the birth place of Napoleon Zervas. The results should provide the necessary information based on the provided context.",3,3,4,2,2,2,3,28,0,0,11,0,0.0,0
628,61,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?artist_name ?florida_birthplace ?award_name ?newyork_band_name 
WHERE { 
  ?artist a dbpedia:MusicalArtist ; 
    dbpedia:birthPlace ?florida_birthplace . 
  ?award a dbpedia:Award ; 
    rdfs:label ?award_name . 
  ?award rdfs:isDefinedBy ?newyork_band . 
  ?newyork_band a dbpedia:Band ; 
    dbpedia:origin ?newyork_state . 
  ?florida_birthplace ns:locatedIn dbpedia:Florida . 
}",6,12,7,3,2,3,3,71,0,0,59,0,0.0,0
859,12,train,Give me the associated musical artist of the associated musical artist of James Plotkin and band member of Human Remains (band).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist_name WHERE {
  ?associated_artist a dbpedia:Musician ;
                      dbpedia:bandMemberOf ?human_remains_band .
  ?human_remains_band a dbpedia:Band ;
                       dbpedia:name ""Human Remains"" .
  ?associated_artist rdfs:label ?associated_artist_name
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
375,19,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
           dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
               dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ""Yamaza Enjirō""@ja .
  ?author rdfs:label ""Hashiba Hidekatsu""@ja .
  ?vince_gilligan rdfs:label ""Toyotomi Hideyoshi""@ja
}
```

This query looks for individuals matching the given names and their associated birth places. It uses labels in Japanese to ensure we are looking at the correct historical figures.",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
203,31,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name WHERE {
  ?commander a dbpedia:Person ; dbpedia:militaryBranch dbpedia:UnitedStatesArmy ; dbpedia:war dbpedia:WarOf1812 .
  ?commander rdfs:label ?commander_name .
}
",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,56,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in Sergio Agüero and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?team_name ?team_members
WHERE {
  ?player1 a dbpedia:SoccerPlayer ; dbpedia:birthDate '1985-02-22' .
  ?player2 a dbpedia:SoccerManager ; dbpedia:birthDate '1985-02-22' .
  ?player3 a dbpedia:Athlete ; dbpedia:birthDate '1955-02-22' .
  ?team1 dbpedia:hasMember ?player1 .
  ?team2 dbpedia:hasMember ?player2 .
  ?team3 dbpedia:hasMember ?player3 .
  ?team1 rdfs:label ?team_name .
  ?team2 rdfs:label ?team_name .
  ?team3 rdfs:label ?team_name
}
",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,9,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?administration_period
WHERE {
  ?ChristianIXOfDenmark a dbpedia:Monarch ;
                       dbpedia:reignPeriod ?administration_period .
  ?OlafI a dbpedia:Monarch ;
            dbpedia:reignPeriod ?administration_period .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
140,9,train,"Give me the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?battle_name ?event_description
WHERE {
  ?battle a dbo:Battle ;
            dbpedia:name ?battle_name .
  ?battle rdfs:label ""Pickett's Charge"" .
  ?battle dbpedia:partOfMilitaryConflict ?conflict .
  ?conflict a dbo:MilitaryConflictType ;
             rdfs:label ?event_description
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
816,29,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?parent_name ?parent_birthplace 
WHERE { 
  ?actor a dbpedia:Actor ; 
  rdfs:label ?actor_name . 
  ?actor dbpedia:hasParent ?parent . 
  ?parent a dbpedia:Person ; 
  rdfs:label ?parent_name . 
  ?actor rdf:sameAs <http://dbpedia.org/resource/Judah_Kaufman> . 
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,19,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?actor_movie WHERE {
  ?actor a dbpedia:Person ; dbpedia:parent ?amy_arbus .
  ?actor dbpedia:roleInFilm ?actor_movie .
  ?actor_movie rdfs:label ?actor_movie_label .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
68,14,train,"Give me the father of Isabella of Austria and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?father_name ?royalty_title 
WHERE { 
  ?person a dbpedia:Person ; 
  dbpedia:parent ?child ; 
  dbpedia:role dbpedia:Royalty ; 
  dbpedia:birthPlace ?birthplace . 
  ?child a dbpedia:Monarch ; 
  dbpedia:name ?child_name ; 
  dbpedia:birthPlace 'Padua' . 
  ?person rdfs:label ?father_name . 
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
198,35,train,"Give me the war of the awardee of Medal of Honor and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war_name ?governor_name ?governor_birthplace
WHERE {
  ?henry_clay_lewis a dbpedia:Person ;
                    dbpedia:birthPlace ?lewis_birthplace .
  ?medal_of_honor a dbpedia:MedalOfHonor ;
                   dbpedia:awardedTo ?henry_clay_lewis .
  ?war a dbpedia:War ;
           dbpedia:conflict ?war_conflict .
  ?henry_clay_lewis rdfs:label ""Henry Clay Lewis"" .
  ?medal_of_honor rdfs:label ""Medal of Honor"" .
  ?war rdfs:label ?war_name .
  FILTER (lang(?war) = ""en"")  # Ensure the result is in English
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
246,17,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of Princess Sara bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalty_parent_name
WHERE {
  ?princess MUNA al-HUSSEIN a dbpedia:Royalty ;
               dbpedia:child ?child .
  ?child a dbpedia:Person ;
           dbpedia:parent ?royalty_parent_name .
  
  ?princess SARA bint Faisal a dbpedia:Royalty ;
                    dbpedia:child ?child .
  ?child a dbpedia:Person ;
           dbpedia:parent ?royalty_parent_name .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
668,40,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musician_name ?musician_role ?pacely_birthplace ?darryl_born_name
WHERE {
  ?musician a dbpedia:Musician ;
  dbpedia:birthPlace ?pacely_birthplace .
  ?musician a dbpedia:Artist ;
  dbpedia:birthPlace ?darryl_born_name .
  ?musician rdfs:label ?musician_name .
  ?pacely_birthplace = ?darryl_born_name
}
",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
87,5,train,"Give me the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?movie_name ?film_category
WHERE {
  ?movie a dbpedia:Film ;
           dbpedia:star Audrey_Hepburn .
  ?movie rdfs:label ?movie_name .
  ?movie dbpedia:filmCategory ?film_category .
}
```",1,3,2,1,1,2,3,28,0,0,15,0,0.0,0
293,56,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }",,6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
557,51,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX mousetrap: <http://purl.org/csw/srv/ttl#>

SELECT ?producer_name
WHERE {
  ?movie a mousetrap:Movie ;
           mousetrap:title ""High Society Blues"" ;
           dbpedia:actor [ a dbpedia:Person ; rdfs:label ""Cora Sue Collins"" ] .
  ?movie mousetrap:producer ?producer .
  ?producer rdfs:label ?producer_name
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,50,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?actor_spouse_name 
WHERE { 
  ?actor a dbpedia:Actor ; 
  dbpedia:film ['Battleground'] . 
  ?actor rdfs:label ?actor_name . 
  ?actor dbpedia:spouse ?actor_spouse_name . 
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
595,19,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?spouse_name WHERE {
  ?author rdfs:label ""Rachel Maddow"" .
  ?author dbpedia:birthPlace ?author_birthplace .
  ?author spous:spouse ?spouse_name .
  ?spouse_name a dbpedia:Person ; dbpedia:birthPlace ?spouse_birthplace .
  ?politician rdfs:label ?politician_name .
  ?politician a dbpedia:OfficeHolder ; dbpedia:office ?office_name .
  ?author dbpedia:hasSpouse ?spouse_node .
  ?spouse_node a dbpedia:Person ; dbpedia:birthPlace ?spouse_birthplace .
  ?politician rdfs:seeAlso ?spouse_node .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
80,60,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Assuming the alter ego's name is 'John Doe' for this example
SELECT ?actor_name WHERE {
  ?alter_ego a dbpedia:Character ;
               rdfs:label ""John Doe""@en .
  ?actor a dbpedia:Actor ;
           dbpedia:role ?alter_ego .
}

# Find the author of Smartbomb
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?author_name WHERE {
  ?book a dbo:Book ;
           rdfs:title ""Smartbomb""@en .
  ?author a dbo:Person ;
           dbo:authorOf ?book .
}

# Find movies associated with the author
SELECT ?movie_title WHERE {
  ?movie a dbo:Film ;
           dbo:director ?author .
}
```",6,6,7,3,2,3,3,71,0,0,7802,0,0.0,0
871,24,train,"Give me the father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?father_name WHERE {
  ?politician a dbpedia:Politician ; dbpedia:name ?politician_name .
  ?politician dbpedia:birthDate 1825 .
  ?politician_father a dbpedia:Person ; dbpedia:name ?father_name .
  ?politician_father dbpedia:parentOf ?child_of_Frederick_Stanley_16th_Earl_of_Derby .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,17,train,"Give me the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            dbpedia:name ""Saw Min Phyu"" ;
            dbpedia:children ?child .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
941,10,train,"Who is the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child_name ?child_spouse
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""Princess Antoinette of Brunswick-Wolfenbüttel"" .
  ?child rdfs:label ?child_name .
  ?child foaf:spouse ?child_spouse .
}
```

This query looks for a child (`?child`) of Princess Antoinette (`?parent`) with a label (`?child_name`) and finds their spouse (`?child_spouse`).",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
39,25,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:name ""Robert Lamar Thompson"" .
  ?band a dbpedia:Band ;
          dbpedia:name ?band_name .
  ?artist rdfs:member ?band .
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
103,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional_name ?field
WHERE {
  ?professional a dbpedia:Person ;
               dbpedia:occupation ?field .
  ?field rdfs:label ""Your Specific Field"" . # Replace ""Your Specific Field"" with the actual field of interest
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
68,5,train,"Who is the child, that is a royalty, of Philip I of Castile?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"{sparql_query: We will use SPARQL to query DBpedia for information about Philip I of Castile and his children, focusing on those who were recognized as royalty. The query will utilize the relevant properties from the DBpedia ontology.}

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parent ?philip .
  ?child rdfs:label ?child_name .
  ?child dbpedia:royaltyStatus ?royalty_status
}
```",1,2,2,1,1,2,3,28,0,0,5,0,0.0,0
412,17,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?death_place AS ?settlement_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathPlace ?death_place .
  ?person rdfs:label ""Antonios Varthalitis"" .
  ?person rdfs:label ""Konstantinos Ventiris"" .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,41,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?birthdate ?team_name ?pablo_aimar_connection
WHERE {
  ?player a dbpedia:SoccerPlayer ; dbpedia:birthDate ?birthdate .
  ?player dbpedia:memberOf dbpedia:Manchester_City_F.C. .
  ?pablo_aimar dbpedia:teammateOf ?player .
  ?player rdfs:label ?player_name .
  ?pablo_aimar rdfs:label 'Pablo Aimar'@en .
  ?player birthdate ?birthdate
  FILTER (?birthdate = '1955-02-22')
}
",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
531,43,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?tenant_name ?office_of_commander_name ?miguel_maura_office
WHERE {
  ?manuel_pinto_da_costa a dbpedia:Person ;
                       dbpedia:conflict dbpedia:P Portuguese Civil War ;
                       dbpedia:role dbpedia:OfficeHolder .
  ?miguel_maura a dbpedia:Person ;
                dbpedia:office dbpedia:Prime_Minister_of_Portugal ;
                dbpedia:conflict dbpedia:P Portuguese Civil War .
  ?manuel_pinto_da_costa dbpedia:birthPlace ""Portugal"" .
  ?miguel_maura dbpedia:birthPlace ""Portugal"" .
  ?tenant a dbpedia:Building ;
            dbpedia:locatedIn ""Madrid, Spain"" .
  ?office_of_commander a dbpedia:Office ;
                       dbpedia:holder ?office_of_commander_name .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
78,16,train,Give me the associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?stuart_tosh_artist WHERE {
  ?person a dbpedia:Artist ;
           rdfs:label ""Stuart Tosh""@en .
  ?person dbpedia:associatedBand ?band .
}

SELECT ?david_paton_band WHERE {
  ?person a dbpedia:Musician ;
           rdfs:label ""David Paton""@en .
  ?person dbpedia:memberOf ?band .
  FILTER (?band != ?stuart_tosh_artist)  # Ensure it's not the same band as Stuart Tosh
}

SELECT DISTINCT ?common_artist WHERE {
  ?stuart_tosh_artist a dbpedia:Musician ;
                       rdfs:label ""Stuart Tosh""@en .
  ?david_paton_band a dbpedia:Band ;
                      dbpedia:member ?common_artist .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
23,6,train,Give me the entity in Colombia and party of Roy Barreras.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?party_name
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:nationality dbpedia:Colombia ;
               dbpedia:office dbpedia:Governor_of_Cauca .
  ?politician rdfs:label ?politician_name .
  ?party a dbpedia:PoliticalParty ;
           dbpedia:name ?party_name .
  ?politician dbpedia:isMemberOf ?party .
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
263,17,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?child a dbpedia:Person ;
           rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?child dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ?parent_name ;
          dbpedia:title ?parent_title .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,44,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?artist_name WHERE {
  ?person dbpedia:givenName ""Nicholas Michael"" ;
           dbpedia:surname ""Curran"" ;
           dbpedia:birthDate ?birthDate .
  ?person a dbpedia:Musician .
  ?band dbpedia:name ""The Fabulous Thunderbirds"" .
  ?person rdf:type dbpedia:BandMember ;
          dbpedia:band ?band .
  OPTIONAL { ?person dbpedia:associatedWith ?eric_clapton }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,1,train,"Give me the parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father_name ?father_title WHERE {
  ?earl_of_derby rdfs:label ""Edward Stanley"" .
  ?earl_of_derby dbpedia:title ""17th Earl of Derby"" .
  ?earl_of_derby dbpedia:parent ?father .
  ?father a dbpedia:Person ;
         dbpedia:title ?father_title .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,16,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01 and player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?manager_name
WHERE {
  ?player dbpedia:birthDate ""1981-12-01"" .
  ?player dbpedia:pseudonym ?player_name .
  ?player dbpedia:role dbpedia:SoccerPlayer .
  ?player dbpedia:role dbpedia:Athlete .
  ?player dbpedia:role dbpedia:SportsManager .
  ?manager dbpedia:team ""Hong Kong C Team"" .
  ?manager dbpedia:role dbpedia:Manager .
  ?manager dbpedia:role dbpedia:SoccerManager
}
```",4,10,5,2,2,3,2,20,0,0,2,0,0.0,0
119,49,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?president_name WHERE { ?president a dbpedia:Politician ; dbpedia:nationality dbpedia:Spain ; dbpedia:office dbpedia:Xunta_de_Galicia ; dbpedia:term_start_date 2009 },5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
398,5,train,Who is the writer of The First Glove?,SELECT ?result WHERE { <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author_name
WHERE {
  ?work a dbpedia:Book ;
           dbpedia:title ""The First Glove"" .
  ?author a dbpedia:Person ;
          dbpedia:name ?author_name ;
          dbpedia:birthPlace ?author_birthplace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,24,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?military_force_name ?war_description
WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:partOfMilitaryConflict ?war .
  ?war a dbpedia:MilitaryConflict ;
         dbpedia:startYear 1805 ;
         dbpedia:endYear 1805 .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)"" .
  ?military_force_name a dbpedia:MilitaryForce ;
                       dbpedia:name ?military_force_name .
  ?war rdfs:label ?war_description
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
103,13,train,Give me the professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?profession WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Shatrughan Sinha""@en .
  ?person dbpedia:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,58032,0,0.0,0
706,11,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name ?awardee_birthplace ?smitha_patil_birthplace
WHERE {
  ?award a dbpedia:ArtisticAwards ;
           dbpedia:awardedTo ?awardee_name .
  ?awardee a dbpedia:Person ;
           dbpedia:birthPlace ?awardee_birthplace .
  ?smitha_patil a dbpedia:Person ;
                  dbpedia:birthPlace ?smitha_patil_birthplace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
687,27,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?manager_name ?team_name
WHERE {
  ?marcelo_sarmiento a dbpedia:SoccerPlayer ;
                      dbpedia:birthDate ?date .
  ?manager a dbpedia:SoccerManager ;
            dbpedia:birthDate ?date .
  ?manager dcterms:birthdate ?date .
  FILTER (lang(?manager_name) = ""pt"" )  # Assuming Marcelo Sarmiento is Brazilian
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
375,5,train,"Give me the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?artist_name ?music_genre ?birthplace 
WHERE { 
  ?artist a dbpedia:Artist ; 
    dbpedia:birthPlace ?birthplace . 
  ?artist rdfs:label ?artist_name . 
  ?artist dbpedia:pseudonym ?music_genre . 
  ?artist dbpedia:originallyFrom ?origin_place . 
  ?origin_place rdfs:label ?birthplace
}",1,3,2,1,1,3,2,20,0,0,657,0,0.0,0
782,24,train,Give me the associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist_name ?band_name
WHERE {
  ?nick_curran a dbpedia:Musician ;
                 dbpedia:associatedBand ?associated_band .
  ?associated_band rdfs:label ?band_name .

  ?eric_clapton a dbpedia:Musician ;
                  dbpedia:bandMember ?band_member_of .
  ?band_member_of rdfs:label ?band_name .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
23,24,train,Give me the party of the father of Sofía Petro and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_party_name ?galan_entity_name
WHERE {
  ?sophia_petro a dbpedia:Person ;
               dbpedia:hasFather ?father .
  ?father a dbpedia:Person ;
           dbpedia:birthPlace ""Mississippi, United States"" .
  ?father rdfs:label ?father_party_name .

  ?daniel_elahi_galan a dbpedia:Person ;
                    dbpedia:birthPlace ""Colombia"" .
  ?galan rdfs:label ?galan_entity_name
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
87,22,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainActor ?actor .
  ?actor rdfs:label ?actor_name .
  ?movie dbpedia:director ?director .
  ?director rdfs:label ""Janusz Kamiński"" .
  FILTER (STRSTARTS(?actor, ""Iliza Shlesinger""))
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
203,38,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?military_force_name ?calder_event_description
WHERE {
  ?calder a dbpedia:Person ;
           dbpedia:birthDate ""1769-01-01"" ; # Placeholder birth date for Robert Calder
           rdfs:label ""Robert Calder"" .
  ?calder dbpedia:predicate dbpedia:militaryBranch ;
            dbpedia:value ""Royal Navy"" .
  ?calder rdfs:label ?calder_event_description .
  FILTER (lang(?calder_event_description) = ""en"") .
}
```",4,8,5,2,2,3,3,71,0,0,5,0,0.0,0
412,7,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war_name ?greek_leader_name ?ottoman_leader_name
WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:participatedIn ""Greek War of Independence"" .
  ?greek_leader a dbpedia:Person ;
               dbpedia:role ""Military Leader"" ;
               rdfs:label ?greek_leader_name .
  ?ottoman_leader a dbpedia:Person ;
                  dbpedia:role ""Military Leader"" ;
                  rdfs:label ?ottoman_leader_name .
  ?war dbpedia:involvedParty ?greek_leader .
  ?war dbpedia:involvedParty ?ottoman_leader
}
```",2,2,3,1,2,2,3,28,0,0,9,0,0.0,0
871,35,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?parent_name ?parent_title
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace ?birthplace .
  ?awardee a dbpedia:Person ;
            dbpedia:award dbpedia:Commander_of_the_Royal_Victorian_Order .
  ?politician rdfs:father ?awardee .
  ?politician rdfs:label ?parent_name .
  ?parent_title a dbpedia:Title;
                 rdfs:label ?parent_title
}
```

This query looks for a person who is both a politician (`dbpedia:Politician`) and the father of someone who has received the `Commander_of_the_Royal_Victorian_Order` award (`dbpedia:Commander_of_the_Royal_Victorian_Order`). It then selects the name (`?parent_name`) and title (`?parent_title`) of this person's parent.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,47,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/starring> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX mousetrap: <http://purl.org/cinema/theatrical/mousetrap/>

SELECT ?actor_name ?actor_profession
WHERE {
  ?movie a mousetrap:Film ;
            mousetrap:productionCompany ""Eros International"" ;
            mousetrap:title ""Ab Kya Hoga"" .
  ?actor a dbpedia:Person ;
         dbpedia:roleInFilm ?actor_role .
  ?actor_role a mousetrap:FilmRole ;
               mousetrap:characterName ?actor_name .
  ?actor rdfs:label ?actor_name .
  FILTER ( ?actor_role pao:hasActor Richard_E_Grant ) .
  ?actor a dbpedia:Person ;
         dbpedia:roleInSeries ?actor_series_role .
  ?actor_series_role a mousetrap:TelevisionSeriesRole ;
                    mousetrap:characterName ?actor_name .
  ?actor rdfs:label ?actor_name .
}",5,7,6,3,2,3,3,71,0,0,28,0,0.0,0
472,24,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v1 . }",,4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
347,37,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . }",,4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
68,0,train,Give me the father of Isabella of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:birthDate ""1515-08-10"" ;
           dbpedia:givenName ""Isabella"" ;
           dbpedia:surname ""Austrian"" ;
           foaf:father ?father .
  ?father a dbpedia:Person ;
          rdfs:label ?father_name .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
258,16,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira and establishment of the founding date of Federal University of Paraíba.","SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMaterName ?fupbFoundingDate
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:birthPlace brazil;
               rdfs:label ""Eleonora Menicucci de Oliveira""@pt.
  ?politician dbpedia:almaMater ?almaMater .
  ?almaMater a dbpedia:EducationalInstitution ;
            dbpedia:name ?almaMaterName .
  ?fupb a dbpedia:University ;
          dbpedia:name ""Federal University of Paraíba""@pt;
          dbpedia:established ?fupbFoundingDate .
  ?politician foaf:educationalInstitution ?almaMater .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
249,4,train,Give me the native of Jamshedpur and native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:nativePlace ?birthplace .
  ?birthplace rdfs:label ""Jamshedpur, India"" .
}
```",2,2,3,1,2,2,2,9,0,0,21,0,0.0,0
399,8,train,Give me the band member of Emilia (Bulgarian singer) and professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?band_member_profession
WHERE {
  ?emilia a dbpedia:Artist ;
            dbpedia:birthPlace ""Bulgaria"" .
  ?jamie_t a dbpedia:Musician ;
            dbpedia:birthPlace ""United Kingdom"" .
  ?band_member a dbpedia:BandMember ;
             dbpedia:associatedWith ?emilia ;
             foaf:name ?band_member_name ;
             dbpedia:profession ?band_member_profession .
  ?band_member_profession rdfs:label ?band_member_profession .
}
```",3,3,4,2,2,2,2,9,0,0,4,0,0.0,0
198,12,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?gillmore_name ?charleston_influence
WHERE {
  ?gillmore a dbpedia:Person ;
             dbpedia:birthPlace <http://dbpedia.org/property/birthPlace> ""New Hampshire"" ;
             dbpedia:influencedArea ?charleston_area .
  ?charleston_area a dbpedia:Location ;
                  dbpedia:name ""Charleston, South Carolina"" .
  ?gillmore foaf:knows ?person_with_charleston_info .
  ?person_with_charleston_info a dbpedia:Person ;
                        dbpedia:role dbpedia:MilitaryLeader ;
                        dbpedia:influenceLevel ?charleston_influence
}
```

This query looks for individuals related to Quincy Adams Gillmore, specifically those who have information about their influence in Charleston, South Carolina. It uses the `foaf:knows` relationship to connect Gillmore with someone who can provide details about his influence.",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
859,8,train,Give me the associated musical artist of the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?associated_artist_name WHERE {
  ?james_plotkin a dbpedia:Musician ;
  dbpedia:collaborationWith ?associated_artist .
  ?associated_artist a dbpedia:Musician .
}",2,2,3,2,1,3,2,20,0,0,13,0,0.0,0
687,35,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player_name ?player_team ?manager_name ?manager_team
WHERE {
  ?player a dbpedia:Player ;
            dbpedia:birthDate ""1955-02-22"" .
  ?player rdfs:label ?player_name .

  ?manager a dbpedia:Manager ;
            dbpedia:birthDate ""1979-11-03"" .
  ?manager rdfs:label ?manager_name .

  ?player dbpedia:hasTeam ?player_team .
  ?manager dbpedia:playsFor ?manager_team .
}
```

This query will return the names of players and managers born on the specified dates, along with their respective teams.",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
687,6,train,"Give me the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name
WHERE {
  ?actor a dbpedia:Person ;
           dbpedia:role dbpedia:Actor ;
           dbpedia:occupation dbpedia:SoccerPlayer .
  ?actor foaf:name ?actor_name .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
871,15,train,Who is the awardee of the award of Rodney Lees?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name WHERE {
  ?award a dbpedia:Award ;
           rdfs:label ""Rodney Lees Award""@en .
  ?awardee a dbpedia:Person ;
          rdfs:label ?awardee_name .
  FILTER (lang(?awardee_name) = ""en"")
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
557,6,train,"Give me the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?work_name ?author_name
WHERE {
  ?work a dbpedia:Book ;
         dbpedia:author ?author .
  ?author rdfs:label ?author_name .
  FILTER (lang(?author_name) = ""en"")  # Only consider English works for Cora Sue Collins
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
353,0,train,Give me the child of Roger II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?son_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:hasChild ?son .
  ?person rdfs:label ""Roger II of Sicily""@en .
  ?son rdfs:label ?son_name
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
468,12,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to Peter IV.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_title
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?father .
  ?father a dbpedia:Monarch ;
            rdfs:label ""Peter IV of Aragon"" .
  ?child rdfs:label ?child_name .
  OPTIONAL { ?child dbpedia:royaltyRole ?royalty_title }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
58,6,train,Give me the spouse of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse_name ?producer_name
WHERE {
  ?wife a dbpedia:Person ;
   dbpedia:name ""Linda Bruckheimer"" .
  ?husband a dbpedia:Person ;
   dbpedia:name ""Jerry Bruckheimer"" .
  ?movie a dbpedia:Film ;
   dbpedia:title ""12 Strong"" ;
   dbpedia:producer ?producer_name .
  ?husband rdfs:label ?producer_name
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,8,train,"Give me the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_child_name ?royalty_position
WHERE {
  ?child a dbpedia:Person ;
         dbpedia:parent ?bela_iv .
  ?child rdfs:label ?royalty_child_name .
  ?child dbpedia:P31 ?royalty_position .
  ?bela_iv a dbpedia:Monarch;
            dbpedia:name ""Béla IV of Hungary"" .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
609,30,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace 
WHERE { 
  ?governor a dbpedia:Politician ; 
    dbpedia:birthPlace ?governor_birthplace . 
  ?author a dbpedia:Person ; 
    dbpedia:birthPlace ?author_birthplace . 
  ?vince_gilligan a dbpedia:Person ; 
    dbpedia:birthPlace ?vince_gilligan_birthplace . 
  ?governor rdfs:label ?governor_name . 
  ?author rdfs:label ?author_name . 
  ?vince_gilligan rdfs:label ?vince_gilligan_name }",4,4,5,2,3,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
80,56,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?role_names ?movie_title 
WHERE { 
  ?actor a dbpedia:Person ; 
  rdfs:label ?actor_name . 
  ?actor dbpedia:hasRole [ dbpedia:inSeries ?series ] . 
  ?series rdfs:label ?role_names . 
  ?actor dbpedia:actedIn ?movie . 
  ?movie rdfs:label ?movie_title . 
}",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
288,4,train,Give me the theme of Dikhawa and native of Lahore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?theme ?lahore_born
WHERE {
  ?film a dbpedia:Film ; dbpedia:director Ammy Virk ; dbpedia:title 'Dikhawa' .
  ?actor a dbpedia:Person ; dbpedia:name ?actor_name ; dbpedia:birthPlace Lahore .
  ?theme a rdf:Property ; rdfs:label ?theme_name .
  ?film dbpedia:mainActor ?actor .
  ?actor rdfs:label ?actor_name .
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
225,15,train,Give me the entity in the region of the time zone in Kiyosu and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?person_name ?birthplace_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace .
  ?birthplace a geo:Location ;
               geo:country ""Japan"" ;
               geo:regionName ""Aichi"" ;
               geo:timeZone ""Central Japan Time (JST)"" .
  ?person rdfs:label ?person_name .
  ?birthplace rdfs:label ?birthplace_name
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
203,22,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?military_force_name ?calder_details
WHERE {
  ?calder a dbpedia:Person ;
           dbpedia:birthDate ""1769-04-23"" ; # Assuming Calder's birth date for simplicity
           rdfs:label ""Robert Calder"" .
  ?calder dbpedia:pseudonym ""Calder of Calton"" . # Possible additional information
  ?calder dbpedia:militaryBranch ?military_force_name .
  ?military_force_name a dbpedia:MilitaryUnit ;
                       rdfs:label ?military_force_name_label .
}
```

This query will search for Robert Calder in the DBpedia dataset, identify his military branch (which we assume to be the British Royal Navy), and return the name of the military force and any details about him. The exact details about Robert Calder might not be fully captured in DBpedia due to the age of the data or the specific nature of his naval career, but this query structure should guide us towards the correct information if it exists.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
412,15,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Constructing the query requires precise entities and relationships which are not clear from the question.
# Assuming we want to find any war involving Greek forces under both leaders' commands, but this is speculative without clear entities.

SELECT ?war_name ?greek_forces_involved
WHERE {
  ?greek_force a dbpedia:MilitaryForce ;
               dbpedia:partOfCountry <http://dbpedia.org/ontology/Country> ?country .
  ?country rdfs:label ""Greece"" .
  # Assuming we need to match leaders, but direct leadership links are not available in DBpedia
  # We use broad matching for names associated with Greek forces during the periods of interest.
  ?greek_force dbpedia:leader ?greek_leader .
  ?greek_leader rdfs:label ""Ioannis Metaxas"" .
  ?greek_force dbpedia:leader ?ventris_leader .
  ?ventris_leader rdfs:label ""Konstantinos Ventris"" .
  # Speculative match based on time period and known conflicts
  ?war a dbpedia:War ;
         dbpedia:startDate ?start_date .
  ?war dbpedia:participatingCountry ?greek_country .
  ?greek_country a <http://dbpedia.org/ontology/Country> .
  FILTER (?start_date > ""1941-01-01"" AND ?start_date < ""1950-01-01"") # Narrowing the date range to avoid WWII conflicts
}
```",3,3,4,2,2,2,3,28,0,0,9,0,0.0,0
78,7,train,Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?artist_name
WHERE {
  ?band a dbpedia:Band ;
            dbpedia:members ?band_members .
  ?artist a dbpedia:Artist ;
             dbpedia:collaborationWith ?band .
  ?band_members rdfs:member ?artist .
  ?band_label ""The Alan Parsons Project"" .
  ?artist_name rdfs:label ?artist_name .
  FILTER (regex(str(?band_label), 'The Alan Parsons Project')) .
  FILTER (regex(str(?artist_name), 'Stuart Tosh'))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
347,18,train,"Give me the commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_name ?commander_birthplace
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:birthPlace ?commander_birthplace .
  ?commander rdfs:label ?commander_name .
  ?commander foaf:father dbpedia:Ferdinand_II,_Holy_Roman_Emperor .
  FILTER (lang(?commander_name) = ""de"" )  # Assuming the commander's name is in German
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
23,19,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of Gustavo Petro and entity in Colombia.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?party
WHERE {
  ?politician a dbpedia:Person ;
               rdfs:label ?politician_name .
  OPTIONAL { ?politician dbpedia:presentsTo dbpedia:PoliticalParty }
  FILTER ( ?politician_name = 'Roy Leonardo Barreras Montealegre' OR ?politician_name = 'Gustavo Petro' )
}
```

This query:
- Uses the `PREFIX` to define the DBpedia namespace.
- Selects the `politician_name` and `party` of individuals who match the names Roy Leonardo Barreras Montealegre or Gustavo Petro.
- Utilizes an OPTIONAL clause to handle cases where the party information might not be directly associated with the person's record.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
203,30,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?battle_name ?commander_name ?french_fleet_name ?british_fleet_name
WHERE {
  ?battle a dbpedia:Event ; dbpedia:participatedIn ?battle_event .
  ?battle_event a dbpedia:SocietalEvent ; dbpedia:name ""Battle of Fort Royal"" .
  ?commander a dbpedia:Person ; dbpedia:role ""Commander"" ; dbpedia:name ?commander_name .
  ?french_fleet a dbpedia:MilitaryUnit ; dbpedia:name ?french_fleet_name ; dbpedia:commandedBy ?commander .
  ?british_fleet a dbpedia:MilitaryUnit ; dbpedia:name ?british_fleet_name ; dbpedia:commandedBy ?calder .
  ?calder rdfs:label ?calder_name
}
",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
905,27,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_name ?royalty_title
WHERE {
  ?predecessor a dbpedia:Monarch ;
               dbpedia:name ""Béla IV of Hungary"" .
  ?predecessor dbpedia:successor ?stephen_v .
  ?stephen_v a dbpedia:Person ;
              dbpedia:name ""Stephen V of Hungary"" ;
              dbpedia:monarchyStart ""1270"" .
  ?royalty a dbpedia:Royalty ;
            dbpedia:child ?child_royalty .
  ?child_royalty a dbpedia:Person ;
               dbpedia:name ?royalty_name .
  OPTIONAL { ?child_royalty rdfs:label ?royalty_title }
}
```

This query looks for:
- `dbpedia:Monarch` individuals who are King Béla IV of Hungary.
- Their successors (`dbpedia:successor`) to identify Stephen V.
- Any `dbpedia:Royalty` children of Stephen V, and optionally their titles (`rdfs:label`).",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
311,14,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?band_member_name WHERE {
  ?album a dbpedia:Album ; dbpedia:artist ?band_member .
  ?band_member a dbpedia:MusicianBandMember ; dbpedia:name ?band_member_name .
  ?album rdfs:label 'Sappy' .
}
",3,6,4,3,1,3,2,20,0,0,123,0,0.0,0
37,7,train,"Give me the birthplace of Scott LaFaro and birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace1 ?birthplace2
WHERE {
  ?person1 a dbpedia:Person ; dbpedia:birthPlace ?birthplace1 .
  ?person2 a dbpedia:Person ; dbpedia:birthPlace ?birthplace2 .
  ?person1 rdfs:label 'Scott LaFaro' .
  ?person2 rdfs:label 'Lauryn Hill' .
}
",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
731,17,train,"Give me the force of William Tennant (Royal Navy officer) and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?force_of_william_tennant ?war WHERE {
  ?officer a dbpedia:Person ; dbpedia:name ""William Tennant"" .
  ?officer dbpedia:serveIn ?force_of_william_tennant .
  ?battle a dbpedia:Event ; dbpedia:type ""military conflict""; dbpedia:partOf ?war .
  ?battle rdfs:label ?war_label .
  ?force_of_william_tennant rdfs:label ?force_of_william_tennant
}
",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
609,2,train,Give me the birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?author a dbpedia:Person ;
         dbpedia:birthPlace ?birthplace .
  ?author rdfs:label ""Cece Bell"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,48,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_name
WHERE {
  ?author a dbpedia:Person ;
           dbpedia:birthDate ?author_birthdate .
  ?author rdfs:label ""Hillary Rodham Clinton""@en .
  ?author dbpedia:authorOfBook ?book .
  ?book a dbpedia:WrittenWork ;
          dbpedia:subject ?subject .
  ?subject a dbpedia:Event ;
            dbpedia:conflict ""World War II"" .
  ?author dbpedia:spouse ?spouse_name
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
361,6,train,Give me the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_profession ?other_profession
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:occupation ?actor_profession .
  ?actor dbo:hasProfession ?other_profession .
  FILTER (NOT EXISTS { ?actor rdfs:label ?actor_name })
  FILTER (NOT EXISTS { ?other_profession rdfs:label ?other_profession_name }) 
}
```",2,2,3,1,2,2,3,28,0,0,4210,0,0.0,0
628,58,train,"Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?ackquille_johnson ?award_name ?band_name
WHERE {
  ?band a dbo:MusicBand ;
         dbpedia:",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
198,23,train,"Give me the war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?recipient_name ?recipient_award 
WHERE { 
  ?recipient a dbpedia:Person ; 
  dbpedia:awardedBy dbpedia:United_States_Congress . 
  ?recipient rdfs:label ?recipient_name . 
  ?recipient dbpedia:award dbpedia:Medal_of_Honor . 
}",3,4,4,3,1,3,3,71,0,0,611,0,0.0,0
203,42,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?regiment_name ?battle_name 
WHERE { 
?regiment a dbpedia:Regiment ; dbpedia:name ?regiment_name . 
?battle a dbpedia:Event ; dbpedia:name ?battle_name . 
?commander rdfs:label ?commander_name . 
?regiment dbpedia:participatedIn ?battle . 
}",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
19,3,train,Give me the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birth_name
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ?person_name ;
           dbpedia:birthDate ""1860-08-14""^^xsd:date ;  # Assuming birth date is known
           rdfs:label ?birth_name .
  ?person_name = ""Caroline Louise Bevan Symonds""
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
595,52,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?author_name ?spouse_name ?author_political_office
WHERE {
  ?author a dbpedia:Person ; dbpedia:birthPlace ?author_birthplace .
  ?author rdfs:label ?author_name .
  ?book a dbpedia:WrittenWork ; dbpedia:author ?author .
  ?book rdfs:label ?book_title .
  ?politician a dbpedia:OfficeHolder ; dbpedia:office ?political_office .
  ?politician rdfs:label ?politician_name .
  ?author ns:authorOf ?book .
  ?commander a dbpedia:Person ; dbpedia:role ?commander_role .
  ?commander rdfs:label ?commander_name .
  ?spouse a dbpedia:Person ; dbpedia:partner ?spouse_relationship .
  ?politician ns:marriedTo ?spouse
  ?book_title match 'Hillary Clinton' 
}
",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
737,7,train,Give me the parent of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent_name ?parent_title
WHERE {
  ?archduchess a dbpedia:Person ;
               dbpedia:birthDate ""1892-10-28"" ;
               dbpedia:deathDate ""1971-08-15"" ;
               dbpedia:sex ""Female"" ;
               dbpedia:title ""Archduchess Margarete Sophie of Austria"" .
  ?parent a dbpedia:Person ;
          dbpedia:relation ""Parent of"" ;
          dbpedia:role ?parent_title .
  ?parent rdfs:label ?parent_name .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
293,8,train,Give me the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birth_name WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Ann Sothern""@en .
  ?person dbpedia:birthName ?birth_name .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
557,43,train,"Give me the professional in  and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?producer_name
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ""Johnny Doughboy""@en .
  ?movie a dbpedia:Film ;
            dbpedia:productionCompany ?producer_company .
  ?producer a dbpedia:Person ;
            rdfs:label ?producer_name .
  ?movie rdfs:subject ?actor .
  ?movie dbpedia:director ?director .
  ?producer dbpedia:roleIn ?movie
}
```

This query looks for individuals labeled as ""Johnny Doughboy"" and associates them with films produced by the company behind the 1937 ""A Star Is Born"". It also checks for directors of those films to ensure we're looking at the correct movie.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
39,26,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?character_name ?character_profession
WHERE {
  ?character a dbpedia:FictionalCharacter ;
            rdfs:label ?character_name .
  ?character dbpedia:appearsIn dbpedia:Comics ;
                 rdfs:label ?character_name .
  ?character rdf:type dbpedia:ComicBookCharacter
}
```",3,5,4,3,1,3,3,71,0,0,39640,0,0.0,0
609,31,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}
",4,4,5,3,2,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
263,14,train,Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","{
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  SELECT ?parent_name ?parent_birthplace
  WHERE {
    ?person a dbpedia:Person ;
             rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
    ?parent a dbpedia:Person ;
           dbpedia:birthPlace ?parent_birthplace .
    ?parent rdfs:label ?parent_name
  }
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,51,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee_name WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:awardRecipientOf dbpedia:KnightCommanderOrderOfTheBath .
}

SELECT ?war_name WHERE {
  ?war a dbpedia:Conflict ;
         dbpedia:startYear 1803;
         dbpedia:endYear 1815 .
  FILTER (lang(?war) = ""en"") 
}
```",5,9,6,3,2,3,3,71,0,0,24,0,0.0,0
270,4,train,Give me the person decedent at Melbourne and predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor_name ?predecessor_birthplace
WHERE {
  ?mayor a dbpedia:OfficeHolder ;
           dbpedia:office dbpedia:Lord_Mayor_of_Melbourne ;
           dbpedia:precedingOfficeHolder ?predecessor .
  ?predecessor a dbpedia:Person ;
             dbpedia:birthPlace ?predecessor_birthplace .
  ?mayor rdfs:label ""Ada Watson""@en .
  OPTIONAL { ?predecessor rdfs:label ?predecessor_name . }
}
```

This query looks for individuals who held the office of Lord Mayor of Melbourne before Ada Watson, filtering for those born in Melbourne.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
633,10,train,"Give me the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name ?father_title
WHERE {
  ?duke a dbpedia:Person ;
         dbpedia:birthDate ""1697"" ;
         dbpedia:title ""Francis I, Duke of Lorraine"" .
  ?duke dbpedia:parent ?father .
  ?father a foaf:Person ;
          foaf:name ?father_name ;
          foaf:title ?father_title
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,49,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?athlete_name ?team_name
WHERE {
  ?athlete a dbpedia:Athlete ;
            dbpedia:birthDate ""1955-02-22"" .
  ?team a dbpedia:SportTeam ;
         dbpedia:type dbpedia:SoccerTeam .
  ?athlete rdf:type dbpedia:Player .
  ?team rdf:type dbpedia:SportsTeam .
  ?athlete rdfs:label ?athlete_name .
  ?team rdfs:label ?team_name
}
```

This query will:
- Filter athletes born on February 22, 1955.
- Check if they are players (to ensure they are athletes).
- Identify their teams.",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
347,10,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parent_name .
  FILTER (lang(?child) = ""de"" || lang(?child) = ""en"")  # Assuming English or German names
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,20,train,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?child_name ?royalty_status ?father_name ?father_title 
WHERE { 
  ?commander a dbpedia:Person ; dbpedia:role ['Commander in the Siege of Padua'] . 
  ?child a dbpedia:Person ; dbpedia:parent ?commander ; dbpedia:birthDateBefore '1500-01-01' . 
  ?child rdfs:label ?child_name . 
  ?father a dbpedia:Person ; dbpedia:parent ?commander ; dbpedia:role ['Father'] . 
  ?father rdfs:label ?father_name . 
  ?father dbpedia:offspring ?child . 
  ?royalty_status a rdf:BNode; rdf:type [ daml:intersectionOf ( dbpedia:Royalty ) ] . 
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
119,18,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela and tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_name ?governor_name ?country
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:officeHolder ?office .
  ?office a dbpedia:Office ;
             rdfs:label ?office_name ;
             dbpedia:holderOf ?governor .
  ?governor foaf:name ?governor_name .
  ?office dbpedia:locatedIn ?country .
  ?country rdfs:label ?country_name
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
198,44,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?settlement_name WHERE {
  ?settlement a dbpedia:Settlement ; dbpedia:country dbpedia:United_States .
  ?henry_clay_lewis dbpedia:birthPlace ?settlement .
  ?amasa_tracy dbpedia:birthPlace ?settlement .
}
",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
203,39,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?kcb_person_name ?kcb_unit ?battle_name 
WHERE { 
  ?kcb_person a dbpedia:Person ; 
  dbpedia:Knight_Commander_of_the_Order_of_the_Bath award ?kcb_honor . 
  ?kcb_person rdfs:label ?kcb_person_name . 
  ?battle a dbpedia:Event ; 
  dbpedia:type ?battle_type ; 
  dbpedia:participatedIn ?battle_event . 
  ?battle rdfs:label ?battle_name . 
  ?battle_event a dbpedia:SocietalEvent . 
  ?kcb_person dbpedia:conflict ?battle_event . 
}",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
628,52,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band_member_name ?birth_place
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:members ?member .
  ?member a dbpedia:Person ;
           dbpedia:name ?band_member_name ;
           dbpedia:birthPlace ?birth_place .
  ?band rdfs:label ""GS9"" .
  ?member rdfs:label ""Ackquille Scott Pollard"" .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
80,29,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }",,4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
531,28,train,Give me the office of Miguel Maura and office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office1_name ?office1_location ?office2_name ?office2_location ?gallardón_residence
WHERE {
  ?miguel_maura a dbpedia:Politician ;
                 dbpedia:officeHolder ?office1 .
  ?mariano_rajoy a dbpedia:Politician ;
                  dbpedia:officeHolder ?office2 .
  ?ruiz_gallardón a dbpedia:Person ;
                    dbpedia:residence ?gallardón_residence .
  ?office1 rdfs:label ?office1_name .
  ?office2 rdfs:label ?office2_name .
  ?gallardón_residence rdfs:label ?gallardón_residence
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,46,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?actor_birthplace 
WHERE { 
  ?actor a dbpedia:Person ; 
    dbpedia:birthPlace ?actor_birthplace ; 
    rdfs:label ?actor_name . 
  ?actor dbpedia:pseudonym 'Ruud Gullit' . 
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
531,6,train,"Give me the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?president_name ?president_office ?politician_role
WHERE {
  ?president a dbpedia:OfficeHolder ;
            dbpedia:office dbpedia:President_of_Central_African_Republic .
  ?president rdfs:label ?president_name .
  ?president dbpedia:polarity ""positive"" . # Assuming positive polarity to denote a political role
  ?politician_role a dbpedia:PoliticalRole;
                   rdfs:label ?politician_role
}
```",1,3,2,1,1,3,3,71,0,0,179,0,0.0,0
706,10,train,"Who is the actor of the movie, that is a movie and Indian, with Dipankar De?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:director ?director .
  ?director rdfs:label ""Dipankar De"" .
  ?movie dbpedia:mainActor ?actor .
  ?actor rdfs:label ?actor_name
}
```",2,4,3,2,1,3,2,20,0,0,17,0,0.0,0
87,21,train,"Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . }","
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?spouse_name ?director_name
WHERE {
  ?actor a dbpedia:Actor ; dbpedia:roleInFilm ?filmRole .
  ?filmRole film:productionCompany dbpedia:Playtone .
  ?actor dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ; rdfs:label ?spouse_name .
  ?director a dbpedia:FilmDirector ; dbpedia:directedFilm ?film .
  ?film film:productionCompany dbpedia:Playtone .
  ?film rdf:type dbpedia:Film ; dbpedia:mainActor ?actor_name .
  ?actor rdfs:label ?actor_name .
  ?director rdfs:label ?director_name
}
",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
87,15,train,"Give me the actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:productionCompany ""Warner Bros."" ;
            dbpedia:releaseDate ""1989-01-01"" ;
            dbpedia:leadActor ?actor_name
}

SELECT ?second_movie_name ?second_actor_name WHERE {
  ?movie a dbpedia:Film ;
           dbpedia:productionCompany ""Warner Bros."" ;
           dbpedia:releaseDate ""after 2019-01-01"" ; # Assuming the movie was released after 2019 for recent collaboration
           dbpedia:actor ?actor .
  ?actor rdfs:label ?actor_name .
  ?movie rdfs:label ?second_movie_name .
  OPTIONAL {
    ?actor dbpedia:coStar ?second_actor_name
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
353,41,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child_name ?royalty_status
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""William I of Sicily""@en .
  ?parent dbpedia:hasChild ?child .
  ?child a dbpedia:Royalty .
  OPTIONAL { ?child rdfs:label ?child_name }
  OPTIONAL { ?child dbpedia:birthPlace ?location }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,23,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","This query requires specific geospatial and political data which is not directly available through standard SPARQL queries for DBpedia. To accurately answer this question, one would need to integrate external geospatial databases with political party affiliation data, which is beyond the scope of a simple SPARQL query to DBpedia. However, a conceptual approach could involve using a geospatial API (like Geonames or similar) combined with a political party database to filter for the required information.",3,3,4,3,1,3,3,71,0,0,21514,0,0.0,0
668,16,train,"Give me the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?artist_profession
WHERE {
  ?album a dbpedia:Album ;
           dbpedia:title ""The Live Anthology"" .
  ?artist a dbpedia:Musician ; 
           dbpedia:birthDate ?artist_birthdate .
  ?artist rdfs:label ?artist_name .
  FILTER (lang(?artist_name) = ""en"")  # Assuming the name should be in English
  ?album dbpedia:performer ?artist .
}
```",2,3,3,2,1,3,3,71,0,0,23,0,0.0,0
782,7,train,Give me the persona of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX tv_series: <http://purl.org/dc/elements/1.0/>

SELECT ?character_name ?actor_name
WHERE {
  ?character a tv_series:Character ;
             rdfs:label ?character_name .
  ?actor a dbpedia:Person ;
          foaf:name ?actor_name .
  ?character rdf:type tv_series:Regular_character .
  ?actor dbpedia:portrayed ?character .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
293,3,train,Give me the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?landmark_name ?elevation
WHERE {
  ?landmark a dbpedia:Landmark ;
             geo:heightInMetres ?elevation .
  ?landmark rdfs:label ?landmark_name
}
```",1,1,2,1,1,3,3,71,0,0,192,0,0.0,0
557,1,train,Give me the producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name WHERE {
  ?film a dbpedia:Film ;
           dbpedia:productionCompany ?producer .
  ?film rdfs:label ""The Adventures of Tom Sawyer (1938 film)"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,36,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war_name ?war_startyear ?war_endyear ?american_settlement
WHERE {
  ?person a dbpedia:Person;
            dbpedia:birthDate ""before 1850"" .
  ?person rdfs:label ""Amasa Tracy""@en .
  ?war a dbo:War ;
         dbpedia:startDate ?war_startyear ;
         dbpedia:endDate ?war_endyear ;
         dbpedia:conflictArea ?american_settlement .
  FILTER (?war_startyear <= 1850) .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
943,43,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Constructing a query to find a fictional link between Lamont Cranston (The Shadow) and historical figures Dawit I and Baeda Maryam I.
SELECT ?fictional_link 
WHERE {
  # Assuming there's a fictional DBpedia resource for The Shadow
  ?shadow a dbpedia:FictionalCharacter ;
            dbpedia:alterEgo ""Lamont Cranston"" .

  # Historical figures
  ?dawit_I a dbpedia:Person ;
             dbpedia:fatherOf ?baeda_maryam_I .

  # Connecting fictional and real-world entities through a fictional link
  ?fictional_link a dbpedia:FictionalEvent ;
                 dbpedia:involves ?shadow ;
                 dbpedia:involves ?dawit_I .
}
```

This query attempts to bridge the fictional world of ""The Shadow"" with the historical figures Dawit I and Baeda Maryam I through a fictional event (`?fictional_link`). However, it's important to note that this query is speculative and constructed for the purpose of answering the question as posed, rather than reflecting an actual data relationship in DBpedia.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
492,22,train,Give me the death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?actor_name ?actor_deathplace 
WHERE { 
  ?actor a dbpedia:Person ; 
  dbpedia:deathPlace ?actor_deathplace . 
  ?actor rdfs:label ?actor_name . 
}",4,4,5,2,2,2,3,28,1,345090,0,2.8977863809835668e-06,1.0,5.79555596768398e-06
80,55,train,Give me the professional in the alter ego of The Shadow and actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }",,6,6,7,2,3,3,3,71,0,0,4,0,0.0,0
782,22,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name WHERE {
  ?person a dbpedia:Person ;
           dbpedia:name ""Nicholas Michael Curran"" ;
           dbpedia:role dbpedia:Musician ;
           dbpedia:band dbpedia:The_Fabulous_Thunderbirds .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
472,19,train,"Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?administration_name ?olaf_administration_territory ?hansen_administration_territory
WHERE {
  ?olaf a dbpedia:Person ; dbpedia:birthPlace Denmark ; dbpedia:reignStart 900 . 
  ?christian a dbpedia:Person ; dbpedia:birthPlace Denmark ; dbpedia:monarchTitle 'King of Denmark' ; dbpedia:reignEnd 1906 . 
  ?hansen a dbpedia:Person ; dbpedia:birthPlace Denmark ; dbpedia:deathPlace Copenhagen . 
  ?administration a dbpedia:GovernmentBody ; dbpedia:headOffice ?administration_name . 
  ?administration rdfs:label ?administration_name . 
  ?administration_servedDuring dbpedia:Monarch ?olaf . 
  ?administration_servedDuring rdfs:label ?olaf_administration_territory . 
  ?administration_servedDuring dbpedia:Monarch ?christian . 
  ?administration_servedDuring rdfs:label ?hansen_administration_territory . 
}
",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
668,12,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person_name ?birthplace
WHERE {
  ?person a dbpedia:Person ;
           rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?person dbpedia:birthPlace ?birthplace
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
270,0,train,Give me the predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor_name ?predecessor_birthplace
WHERE {
  ?mp a dbpedia:Politician ;
         dbpedia:office ""West Ham South"" ;
         dbpedia:term_start ""1929-01-01"" .
  ?mp rdfs:label ?predecessor_name .
  ?mp foaf:name ?predecessor_name .
  ?previous_mp a dbpedia:Person ;
                dbpedia:birthPlace ?predecessor_birthplace .
  ?previous_mp rdfs:label ?predecessor_name .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,15,train,"Give me the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?movie_title ?person_name ?deceased_date 
WHERE { 
  ?person a dbpedia:Person ; 
    dbpedia:deathPlace ?deceased_place ; 
    rdfs:label ?person_name . 
  ?movie a dbpedia:Film ; 
    dbpedia:mainCharacter ?person ; 
    rdfs:label ?movie_title . 
  ?deceased_place geo:location ?los_angeles . 
}",2,3,3,2,1,3,3,71,0,0,6475,0,0.0,0
412,4,train,"Give me the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?death_place_name
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ""Greece"" ;
            dbpedia:deathPlace ?death_place .
  ?person rdfs:label ""Antonios Varthalitis""@en .
  ?death_place a dbpedia:Settlement .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
311,16,train,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?artist_name
WHERE {
  ?band a dbpedia:Band ;
         dbpedia:members ?band_member .
  ?band rdfs:label ""R.E.M.""@en .
  ?band_member rdfs:label ?band_member_name .
  ?artist a dbpedia:Artist ;
            dbpedia:associatedBand ?band .
  ?artist rdfs:label ?artist_name
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
737,53,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_name ?royalty_relationship 
WHERE {
  ?child1 a dbpedia:Person ; dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Royalty ; dbpedia:child ?child2 .
  ?child2 a dbpedia:Person ; dbpedia:parent ?child3 .
  ?child3 a dbpedia:Royalty
}
",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,29,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?french_commander ?french_military_force ?british_commander ?british_military_force 
WHERE { 
  ?french_commander a dbpedia:Person ; dbpedia:role dbpedia:CommanderOfMilitaryForceInEgyptSyriaCampaign . 
  ?french_military_force a dbpedia:MilitaryForce ; dbpedia:conflict dbpedia:EgyptSyriaWar_1798-1801 . 
  ?british_commander a dbpedia:Person ; dbpedia:role dbpedia:CommanderOfMilitaryForceInBattleOfCapeFinisterre . 
  ?british_military_force a dbpedia:MilitaryForce ; dbpedia:conflict dbpedia:BattleOfCapeFinisterre_1805 . 
  ?british_commander rdfs:label ?british_commander_name . 
  ?french_commander rdfs:label ?french_commander_name . 
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
159,44,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?tv_show_name ?societal_event
WHERE {
  ?tv_show a dbpedia:TelevisionShow ;
             dbo:hasSetting ?setting .
  ?setting a dbpedia:Event ;
            rdfs:label ?societal_event .
  ?setting rdfs:subClassOf [ a dbo:War; rdfs:label ""Thirty Years' War"" ] .
  ?tv_show rdfs:subject ?actor .
  ?actor a dbpedia:Person;
          rdfs:label ""Jean Baptiste, Comte d'Arco"";
          dbpedia:participatedIn ?event .
  ?actor rdfs:subPropertyOf dbo:succeededBy ?successor .
  ?successor a dbpedia:Person;
            rdfs:label ""Yurii Khmelnytsky"" .
  FILTER (regex(str(?setting), ""Always the Love Songs"")) .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
80,44,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?album_title ?artist_name ?shadow_actor_name ?shadow_artist_birthplace
WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:mainCharacter ?shadow_actor .
  ?shadow_actor rdfs:label ?shadow_actor_name .
  ?album a dbpedia:Album ;
            dbpedia:artist ?artist .
  ?artist rdfs:label ?artist_name .
  ?movie dbpedia:hasMusicBy ?album .
  ?album rdfs:label ?album_title
}
```

This query looks for:
- The main character of a film (assumed to be ""The Shadow"" based on the question).
- The label (name) of this character.
- The artist associated with an album titled ""What You Know"" by T.I.
- The label (name) of this artist.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
353,24,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father_name
WHERE {
  ?william dbpedia:monarchOf dbpedia:Sicily ;
             dbpedia:birthPlace ?william_birthplace .
  ?elvira dbpedia:monarchOf dbpedia:Castile ;
            dbpedia:birthPlace ?elvira_birthplace .
  ?father a foaf:Person ;
         dbpedia:parent ?william .
  ?father dbpedia:birthPlace ?father_birthplace .
  ?father rdfs:label ?father_name
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
270,6,train,"Give me the person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedent_name ?decedent_birthplace
WHERE {
  ?mark a dbpedia:Person ; dbpedia:birthPlace ?mark_birthplace .
  ?decedent a dbpedia:Person ; dbpedia:birthPlace ?decedent_birthplace .
  ?mark dbpedia:isParentOf ?decedent .
  ?decedent_birthplace rdfs:label ?decedent_name
}
",2,3,3,2,1,2,2,9,0,0,809,0,0.0,0
353,7,train,"Who is the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse_name ?royalty_status
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace ?birthplace ;
            dbpedia:deathPlace ?deathplace ;
            dbpedia:role dbpedia:Royalty .
  ?person rdfs:label ?name .
  ?person foaf:spouse ?spouse .
  ?spouse a dbpedia:Person ;
           dbpedia:birthPlace ?birthplace .
  ?royalty_status a rdf:BNode .
  ?person ns:hasValue ?royalty_status .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
353,46,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?royalty_status
WHERE {
  ?w1 a dbpedia:Monarch ;
         dbpedia:name ""William I of Sicily"" .
  ?r2 a dbpedia:Person ;
         dbpedia:name ""Roger II of Sicily"" ;
         dbpedia:parent ?w1.
  ?child a dbpedia:Person ;
         dbpedia:name ?child_name ;
         dbpedia:parent ?w1.
  ?child rdfs:label ?child_name .
  ?child a dbpedia:Royalty
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,14,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_name ?war_name ?societal_event_name
WHERE {
  ?commander a dbpedia:Person ;
             dbpedia:role dbpedia:Commander;
             dbpedia:conflict dbpedia:Italian_Wars .
  OPTIONAL { 
    ?commander rdfs:label ?commander_name }
    ?war a dbpedia:Event ;
           dbpedia:type dbpedia:War ;
           dbpedia:name ?war_name .
    ?societal_event a dbpedia:Societal_Event ;
                   dbpedia:description ?societal_event_description .
    OPTIONAL { 
      ?societal_event rdfs:label ?societal_event_name }
    FILTER (lang(?commander) = ""en"" )  # Filter for English language results
  }
}
```

This query looks for individuals who played the role of a commander in the Italian Wars and optionally retrieves their names. It also looks for societal events related to these wars, including descriptions.",2,4,3,2,1,3,3,71,0,0,40,0,0.0,0
609,13,train,"Give me the birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
            dbpedia:office ""Governor of Virginia"" ;
            dbpedia:birthPlace ?governor_birthplace .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,16,train,"Give me the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name ?athlete_sport
WHERE {
  ?actor a dbpedia:Actor ;
           dbpedia:roleInFilm ""The Magdalene Sisters"" .
  ?actor dbo:hasAthleteRole dbo:SoccerPlayer .
  ?actor foaf:name ?actor_name .
  ?athlete a dbpedia:Athlete ;
            dbpedia:sport ?athlete_sport .
  ?athlete rdfs:label ?athlete_name .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
756,22,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name WHERE {
  ?player dbpedia:firstName ""Thomas"" ;
             dbpedia:sport ""Football"" ;
             dbpedia:club ?player_club .
  ?player_club a dbpedia:SoccerTeam ;
               dbpedia:manager ?manager_name .
  ?manager_name rdfs:label ?manager_name .
}
```

This query looks for a player named Thomas who plays football and identifies their club. It then finds the manager of that club.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
159,29,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?mazepa_name ?mazepa_birthplace ?author_name ?author_work ?khmelnytsky_name ?khmelnytsky_birthplace
WHERE {
  ?mazepa a dbpedia:Person ;
dbpedia:birthPlace ?mazepa_birthplace .
  ?mazepa rdfs:label ?mazepa_name .
  ?author a dbpedia:Person ;
dbpedia:birthPlace ?khmelnytsky_birthplace .
  ?author rdfs:label ?author_name .
  ?mazepa dcterms:author ?author .
  ?khmelnytsky a dbpedia:Person ;
dbpedia:birthPlace ?khmelnytsky_birthplace .
  ?khmelnytsky rdfs:label ?khmelnytsky_name
}
",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
859,10,train,"Give me the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musical_artist_name WHERE {
  ?band dbpedia:hasMember ?musical_artist .
  ?band rdfs:label ""Khlyst"" .
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
687,33,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor_name ?athlete_sport ?film_title
WHERE {
  ?actor a dbpedia:Person ;
           rdfs:label ?actor_name ;
           dbpedia:role ?role .
  ?role a dbpedia:FilmRole ;
          dbpedia:characterName ?character_name .
  ?footballer a dbpedia:SoccerPlayer ;
             dbpedia:birthDate ?footballer_birthdate .
  ?athlete_sport a dbpedia:AthleteSport ;
               rdfs:label ?athlete_sport_label .
  ?film a dbpedia:Film ;
           dbpedia:mainCharacter ?character_name .
  ?actor rdf:type dbo:ActorInRole ?role .
  ?footballer dbpedia:hasPlayedFor ?team .
  ?athlete_sport dbpedia:includesSport ?athlete_sport_label .
  ?film rdfs:label ?film_title .
  FILTER (?role = ?character_name) AND (?character_name = ""Manuel Huerga"")
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
103,26,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?politician_role
WHERE {
  ?politician a dbpedia:Person ;
             dbpedia:role ?politician_role .
  ?politician_role rdfs:label ""Politician"" .
  ?politician rdfs:label ?politician_name
}
```",3,4,4,3,1,3,3,71,0,0,58032,0,0.0,0
756,23,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name
WHERE {
  ?player a dbpedia:Person ;
            dbpedia:birthDate ?player_birthdate ;
            dbpedia:joinSoccerClub ?soccer_club ;
            dbpedia:leaveSoccerClub ?leave_date .
  ?soccer_club a dbpedia:SoccerClub ;
               rdfs:label ""VfL Bochum"" .
  ?manager a dbpedia:Person ;
           dbpedia:role ?manager_role ;
           dbpedia:birthDate ?manager_birthdate .
  ?player rdfs:label ?player_name .
  ?soccer_club rdfs:label ?soccer_club_name .
  FILTER (STRSTARTS (?player_birthdate, ""2006-07"")).
}
```

This query does the following:
1. Selects individuals who are both players and have a birth date indicating they were born in 2006 or 2007 (the 2006-07 season).
2. Filters for those individuals who joined a soccer club labeled as ""VfL Bochum"".
3. For each player, it finds the manager(s) associated with them through their role and birth date.",3,9,4,3,1,3,3,71,0,0,1,0,0.0,0
38,10,train,"Give me the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?work_name ?author_name WHERE {
  ?work a dbpedia:WrittenWork ; dbpedia:author ?author .
  ?author a dbpedia:Person ; dbpedia:name ?author_name .
  ?author dbpedia:predicate dbpedia:commander_in_chief_of_the_united_states_army ; dbpedia:value 'Douglas MacArthur' .
  ?work dbpedia:predicate dbpedia:conflict dbpedia:Korean_War .
}",2,5,3,2,1,3,2,20,0,0,52,0,0.0,0
609,34,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace
WHERE {
  ?governor a dbpedia:Politician ;
    dbpedia:birthPlace ?governor_birthplace .
  ?author a dbpedia:Person ;
    dbpedia:birthPlace ?author_birthplace .
  ?vince_gilligan a dbpedia:Person ;
    dbpedia:birthPlace ?vince_gilligan_birthplace .
  ?governor rdfs:label ?governor_name .
  ?author rdfs:label ?author_name .
  ?vince_gilligan rdfs:label ?vince_gilligan_name
}",4,4,5,3,2,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
119,15,train,"Give me the entity in Poland and war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?polish_commander_name ?television_show_name
WHERE {
  ?polish_commander a dbpedia:Person ;
                    dbpedia:role dbpedia:Commander ;
                    dbpedia:conflict dbpedia:War_of_the_Oranges .
  ?polish_commander rdfs:label ?polish_commander_name .
  ?television_show a dbpedia:Television_Series ;
                   dbpedia:main_character ?polish_commander_name .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
386,15,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?politician_name ?politician_birthplace ?war_of_davydov_name ?war_of_davydov_description
WHERE {
  ?politician a dbo:Politician ;
               dbpedia:birthPlace ?politician_birthplace .
  ?war a dbo:War ;
           dbpedia:participatedIn ?war_of_davydov .
  ?war_of_davydov a dbo:Conflict;
              rdfs:label ?war_of_davydov_description
  FILTER (?politician_name = ""Elena Žalinkevičaitė-Petrauskienė"") .
  FILTER (?war_of_davydov_name = ""Alexander Lvovich Davydov"") .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
628,8,train,"Give me the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?award_name ?award_description
WHERE {
  ?award a dbpedia:Award ;
         rdfs:label ?award_name .
  ?awardDescription a dbpedia:Description ;
                    rdfs:comment ?award_description .
  ?awardDescription rdfs:label ?award_description_name .
  FILTER (lang(?award_description_name) = ""es"" )  # Only consider Spanish descriptions
}
```",1,5,2,1,1,3,3,71,0,0,3,0,0.0,0
78,6,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name ?artist_birthplace
WHERE {
  ?person a dbpedia:Person ;
           dbpedia:givenName ""Stuart Tosh"" .
  ?person rdfs:label ?artist_name .
  
  ?person2 a dbpedia:Person ;
            dbpedia:givenName ""Billy Lyall"" .
  ?person2 rdfs:label ?artist_name
}",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
89,46,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royalty_spouse_name ?child_name 
WHERE { 
  ?father a dbpedia:Person ; dbpedia:name 'Minye Kyawswa' . 
  ?mother a dbpedia:Person ; dbpedia:name ?royalty_spouse_name . 
  ?mother dbpedia:spouseOf ?father . 
  ?child a dbpedia:Person ; dbpedia:parent ?father ; dbpedia:parent ?mother . 
  ?child dbpedia:name ?child_name . 
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
769,6,train,Give me the player in Ye Jia and player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?character_name
WHERE {
  ?actor a dbpedia:Person ; dbpedia:role ?character .
  ?character rdfs:label ?character_name .
  ?actor rdfs:label ?actor_name .
}
",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
293,22,train,Give me the party member of Republican Party (United States) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?republican_member_name ?sothern_birthname
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:politicalParty dbpedia:Republican_Party_United_States .
  ?actor rdfs:label ""Ann Sothern"" .
  ?actor dbpedia:birthName ?sothern_birthname .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,27,train,"Give me the birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author_birthplace
WHERE {
  ?author a dbpedia:Person ;
    dbpedia:birthPlace ?author_birthplace .
  ?author rdfs:label ""Cece Bell"" .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
353,11,train,"Give me the child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_name
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Roger III, Duke of Apulia"" .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
89,60,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty_predecessor_name ?royalty_predecessor_birthplace
WHERE {
  ?child a dbpedia:Person ; dbpedia:parent ?parent_of_child .
  ?parent_of_child a dbpedia:Person ; dbpedia:child ?child .
  ?child rdfs:label ?child_name .
  ?spouse a dbpedia:Person ; dbpedia:partner ?parent_of_child .
  ?spouse rdfs:label ?spouse_name .
  ?royalty_predecessor a dbpedia:Royalty ; dbpedia:birthPlace ?royalty_predecessor_birthplace .
  ?child dbpedia:hasSpouse ?spouse .
  ?spouse rdfs:label ?spouse_name .
}
",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,6,train,Give me the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_name ?child_birthplace
WHERE {
  ?duke a dbpedia:Person ;
         dbpedia:name ""Duke Philipp of Württemberg"" ;
         dbpedia:birthPlace ?duke_birthplace .
  ?child a dbpedia:Person ;
           dbpedia:parent ?duke ;
           dbpedia:name ?child_name ;
           dbpedia:birthPlace ?child_birthplace
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
859,7,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?band_member_details
WHERE {
  ?band a dbpedia:MusicGroup ;
         dbpedia:hasBandMember ?band_member .
  ?band_member a dbpedia:Person .
  ?band_member rdfs:label ?band_member_name .
  FILTER (lang(?band_member_name) = ""en"")  # Assuming English language
}
```

This query selects the band member's name (`?band_member_name`) and additional details (`?band_member_details`) from DBpedia, focusing on individuals who are members of music groups (bands).",2,5,3,2,1,3,2,20,0,0,18,0,0.0,0
668,46,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associated_artist_name ?associated_artist_birthplace
WHERE {
  ?associated_artist a dbpedia:MusicalArtist ;
                    dbpedia:birthPlace ?associated_artist_birthplace .
  ?rodr_argent a dbpedia:Musician ;
                 dbpedia:birthPlace <http://dbpedia.org/property/birthPlace> ""Stoke-on-Trent, United Kingdom"" .
  ?associated_artist rdfs:label ?associated_artist_name .
  ?rodr_argent foaf:musicalGroup ?musical_group .
  ?musical_group a dbpedia:MusicGroup ;
                dbpedia:members ?associated_artist
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
386,16,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },,3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
353,47,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name ?child_title ?father_name ?father_title
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
            rdfs:label ""William I""^^xsd:string ;
            dbpedia:role dbpedia:King_of_England .
  ?child rdfs:label ?child_name .
  ?child dbpedia:birthPlace ""Normandy""^^xsd:string ; # Assumed birthplace for simplicity
  ?child dbpedia:role ?child_title .
  ?parent dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
             rdfs:label ""Roger III, Duke of Apulia""^^xsd:string ;
             dbpedia:role dbpedia:Duke_of_Apulia .
  ?father a dbpedia:Person ;
           rdfs:label ?father_name .
  ?father dbpedia:parent ?grandparent
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,13,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?royalty_parent_name
WHERE {
  ?charles_I_of_hungary_father a dbpedia:Person ;
                       dbpedia:father ?sigismund .
  ?sigismund a dbpedia:OfficeHolder ;
               dbpedia:office dbpedia:Holy_Roman_Emperor .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,46,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?governor_name ?governor_birthplace ?vince_gilligan_name ?vince_gilligan_birthplace WHERE { ?governor a dbpedia:Politician ; dbpedia:birthPlace ?governor_birthplace . ?governor rdfs:label ?governor_name . ?vince_gilligan a dbpedia:Person ; dbpedia:birthPlace ?vince_gilligan_birthplace . ?vince_gilligan rdfs:label ?vince_gilligan_name },5,6,6,3,2,3,3,71,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
347,11,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander_name ?war ?television_show 
WHERE { 
?regiment a dbpedia:MilitaryUnit ; dbpedia:name ""2nd Dragoon Regiment"" . 
?commander a dbpedia:Person ; dbpedia:role ""Commander of 2nd Dragoon Regiment"" . 
?war a dbpedia:Event ; dbpedia:participatedBy ?regiment . 
?television_show a dbpedia:TelevisionShow . 
?commander rdfs:label ?commander_name . 
?war rdfs:label ?war . 
?television_show rdfs:label ?television_show . 
",2,5,3,2,1,3,3,71,0,0,42,0,0.0,0
756,10,train,Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager_name ?team_name
WHERE {
  ?manager a dbpedia:Person ; dbpedia:role dbpedia:sports_team_manager .
  ?team a dbpedia:SportTeam ; dbpedia:name ?team_name .
  ?manager rdfs:label ?manager_name .
  ?team rdfs:label ?team_name
  FILTER (lang(?manager_name) = 'en' )
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,40,train,Give me the predecessor of Myat Hpone Pyo and spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for predecessor of Myat Hpone Pyo
SELECT ?predecessor_name WHERE {
  ?myat_hpone_pyo a dbpedia:OfficeHolder; dbpedia:officePrecededBy ?predecessor_name .
}

# Query for spouse of Saw Shwe Khet
SELECT ?spouse_name WHERE {
  ?saw_shwe_khet a dbpedia:Person ;
                  dbpedia:hasSpouse ?spouse_name .
}

# Query for child of Saw Shwe Khet and parent of Minye Kyawswa
SELECT ?parent_name WHERE {
  ?saw_shwe_khet a dbpedia:Person ;
                  dbpedia:hasChild ?child_name .
  ?child_name a dbpedia:Person ;
                 dbpedia:parent ?parent_name .
  ?parent_name rdfs:label ?parent_name .
}

# Combining the results to trace lineage
CONSTRUCT {
  ?lineage [a dbpedia:Family; dbpedia:member ?child_name; dbpedia:parent ?grandparent_name]
} WHERE {
  ?child_name a dbpedia:Person ;
               dbpedia:hasChild ?grandchild_name .
  ?grandchild_name a dbpedia:Person ;
                    dbpedia:parent ?greatGrandparent_name .
  OPTIONAL { ?greatGrandparent_name rdfs:label ?greatGrandparent_name }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
871,22,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_name WHERE {
  ?child a dbpedia:Person ;
   dbpedia:hasParent ?parent ;
   rdfs:label ""Victor Stanley""@en;
   dbpedia:birthDate ""1877-07-14""^^xsd:date
  .
  ?parent a dbpedia:Person ;
   rdfs:label ?father_name
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
